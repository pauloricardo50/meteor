@import '{}/node_modules/normalize-scss/sass/normalize';
@include normalize();

@import './variables.scss';
@import './core-components';

html {
  min-height: 100%;
}

// Make sure everything expands properly to take the full size of the browser
body,
html,
#react-root {
}

body {
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 16px;
  line-height: 1.5em;
  font-weight: 300;
  color: $body-text;
  background-color: $background-color;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: $title-text;
  line-height: 1.1em;
  font-family: 'Source Sans Pro', sans-serif;
  font-weight: 400;
  margin: 0.67em 0;
}

h1 {
  font-size: 2em;
}

h2 {
  font-size: 1.625em;
}

h3 {
  font-size: 1.375em;
}

h4 {
  font-size: 1.125em;
}

h5 {
  font-size: 0.83em;
}

h6 {
  font-size: 0.75em;
}

@media (min-width: $med) {
  h1 {
    font-size: 2.5em;
  }

  h2 {
    font-size: 2em;
  }

  h3 {
    font-size: 1.5em;
  }
}

@media (min-width: $wide) {
  h1 {
    font-size: 3em;
  }

  h2 {
    font-size: 2.25em;
  }

  h3 {
    font-size: 1.75em;
  }
}

// Nicer styling for a tags, removes horrible blue color
// And avoid it if this is a button
a:not([role='button']) {
  cursor: pointer;
  color: inherit;
  // text-decoration: none;
  &.color {
    transition: color 300ms $bezier;
    color: $primary;
    &:hover {
      color: $success;
    }
  }
  &:hover {
    color: inherit;
  }
}

hr {
  border: none;
  height: 1px;
  background-color: $border-grey;
}

// White backgrounds with shadows to put things on
.card1 {
  background: #ffffff;
  box-shadow: 0 2px 60px 5px rgba(0, 0, 0, 0.05);
  border-radius: 16px;
}

.card1 .card-top {
  padding: 16px;
}

.card1 .card-bottom {
  border-top: 1px solid $border-grey;
  background-color: #fafafa;
  padding: 16px;
  // width: 100%;
  border-bottom-left-radius: 16px;
  border-bottom-right-radius: 16px;
  flex-grow: 1;
}

// Pretty text effect for tooltips, shows a gradient underline on the text
.tooltip-overlay {
  position: relative;
  cursor: help;
  background-image: linear-gradient(120deg, $primary 0%, $success 100%);
  background-repeat: no-repeat;
  background-size: 100% 0.15em;
  background-position: 0 100%;
  transition: background-size 0.2s ease-in, color 0.2s ease-in;
  transform: scale(1);
  border-radius: 4px;
  padding: 0 1px;
  &:hover {
    color: white;
    background-size: 100% 100%;
    transform: scale(1.02);
  }
}

// Classes to color text according to our theme colors
.active:not(button),
.primary {
  color: $primary;
}

.success {
  color: $success;
}

.error {
  color: $error;
}

.warning {
  color: $warning;
}

// A pretty heart-beat animation on anything
@keyframes heartBeat {
  0% {
    transform: scale(1);
  }
  25% {
    transform: scale(0.97);
  }
  35% {
    transform: scale(0.9);
  }
  45% {
    transform: scale(1.1);
  }
  55% {
    transform: scale(0.9);
  }
  65% {
    transform: scale(1.1);
  }
  75% {
    transform: scale(1.03);
  }
  100% {
    transform: scale(1);
  }
}

.heart-beat {
  animation-name: heartBeat;
  animation-iteration-count: infinite;
  animation-duration: 2s;
}

// Old white background masks, to be replaced with .card
.mask1,
.mask2,
.mask3 {
  background-color: #fff;
  padding: 16px;
  border-radius: 4px;
}

.mask1.primary-border,
.mask2.primary-border,
.mask3.primary-border,
.mask1.hover-primary:hover,
.mask2.hover-primary:hover,
.mask3.hover-primary:hover {
  border: 1px solid $primary;
}

.mask1.error-border,
.mask2.error-border,
.mask3.error-border {
  border: 1px solid $error;
}

.mask1.warning-border,
.mask2.warning-border,
.mask3.warning-border {
  border: 1px solid $warning;
}

.mask1.success-border,
.mask2.success-border,
.mask3.success-border {
  border: 1px solid $success;
}

.mask1 {
  box-shadow: 0 0 4px 0 rgba(33, 37, 41, 0.16);
}

.mask1 > h1:first-child {
  margin: 0;
}

.mask1 .primary-top {
  display: inline-block;
  width: calc(100% + 32px);
  min-height: 300px;
  color: #fff;
  background-color: $primary;
  padding: 16px;
  margin: 0;
  margin-left: -16px;
  margin-top: -16px;
  margin-bottom: 48px;
}

.mask1 .primary-top h1,
.mask1 .primary-top h2,
.mask1 .primary-top h3,
.mask1 .primary-top h4,
.mask1 .primary-top p,
.mask1 .primary-top div {
  color: #fff;
  padding: 0;
}

.mask2 {
  box-shadow: 0px 20px 20px 0px rgba(0, 0, 0, 0.08);
}

.mask3 {
  box-shadow: 0px 40px 40px 0px rgba(0, 0, 0, 0.16);
}

// A .description <p /> is a nice styled paragraph optimized for reading
.description {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.25em;
  line-height: 1.6em;
  max-width: 600px;
  text-align: justify;
}

.description > p,
.description > h4 {
  max-width: 600px;
  text-align: justify;
}

// Flex helper classes
.flex,
.flex-row,
.flex-col {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.flex.center,
.flex-row.center,
.flex-col.center {
  align-items: center;
  justify-content: center;
}

.flex-col {
  flex-direction: column;
}

// Helper classes to change opacity on things
.normal {
  opacity: 1;
}

.secondary {
  opacity: 0.5;
}

// This also adds the right cursor on disabled elements
.disabled {
  opacity: 0.25;
  cursor: not-allowed;
}

// Change it from the material-ui default inline-flex, which makes them take full width
.mui-text-input,
.mui-select,
.mui-radio-group {
  display: flex;
}

// To display choices with proper hover effects
.choice {
  border-radius: 4px;
  border: solid 1px $grey1;
  display: flex;
  margin-bottom: 16px;
  box-sizing: content-box;
  padding: 16px;
}

.choice:hover {
  border: solid 1px $primary;
  cursor: pointer;
}

.choice.chosen {
  border: solid 2px $primary;
}

.choice.chosen.disabled {
  border: solid 2px $success;
}

.choice.disabled {
  cursor: default !important;
}

.bert-alert.success {
  background: $success;
}
.bert-alert.info {
  background: $primary;
}
.bert-alert.warning {
  background: $warning;
}
.bert-alert.danger {
  background: $error;
}

.bert-content h5,
.bert-content p {
  color: white !important;
}

.bert {
  color: white !important;
}
