{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"./Uploader","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Uploader"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/UploaderArray/UploaderArray.jsx","filenameRelative":"imports/core/components/UploaderArray/UploaderArray.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/UploaderArray/UploaderArray.jsx.map","sourceFileName":"imports/core/components/UploaderArray/UploaderArray.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"UploaderArray"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar Uploader = void 0;\nmodule.watch(require(\"./Uploader\"), {\n  \"default\": function () {\n    function _default(v) {\n      Uploader = v;\n    }\n\n    return _default;\n  }()\n}, 2);\n\n// Support for custom uploadX files\nvar getTitle = function () {\n  function getTitle(id, doc) {\n    if (doc.logic) {\n      var closingSteps = doc.logic.closingSteps;\n\n      if (!closingSteps) {\n        return undefined;\n      }\n\n      return id.indexOf('upload') >= 0 ? closingSteps.find(function (s) {\n        return s.id === id;\n      }) && closingSteps.find(function (s) {\n        return s.id === id;\n      }).title || id : undefined;\n    }\n\n    return undefined;\n  }\n\n  return getTitle;\n}();\n\nvar UploaderArray = function () {\n  function UploaderArray(_ref) {\n    var fileArray = _ref.fileArray,\n        doc = _ref.doc,\n        disabled = _ref.disabled,\n        collection = _ref.collection;\n    var pushFunc = void 0;\n    var updateFunc = void 0;\n\n    if (collection === 'loans') {\n      pushFunc = 'pushLoanValue';\n      updateFunc = 'updateLoan';\n    } else if (collection === 'borrowers') {\n      pushFunc = 'pushBorrowerValue';\n      updateFunc = 'updateBorrower';\n    } else if (collection === 'properties') {\n      pushFunc = 'pushPropertyValue';\n      updateFunc = 'updateProperty';\n    }\n\n    return React.createElement(\n      \"div\",\n      {\n        className: \"flex-col center\"\n      },\n      fileArray ? fileArray.map(function (file) {\n        return file.condition !== false && React.createElement(Uploader, {\n          fileMeta: (0, _extends3.default)({}, file, {\n            title: getTitle(file.id, doc)\n          }),\n          key: doc._id + file.id,\n          currentValue: doc.files[file.id],\n          docId: doc._id,\n          pushFunc: pushFunc,\n          updateFunc: updateFunc,\n          disabled: disabled,\n          collection: collection\n        });\n      }) : // Show all existing files for this doc\n      Object.keys(doc.files).map(function (fileId) {\n        return React.createElement(Uploader, {\n          fileMeta: {\n            id: fileId,\n            title: getTitle(fileId, doc)\n          },\n          collection: collection,\n          key: fileId,\n          docId: doc._id,\n          currentValue: doc.files[fileId],\n          disabled: disabled\n        });\n      })\n    );\n  }\n\n  return UploaderArray;\n}();\n\nUploaderArray.propTypes = {\n  fileArray: PropTypes.arrayOf(PropTypes.object),\n  doc: PropTypes.objectOf(PropTypes.any).isRequired,\n  disabled: PropTypes.bool,\n  collection: PropTypes.string.isRequired\n};\nUploaderArray.defaultProps = {\n  disabled: false,\n  fileArray: undefined\n};\nmodule.exportDefault(UploaderArray);","map":{"version":3,"sources":["imports/core/components/UploaderArray/UploaderArray.jsx"],"names":["React","module","watch","require","v","PropTypes","Uploader","getTitle","id","doc","logic","closingSteps","undefined","indexOf","find","s","title","UploaderArray","fileArray","disabled","collection","pushFunc","updateFunc","map","file","condition","_id","files","Object","keys","fileId","propTypes","arrayOf","object","objectOf","any","isRequired","bool","string","defaultProps","exportDefault"],"mappings":"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","file":"imports/core/components/UploaderArray/UploaderArray.jsx.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Uploader from './Uploader';\n\n// Support for custom uploadX files\nconst getTitle = (id, doc) => {\n  if (doc.logic) {\n    const { closingSteps } = doc.logic;\n    if (!closingSteps) {\n      return undefined;\n    }\n    return id.indexOf('upload') >= 0\n      ? (closingSteps.find(s => s.id === id) &&\n          closingSteps.find(s => s.id === id).title) ||\n          id\n      : undefined;\n  }\n\n  return undefined;\n};\n\nconst UploaderArray = ({ fileArray, doc, disabled, collection }) => {\n  let pushFunc;\n  let updateFunc;\n\n  if (collection === 'loans') {\n    pushFunc = 'pushLoanValue';\n    updateFunc = 'updateLoan';\n  } else if (collection === 'borrowers') {\n    pushFunc = 'pushBorrowerValue';\n    updateFunc = 'updateBorrower';\n  } else if (collection === 'properties') {\n    pushFunc = 'pushPropertyValue';\n    updateFunc = 'updateProperty';\n  }\n\n  return (\n    <div className=\"flex-col center\">\n      {fileArray\n        ? fileArray.map(file =>\n          file.condition !== false && (\n            <Uploader\n              fileMeta={{ ...file, title: getTitle(file.id, doc) }}\n              key={doc._id + file.id}\n              currentValue={doc.files[file.id]}\n              docId={doc._id}\n              pushFunc={pushFunc}\n              updateFunc={updateFunc}\n              disabled={disabled}\n              collection={collection}\n            />\n          ))\n        : // Show all existing files for this doc\n        Object.keys(doc.files).map(fileId => (\n          <Uploader\n            fileMeta={{ id: fileId, title: getTitle(fileId, doc) }}\n            collection={collection}\n            key={fileId}\n            docId={doc._id}\n            currentValue={doc.files[fileId]}\n            disabled={disabled}\n          />\n        ))}\n    </div>\n  );\n};\n\nUploaderArray.propTypes = {\n  fileArray: PropTypes.arrayOf(PropTypes.object),\n  doc: PropTypes.objectOf(PropTypes.any).isRequired,\n  disabled: PropTypes.bool,\n  collection: PropTypes.string.isRequired,\n};\n\nUploaderArray.defaultProps = {\n  disabled: false,\n  fileArray: undefined,\n};\n\nexport default UploaderArray;\n"]},"hash":"5237171d8aabfb1cef8f1972d04a4df635c0b027"}
