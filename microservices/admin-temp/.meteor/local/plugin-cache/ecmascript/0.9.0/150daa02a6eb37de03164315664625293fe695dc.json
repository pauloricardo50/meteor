{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../api/properties/PropertyService","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropertyService"}]},{"source":"../api/properties/propertyConstants","imported":["PROPERTY_STATUS","USAGE_TYPE","PROPERTY_STYLE","VOLUME_NORM"],"specifiers":[{"kind":"named","imported":"PROPERTY_STATUS","local":"PROPERTY_STATUS"},{"kind":"named","imported":"USAGE_TYPE","local":"USAGE_TYPE"},{"kind":"named","imported":"PROPERTY_STYLE","local":"PROPERTY_STYLE"},{"kind":"named","imported":"VOLUME_NORM","local":"VOLUME_NORM"}]},{"source":"../api/files/files","imported":["fakeFile"],"specifiers":[{"kind":"named","imported":"fakeFile","local":"fakeFile"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/fixtures/properties.js","filenameRelative":"imports/core/fixtures/properties.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/fixtures/properties.js.map","sourceFileName":"imports/core/fixtures/properties.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"properties"},"ignored":false,"code":"\"use strict\";\n\nvar PropertyService = void 0;\nmodule.watch(require(\"../api/properties/PropertyService\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropertyService = v;\n    }\n\n    return _default;\n  }()\n}, 0);\n\nvar _PROPERTY_STATUS = void 0,\n    _USAGE_TYPE = void 0,\n    _PROPERTY_STYLE = void 0,\n    _VOLUME_NORM = void 0;\n\nmodule.watch(require(\"../api/properties/propertyConstants\"), {\n  PROPERTY_STATUS: function () {\n    function PROPERTY_STATUS(v) {\n      _PROPERTY_STATUS = v;\n    }\n\n    return PROPERTY_STATUS;\n  }(),\n  USAGE_TYPE: function () {\n    function USAGE_TYPE(v) {\n      _USAGE_TYPE = v;\n    }\n\n    return USAGE_TYPE;\n  }(),\n  PROPERTY_STYLE: function () {\n    function PROPERTY_STYLE(v) {\n      _PROPERTY_STYLE = v;\n    }\n\n    return PROPERTY_STYLE;\n  }(),\n  VOLUME_NORM: function () {\n    function VOLUME_NORM(v) {\n      _VOLUME_NORM = v;\n    }\n\n    return VOLUME_NORM;\n  }()\n}, 1);\n\nvar _fakeFile = void 0;\n\nmodule.watch(require(\"../api/files/files\"), {\n  fakeFile: function () {\n    function fakeFile(v) {\n      _fakeFile = v;\n    }\n\n    return fakeFile;\n  }()\n}, 2);\nvar statuses = Object.values(_PROPERTY_STATUS);\nvar usageTypes = Object.values(_USAGE_TYPE);\nvar styles = Object.values(_PROPERTY_STYLE);\nvar volumeNorms = Object.values(_VOLUME_NORM);\n\nvar getRandomValueInRange = function () {\n  function getRandomValueInRange(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  return getRandomValueInRange;\n}();\n\nvar getRandomValueInArray = function () {\n  function getRandomValueInArray(array) {\n    return array[Math.floor(Math.random() * array.length)];\n  }\n\n  return getRandomValueInArray;\n}();\n\nvar createFakeProperties = function () {\n  function createFakeProperties(userId) {\n    var object = {\n      status: getRandomValueInArray(statuses),\n      value: getRandomValueInRange(500000, 3000000),\n      address1: \"Rue du Succ\\xE8s \" + Math.floor(getRandomValueInRange(1, 500)),\n      propertyWork: 40000,\n      zipCode: getRandomValueInRange(1000, 4000),\n      city: 'Lausanne',\n      usageType: getRandomValueInArray(usageTypes),\n      style: getRandomValueInArray(styles),\n      futureOwner: 0,\n      constructionYear: 2010,\n      landArea: 300,\n      insideArea: 140,\n      volume: 1500,\n      volumeNorm: getRandomValueInArray(volumeNorms),\n      roomCount: 5,\n      bathroomCount: 2,\n      toiletCount: 0,\n      parking: {\n        box: 0,\n        inside: 1,\n        outside: 2\n      },\n      minergie: true,\n      isCoproperty: true,\n      copropertyPercentage: 400,\n      cityPlacementQuality: 2,\n      buildingPlacementQuality: 3,\n      buildingQuality: 1,\n      flatQuality: 2,\n      materialsQuality: 2,\n      files: {\n        plans: [_fakeFile],\n        cubage: [_fakeFile],\n        pictures: [_fakeFile],\n        landRegisterExtract: [_fakeFile]\n      }\n    };\n    return PropertyService.insert({\n      property: object,\n      userId: userId\n    });\n  }\n\n  return createFakeProperties;\n}();\n\nmodule.exportDefault(createFakeProperties);","map":{"version":3,"sources":["imports/core/fixtures/properties.js"],"names":["PropertyService","module","watch","require","v","PROPERTY_STATUS","USAGE_TYPE","PROPERTY_STYLE","VOLUME_NORM","fakeFile","statuses","Object","values","usageTypes","styles","volumeNorms","getRandomValueInRange","min","max","Math","random","getRandomValueInArray","array","floor","length","createFakeProperties","userId","object","status","value","address1","propertyWork","zipCode","city","usageType","style","futureOwner","constructionYear","landArea","insideArea","volume","volumeNorm","roomCount","bathroomCount","toiletCount","parking","box","inside","outside","minergie","isCoproperty","copropertyPercentage","cityPlacementQuality","buildingPlacementQuality","buildingQuality","flatQuality","materialsQuality","files","plans","cubage","pictures","landRegisterExtract","insert","property","exportDefault"],"mappings":"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","file":"imports/core/fixtures/properties.js.map","sourcesContent":["import PropertyService from 'core/api/properties/PropertyService';\nimport {\n  PROPERTY_STATUS,\n  USAGE_TYPE,\n  PROPERTY_STYLE,\n  VOLUME_NORM,\n} from 'core/api/properties/propertyConstants';\nimport { fakeFile } from 'core/api/files/files';\n\nconst statuses = Object.values(PROPERTY_STATUS);\nconst usageTypes = Object.values(USAGE_TYPE);\nconst styles = Object.values(PROPERTY_STYLE);\nconst volumeNorms = Object.values(VOLUME_NORM);\n\nconst getRandomValueInRange = (min, max) => Math.random() * (max - min) + min;\nconst getRandomValueInArray = array =>\n  array[Math.floor(Math.random() * array.length)];\n\nconst createFakeProperties = (userId) => {\n  const object = {\n    status: getRandomValueInArray(statuses),\n    value: getRandomValueInRange(500000, 3000000),\n    address1: `Rue du Succès ${Math.floor(getRandomValueInRange(1, 500))}`,\n    propertyWork: 40000,\n    zipCode: getRandomValueInRange(1000, 4000),\n    city: 'Lausanne',\n    usageType: getRandomValueInArray(usageTypes),\n    style: getRandomValueInArray(styles),\n    futureOwner: 0,\n    constructionYear: 2010,\n    landArea: 300,\n    insideArea: 140,\n    volume: 1500,\n    volumeNorm: getRandomValueInArray(volumeNorms),\n    roomCount: 5,\n    bathroomCount: 2,\n    toiletCount: 0,\n    parking: {\n      box: 0,\n      inside: 1,\n      outside: 2,\n    },\n    minergie: true,\n    isCoproperty: true,\n    copropertyPercentage: 400,\n    cityPlacementQuality: 2,\n    buildingPlacementQuality: 3,\n    buildingQuality: 1,\n    flatQuality: 2,\n    materialsQuality: 2,\n    files: {\n      plans: [fakeFile],\n      cubage: [fakeFile],\n      pictures: [fakeFile],\n      landRegisterExtract: [fakeFile],\n    },\n  };\n\n  return PropertyService.insert({ property: object, userId });\n};\n\nexport default createFakeProperties;\n"]},"hash":"150daa02a6eb37de03164315664625293fe695dc"}
