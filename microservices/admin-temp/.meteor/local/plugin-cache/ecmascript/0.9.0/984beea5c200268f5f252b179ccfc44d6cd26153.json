{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"./lib/createGraph.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"createGraph"}]},{"source":"./lib/prepareForProcess.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"prepareForProcess"}]},{"source":"./hypernova/hypernova.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"hypernova"}]},{"source":"./query.base","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Base"}]}],"exports":{"exported":["Query"],"specifiers":[{"kind":"local","local":"Query","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/query.server.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/query.server.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/query.server.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/query.server.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"query.server"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n    \"default\": function () {\n        return Query;\n    }\n});\nvar createGraph = void 0;\nmodule.watch(require(\"./lib/createGraph.js\"), {\n    \"default\": function (v) {\n        createGraph = v;\n    }\n}, 0);\nvar prepareForProcess = void 0;\nmodule.watch(require(\"./lib/prepareForProcess.js\"), {\n    \"default\": function (v) {\n        prepareForProcess = v;\n    }\n}, 1);\nvar hypernova = void 0;\nmodule.watch(require(\"./hypernova/hypernova.js\"), {\n    \"default\": function (v) {\n        hypernova = v;\n    }\n}, 2);\nvar Base = void 0;\nmodule.watch(require(\"./query.base\"), {\n    \"default\": function (v) {\n        Base = v;\n    }\n}, 3);\n\nvar Query = function (_Base) {\n    (0, _inherits3.default)(Query, _Base);\n\n    function Query() {\n        (0, _classCallCheck3.default)(this, Query);\n        return (0, _possibleConstructorReturn3.default)(this, _Base.apply(this, arguments));\n    }\n\n    /**\n     * Retrieves the data.\n     * @param context\n     * @returns {*}\n     */Query.prototype.fetch = function () {\n        function fetch() {\n            var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            var node = createGraph(this.collection, prepareForProcess(this.body, this.params));\n            return hypernova(node, context.userId, {\n                params: this.params\n            });\n        }\n\n        return fetch;\n    }(); /**\n          * @param args\n          * @returns {*}\n          */\n\n    Query.prototype.fetchOne = function () {\n        function fetchOne() {\n            return _.first(this.fetch.apply(this, arguments));\n        }\n\n        return fetchOne;\n    }(); /**\n          * Gets the count of matching elements.\n          * @returns {integer}\n          */\n\n    Query.prototype.getCount = function () {\n        function getCount() {\n            return this.collection.find(this.body.$filters || {}, {}).count();\n        }\n\n        return getCount;\n    }();\n\n    return Query;\n}(Base);","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/query.server.js"],"names":["module","export","Query","createGraph","watch","require","v","prepareForProcess","hypernova","Base","fetch","context","node","collection","body","params","userId","fetchOne","_","first","getCount","find","$filters","count"],"mappings":";;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAAC,eAAQ;AAAA,eAAIC,KAAJ;AAAA;AAAT,CAAd;AAAmC,IAAIC,oBAAJ;AAAgBH,OAAOI,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAAA,yBAASC,CAAT,EAAW;AAACH,sBAAYG,CAAZ;AAAc;AAA1B,CAA7C,EAAyE,CAAzE;AAA4E,IAAIC,0BAAJ;AAAsBP,OAAOI,KAAP,CAAaC,QAAQ,4BAAR,CAAb,EAAmD;AAAA,yBAASC,CAAT,EAAW;AAACC,4BAAkBD,CAAlB;AAAoB;AAAhC,CAAnD,EAAqF,CAArF;AAAwF,IAAIE,kBAAJ;AAAcR,OAAOI,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAAA,yBAASC,CAAT,EAAW;AAACE,oBAAUF,CAAV;AAAY;AAAxB,CAAjD,EAA2E,CAA3E;AAA8E,IAAIG,aAAJ;AAAST,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAAA,yBAASC,CAAT,EAAW;AAACG,eAAKH,CAAL;AAAO;AAAnB,CAArC,EAA0D,CAA1D;;IAK7TJ,K;;;;;;;;AACjB;;;;uBAKAQ,K;yBAAoB;AAAA,gBAAdC,OAAc,uEAAJ,EAAI;AAChB,gBAAMC,OAAOT,YACT,KAAKU,UADI,EAETN,kBAAkB,KAAKO,IAAvB,EAA6B,KAAKC,MAAlC,CAFS,CAAb;AAKA,mBAAOP,UAAUI,IAAV,EAAgBD,QAAQK,MAAxB,EAAgC;AAACD,wBAAQ,KAAKA;AAAd,aAAhC,CAAP;AACH;;;SAED;;;;;oBAIAE,Q;4BAAkB;AACd,mBAAOC,EAAEC,KAAF,CAAQ,KAAKT,KAAL,uBAAR,CAAP;AACH;;;SAED;;;;;oBAIAU,Q;4BAAW;AACP,mBAAO,KAAKP,UAAL,CAAgBQ,IAAhB,CAAqB,KAAKP,IAAL,CAAUQ,QAAV,IAAsB,EAA3C,EAA+C,EAA/C,EAAmDC,KAAnD,EAAP;AACH;;;;;;EA7B8Bd,I","file":"packages/cultofcoders:grapher/lib/query/query.server.js.map","sourcesContent":["import createGraph from './lib/createGraph.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport hypernova from './hypernova/hypernova.js';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Retrieves the data.\n     * @param context\n     * @returns {*}\n     */\n    fetch(context = {}) {\n        const node = createGraph(\n            this.collection,\n            prepareForProcess(this.body, this.params)\n        );\n\n        return hypernova(node, context.userId, {params: this.params});\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @returns {integer}\n     */\n    getCount() {\n        return this.collection.find(this.body.$filters || {}, {}).count();\n    }\n}"]},"hash":"984beea5c200268f5f252b179ccfc44d6cd26153"}
