{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"./migrations.js","imported":["addMigration"],"specifiers":[{"kind":"named","imported":"addMigration","local":"addMigration"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/herteby:denormalize/cacheField.js","filenameRelative":"packages/herteby:denormalize/cacheField.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/herteby:denormalize/cacheField.js.map","sourceFileName":"packages/herteby:denormalize/cacheField.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"cacheField"},"ignored":false,"code":"var _ = void 0;\n\nmodule.watch(require(\"lodash\"), {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 0);\nvar addMigration = void 0;\nmodule.watch(require(\"./migrations.js\"), {\n  addMigration: function (v) {\n    addMigration = v;\n  }\n}, 1);\n\nMongo.Collection.prototype.cacheField = function (options) {\n  check(options, {\n    cacheField: String,\n    fields: [String],\n    transform: Match.Optional(Function),\n    bypassSchema: Match.Optional(Boolean)\n  });\n  var collection = options.bypassSchema && Package['aldeed:collection2'] ? this._collection : this;\n  var cacheField = options.cacheField;\n  var fields = options.fields;\n\n  var topFields = _.uniq(_.map(fields, function (field) {\n    return field.split('.')[0];\n  }));\n\n  var transform = options.transform;\n\n  if (!transform) {\n    transform = function (doc) {\n      return _.compact(_.map(fields, function (field) {\n        return _.get(doc, field);\n      })).join(', ');\n    };\n  }\n\n  if (_.includes(topFields, cacheField.split(/[.:]/)[0])) {\n    throw new Error('watching the cacheField for changes would cause an infinite loop');\n  }\n\n  function insertHook(userid, doc) {\n    var _$set;\n\n    collection.update(doc._id, {\n      $set: (_$set = {}, _$set[cacheField] = transform(_.pick(doc, fields)), _$set)\n    });\n  }\n\n  addMigration(collection, insertHook, options);\n  collection.after.insert(insertHook);\n  collection.after.update(function (userId, doc, changedFields) {\n    if (_.intersection(changedFields, topFields).length) {\n      Meteor.defer(function () {\n        var _$set2;\n\n        collection.update(doc._id, {\n          $set: (_$set2 = {}, _$set2[cacheField] = transform(_.pick(doc, fields)), _$set2)\n        });\n      });\n    }\n  });\n};","map":{"version":3,"sources":["packages/herteby:denormalize/cacheField.js"],"names":["_","module","watch","require","v","addMigration","Mongo","Collection","prototype","cacheField","options","check","String","fields","transform","Match","Optional","Function","bypassSchema","Boolean","collection","Package","_collection","topFields","uniq","map","field","split","doc","compact","get","join","includes","Error","insertHook","userid","update","_id","$set","pick","after","insert","userId","changedFields","intersection","length","Meteor","defer"],"mappings":"AAAA,IAAIA,UAAJ;;AAAMC,OAAOC,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAAA,uBAASC,CAAT,EAAW;AAACJ,QAAEI,CAAF;AAAI;AAAhB,CAA/B,EAAiD,CAAjD;AAAoD,IAAIC,qBAAJ;AAAiBJ,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACE,cAAD,YAAcD,CAAd,EAAgB;AAACC,mBAAaD,CAAb;AAAe;AAAhC,CAAxC,EAA0E,CAA1E;;AAG3EE,MAAMC,UAAN,CAAiBC,SAAjB,CAA2BC,UAA3B,GAAwC,UAASC,OAAT,EAAkB;AAExDC,QAAMD,OAAN,EAAe;AACbD,gBAAWG,MADE;AAEbC,YAAO,CAACD,MAAD,CAFM;AAGbE,eAAUC,MAAMC,QAAN,CAAeC,QAAf,CAHG;AAIbC,kBAAaH,MAAMC,QAAN,CAAeG,OAAf;AAJA,GAAf;AAOA,MAAIC,aAAaV,QAAQQ,YAAR,IAAwBG,QAAQ,oBAAR,CAAxB,GAAwD,KAAKC,WAA7D,GAA2E,IAA5F;AACA,MAAIb,aAAaC,QAAQD,UAAzB;AACA,MAAII,SAASH,QAAQG,MAArB;;AACA,MAAIU,YAAYvB,EAAEwB,IAAF,CAAOxB,EAAEyB,GAAF,CAAMZ,MAAN,EAAc;AAAA,WAASa,MAAMC,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAT;AAAA,GAAd,CAAP,CAAhB;;AACA,MAAIb,YAAYJ,QAAQI,SAAxB;;AACA,MAAG,CAACA,SAAJ,EAAe;AACbA,gBAAY,UAASc,GAAT,EAAc;AACxB,aAAO5B,EAAE6B,OAAF,CAAU7B,EAAEyB,GAAF,CAAMZ,MAAN,EAAc;AAAA,eAASb,EAAE8B,GAAF,CAAMF,GAAN,EAAWF,KAAX,CAAT;AAAA,OAAd,CAAV,EAAqDK,IAArD,CAA0D,IAA1D,CAAP;AACD,KAFD;AAGD;;AAED,MAAG/B,EAAEgC,QAAF,CAAWT,SAAX,EAAsBd,WAAWkB,KAAX,CAAiB,MAAjB,EAAyB,CAAzB,CAAtB,CAAH,EAAsD;AACpD,UAAM,IAAIM,KAAJ,CAAU,kEAAV,CAAN;AACD;;AAED,WAASC,UAAT,CAAoBC,MAApB,EAA4BP,GAA5B,EAAgC;AAAA;;AAC9BR,eAAWgB,MAAX,CAAkBR,IAAIS,GAAtB,EAA2B;AAACC,+BAAO7B,UAAP,IAAmBK,UAAUd,EAAEuC,IAAF,CAAOX,GAAP,EAAYf,MAAZ,CAAV,CAAnB;AAAD,KAA3B;AACD;;AAEDR,eAAae,UAAb,EAAyBc,UAAzB,EAAqCxB,OAArC;AAEAU,aAAWoB,KAAX,CAAiBC,MAAjB,CAAwBP,UAAxB;AAEAd,aAAWoB,KAAX,CAAiBJ,MAAjB,CAAwB,UAACM,MAAD,EAASd,GAAT,EAAce,aAAd,EAAgC;AACtD,QAAG3C,EAAE4C,YAAF,CAAeD,aAAf,EAA8BpB,SAA9B,EAAyCsB,MAA5C,EAAmD;AACjDC,aAAOC,KAAP,CAAa,YAAI;AAAA;;AACf3B,mBAAWgB,MAAX,CAAkBR,IAAIS,GAAtB,EAA2B;AAACC,qCAAO7B,UAAP,IAAmBK,UAAUd,EAAEuC,IAAF,CAAOX,GAAP,EAAYf,MAAZ,CAAV,CAAnB;AAAD,SAA3B;AACD,OAFD;AAGD;AACF,GAND;AAOD,CAvCD","file":"packages/herteby:denormalize/cacheField.js.map","sourcesContent":["import _ from 'lodash'\nimport {addMigration} from './migrations.js'\n\nMongo.Collection.prototype.cacheField = function(options) {\n\n  check(options, {\n    cacheField:String,\n    fields:[String],\n    transform:Match.Optional(Function),\n    bypassSchema:Match.Optional(Boolean)\n  })\n\n  let collection = options.bypassSchema && Package['aldeed:collection2'] ? this._collection : this\n  let cacheField = options.cacheField\n  let fields = options.fields\n  let topFields = _.uniq(_.map(fields, field => field.split('.')[0]))\n  let transform = options.transform\n  if(!transform) {\n    transform = function(doc) {\n      return _.compact(_.map(fields, field => _.get(doc, field))).join(', ')\n    }\n  }\n\n  if(_.includes(topFields, cacheField.split(/[.:]/)[0])){\n    throw new Error('watching the cacheField for changes would cause an infinite loop')\n  }\n\n  function insertHook(userid, doc){\n    collection.update(doc._id, {$set:{[cacheField]:transform(_.pick(doc, fields))}})\n  }\n\n  addMigration(collection, insertHook, options)\n\n  collection.after.insert(insertHook)\n\n  collection.after.update((userId, doc, changedFields) => {\n    if(_.intersection(changedFields, topFields).length){\n      Meteor.defer(()=>{\n        collection.update(doc._id, {$set:{[cacheField]:transform(_.pick(doc, fields))}})\n      })\n    }\n  })  \n}\n"]},"hash":"a4d27e23bc0ef9987653d29bd94e904f393e90df"}
