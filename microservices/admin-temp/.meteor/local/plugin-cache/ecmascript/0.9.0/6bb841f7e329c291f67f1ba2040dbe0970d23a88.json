{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-router-dom","imported":["MemoryRouter"],"specifiers":[{"kind":"named","imported":"MemoryRouter","local":"MemoryRouter"}]},{"source":"react-intl","imported":["IntlProvider","intlShape"],"specifiers":[{"kind":"named","imported":"IntlProvider","local":"IntlProvider"},{"kind":"named","imported":"intlShape","local":"intlShape"}]},{"source":"meteor/hwillson:stub-collections","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"StubCollections"}]},{"source":"meteor/xolvio:cleaner","imported":["resetDatabase"],"specifiers":[{"kind":"named","imported":"resetDatabase","local":"resetDatabase"}]},{"source":"../localization","imported":["getUserLocale","getFormats"],"specifiers":[{"kind":"named","imported":"getUserLocale","local":"getUserLocale"},{"kind":"named","imported":"getFormats","local":"getFormats"}]},{"source":"../../lang/fr.json","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"messagesFR"}]},{"source":"../../api/factories","imported":[],"specifiers":[]},{"source":"../../api/loans/loans","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loans"}]},{"source":"../../api/borrowers/borrowers","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Borrowers"}]},{"source":"../../api/offers/offers","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Offers"}]},{"source":"../../api/adminActions/adminActions","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AdminActions"}]},{"source":"../../api/comparators/comparators","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Comparators"}]},{"source":"../../api/properties/properties","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Properties"}]},{"source":"./enzyme","imported":["mount"],"specifiers":[{"kind":"named","imported":"mount","local":"mount"}]}],"exports":{"exported":["getMountedComponent","stubCollections"],"specifiers":[{"kind":"local","local":"getMountedComponent","exported":"getMountedComponent"},{"kind":"local","local":"stubCollections","exported":"stubCollections"}]}}},"options":{"filename":"imports/core/utils/testHelpers/testHelpers.js","filenameRelative":"imports/core/utils/testHelpers/testHelpers.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/utils/testHelpers/testHelpers.js.map","sourceFileName":"imports/core/utils/testHelpers/testHelpers.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"testHelpers"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.export({\n  getMountedComponent: function () {\n    function getMountedComponent() {\n      return _getMountedComponent;\n    }\n\n    return getMountedComponent;\n  }(),\n  stubCollections: function () {\n    function stubCollections() {\n      return _stubCollections;\n    }\n\n    return stubCollections;\n  }()\n});\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function () {\n    function Meteor(v) {\n      _Meteor = v;\n    }\n\n    return Meteor;\n  }()\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 2);\n\nvar _MemoryRouter = void 0;\n\nmodule.watch(require(\"react-router-dom\"), {\n  MemoryRouter: function () {\n    function MemoryRouter(v) {\n      _MemoryRouter = v;\n    }\n\n    return MemoryRouter;\n  }()\n}, 3);\n\nvar _IntlProvider = void 0,\n    _intlShape = void 0;\n\nmodule.watch(require(\"react-intl\"), {\n  IntlProvider: function () {\n    function IntlProvider(v) {\n      _IntlProvider = v;\n    }\n\n    return IntlProvider;\n  }(),\n  intlShape: function () {\n    function intlShape(v) {\n      _intlShape = v;\n    }\n\n    return intlShape;\n  }()\n}, 4);\nvar StubCollections = void 0;\nmodule.watch(require(\"meteor/hwillson:stub-collections\"), {\n  \"default\": function () {\n    function _default(v) {\n      StubCollections = v;\n    }\n\n    return _default;\n  }()\n}, 5);\n\nvar _resetDatabase = void 0;\n\nmodule.watch(require(\"meteor/xolvio:cleaner\"), {\n  resetDatabase: function () {\n    function resetDatabase(v) {\n      _resetDatabase = v;\n    }\n\n    return resetDatabase;\n  }()\n}, 6);\n\nvar _getUserLocale = void 0,\n    _getFormats = void 0;\n\nmodule.watch(require(\"../localization\"), {\n  getUserLocale: function () {\n    function getUserLocale(v) {\n      _getUserLocale = v;\n    }\n\n    return getUserLocale;\n  }(),\n  getFormats: function () {\n    function getFormats(v) {\n      _getFormats = v;\n    }\n\n    return getFormats;\n  }()\n}, 7);\nvar messagesFR = void 0;\nmodule.watch(require(\"../../lang/fr.json\"), {\n  \"default\": function () {\n    function _default(v) {\n      messagesFR = v;\n    }\n\n    return _default;\n  }()\n}, 8);\nexports.getMountedComponent = _getMountedComponent;\nmodule.watch(require(\"../../api/factories\"));\nvar Loans = void 0;\nmodule.watch(require(\"../../api/loans/loans\"), {\n  \"default\": function () {\n    function _default(v) {\n      Loans = v;\n    }\n\n    return _default;\n  }()\n}, 9);\nvar Borrowers = void 0;\nmodule.watch(require(\"../../api/borrowers/borrowers\"), {\n  \"default\": function () {\n    function _default(v) {\n      Borrowers = v;\n    }\n\n    return _default;\n  }()\n}, 10);\nvar Offers = void 0;\nmodule.watch(require(\"../../api/offers/offers\"), {\n  \"default\": function () {\n    function _default(v) {\n      Offers = v;\n    }\n\n    return _default;\n  }()\n}, 11);\nvar AdminActions = void 0;\nmodule.watch(require(\"../../api/adminActions/adminActions\"), {\n  \"default\": function () {\n    function _default(v) {\n      AdminActions = v;\n    }\n\n    return _default;\n  }()\n}, 12);\nvar Comparators = void 0;\nmodule.watch(require(\"../../api/comparators/comparators\"), {\n  \"default\": function () {\n    function _default(v) {\n      Comparators = v;\n    }\n\n    return _default;\n  }()\n}, 13);\nvar Properties = void 0;\nmodule.watch(require(\"../../api/properties/properties\"), {\n  \"default\": function () {\n    function _default(v) {\n      Properties = v;\n    }\n\n    return _default;\n  }()\n}, 14);\n\nvar _mount = void 0;\n\nmodule.watch(require(\"./enzyme\"), {\n  mount: function () {\n    function mount(v) {\n      _mount = v;\n    }\n\n    return mount;\n  }()\n}, 15);\n\n// Mounts a component for testing, and wraps it around everything it needs\nvar customMount = function () {\n  function customMount(_ref) {\n    var Component = _ref.Component,\n        props = _ref.props,\n        withRouter = _ref.withRouter,\n        withStore = _ref.withStore;\n    var intlProvider = new _IntlProvider({\n      locale: _getUserLocale(),\n      messages: messagesFR,\n      formats: _getFormats(),\n      defaultLocale: 'fr'\n    }, {});\n\n    var _intlProvider$getChil = intlProvider.getChildContext(),\n        intl = _intlProvider$getChil.intl;\n\n    var testComponent = React.createElement(Component, props);\n\n    if (withRouter) {\n      testComponent = React.createElement(\n        _MemoryRouter,\n        null,\n        React.cloneElement(testComponent, {\n          history: {\n            location: {\n              pathname: ''\n            }\n          }\n        })\n      );\n    }\n\n    if (withStore) {\n      var configureStore = require('redux-mock-store');\n\n      var _require = require('react-redux'),\n          Provider = _require.Provider;\n\n      var mockStore = configureStore();\n      var initialState = {\n        stepper: {}\n      };\n      var store = mockStore(initialState);\n      testComponent = React.createElement(\n        Provider,\n        {\n          store: store\n        },\n        testComponent\n      );\n    }\n\n    return _mount(testComponent, {\n      context: {\n        intl: intl\n      },\n      childContextTypes: {\n        intl: _intlShape\n      }\n    });\n  }\n\n  return customMount;\n}(); /**\n      * getMountedComponent - Returns a mounted component with all the required\n      * wrappers for testing\n      *\n      * @param {object} Component  A React component\n      * @param {object} props      optional props to be passed into the component\n      * @param {boolean} withRouter Wraps the component with a mocked router if this\n      * component uses any of the react-router-dom components, like Link or NavLink\n      *\n      * @return {object} A mounted component, ready for testing with Enzyme\n      */\n\nvar _getMountedComponent = function () {\n  function _getMountedComponent(_ref2) {\n    var Component = _ref2.Component,\n        props = _ref2.props,\n        withRouter = _ref2.withRouter,\n        withStore = _ref2.withStore;\n\n    if (!_getMountedComponent.mountedComponent) {\n      _getMountedComponent.mountedComponent = customMount({\n        Component: Component,\n        props: props,\n        withRouter: withRouter,\n        withStore: withStore\n      });\n    }\n\n    return _getMountedComponent.mountedComponent;\n  }\n\n  return _getMountedComponent;\n}(); /**\n      * Unknown - Resets the component, to be called in beforeEach hooks\n      *\n      * @return {type} undefined\n      */\n\n_getMountedComponent.reset = function () {\n  var useStubs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  _getMountedComponent.mountedComponent = undefined;\n\n  if (useStubs) {\n    StubCollections.restore();\n    StubCollections.stub([Loans, Borrowers, Offers, _Meteor.users]);\n  }\n}; /**\n    * stubCollections - Stubs collections, for tests using Factory package\n    * on the client, no frills attached\n    *\n    * @return {type} undefined\n    */\n\nvar _stubCollections = function () {\n  function _stubCollections() {\n    StubCollections.stub([_Meteor.users, Loans, Borrowers, Offers, AdminActions, Properties, Comparators]);\n  }\n\n  return _stubCollections;\n}();\n\n_stubCollections.restore = function () {\n  StubCollections.restore();\n};\n\nif (_Meteor.isTest) {\n  // This is some test initialization, stubbing all the collections here,\n  // avoids all timeouts coming later due to us using this function.\n  console.log('Initializing Tests...');\n\n  _resetDatabase();\n\n  StubCollections.add([_Meteor.users, Loans, Borrowers, Offers, AdminActions, Properties, Comparators]);\n  StubCollections.stub(); // This part is critical, need to stub once beforeAll\n\n  _stubCollections.restore();\n\n  console.log('Ready to roll');\n}","map":{"version":3,"sources":["imports/core/utils/testHelpers/testHelpers.js"],"names":["module","export","getMountedComponent","stubCollections","Meteor","watch","require","v","PropTypes","React","MemoryRouter","IntlProvider","intlShape","StubCollections","resetDatabase","getUserLocale","getFormats","messagesFR","Loans","Borrowers","Offers","AdminActions","Comparators","Properties","mount","customMount","Component","props","withRouter","withStore","intlProvider","locale","messages","formats","defaultLocale","getChildContext","intl","testComponent","cloneElement","history","location","pathname","configureStore","Provider","mockStore","initialState","stepper","store","context","childContextTypes","mountedComponent","reset","useStubs","undefined","restore","stub","users","isTest","console","log","add"],"mappings":"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","file":"imports/core/utils/testHelpers/testHelpers.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { MemoryRouter } from 'react-router-dom';\nimport { IntlProvider, intlShape } from 'react-intl';\nimport StubCollections from 'meteor/hwillson:stub-collections';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { getUserLocale, getFormats } from 'core/utils/localization';\nimport messagesFR from '../../lang/fr.json';\n\n// This has to be imported here for client side tests to use factories\n// Because each test using factories also uses stubCollections\nimport 'core/api/factories';\n\nimport Loans from 'core/api/loans/loans';\nimport Borrowers from 'core/api/borrowers/borrowers';\nimport Offers from 'core/api/offers/offers';\nimport AdminActions from 'core/api/adminActions/adminActions';\nimport Comparators from 'core/api/comparators/comparators';\nimport Properties from 'core/api/properties/properties';\nimport { mount } from './enzyme';\n\n// Mounts a component for testing, and wraps it around everything it needs\nconst customMount = ({ Component, props, withRouter, withStore }) => {\n  const intlProvider = new IntlProvider(\n    {\n      locale: getUserLocale(),\n      messages: messagesFR,\n      formats: getFormats(),\n      defaultLocale: 'fr',\n    },\n    {},\n  );\n  const { intl } = intlProvider.getChildContext();\n\n  let testComponent = <Component {...props} />;\n\n  if (withRouter) {\n    testComponent = (\n      <MemoryRouter>\n        {React.cloneElement(testComponent, {\n          history: { location: { pathname: '' } },\n        })}\n      </MemoryRouter>\n    );\n  }\n\n  if (withStore) {\n    const configureStore = require('redux-mock-store');\n    const { Provider } = require('react-redux');\n    const mockStore = configureStore();\n    const initialState = { stepper: {} };\n    const store = mockStore(initialState);\n    testComponent = <Provider store={store}>{testComponent}</Provider>;\n  }\n\n  return mount(testComponent, {\n    context: { intl },\n    childContextTypes: { intl: intlShape },\n  });\n};\n\n/**\n * getMountedComponent - Returns a mounted component with all the required\n * wrappers for testing\n *\n * @param {object} Component  A React component\n * @param {object} props      optional props to be passed into the component\n * @param {boolean} withRouter Wraps the component with a mocked router if this\n * component uses any of the react-router-dom components, like Link or NavLink\n *\n * @return {object} A mounted component, ready for testing with Enzyme\n */\nexport const getMountedComponent = ({\n  Component,\n  props,\n  withRouter,\n  withStore,\n}) => {\n  if (!getMountedComponent.mountedComponent) {\n    getMountedComponent.mountedComponent = customMount({\n      Component,\n      props,\n      withRouter,\n      withStore,\n    });\n  }\n  return getMountedComponent.mountedComponent;\n};\n\n/**\n * Unknown - Resets the component, to be called in beforeEach hooks\n *\n * @return {type} undefined\n */\ngetMountedComponent.reset = (useStubs = true) => {\n  getMountedComponent.mountedComponent = undefined;\n  if (useStubs) {\n    StubCollections.restore();\n    StubCollections.stub([Loans, Borrowers, Offers, Meteor.users]);\n  }\n};\n\n/**\n * stubCollections - Stubs collections, for tests using Factory package\n * on the client, no frills attached\n *\n * @return {type} undefined\n */\nexport const stubCollections = () => {\n  StubCollections.stub([\n    Meteor.users,\n    Loans,\n    Borrowers,\n    Offers,\n    AdminActions,\n    Properties,\n    Comparators,\n  ]);\n};\n\nstubCollections.restore = () => {\n  StubCollections.restore();\n};\n\nif (Meteor.isTest) {\n  // This is some test initialization, stubbing all the collections here,\n  // avoids all timeouts coming later due to us using this function.\n  console.log('Initializing Tests...');\n  resetDatabase();\n  StubCollections.add([\n    Meteor.users,\n    Loans,\n    Borrowers,\n    Offers,\n    AdminActions,\n    Properties,\n    Comparators,\n  ]);\n  StubCollections.stub(); // This part is critical, need to stub once beforeAll\n  stubCollections.restore();\n\n  console.log('Ready to roll');\n}\n"]},"hash":"6bb841f7e329c291f67f1ba2040dbe0970d23a88"}
