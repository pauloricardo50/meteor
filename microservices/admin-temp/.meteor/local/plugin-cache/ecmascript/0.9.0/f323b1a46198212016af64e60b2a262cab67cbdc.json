{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/aggregate.js","filenameRelative":"packages/cultofcoders:grapher/lib/aggregate.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/aggregate.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/aggregate.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"aggregate"},"ignored":false,"code":"Mongo.Collection.prototype.aggregate = function (pipelines, options) {\n    var coll = this.rawCollection();\n    return Meteor.wrapAsync(coll.aggregate, coll)(pipelines, options);\n};","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/aggregate.js"],"names":["Mongo","Collection","prototype","aggregate","pipelines","options","coll","rawCollection","Meteor","wrapAsync"],"mappings":"AAAAA,MAAMC,UAAN,CAAiBC,SAAjB,CAA2BC,SAA3B,GAAuC,UAASC,SAAT,EAAoBC,OAApB,EAA6B;AAChE,QAAMC,OAAO,KAAKC,aAAL,EAAb;AAEA,WAAOC,OAAOC,SAAP,CAAiBH,KAAKH,SAAtB,EAAiCG,IAAjC,EAAuCF,SAAvC,EAAkDC,OAAlD,CAAP;AACH,CAJD","file":"packages/cultofcoders:grapher/lib/aggregate.js.map","sourcesContent":["Mongo.Collection.prototype.aggregate = function(pipelines, options) {\n    const coll = this.rawCollection();\n\n    return Meteor.wrapAsync(coll.aggregate, coll)(pipelines, options);\n};\n"]},"hash":"f323b1a46198212016af64e60b2a262cab67cbdc"}
