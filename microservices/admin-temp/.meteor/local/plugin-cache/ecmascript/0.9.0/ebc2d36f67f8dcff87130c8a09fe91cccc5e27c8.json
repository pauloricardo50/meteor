{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../api/borrowers/BorrowerService","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"BorrowerService"}]},{"source":"../api/borrowers/borrowerConstants","imported":["RESIDENCY_PERMIT","GENDER","CIVIL_STATUS","OTHER_FORTUNE","OTHER_INCOME","EXPENSES","REAL_ESTATE"],"specifiers":[{"kind":"named","imported":"RESIDENCY_PERMIT","local":"RESIDENCY_PERMIT"},{"kind":"named","imported":"GENDER","local":"GENDER"},{"kind":"named","imported":"CIVIL_STATUS","local":"CIVIL_STATUS"},{"kind":"named","imported":"OTHER_FORTUNE","local":"OTHER_FORTUNE"},{"kind":"named","imported":"OTHER_INCOME","local":"OTHER_INCOME"},{"kind":"named","imported":"EXPENSES","local":"EXPENSES"},{"kind":"named","imported":"REAL_ESTATE","local":"REAL_ESTATE"}]},{"source":"../api/files/files","imported":["fakeFile"],"specifiers":[{"kind":"named","imported":"fakeFile","local":"fakeFile"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/fixtures/borrowers.js","filenameRelative":"imports/core/fixtures/borrowers.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/fixtures/borrowers.js.map","sourceFileName":"imports/core/fixtures/borrowers.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"borrowers"},"ignored":false,"code":"\"use strict\";\n\nvar BorrowerService = void 0;\nmodule.watch(require(\"../api/borrowers/BorrowerService\"), {\n  default: function _default(v) {\n    BorrowerService = v;\n  }\n}, 0);\n\nvar _RESIDENCY_PERMIT = void 0,\n    _GENDER = void 0,\n    _CIVIL_STATUS = void 0,\n    _OTHER_FORTUNE = void 0,\n    _OTHER_INCOME = void 0,\n    _EXPENSES = void 0,\n    _REAL_ESTATE = void 0;\n\nmodule.watch(require(\"../api/borrowers/borrowerConstants\"), {\n  RESIDENCY_PERMIT: function RESIDENCY_PERMIT(v) {\n    _RESIDENCY_PERMIT = v;\n  },\n  GENDER: function GENDER(v) {\n    _GENDER = v;\n  },\n  CIVIL_STATUS: function CIVIL_STATUS(v) {\n    _CIVIL_STATUS = v;\n  },\n  OTHER_FORTUNE: function OTHER_FORTUNE(v) {\n    _OTHER_FORTUNE = v;\n  },\n  OTHER_INCOME: function OTHER_INCOME(v) {\n    _OTHER_INCOME = v;\n  },\n  EXPENSES: function EXPENSES(v) {\n    _EXPENSES = v;\n  },\n  REAL_ESTATE: function REAL_ESTATE(v) {\n    _REAL_ESTATE = v;\n  }\n}, 1);\n\nvar _fakeFile = void 0;\n\nmodule.watch(require(\"../api/files/files\"), {\n  fakeFile: function fakeFile(v) {\n    _fakeFile = v;\n  }\n}, 2);\nvar firstNames = ['Marie', 'Camille', 'Léa', 'Manon', 'Thomas', 'Nicolas', 'Julien'];\nvar lastNames = ['Arsenault', 'Babel', 'Rochat'];\n\nvar generateSecondBorrowerProbabillity = function generateSecondBorrowerProbabillity() {\n  return Math.random() < 0.8;\n};\n\nvar insertFakeBorrower = function insertFakeBorrower(userId) {\n  var borrower = {\n    firstName: firstNames[Math.floor(Math.random() * firstNames.length)],\n    lastName: lastNames[Math.floor(Math.random() * lastNames.length)],\n    gender: 'F',\n    address1: 'Chemin du Mont 3',\n    zipCode: 1400,\n    city: 'Yverdon-les-Bains',\n    citizenships: 'Suisse, Français',\n    age: 35,\n    birthPlace: 'Lausanne',\n    civilStatus: 'SINGLE',\n    childrenCount: 2,\n    company: 'Deloitte',\n    personalBank: 'BCGE',\n    isSwiss: true,\n    isUSPerson: false,\n    worksForOwnCompany: false,\n    sameAddress: true,\n    salary: 300000,\n    bonusExists: true,\n    bonus: {\n      bonus2014: 12300,\n      bonus2015: 15490,\n      bonus2016: 11140,\n      bonus2017: 13780\n    },\n    otherIncome: [{\n      value: 10000,\n      description: 'PENSION'\n    }, {\n      value: 15000,\n      description: 'RENT'\n    }],\n    expenses: [{\n      value: 3000,\n      description: 'LEASING'\n    }, {\n      value: 4000,\n      description: 'PERSONAL_LOAN'\n    }],\n    realEstate: [{\n      value: 433000,\n      loan: 240000,\n      description: 'PRIMARY'\n    }],\n    bankFortune: 300000,\n    insuranceSecondPillar: 120000,\n    insuranceThirdPillar: 50000,\n    files: {\n      identity: [_fakeFile],\n      taxes: [_fakeFile],\n      salaryCertificate: [_fakeFile],\n      bonus: [_fakeFile],\n      otherIncome: [_fakeFile],\n      expenses: [_fakeFile],\n      nonPursuitExtract: [_fakeFile],\n      lastSalaries: [_fakeFile],\n      currentMortgages: [_fakeFile],\n      bankAssetsChange: [_fakeFile],\n      pensionFundYearlyStatement: [_fakeFile],\n      retirementInsurancePlan: [_fakeFile]\n    },\n    logic: {\n      financeEthics: true,\n      hasValidatedFinances: true\n    }\n  };\n  return BorrowerService.insert({\n    borrower: borrower,\n    userId: userId\n  });\n};\n\nvar createFakeBorrowers = function createFakeBorrowers(userId) {\n  var borrowerIds = [insertFakeBorrower(userId)];\n\n  if (generateSecondBorrowerProbabillity()) {\n    borrowerIds.push(insertFakeBorrower(userId));\n  }\n\n  return borrowerIds;\n};\n\nmodule.exportDefault(createFakeBorrowers);","map":{"version":3,"sources":["imports/core/fixtures/borrowers.js"],"names":["BorrowerService","module","watch","require","default","v","RESIDENCY_PERMIT","GENDER","CIVIL_STATUS","OTHER_FORTUNE","OTHER_INCOME","EXPENSES","REAL_ESTATE","fakeFile","firstNames","lastNames","generateSecondBorrowerProbabillity","Math","random","insertFakeBorrower","userId","borrower","firstName","floor","length","lastName","gender","address1","zipCode","city","citizenships","age","birthPlace","civilStatus","childrenCount","company","personalBank","isSwiss","isUSPerson","worksForOwnCompany","sameAddress","salary","bonusExists","bonus","bonus2014","bonus2015","bonus2016","bonus2017","otherIncome","value","description","expenses","realEstate","loan","bankFortune","insuranceSecondPillar","insuranceThirdPillar","files","identity","taxes","salaryCertificate","nonPursuitExtract","lastSalaries","currentMortgages","bankAssetsChange","pensionFundYearlyStatement","retirementInsurancePlan","logic","financeEthics","hasValidatedFinances","insert","createFakeBorrowers","borrowerIds","push","exportDefault"],"mappings":"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","file":"imports/core/fixtures/borrowers.js.map","sourcesContent":["import BorrowerService from 'core/api/borrowers/BorrowerService';\nimport {\n  RESIDENCY_PERMIT,\n  GENDER,\n  CIVIL_STATUS,\n  OTHER_FORTUNE,\n  OTHER_INCOME,\n  EXPENSES,\n  REAL_ESTATE,\n} from 'core/api/borrowers/borrowerConstants';\nimport { fakeFile } from 'core/api/files/files';\n\nconst firstNames = [\n  'Marie',\n  'Camille',\n  'Léa',\n  'Manon',\n  'Thomas',\n  'Nicolas',\n  'Julien',\n];\n\nconst lastNames = ['Arsenault', 'Babel', 'Rochat'];\n\nconst generateSecondBorrowerProbabillity = () => Math.random() < 0.8;\n\nconst insertFakeBorrower = (userId) => {\n  const borrower = {\n    firstName: firstNames[Math.floor(Math.random() * firstNames.length)],\n    lastName: lastNames[Math.floor(Math.random() * lastNames.length)],\n    gender: 'F',\n    address1: 'Chemin du Mont 3',\n    zipCode: 1400,\n    city: 'Yverdon-les-Bains',\n    citizenships: 'Suisse, Français',\n    age: 35,\n    birthPlace: 'Lausanne',\n    civilStatus: 'SINGLE',\n    childrenCount: 2,\n    company: 'Deloitte',\n    personalBank: 'BCGE',\n    isSwiss: true,\n    isUSPerson: false,\n    worksForOwnCompany: false,\n    sameAddress: true,\n\n    salary: 300000,\n    bonusExists: true,\n    bonus: {\n      bonus2014: 12300,\n      bonus2015: 15490,\n      bonus2016: 11140,\n      bonus2017: 13780,\n    },\n    otherIncome: [\n      {\n        value: 10000,\n        description: 'PENSION',\n      },\n      {\n        value: 15000,\n        description: 'RENT',\n      },\n    ],\n    expenses: [\n      {\n        value: 3000,\n        description: 'LEASING',\n      },\n      {\n        value: 4000,\n        description: 'PERSONAL_LOAN',\n      },\n    ],\n    realEstate: [\n      {\n        value: 433000,\n        loan: 240000,\n        description: 'PRIMARY',\n      },\n    ],\n    bankFortune: 300000,\n    insuranceSecondPillar: 120000,\n    insuranceThirdPillar: 50000,\n    files: {\n      identity: [fakeFile],\n      taxes: [fakeFile],\n      salaryCertificate: [fakeFile],\n      bonus: [fakeFile],\n      otherIncome: [fakeFile],\n      expenses: [fakeFile],\n      nonPursuitExtract: [fakeFile],\n      lastSalaries: [fakeFile],\n      currentMortgages: [fakeFile],\n      bankAssetsChange: [fakeFile],\n      pensionFundYearlyStatement: [fakeFile],\n      retirementInsurancePlan: [fakeFile],\n    },\n    logic: {\n      financeEthics: true,\n      hasValidatedFinances: true,\n    },\n  };\n  \n  return BorrowerService.insert({ borrower, userId });\n};\n\nconst createFakeBorrowers = (userId) => {\n  const borrowerIds = [insertFakeBorrower(userId)];\n  if (generateSecondBorrowerProbabillity()) {\n    borrowerIds.push(insertFakeBorrower(userId));\n  }\n  return borrowerIds;\n};\n\nexport default createFakeBorrowers;\n"]},"hash":"ebc2d36f67f8dcff87130c8a09fe91cccc5e27c8"}
