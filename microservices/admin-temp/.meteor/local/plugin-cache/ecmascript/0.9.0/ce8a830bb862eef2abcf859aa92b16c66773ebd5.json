{"metadata":{"usedHelpers":["defineProperty","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"lodash/get","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"get"}]},{"source":"../../api/cleanMethods","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"cleanMethod"}]},{"source":"../Checkbox","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Checkbox"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/AutoForm/FormValidator.jsx","filenameRelative":"imports/core/components/AutoForm/FormValidator.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/AutoForm/FormValidator.jsx.map","sourceFileName":"imports/core/components/AutoForm/FormValidator.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"FormValidator"},"ignored":false,"code":"\"use strict\";\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar get = void 0;\nmodule.watch(require(\"lodash/get\"), {\n  \"default\": function () {\n    function _default(v) {\n      get = v;\n    }\n\n    return _default;\n  }()\n}, 2);\nvar cleanMethod = void 0;\nmodule.watch(require(\"../../api/cleanMethods\"), {\n  \"default\": function () {\n    function _default(v) {\n      cleanMethod = v;\n    }\n\n    return _default;\n  }()\n}, 3);\nvar Checkbox = void 0;\nmodule.watch(require(\"../Checkbox\"), {\n  \"default\": function () {\n    function _default(v) {\n      Checkbox = v;\n    }\n\n    return _default;\n  }()\n}, 4);\n\nvar handleCheck = function () {\n  function handleCheck(_ref, isInputChecked) {\n    var updateFunc = _ref.updateFunc,\n        docId = _ref.docId,\n        id = _ref.inputProps.id;\n    var object = (0, _defineProperty3.default)({}, \"adminValidation.\" + id, isInputChecked);\n    cleanMethod(updateFunc, {\n      object: object,\n      id: docId\n    });\n  }\n\n  return handleCheck;\n}();\n\nvar styles = {\n  div: {\n    position: 'absolute',\n    top: '0px',\n    right: '0px'\n  },\n  wrapper: {\n    position: 'relative',\n    right: '-100%'\n  }\n};\n\nvar FormValidator = function () {\n  function FormValidator(props) {\n    var admin = props.admin,\n        doc = props.doc,\n        id = props.inputProps;\n\n    if (!admin) {\n      return null;\n    }\n\n    var checked = !!get(doc.adminValidation, id);\n    return React.createElement(\n      \"div\",\n      {\n        style: styles.div\n      },\n      React.createElement(\n        \"div\",\n        {\n          style: styles.wrapper\n        },\n        React.createElement(Checkbox, {\n          label: checked ? 'Validé' : 'Valider',\n          value: checked,\n          onChange: function () {\n            function onChange(e, c) {\n              return handleCheck(props, c);\n            }\n\n            return onChange;\n          }()\n        })\n      )\n    );\n  }\n\n  return FormValidator;\n}();\n\nFormValidator.propTypes = {\n  admin: PropTypes.bool,\n  doc: PropTypes.objectOf(PropTypes.any).isRequired\n};\nFormValidator.defaultProps = {\n  admin: false\n};\nmodule.exportDefault(FormValidator);","map":{"version":3,"sources":["imports/core/components/AutoForm/FormValidator.jsx"],"names":["React","module","watch","require","v","PropTypes","get","cleanMethod","Checkbox","handleCheck","isInputChecked","updateFunc","docId","id","inputProps","object","styles","div","position","top","right","wrapper","FormValidator","props","admin","doc","checked","adminValidation","e","c","propTypes","bool","objectOf","any","isRequired","defaultProps","exportDefault"],"mappings":";;;;;;;;AAAA,IAAIA,cAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACJ,cAAMI,CAAN;AAAQ;;AAApB;AAAA;AAAA,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,kBAAJ;AAAcJ,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACC,kBAAUD,CAAV;AAAY;;AAAxB;AAAA;AAAA,CAAnC,EAA6D,CAA7D;AAAgE,IAAIE,YAAJ;AAAQL,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACE,YAAIF,CAAJ;AAAM;;AAAlB;AAAA;AAAA,CAAnC,EAAuD,CAAvD;AAA0D,IAAIG,oBAAJ;AAAgBN,OAAOC,KAAP,CAAaC,QAAQ,wBAAR,CAAb,EAA+C;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACG,oBAAYH,CAAZ;AAAc;;AAA1B;AAAA;AAAA,CAA/C,EAA2E,CAA3E;AAA8E,IAAII,iBAAJ;AAAaP,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACI,iBAASJ,CAAT;AAAW;;AAAvB;AAAA;AAAA,CAApC,EAA6D,CAA7D;;AAQ5T,IAAMK;AAAc,WAAdA,WAAc,OAElBC,cAFkB,EAGf;AAAA,QAFDC,UAEC,QAFDA,UAEC;AAAA,QAFWC,KAEX,QAFWA,KAEX;AAAA,QAFgCC,EAEhC,QAFkBC,UAElB,CAFgCD,EAEhC;AACH,QAAME,gEAA+BF,EAA/B,EAAsCH,cAAtC,CAAN;AACAH,gBAAYI,UAAZ,EAAwB;AAAEI,oBAAF;AAAUF,UAAID;AAAd,KAAxB;AACD;;AANK;AAAA,GAAN;;AAQA,IAAMI,SAAS;AACbC,OAAK;AACHC,cAAU,UADP;AAEHC,SAAK,KAFF;AAGHC,WAAO;AAHJ,GADQ;AAMbC,WAAS;AACPH,cAAU,UADH;AAEPE,WAAO;AAFA;AANI,CAAf;;AAYA,IAAME;AAAgB,WAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,QACvBC,KADuB,GACQD,KADR,CACvBC,KADuB;AAAA,QAChBC,GADgB,GACQF,KADR,CAChBE,GADgB;AAAA,QACCZ,EADD,GACQU,KADR,CACXT,UADW;;AAE/B,QAAI,CAACU,KAAL,EAAY;AACV,aAAO,IAAP;AACD;;AAED,QAAME,UAAU,CAAC,CAACpB,IAAImB,IAAIE,eAAR,EAAyBd,EAAzB,CAAlB;AACA,WACE;AAAA;AAAA;AAAK,eAAOG,OAAOC;AAAnB;AACE;AAAA;AAAA;AAAK,iBAAOD,OAAOK;AAAnB;AACE,4BAAC,QAAD;AACE,iBAAOK,UAAU,QAAV,GAAqB,SAD9B;AAEE,iBAAOA,OAFT;AAGE;AAAU,8BAACE,CAAD,EAAIC,CAAJ;AAAA,qBAAUpB,YAAYc,KAAZ,EAAmBM,CAAnB,CAAV;AAAA;;AAAV;AAAA;AAHF;AADF;AADF,KADF;AAWD;;AAlBK;AAAA,GAAN;;AAoBAP,cAAcQ,SAAd,GAA0B;AACxBN,SAAOnB,UAAU0B,IADO;AAExBN,OAAKpB,UAAU2B,QAAV,CAAmB3B,UAAU4B,GAA7B,EAAkCC;AAFf,CAA1B;AAKAZ,cAAca,YAAd,GAA6B;AAC3BX,SAAO;AADoB,CAA7B;AArDAvB,OAAOmC,aAAP,CAyDed,aAzDf","file":"imports/core/components/AutoForm/FormValidator.jsx.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport cleanMethod from 'core/api/cleanMethods';\n\nimport Checkbox from 'core/components/Checkbox';\n\nconst handleCheck = (\n  { updateFunc, docId, inputProps: { id } },\n  isInputChecked,\n) => {\n  const object = { [`adminValidation.${id}`]: isInputChecked };\n  cleanMethod(updateFunc, { object, id: docId });\n};\n\nconst styles = {\n  div: {\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n  },\n  wrapper: {\n    position: 'relative',\n    right: '-100%',\n  },\n};\n\nconst FormValidator = (props) => {\n  const { admin, doc, inputProps: id } = props;\n  if (!admin) {\n    return null;\n  }\n\n  const checked = !!get(doc.adminValidation, id);\n  return (\n    <div style={styles.div}>\n      <div style={styles.wrapper}>\n        <Checkbox\n          label={checked ? 'Validé' : 'Valider'}\n          value={checked}\n          onChange={(e, c) => handleCheck(props, c)}\n        />\n      </div>\n    </div>\n  );\n};\n\nFormValidator.propTypes = {\n  admin: PropTypes.bool,\n  doc: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nFormValidator.defaultProps = {\n  admin: false,\n};\n\nexport default FormValidator;\n"]},"hash":"ce8a830bb862eef2abcf859aa92b16c66773ebd5"}
