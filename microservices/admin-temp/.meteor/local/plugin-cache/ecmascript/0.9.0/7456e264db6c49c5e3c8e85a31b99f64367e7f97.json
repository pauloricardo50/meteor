{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mdg:validated-method","imported":["ValidatedMethod"],"specifiers":[{"kind":"named","imported":"ValidatedMethod","local":"ValidatedMethod"}]},{"source":"meteor/check","imported":["check","Match"],"specifiers":[{"kind":"named","imported":"check","local":"check"},{"kind":"named","imported":"Match","local":"Match"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"meteor/didericis:callpromise-mixin","imported":["CallPromiseMixin"],"specifiers":[{"kind":"named","imported":"CallPromiseMixin","local":"CallPromiseMixin"}]},{"source":"../../../utils/rate-limit.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"rateLimit"}]},{"source":"../comparators","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Comparators"}]}],"exports":{"exported":["insertComparator","updateComparator","addComparatorField","removeComparatorField","toggleHiddenField"],"specifiers":[{"kind":"local","local":"insertComparator","exported":"insertComparator"},{"kind":"local","local":"updateComparator","exported":"updateComparator"},{"kind":"local","local":"addComparatorField","exported":"addComparatorField"},{"kind":"local","local":"removeComparatorField","exported":"removeComparatorField"},{"kind":"local","local":"toggleHiddenField","exported":"toggleHiddenField"}]}}},"options":{"filename":"imports/core/api/comparators/server/methods.js","filenameRelative":"imports/core/api/comparators/server/methods.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/comparators/server/methods.js.map","sourceFileName":"imports/core/api/comparators/server/methods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"methods"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.export({\n  insertComparator: function insertComparator() {\n    return _insertComparator;\n  },\n  updateComparator: function updateComparator() {\n    return _updateComparator;\n  },\n  addComparatorField: function addComparatorField() {\n    return _addComparatorField;\n  },\n  removeComparatorField: function removeComparatorField() {\n    return _removeComparatorField;\n  },\n  toggleHiddenField: function toggleHiddenField() {\n    return _toggleHiddenField;\n  }\n});\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _ValidatedMethod = void 0;\n\nmodule.watch(require(\"meteor/mdg:validated-method\"), {\n  ValidatedMethod: function ValidatedMethod(v) {\n    _ValidatedMethod = v;\n  }\n}, 1);\n\nvar _check = void 0,\n    _Match = void 0;\n\nmodule.watch(require(\"meteor/check\"), {\n  check: function check(v) {\n    _check = v;\n  },\n  Match: function Match(v) {\n    _Match = v;\n  }\n}, 2);\n\nvar _Roles = void 0;\n\nexports.insertComparator = _insertComparator;\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function Roles(v) {\n    _Roles = v;\n  }\n}, 3);\n\nvar _CallPromiseMixin = void 0;\n\nmodule.watch(require(\"meteor/didericis:callpromise-mixin\"), {\n  CallPromiseMixin: function CallPromiseMixin(v) {\n    _CallPromiseMixin = v;\n  }\n}, 4);\nvar rateLimit = void 0;\nmodule.watch(require(\"../../../utils/rate-limit.js\"), {\n  default: function _default(v) {\n    rateLimit = v;\n  }\n}, 5);\nvar Comparators = void 0;\nmodule.watch(require(\"../comparators\"), {\n  default: function _default(v) {\n    Comparators = v;\n  }\n}, 6);\n\nvar _insertComparator = new _ValidatedMethod({\n  name: 'insertComparator',\n  mixins: [_CallPromiseMixin],\n  validate: function validate() {},\n  run: function run() {\n    var userId = _Meteor.userId();\n\n    var userComparators = Comparators.find({\n      userId: userId\n    }).count();\n\n    if (userComparators > 0) {\n      throw new _Meteor.Error(\"Can't have more than one comparator per user\");\n    }\n\n    return Comparators.insert({\n      userId: userId\n    });\n  }\n});\n\nvar _updateComparator = new _ValidatedMethod({\n  name: 'updateComparator',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref) {\n    var object = _ref.object,\n        id = _ref.id;\n\n    _check(object, Object);\n\n    _check(id, String);\n  },\n  run: function run(_ref2) {\n    var object = _ref2.object,\n        id = _ref2.id;\n    return Comparators.update(id, {\n      $set: object\n    });\n  }\n});\n\nvar _addComparatorField = new _ValidatedMethod({\n  name: 'addComparatorField',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref3) {\n    var object = _ref3.object,\n        id = _ref3.id;\n    var name = object.name,\n        type = object.type;\n\n    _check(id, String);\n\n    _check(name, String);\n\n    _check(type, String);\n  },\n  run: function run(_ref4) {\n    var object = _ref4.object,\n        id = _ref4.id;\n    var name = object.name,\n        type = object.type;\n    var comparator = Comparators.findOne(id);\n    return Comparators.update(id, {\n      $inc: {\n        customFieldCount: 1\n      },\n      $push: {\n        customFields: {\n          id: \"custom\" + comparator.customFieldCount,\n          name: name,\n          type: type\n        }\n      }\n    });\n  }\n});\n\nvar _removeComparatorField = new _ValidatedMethod({\n  name: 'removeComparatorField',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref5) {\n    var object = _ref5.object,\n        id = _ref5.id;\n\n    _check(id, String);\n\n    _check(object, Object);\n\n    _check(object.fieldId, String);\n  },\n  run: function run(_ref6) {\n    var object = _ref6.object,\n        id = _ref6.id;\n    var fieldId = object.fieldId;\n    return Comparators.update(id, {\n      $pull: {\n        customFields: {\n          id: fieldId\n        }\n      }\n    });\n  }\n});\n\nvar _toggleHiddenField = new _ValidatedMethod({\n  name: 'toggleHiddenField',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref7) {\n    var object = _ref7.object,\n        id = _ref7.id;\n\n    _check(id, String);\n\n    _check(object, Object);\n\n    _check(object.fieldId, String);\n  },\n  run: function run(_ref8) {\n    var object = _ref8.object,\n        id = _ref8.id;\n    var fieldId = object.fieldId;\n    var comparator = Comparators.findOne(id);\n\n    if (comparator.hiddenFields.indexOf(fieldId) >= 0) {\n      // Field is currently hidden\n      return Comparators.update(id, {\n        $pull: {\n          hiddenFields: fieldId\n        }\n      });\n    }\n\n    return Comparators.update(id, {\n      $push: {\n        hiddenFields: fieldId\n      }\n    });\n  }\n});","map":{"version":3,"sources":["imports/core/api/comparators/server/methods.js"],"names":["module","export","insertComparator","updateComparator","addComparatorField","removeComparatorField","toggleHiddenField","Meteor","watch","require","v","ValidatedMethod","check","Match","Roles","CallPromiseMixin","rateLimit","default","Comparators","name","mixins","validate","run","userId","userComparators","find","count","Error","insert","object","id","Object","String","update","$set","type","comparator","findOne","$inc","customFieldCount","$push","customFields","fieldId","$pull","hiddenFields","indexOf"],"mappings":"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","file":"imports/core/api/comparators/server/methods.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\nimport { check, Match } from 'meteor/check';\nimport { Roles } from 'meteor/alanning:roles';\nimport { CallPromiseMixin } from 'meteor/didericis:callpromise-mixin';\nimport rateLimit from '../../../utils/rate-limit.js';\n\nimport Comparators from '../comparators';\n\nexport const insertComparator = new ValidatedMethod({\n  name: 'insertComparator',\n  mixins: [CallPromiseMixin],\n  validate() {},\n  run() {\n    const userId = Meteor.userId();\n    const userComparators = Comparators.find({ userId }).count();\n\n    if (userComparators > 0) {\n      throw new Meteor.Error(\"Can't have more than one comparator per user\");\n    }\n\n    return Comparators.insert({ userId });\n  },\n});\n\nexport const updateComparator = new ValidatedMethod({\n  name: 'updateComparator',\n  mixins: [CallPromiseMixin],\n  validate({ object, id }) {\n    check(object, Object);\n    check(id, String);\n  },\n  run({ object, id }) {\n    return Comparators.update(id, { $set: object });\n  },\n});\n\nexport const addComparatorField = new ValidatedMethod({\n  name: 'addComparatorField',\n  mixins: [CallPromiseMixin],\n  validate({ object, id }) {\n    const { name, type } = object;\n\n    check(id, String);\n    check(name, String);\n    check(type, String);\n  },\n  run({ object, id }) {\n    const { name, type } = object;\n\n    const comparator = Comparators.findOne(id);\n\n    return Comparators.update(id, {\n      $inc: { customFieldCount: 1 },\n      $push: {\n        customFields: {\n          id: `custom${comparator.customFieldCount}`,\n          name,\n          type,\n        },\n      },\n    });\n  },\n});\n\nexport const removeComparatorField = new ValidatedMethod({\n  name: 'removeComparatorField',\n  mixins: [CallPromiseMixin],\n  validate({ object, id }) {\n    check(id, String);\n    check(object, Object);\n    check(object.fieldId, String);\n  },\n  run({ object, id }) {\n    const { fieldId } = object;\n\n    return Comparators.update(id, {\n      $pull: { customFields: { id: fieldId } },\n    });\n  },\n});\n\nexport const toggleHiddenField = new ValidatedMethod({\n  name: 'toggleHiddenField',\n  mixins: [CallPromiseMixin],\n  validate({ object, id }) {\n    check(id, String);\n    check(object, Object);\n    check(object.fieldId, String);\n  },\n  run({ object, id }) {\n    const { fieldId } = object;\n\n    const comparator = Comparators.findOne(id);\n\n    if (comparator.hiddenFields.indexOf(fieldId) >= 0) {\n      // Field is currently hidden\n      return Comparators.update(id, {\n        $pull: { hiddenFields: fieldId },\n      });\n    }\n\n    return Comparators.update(id, {\n      $push: { hiddenFields: fieldId },\n    });\n  },\n});\n"]},"hash":"7456e264db6c49c5e3c8e85a31b99f64367e7f97"}
