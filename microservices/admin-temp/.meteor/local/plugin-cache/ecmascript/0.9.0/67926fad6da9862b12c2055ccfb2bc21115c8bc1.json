{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/kadira:dochead/test/server.js","filenameRelative":"packages/kadira:dochead/test/server.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/kadira:dochead/test/server.js.map","sourceFileName":"packages/kadira:dochead/test/server.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"server"},"ignored":false,"code":"let onSsrContext = function (fn) {\n  SsrContext.addToHead = fn;\n\n  let stop = function () {\n    SsrContext.addToHead = null;\n  };\n\n  return {\n    stop: stop\n  };\n};\n\nTinytest.addAsync('Server - setTitle and getTitle', function (test, done) {\n  const id = Random.id();\n  let handle = onSsrContext(function (html) {\n    const title = `<title>${id}</title>`;\n    test.equal(html, title);\n    test.equal(DocHead.getTitle(), id);\n    handle.stop();\n    done();\n  });\n  DocHead.setTitle(id);\n});\nTinytest.addAsync('Server - addMeta', function (test, done) {\n  const metaInfo = {\n    name: \"description\",\n    content: \"hello content\"\n  };\n  let handle = onSsrContext(function (html) {\n    const metaTag = `<meta name=\"${metaInfo.name}\" content=\"${metaInfo.content}\" dochead=\"1\"/>`;\n    test.equal(html, metaTag);\n    handle.stop();\n    done();\n  });\n  DocHead.addMeta(metaInfo);\n});\nTinytest.addAsync('Server - addLdJsonScript', function (test, done) {\n  const snippet = {\n    '@context': 'http://schema.org',\n    '@type': 'Organization',\n    url: 'http://www.example.com',\n    logo: 'http://www.example.com/images/logo.png'\n  };\n  let handle = onSsrContext(function (html) {\n    const scriptTag = '<script type=\"application/ld+json\" dochead=\"1\">' + '{' + '\"@context\":\"http://schema.org\",' + '\"@type\":\"Organization\",' + '\"url\":\"http://www.example.com\",' + '\"logo\":\"http://www.example.com/images/logo.png\"}' + '</script>';\n    test.equal(html, scriptTag);\n    handle.stop();\n    done();\n  });\n  DocHead.addLdJsonScript(snippet);\n});","map":{"version":3,"sources":["packages/kadira:dochead/test/server.js"],"names":["onSsrContext","fn","SsrContext","addToHead","stop","Tinytest","addAsync","test","done","id","Random","handle","html","title","equal","DocHead","getTitle","setTitle","metaInfo","name","content","metaTag","addMeta","snippet","url","logo","scriptTag","addLdJsonScript"],"mappings":"AAAA,IAAIA,eAAe,UAASC,EAAT,EAAa;AAC9BC,aAAWC,SAAX,GAAuBF,EAAvB;;AACA,MAAIG,OAAO,YAAW;AACpBF,eAAWC,SAAX,GAAuB,IAAvB;AACD,GAFD;;AAGA,SAAO;AACLC,UAAMA;AADD,GAAP;AAGD,CARD;;AAUAC,SAASC,QAAT,CAAkB,gCAAlB,EAAoD,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACvE,QAAMC,KAAKC,OAAOD,EAAP,EAAX;AACA,MAAIE,SAASX,aAAa,UAASY,IAAT,EAAe;AACvC,UAAMC,QAAS,UAASJ,EAAG,UAA3B;AACAF,SAAKO,KAAL,CAAWF,IAAX,EAAiBC,KAAjB;AACAN,SAAKO,KAAL,CAAWC,QAAQC,QAAR,EAAX,EAA+BP,EAA/B;AACAE,WAAOP,IAAP;AACAI;AACD,GANY,CAAb;AAOAO,UAAQE,QAAR,CAAiBR,EAAjB;AACD,CAVD;AAYAJ,SAASC,QAAT,CAAkB,kBAAlB,EAAsC,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACzD,QAAMU,WAAW;AAACC,UAAM,aAAP;AAAsBC,aAAS;AAA/B,GAAjB;AACA,MAAIT,SAASX,aAAa,UAASY,IAAT,EAAe;AACvC,UAAMS,UAAW,eAAcH,SAASC,IAAK,cAAaD,SAASE,OAAQ,iBAA3E;AACAb,SAAKO,KAAL,CAAWF,IAAX,EAAiBS,OAAjB;AACAV,WAAOP,IAAP;AACAI;AACD,GALY,CAAb;AAMAO,UAAQO,OAAR,CAAgBJ,QAAhB;AACD,CATD;AAWAb,SAASC,QAAT,CAAkB,0BAAlB,EAA8C,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACjE,QAAMe,UAAU;AACd,gBAAY,mBADE;AAEd,aAAS,cAFK;AAGdC,SAAK,wBAHS;AAIdC,UAAM;AAJQ,GAAhB;AAMA,MAAId,SAASX,aAAa,UAASY,IAAT,EAAe;AACvC,UAAMc,YAAY,oDAChB,GADgB,GAEd,iCAFc,GAGd,yBAHc,GAId,iCAJc,GAKd,kDALc,GAMlB,WANA;AAOAnB,SAAKO,KAAL,CAAWF,IAAX,EAAiBc,SAAjB;AACAf,WAAOP,IAAP;AACAI;AACD,GAXY,CAAb;AAYAO,UAAQY,eAAR,CAAwBJ,OAAxB;AACD,CApBD","file":"packages/kadira:dochead/test/server.js.map","sourcesContent":["let onSsrContext = function(fn) {\n  SsrContext.addToHead = fn;\n  let stop = function() {\n    SsrContext.addToHead = null;\n  };\n  return {\n    stop: stop\n  };\n};\n\nTinytest.addAsync('Server - setTitle and getTitle', function(test, done) {\n  const id = Random.id();\n  let handle = onSsrContext(function(html) {\n    const title = `<title>${id}</title>`;\n    test.equal(html, title);\n    test.equal(DocHead.getTitle(), id);\n    handle.stop();\n    done();\n  });\n  DocHead.setTitle(id);\n});\n\nTinytest.addAsync('Server - addMeta', function(test, done) {\n  const metaInfo = {name: \"description\", content: \"hello content\"};\n  let handle = onSsrContext(function(html) {\n    const metaTag = `<meta name=\"${metaInfo.name}\" content=\"${metaInfo.content}\" dochead=\"1\"/>`;\n    test.equal(html, metaTag);\n    handle.stop();\n    done();\n  });\n  DocHead.addMeta(metaInfo);\n});\n\nTinytest.addAsync('Server - addLdJsonScript', function(test, done) {\n  const snippet = {\n    '@context': 'http://schema.org',\n    '@type': 'Organization',\n    url: 'http://www.example.com',\n    logo: 'http://www.example.com/images/logo.png'\n  };\n  let handle = onSsrContext(function(html) {\n    const scriptTag = '<script type=\"application/ld+json\" dochead=\"1\">' +\n      '{' +\n        '\"@context\":\"http://schema.org\",' +\n        '\"@type\":\"Organization\",' +\n        '\"url\":\"http://www.example.com\",' +\n        '\"logo\":\"http://www.example.com/images/logo.png\"}' +\n    '</script>';\n    test.equal(html, scriptTag);\n    handle.stop();\n    done();\n  });\n  DocHead.addLdJsonScript(snippet);\n});\n"]},"hash":"67926fad6da9862b12c2055ccfb2bc21115c8bc1"}
