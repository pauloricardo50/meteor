{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]}],"exports":{"exported":["FormMessages"],"specifiers":[{"kind":"local","local":"FormMessages","exported":"FormMessages"}]}}},"options":{"filename":"packages/std:accounts-ui/imports/ui/components/FormMessages.jsx","filenameRelative":"packages/std:accounts-ui/imports/ui/components/FormMessages.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/std:accounts-ui/imports/ui/components/FormMessages.jsx.map","sourceFileName":"packages/std:accounts-ui/imports/ui/components/FormMessages.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"FormMessages"},"ignored":false,"code":"module.export({\n  FormMessages: () => FormMessages\n});\nlet React, Component;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\n\nclass FormMessages extends Component {\n  render() {\n    const {\n      messages = [],\n      className = \"messages\",\n      style = {}\n    } = this.props;\n    return messages.length > 0 && React.createElement(\n      \"div\",\n      {\n        className: \"messages\"\n      },\n      messages.filter(message => !('field' in message)).map(({\n        message,\n        type\n      }, i) => React.createElement(Accounts.ui.FormMessage, {\n        message: message,\n        type: type,\n        key: i\n      }))\n    );\n  }\n\n}\n\nAccounts.ui.FormMessages = FormMessages;","map":{"version":3,"sources":["packages/std:accounts-ui/imports/ui/components/FormMessages.jsx"],"names":["module","export","FormMessages","React","Component","watch","require","default","v","Accounts","render","messages","className","style","props","length","filter","message","map","type","i","ui"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,gBAAa,MAAIA;AAAlB,CAAd;AAA+C,IAAIC,KAAJ,EAAUC,SAAV;AAAoBJ,OAAOK,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ,GAApB;;AAAqBJ,YAAUI,CAAV,EAAY;AAACJ,gBAAUI,CAAV;AAAY;;AAA9C,CAA9B,EAA8E,CAA9E;AAAiF,IAAIC,QAAJ;AAAaT,OAAOK,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACG,WAASD,CAAT,EAAW;AAACC,eAASD,CAAT;AAAW;;AAAxB,CAA7C,EAAuE,CAAvE;;AAG1J,MAAMN,YAAN,SAA2BE,SAA3B,CAAqC;AAC1CM,WAAU;AACR,UAAM;AAAEC,iBAAW,EAAb;AAAiBC,kBAAY,UAA7B;AAAyCC,cAAQ;AAAjD,QAAwD,KAAKC,KAAnE;AACA,WAAOH,SAASI,MAAT,GAAkB,CAAlB,IACL;AAAA;AAAA;AAAK,mBAAU;AAAf;AACGJ,eACEK,MADF,CACSC,WAAW,EAAE,WAAWA,OAAb,CADpB,EAEEC,GAFF,CAEM,CAAC;AAAED,eAAF;AAAWE;AAAX,OAAD,EAAoBC,CAApB,KACL,oBAAC,QAAD,CAAU,EAAV,CAAa,WAAb;AACE,iBAASH,OADX;AAEE,cAAME,IAFR;AAGE,aAAKC;AAHP,QAHD;AADH,KADF;AAaD;;AAhByC;;AAmB5CX,SAASY,EAAT,CAAYnB,YAAZ,GAA2BA,YAA3B","file":"packages/std:accounts-ui/imports/ui/components/FormMessages.jsx.map","sourcesContent":["import React, {Â Component } from 'react';\nimport { Accounts } from 'meteor/accounts-base';\n\nexport class FormMessages extends Component {\n  render () {\n    const { messages = [], className = \"messages\", style = {} } = this.props;\n    return messages.length > 0 && (\n      <div className=\"messages\">\n        {messages\n          .filter(message => !('field' in message))\n          .map(({Â message, type }, i) =>\n          <Accounts.ui.FormMessage\n            message={message}\n            type={type}\n            key={i}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nAccounts.ui.FormMessages = FormMessages;\n"]},"hash":"95a2af3368d5527237d2bda4ec0b0513898ffdf7"}
