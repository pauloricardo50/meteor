{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"../offers","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Offers"}]},{"source":"../../loans/loans","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loans"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/offers/server/publications.js","filenameRelative":"imports/core/api/offers/server/publications.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/offers/server/publications.js.map","sourceFileName":"imports/core/api/offers/server/publications.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"publications"},"ignored":false,"code":"\"use strict\";\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _check = void 0;\n\nmodule.watch(require(\"meteor/check\"), {\n  check: function check(v) {\n    _check = v;\n  }\n}, 1);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function Roles(v) {\n    _Roles = v;\n  }\n}, 2);\nvar Offers = void 0;\nmodule.watch(require(\"../offers\"), {\n  default: function _default(v) {\n    Offers = v;\n  }\n}, 3);\nvar Loans = void 0;\nmodule.watch(require(\"../../loans/loans\"), {\n  default: function _default(v) {\n    Loans = v;\n  }\n}, 4);\n\n// Get all offers for the currently active loan\n_Meteor.publish('activeOffers', function () {\n  var activeLoan = Loans.findOne({\n    userId: _Meteor.userId(),\n    active: true\n  });\n  return Offers.find({\n    loanId: activeLoan._id\n  });\n}); // Get all offers for the currently active loan\n\n\n_Meteor.publish('userOffers', function () {\n  var loans = Loans.find({\n    userId: _Meteor.userId()\n  });\n  var IDs = loans.map(function (r) {\n    return r._id;\n  });\n  return Offers.find({\n    loanId: {\n      $in: IDs\n    }\n  });\n}); // Get all offers the partner has made\n\n\n_Meteor.publish('partnerOffers', function publish() {\n  var user = _Meteor.users.findOne(_Meteor.userId());\n\n  if (_Roles.userIsInRole(_Meteor.userId(), 'partner')) {\n    return Offers.find({\n      organization: user.profile && user.profile.organization // auctionEndTime: { $lt: new Date() },\n\n    });\n  }\n\n  return this.ready();\n}); // Publish all offers in the database for admins\n\n\n_Meteor.publish('allOffers', function publish() {\n  // Verify if user is logged In\n  if (_Roles.userIsInRole(_Meteor.userId(), 'admin') || _Roles.userIsInRole(_Meteor.userId(), 'dev')) {\n    // Return all users\n    return Offers.find();\n  }\n\n  return this.ready();\n}); // Publish all offers for a loan for admins\n\n\n_Meteor.publish('loanOffers', function publish(loanId) {\n  _check(loanId, String); // Verify if user is logged In\n\n\n  if (_Roles.userIsInRole(_Meteor.userId(), 'admin') || _Roles.userIsInRole(_Meteor.userId(), 'dev')) {\n    return Offers.find({\n      loanId: loanId\n    });\n  }\n\n  return this.ready();\n});","map":{"version":3,"sources":["imports/core/api/offers/server/publications.js"],"names":["Meteor","module","watch","require","v","check","Roles","Offers","default","Loans","publish","activeLoan","findOne","userId","active","find","loanId","_id","loans","IDs","map","r","$in","user","users","userIsInRole","organization","profile","ready","String"],"mappings":"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","file":"imports/core/api/offers/server/publications.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { Roles } from 'meteor/alanning:roles';\n\nimport Offers from '../offers';\nimport Loans from '../../loans/loans';\n\n// Get all offers for the currently active loan\nMeteor.publish('activeOffers', () => {\n  const activeLoan = Loans.findOne({\n    userId: Meteor.userId(),\n    active: true,\n  });\n\n  return Offers.find({\n    loanId: activeLoan._id,\n  });\n});\n\n// Get all offers for the currently active loan\nMeteor.publish('userOffers', () => {\n  const loans = Loans.find({\n    userId: Meteor.userId(),\n  });\n\n  const IDs = loans.map(r => r._id);\n\n  return Offers.find({\n    loanId: { $in: IDs },\n  });\n});\n\n// Get all offers the partner has made\nMeteor.publish('partnerOffers', function publish() {\n  const user = Meteor.users.findOne(Meteor.userId());\n\n  if (Roles.userIsInRole(Meteor.userId(), 'partner')) {\n    return Offers.find({\n      organization: user.profile && user.profile.organization,\n      // auctionEndTime: { $lt: new Date() },\n    });\n  }\n\n  return this.ready();\n});\n\n// Publish all offers in the database for admins\nMeteor.publish('allOffers', function publish() {\n  // Verify if user is logged In\n  if (\n    Roles.userIsInRole(Meteor.userId(), 'admin') ||\n    Roles.userIsInRole(Meteor.userId(), 'dev')\n  ) {\n    // Return all users\n    return Offers.find();\n  }\n\n  return this.ready();\n});\n\n// Publish all offers for a loan for admins\nMeteor.publish('loanOffers', function publish(loanId) {\n  check(loanId, String);\n  // Verify if user is logged In\n  if (\n    Roles.userIsInRole(Meteor.userId(), 'admin') ||\n    Roles.userIsInRole(Meteor.userId(), 'dev')\n  ) {\n    return Offers.find({ loanId });\n  }\n\n  return this.ready();\n});\n"]},"hash":"05d90b19db589b055c33f87525e769a5f81a267e"}
