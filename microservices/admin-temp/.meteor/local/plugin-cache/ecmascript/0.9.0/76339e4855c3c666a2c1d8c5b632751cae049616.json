{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react-intl","imported":["addLocaleData"],"specifiers":[{"kind":"named","imported":"addLocaleData","local":"addLocaleData"}]},{"source":"meteor/softwarerero:accounts-t9n","imported":["T9n"],"specifiers":[{"kind":"named","imported":"T9n","local":"T9n"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"./loadable","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loadable"}]},{"source":"react-intl/locale-data/fr","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"fr"}]}],"exports":{"exported":["getUserLocale","getFormats","localizationStartup"],"specifiers":[{"kind":"local","local":"getUserLocale","exported":"getUserLocale"},{"kind":"local","local":"getFormats","exported":"getFormats"},{"kind":"local","local":"localizationStartup","exported":"localizationStartup"}]}}},"options":{"filename":"imports/core/utils/localization.js","filenameRelative":"imports/core/utils/localization.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/utils/localization.js.map","sourceFileName":"imports/core/utils/localization.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"localization"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.export({\n  getUserLocale: function () {\n    function getUserLocale() {\n      return _getUserLocale;\n    }\n\n    return getUserLocale;\n  }(),\n  getFormats: function () {\n    function getFormats() {\n      return _getFormats;\n    }\n\n    return getFormats;\n  }(),\n  localizationStartup: function () {\n    function localizationStartup() {\n      return _localizationStartup;\n    }\n\n    return localizationStartup;\n  }()\n});\n\nvar _addLocaleData = void 0;\n\nmodule.watch(require(\"react-intl\"), {\n  addLocaleData: function () {\n    function addLocaleData(v) {\n      _addLocaleData = v;\n    }\n\n    return addLocaleData;\n  }()\n}, 0);\n\nvar _T9n = void 0;\n\nmodule.watch(require(\"meteor/softwarerero:accounts-t9n\"), {\n  T9n: function () {\n    function T9n(v) {\n      _T9n = v;\n    }\n\n    return T9n;\n  }()\n}, 1);\nvar moment = void 0;\nexports.getUserLocale = _getUserLocale;\nmodule.watch(require(\"moment\"), {\n  \"default\": function () {\n    function _default(v) {\n      moment = v;\n    }\n\n    return _default;\n  }()\n}, 2);\nvar Loadable = void 0;\nmodule.watch(require(\"./loadable\"), {\n  \"default\": function () {\n    function _default(v) {\n      Loadable = v;\n    }\n\n    return _default;\n  }()\n}, 3);\nvar fr = void 0;\nmodule.watch(require(\"react-intl/locale-data/fr\"), {\n  \"default\": function () {\n    function _default(v) {\n      fr = v;\n    }\n\n    return _default;\n  }()\n}, 4);\n\nvar _getUserLocale = function () {\n  function _getUserLocale() {\n    return 'fr-CH';\n  }\n\n  return _getUserLocale;\n}();\n\nvar _getFormats = function () {\n  function _getFormats() {\n    return {\n      number: {\n        money: {\n          style: 'currency',\n          currency: 'CHF',\n          maximumFractionDigits: 0,\n          minimumFractionDigits: 0\n        },\n        moneyWithoutCurrency: {\n          style: 'decimal',\n          useGrouping: true,\n          maximumFractionDigits: 0,\n          minimumFractionDigits: 0\n        },\n        percentage: {\n          style: 'percent',\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2\n        },\n        percentageRounded: {\n          style: 'percent',\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 0\n        }\n      }\n    };\n  }\n\n  return _getFormats;\n}();\n\nvar _localizationStartup = function () {\n  function _localizationStartup() {\n    // Add locales used in app here\n    _addLocaleData(fr);\n\n    _T9n.setLanguage('fr');\n\n    setupMoment();\n    moment.locale('fr');\n  }\n\n  return _localizationStartup;\n}();\n\nvar setupMoment = function () {\n  function setupMoment() {\n    moment.locale('fr', {\n      months: 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n      monthsShort: 'Janv._Févr._Mars_Avr._Mai_Juin_Juil._Août_Sept._Oct._Nov._Déc.'.split('_'),\n      monthsParseExact: true,\n      weekdays: 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n      weekdaysShort: 'Dim._Lun._Mar._Mer._Jeu._Ven._Sam.'.split('_'),\n      weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n      weekdaysParseExact: true,\n      longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n      },\n      calendar: {\n        sameDay: '[Aujourd’hui à] LT',\n        nextDay: '[Demain à] LT',\n        nextWeek: 'dddd [à] LT',\n        lastDay: '[Hier à] LT',\n        lastWeek: 'dddd [dernier à] LT',\n        sameElse: 'L'\n      },\n      relativeTime: {\n        future: 'dans %s',\n        past: 'il y a %s',\n        s: 'quelques secondes',\n        m: 'une minute',\n        mm: '%d minutes',\n        h: 'une heure',\n        hh: '%d heures',\n        d: 'un jour',\n        dd: '%d jours',\n        M: 'un mois',\n        MM: '%d mois',\n        y: 'un an',\n        yy: '%d ans'\n      },\n      dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n      ordinal: function () {\n        function ordinal(number) {\n          return number + (number === 1 ? 'er' : 'e');\n        }\n\n        return ordinal;\n      }(),\n      meridiemParse: /PD|MD/,\n      isPM: function () {\n        function isPM(input) {\n          return input.charAt(0) === 'M';\n        }\n\n        return isPM;\n      }(),\n      // In case the meridiem units are not separated around 12, then implement\n      // this function (look at locale/id.js for an example).\n      // meridiemHour : function (hour, meridiem) {\n      //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n      // },\n      meridiem: function () {\n        function meridiem(hours, minutes, isLower) {\n          return hours < 12 ? 'PD' : 'MD';\n        }\n\n        return meridiem;\n      }(),\n      week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n      }\n    });\n  }\n\n  return setupMoment;\n}();","map":{"version":3,"sources":["imports/core/utils/localization.js"],"names":["module","export","getUserLocale","getFormats","localizationStartup","addLocaleData","watch","require","v","T9n","moment","Loadable","fr","number","money","style","currency","maximumFractionDigits","minimumFractionDigits","moneyWithoutCurrency","useGrouping","percentage","percentageRounded","setLanguage","setupMoment","locale","months","split","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","meridiemParse","isPM","input","charAt","meridiem","hours","minutes","isLower","week","dow","doy"],"mappings":"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","file":"imports/core/utils/localization.js.map","sourcesContent":["// This file is shared between client and server to allow server-side tests to have access to it\n\nimport { addLocaleData } from 'react-intl';\nimport { T9n } from 'meteor/softwarerero:accounts-t9n';\nimport moment from 'moment';\nimport Loadable from 'core/utils/loadable';\nimport fr from 'react-intl/locale-data/fr';\n\nexport const getUserLocale = () => 'fr-CH';\n\nexport const getFormats = () => ({\n  number: {\n    money: {\n      style: 'currency',\n      currency: 'CHF',\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    },\n    moneyWithoutCurrency: {\n      style: 'decimal',\n      useGrouping: true,\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    },\n    percentage: {\n      style: 'percent',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    },\n    percentageRounded: {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    },\n  },\n});\n\nexport const localizationStartup = () => {\n  // Add locales used in app here\n  addLocaleData(fr);\n  T9n.setLanguage('fr');\n  setupMoment();\n  moment.locale('fr');\n};\n\nconst setupMoment = () => {\n  moment.locale('fr', {\n    months: 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n    monthsShort: 'Janv._Févr._Mars_Avr._Mai_Juin_Juil._Août_Sept._Oct._Nov._Déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n    weekdaysShort: 'Dim._Lun._Mar._Mer._Jeu._Ven._Sam.'.split('_'),\n    weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm',\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: 'L',\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'quelques secondes',\n      m: 'une minute',\n      mm: '%d minutes',\n      h: 'une heure',\n      hh: '%d heures',\n      d: 'un jour',\n      dd: '%d jours',\n      M: 'un mois',\n      MM: '%d mois',\n      y: 'un an',\n      yy: '%d ans',\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal(number) {\n      return number + (number === 1 ? 'er' : 'e');\n    },\n    meridiemParse: /PD|MD/,\n    isPM(input) {\n      return input.charAt(0) === 'M';\n    },\n    // In case the meridiem units are not separated around 12, then implement\n    // this function (look at locale/id.js for an example).\n    // meridiemHour : function (hour, meridiem) {\n    //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n    // },\n    meridiem(hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n    week: {\n      dow: 1, // Monday is the first day of the week.\n      doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n  });\n};\n"]},"hash":"76339e4855c3c666a2c1d8c5b632751cae049616"}
