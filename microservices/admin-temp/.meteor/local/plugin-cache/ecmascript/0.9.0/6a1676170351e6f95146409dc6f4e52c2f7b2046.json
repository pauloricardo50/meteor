{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/reducers/extension.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/reducers/extension.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/reducers/extension.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/extension.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"extension"},"ignored":false,"code":"let check;\nmodule.watch(require(\"meteor/check\"), {\n    check(v) {\n        check = v;\n    }\n\n}, 0);\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * @param data\n     */addReducers(data) {\n        if (!this[storage]) {\n            this[storage] = {};\n        }\n\n        _.each(data, (reducerConfig, reducerName) => {\n            if (!this[reducerConfig]) {\n                this[reducerConfig] = {};\n            }\n\n            if (this.getLinker(reducerName)) {\n                throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${this._name} collection`);\n            }\n\n            if (this[reducerConfig][reducerName]) {\n                throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it was already added to ${this._name} collection`);\n            }\n\n            check(reducerConfig, {\n                body: Object,\n                reduce: Function\n            });\n\n            _.extend(this[storage], {\n                [reducerName]: reducerConfig\n            });\n        });\n    },\n\n    /**\n     * @param name\n     * @returns {*}\n     */getReducer(name) {\n        if (this[storage]) {\n            return this[storage][name];\n        }\n    }\n\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/reducers/extension.js"],"names":["check","module","watch","require","v","storage","Object","assign","Mongo","Collection","prototype","addReducers","data","_","each","reducerConfig","reducerName","getLinker","Meteor","Error","_name","body","reduce","Function","extend","getReducer","name"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACH,UAAMI,CAAN,EAAQ;AAACJ,gBAAMI,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAEV,MAAMC,UAAU,YAAhB;AACAC,OAAOC,MAAP,CAAcC,MAAMC,UAAN,CAAiBC,SAA/B,EAA0C;AACtC;;OAGAC,YAAYC,IAAZ,EAAkB;AACd,YAAI,CAAC,KAAKP,OAAL,CAAL,EAAoB;AAChB,iBAAKA,OAAL,IAAgB,EAAhB;AACH;;AAEDQ,UAAEC,IAAF,CAAOF,IAAP,EAAa,CAACG,aAAD,EAAgBC,WAAhB,KAAgC;AACzC,gBAAI,CAAC,KAAKD,aAAL,CAAL,EAA0B;AACtB,qBAAKA,aAAL,IAAsB,EAAtB;AACH;;AAED,gBAAI,KAAKE,SAAL,CAAeD,WAAf,CAAJ,EAAiC;AAC7B,sBAAM,IAAIE,OAAOC,KAAX,CAAkB,yCAAwCH,WAAY,+CAA8C,KAAKI,KAAM,aAA/H,CAAN;AACH;;AAED,gBAAI,KAAKL,aAAL,EAAoBC,WAApB,CAAJ,EAAsC;AAClC,sBAAM,IAAIE,OAAOC,KAAX,CAAkB,yCAAwCH,WAAY,oCAAmC,KAAKI,KAAM,aAApH,CAAN;AACH;;AAEDpB,kBAAMe,aAAN,EAAqB;AACjBM,sBAAMf,MADW;AAEjBgB,wBAAQC;AAFS,aAArB;;AAKAV,cAAEW,MAAF,CAAS,KAAKnB,OAAL,CAAT,EAAwB;AACpB,iBAACW,WAAD,GAAeD;AADK,aAAxB;AAGH,SArBD;AAsBH,KA/BqC;;AAiCtC;;;OAIAU,WAAWC,IAAX,EAAiB;AACb,YAAI,KAAKrB,OAAL,CAAJ,EAAmB;AACf,mBAAO,KAAKA,OAAL,EAAcqB,IAAd,CAAP;AACH;AACJ;;AAzCqC,CAA1C","file":"packages/cultofcoders:grapher/lib/query/reducers/extension.js.map","sourcesContent":["import {check} from 'meteor/check';\n\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * @param data\n     */\n    addReducers(data) {\n        if (!this[storage]) {\n            this[storage] = {};\n        }\n\n        _.each(data, (reducerConfig, reducerName) => {\n            if (!this[reducerConfig]) {\n                this[reducerConfig] = {};\n            }\n\n            if (this.getLinker(reducerName)) {\n                throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${this._name} collection`)\n            }\n\n            if (this[reducerConfig][reducerName]) {\n                throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it was already added to ${this._name} collection`)\n            }\n\n            check(reducerConfig, {\n                body: Object,\n                reduce: Function\n            });\n\n            _.extend(this[storage], {\n                [reducerName]: reducerConfig\n            });\n        });\n    },\n\n    /**\n     * @param name\n     * @returns {*}\n     */\n    getReducer(name) {\n        if (this[storage]) {\n            return this[storage][name];\n        }\n    }\n});"]},"hash":"6a1676170351e6f95146409dc6f4e52c2f7b2046"}
