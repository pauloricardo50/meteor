{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../lib/applyProps.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"applyProps"}]},{"source":"../lib/prepareForDelivery.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"prepareForDelivery"}]},{"source":"./storeHypernovaResults.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"storeHypernovaResults"}]}],"exports":{"exported":["hypernovaInit","collectionNode","userId","config"],"specifiers":[{"kind":"local","local":"hypernovaInit","exported":"default"},{"kind":"local","local":"collectionNode","exported":"default"},{"kind":"local","local":"userId","exported":"default"},{"kind":"local","local":"config","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"hypernova"},"ignored":false,"code":"module.export({\n    \"default\": function () {\n        return hypernovaInit;\n    }\n});\nvar applyProps = void 0;\nmodule.watch(require(\"../lib/applyProps.js\"), {\n    \"default\": function (v) {\n        applyProps = v;\n    }\n}, 0);\nvar prepareForDelivery = void 0;\nmodule.watch(require(\"../lib/prepareForDelivery.js\"), {\n    \"default\": function (v) {\n        prepareForDelivery = v;\n    }\n}, 1);\nvar storeHypernovaResults = void 0;\nmodule.watch(require(\"./storeHypernovaResults.js\"), {\n    \"default\": function (v) {\n        storeHypernovaResults = v;\n    }\n}, 2);\n\nfunction hypernova(collectionNode, userId) {\n    _.each(collectionNode.collectionNodes, function (childCollectionNode) {\n        var _applyProps = applyProps(childCollectionNode),\n            filters = _applyProps.filters,\n            options = _applyProps.options;\n\n        storeHypernovaResults(childCollectionNode, userId);\n        hypernova(childCollectionNode, userId);\n    });\n}\n\nfunction hypernovaInit(collectionNode, userId) {\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var bypassFirewalls = config.bypassFirewalls || false;\n    var params = config.params || {};\n\n    var _applyProps2 = applyProps(collectionNode),\n        filters = _applyProps2.filters,\n        options = _applyProps2.options;\n\n    var collection = collectionNode.collection;\n    collectionNode.results = collection.find(filters, options, userId).fetch();\n    var userIdToPass = config.bypassFirewalls ? undefined : userId;\n    hypernova(collectionNode, userIdToPass);\n    prepareForDelivery(collectionNode, params);\n    return collectionNode.results;\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js"],"names":["module","export","hypernovaInit","applyProps","watch","require","v","prepareForDelivery","storeHypernovaResults","hypernova","collectionNode","userId","_","each","collectionNodes","childCollectionNode","filters","options","config","bypassFirewalls","params","collection","results","find","fetch","userIdToPass","undefined"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAAC,eAAQ;AAAA,eAAIC,aAAJ;AAAA;AAAT,CAAd;AAA2C,IAAIC,mBAAJ;AAAeH,OAAOI,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAAA,yBAASC,CAAT,EAAW;AAACH,qBAAWG,CAAX;AAAa;AAAzB,CAA7C,EAAwE,CAAxE;AAA2E,IAAIC,2BAAJ;AAAuBP,OAAOI,KAAP,CAAaC,QAAQ,8BAAR,CAAb,EAAqD;AAAA,yBAASC,CAAT,EAAW;AAACC,6BAAmBD,CAAnB;AAAqB;AAAjC,CAArD,EAAwF,CAAxF;AAA2F,IAAIE,8BAAJ;AAA0BR,OAAOI,KAAP,CAAaC,QAAQ,4BAAR,CAAb,EAAmD;AAAA,yBAASC,CAAT,EAAW;AAACE,gCAAsBF,CAAtB;AAAwB;AAApC,CAAnD,EAAyF,CAAzF;;AAIjR,SAASG,SAAT,CAAmBC,cAAnB,EAAmCC,MAAnC,EAA2C;AACvCC,MAAEC,IAAF,CAAOH,eAAeI,eAAtB,EAAuC,+BAAuB;AAAA,0BACjCX,WAAWY,mBAAX,CADiC;AAAA,YACrDC,OADqD,eACrDA,OADqD;AAAA,YAC5CC,OAD4C,eAC5CA,OAD4C;;AAG1DT,8BAAsBO,mBAAtB,EAA2CJ,MAA3C;AACAF,kBAAUM,mBAAV,EAA+BJ,MAA/B;AACH,KALD;AAMH;;AAEc,SAAST,aAAT,CAAuBQ,cAAvB,EAAuCC,MAAvC,EAA4D;AAAA,QAAbO,MAAa,uEAAJ,EAAI;AACvE,QAAMC,kBAAkBD,OAAOC,eAAP,IAA0B,KAAlD;AACA,QAAMC,SAASF,OAAOE,MAAP,IAAiB,EAAhC;;AAFuE,uBAI9CjB,WAAWO,cAAX,CAJ8C;AAAA,QAIlEM,OAJkE,gBAIlEA,OAJkE;AAAA,QAIzDC,OAJyD,gBAIzDA,OAJyD;;AAMvE,QAAMI,aAAaX,eAAeW,UAAlC;AAEAX,mBAAeY,OAAf,GAAyBD,WAAWE,IAAX,CAAgBP,OAAhB,EAAyBC,OAAzB,EAAkCN,MAAlC,EAA0Ca,KAA1C,EAAzB;AAEA,QAAMC,eAAgBP,OAAOC,eAAR,GAA2BO,SAA3B,GAAuCf,MAA5D;AACAF,cAAUC,cAAV,EAA0Be,YAA1B;AAEAlB,uBAAmBG,cAAnB,EAAmCU,MAAnC;AAEA,WAAOV,eAAeY,OAAtB;AACH","file":"packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js.map","sourcesContent":["import applyProps from '../lib/applyProps.js';\nimport prepareForDelivery from '../lib/prepareForDelivery.js';\nimport storeHypernovaResults from './storeHypernovaResults.js';\n\nfunction hypernova(collectionNode, userId) {\n    _.each(collectionNode.collectionNodes, childCollectionNode => {\n        let {filters, options} = applyProps(childCollectionNode);\n\n        storeHypernovaResults(childCollectionNode, userId);\n        hypernova(childCollectionNode, userId);\n    });\n}\n\nexport default function hypernovaInit(collectionNode, userId, config = {}) {\n    const bypassFirewalls = config.bypassFirewalls || false;\n    const params = config.params || {};\n\n    let {filters, options} = applyProps(collectionNode);\n\n    const collection = collectionNode.collection;\n\n    collectionNode.results = collection.find(filters, options, userId).fetch();\n\n    const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\n    hypernova(collectionNode, userIdToPass);\n\n    prepareForDelivery(collectionNode, params);\n\n    return collectionNode.results;\n}\n"]},"hash":"477c01528c67ba44e4e0a82cc260e04f488f398b"}
