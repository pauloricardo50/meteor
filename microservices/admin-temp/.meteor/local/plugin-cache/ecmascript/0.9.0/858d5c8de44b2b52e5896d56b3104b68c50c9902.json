{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","objectWithoutProperties","extends","defineProperty","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"../../api/cleanMethods","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"cleanMethod"}]},{"source":"../../config/constants","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"constants"}]},{"source":"../../config/colors","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"colors"}]},{"source":"../../utils/conversionFunctions","imported":["toNumber","toDecimalNumber"],"specifiers":[{"kind":"named","imported":"toNumber","local":"toNumber"},{"kind":"named","imported":"toDecimalNumber","local":"toDecimalNumber"}]},{"source":"../TextInput","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"MyTextInput"}]},{"source":"./ValidIcon","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ValidIcon"}]},{"source":"./FormValidator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"FormValidator"}]}],"exports":{"exported":["TextInput"],"specifiers":[{"kind":"local","local":"TextInput","exported":"default"}]}}},"options":{"filename":"imports/core/components/AutoForm/TextInput.jsx","filenameRelative":"imports/core/components/AutoForm/TextInput.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/AutoForm/TextInput.jsx.map","sourceFileName":"imports/core/components/AutoForm/TextInput.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TextInput"},"ignored":false,"code":"\"use strict\";\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  \"default\": function () {\n    function _default() {\n      return TextInput;\n    }\n\n    return _default;\n  }()\n});\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 0);\n\nvar React = void 0,\n    _Component = void 0;\n\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }(),\n  Component: function () {\n    function Component(v) {\n      _Component = v;\n    }\n\n    return Component;\n  }()\n}, 1);\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function () {\n    function Meteor(v) {\n      _Meteor = v;\n    }\n\n    return Meteor;\n  }()\n}, 2);\nvar cleanMethod = void 0;\nmodule.watch(require(\"../../api/cleanMethods\"), {\n  \"default\": function () {\n    function _default(v) {\n      cleanMethod = v;\n    }\n\n    return _default;\n  }()\n}, 3);\nvar constants = void 0;\nmodule.watch(require(\"../../config/constants\"), {\n  \"default\": function () {\n    function _default(v) {\n      constants = v;\n    }\n\n    return _default;\n  }()\n}, 4);\nvar colors = void 0;\nmodule.watch(require(\"../../config/colors\"), {\n  \"default\": function () {\n    function _default(v) {\n      colors = v;\n    }\n\n    return _default;\n  }()\n}, 5);\n\nvar _toNumber = void 0,\n    _toDecimalNumber = void 0;\n\nmodule.watch(require(\"../../utils/conversionFunctions\"), {\n  toNumber: function () {\n    function toNumber(v) {\n      _toNumber = v;\n    }\n\n    return toNumber;\n  }(),\n  toDecimalNumber: function () {\n    function toDecimalNumber(v) {\n      _toDecimalNumber = v;\n    }\n\n    return toDecimalNumber;\n  }()\n}, 6);\nvar MyTextInput = void 0;\nmodule.watch(require(\"../TextInput\"), {\n  \"default\": function () {\n    function _default(v) {\n      MyTextInput = v;\n    }\n\n    return _default;\n  }()\n}, 7);\nvar ValidIcon = void 0;\nmodule.watch(require(\"./ValidIcon\"), {\n  \"default\": function () {\n    function _default(v) {\n      ValidIcon = v;\n    }\n\n    return _default;\n  }()\n}, 8);\nvar FormValidator = void 0;\nmodule.watch(require(\"./FormValidator\"), {\n  \"default\": function () {\n    function _default(v) {\n      FormValidator = v;\n    }\n\n    return _default;\n  }()\n}, 9);\nvar styles = {\n  div: {\n    position: 'relative'\n  },\n  infoIcon: {\n    position: 'absolute',\n    bottom: 5,\n    left: -40,\n    padding: 10\n  },\n  savingIcon: {\n    position: 'absolute',\n    top: 16,\n    right: -25\n  },\n  infoStyle: {\n    color: colors.primary,\n    borderColor: colors.primary\n  }\n};\n\nvar TextInput = function (_Component2) {\n  (0, _inherits3.default)(TextInput, _Component2);\n\n  function TextInput(props) {\n    (0, _classCallCheck3.default)(this, TextInput);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (TextInput.__proto__ || Object.getPrototypeOf(TextInput)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var _props$inputProps = props.inputProps,\n        currentValue = _props$inputProps.currentValue,\n        number = _props$inputProps.number,\n        decimal = _props$inputProps.decimal;\n    _this.state = {\n      // Make sure 0 values are displayed properly\n      value: currentValue === 0 ? 0 : currentValue || '',\n      errorText: '',\n      saving: false,\n      showInfo: false\n    };\n\n    if (number) {\n      if (decimal) {\n        _this.formatter = _toDecimalNumber;\n      } else {\n        _this.formatter = _toNumber;\n      }\n    } else {\n      _this.formatter = function (v) {\n        return v;\n      };\n    }\n\n    return _this;\n  }\n\n  (0, _createClass3.default)(TextInput, [{\n    key: \"componentWillUnmount\",\n    value: function () {\n      function componentWillUnmount() {\n        _Meteor.clearTimeout(this.timeout);\n      }\n\n      return componentWillUnmount;\n    }()\n  }, {\n    key: \"render\",\n    value: function () {\n      function render() {\n        var _props = this.props,\n            _props$inputProps2 = _props.inputProps,\n            style = _props$inputProps2.style,\n            label = _props$inputProps2.label,\n            placeholder = _props$inputProps2.placeholder,\n            number = _props$inputProps2.number,\n            id = _props$inputProps2.id,\n            multiline = _props$inputProps2.multiline,\n            rows = _props$inputProps2.rows,\n            info = _props$inputProps2.info,\n            disabled = _props$inputProps2.disabled,\n            money = _props$inputProps2.money,\n            noValidator = _props$inputProps2.noValidator,\n            required = _props$inputProps2.required,\n            otherProps = (0, _objectWithoutProperties3.default)(_props$inputProps2, [\"style\", \"label\", \"placeholder\", \"number\", \"id\", \"multiline\", \"rows\", \"info\", \"disabled\", \"money\", \"noValidator\", \"required\"]),\n            admin = _props.admin;\n        var _state = this.state,\n            value = _state.value,\n            errorText = _state.errorText,\n            saving = _state.saving,\n            showInfo = _state.showInfo;\n        var type = void 0;\n\n        if (money) {\n          type = 'money';\n        } else if (number) {\n          type = 'number';\n        } else {\n          type = 'text';\n        }\n\n        return React.createElement(\n          \"div\",\n          {\n            style: (0, _extends3.default)({}, styles.div, style)\n          },\n          React.createElement(MyTextInput, (0, _extends3.default)({}, otherProps, {\n            label: label,\n            placeholder: placeholder,\n            value: value,\n            onChange: this.handleChange,\n            onBlur: this.handleBlur,\n            onFocus: this.handleFocus,\n            type: type,\n            id: id,\n            multiline: multiline,\n            rows: rows,\n            info: errorText || showInfo && info,\n            error: !!errorText,\n            disabled: disabled,\n            style: (0, _extends3.default)({\n              width: '100%'\n            }, style, {\n              marginBottom: 16\n            }),\n            noValidate: true,\n            fullWidth: true\n          })),\n          React.createElement(ValidIcon, {\n            saving: saving,\n            error: !!errorText,\n            style: styles.savingIcon,\n            value: value,\n            required: required,\n            hide: admin\n          }),\n          !noValidator && React.createElement(FormValidator, this.props)\n        );\n      }\n\n      return render;\n    }()\n  }]);\n  return TextInput;\n}(_Component);\n\nvar _initialiseProps = function () {\n  function _initialiseProps() {\n    var _this2 = this;\n\n    this.handleBlur = function () {\n      _this2.setState({\n        showInfo: false\n      }); // If the value has changed, save it\n      // state is initialized as '', but currentValue is initially undefined, so check that too\n\n\n      _this2.saveValue();\n    };\n\n    this.handleChange = function (_, value) {\n      // Make sure value is a number if this is a number or money input\n      // const safeValue =\n      //   this.props.number || this.props.money\n      //     ? toNumber(event.target.value)\n      //     : event.target.value;\n      _this2.setState({\n        value: value\n      }, function () {\n        // do not show saving icon when changing text, only show it on blur\n        if (_this2.props.saveOnChange) {\n          _this2.saveValue(false);\n        }\n      });\n    };\n\n    this.handleFocus = function () {\n      _this2.setState({\n        showInfo: true\n      });\n    };\n\n    this.saveValue = function () {\n      var showSaving = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var _props2 = _this2.props,\n          updateFunc = _props2.updateFunc,\n          docId = _props2.docId,\n          _props2$inputProps = _props2.inputProps,\n          id = _props2$inputProps.id,\n          currentValue = _props2$inputProps.currentValue;\n      var value = _this2.state.value; // Save data to DB\n\n      var object = (0, _defineProperty3.default)({}, id, value);\n\n      _Meteor.clearTimeout(_this2.timeout);\n\n      _this2.timeout = _Meteor.setTimeout(function () {\n        cleanMethod(updateFunc, {\n          object: object,\n          id: docId\n        }).then(function () {\n          return (// on success, set saving briefly to true, before setting it to false again to trigger icon\n            _this2.setState({\n              errorText: '',\n              saving: showSaving\n            }, _this2.setState({\n              saving: false\n            }))\n          );\n        }).catch(function () {\n          // If there was an error, reset value to the backend value\n          _this2.setState({\n            saving: false,\n            value: currentValue\n          });\n        });\n      }, constants.cpsLimit);\n    };\n  }\n\n  return _initialiseProps;\n}();\n\nTextInput.propTypes = {\n  currentValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  autocomplete: PropTypes.string,\n  rows: PropTypes.number,\n  docId: PropTypes.string.isRequired,\n  updateFunc: PropTypes.string,\n  info: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]),\n  number: PropTypes.bool,\n  decimal: PropTypes.bool,\n  money: PropTypes.bool,\n  inputStyle: PropTypes.objectOf(PropTypes.any),\n  floatingLabelFixed: PropTypes.bool,\n  saveOnChange: PropTypes.bool,\n  noValidator: PropTypes.bool,\n  inputProps: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.node.isRequired,\n    placeholder: PropTypes.node.isRequired,\n    style: PropTypes.objectOf(PropTypes.any),\n    multiline: PropTypes.bool,\n    disabled: PropTypes.bool\n  }).isRequired\n};\nTextInput.defaultProps = {\n  currentValue: '',\n  autocomplete: '',\n  rows: 1,\n  info: '',\n  number: false,\n  decimal: false,\n  money: false,\n  inputStyle: undefined,\n  updateFunc: 'updateLoan',\n  floatingLabelFixed: true,\n  saveOnChange: true,\n  noValidator: false\n};","map":{"version":3,"sources":["imports/core/components/AutoForm/TextInput.jsx"],"names":["module","export","TextInput","PropTypes","watch","require","v","React","Component","Meteor","cleanMethod","constants","colors","toNumber","toDecimalNumber","MyTextInput","ValidIcon","FormValidator","styles","div","position","infoIcon","bottom","left","padding","savingIcon","top","right","infoStyle","color","primary","borderColor","props","inputProps","currentValue","number","decimal","state","value","errorText","saving","showInfo","formatter","clearTimeout","timeout","style","label","placeholder","id","multiline","rows","info","disabled","money","noValidator","required","otherProps","admin","type","handleChange","handleBlur","handleFocus","width","marginBottom","setState","saveValue","_","saveOnChange","showSaving","updateFunc","docId","object","setTimeout","then","catch","cpsLimit","propTypes","oneOfType","string","autocomplete","isRequired","array","bool","inputStyle","objectOf","any","floatingLabelFixed","shape","node","defaultProps","undefined"],"mappings":"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","file":"imports/core/components/AutoForm/TextInput.jsx.map","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport cleanMethod from 'core/api/cleanMethods';\n\nimport constants from 'core/config/constants';\nimport colors from 'core/config/colors';\nimport { toNumber, toDecimalNumber } from 'core/utils/conversionFunctions';\n\nimport MyTextInput from 'core/components/TextInput';\n\nimport ValidIcon from './ValidIcon';\nimport FormValidator from './FormValidator';\n\nconst styles = {\n  div: {\n    position: 'relative',\n  },\n  infoIcon: {\n    position: 'absolute',\n    bottom: 5,\n    left: -40,\n    padding: 10,\n  },\n  savingIcon: {\n    position: 'absolute',\n    top: 16,\n    right: -25,\n  },\n  infoStyle: {\n    color: colors.primary,\n    borderColor: colors.primary,\n  },\n};\n\nexport default class TextInput extends Component {\n  constructor(props) {\n    super(props);\n\n    const { currentValue, number, decimal } = props.inputProps;\n\n    this.state = {\n      // Make sure 0 values are displayed properly\n      value: currentValue === 0 ? 0 : currentValue || '',\n      errorText: '',\n      saving: false,\n      showInfo: false,\n    };\n\n    if (number) {\n      if (decimal) {\n        this.formatter = toDecimalNumber;\n      } else {\n        this.formatter = toNumber;\n      }\n    } else {\n      this.formatter = v => v;\n    }\n  }\n\n  componentWillUnmount() {\n    Meteor.clearTimeout(this.timeout);\n  }\n\n  handleBlur = () => {\n    this.setState({ showInfo: false });\n    // If the value has changed, save it\n    // state is initialized as '', but currentValue is initially undefined, so check that too\n    this.saveValue();\n  };\n\n  handleChange = (_, value) => {\n    // Make sure value is a number if this is a number or money input\n    // const safeValue =\n    //   this.props.number || this.props.money\n    //     ? toNumber(event.target.value)\n    //     : event.target.value;\n\n    this.setState({ value }, () => {\n      // do not show saving icon when changing text, only show it on blur\n      if (this.props.saveOnChange) {\n        this.saveValue(false);\n      }\n    });\n  };\n\n  handleFocus = () => {\n    this.setState({ showInfo: true });\n  };\n\n  saveValue = (showSaving = true) => {\n    const { updateFunc, docId, inputProps: { id, currentValue } } = this.props;\n    const { value } = this.state;\n    // Save data to DB\n    const object = { [id]: value };\n\n    Meteor.clearTimeout(this.timeout);\n    this.timeout = Meteor.setTimeout(() => {\n      cleanMethod(updateFunc, { object, id: docId })\n        .then(() =>\n          // on success, set saving briefly to true, before setting it to false again to trigger icon\n          this.setState(\n            { errorText: '', saving: showSaving },\n            this.setState({ saving: false }),\n          ))\n        .catch(() => {\n          // If there was an error, reset value to the backend value\n          this.setState({ saving: false, value: currentValue });\n        });\n    }, constants.cpsLimit);\n  };\n\n  render() {\n    const {\n      inputProps: {\n        style,\n        label,\n        placeholder,\n        number,\n        id,\n        multiline,\n        rows,\n        info,\n        disabled,\n        money,\n        noValidator,\n        required,\n        ...otherProps\n      },\n      admin,\n    } = this.props;\n    const { value, errorText, saving, showInfo } = this.state;\n\n    let type;\n    if (money) {\n      type = 'money';\n    } else if (number) {\n      type = 'number';\n    } else {\n      type = 'text';\n    }\n\n    return (\n      <div style={{ ...styles.div, ...style }}>\n        <MyTextInput\n          {...otherProps}\n          label={label}\n          placeholder={placeholder}\n          value={value}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onFocus={this.handleFocus}\n          type={type}\n          id={id}\n          multiline={multiline}\n          rows={rows}\n          info={errorText || (showInfo && info)}\n          error={!!errorText}\n          disabled={disabled}\n          style={{ width: '100%', ...style, marginBottom: 16 }}\n          noValidate\n          fullWidth\n        />\n        <ValidIcon\n          saving={saving}\n          error={!!errorText}\n          style={styles.savingIcon}\n          value={value}\n          required={required}\n          hide={admin}\n        />\n        {!noValidator && <FormValidator {...this.props} />}\n      </div>\n    );\n  }\n}\n\nTextInput.propTypes = {\n  currentValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  autocomplete: PropTypes.string,\n  rows: PropTypes.number,\n  docId: PropTypes.string.isRequired,\n  updateFunc: PropTypes.string,\n  info: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  number: PropTypes.bool,\n  decimal: PropTypes.bool,\n  money: PropTypes.bool,\n  inputStyle: PropTypes.objectOf(PropTypes.any),\n  floatingLabelFixed: PropTypes.bool,\n  saveOnChange: PropTypes.bool,\n  noValidator: PropTypes.bool,\n  inputProps: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.node.isRequired,\n    placeholder: PropTypes.node.isRequired,\n    style: PropTypes.objectOf(PropTypes.any),\n    multiline: PropTypes.bool,\n    disabled: PropTypes.bool,\n  }).isRequired,\n};\n\nTextInput.defaultProps = {\n  currentValue: '',\n  autocomplete: '',\n  rows: 1,\n  info: '',\n  number: false,\n  decimal: false,\n  money: false,\n  inputStyle: undefined,\n  updateFunc: 'updateLoan',\n  floatingLabelFixed: true,\n  saveOnChange: true,\n  noValidator: false,\n};\n"]},"hash":"858d5c8de44b2b52e5896d56b3104b68c50c9902"}
