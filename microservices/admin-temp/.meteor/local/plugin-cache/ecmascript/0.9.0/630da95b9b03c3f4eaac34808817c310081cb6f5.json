{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../arrays/steps","imported":["personalInfoPercent","filesPercent"],"specifiers":[{"kind":"named","imported":"personalInfoPercent","local":"personalInfoPercent"},{"kind":"named","imported":"filesPercent","local":"filesPercent"}]},{"source":"../api/files/files","imported":["borrowerFiles"],"specifiers":[{"kind":"named","imported":"borrowerFiles","local":"borrowerFiles"}]},{"source":"./general","imported":["arrayify"],"specifiers":[{"kind":"named","imported":"arrayify","local":"arrayify"}]}],"exports":{"exported":["getFortune","getInsuranceFortune","getBorrowerCompletion","getBonusIncome","getArrayValues","getOtherIncome","getExpenses","getBorrowerIncome","getTotalFortune","getRealEstateFortune","getRealEstateValue","getRealEstateDebt","getBorrowerSalary"],"specifiers":[{"kind":"local","local":"getFortune","exported":"getFortune"},{"kind":"local","local":"getInsuranceFortune","exported":"getInsuranceFortune"},{"kind":"local","local":"getBorrowerCompletion","exported":"getBorrowerCompletion"},{"kind":"local","local":"getBonusIncome","exported":"getBonusIncome"},{"kind":"local","local":"getArrayValues","exported":"getArrayValues"},{"kind":"local","local":"getOtherIncome","exported":"getOtherIncome"},{"kind":"local","local":"getExpenses","exported":"getExpenses"},{"kind":"local","local":"getBorrowerIncome","exported":"getBorrowerIncome"},{"kind":"local","local":"getTotalFortune","exported":"getTotalFortune"},{"kind":"local","local":"getRealEstateFortune","exported":"getRealEstateFortune"},{"kind":"local","local":"getRealEstateValue","exported":"getRealEstateValue"},{"kind":"local","local":"getRealEstateDebt","exported":"getRealEstateDebt"},{"kind":"local","local":"getBorrowerSalary","exported":"getBorrowerSalary"}]}}},"options":{"filename":"imports/core/utils/borrowerFunctions.js","filenameRelative":"imports/core/utils/borrowerFunctions.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/utils/borrowerFunctions.js.map","sourceFileName":"imports/core/utils/borrowerFunctions.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"borrowerFunctions"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.export({\n  getFortune: function () {\n    function getFortune() {\n      return _getFortune;\n    }\n\n    return getFortune;\n  }(),\n  getInsuranceFortune: function () {\n    function getInsuranceFortune() {\n      return _getInsuranceFortune;\n    }\n\n    return getInsuranceFortune;\n  }(),\n  getBorrowerCompletion: function () {\n    function getBorrowerCompletion() {\n      return _getBorrowerCompletion;\n    }\n\n    return getBorrowerCompletion;\n  }(),\n  getBonusIncome: function () {\n    function getBonusIncome() {\n      return _getBonusIncome;\n    }\n\n    return getBonusIncome;\n  }(),\n  getArrayValues: function () {\n    function getArrayValues() {\n      return _getArrayValues;\n    }\n\n    return getArrayValues;\n  }(),\n  getOtherIncome: function () {\n    function getOtherIncome() {\n      return _getOtherIncome;\n    }\n\n    return getOtherIncome;\n  }(),\n  getExpenses: function () {\n    function getExpenses() {\n      return _getExpenses;\n    }\n\n    return getExpenses;\n  }(),\n  getBorrowerIncome: function () {\n    function getBorrowerIncome() {\n      return _getBorrowerIncome;\n    }\n\n    return getBorrowerIncome;\n  }(),\n  getTotalFortune: function () {\n    function getTotalFortune() {\n      return _getTotalFortune;\n    }\n\n    return getTotalFortune;\n  }(),\n  getRealEstateFortune: function () {\n    function getRealEstateFortune() {\n      return _getRealEstateFortune;\n    }\n\n    return getRealEstateFortune;\n  }(),\n  getRealEstateValue: function () {\n    function getRealEstateValue() {\n      return _getRealEstateValue;\n    }\n\n    return getRealEstateValue;\n  }(),\n  getRealEstateDebt: function () {\n    function getRealEstateDebt() {\n      return _getRealEstateDebt;\n    }\n\n    return getRealEstateDebt;\n  }(),\n  getBorrowerSalary: function () {\n    function getBorrowerSalary() {\n      return _getBorrowerSalary;\n    }\n\n    return getBorrowerSalary;\n  }()\n});\n\nvar _personalInfoPercent = void 0,\n    _filesPercent = void 0;\n\nmodule.watch(require(\"../arrays/steps\"), {\n  personalInfoPercent: function () {\n    function personalInfoPercent(v) {\n      _personalInfoPercent = v;\n    }\n\n    return personalInfoPercent;\n  }(),\n  filesPercent: function () {\n    function filesPercent(v) {\n      _filesPercent = v;\n    }\n\n    return filesPercent;\n  }()\n}, 0);\n\nvar _borrowerFiles = void 0;\n\nexports.getFortune = _getFortune;\nmodule.watch(require(\"../api/files/files\"), {\n  borrowerFiles: function () {\n    function borrowerFiles(v) {\n      _borrowerFiles = v;\n    }\n\n    return borrowerFiles;\n  }()\n}, 1);\n\nvar _arrayify = void 0;\n\nmodule.watch(require(\"./general\"), {\n  arrayify: function () {\n    function arrayify(v) {\n      _arrayify = v;\n    }\n\n    return arrayify;\n  }()\n}, 2);\n\nvar _getFortune = function () {\n  function _getFortune(_ref) {\n    var borrowers = _ref.borrowers;\n    var array = [];\n\n    _arrayify(borrowers).forEach(function (b) {\n      array.push(b.bankFortune);\n    });\n\n    return array.reduce(function (tot, val) {\n      return val > 0 && tot + val || tot;\n    }, 0);\n  }\n\n  return _getFortune;\n}();\n\nvar _getInsuranceFortune = function () {\n  function _getInsuranceFortune(_ref2) {\n    var borrowers = _ref2.borrowers;\n    var array = [];\n\n    _arrayify(borrowers).forEach(function (b) {\n      array.push(b.insuranceSecondPillar);\n      array.push(b.insuranceThirdPillar);\n    });\n\n    return array.reduce(function (tot, val) {\n      return val > 0 && tot + val || tot;\n    }, 0);\n  }\n\n  return _getInsuranceFortune;\n}();\n\nvar _getBorrowerCompletion = function () {\n  function _getBorrowerCompletion(_ref3) {\n    var borrower = _ref3.borrower;\n    return (_filesPercent([borrower], _borrowerFiles, 'auction') + _personalInfoPercent([borrower]) + (borrower.logic.hasValidatedFinances ? 1 : 0)) / 3;\n  }\n\n  return _getBorrowerCompletion;\n}();\n\nvar _getBonusIncome = function () {\n  function _getBonusIncome(_ref4) {\n    var borrowers = _ref4.borrowers;\n    var total = 0;\n\n    _arrayify(borrowers).forEach(function (borrower) {\n      if (borrower.bonus) {\n        var arr = Object.keys(borrower.bonus).map(function (key) {\n          return borrower.bonus[key];\n        });\n\n        if (arr.length < 1) {\n          return;\n        } else if (arr.length > 4) {\n          throw new Error('too many bonuses provided');\n        }\n\n        arr = arr.map(function (v) {\n          return v || 0;\n        }); // Sum all values, remove the lowest one, and return 50% of their average\n\n        var sum = arr.reduce(function (tot, val) {\n          return tot + val;\n        }, 0);\n\n        if (arr.length > 3) {\n          sum -= Math.min.apply(Math, _toConsumableArray(arr));\n        }\n\n        total = 0.5 * (sum / Math.min(3, arr.length)) || 0;\n      }\n    });\n\n    return Math.max(0, Math.round(total));\n  }\n\n  return _getBonusIncome;\n}();\n\nvar _getArrayValues = function () {\n  function _getArrayValues(_ref5, key, mapFunc) {\n    var borrowers = _ref5.borrowers;\n    var sum = 0;\n\n    _arrayify(borrowers).forEach(function (borrower) {\n      if (!borrower[key]) {\n        return 0;\n      }\n\n      sum += [].concat(_toConsumableArray(borrower[key] ? borrower[key].map(mapFunc || function (i) {\n        return i.value;\n      }) : [])).reduce(function (tot, val) {\n        return val > 0 && tot + val || tot;\n      }, 0);\n    });\n\n    return Math.max(0, Math.round(sum));\n  }\n\n  return _getArrayValues;\n}();\n\nvar _getOtherIncome = function () {\n  function _getOtherIncome(_ref6) {\n    var borrowers = _ref6.borrowers;\n    return _getArrayValues({\n      borrowers: borrowers\n    }, 'otherIncome');\n  }\n\n  return _getOtherIncome;\n}();\n\nvar _getExpenses = function () {\n  function _getExpenses(_ref7) {\n    var borrowers = _ref7.borrowers;\n    return _getArrayValues({\n      borrowers: borrowers\n    }, 'expenses');\n  }\n\n  return _getExpenses;\n}();\n\nvar _getBorrowerIncome = function () {\n  function _getBorrowerIncome(_ref8) {\n    var borrowers = _ref8.borrowers;\n    var sum = 0;\n\n    _arrayify(borrowers).forEach(function (borrower) {\n      sum += borrower.salary || 0;\n      sum += _getBonusIncome({\n        borrowers: borrower\n      }) || 0;\n      sum += _getOtherIncome({\n        borrowers: borrower\n      }) || 0;\n      sum -= _getExpenses({\n        borrowers: borrower\n      }) || 0;\n    });\n\n    return Math.max(sum, 0);\n  }\n\n  return _getBorrowerIncome;\n}();\n\nvar _getTotalFortune = function () {\n  function _getTotalFortune(_ref9) {\n    var borrowers = _ref9.borrowers;\n    var sum = 0;\n\n    _arrayify(borrowers).forEach(function (borrower) {\n      sum += borrower.bankFortune || 0;\n      sum += borrower.insuranceSecondPillar || 0;\n      sum += borrower.insuranceThirdPillar || 0; // TODO: Complete with all fortune fields !!\n    });\n\n    return Math.max(0, Math.round(sum));\n  }\n\n  return _getTotalFortune;\n}();\n\nvar _getRealEstateFortune = function () {\n  function _getRealEstateFortune(_ref10) {\n    var borrowers = _ref10.borrowers;\n    return _getArrayValues({\n      borrowers: borrowers\n    }, 'realEstate', function (i) {\n      return i.value - i.loan;\n    });\n  }\n\n  return _getRealEstateFortune;\n}();\n\nvar _getRealEstateValue = function () {\n  function _getRealEstateValue(_ref11) {\n    var borrowers = _ref11.borrowers;\n    return _getArrayValues({\n      borrowers: borrowers\n    }, 'realEstate');\n  }\n\n  return _getRealEstateValue;\n}();\n\nvar _getRealEstateDebt = function () {\n  function _getRealEstateDebt(_ref12) {\n    var borrowers = _ref12.borrowers;\n    return _getArrayValues({\n      borrowers: borrowers\n    }, 'realEstate', function (i) {\n      return i.loan;\n    });\n  }\n\n  return _getRealEstateDebt;\n}();\n\nvar _getBorrowerSalary = function () {\n  function _getBorrowerSalary(_ref13) {\n    var borrowers = _ref13.borrowers;\n    return _arrayify(borrowers).reduce(function (t, b) {\n      return t + (b.salary || 0);\n    }, 0);\n  }\n\n  return _getBorrowerSalary;\n}();","map":{"version":3,"sources":["imports/core/utils/borrowerFunctions.js"],"names":["module","export","getFortune","getInsuranceFortune","getBorrowerCompletion","getBonusIncome","getArrayValues","getOtherIncome","getExpenses","getBorrowerIncome","getTotalFortune","getRealEstateFortune","getRealEstateValue","getRealEstateDebt","getBorrowerSalary","personalInfoPercent","filesPercent","watch","require","v","borrowerFiles","arrayify","borrowers","array","forEach","b","push","bankFortune","reduce","tot","val","insuranceSecondPillar","insuranceThirdPillar","borrower","logic","hasValidatedFinances","total","bonus","arr","Object","keys","map","key","length","Error","sum","Math","min","max","round","mapFunc","i","value","salary","loan","t"],"mappings":"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","file":"imports/core/utils/borrowerFunctions.js.map","sourcesContent":["import { personalInfoPercent, filesPercent } from '../arrays/steps';\nimport { borrowerFiles } from '../api/files/files';\nimport { arrayify } from './general';\n\nexport const getFortune = ({ borrowers }) => {\n  const array = [];\n\n  arrayify(borrowers).forEach((b) => {\n    array.push(b.bankFortune);\n  });\n  return array.reduce((tot, val) => (val > 0 && tot + val) || tot, 0);\n};\n\nexport const getInsuranceFortune = ({ borrowers }) => {\n  const array = [];\n\n  arrayify(borrowers).forEach((b) => {\n    array.push(b.insuranceSecondPillar);\n    array.push(b.insuranceThirdPillar);\n  });\n  return array.reduce((tot, val) => (val > 0 && tot + val) || tot, 0);\n};\n\nexport const getBorrowerCompletion = ({ borrower }) =>\n  (filesPercent([borrower], borrowerFiles, 'auction') +\n    personalInfoPercent([borrower]) +\n    (borrower.logic.hasValidatedFinances ? 1 : 0)) /\n  3;\n\nexport const getBonusIncome = ({ borrowers }) => {\n  let total = 0;\n  arrayify(borrowers).forEach((borrower) => {\n    if (borrower.bonus) {\n      let arr = Object.keys(borrower.bonus).map(key => borrower.bonus[key]);\n      if (arr.length < 1) {\n        return;\n      } else if (arr.length > 4) {\n        throw new Error('too many bonuses provided');\n      }\n\n      arr = arr.map(v => v || 0);\n      // Sum all values, remove the lowest one, and return 50% of their average\n      let sum = arr.reduce((tot, val) => tot + val, 0);\n\n      if (arr.length > 3) {\n        sum -= Math.min(...arr);\n      }\n      total = 0.5 * (sum / Math.min(3, arr.length)) || 0;\n    }\n  });\n\n  return Math.max(0, Math.round(total));\n};\n\nexport const getArrayValues = ({ borrowers }, key, mapFunc) => {\n  let sum = 0;\n\n  arrayify(borrowers).forEach((borrower) => {\n    if (!borrower[key]) {\n      return 0;\n    }\n    sum += [\n      ...(borrower[key] ? borrower[key].map(mapFunc || (i => i.value)) : []),\n    ].reduce((tot, val) => (val > 0 && tot + val) || tot, 0);\n  });\n\n  return Math.max(0, Math.round(sum));\n};\n\nexport const getOtherIncome = ({ borrowers }) =>\n  getArrayValues({ borrowers }, 'otherIncome');\n\nexport const getExpenses = ({ borrowers }) =>\n  getArrayValues({ borrowers }, 'expenses');\n\nexport const getBorrowerIncome = ({ borrowers }) => {\n  let sum = 0;\n\n  arrayify(borrowers).forEach((borrower) => {\n    sum += borrower.salary || 0;\n    sum += getBonusIncome({ borrowers: borrower }) || 0;\n    sum += getOtherIncome({ borrowers: borrower }) || 0;\n    sum -= getExpenses({ borrowers: borrower }) || 0;\n  });\n\n  return Math.max(sum, 0);\n};\n\nexport const getTotalFortune = ({ borrowers }) => {\n  let sum = 0;\n\n  arrayify(borrowers).forEach((borrower) => {\n    sum += borrower.bankFortune || 0;\n    sum += borrower.insuranceSecondPillar || 0;\n    sum += borrower.insuranceThirdPillar || 0;\n\n    // TODO: Complete with all fortune fields !!\n  });\n\n  return Math.max(0, Math.round(sum));\n};\n\nexport const getRealEstateFortune = ({ borrowers }) =>\n  getArrayValues({ borrowers }, 'realEstate', i => i.value - i.loan);\n\nexport const getRealEstateValue = ({ borrowers }) =>\n  getArrayValues({ borrowers }, 'realEstate');\n\nexport const getRealEstateDebt = ({ borrowers }) =>\n  getArrayValues({ borrowers }, 'realEstate', i => i.loan);\n\nexport const getBorrowerSalary = ({ borrowers }) =>\n  arrayify(borrowers).reduce((t, b) => t + (b.salary || 0), 0);\n"]},"hash":"630da95b9b03c3f4eaac34808817c310081cb6f5"}
