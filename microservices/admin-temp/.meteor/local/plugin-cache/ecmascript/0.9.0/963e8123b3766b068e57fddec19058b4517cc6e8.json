{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"simpl-schema","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SimpleSchema"}]},{"source":"./adminActionConstants","imported":["ADMIN_ACTION_TYPE","ADMIN_ACTION_STATUS"],"specifiers":[{"kind":"named","imported":"ADMIN_ACTION_TYPE","local":"ADMIN_ACTION_TYPE"},{"kind":"named","imported":"ADMIN_ACTION_STATUS","local":"ADMIN_ACTION_STATUS"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/adminActions/adminActions.js","filenameRelative":"imports/core/api/adminActions/adminActions.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/adminActions/adminActions.js.map","sourceFileName":"imports/core/api/adminActions/adminActions.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"adminActions"},"ignored":false,"code":"\"use strict\";\n\nvar _Mongo = void 0;\n\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function () {\n    function Mongo(v) {\n      _Mongo = v;\n    }\n\n    return Mongo;\n  }()\n}, 0);\nvar SimpleSchema = void 0;\nmodule.watch(require(\"simpl-schema\"), {\n  \"default\": function () {\n    function _default(v) {\n      SimpleSchema = v;\n    }\n\n    return _default;\n  }()\n}, 1);\n\nvar _ADMIN_ACTION_TYPE = void 0,\n    _ADMIN_ACTION_STATUS = void 0;\n\nmodule.watch(require(\"./adminActionConstants\"), {\n  ADMIN_ACTION_TYPE: function () {\n    function ADMIN_ACTION_TYPE(v) {\n      _ADMIN_ACTION_TYPE = v;\n    }\n\n    return ADMIN_ACTION_TYPE;\n  }(),\n  ADMIN_ACTION_STATUS: function () {\n    function ADMIN_ACTION_STATUS(v) {\n      _ADMIN_ACTION_STATUS = v;\n    }\n\n    return ADMIN_ACTION_STATUS;\n  }()\n}, 2);\nvar AdminActions = new _Mongo.Collection('adminActions'); // Action types\n// 'verify'\n// 'auction'\n// 'lenderChosen'\n// Prevent all client side modifications of mongoDB\n\nAdminActions.deny({\n  insert: function () {\n    function insert() {\n      return true;\n    }\n\n    return insert;\n  }(),\n  update: function () {\n    function update() {\n      return true;\n    }\n\n    return update;\n  }(),\n  remove: function () {\n    function remove() {\n      return true;\n    }\n\n    return remove;\n  }()\n});\nAdminActions.allow({\n  insert: function () {\n    function insert() {\n      return false;\n    }\n\n    return insert;\n  }(),\n  update: function () {\n    function update() {\n      return false;\n    }\n\n    return update;\n  }(),\n  remove: function () {\n    function remove() {\n      return false;\n    }\n\n    return remove;\n  }()\n});\nvar AdminActionSchema = new SimpleSchema({\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      function autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        }\n      }\n\n      return autoValue;\n    }()\n  },\n  status: {\n    type: String,\n    defaultValue: _ADMIN_ACTION_STATUS.ACTIVE,\n    allowedValues: Object.values(_ADMIN_ACTION_STATUS)\n  },\n  completedAt: {\n    type: Date,\n    optional: true\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(_ADMIN_ACTION_TYPE)\n  },\n  loanId: String,\n  staffId: {\n    type: String,\n    optional: true\n  },\n  extra: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  },\n  notes: {\n    type: String,\n    optional: true\n  }\n});\nAdminActions.attachSchema(AdminActionSchema);\nmodule.exportDefault(AdminActions);","map":{"version":3,"sources":["imports/core/api/adminActions/adminActions.js"],"names":["Mongo","module","watch","require","v","SimpleSchema","ADMIN_ACTION_TYPE","ADMIN_ACTION_STATUS","AdminActions","Collection","deny","insert","update","remove","allow","AdminActionSchema","createdAt","type","Date","autoValue","isInsert","status","String","defaultValue","ACTIVE","allowedValues","Object","values","completedAt","optional","loanId","staffId","extra","blackbox","notes","attachSchema","exportDefault"],"mappings":";;AAAA,IAAIA,eAAJ;;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACH,OAAD;AAAA,mBAAOI,CAAP,EAAS;AAACJ,eAAMI,CAAN;AAAQ;;AAAlB;AAAA;AAAA,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,qBAAJ;AAAiBJ,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACC,qBAAaD,CAAb;AAAe;;AAA3B;AAAA;AAAA,CAArC,EAAkE,CAAlE;;AAAqE,IAAIE,2BAAJ;AAAA,IAAsBC,6BAAtB;;AAA0CN,OAAOC,KAAP,CAAaC,QAAQ,wBAAR,CAAb,EAA+C;AAACG,mBAAD;AAAA,+BAAmBF,CAAnB,EAAqB;AAACE,2BAAkBF,CAAlB;AAAoB;;AAA1C;AAAA;AAA2CG,qBAA3C;AAAA,iCAA+DH,CAA/D,EAAiE;AAACG,6BAAoBH,CAApB;AAAsB;;AAAxF;AAAA;AAAA,CAA/C,EAAyI,CAAzI;AAItM,IAAMI,eAAe,IAAIR,OAAMS,UAAV,CAAqB,cAArB,CAArB,C,CAEA;AACA;AACA;AACA;AAEA;;AACAD,aAAaE,IAAb,CAAkB;AAChBC;AAAQ;AAAA,aAAM,IAAN;AAAA;;AAAR;AAAA,KADgB;AAEhBC;AAAQ;AAAA,aAAM,IAAN;AAAA;;AAAR;AAAA,KAFgB;AAGhBC;AAAQ;AAAA,aAAM,IAAN;AAAA;;AAAR;AAAA;AAHgB,CAAlB;AAMAL,aAAaM,KAAb,CAAmB;AACjBH;AAAQ;AAAA,aAAM,KAAN;AAAA;;AAAR;AAAA,KADiB;AAEjBC;AAAQ;AAAA,aAAM,KAAN;AAAA;;AAAR;AAAA,KAFiB;AAGjBC;AAAQ;AAAA,aAAM,KAAN;AAAA;;AAAR;AAAA;AAHiB,CAAnB;AAMA,IAAME,oBAAoB,IAAIV,YAAJ,CAAiB;AACzCW,aAAW;AACTC,UAAMC,IADG;AAETC,aAFS;AAAA,2BAEG;AACV,YAAI,KAAKC,QAAT,EAAmB;AACjB,iBAAO,IAAIF,IAAJ,EAAP;AACD;AACF;;AANQ;AAAA;AAAA,GAD8B;AASzCG,UAAQ;AACNJ,UAAMK,MADA;AAENC,kBAAchB,qBAAoBiB,MAF5B;AAGNC,mBAAeC,OAAOC,MAAP,CAAcpB,oBAAd;AAHT,GATiC;AAczCqB,eAAa;AACXX,UAAMC,IADK;AAEXW,cAAU;AAFC,GAd4B;AAkBzCZ,QAAM;AACJA,UAAMK,MADF;AAEJG,mBAAeC,OAAOC,MAAP,CAAcrB,kBAAd;AAFX,GAlBmC;AAsBzCwB,UAAQR,MAtBiC;AAuBzCS,WAAS;AACPd,UAAMK,MADC;AAEPO,cAAU;AAFH,GAvBgC;AA2BzCG,SAAO;AACLf,UAAMS,MADD;AAELG,cAAU,IAFL;AAGLI,cAAU;AAHL,GA3BkC;AAgCzCC,SAAO;AACLjB,UAAMK,MADD;AAELO,cAAU;AAFL;AAhCkC,CAAjB,CAA1B;AAsCArB,aAAa2B,YAAb,CAA0BpB,iBAA1B;AA9DAd,OAAOmC,aAAP,CA+De5B,YA/Df","file":"imports/core/api/adminActions/adminActions.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\nimport { ADMIN_ACTION_TYPE, ADMIN_ACTION_STATUS } from './adminActionConstants';\n\nconst AdminActions = new Mongo.Collection('adminActions');\n\n// Action types\n// 'verify'\n// 'auction'\n// 'lenderChosen'\n\n// Prevent all client side modifications of mongoDB\nAdminActions.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nAdminActions.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nconst AdminActionSchema = new SimpleSchema({\n  createdAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      }\n    },\n  },\n  status: {\n    type: String,\n    defaultValue: ADMIN_ACTION_STATUS.ACTIVE,\n    allowedValues: Object.values(ADMIN_ACTION_STATUS),\n  },\n  completedAt: {\n    type: Date,\n    optional: true,\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(ADMIN_ACTION_TYPE),\n  },\n  loanId: String,\n  staffId: {\n    type: String,\n    optional: true,\n  },\n  extra: {\n    type: Object,\n    optional: true,\n    blackbox: true,\n  },\n  notes: {\n    type: String,\n    optional: true,\n  },\n});\n\nAdminActions.attachSchema(AdminActionSchema);\nexport default AdminActions;\n"]},"hash":"963e8123b3766b068e57fddec19058b4517cc6e8"}
