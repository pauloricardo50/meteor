{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"../../../core/components/DropdownMenu","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"DropdownMenu"}]},{"source":"../../../core/api","imported":["callMutation","mutations"],"specifiers":[{"kind":"named","imported":"callMutation","local":"callMutation"},{"kind":"named","imported":"mutations","local":"mutations"}]},{"source":"../../../core/api/tasks/tasksConstants","imported":["TASK_STATUS"],"specifiers":[{"kind":"named","imported":"TASK_STATUS","local":"TASK_STATUS"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","filenameRelative":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourceFileName":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TasksAssignedUserDropdown"},"ignored":false,"code":"\"use strict\";\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function () {\n    function Meteor(v) {\n      _Meteor = v;\n    }\n\n    return Meteor;\n  }()\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar DropdownMenu = void 0;\nmodule.watch(require(\"../../../core/components/DropdownMenu\"), {\n  \"default\": function () {\n    function _default(v) {\n      DropdownMenu = v;\n    }\n\n    return _default;\n  }()\n}, 2);\n\nvar _callMutation = void 0,\n    _mutations = void 0;\n\nmodule.watch(require(\"../../../core/api\"), {\n  callMutation: function () {\n    function callMutation(v) {\n      _callMutation = v;\n    }\n\n    return callMutation;\n  }(),\n  mutations: function () {\n    function mutations(v) {\n      _mutations = v;\n    }\n\n    return mutations;\n  }()\n}, 3);\n\nvar _TASK_STATUS = void 0;\n\nmodule.watch(require(\"../../../core/api/tasks/tasksConstants\"), {\n  TASK_STATUS: function () {\n    function TASK_STATUS(v) {\n      _TASK_STATUS = v;\n    }\n\n    return TASK_STATUS;\n  }()\n}, 4);\n\nvar changeAssignedUser = function () {\n  function changeAssignedUser(_ref) {\n    var user = _ref.user,\n        taskId = _ref.taskId,\n        taskUserId = _ref.taskUserId,\n        initialAssignment = _ref.initialAssignment;\n\n    if (initialAssignment && taskUserId) {\n      _callMutation(_mutations.ASSIGN_ADMIN_TO_USER, {\n        assignedTo: user._id,\n        userId: taskUserId\n      }).then(_callMutation(_mutations.TASK_CHANGE_STATUS, {\n        taskId: taskId,\n        status: _TASK_STATUS.COMPLETED\n      }));\n    } else {\n      _callMutation(_mutations.TASK_CHANGE_USER, {\n        taskId: taskId,\n        newUser: user._id\n      });\n    }\n  }\n\n  return changeAssignedUser;\n}();\n\nvar getMenuItems = function () {\n  function getMenuItems(users, taskAssignedTo, taskId, taskUserId, initialAssignment) {\n    var options = users.map(function (user) {\n      return {\n        id: user._id,\n        show: user._id !== taskAssignedTo,\n        // role\n        label: user.emails[0].address,\n        link: false,\n        onClick: function () {\n          function onClick() {\n            changeAssignedUser({\n              user: user,\n              taskId: taskId,\n              taskUserId: taskUserId,\n              initialAssignment: initialAssignment\n            });\n          }\n\n          return onClick;\n        }()\n      };\n    });\n    return options;\n  }\n\n  return getMenuItems;\n}();\n\nvar TasksAssignedUserDropdown = function () {\n  function TasksAssignedUserDropdown(props) {\n    // const { data, isLoading, error, taskId, taskUser, styles } = props;\n    var data = props.data,\n        isLoading = props.isLoading,\n        error = props.error,\n        taskId = props.taskId,\n        taskAssignedTo = props.taskAssignedTo,\n        taskUserId = props.taskUserId,\n        initialAssignment = props.initialAssignment,\n        styles = props.styles;\n\n    if (isLoading) {\n      return null;\n    }\n\n    if (error) {\n      return React.createElement(\n        \"div\",\n        null,\n        \"Error: \",\n        error.reason\n      );\n    }\n\n    return React.createElement(DropdownMenu, {\n      iconType: \"personAdd\",\n      options: getMenuItems(data, taskAssignedTo, taskId, taskUserId, initialAssignment),\n      style: styles\n    });\n  }\n\n  return TasksAssignedUserDropdown;\n}();\n\nmodule.exportDefault(TasksAssignedUserDropdown);","map":{"version":3,"sources":["imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx"],"names":["Meteor","module","watch","require","v","React","DropdownMenu","callMutation","mutations","TASK_STATUS","changeAssignedUser","user","taskId","taskUserId","initialAssignment","ASSIGN_ADMIN_TO_USER","assignedTo","_id","userId","then","TASK_CHANGE_STATUS","status","COMPLETED","TASK_CHANGE_USER","newUser","getMenuItems","users","taskAssignedTo","options","map","id","show","label","emails","address","link","onClick","TasksAssignedUserDropdown","props","data","isLoading","error","styles","reason","exportDefault"],"mappings":"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","file":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport DropdownMenu from 'core/components/DropdownMenu/';\nimport { callMutation, mutations } from 'core/api';\nimport { TASK_STATUS } from 'core/api/tasks/tasksConstants';\n\nconst changeAssignedUser = ({\n  user,\n  taskId,\n  taskUserId,\n  initialAssignment,\n}) => {\n  if (initialAssignment && taskUserId) {\n    callMutation(mutations.ASSIGN_ADMIN_TO_USER, {\n      assignedTo: user._id,\n      userId: taskUserId,\n    }).then(callMutation(mutations.TASK_CHANGE_STATUS, {\n      taskId,\n      status: TASK_STATUS.COMPLETED,\n    }));\n  } else {\n    callMutation(mutations.TASK_CHANGE_USER, {\n      taskId,\n      newUser: user._id,\n    });\n  }\n};\n\nconst getMenuItems = (\n  users,\n  taskAssignedTo,\n  taskId,\n  taskUserId,\n  initialAssignment,\n) => {\n  const options = users.map(user => ({\n    id: user._id,\n    show: user._id !== taskAssignedTo, // role\n    label: user.emails[0].address,\n    link: false,\n    onClick: () => {\n      changeAssignedUser({ user, taskId, taskUserId, initialAssignment });\n    },\n  }));\n  return options;\n};\n\nconst TasksAssignedUserDropdown = (props) => {\n  // const { data, isLoading, error, taskId, taskUser, styles } = props;\n  const {\n    data,\n    isLoading,\n    error,\n    taskId,\n    taskAssignedTo,\n    taskUserId,\n    initialAssignment,\n    styles,\n  } = props;\n\n  if (isLoading) {\n    return null;\n  }\n  if (error) {\n    return <div>Error: {error.reason}</div>;\n  }\n\n  return (\n    <DropdownMenu\n      iconType=\"personAdd\"\n      options={getMenuItems(\n        data,\n        taskAssignedTo,\n        taskId,\n        taskUserId,\n        initialAssignment,\n      )}\n      style={styles}\n    />\n  );\n};\n\nexport default TasksAssignedUserDropdown;\n"]},"hash":"43eac4a1387a6cb5ebf5bd856b22455eb73229e3"}
