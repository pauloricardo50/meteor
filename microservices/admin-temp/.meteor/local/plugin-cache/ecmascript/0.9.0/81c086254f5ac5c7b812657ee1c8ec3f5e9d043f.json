{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"../Translation","imported":["T"],"specifiers":[{"kind":"named","imported":"T","local":"T"}]},{"source":"../Button","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Button"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/UploaderArray/FileAdder.jsx","filenameRelative":"imports/core/components/UploaderArray/FileAdder.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/UploaderArray/FileAdder.jsx.map","sourceFileName":"imports/core/components/UploaderArray/FileAdder.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"FileAdder"},"ignored":false,"code":"\"use strict\";\n\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 1);\n\nvar _T = void 0;\n\nmodule.watch(require(\"../Translation\"), {\n  T: function T(v) {\n    _T = v;\n  }\n}, 2);\nvar Button = void 0;\nmodule.watch(require(\"../Button\"), {\n  default: function _default(v) {\n    Button = v;\n  }\n}, 3);\nvar styles = {\n  input: {\n    width: 0.1,\n    height: 0.1,\n    opacity: 0,\n    overflow: 'hidden',\n    position: 'absolute',\n    zIndex: -1\n  },\n  label: {\n    cursor: 'pointer',\n    paddingTop: 8\n  }\n};\n\nvar FileAdder = function FileAdder(_ref) {\n  var docId = _ref.docId,\n      id = _ref.id,\n      handleAddFiles = _ref.handleAddFiles;\n  return React.createElement(\n    \"a\",\n    null,\n    React.createElement(\"input\", {\n      type: \"file\",\n      id: id,\n      style: styles.input,\n      multiple: true // Do Array.from to extract file from the FileList object\n      ,\n      onChange: function onChange(_ref2) {\n        var files = _ref2.target.files;\n        return handleAddFiles(Array.from(files));\n      } // This piece of shit is important or inputs will get mixed up...\n      ,\n      key: docId + id\n    }),\n    React.createElement(\n      Button,\n      {\n        htmlFor: id,\n        style: styles.label,\n        primary: true,\n        component: \"label\"\n      },\n      React.createElement(_T, {\n        id: \"FileAdder.title\"\n      })\n    )\n  );\n};\n\nFileAdder.propTypes = {\n  handleAddFiles: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  docId: PropTypes.string.isRequired\n};\nmodule.exportDefault(FileAdder);","map":{"version":3,"sources":["imports/core/components/UploaderArray/FileAdder.jsx"],"names":["React","module","watch","require","default","v","PropTypes","T","Button","styles","input","width","height","opacity","overflow","position","zIndex","label","cursor","paddingTop","FileAdder","docId","id","handleAddFiles","files","target","Array","from","propTypes","func","isRequired","string","exportDefault"],"mappings":";;AAAA,IAAIA,cAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACL,YAAMK,CAAN;AAAQ;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,kBAAJ;AAAcL,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACC,gBAAUD,CAAV;AAAY;AAAxB,CAAnC,EAA6D,CAA7D;;AAAgE,IAAIE,WAAJ;;AAAMN,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACI,GAAD,aAAGF,CAAH,EAAK;AAACE,SAAEF,CAAF;AAAI;AAAV,CAAvC,EAAmD,CAAnD;AAAsD,IAAIG,eAAJ;AAAWP,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACG,aAAOH,CAAP;AAAS;AAArB,CAAlC,EAAyD,CAAzD;AAMtN,IAAMI,SAAS;AACbC,SAAO;AACLC,WAAO,GADF;AAELC,YAAQ,GAFH;AAGLC,aAAS,CAHJ;AAILC,cAAU,QAJL;AAKLC,cAAU,UALL;AAMLC,YAAQ,CAAC;AANJ,GADM;AASbC,SAAO;AACLC,YAAQ,SADH;AAELC,gBAAY;AAFP;AATM,CAAf;;AAeA,IAAMC,YAAY,SAAZA,SAAY;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,EAAV,QAAUA,EAAV;AAAA,MAAcC,cAAd,QAAcA,cAAd;AAAA,SAChB;AAAA;AAAA;AAEE;AACE,YAAK,MADP;AAEE,UAAID,EAFN;AAGE,aAAOb,OAAOC,KAHhB;AAIE,oBAJF,CAKE;AALF;AAME,gBAAU;AAAA,YAAac,KAAb,SAAGC,MAAH,CAAaD,KAAb;AAAA,eAA2BD,eAAeG,MAAMC,IAAN,CAAWH,KAAX,CAAf,CAA3B;AAAA,OANZ,CAOE;AAPF;AAQE,WAAKH,QAAQC;AARf,MAFF;AAaE;AAAC,YAAD;AAAA;AAAQ,iBAASA,EAAjB;AAAqB,eAAOb,OAAOQ,KAAnC;AAA0C,qBAA1C;AAAkD,mBAAU;AAA5D;AACE,0BAAC,EAAD;AAAG,YAAG;AAAN;AADF;AAbF,GADgB;AAAA,CAAlB;;AAoBAG,UAAUQ,SAAV,GAAsB;AACpBL,kBAAgBjB,UAAUuB,IAAV,CAAeC,UADX;AAEpBR,MAAIhB,UAAUyB,MAAV,CAAiBD,UAFD;AAGpBT,SAAOf,UAAUyB,MAAV,CAAiBD;AAHJ,CAAtB;AAzCA7B,OAAO+B,aAAP,CA+CeZ,SA/Cf","file":"imports/core/components/UploaderArray/FileAdder.jsx.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { T } from 'core/components/Translation';\nimport Button from 'core/components/Button';\n\nconst styles = {\n  input: {\n    width: 0.1,\n    height: 0.1,\n    opacity: 0,\n    overflow: 'hidden',\n    position: 'absolute',\n    zIndex: -1,\n  },\n  label: {\n    cursor: 'pointer',\n    paddingTop: 8,\n  },\n};\n\nconst FileAdder = ({ docId, id, handleAddFiles }) => (\n  <a>\n    {/* Hide the input, and make the label interactive */}\n    <input\n      type=\"file\"\n      id={id}\n      style={styles.input}\n      multiple\n      // Do Array.from to extract file from the FileList object\n      onChange={({ target: { files } }) => handleAddFiles(Array.from(files))}\n      // This piece of shit is important or inputs will get mixed up...\n      key={docId + id}\n    />\n    {/* Use label component, so that the htmlFor triggers the file input */}\n    <Button htmlFor={id} style={styles.label} primary component=\"label\">\n      <T id=\"FileAdder.title\" />\n    </Button>\n  </a>\n);\n\nFileAdder.propTypes = {\n  handleAddFiles: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  docId: PropTypes.string.isRequired,\n};\n\nexport default FileAdder;\n"]},"hash":"81c086254f5ac5c7b812657ee1c8ec3f5e9d043f"}
