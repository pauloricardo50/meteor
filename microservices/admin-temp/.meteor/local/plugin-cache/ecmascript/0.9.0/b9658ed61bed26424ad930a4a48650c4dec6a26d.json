{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/didericis:callpromise-mixin/callpromise-mixin.js","filenameRelative":"packages/didericis:callpromise-mixin/callpromise-mixin.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/didericis:callpromise-mixin/callpromise-mixin.js.map","sourceFileName":"packages/didericis:callpromise-mixin/callpromise-mixin.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"callpromise-mixin"},"ignored":false,"code":"CallPromiseMixin = function () {\n    function CallPromiseMixin(methodOptions) {\n        methodOptions.callPromise = function () {\n            function callPromise(args) {\n                var _this = this;\n\n                return new Promise(function (resolve, reject) {\n                    _this.call(args, function (err, result) {\n                        if (err) {\n                            reject(err);\n                        } else {\n                            resolve(result);\n                        }\n                    });\n                });\n            }\n\n            return callPromise;\n        }();\n\n        return methodOptions;\n    }\n\n    return CallPromiseMixin;\n}();","map":{"version":3,"sources":["packages/didericis:callpromise-mixin/callpromise-mixin.js"],"names":["CallPromiseMixin","methodOptions","callPromise","args","Promise","resolve","reject","call","err","result"],"mappings":"AAAAA;AAAmB,aAASA,gBAAT,CAA0BC,aAA1B,EAAyC;AACxDA,sBAAcC,WAAd;AAA4B,qBAASA,WAAT,CAAqBC,IAArB,EAA2B;AAAA;;AACnD,uBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,0BAAKC,IAAL,CAAUJ,IAAV,EAAgB,UAACK,GAAD,EAAMC,MAAN,EAAiB;AAC7B,4BAAID,GAAJ,EAAS;AACLF,mCAAOE,GAAP;AACH,yBAFD,MAEO;AACHH,oCAAQI,MAAR;AACH;AACJ,qBAND;AAOH,iBARM,CAAP;AASH;;AAVD,mBAAqCP,WAArC;AAAA;;AAWA,eAAOD,aAAP;AACH;;AAbD,WAA4BD,gBAA5B;AAAA","file":"packages/didericis:callpromise-mixin/callpromise-mixin.js.map","sourcesContent":["CallPromiseMixin = function CallPromiseMixin(methodOptions) {\n    methodOptions.callPromise = function callPromise(args) {\n        return new Promise((resolve, reject) => {\n            this.call(args, (err, result) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(result);\n                }\n            });\n        });\n    }\n    return methodOptions;     \n}"]},"hash":"b9658ed61bed26424ad930a4a48650c4dec6a26d"}
