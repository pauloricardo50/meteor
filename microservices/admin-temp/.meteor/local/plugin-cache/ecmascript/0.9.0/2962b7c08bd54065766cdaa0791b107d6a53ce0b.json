{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"../../../core/components/MetricsTriple","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"MetricsTriple"}]},{"source":"./../TassPage/TaskTableWithData","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TasksTableWithData"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/AdminDashboardPage/AdminDashboardPage.jsx","filenameRelative":"imports/ui/pages/AdminDashboardPage/AdminDashboardPage.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/AdminDashboardPage/AdminDashboardPage.jsx.map","sourceFileName":"imports/ui/pages/AdminDashboardPage/AdminDashboardPage.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"AdminDashboardPage"},"ignored":false,"code":"\"use strict\";\n\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar MetricsTriple = void 0;\nmodule.watch(require(\"../../../core/components/MetricsTriple\"), {\n  \"default\": function () {\n    function _default(v) {\n      MetricsTriple = v;\n    }\n\n    return _default;\n  }()\n}, 2);\nvar TasksTableWithData = void 0;\nmodule.watch(require(\"./../TassPage/TaskTableWithData\"), {\n  \"default\": function () {\n    function _default(v) {\n      TasksTableWithData = v;\n    }\n\n    return _default;\n  }()\n}, 3);\n\nvar getUserMetrics = function () {\n  function getUserMetrics(props) {\n    var d1 = new Date();\n    var d2 = new Date();\n    d1.setDate(d1.getDate() - 7);\n    d2.setDate(d2.getDate() - 30);\n    return [{\n      name: 'Total Utilisateurs',\n      value: props.users.length\n    }, {\n      name: 'Derniers 7 jours',\n      value: \"+\" + props.users.filter(function (user) {\n        return user.createdAt.getTime() >= d1;\n      }).length\n    }, {\n      name: 'Derniers 30 jours',\n      value: \"+\" + props.users.filter(function (user) {\n        return user.createdAt.getTime() >= d2;\n      }).length\n    }];\n  }\n\n  return getUserMetrics;\n}();\n\nvar AdminDashboardPage = function () {\n  function AdminDashboardPage(props) {\n    var now = new Date();\n    return React.createElement(\n      \"section\",\n      {\n        className: \"mask1\"\n      },\n      React.createElement(\n        \"h1\",\n        null,\n        \"Admin Dashboard\"\n      ),\n      React.createElement(MetricsTriple, {\n        metrics: getUserMetrics(props),\n        percent: false\n      }),\n      React.createElement(TasksTableWithData, {\n        showAssignee: true,\n        dashboardTasks: true,\n        assignedTo: Meteor.userId()\n      })\n    );\n  }\n\n  return AdminDashboardPage;\n}();\n\nAdminDashboardPage.defaultProps = {\n  adminActions: [],\n  loans: [],\n  users: [],\n  offers: []\n};\nAdminDashboardPage.propTypes = {\n  adminActions: PropTypes.arrayOf(PropTypes.object),\n  loans: PropTypes.arrayOf(PropTypes.object),\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\n  offers: PropTypes.arrayOf(PropTypes.object)\n};\nmodule.exportDefault(AdminDashboardPage);","map":{"version":3,"sources":["imports/ui/pages/AdminDashboardPage/AdminDashboardPage.jsx"],"names":["PropTypes","module","watch","require","v","React","MetricsTriple","TasksTableWithData","getUserMetrics","props","d1","Date","d2","setDate","getDate","name","value","users","length","filter","user","createdAt","getTime","AdminDashboardPage","now","Meteor","userId","defaultProps","adminActions","loans","offers","propTypes","arrayOf","object","isRequired","exportDefault"],"mappings":";;AAAA,IAAIA,kBAAJ;AAAcC,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACJ,kBAAUI,CAAV;AAAY;;AAAxB;AAAA;AAAA,CAAnC,EAA6D,CAA7D;AAAgE,IAAIC,cAAJ;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACC,cAAMD,CAAN;AAAQ;;AAApB;AAAA;AAAA,CAA9B,EAAoD,CAApD;AAAuD,IAAIE,sBAAJ;AAAkBL,OAAOC,KAAP,CAAaC,QAAQ,wCAAR,CAAb,EAA+D;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACE,sBAAcF,CAAd;AAAgB;;AAA5B;AAAA;AAAA,CAA/D,EAA6F,CAA7F;AAAgG,IAAIG,2BAAJ;AAAuBN,OAAOC,KAAP,CAAaC,QAAQ,iCAAR,CAAb,EAAwD;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACG,2BAAmBH,CAAnB;AAAqB;;AAAjC;AAAA;AAAA,CAAxD,EAA2F,CAA3F;;AAOxR,IAAMI;AAAiB,WAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,QAAMC,KAAK,IAAIC,IAAJ,EAAX;AACA,QAAMC,KAAK,IAAID,IAAJ,EAAX;AACAD,OAAGG,OAAH,CAAWH,GAAGI,OAAH,KAAe,CAA1B;AACAF,OAAGC,OAAH,CAAWD,GAAGE,OAAH,KAAe,EAA1B;AAEA,WAAO,CACL;AACEC,YAAM,oBADR;AAEEC,aAAOP,MAAMQ,KAAN,CAAYC;AAFrB,KADK,EAKL;AACEH,YAAM,kBADR;AAEEC,mBACEP,MAAMQ,KAAN,CAAYE,MAAZ,CAAmB;AAAA,eAAQC,KAAKC,SAAL,CAAeC,OAAf,MAA4BZ,EAApC;AAAA,OAAnB,EAA2DQ;AAH/D,KALK,EAWL;AACEH,YAAM,mBADR;AAEEC,mBACEP,MAAMQ,KAAN,CAAYE,MAAZ,CAAmB;AAAA,eAAQC,KAAKC,SAAL,CAAeC,OAAf,MAA4BV,EAApC;AAAA,OAAnB,EAA2DM;AAH/D,KAXK,CAAP;AAkBD;;AAxBK;AAAA,GAAN;;AA0BA,IAAMK;AAAqB,WAArBA,kBAAqB,CAACd,KAAD,EAAW;AACpC,QAAMe,MAAM,IAAIb,IAAJ,EAAZ;AACA,WACE;AAAA;AAAA;AAAS,mBAAU;AAAnB;AACE;AAAA;AAAA;AAAA;AAAA,OADF;AAGE,0BAAC,aAAD;AAAe,iBAASH,eAAeC,KAAf,CAAxB;AAA+C,iBAAS;AAAxD,QAHF;AAYE,0BAAC,kBAAD;AAAoB,0BAApB;AAAiC,4BAAjC;AAAgD,oBAAYgB,OAAOC,MAAP;AAA5D;AAZF,KADF;AAgBD;;AAlBK;AAAA,GAAN;;AAoBAH,mBAAmBI,YAAnB,GAAkC;AAChCC,gBAAc,EADkB;AAEhCC,SAAO,EAFyB;AAGhCZ,SAAO,EAHyB;AAIhCa,UAAQ;AAJwB,CAAlC;AAOAP,mBAAmBQ,SAAnB,GAA+B;AAC7BH,gBAAc5B,UAAUgC,OAAV,CAAkBhC,UAAUiC,MAA5B,CADe;AAE7BJ,SAAO7B,UAAUgC,OAAV,CAAkBhC,UAAUiC,MAA5B,CAFsB;AAG7BhB,SAAOjB,UAAUgC,OAAV,CAAkBhC,UAAUiC,MAA5B,EAAoCC,UAHd;AAI7BJ,UAAQ9B,UAAUgC,OAAV,CAAkBhC,UAAUiC,MAA5B;AAJqB,CAA/B;AA5DAhC,OAAOkC,aAAP,CAmEeZ,kBAnEf","file":"imports/ui/pages/AdminDashboardPage/AdminDashboardPage.jsx.map","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport MetricsTriple from 'core/components/MetricsTriple';\n// import ActionsTable from '/imports/ui/components/ActionsTable';\nimport TasksTableWithData from '/imports/ui/pages/TassPage/TaskTableWithData';\n\nconst getUserMetrics = (props) => {\n  const d1 = new Date();\n  const d2 = new Date();\n  d1.setDate(d1.getDate() - 7);\n  d2.setDate(d2.getDate() - 30);\n\n  return [\n    {\n      name: 'Total Utilisateurs',\n      value: props.users.length,\n    },\n    {\n      name: 'Derniers 7 jours',\n      value: `+${\n        props.users.filter(user => user.createdAt.getTime() >= d1).length\n      }`,\n    },\n    {\n      name: 'Derniers 30 jours',\n      value: `+${\n        props.users.filter(user => user.createdAt.getTime() >= d2).length\n      }`,\n    },\n  ];\n};\n\nconst AdminDashboardPage = (props) => {\n  const now = new Date();\n  return (\n    <section className=\"mask1\">\n      <h1>Admin Dashboard</h1>\n\n      <MetricsTriple metrics={getUserMetrics(props)} percent={false} />\n\n      {/* <ActionsTable\n        loans={props.loans}\n        recentOffers={props.offers.filter(offer => offer.auctionEndTime >= now)}\n        history={props.history}\n        adminActions={props.adminActions}\n      /> */}\n\n      <TasksTableWithData showAssignee dashboardTasks assignedTo={Meteor.userId()} />\n    </section>\n  );\n};\n\nAdminDashboardPage.defaultProps = {\n  adminActions: [],\n  loans: [],\n  users: [],\n  offers: [],\n};\n\nAdminDashboardPage.propTypes = {\n  adminActions: PropTypes.arrayOf(PropTypes.object),\n  loans: PropTypes.arrayOf(PropTypes.object),\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\n  offers: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default AdminDashboardPage;\n"]},"hash":"2962b7c08bd54065766cdaa0791b107d6a53ce0b"}
