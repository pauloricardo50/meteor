{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../api","imported":["constants"],"specifiers":[{"kind":"named","imported":"constants","local":"constants"}]}],"exports":{"exported":["getBorrowerInfoArray","getBorrowerFinanceArray"],"specifiers":[{"kind":"local","local":"getBorrowerInfoArray","exported":"getBorrowerInfoArray"},{"kind":"local","local":"getBorrowerFinanceArray","exported":"getBorrowerFinanceArray"}]}}},"options":{"filename":"imports/core/arrays/BorrowerFormArray.js","filenameRelative":"imports/core/arrays/BorrowerFormArray.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/arrays/BorrowerFormArray.js.map","sourceFileName":"imports/core/arrays/BorrowerFormArray.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"BorrowerFormArray"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.export({\n  getBorrowerInfoArray: function getBorrowerInfoArray() {\n    return _getBorrowerInfoArray;\n  },\n  getBorrowerFinanceArray: function getBorrowerFinanceArray() {\n    return _getBorrowerFinanceArray;\n  }\n});\n\nvar _constants = void 0;\n\nexports.getBorrowerInfoArray = _getBorrowerInfoArray;\nmodule.watch(require(\"../api\"), {\n  constants: function constants(v) {\n    _constants = v;\n  }\n}, 0);\n\nvar _getBorrowerInfoArray = function _getBorrowerInfoArray(_ref) {\n  var borrowers = _ref.borrowers,\n      id = _ref.borrowerId;\n  var b = borrowers.find(function (borrower) {\n    return borrower._id === id;\n  });\n  var multiple = borrowers.length > 1; // If this is the first borrower in the array of borrowers, don't ask for same address\n\n  var isFirst = borrowers[0]._id === id;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  var disableAddress = !!b.sameAddress && !isFirst;\n  return [{\n    id: 'firstName',\n    type: 'textInput'\n  }, {\n    id: 'lastName',\n    type: 'textInput'\n  }, {\n    id: 'gender',\n    type: 'radioInput',\n    options: Object.values(_constants.GENDER)\n  }, {\n    type: 'h3',\n    id: 'yourAddress',\n    ignore: true,\n    required: false\n  }, {\n    id: 'sameAddress',\n    type: 'radioInput',\n    intlValues: {\n      name: borrowers[0].firstName || 'Emprunteur 1'\n    },\n    options: [true, false],\n    condition: multiple && !isFirst\n  }, {\n    id: 'address1',\n    type: 'textInput',\n    disabled: disableAddress,\n    placeholder: disableAddress && borrowers[0].address1,\n    noIntl: disableAddress\n  }, {\n    id: 'address2',\n    type: 'textInput',\n    disabled: !!b.sameAddress && !isFirst,\n    required: false,\n    placeholder: disableAddress && borrowers[0].address2,\n    noIntl: disableAddress\n  }, {\n    id: 'zipCode',\n    type: 'custom',\n    component: 'ZipAutoComplete',\n    componentProps: {\n      savePath: '',\n      initialValue: b.zipCode && b.city ? b.zipCode + \" \" + b.city : ''\n    },\n    disabled: !!b.sameAddress && !isFirst,\n    placeholder: disableAddress && (borrowers[0].zipCode && borrowers[0].city ? borrowers[0].zipCode + \" \" + borrowers[0].city : ''),\n    noIntl: disableAddress\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: false,\n    inputs: [{\n      id: 'isSwiss',\n      type: 'radioInput',\n      options: [true, false]\n    }, {\n      id: 'residencyPermit',\n      type: 'selectFieldInput',\n      options: Object.values(_constants.RESIDENCY_PERMIT)\n    }]\n  }, {\n    id: 'age',\n    type: 'textInput',\n    number: true,\n    saveOnChange: false\n  }, {\n    id: 'birthPlace',\n    type: 'textInput',\n    condition: !!b.isSwiss\n  }, {\n    id: 'citizenship',\n    type: 'textInput',\n    condition: !b.isSwiss\n  }, {\n    id: 'isUSPerson',\n    type: 'radioInput',\n    options: [true, false]\n  }, {\n    id: 'civilStatus',\n    type: 'radioInput',\n    options: Object.values(_constants.CIVIL_STATUS).map(function (value) {\n      return {\n        id: value,\n        intlValues: {\n          gender: b.gender\n        }\n      };\n    })\n  }, {\n    id: 'childrenCount',\n    type: 'textInput',\n    number: true\n  }, {\n    id: 'company',\n    type: 'textInput',\n    required: false,\n    autoComplete: 'organization'\n  }, {\n    id: 'worksForOwnCompany',\n    type: 'radioInput',\n    options: [true, false]\n  }, {\n    id: 'personalBank',\n    type: 'textInput'\n  }];\n};\n\nvar _getBorrowerFinanceArray = function _getBorrowerFinanceArray(_ref2) {\n  var borrowers = _ref2.borrowers,\n      id = _ref2.borrowerId,\n      loan = _ref2.loan;\n  var b = borrowers.find(function (borr) {\n    return borr._id === id;\n  });\n  var multiple = borrowers.length > 1; // If this is the first borrower in the array of borrowers, don't ask for same address\n\n  var isFirst = borrowers[0]._id === id;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  var incomeArray = [{\n    type: 'h3',\n    id: 'incomeAndExpenses',\n    ignore: true,\n    required: false\n  }, {\n    id: 'salary',\n    type: 'textInput',\n    money: true\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: true,\n    inputs: [{\n      id: 'bonusExists',\n      type: 'radioInput',\n      options: [true, false]\n    }].concat(_toConsumableArray([2017, 2016, 2015, 2014].map(function (year) {\n      return {\n        id: \"bonus.bonus\" + year,\n        type: 'textInput',\n        money: true\n      };\n    })))\n  }, {\n    id: 'expenses',\n    type: 'arrayInput',\n    required: false,\n    inputs: [{\n      id: 'description',\n      type: 'selectInput',\n      options: Object.values(_constants.EXPENSES)\n    }, {\n      id: 'value',\n      type: 'textInput',\n      money: true\n    }]\n  }, {\n    id: 'otherIncome',\n    type: 'arrayInput',\n    required: false,\n    inputs: [{\n      id: 'description',\n      type: 'selectInput',\n      options: Object.values(_constants.OTHER_INCOME)\n    }, {\n      id: 'value',\n      type: 'textInput',\n      money: true\n    }]\n  }];\n  var fortuneArray = [{\n    type: 'h3',\n    id: 'fortune',\n    ignore: true,\n    required: false\n  }, {\n    id: 'bankFortune',\n    type: 'textInput',\n    money: true\n  }, {\n    id: 'realEstate',\n    type: 'arrayInput',\n    inputs: [{\n      id: 'description',\n      type: 'selectInput',\n      options: Object.values(_constants.REAL_ESTATE)\n    }, {\n      id: 'value',\n      type: 'textInput',\n      money: true\n    }, {\n      id: 'loan',\n      type: 'textInput',\n      money: true\n    }]\n  }, {\n    id: 'otherFortune',\n    type: 'arrayInput',\n    required: false,\n    inputs: [{\n      id: 'description',\n      type: 'selectInput',\n      options: Object.values(_constants.OTHER_FORTUNE)\n    }, {\n      id: 'value',\n      type: 'textInput',\n      money: true\n    }]\n  }];\n  var insuranceArray = [{\n    type: 'h3',\n    id: 'insurance',\n    required: false,\n    ignore: true\n  }, {\n    id: 'insuranceSecondPillar',\n    type: 'textInput',\n    money: true,\n    required: false\n  }, {\n    id: 'insuranceThirdPillar',\n    type: 'textInput',\n    money: true,\n    required: false\n  }, {\n    id: 'insurance3B',\n    type: 'textInput',\n    money: true,\n    required: false\n  }, {\n    id: 'insurancePureRisk',\n    type: 'textInput',\n    money: true,\n    required: false\n  }];\n  return incomeArray.concat([].concat(fortuneArray, insuranceArray));\n};","map":{"version":3,"sources":["imports/core/arrays/BorrowerFormArray.js"],"names":["module","export","getBorrowerInfoArray","getBorrowerFinanceArray","constants","watch","require","v","borrowers","id","borrowerId","b","find","borrower","_id","multiple","length","isFirst","Error","disableAddress","sameAddress","type","options","Object","values","GENDER","ignore","required","intlValues","name","firstName","condition","disabled","placeholder","address1","noIntl","address2","component","componentProps","savePath","initialValue","zipCode","city","conditionalTrueValue","inputs","RESIDENCY_PERMIT","number","saveOnChange","isSwiss","CIVIL_STATUS","map","value","gender","autoComplete","loan","borr","incomeArray","money","year","EXPENSES","OTHER_INCOME","fortuneArray","REAL_ESTATE","OTHER_FORTUNE","insuranceArray","concat"],"mappings":"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","file":"imports/core/arrays/BorrowerFormArray.js.map","sourcesContent":["import { constants } from 'core/api';\n\nexport const getBorrowerInfoArray = ({ borrowers, borrowerId: id }) => {\n  const b = borrowers.find(borrower => borrower._id === id);\n  const multiple = borrowers.length > 1;\n  // If this is the first borrower in the array of borrowers, don't ask for same address\n  const isFirst = borrowers[0]._id === id;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const disableAddress = !!b.sameAddress && !isFirst;\n\n  return [\n    { id: 'firstName', type: 'textInput' },\n    { id: 'lastName', type: 'textInput' },\n    {\n      id: 'gender',\n      type: 'radioInput',\n      options: Object.values(constants.GENDER),\n    },\n    {\n      type: 'h3',\n      id: 'yourAddress',\n      ignore: true,\n      required: false,\n    },\n    {\n      id: 'sameAddress',\n      type: 'radioInput',\n      intlValues: { name: borrowers[0].firstName || 'Emprunteur 1' },\n      options: [true, false],\n      condition: multiple && !isFirst,\n    },\n    {\n      id: 'address1',\n      type: 'textInput',\n      disabled: disableAddress,\n      placeholder: disableAddress && borrowers[0].address1,\n      noIntl: disableAddress,\n    },\n    {\n      id: 'address2',\n      type: 'textInput',\n      disabled: !!b.sameAddress && !isFirst,\n      required: false,\n      placeholder: disableAddress && borrowers[0].address2,\n      noIntl: disableAddress,\n    },\n    {\n      id: 'zipCode',\n      type: 'custom',\n      component: 'ZipAutoComplete',\n      componentProps: {\n        savePath: '',\n        initialValue: b.zipCode && b.city ? `${b.zipCode} ${b.city}` : '',\n      },\n      disabled: !!b.sameAddress && !isFirst,\n      placeholder:\n        disableAddress &&\n        (borrowers[0].zipCode && borrowers[0].city\n          ? `${borrowers[0].zipCode} ${borrowers[0].city}`\n          : ''),\n      noIntl: disableAddress,\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: false,\n      inputs: [\n        {\n          id: 'isSwiss',\n          type: 'radioInput',\n          options: [true, false],\n        },\n        {\n          id: 'residencyPermit',\n          type: 'selectFieldInput',\n          options: Object.values(constants.RESIDENCY_PERMIT),\n        },\n      ],\n    },\n    {\n      id: 'age',\n      type: 'textInput',\n      number: true,\n      saveOnChange: false,\n    },\n    { id: 'birthPlace', type: 'textInput', condition: !!b.isSwiss },\n    { id: 'citizenship', type: 'textInput', condition: !b.isSwiss },\n    { id: 'isUSPerson', type: 'radioInput', options: [true, false] },\n    {\n      id: 'civilStatus',\n      type: 'radioInput',\n      options: Object.values(constants.CIVIL_STATUS).map(value => ({\n        id: value,\n        intlValues: { gender: b.gender },\n      })),\n    },\n    { id: 'childrenCount', type: 'textInput', number: true },\n    {\n      id: 'company',\n      type: 'textInput',\n      required: false,\n      autoComplete: 'organization',\n    },\n    {\n      id: 'worksForOwnCompany',\n      type: 'radioInput',\n      options: [true, false],\n    },\n    { id: 'personalBank', type: 'textInput' },\n  ];\n};\n\nexport const getBorrowerFinanceArray = ({\n  borrowers,\n  borrowerId: id,\n  loan,\n}) => {\n  const b = borrowers.find(borr => borr._id === id);\n  const multiple = borrowers.length > 1;\n  // If this is the first borrower in the array of borrowers, don't ask for same address\n  const isFirst = borrowers[0]._id === id;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const incomeArray = [\n    {\n      type: 'h3',\n      id: 'incomeAndExpenses',\n      ignore: true,\n      required: false,\n    },\n    { id: 'salary', type: 'textInput', money: true },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: true,\n      inputs: [\n        {\n          id: 'bonusExists',\n          type: 'radioInput',\n          options: [true, false],\n        },\n        ...[2017, 2016, 2015, 2014].map(year => ({\n          id: `bonus.bonus${year}`,\n          type: 'textInput',\n          money: true,\n        })),\n      ],\n    },\n    {\n      id: 'expenses',\n      type: 'arrayInput',\n      required: false,\n      inputs: [\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.EXPENSES),\n        },\n        { id: 'value', type: 'textInput', money: true },\n      ],\n    },\n    {\n      id: 'otherIncome',\n      type: 'arrayInput',\n      required: false,\n      inputs: [\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.OTHER_INCOME),\n        },\n        { id: 'value', type: 'textInput', money: true },\n      ],\n    },\n  ];\n\n  const fortuneArray = [\n    {\n      type: 'h3',\n      id: 'fortune',\n      ignore: true,\n      required: false,\n    },\n    {\n      id: 'bankFortune',\n      type: 'textInput',\n      money: true,\n    },\n    {\n      id: 'realEstate',\n      type: 'arrayInput',\n      inputs: [\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.REAL_ESTATE),\n        },\n        {\n          id: 'value',\n          type: 'textInput',\n          money: true,\n        },\n        {\n          id: 'loan',\n          type: 'textInput',\n          money: true,\n        },\n      ],\n    },\n    {\n      id: 'otherFortune',\n      type: 'arrayInput',\n      required: false,\n      inputs: [\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.OTHER_FORTUNE),\n        },\n        {\n          id: 'value',\n          type: 'textInput',\n          money: true,\n        },\n      ],\n    },\n  ];\n\n  const insuranceArray = [\n    {\n      type: 'h3',\n      id: 'insurance',\n      required: false,\n      ignore: true,\n    },\n    {\n      id: 'insuranceSecondPillar',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n    {\n      id: 'insuranceThirdPillar',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n    {\n      id: 'insurance3B',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n    {\n      id: 'insurancePureRisk',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n  ];\n\n  return incomeArray.concat([...fortuneArray, ...insuranceArray]);\n};\n"]},"hash":"12ea76aa3771514a2121aeb01e5f7d77282aaa52"}
