{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/edgee:slingshot","imported":["Slingshot"],"specifiers":[{"kind":"named","imported":"Slingshot","local":"Slingshot"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"../loans/loans","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loans"}]},{"source":"../borrowers/borrowers","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Borrowers"}]},{"source":"./files","imported":["getFileCount"],"specifiers":[{"kind":"named","imported":"getFileCount","local":"getFileCount"}]},{"source":"./meteor-slingshot","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/files/meteor-slingshot-server.js","filenameRelative":"imports/core/api/files/meteor-slingshot-server.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/files/meteor-slingshot-server.js.map","sourceFileName":"imports/core/api/files/meteor-slingshot-server.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"meteor-slingshot-server"},"ignored":false,"code":"\"use strict\";\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _Slingshot = void 0;\n\nmodule.watch(require(\"meteor/edgee:slingshot\"), {\n  Slingshot: function Slingshot(v) {\n    _Slingshot = v;\n  }\n}, 1);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function Roles(v) {\n    _Roles = v;\n  }\n}, 2);\nvar Loans = void 0;\nmodule.watch(require(\"../loans/loans\"), {\n  default: function _default(v) {\n    Loans = v;\n  }\n}, 3);\nvar Borrowers = void 0;\nmodule.watch(require(\"../borrowers/borrowers\"), {\n  default: function _default(v) {\n    Borrowers = v;\n  }\n}, 4);\n\nvar _getFileCount = void 0;\n\nmodule.watch(require(\"./files\"), {\n  getFileCount: function getFileCount(v) {\n    _getFileCount = v;\n  }\n}, 5);\nmodule.watch(require(\"./meteor-slingshot\"));\n\n_Slingshot.createDirective('myFileUploads', _Slingshot.S3Storage, {\n  authorize: function authorize(file, _ref) {\n    var collection = _ref.collection,\n        docId = _ref.docId;\n\n    // Don't use arrow function, this is the current object here\n    // Check for devs and admins\n    if (_Roles.userIsInRole(this.userId, 'admin') || _Roles.userIsInRole(this.userId, 'dev')) {\n      return true;\n    } // Deny uploads if user is not logged in.\n\n\n    if (!this.userId) {\n      throw new _Meteor.Error('Login Required', 'Please login before uploading files');\n    } // Make sure this user is the owner of the document\n\n\n    if (collection === 'borrowers') {\n      var doc = Borrowers.findOne(docId);\n\n      if (doc.userId !== this.userId) {\n        throw new _Meteor.Error('Invalid user', \"You're not allowed to do this\");\n      }\n    } else if (collection === 'loans') {\n      var _doc = Loans.findOne(docId);\n\n      if (_doc.userId !== this.userId) {\n        throw new _Meteor.Error('Invalid user', \"You're not allowed to do this\");\n      }\n    } else {\n      throw new _Meteor.Error('Invalid collection', \"Collection doesn't exist\");\n    }\n\n    return true;\n  },\n  key: function key(file, _ref2) {\n    var currentValue = _ref2.currentValue,\n        docId = _ref2.docId,\n        id = _ref2.id;\n\n    var _getFileCount2 = _getFileCount(currentValue),\n        fileCountString = _getFileCount2.fileCountString;\n\n    return docId + \"/\" + id + \"/\" + fileCountString + file.name;\n  }\n});","map":{"version":3,"sources":["imports/core/api/files/meteor-slingshot-server.js"],"names":["Meteor","module","watch","require","v","Slingshot","Roles","Loans","default","Borrowers","getFileCount","createDirective","S3Storage","authorize","file","collection","docId","userIsInRole","userId","Error","doc","findOne","key","currentValue","id","fileCountString","name"],"mappings":"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","file":"imports/core/api/files/meteor-slingshot-server.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Slingshot } from 'meteor/edgee:slingshot';\nimport { Roles } from 'meteor/alanning:roles';\n\nimport Loans from 'core/api/loans/loans';\nimport Borrowers from 'core/api/borrowers/borrowers';\nimport { getFileCount } from './files';\nimport './meteor-slingshot';\n\nSlingshot.createDirective('myFileUploads', Slingshot.S3Storage, {\n  authorize(file, { collection, docId }) {\n    // Don't use arrow function, this is the current object here\n\n    // Check for devs and admins\n    if (\n      Roles.userIsInRole(this.userId, 'admin') ||\n      Roles.userIsInRole(this.userId, 'dev')\n    ) {\n      return true;\n    }\n\n    // Deny uploads if user is not logged in.\n    if (!this.userId) {\n      throw new Meteor.Error(\n        'Login Required',\n        'Please login before uploading files',\n      );\n    }\n\n    // Make sure this user is the owner of the document\n    if (collection === 'borrowers') {\n      const doc = Borrowers.findOne(docId);\n\n      if (doc.userId !== this.userId) {\n        throw new Meteor.Error('Invalid user', \"You're not allowed to do this\");\n      }\n    } else if (collection === 'loans') {\n      const doc = Loans.findOne(docId);\n      if (doc.userId !== this.userId) {\n        throw new Meteor.Error('Invalid user', \"You're not allowed to do this\");\n      }\n    } else {\n      throw new Meteor.Error('Invalid collection', \"Collection doesn't exist\");\n    }\n\n    return true;\n  },\n  key(file, { currentValue, docId, id }) {\n    const { fileCountString } = getFileCount(currentValue);\n\n    return `${docId}/${id}/${fileCountString}${file.name}`;\n  },\n});\n"]},"hash":"a4afbb03332125a1be5ebf0135b10f111851bbd3"}
