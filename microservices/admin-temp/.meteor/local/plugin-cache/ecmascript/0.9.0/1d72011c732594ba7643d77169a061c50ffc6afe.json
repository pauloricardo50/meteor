{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mdg:validated-method","imported":["ValidatedMethod"],"specifiers":[{"kind":"named","imported":"ValidatedMethod","local":"ValidatedMethod"}]},{"source":"meteor/check","imported":["check","Match"],"specifiers":[{"kind":"named","imported":"check","local":"check"},{"kind":"named","imported":"Match","local":"Match"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"meteor/didericis:callpromise-mixin","imported":["CallPromiseMixin"],"specifiers":[{"kind":"named","imported":"CallPromiseMixin","local":"CallPromiseMixin"}]},{"source":"../../../utils/rate-limit.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"rateLimit"}]},{"source":"../../../utils/loanFunctions","imported":["getAuctionEndTime"],"specifiers":[{"kind":"named","imported":"getAuctionEndTime","local":"getAuctionEndTime"}]},{"source":"../../adminActions/server/methods","imported":["insertAdminAction","completeActionByType","removeParentLoan"],"specifiers":[{"kind":"named","imported":"insertAdminAction","local":"insertAdminAction"},{"kind":"named","imported":"completeActionByType","local":"completeActionByType"},{"kind":"named","imported":"removeParentLoan","local":"removeParentLoan"}]},{"source":"../loans","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loans"}]},{"source":"../../constants","imported":["ADMIN_ACTION_TYPE","ADMIN_ACTION_STATUS","LOAN_STATUS","AUCTION_STATUS"],"specifiers":[{"kind":"named","imported":"ADMIN_ACTION_TYPE","local":"ADMIN_ACTION_TYPE"},{"kind":"named","imported":"ADMIN_ACTION_STATUS","local":"ADMIN_ACTION_STATUS"},{"kind":"named","imported":"LOAN_STATUS","local":"LOAN_STATUS"},{"kind":"named","imported":"AUCTION_STATUS","local":"AUCTION_STATUS"}]}],"exports":{"exported":["insertLoan","updateLoan","incrementStep","startAuction","pushLoanValue","popLoanValue","loanVerification","deleteLoan","endAuction","cancelAuction","confirmClosing","addEmail","modifyEmail"],"specifiers":[{"kind":"local","local":"insertLoan","exported":"insertLoan"},{"kind":"local","local":"updateLoan","exported":"updateLoan"},{"kind":"local","local":"incrementStep","exported":"incrementStep"},{"kind":"local","local":"startAuction","exported":"startAuction"},{"kind":"local","local":"pushLoanValue","exported":"pushLoanValue"},{"kind":"local","local":"popLoanValue","exported":"popLoanValue"},{"kind":"local","local":"loanVerification","exported":"loanVerification"},{"kind":"local","local":"deleteLoan","exported":"deleteLoan"},{"kind":"local","local":"endAuction","exported":"endAuction"},{"kind":"local","local":"cancelAuction","exported":"cancelAuction"},{"kind":"local","local":"confirmClosing","exported":"confirmClosing"},{"kind":"local","local":"addEmail","exported":"addEmail"},{"kind":"local","local":"modifyEmail","exported":"modifyEmail"}]}}},"options":{"filename":"imports/core/api/loans/server/methods.js","filenameRelative":"imports/core/api/loans/server/methods.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/loans/server/methods.js.map","sourceFileName":"imports/core/api/loans/server/methods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"methods"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insertLoan = undefined;\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _this = undefined;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  insertLoan: function insertLoan() {\n    return _insertLoan;\n  },\n  updateLoan: function updateLoan() {\n    return _updateLoan;\n  },\n  incrementStep: function incrementStep() {\n    return _incrementStep;\n  },\n  startAuction: function startAuction() {\n    return _startAuction;\n  },\n  pushLoanValue: function pushLoanValue() {\n    return _pushLoanValue;\n  },\n  popLoanValue: function popLoanValue() {\n    return _popLoanValue;\n  },\n  loanVerification: function loanVerification() {\n    return _loanVerification;\n  },\n  deleteLoan: function deleteLoan() {\n    return _deleteLoan;\n  },\n  endAuction: function endAuction() {\n    return _endAuction;\n  },\n  cancelAuction: function cancelAuction() {\n    return _cancelAuction;\n  },\n  confirmClosing: function confirmClosing() {\n    return _confirmClosing;\n  },\n  addEmail: function addEmail() {\n    return _addEmail;\n  },\n  modifyEmail: function modifyEmail() {\n    return _modifyEmail;\n  }\n});\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _ValidatedMethod = void 0;\n\nmodule.watch(require(\"meteor/mdg:validated-method\"), {\n  ValidatedMethod: function ValidatedMethod(v) {\n    _ValidatedMethod = v;\n  }\n}, 1);\n\nvar _check = void 0,\n    _Match = void 0;\n\nmodule.watch(require(\"meteor/check\"), {\n  check: function check(v) {\n    _check = v;\n  },\n  Match: function Match(v) {\n    _Match = v;\n  }\n}, 2);\nvar moment = void 0;\nmodule.watch(require(\"moment\"), {\n  default: function _default(v) {\n    moment = v;\n  }\n}, 3);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function Roles(v) {\n    _Roles = v;\n  }\n}, 4);\n\nvar _CallPromiseMixin = void 0;\n\nmodule.watch(require(\"meteor/didericis:callpromise-mixin\"), {\n  CallPromiseMixin: function CallPromiseMixin(v) {\n    _CallPromiseMixin = v;\n  }\n}, 5);\nvar rateLimit = void 0;\nexports.insertLoan = _insertLoan;\nmodule.watch(require(\"../../../utils/rate-limit.js\"), {\n  default: function _default(v) {\n    rateLimit = v;\n  }\n}, 6);\n\nvar _getAuctionEndTime = void 0;\n\nmodule.watch(require(\"../../../utils/loanFunctions\"), {\n  getAuctionEndTime: function getAuctionEndTime(v) {\n    _getAuctionEndTime = v;\n  }\n}, 7);\n\nvar _insertAdminAction = void 0,\n    _completeActionByType = void 0,\n    _removeParentLoan = void 0;\n\nmodule.watch(require(\"../../adminActions/server/methods\"), {\n  insertAdminAction: function insertAdminAction(v) {\n    _insertAdminAction = v;\n  },\n  completeActionByType: function completeActionByType(v) {\n    _completeActionByType = v;\n  },\n  removeParentLoan: function removeParentLoan(v) {\n    _removeParentLoan = v;\n  }\n}, 8);\nvar Loans = void 0;\nmodule.watch(require(\"../loans\"), {\n  default: function _default(v) {\n    Loans = v;\n  }\n}, 9);\n\nvar _ADMIN_ACTION_TYPE = void 0,\n    _ADMIN_ACTION_STATUS = void 0,\n    _LOAN_STATUS = void 0,\n    _AUCTION_STATUS = void 0;\n\nmodule.watch(require(\"../../constants\"), {\n  ADMIN_ACTION_TYPE: function ADMIN_ACTION_TYPE(v) {\n    _ADMIN_ACTION_TYPE = v;\n  },\n  ADMIN_ACTION_STATUS: function ADMIN_ACTION_STATUS(v) {\n    _ADMIN_ACTION_STATUS = v;\n  },\n  LOAN_STATUS: function LOAN_STATUS(v) {\n    _LOAN_STATUS = v;\n  },\n  AUCTION_STATUS: function AUCTION_STATUS(v) {\n    _AUCTION_STATUS = v;\n  }\n}, 10);\n\nvar importServerMethods = function importServerMethods() {\n  if (_Meteor.isServer || !!_this && !_this.isSimulation) {\n    var _require = require(\"../../jobs/server/methods\"),\n        scheduleMethod = _require.scheduleMethod,\n        rescheduleJob = _require.rescheduleJob;\n\n    var _require2 = require(\"../../email/server/email-methods\"),\n        sendEmail = _require2.sendEmail,\n        cancelScheduledEmail = _require2.cancelScheduledEmail,\n        rescheduleEmail = _require2.rescheduleEmail;\n\n    return {\n      scheduleMethod: scheduleMethod,\n      sendEmail: sendEmail,\n      cancelScheduledEmail: cancelScheduledEmail,\n      rescheduleEmail: rescheduleEmail\n    };\n  }\n};\n\nvar _insertLoan = new _ValidatedMethod({\n  name: 'insertLoan',\n  mixins: [_CallPromiseMixin],\n  validate: function validate() {},\n  run: function run(_ref) {\n    var object = _ref.object,\n        userId = _ref.userId;\n    // const loanCount = Loans.find({ userId: Meteor.userId() }).count();\n    //\n    // if (loanCount > 3) {\n    //   throw new Meteor.Error(\n    //     'maxLoans',\n    //     'Vous ne pouvez pas avoir plus de 3 requêtes à la fois',\n    //   );\n    // }\n    //\n    // console.log(object);\n    // Allow adding a userId for testing purposes\n    return Loans.insert((0, _extends3.default)({}, object, {\n      // Do this to allow userId to be null\n      userId: userId === undefined ? _Meteor.userId() : userId\n    }));\n  }\n}); // Lets you set an entire object in the document\n\n\nvar _updateLoan = new _ValidatedMethod({\n  name: 'updateLoan',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref2) {\n    var id = _ref2.id;\n\n    _check(id, String);\n  },\n  run: function run(_ref3) {\n    var object = _ref3.object,\n        id = _ref3.id;\n    return Loans.update(id, {\n      $set: object\n    });\n  }\n});\n\nvar _incrementStep = new _ValidatedMethod({\n  name: 'incrementStep',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref4) {\n    var id = _ref4.id;\n\n    _check(id, String);\n  },\n  run: function run(_ref5) {\n    var id = _ref5.id;\n    var loan = Loans.findOne(id);\n    var currentStep = loan.logic.step;\n    return Loans.update(id, {\n      $set: {\n        'logic.step': currentStep + 1\n      }\n    });\n  }\n});\n\nvar _startAuction = new _ValidatedMethod({\n  name: 'startAuction',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref6) {\n    var id = _ref6.id,\n        object = _ref6.object;\n\n    _check(id, String);\n\n    _check(object, _Match.Optional(Object));\n  },\n  run: function run(_ref7) {\n    var object = _ref7.object,\n        id = _ref7.id;\n    var auctionEndTime = void 0; // object parameter only contains the isDemo value\n\n    if (object.isDemo) {\n      auctionEndTime = moment().add(30, 's').toDate();\n      console.log(\"Temps de fin r\\xE9el: \" + _getAuctionEndTime(moment()));\n    } else {\n      auctionEndTime = _getAuctionEndTime(moment());\n    }\n\n    var auctionObject = {\n      'logic.auction.status': _AUCTION_STATUS.STARTED,\n      'logic.auction.startTime': moment().toDate(),\n      'logic.auction.endTime': auctionEndTime\n    };\n\n    if (_Meteor.isServer) {\n      var _importServerMethods = importServerMethods(),\n          scheduleMethod = _importServerMethods.scheduleMethod,\n          sendEmail = _importServerMethods.sendEmail;\n\n      Loans.update(id, {\n        $set: auctionObject\n      });\n      return _insertAdminAction.callPromise({\n        loanId: id,\n        type: _ADMIN_ACTION_TYPE.AUCTION,\n        extra: {\n          auctionEndTime: auctionEndTime\n        }\n      }).then(function () {\n        return sendEmail.callPromise({\n          emailId: 'auctionStarted',\n          loanId: id,\n          intlValues: {\n            date: auctionEndTime\n          }\n        });\n      }).then(function () {\n        return scheduleMethod.callPromise({\n          method: 'loans.endAuction',\n          params: [{\n            id: id\n          }],\n          date: auctionEndTime\n        });\n      }).then(function () {\n        return 'success';\n      }).catch(function (e) {\n        throw e;\n      });\n    }\n  }\n});\n\nvar _pushLoanValue = new _ValidatedMethod({\n  name: 'pushLoanValue',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref8) {\n    var id = _ref8.id;\n\n    _check(id, String);\n  },\n  run: function run(_ref9) {\n    var object = _ref9.object,\n        id = _ref9.id;\n    var result = Loans.update(id, {\n      $push: object\n    });\n    return result;\n  }\n});\n\nvar _popLoanValue = new _ValidatedMethod({\n  name: 'popLoanValue',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref10) {\n    var id = _ref10.id;\n\n    _check(id, String);\n  },\n  run: function run(_ref11) {\n    var object = _ref11.object,\n        id = _ref11.id;\n    return Loans.update(id, {\n      $pop: object\n    });\n  }\n});\n\nvar _loanVerification = new _ValidatedMethod({\n  name: 'loanVerification',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref12) {\n    var id = _ref12.id;\n\n    _check(id, String);\n  },\n  run: function run(_ref13) {\n    var id = _ref13.id;\n    var loan = Loans.findOne(id);\n\n    if (loan.logic.verification.requested) {\n      // Don't do anything if this loan is already in requested mode\n      return false;\n    } // Insert an admin action and set the proper keys in the loan\n\n\n    Loans.update(id, {\n      $set: {\n        'logic.verification.requested': true,\n        'logic.verification.requestedTime': new Date()\n      }\n    }, function (err) {\n      if (!err && _Meteor.isServer) {\n        var _importServerMethods2 = importServerMethods(),\n            scheduleMethod = _importServerMethods2.scheduleMethod,\n            sendEmail = _importServerMethods2.sendEmail,\n            cancelScheduledEmail = _importServerMethods2.cancelScheduledEmail,\n            rescheduleEmail = _importServerMethods2.rescheduleEmail;\n\n        sendEmail.call({\n          emailId: 'verificationRequested',\n          loanId: id\n        });\n      }\n    });\n    return _Meteor.wrapAsync(_insertAdminAction.call({\n      type: _ADMIN_ACTION_TYPE.VERIFY,\n      loanId: id\n    }));\n  }\n});\n\nvar _deleteLoan = new _ValidatedMethod({\n  name: 'deleteLoan',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref14) {\n    var id = _ref14.id;\n\n    _check(id, String);\n  },\n  run: function run(_ref15) {\n    var id = _ref15.id;\n\n    if (_Roles.userIsInRole(_Meteor.userId(), 'dev') || _Roles.userIsInRole(_Meteor.userId(), 'admin')) {\n      return Loans.remove(id, function (err) {\n        if (!err) {\n          _removeParentLoan.call({\n            loanId: id\n          });\n        }\n      });\n    }\n\n    throw new _Meteor.Error('not authorized');\n  }\n});\n\nvar _endAuction = new _ValidatedMethod({\n  name: 'endAuction',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref16) {\n    var id = _ref16.id;\n\n    _check(id, String);\n  },\n  run: function run(_ref17) {\n    var id = _ref17.id;\n    console.log('ending loan..');\n    var loan = Loans.findOne(id); // This method is called in the future, so make sure that it isn't\n    // executed again if this has already been done\n\n    if (!loan || loan.logic.auction.status === _AUCTION_STATUS.ENDED) {\n      return;\n    }\n\n    Loans.update(id, {\n      $set: {\n        'logic.auction.status': _AUCTION_STATUS.ENDED,\n        'logic.auction.endTime': new Date()\n      }\n    });\n\n    _completeActionByType.call({\n      loanId: id,\n      type: _ADMIN_ACTION_TYPE.AUCTION\n    });\n\n    if (_Meteor.isServer) {\n      var _importServerMethods3 = importServerMethods(),\n          scheduleMethod = _importServerMethods3.scheduleMethod,\n          sendEmail = _importServerMethods3.sendEmail,\n          cancelScheduledEmail = _importServerMethods3.cancelScheduledEmail,\n          rescheduleEmail = _importServerMethods3.rescheduleEmail;\n\n      var _loan = Loans.findOne(id);\n\n      var email = _loan.emails.find(function (e) {\n        return e && e.emailId === 'auctionEnded' && e.scheduledAt >= new Date();\n      });\n\n      if (email) {\n        cancelScheduledEmail.call('email.cancelScheduled', {\n          id: email._id,\n          loanId: id,\n          template: 'notification+CTA'\n        });\n      }\n    }\n  }\n});\n\nvar _cancelAuction = new _ValidatedMethod({\n  name: 'cancelAuction',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref18) {\n    var id = _ref18.id;\n\n    _check(id, String);\n  },\n  run: function run(_ref19) {\n    var id = _ref19.id;\n\n    if (_Roles.userIsInRole(_Meteor.userId(), 'admin') || _Roles.userIsInRole(_Meteor.userId(), 'dev')) {\n      return Loans.update(id, {\n        $set: {\n          'logic.auction.endTime': undefined,\n          'logic.auction.status': '',\n          'logic.auction.startTime': undefined\n        }\n      }, function (error) {\n        if (!error && _Meteor.isServer) {\n          var _importServerMethods4 = importServerMethods(),\n              scheduleMethod = _importServerMethods4.scheduleMethod,\n              sendEmail = _importServerMethods4.sendEmail,\n              cancelScheduledEmail = _importServerMethods4.cancelScheduledEmail,\n              rescheduleEmail = _importServerMethods4.rescheduleEmail;\n\n          var loan = Loans.findOne(id);\n          var email = loan.emails.find(function (e) {\n            return e && e.emailId === 'auctionEnded' && e.scheduledAt >= new Date();\n          });\n\n          if (email) {\n            cancelScheduledEmail.call('email.cancelScheduled', {\n              id: email._id,\n              loanId: id\n            });\n          }\n        }\n\n        _completeActionByType.call({\n          loanId: id,\n          type: _ADMIN_ACTION_TYPE.AUCTION,\n          newStatus: _ADMIN_ACTION_STATUS.CANCELLED\n        });\n      });\n    }\n\n    throw new _Meteor.Error('not authorized');\n  }\n});\n\nvar _confirmClosing = new _ValidatedMethod({\n  name: 'confirmClosing',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref20) {\n    var id = _ref20.id;\n\n    _check(id, String);\n  },\n  run: function run(_ref21) {\n    var id = _ref21.id,\n        object = _ref21.object;\n\n    // TODO: Send email to user, clean up, etc.\n    if (_Roles.userIsInRole(_Meteor.userId(), 'admin') || _Roles.userIsInRole(_Meteor.userId(), 'dev')) {\n      return Loans.update(id, {\n        $set: (0, _extends3.default)({\n          status: _LOAN_STATUS.DONE\n        }, object)\n      });\n    }\n\n    throw new _Meteor.Error('not authorized');\n  }\n});\n\nvar _addEmail = new _ValidatedMethod({\n  name: 'addEmail',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref22) {\n    var loanId = _ref22.loanId,\n        emailId = _ref22.emailId,\n        _id = _ref22._id,\n        status = _ref22.status,\n        sendAt = _ref22.sendAt;\n\n    _check(loanId, String);\n\n    _check(emailId, String);\n\n    _check(_id, String);\n\n    _check(status, String);\n\n    _check(sendAt, _Match.Optional(Date));\n  },\n  run: function run(_ref23) {\n    var loanId = _ref23.loanId,\n        emailId = _ref23.emailId,\n        _id = _ref23._id,\n        status = _ref23.status,\n        sendAt = _ref23.sendAt;\n    var object = {\n      emailId: emailId,\n      _id: _id,\n      status: status,\n      updatedAt: new Date()\n    };\n\n    if (sendAt) {\n      object.scheduledAt = sendAt;\n    }\n\n    return Loans.update(loanId, {\n      $push: {\n        emails: object\n      }\n    });\n  }\n});\n\nvar _modifyEmail = new _ValidatedMethod({\n  name: 'modifyEmail',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref24) {\n    var loanId = _ref24.loanId,\n        _id = _ref24._id,\n        status = _ref24.status,\n        sendAt = _ref24.sendAt;\n\n    _check(loanId, String);\n\n    _check(_id, String);\n\n    _check(status, _Match.Optional(String));\n\n    _check(sendAt, _Match.Optional(Date));\n  },\n  run: function run(_ref25) {\n    var loanId = _ref25.loanId,\n        _id = _ref25._id,\n        status = _ref25.status,\n        sendAt = _ref25.sendAt;\n    var object = {\n      'emails.$.status': status,\n      'emails.$.updatedAt': new Date()\n    };\n\n    if (sendAt) {\n      object['emails.$.scheduledAt'] = sendAt;\n    }\n\n    return Loans.update({\n      _id: loanId,\n      'emails._id': _id\n    }, {\n      $set: object\n    });\n  }\n});\n\nrateLimit({\n  methods: [_insertLoan, _updateLoan, _incrementStep, _startAuction, _pushLoanValue, _popLoanValue, _loanVerification, // deleteLoan,\n  _cancelAuction, _confirmClosing, _addEmail, _modifyEmail]\n});","map":{"version":3,"sources":["imports/core/api/loans/server/methods.js"],"names":["module","export","insertLoan","updateLoan","incrementStep","startAuction","pushLoanValue","popLoanValue","loanVerification","deleteLoan","endAuction","cancelAuction","confirmClosing","addEmail","modifyEmail","Meteor","watch","require","v","ValidatedMethod","check","Match","moment","default","Roles","CallPromiseMixin","rateLimit","getAuctionEndTime","insertAdminAction","completeActionByType","removeParentLoan","Loans","ADMIN_ACTION_TYPE","ADMIN_ACTION_STATUS","LOAN_STATUS","AUCTION_STATUS","importServerMethods","isServer","isSimulation","scheduleMethod","rescheduleJob","sendEmail","cancelScheduledEmail","rescheduleEmail","name","mixins","validate","run","object","userId","insert","undefined","id","String","update","$set","loan","findOne","currentStep","logic","step","Optional","Object","auctionEndTime","isDemo","add","toDate","console","log","auctionObject","STARTED","callPromise","loanId","type","AUCTION","extra","then","emailId","intlValues","date","method","params","catch","e","result","$push","$pop","verification","requested","Date","err","call","wrapAsync","VERIFY","userIsInRole","remove","Error","auction","status","ENDED","email","emails","find","scheduledAt","_id","template","error","newStatus","CANCELLED","DONE","sendAt","updatedAt","methods"],"mappings":"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","file":"imports/core/api/loans/server/methods.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\nimport { check, Match } from 'meteor/check';\nimport moment from 'moment';\nimport { Roles } from 'meteor/alanning:roles';\nimport { CallPromiseMixin } from 'meteor/didericis:callpromise-mixin';\nimport rateLimit from '../../../utils/rate-limit.js';\nimport { getAuctionEndTime } from '../../../utils/loanFunctions';\n\nimport {\n  insertAdminAction,\n  completeActionByType,\n  removeParentLoan,\n} from 'core/api/adminActions/server/methods';\n\nimport Loans from '../loans';\nimport {\n  ADMIN_ACTION_TYPE,\n  ADMIN_ACTION_STATUS,\n  LOAN_STATUS,\n  AUCTION_STATUS,\n} from '../../constants';\n\nconst importServerMethods = () => {\n  if (Meteor.isServer || (!!this && !this.isSimulation)) {\n    const {\n      scheduleMethod,\n      rescheduleJob,\n    } = require('core/api/jobs/server/methods');\n    const {\n      sendEmail,\n      cancelScheduledEmail,\n      rescheduleEmail,\n    } = require('core/api/email/server/email-methods');\n\n    return {\n      scheduleMethod,\n      sendEmail,\n      cancelScheduledEmail,\n      rescheduleEmail,\n    };\n  }\n};\n\nexport const insertLoan = new ValidatedMethod({\n  name: 'insertLoan',\n  mixins: [CallPromiseMixin],\n  validate() {},\n  run({ object, userId }) {\n    // const loanCount = Loans.find({ userId: Meteor.userId() }).count();\n    //\n    // if (loanCount > 3) {\n    //   throw new Meteor.Error(\n    //     'maxLoans',\n    //     'Vous ne pouvez pas avoir plus de 3 requêtes à la fois',\n    //   );\n    // }\n    //\n    // console.log(object);\n\n    // Allow adding a userId for testing purposes\n    return Loans.insert({\n      ...object,\n      // Do this to allow userId to be null\n      userId: userId === undefined ? Meteor.userId() : userId,\n    });\n  },\n});\n\n\n// Lets you set an entire object in the document\nexport const updateLoan = new ValidatedMethod({\n  name: 'updateLoan',\n  mixins: [CallPromiseMixin],\n  validate({ id }) {\n    check(id, String);\n  },\n  run({ object, id }) {\n    return Loans.update(id, { $set: object });\n  },\n});\n\n// Increments the step of the loan, if conditions are true\nexport const incrementStep = new ValidatedMethod({\n  name: 'incrementStep',\n  mixins: [CallPromiseMixin],\n  validate({ id }) {\n    check(id, String);\n  },\n  run({ id }) {\n    const loan = Loans.findOne(id);\n    const currentStep = loan.logic.step;\n\n\n\n    return Loans.update(id, { $set: { 'logic.step': currentStep + 1 } });\n  },\n});\n\nexport const startAuction = new ValidatedMethod({\n  name: 'startAuction',\n  mixins: [CallPromiseMixin],\n  validate({ id, object }) {\n    check(id, String);\n    check(object, Match.Optional(Object));\n  },\n  run({ object, id }) {\n    let auctionEndTime;\n\n    // object parameter only contains the isDemo value\n    if (object.isDemo) {\n      auctionEndTime = moment()\n        .add(30, 's')\n        .toDate();\n      console.log(`Temps de fin réel: ${getAuctionEndTime(moment())}`);\n    } else {\n      auctionEndTime = getAuctionEndTime(moment());\n    }\n\n    const auctionObject = {\n      'logic.auction.status': AUCTION_STATUS.STARTED,\n      'logic.auction.startTime': moment().toDate(),\n      'logic.auction.endTime': auctionEndTime,\n    };\n\n    if (Meteor.isServer) {\n      const { scheduleMethod, sendEmail } = importServerMethods();\n\n      Loans.update(id, { $set: auctionObject });\n      return insertAdminAction\n        .callPromise({\n          loanId: id,\n          type: ADMIN_ACTION_TYPE.AUCTION,\n          extra: { auctionEndTime },\n        })\n        .then(() =>\n          sendEmail.callPromise({\n            emailId: 'auctionStarted',\n            loanId: id,\n            intlValues: { date: auctionEndTime },\n          }))\n        .then(() =>\n          scheduleMethod.callPromise({\n            method: 'loans.endAuction',\n            params: [{ id }],\n            date: auctionEndTime,\n          }))\n        .then(() => 'success')\n        .catch((e) => {\n          throw e;\n        });\n    }\n  },\n});\n\n// Lets you push a value to an array\nexport const pushLoanValue = new ValidatedMethod({\n  name: 'pushLoanValue',\n  mixins: [CallPromiseMixin],\n  validate({ id }) {\n    check(id, String);\n  },\n  run({ object, id }) {\n    const result = Loans.update(id, { $push: object });\n    return result;\n  },\n});\n\n// Lets you pop a value from the end of an array\nexport const popLoanValue = new ValidatedMethod({\n  name: 'popLoanValue',\n  mixins: [CallPromiseMixin],\n  validate({ id }) {\n    check(id, String);\n  },\n  run({ object, id }) {\n    return Loans.update(id, { $pop: object });\n  },\n});\n\nexport const loanVerification = new ValidatedMethod({\n  name: 'loanVerification',\n  mixins: [CallPromiseMixin],\n  validate({ id }) {\n    check(id, String);\n  },\n  run({ id }) {\n    const loan = Loans.findOne(id);\n\n    if (loan.logic.verification.requested) {\n      // Don't do anything if this loan is already in requested mode\n      return false;\n    }\n\n    // Insert an admin action and set the proper keys in the loan\n    Loans.update(\n      id,\n      {\n        $set: {\n          'logic.verification.requested': true,\n          'logic.verification.requestedTime': new Date(),\n        },\n      },\n      (err) => {\n        if (!err && Meteor.isServer) {\n          const {\n            scheduleMethod,\n            sendEmail,\n            cancelScheduledEmail,\n            rescheduleEmail,\n          } = importServerMethods();\n\n          sendEmail.call({\n            emailId: 'verificationRequested',\n            loanId: id,\n          });\n        }\n      },\n    );\n    return Meteor.wrapAsync(insertAdminAction.call({\n      type: ADMIN_ACTION_TYPE.VERIFY,\n      loanId: id,\n    }));\n  },\n});\n\nexport const deleteLoan = new ValidatedMethod({\n  name: 'deleteLoan',\n  mixins: [CallPromiseMixin],\n  validate({ id }) {\n    check(id, String);\n  },\n  run({ id }) {\n    if (\n      Roles.userIsInRole(Meteor.userId(), 'dev') ||\n      Roles.userIsInRole(Meteor.userId(), 'admin')\n    ) {\n      return Loans.remove(id, (err) => {\n        if (!err) {\n          removeParentLoan.call({ loanId: id });\n        }\n      });\n    }\n\n    throw new Meteor.Error('not authorized');\n  },\n});\n\nexport const endAuction = new ValidatedMethod({\n  name: 'endAuction',\n  mixins: [CallPromiseMixin],\n  validate({ id }) {\n    check(id, String);\n  },\n  run({ id }) {\n    console.log('ending loan..');\n    const loan = Loans.findOne(id);\n\n    // This method is called in the future, so make sure that it isn't\n    // executed again if this has already been done\n    if (!loan || loan.logic.auction.status === AUCTION_STATUS.ENDED) {\n      return;\n    }\n\n    Loans.update(id, {\n      $set: {\n        'logic.auction.status': AUCTION_STATUS.ENDED,\n        'logic.auction.endTime': new Date(),\n      },\n    });\n\n    completeActionByType.call({\n      loanId: id,\n      type: ADMIN_ACTION_TYPE.AUCTION,\n    });\n\n    if (Meteor.isServer) {\n      const {\n        scheduleMethod,\n        sendEmail,\n        cancelScheduledEmail,\n        rescheduleEmail,\n      } = importServerMethods();\n\n      const loan = Loans.findOne(id);\n      const email = loan.emails.find(e => e && e.emailId === 'auctionEnded' && e.scheduledAt >= new Date());\n      if (email) {\n        cancelScheduledEmail.call('email.cancelScheduled', {\n          id: email._id,\n\n          loanId: id,\n          template: 'notification+CTA',\n        });\n      }\n    }\n  },\n});\n\nexport const cancelAuction = new ValidatedMethod({\n  name: 'cancelAuction',\n  mixins: [CallPromiseMixin],\n  validate({ id }) {\n    check(id, String);\n  },\n  run({ id }) {\n    if (\n      Roles.userIsInRole(Meteor.userId(), 'admin') ||\n      Roles.userIsInRole(Meteor.userId(), 'dev')\n    ) {\n      return Loans.update(\n        id,\n        {\n          $set: {\n            'logic.auction.endTime': undefined,\n            'logic.auction.status': '',\n            'logic.auction.startTime': undefined,\n          },\n        },\n        (error) => {\n          if (!error && Meteor.isServer) {\n            const {\n              scheduleMethod,\n              sendEmail,\n              cancelScheduledEmail,\n              rescheduleEmail,\n            } = importServerMethods();\n\n            const loan = Loans.findOne(id);\n            const email = loan.emails.find(e =>\n              e && e.emailId === 'auctionEnded' && e.scheduledAt >= new Date());\n            if (email) {\n              cancelScheduledEmail.call('email.cancelScheduled', {\n                id: email._id,\n                loanId: id,\n              });\n            }\n          }\n\n          completeActionByType.call({\n            loanId: id,\n            type: ADMIN_ACTION_TYPE.AUCTION,\n            newStatus: ADMIN_ACTION_STATUS.CANCELLED,\n          });\n        },\n      );\n    }\n\n    throw new Meteor.Error('not authorized');\n  },\n});\n\nexport const confirmClosing = new ValidatedMethod({\n  name: 'confirmClosing',\n  mixins: [CallPromiseMixin],\n  validate({ id }) {\n    check(id, String);\n  },\n  run({ id, object }) {\n    // TODO: Send email to user, clean up, etc.\n\n    if (\n      Roles.userIsInRole(Meteor.userId(), 'admin') ||\n      Roles.userIsInRole(Meteor.userId(), 'dev')\n    ) {\n      return Loans.update(id, {\n        $set: { status: LOAN_STATUS.DONE, ...object },\n      });\n    }\n\n    throw new Meteor.Error('not authorized');\n  },\n});\n\nexport const addEmail = new ValidatedMethod({\n  name: 'addEmail',\n  mixins: [CallPromiseMixin],\n  validate({ loanId, emailId, _id, status, sendAt }) {\n    check(loanId, String);\n    check(emailId, String);\n    check(_id, String);\n    check(status, String);\n    check(sendAt, Match.Optional(Date));\n  },\n  run({ loanId, emailId, _id, status, sendAt }) {\n    const object = {\n      emailId,\n      _id,\n      status,\n      updatedAt: new Date(),\n    };\n\n    if (sendAt) {\n      object.scheduledAt = sendAt;\n    }\n\n    return Loans.update(loanId, { $push: { emails: object } });\n  },\n});\n\nexport const modifyEmail = new ValidatedMethod({\n  name: 'modifyEmail',\n  mixins: [CallPromiseMixin],\n  validate({ loanId, _id, status, sendAt }) {\n    check(loanId, String);\n    check(_id, String);\n    check(status, Match.Optional(String));\n    check(sendAt, Match.Optional(Date));\n  },\n  run({ loanId, _id, status, sendAt }) {\n    const object = {\n      'emails.$.status': status,\n      'emails.$.updatedAt': new Date(),\n    };\n\n    if (sendAt) {\n      object['emails.$.scheduledAt'] = sendAt;\n    }\n\n    return Loans.update({ _id: loanId, 'emails._id': _id }, { $set: object });\n  },\n});\n\nrateLimit({\n  methods: [\n    insertLoan,\n    updateLoan,\n    incrementStep,\n    startAuction,\n    pushLoanValue,\n    popLoanValue,\n    loanVerification,\n    // deleteLoan,\n    cancelAuction,\n    confirmClosing,\n    addEmail,\n    modifyEmail,\n  ],\n});\n"]},"hash":"1d72011c732594ba7643d77169a061c50ffc6afe"}
