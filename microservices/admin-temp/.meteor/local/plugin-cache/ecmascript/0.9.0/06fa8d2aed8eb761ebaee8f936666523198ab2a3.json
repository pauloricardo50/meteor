{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"./base.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Link"}]},{"source":"./lib/smartArguments.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SmartArgs"}]}],"exports":{"exported":["LinkOne"],"specifiers":[{"kind":"local","local":"LinkOne","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js","filenameRelative":"packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"linkOne"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n    \"default\": function () {\n        return LinkOne;\n    }\n});\nvar Link = void 0;\nmodule.watch(require(\"./base.js\"), {\n    \"default\": function (v) {\n        Link = v;\n    }\n}, 0);\nvar SmartArgs = void 0;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n    \"default\": function (v) {\n        SmartArgs = v;\n    }\n}, 1);\n\nvar LinkOne = function (_Link) {\n    (0, _inherits3.default)(LinkOne, _Link);\n\n    function LinkOne() {\n        (0, _classCallCheck3.default)(this, LinkOne);\n        return (0, _possibleConstructorReturn3.default)(this, _Link.apply(this, arguments));\n    }\n\n    LinkOne.prototype.set = function () {\n        function set(what) {\n            var _$set;\n\n            if (this.isVirtual) {\n                this._virtualAction('set', what);\n\n                return this;\n            }\n\n            var field = this.linkStorageField;\n\n            var _id = this.identifyId(what, true);\n\n            this._validateIds([_id]);\n\n            this.object[field] = _id;\n            this.linker.mainCollection.update(this.object._id, {\n                $set: (_$set = {}, _$set[field] = _id, _$set)\n            });\n            return this;\n        }\n\n        return set;\n    }();\n\n    LinkOne.prototype.unset = function () {\n        function unset() {\n            var _$set2;\n\n            if (this.isVirtual) {\n                this._virtualAction('unset', what);\n\n                return this;\n            }\n\n            var field = this.linkStorageField;\n            this.object[field] = null;\n            this.linker.mainCollection.update(this.object._id, {\n                $set: (_$set2 = {}, _$set2[field] = null, _$set2)\n            });\n            return this;\n        }\n\n        return unset;\n    }();\n\n    LinkOne.prototype.add = function () {\n        function add(what) {\n            if (this.isVirtual) {\n                this._virtualAction('add', what);\n\n                return this;\n            }\n\n            throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n        }\n\n        return add;\n    }();\n\n    LinkOne.prototype.remove = function () {\n        function remove(what) {\n            if (this.isVirtual) {\n                this._virtualAction('remove', what);\n\n                return this;\n            }\n\n            throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n        }\n\n        return remove;\n    }();\n\n    return LinkOne;\n}(Link);","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js"],"names":["module","export","LinkOne","Link","watch","require","v","SmartArgs","set","what","isVirtual","_virtualAction","field","linkStorageField","_id","identifyId","_validateIds","object","linker","mainCollection","update","$set","unset","add","Meteor","Error","remove"],"mappings":";;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAAC,eAAQ;AAAA,eAAIC,OAAJ;AAAA;AAAT,CAAd;AAAqC,IAAIC,aAAJ;AAASH,OAAOI,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAAA,yBAASC,CAAT,EAAW;AAACH,eAAKG,CAAL;AAAO;AAAnB,CAAlC,EAAuD,CAAvD;AAA0D,IAAIC,kBAAJ;AAAcP,OAAOI,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAAA,yBAASC,CAAT,EAAW;AAACC,oBAAUD,CAAV;AAAY;AAAxB,CAAhD,EAA0E,CAA1E;;IAGjGJ,O;;;;;;;;sBACjBM,G;qBAAIC,I,EAAM;AAAA;;AACN,gBAAI,KAAKC,SAAT,EAAoB;AAChB,qBAAKC,cAAL,CAAoB,KAApB,EAA2BF,IAA3B;;AACA,uBAAO,IAAP;AACH;;AAED,gBAAIG,QAAQ,KAAKC,gBAAjB;;AACA,gBAAMC,MAAM,KAAKC,UAAL,CAAgBN,IAAhB,EAAsB,IAAtB,CAAZ;;AACA,iBAAKO,YAAL,CAAkB,CAACF,GAAD,CAAlB;;AAEA,iBAAKG,MAAL,CAAYL,KAAZ,IAAqBE,GAArB;AAEA,iBAAKI,MAAL,CAAYC,cAAZ,CAA2BC,MAA3B,CAAkC,KAAKH,MAAL,CAAYH,GAA9C,EAAmD;AAC/CO,yCACKT,KADL,IACaE,GADb;AAD+C,aAAnD;AAMA,mBAAO,IAAP;AACH;;;;;sBAEDQ,K;yBAAQ;AAAA;;AACJ,gBAAI,KAAKZ,SAAT,EAAoB;AAChB,qBAAKC,cAAL,CAAoB,OAApB,EAA6BF,IAA7B;;AACA,uBAAO,IAAP;AACH;;AAED,gBAAIG,QAAQ,KAAKC,gBAAjB;AACA,iBAAKI,MAAL,CAAYL,KAAZ,IAAqB,IAArB;AAEA,iBAAKM,MAAL,CAAYC,cAAZ,CAA2BC,MAA3B,CAAkC,KAAKH,MAAL,CAAYH,GAA9C,EAAmD;AAC/CO,2CACKT,KADL,IACa,IADb;AAD+C,aAAnD;AAMA,mBAAO,IAAP;AACH;;;;;sBAEDW,G;qBAAId,I,EAAM;AACN,gBAAI,KAAKC,SAAT,EAAoB;AAChB,qBAAKC,cAAL,CAAoB,KAApB,EAA2BF,IAA3B;;AACA,uBAAO,IAAP;AACH;;AAED,kBAAM,IAAIe,OAAOC,KAAX,CAAiB,iBAAjB,EAAoC,2GAApC,CAAN;AACH;;;;;sBAEDC,M;wBAAOjB,I,EAAM;AACT,gBAAI,KAAKC,SAAT,EAAoB;AAChB,qBAAKC,cAAL,CAAoB,QAApB,EAA8BF,IAA9B;;AACA,uBAAO,IAAP;AACH;;AAED,kBAAM,IAAIe,OAAOC,KAAX,CAAiB,iBAAjB,EAAoC,8GAApC,CAAN;AACH;;;;;;EAxDgCtB,I","file":"packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js.map","sourcesContent":["import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOne extends Link {\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        const _id = this.identifyId(what, true);\n        this._validateIds([_id]);\n\n        this.object[field] = _id;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: _id\n            }\n        });\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = null;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: null\n            }\n        });\n\n        return this;\n    }\n\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}"]},"hash":"06fa8d2aed8eb761ebaee8f936666523198ab2a3"}
