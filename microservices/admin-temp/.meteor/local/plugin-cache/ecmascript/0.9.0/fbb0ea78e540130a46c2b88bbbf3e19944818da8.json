{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./createReducers","imported":["handleAddField","handleAddElement","handleAddReducer"],"specifiers":[{"kind":"named","imported":"handleAddField","local":"handleAddField"},{"kind":"named","imported":"handleAddElement","local":"handleAddElement"},{"kind":"named","imported":"handleAddReducer","local":"handleAddReducer"}]}],"exports":{"exported":["embedReducerWithLink","reducerBody","collectionNode"],"specifiers":[{"kind":"local","local":"embedReducerWithLink","exported":"default"},{"kind":"local","local":"reducerBody","exported":"default"},{"kind":"local","local":"collectionNode","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"embedReducerWithLink"},"ignored":false,"code":"module.export({\n    \"default\": function () {\n        return embedReducerWithLink;\n    }\n});\nvar handleAddField = void 0,\n    handleAddElement = void 0,\n    handleAddReducer = void 0;\nmodule.watch(require(\"./createReducers\"), {\n    handleAddField: function (v) {\n        handleAddField = v;\n    },\n    handleAddElement: function (v) {\n        handleAddElement = v;\n    },\n    handleAddReducer: function (v) {\n        handleAddReducer = v;\n    }\n}, 0);\n\nfunction embedReducerWithLink(reducerBody, collectionNode) {\n    _.each(reducerBody, function (value, key) {\n        var collection = collectionNode.collection;\n\n        if (_.isObject(value)) {\n            // nested field or link\n            if (collectionNode.body[key]) {\n                // if it exists\n                var linker = collection.getLinker(key); // if it's a link\n\n                if (linker) {\n                    embedReducerWithLink(value, collectionNode.getCollectionNode(key));\n                    return;\n                }\n\n                handleAddField(key, value, collectionNode);\n            } else {\n                // does not exist, so it may be a link/reducer/field\n                handleAddElement(root, key, value);\n            }\n        } else {\n            // if this field or other reducer exists within the collection\n            if (!collectionNode.body[key]) {\n                // can only be field or another reducer for this.\n                var reducer = collection.getReducer(key);\n\n                if (reducer) {\n                    // if it's another reducer\n                    return handleAddReducer(key, reducer, collectionNode);\n                }\n\n                return handleAddField(key, value, collectionNode);\n            }\n        }\n    });\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js"],"names":["module","export","embedReducerWithLink","handleAddField","handleAddElement","handleAddReducer","watch","require","v","reducerBody","collectionNode","_","each","value","key","collection","isObject","body","linker","getLinker","getCollectionNode","root","reducer","getReducer"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAAC,eAAQ;AAAA,eAAIC,oBAAJ;AAAA;AAAT,CAAd;AAAkD,IAAIC,uBAAJ;AAAA,IAAmBC,yBAAnB;AAAA,IAAoCC,yBAApC;AAAqDL,OAAOM,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACJ,kBAAD,YAAgBK,CAAhB,EAAkB;AAACL,yBAAeK,CAAf;AAAiB,KAApC;AAAqCJ,oBAArC,YAAsDI,CAAtD,EAAwD;AAACJ,2BAAiBI,CAAjB;AAAmB,KAA5E;AAA6EH,oBAA7E,YAA8FG,CAA9F,EAAgG;AAACH,2BAAiBG,CAAjB;AAAmB;AAApH,CAAzC,EAA+J,CAA/J;;AAOxF,SAASN,oBAAT,CAA8BO,WAA9B,EAA2CC,cAA3C,EAA2D;AACtEC,MAAEC,IAAF,CAAOH,WAAP,EAAoB,UAACI,KAAD,EAAQC,GAAR,EAAgB;AAChC,YAAMC,aAAaL,eAAeK,UAAlC;;AAEA,YAAIJ,EAAEK,QAAF,CAAWH,KAAX,CAAJ,EAAuB;AACnB;AACA,gBAAIH,eAAeO,IAAf,CAAoBH,GAApB,CAAJ,EAA8B;AAC1B;AACA,oBAAMI,SAASH,WAAWI,SAAX,CAAqBL,GAArB,CAAf,CAF0B,CAI1B;;AACA,oBAAII,MAAJ,EAAY;AACRhB,yCAAqBW,KAArB,EAA4BH,eAAeU,iBAAf,CAAiCN,GAAjC,CAA5B;AACA;AACH;;AAEDX,+BAAeW,GAAf,EAAoBD,KAApB,EAA2BH,cAA3B;AACH,aAXD,MAWO;AACH;AACAN,iCAAiBiB,IAAjB,EAAuBP,GAAvB,EAA4BD,KAA5B;AACH;AACJ,SAjBD,MAiBO;AACH;AAEA,gBAAI,CAACH,eAAeO,IAAf,CAAoBH,GAApB,CAAL,EAA+B;AAC3B;AACA,oBAAMQ,UAAUP,WAAWQ,UAAX,CAAsBT,GAAtB,CAAhB;;AACA,oBAAIQ,OAAJ,EAAa;AACT;AACA,2BAAOjB,iBAAiBS,GAAjB,EAAsBQ,OAAtB,EAA+BZ,cAA/B,CAAP;AACH;;AAED,uBAAOP,eAAeW,GAAf,EAAoBD,KAApB,EAA2BH,cAA3B,CAAP;AACH;AACJ;AACJ,KAlCD;AAmCH","file":"packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js.map","sourcesContent":["import {handleAddField, handleAddElement, handleAddReducer} from './createReducers';\n\n/**\n * Embeds the reducer body with a collection body\n * @param reducerBody\n * @param collectionNode\n */\nexport default function embedReducerWithLink(reducerBody, collectionNode) {\n    _.each(reducerBody, (value, key) => {\n        const collection = collectionNode.collection;\n\n        if (_.isObject(value)) {\n            // nested field or link\n            if (collectionNode.body[key]) {\n                // if it exists\n                const linker = collection.getLinker(key);\n\n                // if it's a link\n                if (linker) {\n                    embedReducerWithLink(value, collectionNode.getCollectionNode(key));\n                    return;\n                }\n\n                handleAddField(key, value, collectionNode);\n            } else {\n                // does not exist, so it may be a link/reducer/field\n                handleAddElement(root, key, value);\n            }\n        } else {\n            // if this field or other reducer exists within the collection\n\n            if (!collectionNode.body[key]) {\n                // can only be field or another reducer for this.\n                const reducer = collection.getReducer(key);\n                if (reducer) {\n                    // if it's another reducer\n                    return handleAddReducer(key, reducer, collectionNode);\n                }\n\n                return handleAddField(key, value, collectionNode);\n            }\n        }\n    })\n}"]},"hash":"fbb0ea78e540130a46c2b88bbbf3e19944818da8"}
