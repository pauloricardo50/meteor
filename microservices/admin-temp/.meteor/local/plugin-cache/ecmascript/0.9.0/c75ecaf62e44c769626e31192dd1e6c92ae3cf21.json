{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../api/cleanMethods","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"cleanMethod"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/utils/saveStartForm.js","filenameRelative":"imports/core/utils/saveStartForm.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/utils/saveStartForm.js.map","sourceFileName":"imports/core/utils/saveStartForm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"saveStartForm"},"ignored":false,"code":"\"use strict\";\n\nvar cleanMethod = void 0;\nmodule.watch(require(\"../api/cleanMethods\"), {\n  default: function _default(v) {\n    cleanMethod = v;\n  }\n}, 0);\n\n// The final function that inserts the documents once the form is finished\nvar saveStartForm = function saveStartForm(f, userId) {\n  var multiple = f.borrowerCount > 1;\n  var borrowerOne = {\n    age: f.age,\n    gender: f.gender,\n    salary: f.income1,\n    bonusExists: f.bonusExists,\n    bonus: {\n      bonus2014: f.bonus11,\n      bonus2015: f.bonus21,\n      bonus2016: f.bonus31,\n      bonus2017: f.bonus41\n    },\n    otherIncome: f.otherIncome || [],\n    expenses: f.expenses || [],\n    realEstate: f.realEstate || [],\n    bankFortune: f.fortune1,\n    insuranceSecondPillar: f.insurance11,\n    insuranceThirdPillar: f.insurance21\n  };\n  var borrowerTwo = {};\n\n  if (multiple) {\n    borrowerTwo = {\n      salary: f.income2,\n      bonusExists: f.bonusExists,\n      bonus: {\n        bonus2014: f.bonus12,\n        bonus2015: f.bonus22,\n        bonus2016: f.bonus32,\n        bonus2017: f.bonus42\n      },\n      bankFortune: f.fortune2,\n      insuranceSecondPillar: f.insurance12,\n      insuranceThirdPillar: f.insurance22,\n      sameAddress: true\n    };\n  }\n\n  var loan = {\n    general: {\n      usageType: f.usageType,\n      purchaseType: f.purchaseType,\n      oldestAge: multiple ? f.oldestAge : f.age,\n      oldestGender: multiple ? f.oldestGender : f.gender,\n      fortuneUsed: f.fortuneUsed,\n      insuranceFortuneUsed: f.insuranceFortuneUsed,\n      propertyWork: f.propertyWork || 0\n    },\n    // property: {\n    //   usageType: f.usageType,\n    //   value: f.propertyValue,\n    //   propertyWork: f.propertyWork || 0,\n    //   investmentRent: f.propertyRent,\n    // },\n    borrowerIds: []\n  };\n  var property = {\n    value: f.propertyValue,\n    investmentRent: f.propertyRent\n  };\n  return cleanMethod('insertBorrower', {\n    object: borrowerOne,\n    userId: userId\n  }).then(function (id1) {\n    return loan.borrowerIds.push(id1);\n  }).then(function () {\n    return !!multiple && cleanMethod('insertBorrower', {\n      object: borrowerTwo,\n      userId: userId\n    });\n  }).then(function (id2) {\n    return !!id2 && loan.borrowerIds.push(id2);\n  }).then(function () {\n    return cleanMethod('insertProperty', {\n      object: property,\n      userId: userId\n    });\n  }).then(function (propertyId) {\n    loan.propertyId = propertyId;\n    return cleanMethod('insertLoan', {\n      object: loan,\n      userId: userId\n    });\n  }) // If no userId is provided, return the loanId\n  .then(function (loanId) {\n    return userId || loanId;\n  }).catch(function (error) {\n    console.warn(error);\n    throw error;\n  });\n};\n\nmodule.exportDefault(saveStartForm);","map":{"version":3,"sources":["imports/core/utils/saveStartForm.js"],"names":["cleanMethod","module","watch","require","default","v","saveStartForm","f","userId","multiple","borrowerCount","borrowerOne","age","gender","salary","income1","bonusExists","bonus","bonus2014","bonus11","bonus2015","bonus21","bonus2016","bonus31","bonus2017","bonus41","otherIncome","expenses","realEstate","bankFortune","fortune1","insuranceSecondPillar","insurance11","insuranceThirdPillar","insurance21","borrowerTwo","income2","bonus12","bonus22","bonus32","bonus42","fortune2","insurance12","insurance22","sameAddress","loan","general","usageType","purchaseType","oldestAge","oldestGender","fortuneUsed","insuranceFortuneUsed","propertyWork","borrowerIds","property","value","propertyValue","investmentRent","propertyRent","object","then","push","id1","id2","propertyId","loanId","catch","error","console","warn","exportDefault"],"mappings":";;AAAA,IAAIA,oBAAJ;AAAgBC,OAAOC,KAAP,CAAaC,QAAQ,qBAAR,CAAb,EAA4C;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACL,kBAAYK,CAAZ;AAAc;AAA1B,CAA5C,EAAwE,CAAxE;;AAEhB;AACA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,CAAD,EAAIC,MAAJ,EAAe;AACnC,MAAMC,WAAWF,EAAEG,aAAF,GAAkB,CAAnC;AACA,MAAMC,cAAc;AAClBC,SAAKL,EAAEK,GADW;AAElBC,YAAQN,EAAEM,MAFQ;AAGlBC,YAAQP,EAAEQ,OAHQ;AAIlBC,iBAAaT,EAAES,WAJG;AAKlBC,WAAO;AACLC,iBAAWX,EAAEY,OADR;AAELC,iBAAWb,EAAEc,OAFR;AAGLC,iBAAWf,EAAEgB,OAHR;AAILC,iBAAWjB,EAAEkB;AAJR,KALW;AAWlBC,iBAAanB,EAAEmB,WAAF,IAAiB,EAXZ;AAYlBC,cAAUpB,EAAEoB,QAAF,IAAc,EAZN;AAalBC,gBAAYrB,EAAEqB,UAAF,IAAgB,EAbV;AAclBC,iBAAatB,EAAEuB,QAdG;AAelBC,2BAAuBxB,EAAEyB,WAfP;AAgBlBC,0BAAsB1B,EAAE2B;AAhBN,GAApB;AAkBA,MAAIC,cAAc,EAAlB;;AACA,MAAI1B,QAAJ,EAAc;AACZ0B,kBAAc;AACZrB,cAAQP,EAAE6B,OADE;AAEZpB,mBAAaT,EAAES,WAFH;AAGZC,aAAO;AACLC,mBAAWX,EAAE8B,OADR;AAELjB,mBAAWb,EAAE+B,OAFR;AAGLhB,mBAAWf,EAAEgC,OAHR;AAILf,mBAAWjB,EAAEiC;AAJR,OAHK;AASZX,mBAAatB,EAAEkC,QATH;AAUZV,6BAAuBxB,EAAEmC,WAVb;AAWZT,4BAAsB1B,EAAEoC,WAXZ;AAYZC,mBAAa;AAZD,KAAd;AAcD;;AAED,MAAMC,OAAO;AACXC,aAAS;AACPC,iBAAWxC,EAAEwC,SADN;AAEPC,oBAAczC,EAAEyC,YAFT;AAGPC,iBAAWxC,WAAWF,EAAE0C,SAAb,GAAyB1C,EAAEK,GAH/B;AAIPsC,oBAAczC,WAAWF,EAAE2C,YAAb,GAA4B3C,EAAEM,MAJrC;AAKPsC,mBAAa5C,EAAE4C,WALR;AAMPC,4BAAsB7C,EAAE6C,oBANjB;AAOPC,oBAAc9C,EAAE8C,YAAF,IAAkB;AAPzB,KADE;AAUX;AACA;AACA;AACA;AACA;AACA;AACAC,iBAAa;AAhBF,GAAb;AAmBA,MAAMC,WAAW;AACfC,WAAOjD,EAAEkD,aADM;AAEfC,oBAAgBnD,EAAEoD;AAFH,GAAjB;AAKA,SACE3D,YAAY,gBAAZ,EAA8B;AAAE4D,YAAQjD,WAAV;AAAuBH;AAAvB,GAA9B,EACGqD,IADH,CACQ;AAAA,WAAOhB,KAAKS,WAAL,CAAiBQ,IAAjB,CAAsBC,GAAtB,CAAP;AAAA,GADR,EAEGF,IAFH,CAEQ;AAAA,WACJ,CAAC,CAACpD,QAAF,IACET,YAAY,gBAAZ,EAA8B;AAC5B4D,cAAQzB,WADoB;AAE5B3B;AAF4B,KAA9B,CAFE;AAAA,GAFR,EAQGqD,IARH,CAQQ;AAAA,WAAO,CAAC,CAACG,GAAF,IAASnB,KAAKS,WAAL,CAAiBQ,IAAjB,CAAsBE,GAAtB,CAAhB;AAAA,GARR,EASGH,IATH,CASQ;AAAA,WAAM7D,YAAY,gBAAZ,EAA8B;AAAE4D,cAAQL,QAAV;AAAoB/C;AAApB,KAA9B,CAAN;AAAA,GATR,EAUGqD,IAVH,CAUQ,UAACI,UAAD,EAAgB;AACpBpB,SAAKoB,UAAL,GAAkBA,UAAlB;AACA,WAAOjE,YAAY,YAAZ,EAA0B;AAAE4D,cAAQf,IAAV;AAAgBrC;AAAhB,KAA1B,CAAP;AACD,GAbH,EAcE;AAdF,GAeGqD,IAfH,CAeQ;AAAA,WAAUrD,UAAU0D,MAApB;AAAA,GAfR,EAgBGC,KAhBH,CAgBS,UAACC,KAAD,EAAW;AAChBC,YAAQC,IAAR,CAAaF,KAAb;AACA,UAAMA,KAAN;AACD,GAnBH,CADF;AAsBD,CApFD;;AAHAnE,OAAOsE,aAAP,CAyFejE,aAzFf","file":"imports/core/utils/saveStartForm.js.map","sourcesContent":["import cleanMethod from 'core/api/cleanMethods';\n\n// The final function that inserts the documents once the form is finished\nconst saveStartForm = (f, userId) => {\n  const multiple = f.borrowerCount > 1;\n  const borrowerOne = {\n    age: f.age,\n    gender: f.gender,\n    salary: f.income1,\n    bonusExists: f.bonusExists,\n    bonus: {\n      bonus2014: f.bonus11,\n      bonus2015: f.bonus21,\n      bonus2016: f.bonus31,\n      bonus2017: f.bonus41,\n    },\n    otherIncome: f.otherIncome || [],\n    expenses: f.expenses || [],\n    realEstate: f.realEstate || [],\n    bankFortune: f.fortune1,\n    insuranceSecondPillar: f.insurance11,\n    insuranceThirdPillar: f.insurance21,\n  };\n  let borrowerTwo = {};\n  if (multiple) {\n    borrowerTwo = {\n      salary: f.income2,\n      bonusExists: f.bonusExists,\n      bonus: {\n        bonus2014: f.bonus12,\n        bonus2015: f.bonus22,\n        bonus2016: f.bonus32,\n        bonus2017: f.bonus42,\n      },\n      bankFortune: f.fortune2,\n      insuranceSecondPillar: f.insurance12,\n      insuranceThirdPillar: f.insurance22,\n      sameAddress: true,\n    };\n  }\n\n  const loan = {\n    general: {\n      usageType: f.usageType,\n      purchaseType: f.purchaseType,\n      oldestAge: multiple ? f.oldestAge : f.age,\n      oldestGender: multiple ? f.oldestGender : f.gender,\n      fortuneUsed: f.fortuneUsed,\n      insuranceFortuneUsed: f.insuranceFortuneUsed,\n      propertyWork: f.propertyWork || 0,\n    },\n    // property: {\n    //   usageType: f.usageType,\n    //   value: f.propertyValue,\n    //   propertyWork: f.propertyWork || 0,\n    //   investmentRent: f.propertyRent,\n    // },\n    borrowerIds: [],\n  };\n\n  const property = {\n    value: f.propertyValue,\n    investmentRent: f.propertyRent,\n  };\n\n  return (\n    cleanMethod('insertBorrower', { object: borrowerOne, userId })\n      .then(id1 => loan.borrowerIds.push(id1))\n      .then(() =>\n        !!multiple &&\n          cleanMethod('insertBorrower', {\n            object: borrowerTwo,\n            userId,\n          }))\n      .then(id2 => !!id2 && loan.borrowerIds.push(id2))\n      .then(() => cleanMethod('insertProperty', { object: property, userId }))\n      .then((propertyId) => {\n        loan.propertyId = propertyId;\n        return cleanMethod('insertLoan', { object: loan, userId });\n      })\n      // If no userId is provided, return the loanId\n      .then(loanId => userId || loanId)\n      .catch((error) => {\n        console.warn(error);\n        throw error;\n      })\n  );\n};\n\nexport default saveStartForm;\n"]},"hash":"c75ecaf62e44c769626e31192dd1e6c92ae3cf21"}
