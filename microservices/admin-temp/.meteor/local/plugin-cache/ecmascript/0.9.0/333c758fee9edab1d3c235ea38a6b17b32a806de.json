{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"../../utils/loadable","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loadable"}]},{"source":"../../utils/conversionFunctions","imported":["toMoney"],"specifiers":[{"kind":"named","imported":"toMoney","local":"toMoney"}]},{"source":"../../utils/loanFunctions","imported":["getLoanValue","getProjectValue"],"specifiers":[{"kind":"named","imported":"getLoanValue","local":"getLoanValue"},{"kind":"named","imported":"getProjectValue","local":"getProjectValue"}]},{"source":"../../config/constants","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"constants"}]},{"source":"../../config/colors","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"colors"}]},{"source":"../../containers/withLoan","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"withLoan"}]},{"source":"./chartSettings","imported":["legend"],"specifiers":[{"kind":"named","imported":"legend","local":"legend"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/charts/ProjectPieChart.jsx","filenameRelative":"imports/core/components/charts/ProjectPieChart.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/charts/ProjectPieChart.jsx.map","sourceFileName":"imports/core/components/charts/ProjectPieChart.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ProjectPieChart"},"ignored":false,"code":"\"use strict\";\n\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  }\n}, 1);\nvar Loadable = void 0;\nmodule.watch(require(\"../../utils/loadable\"), {\n  default: function _default(v) {\n    Loadable = v;\n  }\n}, 2);\n\nvar _toMoney = void 0;\n\nmodule.watch(require(\"../../utils/conversionFunctions\"), {\n  toMoney: function toMoney(v) {\n    _toMoney = v;\n  }\n}, 3);\n\nvar _getLoanValue = void 0,\n    _getProjectValue = void 0;\n\nmodule.watch(require(\"../../utils/loanFunctions\"), {\n  getLoanValue: function getLoanValue(v) {\n    _getLoanValue = v;\n  },\n  getProjectValue: function getProjectValue(v) {\n    _getProjectValue = v;\n  }\n}, 4);\nvar constants = void 0;\nmodule.watch(require(\"../../config/constants\"), {\n  default: function _default(v) {\n    constants = v;\n  }\n}, 5);\nvar colors = void 0;\nmodule.watch(require(\"../../config/colors\"), {\n  default: function _default(v) {\n    colors = v;\n  }\n}, 6);\nvar withLoan = void 0;\nmodule.watch(require(\"../../containers/withLoan\"), {\n  default: function _default(v) {\n    withLoan = v;\n  }\n}, 7);\n\nvar _legend = void 0;\n\nmodule.watch(require(\"./chartSettings\"), {\n  legend: function legend(v) {\n    _legend = v;\n  }\n}, 8);\nvar ReactHighcharts = Loadable({\n  loader: function loader() {\n    return module.dynamicImport('react-highcharts');\n  }\n});\nvar chartColors = {\n  notaryFees: colors.charts[4],\n  lppFees: colors.charts[3],\n  fortune: colors.charts[2],\n  insuranceFortune: colors.charts[1],\n  loan: colors.charts[0]\n};\n\nvar getConfig = function getConfig(props) {\n  var r = props.loan;\n\n  var total = _getProjectValue({\n    loan: r,\n    property: props.property\n  });\n\n  var options = {\n    chart: {\n      type: 'pie',\n      style: {\n        fontFamily: 'Source Sans Pro'\n      },\n      animation: {\n        duration: 400\n      }\n    },\n    title: {\n      text: 'Mon Projet',\n      style: {\n        fontSize: '18px',\n        color: '#222',\n        fontWeight: 400\n      },\n      align: props.titleAlign\n    },\n    subtitle: {\n      text: \"CHF \" + _toMoney(total),\n      style: {\n        fontSize: '14px'\n      },\n      align: props.titleAlign\n    },\n    tooltip: {\n      formatter: function formatter() {\n        return \"<span style=\\\"color:\" + this.color + \"\\\">\\u25CF</span> \" + this.key + \"<br /> <b>CHF \" + _toMoney(Math.round(this.y)) + \"</b><br />\" + Math.round(1000 * this.y / total) / 10 + \"%\";\n      },\n      style: {\n        fontSize: '14px'\n      }\n    },\n    plotOptions: {\n      pie: {\n        borderWidth: 0,\n        allowPointSelect: false,\n        cursor: 'pointer',\n        dataLabels: {\n          enabled: false,\n          format: '<b>{point.name}</b><br />CHF {point.y:,.0f}',\n          style: {\n            overflow: 'visible'\n          }\n        },\n        showInLegend: true\n      }\n    },\n    legend: _legend,\n    series: [{\n      type: 'pie',\n      name: 'Mon Projet',\n      data: [{\n        name: 'Emprunt',\n        y: _getLoanValue(props)\n      }, {\n        name: '2ème Pilier',\n        y: r.general.insuranceFortuneUsed || 0\n      }, {\n        name: 'Fortune',\n        // subtract fees from this\n        y: r.general.fortuneUsed - props.property.value * constants.notaryFees - (r.general.insuranceFortuneUsed * constants.lppFees || 0)\n      }, {\n        name: 'Frais de Notaire',\n        y: props.property.value * constants.notaryFees\n      }, {\n        name: 'Frais 2ème Pilier',\n        y: r.general.insuranceFortuneUsed * constants.lppFees || 0\n      }]\n    }],\n    colors: [chartColors.loan, chartColors.insuranceFortune, chartColors.fortune, chartColors.notaryFees, chartColors.lppFees],\n    lang: {\n      thousandsSep: \"'\"\n    },\n    credits: {\n      enabled: false\n    }\n  };\n  return options;\n};\n\nvar ProjectPieChart = function ProjectPieChart(props) {\n  return React.createElement(ReactHighcharts, {\n    config: getConfig(props)\n  });\n};\n\nProjectPieChart.defaultProps = {\n  divName: 'projectPieChart',\n  titleAlign: 'center'\n};\nProjectPieChart.propTypes = {\n  loan: PropTypes.objectOf(PropTypes.any).isRequired,\n  divName: PropTypes.string,\n  titleAlign: PropTypes.string\n};\nmodule.exportDefault(withLoan(ProjectPieChart));","map":{"version":3,"sources":["imports/core/components/charts/ProjectPieChart.jsx"],"names":["PropTypes","module","watch","require","default","v","React","Loadable","toMoney","getLoanValue","getProjectValue","constants","colors","withLoan","legend","ReactHighcharts","loader","chartColors","notaryFees","charts","lppFees","fortune","insuranceFortune","loan","getConfig","props","r","total","property","options","chart","type","style","fontFamily","animation","duration","title","text","fontSize","color","fontWeight","align","titleAlign","subtitle","tooltip","formatter","key","Math","round","y","plotOptions","pie","borderWidth","allowPointSelect","cursor","dataLabels","enabled","format","overflow","showInLegend","series","name","data","general","insuranceFortuneUsed","fortuneUsed","value","lang","thousandsSep","credits","ProjectPieChart","defaultProps","divName","propTypes","objectOf","any","isRequired","string","exportDefault"],"mappings":"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","file":"imports/core/components/charts/ProjectPieChart.jsx.map","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport Loadable from 'core/utils/loadable';\n\nimport { toMoney } from 'core/utils/conversionFunctions';\nimport { getLoanValue, getProjectValue } from 'core/utils/loanFunctions';\nimport constants from 'core/config/constants';\nimport colors from 'core/config/colors';\nimport withLoan from 'core/containers/withLoan';\n\nimport { legend } from './chartSettings';\n\nconst ReactHighcharts = Loadable({\n  loader: () => import('react-highcharts'),\n});\n\nconst chartColors = {\n  notaryFees: colors.charts[4],\n  lppFees: colors.charts[3],\n  fortune: colors.charts[2],\n  insuranceFortune: colors.charts[1],\n  loan: colors.charts[0],\n};\n\nconst getConfig = (props) => {\n  const r = props.loan;\n  const total = getProjectValue({ loan: r, property: props.property });\n\n  const options = {\n    chart: {\n      type: 'pie',\n      style: { fontFamily: 'Source Sans Pro' },\n      animation: { duration: 400 },\n    },\n    title: {\n      text: 'Mon Projet',\n      style: { fontSize: '18px', color: '#222', fontWeight: 400 },\n      align: props.titleAlign,\n    },\n    subtitle: {\n      text: `CHF ${toMoney(total)}`,\n      style: { fontSize: '14px' },\n      align: props.titleAlign,\n    },\n    tooltip: {\n      formatter() {\n        return `<span style=\"color:${this.color}\">\\u25CF</span> ${\n          this.key\n        }<br /> <b>CHF ${toMoney(Math.round(this.y))}</b><br />${Math.round(1000 * this.y / total) / 10}%`;\n      },\n      style: { fontSize: '14px' },\n    },\n    plotOptions: {\n      pie: {\n        borderWidth: 0,\n        allowPointSelect: false,\n        cursor: 'pointer',\n        dataLabels: {\n          enabled: false,\n          format: '<b>{point.name}</b><br />CHF {point.y:,.0f}',\n          style: {\n            overflow: 'visible',\n          },\n        },\n        showInLegend: true,\n      },\n    },\n    legend,\n    series: [\n      {\n        type: 'pie',\n        name: 'Mon Projet',\n        data: [\n          {\n            name: 'Emprunt',\n            y: getLoanValue(props),\n          },\n          {\n            name: '2ème Pilier',\n            y: r.general.insuranceFortuneUsed || 0,\n          },\n          {\n            name: 'Fortune', // subtract fees from this\n            y:\n              r.general.fortuneUsed -\n              props.property.value * constants.notaryFees -\n              (r.general.insuranceFortuneUsed * constants.lppFees || 0),\n          },\n          {\n            name: 'Frais de Notaire',\n            y: props.property.value * constants.notaryFees,\n          },\n          {\n            name: 'Frais 2ème Pilier',\n            y: r.general.insuranceFortuneUsed * constants.lppFees || 0,\n          },\n        ],\n      },\n    ],\n    colors: [\n      chartColors.loan,\n      chartColors.insuranceFortune,\n      chartColors.fortune,\n      chartColors.notaryFees,\n      chartColors.lppFees,\n    ],\n    lang: { thousandsSep: \"'\" },\n    credits: { enabled: false },\n  };\n\n  return options;\n};\n\nconst ProjectPieChart = props => <ReactHighcharts config={getConfig(props)} />;\n\nProjectPieChart.defaultProps = {\n  divName: 'projectPieChart',\n  titleAlign: 'center',\n};\n\nProjectPieChart.propTypes = {\n  loan: PropTypes.objectOf(PropTypes.any).isRequired,\n  divName: PropTypes.string,\n  titleAlign: PropTypes.string,\n};\n\nexport default withLoan(ProjectPieChart);\n"]},"hash":"333c758fee9edab1d3c235ea38a6b17b32a806de"}
