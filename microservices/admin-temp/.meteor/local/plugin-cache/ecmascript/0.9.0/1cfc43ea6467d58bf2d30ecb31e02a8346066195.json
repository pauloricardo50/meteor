{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"simpl-schema","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SimpleSchema"}]},{"source":"../constants","imported":["FILE_STATUS","PURCHASE_TYPE","USAGE_TYPE"],"specifiers":[{"kind":"named","imported":"FILE_STATUS","local":"FILE_STATUS"},{"kind":"named","imported":"PURCHASE_TYPE","local":"PURCHASE_TYPE"},{"kind":"named","imported":"USAGE_TYPE","local":"USAGE_TYPE"}]}],"exports":{"exported":["borrowerFiles","loanFiles","propertyFiles","getFileIDs","FileSchema","getFileSchema","fakeFile","getFileCount"],"specifiers":[{"kind":"local","local":"borrowerFiles","exported":"borrowerFiles"},{"kind":"local","local":"loanFiles","exported":"loanFiles"},{"kind":"local","local":"propertyFiles","exported":"propertyFiles"},{"kind":"local","local":"getFileIDs","exported":"getFileIDs"},{"kind":"local","local":"FileSchema","exported":"FileSchema"},{"kind":"local","local":"getFileSchema","exported":"getFileSchema"},{"kind":"local","local":"fakeFile","exported":"fakeFile"},{"kind":"local","local":"getFileCount","exported":"getFileCount"}]}}},"options":{"filename":"imports/core/api/files/files.js","filenameRelative":"imports/core/api/files/files.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/files/files.js.map","sourceFileName":"imports/core/api/files/files.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"files"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.export({\n  borrowerFiles: function borrowerFiles() {\n    return _borrowerFiles;\n  },\n  loanFiles: function loanFiles() {\n    return _loanFiles;\n  },\n  propertyFiles: function propertyFiles() {\n    return _propertyFiles;\n  },\n  getFileIDs: function getFileIDs() {\n    return _getFileIDs;\n  },\n  FileSchema: function FileSchema() {\n    return _FileSchema;\n  },\n  getFileSchema: function getFileSchema() {\n    return _getFileSchema;\n  },\n  fakeFile: function fakeFile() {\n    return _fakeFile;\n  },\n  getFileCount: function getFileCount() {\n    return _getFileCount;\n  }\n});\nvar SimpleSchema = void 0;\nmodule.watch(require(\"simpl-schema\"), {\n  default: function _default(v) {\n    SimpleSchema = v;\n  }\n}, 0);\nexports.borrowerFiles = _borrowerFiles;\n\nvar _FILE_STATUS = void 0,\n    _PURCHASE_TYPE = void 0,\n    _USAGE_TYPE = void 0;\n\nmodule.watch(require(\"../constants\"), {\n  FILE_STATUS: function FILE_STATUS(v) {\n    _FILE_STATUS = v;\n  },\n  PURCHASE_TYPE: function PURCHASE_TYPE(v) {\n    _PURCHASE_TYPE = v;\n  },\n  USAGE_TYPE: function USAGE_TYPE(v) {\n    _USAGE_TYPE = v;\n  }\n}, 1);\n\nvar _borrowerFiles = function _borrowerFiles() {\n  var b = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    auction: [{\n      id: 'identity'\n    }, {\n      id: 'residencyPermit',\n      condition: !b.isSwiss\n    }, {\n      id: 'taxes' // condition: true, //TODO: implement married couple logic\n\n    }, {\n      id: 'salaryCertificate'\n    }, {\n      id: 'bonus',\n      condition: !!b.bonus && Object.keys(b.bonus).length > 0\n    }, {\n      id: 'otherIncome',\n      condition: b.otherIncome && !!(b.otherIncome.length > 0)\n    }, {\n      id: 'ownCompanyFinancialStatements',\n      condition: !!b.worksForOwnCompany\n    }, {\n      id: 'divorceJudgment',\n      condition: !b.civilStatus === 'divorced',\n      noTooltips: true\n    }, {\n      id: 'expenses',\n      condition: !!b.otherIncome && !!(b.otherIncome.length > 0)\n    }],\n    contract: [{\n      id: 'nonPursuitExtract',\n      doubleTooltip: true\n    }, {\n      id: 'lastSalaries',\n      noTooltips: true\n    }, {\n      id: 'currentMortgages',\n      condition: !!b.realEstate && !!b.realEstate.length > 0\n    }, {\n      id: 'bankAssetsChange',\n      condition: b.fortuneChange\n    }, {\n      id: 'pensionFundYearlyStatement',\n      condition: b.insuranceSecondPillar > 0,\n      doubleTooltip: true\n    }, {\n      id: 'retirementInsurancePlan',\n      condition: b.insuranceThirdPillar > 0,\n      // TODO, separate from insurance and other below\n      doubleTooltip: true\n    }, {\n      id: 'retirementPlanOther',\n      // condition: true, TODO\n      condition: false,\n      doubleTooltip: true\n    }],\n    closing: [],\n    all: function all() {\n      return [].concat(_toConsumableArray(this.auction), _toConsumableArray(this.contract), _toConsumableArray(this.closing));\n    }\n  };\n};\n\nvar _loanFiles = function _loanFiles() {\n  var r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    auction: [// {\n      //   id: 'plans',\n      // },\n      // {\n      //   id: 'cubage',\n      //   doubleTooltip: true,\n      //   condition: r.propertyId && r.propertyId.style === 'villa',\n      // },\n      // {\n      //   id: 'pictures',\n      // },\n      // {\n      //   id: 'marketingBrochure',\n      //   condition: !!r.general && r.general.purchaseType === 'acquisition',\n      //   required: false,\n      // },\n    ],\n    contract: [{\n      id: 'buyersContract',\n      tooltipSuffix: !!r.general && r.general.purchaseType === 'refinancing' ? 'a' : 'b'\n    }, {\n      id: 'reimbursementStatement',\n      condition: !!r.general && r.general.purchaseType === 'refinancing'\n    }, {\n      id: 'rent',\n      condition: !!r.general && r.general.usageType === 'investment',\n      doubleTooltip: true\n    }, {\n      id: 'coownershipAllocationAgreement',\n      condition: !!r.propertyId && !!r.propertyId.isCoproperty,\n      doubleTooltip: true\n    }, {\n      id: 'coownershipAgreement',\n      condition: !!r.propertyId && !!r.propertyId.isCoproperty,\n      doubleTooltip: true\n    }, {\n      id: 'fireAndWaterInsurance',\n      condition: !!(r.propertyId && r.propertyId.isNew)\n    }],\n    closing: [],\n    // closing: [\n    //   {\n    //     id: 'retirementWithdrawalStatement',\n    //     label: 'Attestation LPP - après retrait',\n    //     help1: 'Certificat émis sur votre demande par votre caisse de pension démontrant votre situation LPP après retrait',\n    //     help2: 'Vous pouvez obtenir ce document, sur demande, auprès de votre caisse de pension',\n    //     condition: !!r.logic && r.insuranceUsePreset === 'withdrawal',\n    //   },\n    // ],\n    other: [{\n      id: 'upload0'\n    }, {\n      id: 'upload1'\n    }, {\n      id: 'upload2'\n    }, {\n      id: 'upload3'\n    }, {\n      id: 'upload4'\n    }],\n    admin: [{\n      id: 'contract'\n    }, {\n      id: 'signedContract'\n    }],\n    all: function all() {\n      return [].concat(_toConsumableArray(this.auction), _toConsumableArray(this.contract), _toConsumableArray(this.closing), _toConsumableArray(this.admin), _toConsumableArray(this.other));\n    }\n  };\n};\n\nvar _propertyFiles = function _propertyFiles() {\n  var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var loan = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    auction: [{\n      id: 'plans'\n    }, {\n      id: 'cubage',\n      doubleTooltip: true,\n      condition: property.style === 'villa'\n    }, {\n      id: 'pictures'\n    }, {\n      id: 'marketingBrochure',\n      condition: !!(loan && loan.general && loan.general.purchaseType === _PURCHASE_TYPE.ACQUISITION),\n      required: false\n    }],\n    contract: [{\n      id: 'rent',\n      condition: !!loan.general && loan.general.usageType === _USAGE_TYPE.INVESTMENT,\n      doubleTooltip: true\n    }, {\n      id: 'landRegisterExtract',\n      doubleTooltip: true\n    }],\n    all: function all() {\n      return [].concat(_toConsumableArray(this.auction), _toConsumableArray(this.contract));\n    }\n  };\n};\n\nvar _getFileIDs = function _getFileIDs(list) {\n  var files = void 0;\n  var ids = [];\n\n  switch (list) {\n    case 'borrower':\n      files = _borrowerFiles();\n      break;\n\n    case 'loan':\n      files = _loanFiles();\n      break;\n\n    case 'property':\n      files = _propertyFiles();\n      break;\n\n    default:\n      throw new Error('invalid file list');\n  }\n\n  files.all().forEach(function (f) {\n    return ids.push(f.id);\n  });\n  return ids;\n};\n\nvar _FileSchema = new SimpleSchema({\n  name: String,\n  initialName: String,\n  size: Number,\n  type: String,\n  url: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url\n  },\n  key: String,\n  fileCount: Number,\n  status: {\n    type: String,\n    allowedValues: Object.values(_FILE_STATUS)\n  },\n  error: {\n    optional: true,\n    type: String\n  }\n});\n\nvar _getFileSchema = function _getFileSchema(list) {\n  var schema = {};\n\n  var arr = _getFileIDs(list);\n\n  arr.forEach(function (id) {\n    schema[id] = {\n      type: Array,\n      optional: true,\n      maxCount: 100\n    };\n    schema[id + \".$\"] = _FileSchema;\n  });\n  return schema;\n};\n\nvar _fakeFile = {\n  name: 'fakeFile.pdf',\n  initialName: 'fakeFile.pdf',\n  size: 10000,\n  type: 'application/pdf',\n  url: 'https://www.fake-url.com',\n  key: 'asdf/fakeKey/fakeFile.pdf',\n  fileCount: 0,\n  status: _FILE_STATUS.VALID,\n  error: ''\n};\n\nvar _getFileCount = function _getFileCount(currentValue) {\n  var fileCountString = '00';\n  var fileCount = 0;\n\n  if (currentValue && currentValue.length > 0) {\n    // If something goes wrong, minimum should be -1 + 1 = 0\n    fileCount = Math.max.apply(Math, _toConsumableArray(currentValue.map(function (f) {\n      return f.fileCount;\n    })).concat([-1])) + 1;\n    fileCountString = fileCount < 10 ? \"0\" + fileCount : \"\" + fileCount;\n  }\n\n  return {\n    fileCount: fileCount,\n    fileCountString: fileCountString\n  };\n};","map":{"version":3,"sources":["imports/core/api/files/files.js"],"names":["module","export","borrowerFiles","loanFiles","propertyFiles","getFileIDs","FileSchema","getFileSchema","fakeFile","getFileCount","SimpleSchema","watch","require","default","v","FILE_STATUS","PURCHASE_TYPE","USAGE_TYPE","b","auction","id","condition","isSwiss","bonus","Object","keys","length","otherIncome","worksForOwnCompany","civilStatus","noTooltips","contract","doubleTooltip","realEstate","fortuneChange","insuranceSecondPillar","insuranceThirdPillar","closing","all","r","tooltipSuffix","general","purchaseType","usageType","propertyId","isCoproperty","isNew","other","admin","property","loan","style","ACQUISITION","required","INVESTMENT","list","files","ids","Error","forEach","push","f","name","String","initialName","size","Number","type","url","regEx","RegEx","Url","key","fileCount","status","allowedValues","values","error","optional","schema","arr","Array","maxCount","VALID","currentValue","fileCountString","Math","max","map"],"mappings":"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","file":"imports/core/api/files/files.js.map","sourcesContent":["import SimpleSchema from 'simpl-schema';\nimport { FILE_STATUS, PURCHASE_TYPE, USAGE_TYPE } from '../constants';\n\nexport const borrowerFiles = (b = {}) => ({\n  auction: [\n    {\n      id: 'identity',\n    },\n    {\n      id: 'residencyPermit',\n      condition: !b.isSwiss,\n    },\n    {\n      id: 'taxes',\n      // condition: true, //TODO: implement married couple logic\n    },\n    {\n      id: 'salaryCertificate',\n    },\n    {\n      id: 'bonus',\n      condition: !!b.bonus && Object.keys(b.bonus).length > 0,\n    },\n    {\n      id: 'otherIncome',\n      condition: b.otherIncome && !!(b.otherIncome.length > 0),\n    },\n    {\n      id: 'ownCompanyFinancialStatements',\n      condition: !!b.worksForOwnCompany,\n    },\n    {\n      id: 'divorceJudgment',\n      condition: !b.civilStatus === 'divorced',\n      noTooltips: true,\n    },\n    {\n      id: 'expenses',\n      condition: !!b.otherIncome && !!(b.otherIncome.length > 0),\n    },\n  ],\n  contract: [\n    {\n      id: 'nonPursuitExtract',\n      doubleTooltip: true,\n    },\n    {\n      id: 'lastSalaries',\n      noTooltips: true,\n    },\n    {\n      id: 'currentMortgages',\n      condition: !!b.realEstate && !!b.realEstate.length > 0,\n    },\n    {\n      id: 'bankAssetsChange',\n      condition: b.fortuneChange,\n    },\n    {\n      id: 'pensionFundYearlyStatement',\n      condition: b.insuranceSecondPillar > 0,\n      doubleTooltip: true,\n    },\n    {\n      id: 'retirementInsurancePlan',\n      condition: b.insuranceThirdPillar > 0, // TODO, separate from insurance and other below\n      doubleTooltip: true,\n    },\n    {\n      id: 'retirementPlanOther',\n      // condition: true, TODO\n      condition: false,\n      doubleTooltip: true,\n    },\n  ],\n  closing: [],\n  all() {\n    return [...this.auction, ...this.contract, ...this.closing];\n  },\n});\n\nexport const loanFiles = (r = {}) => ({\n  auction: [\n    // {\n    //   id: 'plans',\n    // },\n    // {\n    //   id: 'cubage',\n    //   doubleTooltip: true,\n    //   condition: r.propertyId && r.propertyId.style === 'villa',\n    // },\n    // {\n    //   id: 'pictures',\n    // },\n    // {\n    //   id: 'marketingBrochure',\n    //   condition: !!r.general && r.general.purchaseType === 'acquisition',\n    //   required: false,\n    // },\n  ],\n  contract: [\n    {\n      id: 'buyersContract',\n      tooltipSuffix:\n        !!r.general && r.general.purchaseType === 'refinancing' ? 'a' : 'b',\n    },\n    {\n      id: 'reimbursementStatement',\n      condition: !!r.general && r.general.purchaseType === 'refinancing',\n    },\n    {\n      id: 'rent',\n      condition: !!r.general && r.general.usageType === 'investment',\n      doubleTooltip: true,\n    },\n    {\n      id: 'coownershipAllocationAgreement',\n      condition: !!r.propertyId && !!r.propertyId.isCoproperty,\n      doubleTooltip: true,\n    },\n    {\n      id: 'coownershipAgreement',\n      condition: !!r.propertyId && !!r.propertyId.isCoproperty,\n      doubleTooltip: true,\n    },\n    {\n      id: 'fireAndWaterInsurance',\n      condition: !!(r.propertyId && r.propertyId.isNew),\n    },\n  ],\n  closing: [],\n  // closing: [\n  //   {\n  //     id: 'retirementWithdrawalStatement',\n  //     label: 'Attestation LPP - après retrait',\n  //     help1: 'Certificat émis sur votre demande par votre caisse de pension démontrant votre situation LPP après retrait',\n  //     help2: 'Vous pouvez obtenir ce document, sur demande, auprès de votre caisse de pension',\n  //     condition: !!r.logic && r.insuranceUsePreset === 'withdrawal',\n  //   },\n  // ],\n  other: [\n    { id: 'upload0' },\n    { id: 'upload1' },\n    { id: 'upload2' },\n    { id: 'upload3' },\n    { id: 'upload4' },\n  ],\n  admin: [{ id: 'contract' }, { id: 'signedContract' }],\n  all() {\n    return [\n      ...this.auction,\n      ...this.contract,\n      ...this.closing,\n      ...this.admin,\n      ...this.other,\n    ];\n  },\n});\n\nexport const propertyFiles = (property = {}, loan = {}) => ({\n  auction: [\n    {\n      id: 'plans',\n    },\n    {\n      id: 'cubage',\n      doubleTooltip: true,\n      condition: property.style === 'villa',\n    },\n    {\n      id: 'pictures',\n    },\n    {\n      id: 'marketingBrochure',\n      condition: !!(\n        loan &&\n        loan.general &&\n        loan.general.purchaseType === PURCHASE_TYPE.ACQUISITION\n      ),\n      required: false,\n    },\n  ],\n  contract: [\n    {\n      id: 'rent',\n      condition:\n        !!loan.general && loan.general.usageType === USAGE_TYPE.INVESTMENT,\n      doubleTooltip: true,\n    },\n    {\n      id: 'landRegisterExtract',\n      doubleTooltip: true,\n    },\n  ],\n  all() {\n    return [...this.auction, ...this.contract];\n  },\n});\n\nexport const getFileIDs = (list) => {\n  let files;\n  const ids = [];\n  switch (list) {\n  case 'borrower':\n    files = borrowerFiles();\n    break;\n  case 'loan':\n    files = loanFiles();\n    break;\n  case 'property':\n    files = propertyFiles();\n    break;\n  default:\n    throw new Error('invalid file list');\n  }\n\n  files.all().forEach(f => ids.push(f.id));\n\n  return ids;\n};\n\n// Schema used for every file\nexport const FileSchema = new SimpleSchema({\n  name: String,\n  initialName: String,\n  size: Number,\n  type: String,\n  url: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n  },\n  key: String,\n  fileCount: Number,\n  status: {\n    type: String,\n    allowedValues: Object.values(FILE_STATUS),\n  },\n  error: { optional: true, type: String },\n});\n\n// Generates a schema given a list name (loan, or borrowers)\nexport const getFileSchema = (list) => {\n  const schema = {};\n\n  const arr = getFileIDs(list);\n\n  arr.forEach((id) => {\n    schema[id] = {\n      type: Array,\n      optional: true,\n      maxCount: 100,\n    };\n    schema[`${id}.$`] = FileSchema;\n  });\n\n  return schema;\n};\n\nexport const fakeFile = {\n  name: 'fakeFile.pdf',\n  initialName: 'fakeFile.pdf',\n  size: 10000,\n  type: 'application/pdf',\n  url: 'https://www.fake-url.com',\n  key: 'asdf/fakeKey/fakeFile.pdf',\n  fileCount: 0,\n  status: FILE_STATUS.VALID,\n  error: '',\n};\n\nexport const getFileCount = (currentValue) => {\n  let fileCountString = '00';\n  let fileCount = 0;\n  if (currentValue && currentValue.length > 0) {\n    // If something goes wrong, minimum should be -1 + 1 = 0\n    fileCount = Math.max(...currentValue.map(f => f.fileCount), -1) + 1;\n    fileCountString = fileCount < 10 ? `0${fileCount}` : `${fileCount}`;\n  }\n  return { fileCount, fileCountString };\n};\n"]},"hash":"1cfc43ea6467d58bf2d30ecb31e02a8346066195"}
