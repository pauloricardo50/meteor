{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-bootstrap/lib/OverlayTrigger","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"OverlayTrigger"}]},{"source":"../../arrays/tooltips","imported":["tooltips","tooltipsById"],"specifiers":[{"kind":"named","imported":"tooltips","local":"tooltips"},{"kind":"named","imported":"tooltipsById","local":"tooltipsById"}]},{"source":"../../utils/analytics","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"track"}]},{"source":"./Tooltip","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Tooltip"}]}],"exports":{"exported":["TooltipOverlay"],"specifiers":[{"kind":"local","local":"TooltipOverlay","exported":"default"}]}}},"options":{"filename":"imports/core/components/Translation/TooltipOverlay.jsx","filenameRelative":"imports/core/components/Translation/TooltipOverlay.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/Translation/TooltipOverlay.jsx.map","sourceFileName":"imports/core/components/Translation/TooltipOverlay.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TooltipOverlay"},"ignored":false,"code":"\"use strict\";\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  default: function _default() {\n    return TooltipOverlay;\n  }\n});\n\nvar React = void 0,\n    _Component = void 0;\n\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  },\n  Component: function Component(v) {\n    _Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 1);\nvar OverlayTrigger = void 0;\nmodule.watch(require(\"react-bootstrap/lib/OverlayTrigger\"), {\n  default: function _default(v) {\n    OverlayTrigger = v;\n  }\n}, 2);\n\nvar _tooltips = void 0,\n    _tooltipsById = void 0;\n\nmodule.watch(require(\"../../arrays/tooltips\"), {\n  tooltips: function tooltips(v) {\n    _tooltips = v;\n  },\n  tooltipsById: function tooltipsById(v) {\n    _tooltipsById = v;\n  }\n}, 3);\nvar track = void 0;\nmodule.watch(require(\"../../utils/analytics\"), {\n  default: function _default(v) {\n    track = v;\n  }\n}, 4);\nvar Tooltip = void 0;\nmodule.watch(require(\"./Tooltip\"), {\n  default: function _default(v) {\n    Tooltip = v;\n  }\n}, 5);\n\nvar handleClick = function handleClick(event) {\n  return event.stopPropagation();\n};\n\nvar TooltipOverlay = function (_Component2) {\n  (0, _inherits3.default)(TooltipOverlay, _Component2);\n\n  function TooltipOverlay(props) {\n    (0, _classCallCheck3.default)(this, TooltipOverlay);\n\n    // The hide value is used to signal to react-motion that the component\n    // should start to animate out\n    // In the Transition component, when it detects a change in hide\n    // from false to true, it starts to animate out\n    var _this = (0, _possibleConstructorReturn3.default)(this, (TooltipOverlay.__proto__ || Object.getPrototypeOf(TooltipOverlay)).call(this, props));\n\n    _this.state = {\n      hide: false\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(TooltipOverlay, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          placement = _props.placement,\n          id = _props.id,\n          pureId = _props.pureId,\n          list = _props.list,\n          match = _props.match,\n          trigger = _props.trigger,\n          delayShow = _props.delayShow,\n          children = _props.children;\n\n      var tooltipId = id || _tooltips(list)[match.toLowerCase()];\n\n      return React.createElement(\n        OverlayTrigger,\n        {\n          placement: placement,\n          overlay: React.createElement(Tooltip, {\n            placement: placement,\n            trigger: trigger,\n            id: tooltipId,\n            pureId: pureId,\n            hide: this.state.hide,\n            match: match\n          }),\n          rootClose: true,\n          animation: false,\n          trigger: trigger,\n          delayShow: delayShow,\n          onExit: function onExit() {\n            return _this2.setState({\n              hide: true\n            });\n          } // When clicking the same tooltip multiple times, this is not reset\n          ,\n          onEnter: function onEnter() {\n            return _this2.setState({\n              hide: false\n            });\n          },\n          onEntered: function onEntered() {\n            return track('Tooltip - tooltip clicked', {\n              tooltipId: tooltipId\n            });\n          },\n          container: document.body,\n          onClick: handleClick\n        },\n        React.createElement(\n          \"span\",\n          {\n            // className=\"tooltip-overlay hvr-underline-from-center\"\n            className: \"tooltip-overlay\",\n            tabIndex: \"0\"\n          },\n          children\n        )\n      );\n    }\n  }]);\n  return TooltipOverlay;\n}(_Component);\n\nTooltipOverlay.propTypes = {\n  placement: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n  pureId: PropTypes.bool,\n  list: PropTypes.string.isRequired,\n  match: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  trigger: PropTypes.arrayOf(PropTypes.string),\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  delayShow: PropTypes.number\n};\nTooltipOverlay.defaultProps = {\n  trigger: ['click'],\n  // Can be 'click', 'hover', and/or 'focus'\n  placement: 'bottom',\n  pureId: false,\n  delayShow: 300\n};","map":{"version":3,"sources":["imports/core/components/Translation/TooltipOverlay.jsx"],"names":["module","export","default","TooltipOverlay","React","Component","watch","require","v","PropTypes","OverlayTrigger","tooltips","tooltipsById","track","Tooltip","handleClick","event","stopPropagation","props","state","hide","placement","id","pureId","list","match","trigger","delayShow","children","tooltipId","toLowerCase","setState","document","body","propTypes","string","oneOfType","arrayOf","isRequired","bool","element","number","defaultProps"],"mappings":"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","file":"imports/core/components/Translation/TooltipOverlay.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport OverlayTrigger from 'react-bootstrap/lib/OverlayTrigger';\n\nimport { tooltips, tooltipsById } from 'core/arrays/tooltips';\nimport track from 'core/utils/analytics';\n\nimport Tooltip from './Tooltip';\n\nconst handleClick = event => event.stopPropagation();\n\nexport default class TooltipOverlay extends Component {\n  constructor(props) {\n    super(props);\n\n    // The hide value is used to signal to react-motion that the component\n    // should start to animate out\n    // In the Transition component, when it detects a change in hide\n    // from false to true, it starts to animate out\n    this.state = { hide: false };\n  }\n\n  render() {\n    const {\n      placement,\n      id,\n      pureId,\n      list,\n      match,\n      trigger,\n      delayShow,\n      children,\n    } = this.props;\n    const tooltipId = id || tooltips(list)[match.toLowerCase()];\n\n    return (\n      <OverlayTrigger\n        placement={placement}\n        overlay={\n          <Tooltip\n            placement={placement}\n            trigger={trigger}\n            id={tooltipId}\n            pureId={pureId}\n            hide={this.state.hide}\n            match={match}\n          />\n        }\n        rootClose\n        animation={false}\n        trigger={trigger}\n        delayShow={delayShow}\n        onExit={() => this.setState({ hide: true })}\n        // When clicking the same tooltip multiple times, this is not reset\n        onEnter={() => this.setState({ hide: false })}\n        onEntered={() => track('Tooltip - tooltip clicked', { tooltipId })}\n        container={document.body}\n        onClick={handleClick}\n      >\n        <span\n          // className=\"tooltip-overlay hvr-underline-from-center\"\n          className=\"tooltip-overlay\"\n          tabIndex=\"0\"\n        >\n          {children}\n        </span>\n      </OverlayTrigger>\n    );\n  }\n}\n\nTooltipOverlay.propTypes = {\n  placement: PropTypes.string,\n  id: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]).isRequired,\n  pureId: PropTypes.bool,\n  list: PropTypes.string.isRequired,\n  match: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  trigger: PropTypes.arrayOf(PropTypes.string),\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.string])\n    .isRequired,\n  delayShow: PropTypes.number,\n};\n\nTooltipOverlay.defaultProps = {\n  trigger: ['click'], // Can be 'click', 'hover', and/or 'focus'\n  placement: 'bottom',\n  pureId: false,\n  delayShow: 300,\n};\n"]},"hash":"e930279d5ad4bd3694d30b126b32eb9e6026e785"}
