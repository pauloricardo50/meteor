{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./fixtures","imported":[],"specifiers":[]},{"source":"./collections","imported":["Authors","Groups","Posts","Categories","AuthorProfiles"],"specifiers":[{"kind":"named","imported":"Authors","local":"Authors"},{"kind":"named","imported":"Groups","local":"Groups"},{"kind":"named","imported":"Posts","local":"Posts"},{"kind":"named","imported":"Categories","local":"Categories"},{"kind":"named","imported":"AuthorProfiles","local":"AuthorProfiles"}]},{"source":"./namedQueries","imported":["authorsList","postsList","exceptionPostList"],"specifiers":[{"kind":"named","imported":"authorsList","local":"authorsList"},{"kind":"named","imported":"postsList","local":"postsList"},{"kind":"named","imported":"exceptionPostList","local":"exceptionPostList"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/cultofcoders:grapher-react/__tests__/bootstrap/server.js","filenameRelative":"packages/cultofcoders:grapher-react/__tests__/bootstrap/server.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher-react/__tests__/bootstrap/server.js.map","sourceFileName":"packages/cultofcoders:grapher-react/__tests__/bootstrap/server.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"server"},"ignored":false,"code":"module.watch(require(\"./fixtures\"));\nvar Authors = void 0,\n    Groups = void 0,\n    Posts = void 0,\n    Categories = void 0,\n    AuthorProfiles = void 0;\nmodule.watch(require(\"./collections\"), {\n    Authors: function (v) {\n        Authors = v;\n    },\n    Groups: function (v) {\n        Groups = v;\n    },\n    Posts: function (v) {\n        Posts = v;\n    },\n    Categories: function (v) {\n        Categories = v;\n    },\n    AuthorProfiles: function (v) {\n        AuthorProfiles = v;\n    }\n}, 0);\nvar authorsList = void 0,\n    postsList = void 0,\n    exceptionPostList = void 0;\nmodule.watch(require(\"./namedQueries\"), {\n    authorsList: function (v) {\n        authorsList = v;\n    },\n    postsList: function (v) {\n        postsList = v;\n    },\n    exceptionPostList: function (v) {\n        exceptionPostList = v;\n    }\n}, 1);\n\nfunction expose(exposables) {\n    exposables.forEach(function (exposable) {\n        exposable.expose();\n    });\n}\n\nfunction allow(collections) {\n    collections.forEach(function (collection) {\n        collection.allow({\n            insert: function () {\n                return true;\n            },\n            update: function () {\n                return true;\n            },\n            remove: function () {\n                return true;\n            }\n        });\n    });\n}\n\nallow([Authors, Groups, Posts, Categories, AuthorProfiles]);\nexpose([Authors, Groups, Posts, Categories, AuthorProfiles]);\nexpose([authorsList, postsList]);\nexceptionPostList.expose({\n    firewall: function () {\n        throw new Meteor.Error('not-good', 'not-good');\n    }\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher-react/__tests__/bootstrap/server.js"],"names":["module","watch","require","Authors","Groups","Posts","Categories","AuthorProfiles","v","authorsList","postsList","exceptionPostList","expose","exposables","forEach","exposable","allow","collections","collection","insert","update","remove","firewall","Meteor","Error"],"mappings":"AAAAA,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb;AAAoC,IAAIC,gBAAJ;AAAA,IAAYC,eAAZ;AAAA,IAAmBC,cAAnB;AAAA,IAAyBC,mBAAzB;AAAA,IAAoCC,uBAApC;AAAmDP,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACC,WAAD,YAASK,CAAT,EAAW;AAACL,kBAAQK,CAAR;AAAU,KAAtB;AAAuBJ,UAAvB,YAA8BI,CAA9B,EAAgC;AAACJ,iBAAOI,CAAP;AAAS,KAA1C;AAA2CH,SAA3C,YAAiDG,CAAjD,EAAmD;AAACH,gBAAMG,CAAN;AAAQ,KAA5D;AAA6DF,cAA7D,YAAwEE,CAAxE,EAA0E;AAACF,qBAAWE,CAAX;AAAa,KAAxF;AAAyFD,kBAAzF,YAAwGC,CAAxG,EAA0G;AAACD,yBAAeC,CAAf;AAAiB;AAA5H,CAAtC,EAAoK,CAApK;AAAuK,IAAIC,oBAAJ;AAAA,IAAgBC,kBAAhB;AAAA,IAA0BC,0BAA1B;AAA4CX,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACO,eAAD,YAAaD,CAAb,EAAe;AAACC,sBAAYD,CAAZ;AAAc,KAA9B;AAA+BE,aAA/B,YAAyCF,CAAzC,EAA2C;AAACE,oBAAUF,CAAV;AAAY,KAAxD;AAAyDG,qBAAzD,YAA2EH,CAA3E,EAA6E;AAACG,4BAAkBH,CAAlB;AAAoB;AAAlG,CAAvC,EAA2I,CAA3I;;AAI1S,SAASI,MAAT,CAAgBC,UAAhB,EAA4B;AACxBA,eAAWC,OAAX,CAAmB,qBAAa;AAC5BC,kBAAUH,MAAV;AACH,KAFD;AAGH;;AAED,SAASI,KAAT,CAAeC,WAAf,EAA4B;AACxBA,gBAAYH,OAAZ,CAAoB,sBAAc;AAC9BI,mBAAWF,KAAX,CAAiB;AACbG,oBAAQ;AAAA,uBAAM,IAAN;AAAA,aADK;AAEbC,oBAAQ;AAAA,uBAAM,IAAN;AAAA,aAFK;AAGbC,oBAAQ;AAAA,uBAAM,IAAN;AAAA;AAHK,SAAjB;AAKH,KAND;AAOH;;AAEDL,MAAM,CAACb,OAAD,EAAUC,MAAV,EAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCC,cAArC,CAAN;AAEAK,OAAO,CAACT,OAAD,EAAUC,MAAV,EAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCC,cAArC,CAAP;AACAK,OAAO,CAACH,WAAD,EAAcC,SAAd,CAAP;AAEAC,kBAAkBC,MAAlB,CAAyB;AACrBU,YADqB,cACV;AACP,cAAM,IAAIC,OAAOC,KAAX,CAAiB,UAAjB,EAA6B,UAA7B,CAAN;AACH;AAHoB,CAAzB","file":"packages/cultofcoders:grapher-react/__tests__/bootstrap/server.js.map","sourcesContent":["import './fixtures';\nimport {Authors, Groups, Posts, Categories, AuthorProfiles} from './collections';\nimport {authorsList, postsList, exceptionPostList} from './namedQueries';\n\nfunction expose(exposables) {\n    exposables.forEach(exposable => {\n        exposable.expose();\n    });\n}\n\nfunction allow(collections) {\n    collections.forEach(collection => {\n        collection.allow({\n            insert: () => true,\n            update: () => true,\n            remove: () => true,\n        })\n    })\n}\n\nallow([Authors, Groups, Posts, Categories, AuthorProfiles]);\n\nexpose([Authors, Groups, Posts, Categories, AuthorProfiles]);\nexpose([authorsList, postsList]);\n\nexceptionPostList.expose({\n    firewall() {\n        throw new Meteor.Error('not-good', 'not-good');\n    }\n});"]},"hash":"f7c6c2bce9f068843fb795d81bae470c1a2503f3"}
