{"metadata":{"usedHelpers":["classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"../users","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Users"}]},{"source":"./queries/admins","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"adminsQuery"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/users/server/UserService.js","filenameRelative":"imports/core/api/users/server/UserService.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/users/server/UserService.js.map","sourceFileName":"imports/core/api/users/server/UserService.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"UserService"},"ignored":false,"code":"\"use strict\";\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _Accounts = void 0;\n\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts: function Accounts(v) {\n    _Accounts = v;\n  }\n}, 1);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function Roles(v) {\n    _Roles = v;\n  }\n}, 2);\nvar Users = void 0;\nmodule.watch(require(\"../users\"), {\n  default: function _default(v) {\n    Users = v;\n  }\n}, 3);\nvar adminsQuery = void 0;\nmodule.watch(require(\"./queries/admins\"), {\n  default: function _default(v) {\n    adminsQuery = v;\n  }\n}, 4);\n\nvar UserService = function UserService() {\n  (0, _classCallCheck3.default)(this, UserService);\n};\n\nUserService.createUser = function (_ref) {\n  var options = _ref.options,\n      role = _ref.role;\n\n  var newUserId = _Accounts.createUser(options);\n\n  _Roles.addUsersToRoles(newUserId, role);\n\n  return newUserId;\n};\n\nUserService.doesUserExist = function (_ref2) {\n  var email = _ref2.email;\n  return (// This should remain a simple inequality check\n    _Accounts.findUserByEmail(email) != null\n  );\n};\n\nUserService.sendVerificationEmail = function (_ref3) {\n  var userId = _ref3.userId;\n  return _Accounts.sendVerificationEmail(userId);\n};\n\nmodule.exportDefault(new UserService());","map":{"version":3,"sources":["imports/core/api/users/server/UserService.js"],"names":["Meteor","module","watch","require","v","Accounts","Roles","Users","default","adminsQuery","UserService","createUser","options","role","newUserId","addUsersToRoles","doesUserExist","email","findUserByEmail","sendVerificationEmail","userId","exportDefault"],"mappings":";;;;;;;;AAAA,IAAIA,gBAAJ;;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,QAAD,kBAAQI,CAAR,EAAU;AAACJ,cAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;;AAA+D,IAAIC,kBAAJ;;AAAaJ,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACE,UAAD,oBAAUD,CAAV,EAAY;AAACC,gBAASD,CAAT;AAAW;AAAxB,CAA7C,EAAuE,CAAvE;;AAA0E,IAAIE,eAAJ;;AAAUL,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACG,OAAD,iBAAOF,CAAP,EAAS;AAACE,aAAMF,CAAN;AAAQ;AAAlB,CAA9C,EAAkE,CAAlE;AAAqE,IAAIG,cAAJ;AAAUN,OAAOC,KAAP,CAAaC,QAAQ,UAAR,CAAb,EAAiC;AAACK,SAAD,oBAASJ,CAAT,EAAW;AAACG,YAAMH,CAAN;AAAQ;AAApB,CAAjC,EAAuD,CAAvD;AAA0D,IAAIK,oBAAJ;AAAgBR,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACK,SAAD,oBAASJ,CAAT,EAAW;AAACK,kBAAYL,CAAZ;AAAc;AAA1B,CAAzC,EAAqE,CAArE;;IAM9TM,W;;;;AAAAA,W,CACGC,U,GAAa,gBAAuB;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACzC,MAAMC,YAAYT,UAASM,UAAT,CAAoBC,OAApB,CAAlB;;AACAN,SAAMS,eAAN,CAAsBD,SAAtB,EAAiCD,IAAjC;;AACA,SAAOC,SAAP;AACD,C;;AALGJ,W,CAOGM,a,GAAgB;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SACrB;AACAZ,cAASa,eAAT,CAAyBD,KAAzB,KAAmC;AAFd;AAAA,C;;AAPnBP,W,CAWGS,qB,GAAwB;AAAA,MAAGC,MAAH,SAAGA,MAAH;AAAA,SAC7Bf,UAASc,qBAAT,CAA+BC,MAA/B,CAD6B;AAAA,C;;AAjBjCnB,OAAOoB,aAAP,CAqBe,IAAIX,WAAJ,EArBf","file":"imports/core/api/users/server/UserService.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Roles } from 'meteor/alanning:roles';\nimport Users from '../users';\nimport adminsQuery from './queries/admins';\n\nclass UserService {\n  static createUser = ({ options, role }) => {\n    const newUserId = Accounts.createUser(options);\n    Roles.addUsersToRoles(newUserId, role);\n    return newUserId;\n  };\n\n  static doesUserExist = ({ email }) =>\n    // This should remain a simple inequality check\n    Accounts.findUserByEmail(email) != null;\n\n  static sendVerificationEmail = ({ userId }) =>\n    Accounts.sendVerificationEmail(userId);\n}\n\nexport default new UserService();\n"]},"hash":"a93e34d1f27b5787047f0f75cd543ae9e935d872"}
