{"metadata":{"usedHelpers":["classCallCheck","typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","filenameRelative":"packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"smartArguments"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exportDefault(new (function () {\n    function _class() {\n        (0, _classCallCheck3.default)(this, _class);\n    }\n\n    _class.prototype.getIds = function () {\n        function getIds(what, options) {\n            var _this = this;\n\n            if (_.isArray(what)) {\n                return _.map(what, function (subWhat) {\n                    return _this.getId(subWhat, options);\n                });\n            } else {\n                return [this.getId(what, options)];\n            }\n\n            throw new Meteor.Error('invalid-type', \"Unrecognized type: \" + (typeof what === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(what)) + \" for managing links\");\n        }\n\n        return getIds;\n    }();\n\n    _class.prototype.getId = function () {\n        function getId(what, options) {\n            if (typeof what === 'string') {\n                return what;\n            }\n\n            if ((typeof what === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(what)) === 'object') {\n                if (!what._id && options.saveToDatabase) {\n                    what._id = options.collection.insert(what);\n                }\n\n                return what._id;\n            }\n        }\n\n        return getId;\n    }();\n\n    return _class;\n}())());","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js"],"names":["module","exportDefault","getIds","what","options","_","isArray","map","subWhat","getId","Meteor","Error","_id","saveToDatabase","collection","insert"],"mappings":";;;;;;;;;;AAAAA,OAAOC,aAAP,CAKe;AAAA;AAAA;AAAA;;AAAA,qBACXC,MADW;AAAA,wBACJC,IADI,EACEC,OADF,EACW;AAAA;;AAClB,gBAAIC,EAAEC,OAAF,CAAUH,IAAV,CAAJ,EAAqB;AACjB,uBAAOE,EAAEE,GAAF,CAAMJ,IAAN,EAAY,UAACK,OAAD,EAAa;AAC5B,2BAAO,MAAKC,KAAL,CAAWD,OAAX,EAAoBJ,OAApB,CAAP;AACH,iBAFM,CAAP;AAGH,aAJD,MAIO;AACH,uBAAO,CAAC,KAAKK,KAAL,CAAWN,IAAX,EAAiBC,OAAjB,CAAD,CAAP;AACH;;AAED,kBAAM,IAAIM,OAAOC,KAAX,CAAiB,cAAjB,kCAA8DR,IAA9D,uDAA8DA,IAA9D,2BAAN;AACH;;AAXU;AAAA;;AAAA,qBAaXM,KAbW;AAAA,uBAaLN,IAbK,EAaCC,OAbD,EAaU;AACjB,gBAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1B,uBAAOA,IAAP;AACH;;AAED,gBAAI,QAAOA,IAAP,uDAAOA,IAAP,OAAgB,QAApB,EAA8B;AAC1B,oBAAI,CAACA,KAAKS,GAAN,IAAaR,QAAQS,cAAzB,EAAyC;AACrCV,yBAAKS,GAAL,GAAWR,QAAQU,UAAR,CAAmBC,MAAnB,CAA0BZ,IAA1B,CAAX;AACH;;AAED,uBAAOA,KAAKS,GAAZ;AACH;AACJ;;AAzBU;AAAA;;AAAA;AAAA,MALf","file":"packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js.map","sourcesContent":["/**\n * When you work with add/remove set/unset\n * You have the ability to pass strings, array of strings, objects, array of objects\n * If you are adding something and you want to save them in db, you can pass objects without ids.\n */\nexport default new class {\n    getIds(what, options) {\n        if (_.isArray(what)) {\n            return _.map(what, (subWhat) => {\n                return this.getId(subWhat, options)\n            })\n        } else {\n            return [this.getId(what, options)];\n        }\n\n        throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n    }\n\n    getId(what, options) {\n        if (typeof what === 'string') {\n            return what;\n        }\n\n        if (typeof what === 'object') {\n            if (!what._id && options.saveToDatabase) {\n                what._id = options.collection.insert(what);\n            }\n\n            return what._id\n        }\n    }\n}"]},"hash":"d161ea6df15914449c0707d7783df7b338d1f712"}
