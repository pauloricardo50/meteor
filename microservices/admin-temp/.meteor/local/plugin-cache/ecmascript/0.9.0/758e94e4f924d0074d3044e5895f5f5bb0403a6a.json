{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../constants","imported":["SAFE_DOTTED_FIELD_REPLACEMENT"],"specifiers":[{"kind":"named","imported":"SAFE_DOTTED_FIELD_REPLACEMENT","local":"SAFE_DOTTED_FIELD_REPLACEMENT"}]},{"source":"dot-object","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"dot"}]}],"exports":{"exported":["aggregationResult"],"specifiers":[{"kind":"local","local":"aggregationResult","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"snapBackDottedFields"},"ignored":false,"code":"var SAFE_DOTTED_FIELD_REPLACEMENT = void 0;\nmodule.watch(require(\"../constants\"), {\n    SAFE_DOTTED_FIELD_REPLACEMENT: function (v) {\n        SAFE_DOTTED_FIELD_REPLACEMENT = v;\n    }\n}, 0);\nvar dot = void 0;\nmodule.watch(require(\"dot-object\"), {\n    \"default\": function (v) {\n        dot = v;\n    }\n}, 1);\nmodule.exportDefault(function (aggregationResult) {\n    aggregationResult.forEach(function (result) {\n        result.data = result.data.map(function (document) {\n            _.each(document, function (value, key) {\n                if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n                    document[key.replace(SAFE_DOTTED_FIELD_REPLACEMENT, '.')] = value;\n                    delete document[key];\n                }\n            });\n\n            return dot.object(document);\n        });\n    });\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js"],"names":["SAFE_DOTTED_FIELD_REPLACEMENT","module","watch","require","v","dot","exportDefault","aggregationResult","forEach","result","data","map","_","each","document","value","key","indexOf","replace","object"],"mappings":"AAAA,IAAIA,sCAAJ;AAAkCC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACH,iCAAD,YAA+BI,CAA/B,EAAiC;AAACJ,wCAA8BI,CAA9B;AAAgC;AAAlE,CAArC,EAAyG,CAAzG;AAA4G,IAAIC,YAAJ;AAAQJ,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,yBAASC,CAAT,EAAW;AAACC,cAAID,CAAJ;AAAM;AAAlB,CAAnC,EAAuD,CAAvD;AAAtJH,OAAOK,aAAP,CAGe,UAAUC,iBAAV,EAA6B;AACxCA,sBAAkBC,OAAlB,CAA0B,kBAAU;AAChCC,eAAOC,IAAP,GAAcD,OAAOC,IAAP,CAAYC,GAAZ,CAAgB,oBAAY;AACtCC,cAAEC,IAAF,CAAOC,QAAP,EAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC7B,oBAAIA,IAAIC,OAAJ,CAAYjB,6BAAZ,KAA8C,CAAlD,EAAqD;AACjDc,6BAASE,IAAIE,OAAJ,CAAYlB,6BAAZ,EAA2C,GAA3C,CAAT,IAA4De,KAA5D;AACA,2BAAOD,SAASE,GAAT,CAAP;AACH;AACJ,aALD;;AAOA,mBAAOX,IAAIc,MAAJ,CAAWL,QAAX,CAAP;AACH,SATa,CAAd;AAUH,KAXD;AAYH,CAhBD","file":"packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js.map","sourcesContent":["import {SAFE_DOTTED_FIELD_REPLACEMENT} from '../constants';\nimport dot from 'dot-object';\n\nexport default function (aggregationResult) {\n    aggregationResult.forEach(result => {\n        result.data = result.data.map(document => {\n            _.each(document, (value, key) => {\n                if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n                    document[key.replace(SAFE_DOTTED_FIELD_REPLACEMENT, '.')] = value;\n                    delete document[key];\n                }\n            });\n\n            return dot.object(document);\n        })\n    })\n}"]},"hash":"758e94e4f924d0074d3044e5895f5f5bb0403a6a"}
