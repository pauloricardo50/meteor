{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]},{"source":"../loans","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loans"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/loans/server/publications.js","filenameRelative":"imports/core/api/loans/server/publications.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/loans/server/publications.js.map","sourceFileName":"imports/core/api/loans/server/publications.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"publications"},"ignored":false,"code":"\"use strict\";\n\nvar _this = undefined;\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _check = void 0;\n\nmodule.watch(require(\"meteor/check\"), {\n  check: function check(v) {\n    _check = v;\n  }\n}, 1);\nvar Loans = void 0;\nmodule.watch(require(\"../loans\"), {\n  default: function _default(v) {\n    Loans = v;\n  }\n}, 2);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function Roles(v) {\n    _Roles = v;\n  }\n}, 3);\n\n// Publish a specific loan with an ID\n_Meteor.publish('loan', function publish(id) {\n  // Verify if user is logged In\n  if (!_Meteor.userId()) {\n    return this.ready();\n  }\n\n  _check(id, String);\n\n  if (_Roles.userIsInRole(_Meteor.userId(), 'admin') || _Roles.userIsInRole(_Meteor.userId(), 'dev')) {\n    return Loans.find({\n      _id: id\n    });\n  }\n\n  return Loans.find({\n    userId: _Meteor.userId(),\n    _id: id\n  }); // Throw unauthorized error\n}); // Publish all loans from the current user\n\n\n_Meteor.publish('loans', function publish() {\n  // Verify if user is logged In\n  if (!_Meteor.userId()) {\n    return this.ready();\n  }\n\n  return Loans.find({\n    userId: _Meteor.userId()\n  });\n}); // Publish all loans for a user\n\n\n_Meteor.publish('userLoans', function (userId) {\n  _check(userId, String); // Verify if user is logged In\n\n\n  if (_Roles.userIsInRole(_Meteor.userId(), 'admin') || _Roles.userIsInRole(_Meteor.userId(), 'dev')) {\n    // Return all users\n    return Loans.find({\n      userId: userId\n    });\n  }\n\n  return _this.ready();\n}); // Publish all loans in the database for admins\n\n\n_Meteor.publish('allLoans', function publish() {\n  // Verify if user is logged In\n  if (_Roles.userIsInRole(_Meteor.userId(), 'admin') || _Roles.userIsInRole(_Meteor.userId(), 'dev')) {\n    // Return all users\n    return Loans.find();\n  }\n\n  return this.ready();\n}); // The fields visible to partners\n\n\nvar partnerVisibleFields = function partnerVisibleFields(organization) {\n  return {\n    // TODO: Complete this\n    'general.purchaseType': 1,\n    'general.usageType': 1,\n    'general.fortuneUsed': 1,\n    'general.insuranceFortuneUsed': 1,\n    'general.incomeUsed': 1,\n    'borrowers.age': 1,\n    'borrowers.gender': 1,\n    'borrowers.birthDate': 1,\n    'borrowers.grossIncome': 1,\n    'borrowers.bonusExists': 1,\n    'borrowers.bonus': 1,\n    'borrowers.otherIncome': 1,\n    'borrowers.currentRentExists': 1,\n    'borrowers.currentRent': 1,\n    'borrowers.realEstateFortune': 1,\n    'borrowers.cashAndSecurities': 1,\n    'borrowers.existingDebt': 1,\n    'borrowers.otherFortune': 1,\n    'borrowers.insuranceLpp': 1,\n    'borrowers.insurance3A': 1,\n    'borrowers.insurance3B': 1,\n    'borrowers.insurancePureRisk': 1,\n    property: 1,\n    // partnerOffers: {\n    //   $elemMatch: { $eq: { name: organization } },\n    // },\n    'logic.step': 1,\n    'logic.uploadTaxesLater': 1,\n    'logic.auction.status': 1,\n    'logic.auction.startTime': 1,\n    'logic.auction.endTime': 1\n  };\n}; // Publish all loans this partner has access to\n\n\n_Meteor.publish('partnerLoansAuction', function publish() {\n  if (_Roles.userIsInRole(_Meteor.userId(), 'partner')) {\n    var user = _Meteor.users.findOne(_Meteor.userId()); // Show loans where the canton matches this partner's cantons\n    // and the auction has started\n    // and the auctionEndTime is greater than this date\n    // and this partner's organization is not in the partnersToAvoid\n\n\n    return Loans.find({\n      $and: [{\n        'general.canton': {\n          $in: user.profile.cantons\n        }\n      }, {\n        'logic.auction.status': 'started'\n      }, {\n        $or: [{\n          'general.partnersToAvoidExists': false\n        }, {\n          'general.partnersToAvoid.0': {\n            $ne: user.profile.organization\n          }\n        }]\n      }]\n    }, {\n      fields: partnerVisibleFields(user.profile.organization)\n    });\n  }\n\n  return this.ready();\n}); // Publish all loans this partner has access to\n\n\n_Meteor.publish('partnerLoansCompleted', function publish() {\n  if (_Roles.userIsInRole(_Meteor.userId(), 'partner')) {\n    // Get the current partner user\n    var user = _Meteor.users.findOne(_Meteor.userId()); // Return the loans where this partner has been selected\n\n\n    return Loans.find({\n      'general.selectedPartner': user.profile.organization\n    }, {\n      fields: partnerVisibleFields(user.profile.organization)\n    });\n  }\n\n  return this.ready();\n}); // Publish the loan with a specific ID, and only show the fields for an anonymous offer\n\n\n_Meteor.publish('partnerSingleLoan', function publish(id) {\n  _check(id, String); // Verify if this is a partner account\n\n\n  if (_Roles.userIsInRole(_Meteor.userId(), 'partner')) {\n    var user = _Meteor.users.findOne(_Meteor.userId());\n\n    return Loans.find({\n      $and: [{\n        _id: id\n      }, {\n        'general.canton': {\n          $in: user.profile.cantons\n        }\n      }, {\n        'logic.auction.status': 'started'\n      }, {\n        $or: [{\n          'general.partnersToAvoidExists': false\n        }, {\n          'general.partnersToAvoid.0': {\n            $ne: user.profile.organization\n          }\n        }]\n      }]\n    }, {\n      fields: partnerVisibleFields(user.profile.organization)\n    });\n  }\n\n  return this.ready();\n});","map":{"version":3,"sources":["imports/core/api/loans/server/publications.js"],"names":["Meteor","module","watch","require","v","check","Loans","default","Roles","publish","id","userId","ready","String","userIsInRole","find","_id","partnerVisibleFields","property","user","users","findOne","$and","$in","profile","cantons","$or","$ne","organization","fields"],"mappings":"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","file":"imports/core/api/loans/server/publications.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport Loans from '../loans';\nimport { Roles } from 'meteor/alanning:roles';\n\n// Publish a specific loan with an ID\nMeteor.publish('loan', function publish(id) {\n  // Verify if user is logged In\n  if (!Meteor.userId()) {\n    return this.ready();\n  }\n\n  check(id, String);\n\n  if (\n    Roles.userIsInRole(Meteor.userId(), 'admin') ||\n    Roles.userIsInRole(Meteor.userId(), 'dev')\n  ) {\n    return Loans.find({\n      _id: id,\n    });\n  }\n\n  return Loans.find({\n    userId: Meteor.userId(),\n    _id: id,\n  });\n\n  // Throw unauthorized error\n});\n\n// Publish all loans from the current user\nMeteor.publish('loans', function publish() {\n  // Verify if user is logged In\n  if (!Meteor.userId()) {\n    return this.ready();\n  }\n\n  return Loans.find({\n    userId: Meteor.userId(),\n  });\n});\n\n// Publish all loans for a user\nMeteor.publish('userLoans', (userId) => {\n  check(userId, String);\n\n  // Verify if user is logged In\n  if (\n    Roles.userIsInRole(Meteor.userId(), 'admin') ||\n    Roles.userIsInRole(Meteor.userId(), 'dev')\n  ) {\n    // Return all users\n    return Loans.find({ userId });\n  }\n\n  return this.ready();\n});\n\n// Publish all loans in the database for admins\nMeteor.publish('allLoans', function publish() {\n  // Verify if user is logged In\n  if (\n    Roles.userIsInRole(Meteor.userId(), 'admin') ||\n    Roles.userIsInRole(Meteor.userId(), 'dev')\n  ) {\n    // Return all users\n    return Loans.find();\n  }\n\n  return this.ready();\n});\n\n// The fields visible to partners\nconst partnerVisibleFields = organization => ({\n  // TODO: Complete this\n  'general.purchaseType': 1,\n  'general.usageType': 1,\n  'general.fortuneUsed': 1,\n  'general.insuranceFortuneUsed': 1,\n  'general.incomeUsed': 1,\n\n  'borrowers.age': 1,\n  'borrowers.gender': 1,\n  'borrowers.birthDate': 1,\n  'borrowers.grossIncome': 1,\n  'borrowers.bonusExists': 1,\n  'borrowers.bonus': 1,\n  'borrowers.otherIncome': 1,\n  'borrowers.currentRentExists': 1,\n  'borrowers.currentRent': 1,\n  'borrowers.realEstateFortune': 1,\n  'borrowers.cashAndSecurities': 1,\n  'borrowers.existingDebt': 1,\n  'borrowers.otherFortune': 1,\n  'borrowers.insuranceLpp': 1,\n  'borrowers.insurance3A': 1,\n  'borrowers.insurance3B': 1,\n  'borrowers.insurancePureRisk': 1,\n\n  property: 1,\n\n  // partnerOffers: {\n  //   $elemMatch: { $eq: { name: organization } },\n  // },\n\n  'logic.step': 1,\n  'logic.uploadTaxesLater': 1,\n  'logic.auction.status': 1,\n  'logic.auction.startTime': 1,\n  'logic.auction.endTime': 1,\n});\n\n// Publish all loans this partner has access to\nMeteor.publish('partnerLoansAuction', function publish() {\n  if (Roles.userIsInRole(Meteor.userId(), 'partner')) {\n    const user = Meteor.users.findOne(Meteor.userId());\n\n    // Show loans where the canton matches this partner's cantons\n    // and the auction has started\n    // and the auctionEndTime is greater than this date\n    // and this partner's organization is not in the partnersToAvoid\n    return Loans.find(\n      {\n        $and: [\n          { 'general.canton': { $in: user.profile.cantons } },\n          { 'logic.auction.status': 'started' },\n          {\n            $or: [\n              { 'general.partnersToAvoidExists': false },\n              {\n                'general.partnersToAvoid.0': { $ne: user.profile.organization },\n              },\n            ],\n          },\n        ],\n      },\n      {\n        fields: partnerVisibleFields(user.profile.organization),\n      },\n    );\n  }\n\n  return this.ready();\n});\n\n// Publish all loans this partner has access to\nMeteor.publish('partnerLoansCompleted', function publish() {\n  if (Roles.userIsInRole(Meteor.userId(), 'partner')) {\n    // Get the current partner user\n    const user = Meteor.users.findOne(Meteor.userId());\n\n    // Return the loans where this partner has been selected\n    return Loans.find(\n      {\n        'general.selectedPartner': user.profile.organization,\n      },\n      {\n        fields: partnerVisibleFields(user.profile.organization),\n      },\n    );\n  }\n\n  return this.ready();\n});\n\n// Publish the loan with a specific ID, and only show the fields for an anonymous offer\nMeteor.publish('partnerSingleLoan', function publish(id) {\n  check(id, String);\n\n  // Verify if this is a partner account\n  if (Roles.userIsInRole(Meteor.userId(), 'partner')) {\n    const user = Meteor.users.findOne(Meteor.userId());\n\n    return Loans.find(\n      {\n        $and: [\n          { _id: id },\n          { 'general.canton': { $in: user.profile.cantons } },\n          { 'logic.auction.status': 'started' },\n          {\n            $or: [\n              { 'general.partnersToAvoidExists': false },\n              {\n                'general.partnersToAvoid.0': { $ne: user.profile.organization },\n              },\n            ],\n          },\n        ],\n      },\n      {\n        fields: partnerVisibleFields(user.profile.organization),\n      },\n    );\n  }\n\n  return this.ready();\n});\n"]},"hash":"672f7ca912f9897e8dacaf85ad207ccdc66f44d7"}
