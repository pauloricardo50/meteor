{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"./Uploader","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Uploader"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/UploaderArray/UploaderArray.jsx","filenameRelative":"imports/core/components/UploaderArray/UploaderArray.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/UploaderArray/UploaderArray.jsx.map","sourceFileName":"imports/core/components/UploaderArray/UploaderArray.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"UploaderArray"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Uploader = void 0;\nmodule.watch(require(\"./Uploader\"), {\n  default: function _default(v) {\n    Uploader = v;\n  }\n}, 2);\n\n// Support for custom uploadX files\nvar getTitle = function getTitle(id, doc) {\n  if (doc.logic) {\n    var closingSteps = doc.logic.closingSteps;\n\n    if (!closingSteps) {\n      return undefined;\n    }\n\n    return id.indexOf('upload') >= 0 ? closingSteps.find(function (s) {\n      return s.id === id;\n    }) && closingSteps.find(function (s) {\n      return s.id === id;\n    }).title || id : undefined;\n  }\n\n  return undefined;\n};\n\nvar UploaderArray = function UploaderArray(_ref) {\n  var fileArray = _ref.fileArray,\n      doc = _ref.doc,\n      disabled = _ref.disabled,\n      collection = _ref.collection;\n  var pushFunc = void 0;\n  var updateFunc = void 0;\n\n  if (collection === 'loans') {\n    pushFunc = 'pushLoanValue';\n    updateFunc = 'updateLoan';\n  } else if (collection === 'borrowers') {\n    pushFunc = 'pushBorrowerValue';\n    updateFunc = 'updateBorrower';\n  } else if (collection === 'properties') {\n    pushFunc = 'pushPropertyValue';\n    updateFunc = 'updateProperty';\n  }\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"flex-col center\"\n    },\n    fileArray ? fileArray.map(function (file) {\n      return file.condition !== false && React.createElement(Uploader, {\n        fileMeta: (0, _extends3.default)({}, file, {\n          title: getTitle(file.id, doc)\n        }),\n        key: doc._id + file.id,\n        currentValue: doc.files[file.id],\n        docId: doc._id,\n        pushFunc: pushFunc,\n        updateFunc: updateFunc,\n        disabled: disabled,\n        collection: collection\n      });\n    }) : // Show all existing files for this doc\n    Object.keys(doc.files).map(function (fileId) {\n      return React.createElement(Uploader, {\n        fileMeta: {\n          id: fileId,\n          title: getTitle(fileId, doc)\n        },\n        collection: collection,\n        key: fileId,\n        docId: doc._id,\n        currentValue: doc.files[fileId],\n        disabled: disabled\n      });\n    })\n  );\n};\n\nUploaderArray.propTypes = {\n  fileArray: PropTypes.arrayOf(PropTypes.object),\n  doc: PropTypes.objectOf(PropTypes.any).isRequired,\n  disabled: PropTypes.bool,\n  collection: PropTypes.string.isRequired\n};\nUploaderArray.defaultProps = {\n  disabled: false,\n  fileArray: undefined\n};\nmodule.exportDefault(UploaderArray);","map":{"version":3,"sources":["imports/core/components/UploaderArray/UploaderArray.jsx"],"names":["React","module","watch","require","default","v","PropTypes","Uploader","getTitle","id","doc","logic","closingSteps","undefined","indexOf","find","s","title","UploaderArray","fileArray","disabled","collection","pushFunc","updateFunc","map","file","condition","_id","files","Object","keys","fileId","propTypes","arrayOf","object","objectOf","any","isRequired","bool","string","defaultProps","exportDefault"],"mappings":"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","file":"imports/core/components/UploaderArray/UploaderArray.jsx.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Uploader from './Uploader';\n\n// Support for custom uploadX files\nconst getTitle = (id, doc) => {\n  if (doc.logic) {\n    const { closingSteps } = doc.logic;\n    if (!closingSteps) {\n      return undefined;\n    }\n    return id.indexOf('upload') >= 0\n      ? (closingSteps.find(s => s.id === id) &&\n          closingSteps.find(s => s.id === id).title) ||\n          id\n      : undefined;\n  }\n\n  return undefined;\n};\n\nconst UploaderArray = ({ fileArray, doc, disabled, collection }) => {\n  let pushFunc;\n  let updateFunc;\n\n  if (collection === 'loans') {\n    pushFunc = 'pushLoanValue';\n    updateFunc = 'updateLoan';\n  } else if (collection === 'borrowers') {\n    pushFunc = 'pushBorrowerValue';\n    updateFunc = 'updateBorrower';\n  } else if (collection === 'properties') {\n    pushFunc = 'pushPropertyValue';\n    updateFunc = 'updateProperty';\n  }\n\n  return (\n    <div className=\"flex-col center\">\n      {fileArray\n        ? fileArray.map(file =>\n          file.condition !== false && (\n            <Uploader\n              fileMeta={{ ...file, title: getTitle(file.id, doc) }}\n              key={doc._id + file.id}\n              currentValue={doc.files[file.id]}\n              docId={doc._id}\n              pushFunc={pushFunc}\n              updateFunc={updateFunc}\n              disabled={disabled}\n              collection={collection}\n            />\n          ))\n        : // Show all existing files for this doc\n        Object.keys(doc.files).map(fileId => (\n          <Uploader\n            fileMeta={{ id: fileId, title: getTitle(fileId, doc) }}\n            collection={collection}\n            key={fileId}\n            docId={doc._id}\n            currentValue={doc.files[fileId]}\n            disabled={disabled}\n          />\n        ))}\n    </div>\n  );\n};\n\nUploaderArray.propTypes = {\n  fileArray: PropTypes.arrayOf(PropTypes.object),\n  doc: PropTypes.objectOf(PropTypes.any).isRequired,\n  disabled: PropTypes.bool,\n  collection: PropTypes.string.isRequired,\n};\n\nUploaderArray.defaultProps = {\n  disabled: false,\n  fileArray: undefined,\n};\n\nexport default UploaderArray;\n"]},"hash":"33b9a4b66d1177c1d19cf9668ee6d340ad9aa8ba"}
