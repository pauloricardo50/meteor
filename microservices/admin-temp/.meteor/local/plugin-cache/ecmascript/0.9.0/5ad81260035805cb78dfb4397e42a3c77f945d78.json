{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"../../../core/api/tasks/tasksConstants","imported":["TASK_STATUS"],"specifiers":[{"kind":"named","imported":"TASK_STATUS","local":"TASK_STATUS"}]},{"source":"../../../core/components/Translation","imported":["T"],"specifiers":[{"kind":"named","imported":"T","local":"T"}]},{"source":"../../../core/components/DropdownMenu","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"DropdownMenu"}]},{"source":"../../../core/api","imported":["callMutation","mutations"],"specifiers":[{"kind":"named","imported":"callMutation","local":"callMutation"},{"kind":"named","imported":"mutations","local":"mutations"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/components/TasksTable/TasksStatusDropdown.jsx","filenameRelative":"imports/ui/components/TasksTable/TasksStatusDropdown.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/components/TasksTable/TasksStatusDropdown.jsx.map","sourceFileName":"imports/ui/components/TasksTable/TasksStatusDropdown.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TasksStatusDropdown"},"ignored":false,"code":"\"use strict\";\n\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 1);\n\nvar _TASK_STATUS = void 0;\n\nmodule.watch(require(\"../../../core/api/tasks/tasksConstants\"), {\n  TASK_STATUS: function TASK_STATUS(v) {\n    _TASK_STATUS = v;\n  }\n}, 2);\n\nvar _T = void 0;\n\nmodule.watch(require(\"../../../core/components/Translation\"), {\n  T: function T(v) {\n    _T = v;\n  }\n}, 3);\nvar DropdownMenu = void 0;\nmodule.watch(require(\"../../../core/components/DropdownMenu\"), {\n  default: function _default(v) {\n    DropdownMenu = v;\n  }\n}, 4);\n\nvar _callMutation = void 0,\n    _mutations = void 0;\n\nmodule.watch(require(\"../../../core/api\"), {\n  callMutation: function callMutation(v) {\n    _callMutation = v;\n  },\n  mutations: function mutations(v) {\n    _mutations = v;\n  }\n}, 5);\n\nvar changeStatus = function changeStatus(status, taskId) {\n  _callMutation(_mutations.TASK_CHANGE_STATUS, {\n    taskId: taskId,\n    newStatus: status\n  });\n};\n\nvar getMenuItems = function getMenuItems(taskId, taskStatus) {\n  var statuses = Object.values(_TASK_STATUS);\n  var options = statuses.map(function (status) {\n    return {\n      id: status,\n      show: status !== taskStatus,\n      link: false,\n      onClick: function onClick() {\n        changeStatus(status, taskId);\n      },\n      label: React.createElement(_T, {\n        id: \"TasksStatusDropdown.\" + status\n      })\n    };\n  });\n  return options;\n};\n\nvar TasksDropdown = function TasksDropdown(props) {\n  var taskId = props.taskId,\n      taskStatus = props.taskStatus,\n      styles = props.styles;\n  return React.createElement(DropdownMenu, {\n    iconType: \"offlinePin\",\n    options: getMenuItems(taskId, taskStatus),\n    style: styles\n  });\n};\n\nTasksDropdown.propTypes = {};\nmodule.exportDefault(TasksDropdown);","map":{"version":3,"sources":["imports/ui/components/TasksTable/TasksStatusDropdown.jsx"],"names":["React","module","watch","require","default","v","PropTypes","TASK_STATUS","T","DropdownMenu","callMutation","mutations","changeStatus","status","taskId","TASK_CHANGE_STATUS","newStatus","getMenuItems","taskStatus","statuses","Object","values","options","map","id","show","link","onClick","label","TasksDropdown","props","styles","propTypes","exportDefault"],"mappings":";;AAAA,IAAIA,cAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACL,YAAMK,CAAN;AAAQ;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,kBAAJ;AAAcL,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACC,gBAAUD,CAAV;AAAY;AAAxB,CAAnC,EAA6D,CAA7D;;AAAgE,IAAIE,qBAAJ;;AAAgBN,OAAOC,KAAP,CAAaC,QAAQ,wCAAR,CAAb,EAA+D;AAACI,aAAD,uBAAaF,CAAb,EAAe;AAACE,mBAAYF,CAAZ;AAAc;AAA9B,CAA/D,EAA+F,CAA/F;;AAAkG,IAAIG,WAAJ;;AAAMP,OAAOC,KAAP,CAAaC,QAAQ,sCAAR,CAAb,EAA6D;AAACK,GAAD,aAAGH,CAAH,EAAK;AAACG,SAAEH,CAAF;AAAI;AAAV,CAA7D,EAAyE,CAAzE;AAA4E,IAAII,qBAAJ;AAAiBR,OAAOC,KAAP,CAAaC,QAAQ,uCAAR,CAAb,EAA8D;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACI,mBAAaJ,CAAb;AAAe;AAA3B,CAA9D,EAA2F,CAA3F;;AAA8F,IAAIK,sBAAJ;AAAA,IAAiBC,mBAAjB;;AAA2BV,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACO,cAAD,wBAAcL,CAAd,EAAgB;AAACK,oBAAaL,CAAb;AAAe,GAAhC;AAAiCM,WAAjC,qBAA2CN,CAA3C,EAA6C;AAACM,iBAAUN,CAAV;AAAY;AAA1D,CAA1C,EAAsG,CAAtG;;AAQ7d,IAAMO,eAAe,SAAfA,YAAe,CAACC,MAAD,EAASC,MAAT,EAAoB;AACvCJ,gBAAaC,WAAUI,kBAAvB,EAA2C;AACzCD,kBADyC;AAEzCE,eAAWH;AAF8B,GAA3C;AAID,CALD;;AAOA,IAAMI,eAAe,SAAfA,YAAe,CAACH,MAAD,EAASI,UAAT,EAAwB;AAC3C,MAAMC,WAAWC,OAAOC,MAAP,CAAcd,YAAd,CAAjB;AACA,MAAMe,UAAUH,SAASI,GAAT,CAAa;AAAA,WAAW;AACtCC,UAAIX,MADkC;AAEtCY,YAAMZ,WAAWK,UAFqB;AAGtCQ,YAAM,KAHgC;AAItCC,eAAS,mBAAM;AACbf,qBAAaC,MAAb,EAAqBC,MAArB;AACD,OANqC;AAOtCc,aAAO,oBAAC,EAAD;AAAG,qCAA2Bf;AAA9B;AAP+B,KAAX;AAAA,GAAb,CAAhB;AAUA,SAAOS,OAAP;AACD,CAbD;;AAeA,IAAMO,gBAAgB,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,MACvBhB,MADuB,GACQgB,KADR,CACvBhB,MADuB;AAAA,MACfI,UADe,GACQY,KADR,CACfZ,UADe;AAAA,MACHa,MADG,GACQD,KADR,CACHC,MADG;AAG/B,SACE,oBAAC,YAAD;AACE,cAAS,YADX;AAEE,aAASd,aAAaH,MAAb,EAAqBI,UAArB,CAFX;AAGE,WAAOa;AAHT,IADF;AAOD,CAVD;;AAYAF,cAAcG,SAAd,GAA0B,EAA1B;AA1CA/B,OAAOgC,aAAP,CA4CeJ,aA5Cf","file":"imports/ui/components/TasksTable/TasksStatusDropdown.jsx.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TASK_STATUS } from 'core/api/tasks/tasksConstants';\nimport { T } from 'core/components/Translation/';\nimport DropdownMenu from 'core/components/DropdownMenu/';\nimport { callMutation, mutations } from 'core/api';\n\nconst changeStatus = (status, taskId) => {\n  callMutation(mutations.TASK_CHANGE_STATUS, {\n    taskId,\n    newStatus: status,\n  });\n};\n\nconst getMenuItems = (taskId, taskStatus) => {\n  const statuses = Object.values(TASK_STATUS);\n  const options = statuses.map(status => ({\n    id: status,\n    show: status !== taskStatus,\n    link: false,\n    onClick: () => {\n      changeStatus(status, taskId);\n    },\n    label: <T id={`TasksStatusDropdown.${status}`} />,\n  }));\n\n  return options;\n};\n\nconst TasksDropdown = (props) => {\n  const { taskId, taskStatus, styles } = props;\n\n  return (\n    <DropdownMenu\n      iconType=\"offlinePin\"\n      options={getMenuItems(taskId, taskStatus)}\n      style={styles}\n    />\n  );\n};\n\nTasksDropdown.propTypes = {};\n\nexport default TasksDropdown;\n"]},"hash":"5ad81260035805cb78dfb4397e42a3c77f945d78"}
