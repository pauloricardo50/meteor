{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"material-ui/Table","imported":["TableCell","TableRow"],"specifiers":[{"kind":"named","imported":"TableCell","local":"TableCell"},{"kind":"named","imported":"TableRow","local":"TableRow"}]},{"source":"material-ui/Checkbox","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Checkbox"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/Table/SelectableRow.jsx","filenameRelative":"imports/core/components/Table/SelectableRow.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/Table/SelectableRow.jsx.map","sourceFileName":"imports/core/components/Table/SelectableRow.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"SelectableRow"},"ignored":false,"code":"\"use strict\";\n\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 1);\n\nvar _TableCell = void 0,\n    _TableRow = void 0;\n\nmodule.watch(require(\"material-ui/Table\"), {\n  TableCell: function TableCell(v) {\n    _TableCell = v;\n  },\n  TableRow: function TableRow(v) {\n    _TableRow = v;\n  }\n}, 2);\nvar Checkbox = void 0;\nmodule.watch(require(\"material-ui/Checkbox\"), {\n  default: function _default(v) {\n    Checkbox = v;\n  }\n}, 3);\nvar styles = {\n  cell: {\n    textAlign: 'left'\n  }\n};\n\nvar SelectableRow = function SelectableRow(_ref) {\n  var row = _ref.row,\n      columnOptions = _ref.columnOptions,\n      isSelected = _ref.isSelected,\n      onSelect = _ref.onSelect;\n  return React.createElement(\n    _TableRow,\n    {\n      hover: true,\n      onClick: function onClick() {\n        row.handleClick();\n        onSelect(row.id);\n      },\n      role: \"checkbox\",\n      \"aria-checked\": isSelected,\n      tabIndex: -1,\n      selected: isSelected\n    },\n    React.createElement(\n      _TableCell,\n      {\n        padding: \"checkbox\"\n      },\n      React.createElement(Checkbox, {\n        checked: isSelected\n      })\n    ),\n    row.columns.map(function (column, j) {\n      return React.createElement(\n        _TableCell,\n        {\n          key: j,\n          style: columnOptions[j].style || styles.cell,\n          numeric: columnOptions[j].numeric,\n          padding: columnOptions[j].padding || 'dense'\n        },\n        columnOptions[j].format ? columnOptions[j].format(column) : column\n      );\n    })\n  );\n};\n\nSelectableRow.propTypes = {\n  row: PropTypes.objectOf(PropTypes.any).isRequired,\n  columnOptions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired\n};\nmodule.exportDefault(SelectableRow);","map":{"version":3,"sources":["imports/core/components/Table/SelectableRow.jsx"],"names":["React","module","watch","require","default","v","PropTypes","TableCell","TableRow","Checkbox","styles","cell","textAlign","SelectableRow","row","columnOptions","isSelected","onSelect","handleClick","id","columns","map","column","j","style","numeric","padding","format","propTypes","objectOf","any","isRequired","arrayOf","object","bool","func","exportDefault"],"mappings":";;AAAA,IAAIA,cAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACL,YAAMK,CAAN;AAAQ;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,kBAAJ;AAAcL,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACC,gBAAUD,CAAV;AAAY;AAAxB,CAAnC,EAA6D,CAA7D;;AAAgE,IAAIE,mBAAJ;AAAA,IAAcC,kBAAd;;AAAuBP,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACI,WAAD,qBAAWF,CAAX,EAAa;AAACE,iBAAUF,CAAV;AAAY,GAA1B;AAA2BG,UAA3B,oBAAoCH,CAApC,EAAsC;AAACG,gBAASH,CAAT;AAAW;AAAlD,CAA1C,EAA8F,CAA9F;AAAiG,IAAII,iBAAJ;AAAaR,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACI,eAASJ,CAAT;AAAW;AAAvB,CAA7C,EAAsE,CAAtE;AAMpR,IAAMK,SAAS;AACbC,QAAM;AAAEC,eAAW;AAAb;AADO,CAAf;;AAIA,IAAMC,gBAAgB,SAAhBA,aAAgB;AAAA,MAAGC,GAAH,QAAGA,GAAH;AAAA,MAAQC,aAAR,QAAQA,aAAR;AAAA,MAAuBC,UAAvB,QAAuBA,UAAvB;AAAA,MAAmCC,QAAnC,QAAmCA,QAAnC;AAAA,SACpB;AAAC,aAAD;AAAA;AACE,iBADF;AAEE,eAAS,mBAAM;AACbH,YAAII,WAAJ;AACAD,iBAASH,IAAIK,EAAb;AACD,OALH;AAME,YAAK,UANP;AAOE,sBAAcH,UAPhB;AAQE,gBAAU,CAAC,CARb;AASE,gBAAUA;AATZ;AAWE;AAAC,gBAAD;AAAA;AAAW,iBAAQ;AAAnB;AACE,0BAAC,QAAD;AAAU,iBAASA;AAAnB;AADF,KAXF;AAcGF,QAAIM,OAAJ,CAAYC,GAAZ,CAAgB,UAACC,MAAD,EAASC,CAAT;AAAA,aACf;AAAC,kBAAD;AAAA;AACE,eAAKA,CADP;AAEE,iBAAOR,cAAcQ,CAAd,EAAiBC,KAAjB,IAA0Bd,OAAOC,IAF1C;AAGE,mBAASI,cAAcQ,CAAd,EAAiBE,OAH5B;AAIE,mBAASV,cAAcQ,CAAd,EAAiBG,OAAjB,IAA4B;AAJvC;AAQGX,sBAAcQ,CAAd,EAAiBI,MAAjB,GAA0BZ,cAAcQ,CAAd,EAAiBI,MAAjB,CAAwBL,MAAxB,CAA1B,GAA4DA;AAR/D,OADe;AAAA,KAAhB;AAdH,GADoB;AAAA,CAAtB;;AA8BAT,cAAce,SAAd,GAA0B;AACxBd,OAAKR,UAAUuB,QAAV,CAAmBvB,UAAUwB,GAA7B,EAAkCC,UADf;AAExBhB,iBAAeT,UAAU0B,OAAV,CAAkB1B,UAAU2B,MAA5B,EAAoCF,UAF3B;AAGxBf,cAAYV,UAAU4B,IAAV,CAAeH,UAHH;AAIxBd,YAAUX,UAAU6B,IAAV,CAAeJ;AAJD,CAA1B;AAxCA9B,OAAOmC,aAAP,CA+CevB,aA/Cf","file":"imports/core/components/Table/SelectableRow.jsx.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TableCell, TableRow } from 'material-ui/Table';\nimport Checkbox from 'material-ui/Checkbox';\n\nconst styles = {\n  cell: { textAlign: 'left' },\n};\n\nconst SelectableRow = ({ row, columnOptions, isSelected, onSelect }) => (\n  <TableRow\n    hover\n    onClick={() => {\n      row.handleClick();\n      onSelect(row.id);\n    }}\n    role=\"checkbox\"\n    aria-checked={isSelected}\n    tabIndex={-1}\n    selected={isSelected}\n  >\n    <TableCell padding=\"checkbox\">\n      <Checkbox checked={isSelected} />\n    </TableCell>\n    {row.columns.map((column, j) => (\n      <TableCell\n        key={j}\n        style={columnOptions[j].style || styles.cell}\n        numeric={columnOptions[j].numeric}\n        padding={columnOptions[j].padding || 'dense'}\n      >\n        {/* if the format function is provided, format the column, otherwise\n          simply return the data */}\n        {columnOptions[j].format ? columnOptions[j].format(column) : column}\n      </TableCell>\n    ))}\n  </TableRow>\n);\n\nSelectableRow.propTypes = {\n  row: PropTypes.objectOf(PropTypes.any).isRequired,\n  columnOptions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nexport default SelectableRow;\n"]},"hash":"d09e03c6e11fdd07469865a1e284bf321df262ca"}
