{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mdg:validated-method","imported":["ValidatedMethod"],"specifiers":[{"kind":"named","imported":"ValidatedMethod","local":"ValidatedMethod"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"meteor/check","imported":["check","Match"],"specifiers":[{"kind":"named","imported":"check","local":"check"},{"kind":"named","imported":"Match","local":"Match"}]},{"source":"meteor/didericis:callpromise-mixin","imported":["CallPromiseMixin"],"specifiers":[{"kind":"named","imported":"CallPromiseMixin","local":"CallPromiseMixin"}]},{"source":"../../../utils/rate-limit.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"rateLimit"}]},{"source":"../adminActions","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AdminActions"}]},{"source":"../adminActionConstants","imported":["ADMIN_ACTION_STATUS"],"specifiers":[{"kind":"named","imported":"ADMIN_ACTION_STATUS","local":"ADMIN_ACTION_STATUS"}]}],"exports":{"exported":["insertAdminAction","completeAction","completeActionByType","removeParentLoan"],"specifiers":[{"kind":"local","local":"insertAdminAction","exported":"insertAdminAction"},{"kind":"local","local":"completeAction","exported":"completeAction"},{"kind":"local","local":"completeActionByType","exported":"completeActionByType"},{"kind":"local","local":"removeParentLoan","exported":"removeParentLoan"}]}}},"options":{"filename":"imports/core/api/adminActions/server/methods.js","filenameRelative":"imports/core/api/adminActions/server/methods.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/adminActions/server/methods.js.map","sourceFileName":"imports/core/api/adminActions/server/methods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"methods"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.export({\n  insertAdminAction: function insertAdminAction() {\n    return _insertAdminAction;\n  },\n  completeAction: function completeAction() {\n    return _completeAction;\n  },\n  completeActionByType: function completeActionByType() {\n    return _completeActionByType;\n  },\n  removeParentLoan: function removeParentLoan() {\n    return _removeParentLoan;\n  }\n});\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _ValidatedMethod = void 0;\n\nmodule.watch(require(\"meteor/mdg:validated-method\"), {\n  ValidatedMethod: function ValidatedMethod(v) {\n    _ValidatedMethod = v;\n  }\n}, 1);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function Roles(v) {\n    _Roles = v;\n  }\n}, 2);\n\nvar _check = void 0,\n    _Match = void 0;\n\nmodule.watch(require(\"meteor/check\"), {\n  check: function check(v) {\n    _check = v;\n  },\n  Match: function Match(v) {\n    _Match = v;\n  }\n}, 3);\nexports.insertAdminAction = _insertAdminAction;\n\nvar _CallPromiseMixin = void 0;\n\nmodule.watch(require(\"meteor/didericis:callpromise-mixin\"), {\n  CallPromiseMixin: function CallPromiseMixin(v) {\n    _CallPromiseMixin = v;\n  }\n}, 4);\nvar rateLimit = void 0;\nmodule.watch(require(\"../../../utils/rate-limit.js\"), {\n  default: function _default(v) {\n    rateLimit = v;\n  }\n}, 5);\nvar AdminActions = void 0;\nmodule.watch(require(\"../adminActions\"), {\n  default: function _default(v) {\n    AdminActions = v;\n  }\n}, 6);\n\nvar _ADMIN_ACTION_STATUS = void 0;\n\nmodule.watch(require(\"../adminActionConstants\"), {\n  ADMIN_ACTION_STATUS: function ADMIN_ACTION_STATUS(v) {\n    _ADMIN_ACTION_STATUS = v;\n  }\n}, 7);\n\nvar _insertAdminAction = new _ValidatedMethod({\n  name: 'insertAdminAction',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref) {\n    var loanId = _ref.loanId,\n        type = _ref.type;\n\n    _check(loanId, String);\n\n    _check(type, String);\n  },\n  run: function run(_ref2) {\n    var loanId = _ref2.loanId,\n        type = _ref2.type;\n    // Make sure there isn't an action active with the same ID\n    var existingAction = AdminActions.findOne({\n      type: type,\n      loanId: loanId,\n      status: _ADMIN_ACTION_STATUS.ACTIVE\n    });\n\n    if (existingAction) {\n      throw new _Meteor.Error('duplicate active admin action');\n    }\n\n    return AdminActions.insert({\n      type: type,\n      loanId: loanId\n    });\n  }\n});\n\nvar _completeAction = new _ValidatedMethod({\n  name: 'completeAction',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref3) {\n    var id = _ref3.id;\n\n    _check(id, String);\n  },\n  run: function run(_ref4) {\n    var id = _ref4.id;\n    var action = AdminActions.findOne(id);\n\n    if (action.status === _ADMIN_ACTION_STATUS.COMPLETED) {\n      throw new _Meteor.Error('action is already completed');\n    }\n\n    return AdminActions.update(id, {\n      $set: {\n        status: _ADMIN_ACTION_STATUS.COMPLETED,\n        completedAt: new Date()\n      }\n    });\n  }\n});\n\nvar _completeActionByType = new _ValidatedMethod({\n  name: 'completeActionByType',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref5) {\n    var loanId = _ref5.loanId,\n        type = _ref5.type,\n        newStatus = _ref5.newStatus;\n\n    _check(loanId, String);\n\n    _check(type, String);\n\n    _check(newStatus, _Match.Optional(String));\n  },\n  run: function run(_ref6) {\n    var loanId = _ref6.loanId,\n        type = _ref6.type,\n        newStatus = _ref6.newStatus;\n    var action = AdminActions.findOne({\n      loanId: loanId,\n      type: type,\n      status: _ADMIN_ACTION_STATUS.ACTIVE\n    });\n\n    if (!action) {\n      throw new _Meteor.Error(\"action couldn't be found\");\n    }\n\n    return AdminActions.update(action._id, {\n      $set: {\n        status: newStatus || _ADMIN_ACTION_STATUS.COMPLETED,\n        completedAt: new Date()\n      }\n    });\n  }\n});\n\nvar _removeParentLoan = new _ValidatedMethod({\n  name: 'removeParentLoan',\n  mixins: [_CallPromiseMixin],\n  validate: function validate(_ref7) {\n    var loanId = _ref7.loanId;\n\n    _check(loanId, String);\n  },\n  run: function run(_ref8) {\n    var loanId = _ref8.loanId;\n    return AdminActions.update({\n      loanId: loanId\n    }, {\n      $set: {\n        status: _ADMIN_ACTION_STATUS.PARENT_DELETED\n      }\n    }, {\n      multi: true\n    });\n  }\n});\n\nrateLimit({\n  methods: [_insertAdminAction, _completeAction]\n});","map":{"version":3,"sources":["imports/core/api/adminActions/server/methods.js"],"names":["module","export","insertAdminAction","completeAction","completeActionByType","removeParentLoan","Meteor","watch","require","v","ValidatedMethod","Roles","check","Match","CallPromiseMixin","rateLimit","default","AdminActions","ADMIN_ACTION_STATUS","name","mixins","validate","loanId","type","String","run","existingAction","findOne","status","ACTIVE","Error","insert","id","action","COMPLETED","update","$set","completedAt","Date","newStatus","Optional","_id","PARENT_DELETED","multi","methods"],"mappings":"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","file":"imports/core/api/adminActions/server/methods.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { ValidatedMethod } from 'meteor/mdg:validated-method';\nimport { Roles } from 'meteor/alanning:roles';\nimport { check, Match } from 'meteor/check';\nimport { CallPromiseMixin } from 'meteor/didericis:callpromise-mixin';\nimport rateLimit from '../../../utils/rate-limit.js';\n\nimport AdminActions from '../adminActions';\nimport { ADMIN_ACTION_STATUS } from '../adminActionConstants';\n\nexport const insertAdminAction = new ValidatedMethod({\n  name: 'insertAdminAction',\n  mixins: [CallPromiseMixin],\n  validate({ loanId, type }) {\n    check(loanId, String);\n    check(type, String);\n  },\n  run({ loanId, type }) {\n    // Make sure there isn't an action active with the same ID\n    const existingAction = AdminActions.findOne({\n      type,\n      loanId,\n      status: ADMIN_ACTION_STATUS.ACTIVE,\n    });\n    if (existingAction) {\n      throw new Meteor.Error('duplicate active admin action');\n    }\n\n    return AdminActions.insert({ type, loanId });\n  },\n});\n\nexport const completeAction = new ValidatedMethod({\n  name: 'completeAction',\n  mixins: [CallPromiseMixin],\n  validate({ id }) {\n    check(id, String);\n  },\n  run({ id }) {\n    const action = AdminActions.findOne(id);\n\n    if (action.status === ADMIN_ACTION_STATUS.COMPLETED) {\n      throw new Meteor.Error('action is already completed');\n    }\n\n    return AdminActions.update(id, {\n      $set: {\n        status: ADMIN_ACTION_STATUS.COMPLETED,\n        completedAt: new Date(),\n      },\n    });\n  },\n});\n\nexport const completeActionByType = new ValidatedMethod({\n  name: 'completeActionByType',\n  mixins: [CallPromiseMixin],\n  validate({ loanId, type, newStatus }) {\n    check(loanId, String);\n    check(type, String);\n    check(newStatus, Match.Optional(String));\n  },\n  run({ loanId, type, newStatus }) {\n    const action = AdminActions.findOne({\n      loanId,\n      type,\n      status: ADMIN_ACTION_STATUS.ACTIVE,\n    });\n\n    if (!action) {\n      throw new Meteor.Error(\"action couldn't be found\");\n    }\n\n    return AdminActions.update(action._id, {\n      $set: {\n        status: newStatus || ADMIN_ACTION_STATUS.COMPLETED,\n        completedAt: new Date(),\n      },\n    });\n  },\n});\n\nexport const removeParentLoan = new ValidatedMethod({\n  name: 'removeParentLoan',\n  mixins: [CallPromiseMixin],\n  validate({ loanId }) {\n    check(loanId, String);\n  },\n  run({ loanId }) {\n    return AdminActions.update(\n      { loanId },\n      { $set: { status: ADMIN_ACTION_STATUS.PARENT_DELETED } },\n      { multi: true },\n    );\n  },\n});\n\nrateLimit({ methods: [insertAdminAction, completeAction] });\n"]},"hash":"3fa86cdae4275d5a5d0a7e79be30b1afafd340b2"}
