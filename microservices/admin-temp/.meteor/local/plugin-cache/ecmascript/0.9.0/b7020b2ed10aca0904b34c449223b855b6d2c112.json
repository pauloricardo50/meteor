{"metadata":{"usedHelpers":["extends","defineProperty","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["check","Match"],"specifiers":[{"kind":"named","imported":"check","local":"check"},{"kind":"named","imported":"Match","local":"Match"}]},{"source":"../events","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"EventService"}]}],"exports":{"exported":["beforeLogger","afterLogger","validateMutationOptions","checkParams"],"specifiers":[{"kind":"local","local":"beforeLogger","exported":"beforeLogger"},{"kind":"local","local":"afterLogger","exported":"afterLogger"},{"kind":"local","local":"validateMutationOptions","exported":"validateMutationOptions"},{"kind":"local","local":"checkParams","exported":"checkParams"}]}}},"options":{"filename":"imports/core/api/mutations/createMutator.js","filenameRelative":"imports/core/api/mutations/createMutator.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/mutations/createMutator.js.map","sourceFileName":"imports/core/api/mutations/createMutator.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"createMutator"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.beforeLogger = undefined;\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends3 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends4 = _interopRequireDefault(_extends3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  beforeLogger: function () {\n    function beforeLogger() {\n      return _beforeLogger;\n    }\n\n    return beforeLogger;\n  }(),\n  afterLogger: function () {\n    function afterLogger() {\n      return _afterLogger;\n    }\n\n    return afterLogger;\n  }(),\n  validateMutationOptions: function () {\n    function validateMutationOptions() {\n      return _validateMutationOptions;\n    }\n\n    return validateMutationOptions;\n  }(),\n  checkParams: function () {\n    function checkParams() {\n      return _checkParams;\n    }\n\n    return checkParams;\n  }()\n});\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function () {\n    function Meteor(v) {\n      _Meteor = v;\n    }\n\n    return Meteor;\n  }()\n}, 0);\n\nvar _check = void 0,\n    _Match = void 0;\n\nmodule.watch(require(\"meteor/check\"), {\n  check: function () {\n    function check(v) {\n      _check = v;\n    }\n\n    return check;\n  }(),\n  Match: function () {\n    function Match(v) {\n      _Match = v;\n    }\n\n    return Match;\n  }()\n}, 1);\nvar EventService = void 0;\nexports.beforeLogger = _beforeLogger;\nmodule.watch(require(\"../events\"), {\n  \"default\": function () {\n    function _default(v) {\n      EventService = v;\n    }\n\n    return _default;\n  }()\n}, 2);\nvar INVALID_MUTATION_OPTIONS = 'INVALID_MUTATION_OPTIONS';\nvar MUTATION_ERROR = 'MUTATION_ERROR';\n\nvar _beforeLogger = function () {\n  function _beforeLogger(callParameters, name) {\n    if (_Meteor.isDevelopment && !_Meteor.isTest) {\n      console.log(\"Executing method \" + name + \" with the following params:\");\n      console.log(callParameters);\n    }\n  }\n\n  return _beforeLogger;\n}();\n\nvar _afterLogger = function () {\n  function _afterLogger(result, name) {\n    if (_Meteor.isDevelopment && !_Meteor.isTest) {\n      console.log(\"Executed \" + name + \" and got result:\");\n      console.log(result);\n    }\n  }\n\n  return _afterLogger;\n}();\n\nvar _validateMutationOptions = function () {\n  function _validateMutationOptions(_ref) {\n    var name = _ref.name,\n        params = _ref.params;\n\n    if (!name || typeof name !== 'string') {\n      throw new _Meteor.Error(INVALID_MUTATION_OPTIONS, 'name has to be a string');\n    }\n\n    if (params) {\n      Object.keys(params).forEach(function (param) {\n        var type = params[param].type;\n\n        if (!type) {\n          throw new _Meteor.Error(INVALID_MUTATION_OPTIONS, \"you have to provide a type for parameter: \\\"\" + param + \"\\\" in \" + name);\n        }\n      });\n    }\n  }\n\n  return _validateMutationOptions;\n}();\n\nvar _checkParams = function () {\n  function _checkParams(callParameters, params) {\n    _check(callParameters, Object.keys(params).reduce(function (matchPattern, param) {\n      var _params$param = params[param],\n          optional = _params$param.optional,\n          type = _params$param.type; // Return a Match Pattern and check for optionals\n\n      return (0, _extends4.default)({}, matchPattern, (0, _defineProperty3.default)({}, param, optional ? _Match.Optional(type) : type));\n    }, {}));\n  }\n\n  return _checkParams;\n}();\n\nvar createMutator = function () {\n  function createMutator(options, functionBody) {\n    _validateMutationOptions(options);\n\n    var name = options.name,\n        params = options.params;\n\n    _Meteor.methods((0, _defineProperty3.default)({}, name, function (callParameters) {\n      _beforeLogger(callParameters, name);\n\n      _checkParams(callParameters, params, name);\n\n      var result = void 0;\n\n      try {\n        result = functionBody(callParameters);\n        EventService.emitMutation(options, callParameters);\n      } catch (error) {\n        throw error;\n      }\n\n      _afterLogger(result, name);\n\n      return result;\n    }));\n  }\n\n  return createMutator;\n}();\n\nmodule.exportDefault(createMutator);","map":{"version":3,"sources":["imports/core/api/mutations/createMutator.js"],"names":["module","export","beforeLogger","afterLogger","validateMutationOptions","checkParams","Meteor","watch","require","v","check","Match","EventService","INVALID_MUTATION_OPTIONS","MUTATION_ERROR","callParameters","name","isDevelopment","isTest","console","log","result","params","Error","Object","keys","forEach","param","type","reduce","matchPattern","optional","Optional","createMutator","options","functionBody","methods","emitMutation","error","exportDefault"],"mappings":"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","file":"imports/core/api/mutations/createMutator.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check, Match } from 'meteor/check';\n\nimport EventService from '../events';\n\nconst INVALID_MUTATION_OPTIONS = 'INVALID_MUTATION_OPTIONS';\nconst MUTATION_ERROR = 'MUTATION_ERROR';\n\nexport const beforeLogger = (callParameters, name) => {\n  if (Meteor.isDevelopment && !Meteor.isTest) {\n    console.log(`Executing method ${name} with the following params:`);\n    console.log(callParameters);\n  }\n};\n\nexport const afterLogger = (result, name) => {\n  if (Meteor.isDevelopment && !Meteor.isTest) {\n    console.log(`Executed ${name} and got result:`);\n    console.log(result);\n  }\n};\n\nexport const validateMutationOptions = ({ name, params }) => {\n  if (!name || typeof name !== 'string') {\n    throw new Meteor.Error(INVALID_MUTATION_OPTIONS, 'name has to be a string');\n  }\n\n  if (params) {\n    Object.keys(params).forEach((param) => {\n      const { type } = params[param];\n      if (!type) {\n        throw new Meteor.Error(\n          INVALID_MUTATION_OPTIONS,\n          `you have to provide a type for parameter: \"${param}\" in ${name}`,\n        );\n      }\n    });\n  }\n};\n\nexport const checkParams = (callParameters, params) => {\n  check(\n    callParameters,\n    Object.keys(params).reduce((matchPattern, param) => {\n      const { optional, type } = params[param];\n\n      // Return a Match Pattern and check for optionals\n      return {\n        ...matchPattern,\n        [param]: optional ? Match.Optional(type) : type,\n      };\n    }, {}),\n  );\n};\n\nconst createMutator = (options, functionBody) => {\n  validateMutationOptions(options);\n  const { name, params } = options;\n\n  Meteor.methods({\n    [name](callParameters) {\n      beforeLogger(callParameters, name);\n      checkParams(callParameters, params, name);\n\n      let result;\n      try {\n        result = functionBody(callParameters);\n        EventService.emitMutation(options, callParameters);\n      } catch (error) {\n        throw error;\n      }\n\n      afterLogger(result, name);\n\n      return result;\n    },\n  });\n};\n\nexport default createMutator;\n"]},"hash":"b7020b2ed10aca0904b34c449223b855b6d2c112"}
