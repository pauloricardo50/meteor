{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"./Fields.jsx","imported":[],"specifiers":[]},{"source":"./Buttons.jsx","imported":[],"specifiers":[]},{"source":"./FormMessage.jsx","imported":[],"specifiers":[]},{"source":"./PasswordOrService.jsx","imported":[],"specifiers":[]},{"source":"./SocialButtons.jsx","imported":[],"specifiers":[]},{"source":"./FormMessages.jsx","imported":[],"specifiers":[]}],"exports":{"exported":["Form"],"specifiers":[{"kind":"local","local":"Form","exported":"Form"}]}}},"options":{"filename":"packages/std:accounts-ui/imports/ui/components/Form.jsx","filenameRelative":"packages/std:accounts-ui/imports/ui/components/Form.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/std:accounts-ui/imports/ui/components/Form.jsx.map","sourceFileName":"packages/std:accounts-ui/imports/ui/components/Form.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Form"},"ignored":false,"code":"module.export({\n  Form: () => Form\n});\nlet React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet ReactDOM;\nmodule.watch(require(\"react-dom\"), {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 2);\nlet Accounts;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 3);\nmodule.watch(require(\"./Fields.jsx\"));\nmodule.watch(require(\"./Buttons.jsx\"));\nmodule.watch(require(\"./FormMessage.jsx\"));\nmodule.watch(require(\"./PasswordOrService.jsx\"));\nmodule.watch(require(\"./SocialButtons.jsx\"));\nmodule.watch(require(\"./FormMessages.jsx\"));\n\nclass Form extends React.Component {\n  componentDidMount() {\n    let form = this.form;\n\n    if (form) {\n      form.addEventListener('submit', e => {\n        e.preventDefault();\n      });\n    }\n  }\n\n  render() {\n    const {\n      hasPasswordService,\n      oauthServices,\n      fields,\n      buttons,\n      error,\n      messages,\n      translate,\n      ready = true,\n      className\n    } = this.props;\n    return React.createElement(\n      \"form\",\n      {\n        ref: ref => this.form = ref,\n        className: [className, ready ? \"ready\" : null].join(' '),\n        className: \"accounts-ui\",\n        noValidate: true\n      },\n      React.createElement(Accounts.ui.Fields, {\n        fields: fields\n      }),\n      React.createElement(Accounts.ui.Buttons, {\n        buttons: buttons\n      }),\n      React.createElement(Accounts.ui.PasswordOrService, {\n        oauthServices: oauthServices,\n        translate: translate\n      }),\n      React.createElement(Accounts.ui.SocialButtons, {\n        oauthServices: oauthServices\n      }),\n      React.createElement(Accounts.ui.FormMessages, {\n        messages: messages\n      })\n    );\n  }\n\n}\n\nForm.propTypes = {\n  oauthServices: PropTypes.object,\n  fields: PropTypes.object.isRequired,\n  buttons: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  ready: PropTypes.bool\n};\nAccounts.ui.Form = Form;","map":{"version":3,"sources":["packages/std:accounts-ui/imports/ui/components/Form.jsx"],"names":["module","export","Form","React","watch","require","default","v","PropTypes","ReactDOM","Accounts","Component","componentDidMount","form","addEventListener","e","preventDefault","render","hasPasswordService","oauthServices","fields","buttons","error","messages","translate","ready","className","props","ref","join","propTypes","object","isRequired","func","string","bool","ui"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,QAAK,MAAIA;AAAV,CAAd;AAA+B,IAAIC,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACJ,YAAMI,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,SAAJ;AAAcR,OAAOI,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,UAAQC,CAAR,EAAU;AAACC,gBAAUD,CAAV;AAAY;;AAAxB,CAAnC,EAA6D,CAA7D;AAAgE,IAAIE,QAAJ;AAAaT,OAAOI,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACC,UAAQC,CAAR,EAAU;AAACE,eAASF,CAAT;AAAW;;AAAvB,CAAlC,EAA2D,CAA3D;AAA8D,IAAIG,QAAJ;AAAaV,OAAOI,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACK,WAASH,CAAT,EAAW;AAACG,eAASH,CAAT;AAAW;;AAAxB,CAA7C,EAAuE,CAAvE;AAA0EP,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb;AAAsCL,OAAOI,KAAP,CAAaC,QAAQ,eAAR,CAAb;AAAuCL,OAAOI,KAAP,CAAaC,QAAQ,mBAAR,CAAb;AAA2CL,OAAOI,KAAP,CAAaC,QAAQ,yBAAR,CAAb;AAAiDL,OAAOI,KAAP,CAAaC,QAAQ,qBAAR,CAAb;AAA6CL,OAAOI,KAAP,CAAaC,QAAQ,oBAAR,CAAb;;AAY/hB,MAAMH,IAAN,SAAmBC,MAAMQ,SAAzB,CAAmC;AACxCC,sBAAoB;AAClB,QAAIC,OAAO,KAAKA,IAAhB;;AACA,QAAIA,IAAJ,EAAU;AACRA,WAAKC,gBAAL,CAAsB,QAAtB,EAAiCC,CAAD,IAAO;AACrCA,UAAEC,cAAF;AACD,OAFD;AAGD;AACF;;AAEDC,WAAS;AACP,UAAM;AACJC,wBADI;AAEJC,mBAFI;AAGJC,YAHI;AAIJC,aAJI;AAKJC,WALI;AAMJC,cANI;AAOJC,eAPI;AAQJC,cAAQ,IARJ;AASJC;AATI,QAUF,KAAKC,KAVT;AAWA,WACE;AAAA;AAAA;AACE,aAAMC,GAAD,IAAS,KAAKf,IAAL,GAAYe,GAD5B;AAEE,mBAAW,CAACF,SAAD,EAAYD,QAAQ,OAAR,GAAkB,IAA9B,EAAoCI,IAApC,CAAyC,GAAzC,CAFb;AAGE,mBAAU,aAHZ;AAIE;AAJF;AAME,0BAAC,QAAD,CAAU,EAAV,CAAa,MAAb;AAAoB,gBAAST;AAA7B,QANF;AAOE,0BAAC,QAAD,CAAU,EAAV,CAAa,OAAb;AAAqB,iBAAUC;AAA/B,QAPF;AAQE,0BAAC,QAAD,CAAU,EAAV,CAAa,iBAAb;AAA+B,uBAAgBF,aAA/C;AAA+D,mBAAYK;AAA3E,QARF;AASE,0BAAC,QAAD,CAAU,EAAV,CAAa,aAAb;AAA2B,uBAAgBL;AAA3C,QATF;AAUE,0BAAC,QAAD,CAAU,EAAV,CAAa,YAAb;AAA0B,kBAAUI;AAApC;AAVF,KADF;AAcD;;AApCuC;;AAuC1CrB,KAAK4B,SAAL,GAAiB;AACfX,iBAAeX,UAAUuB,MADV;AAEfX,UAAQZ,UAAUuB,MAAV,CAAiBC,UAFV;AAGfX,WAASb,UAAUuB,MAAV,CAAiBC,UAHX;AAIfR,aAAWhB,UAAUyB,IAAV,CAAeD,UAJX;AAKfV,SAAOd,UAAU0B,MALF;AAMfT,SAAOjB,UAAU2B;AANF,CAAjB;AASAzB,SAAS0B,EAAT,CAAYlC,IAAZ,GAAmBA,IAAnB","file":"packages/std:accounts-ui/imports/ui/components/Form.jsx.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport './Fields.jsx';\nimport './Buttons.jsx';\nimport './FormMessage.jsx';\nimport './PasswordOrService.jsx';\nimport './SocialButtons.jsx';\nimport './FormMessages.jsx';\n\nexport class Form extends React.Component {\n  componentDidMount() {\n    let form = this.form;\n    if (form) {\n      form.addEventListener('submit', (e) => {\n        e.preventDefault();\n      });\n    }\n  }\n\n  render() {\n    const {\n      hasPasswordService,\n      oauthServices,\n      fields,\n      buttons,\n      error,\n      messages,\n      translate,\n      ready = true,\n      className\n    } = this.props;\n    return (\n      <form\n        ref={(ref) => this.form = ref}\n        className={[className, ready ? \"ready\" : null].join(' ')}\n        className=\"accounts-ui\"\n        noValidate\n      >\n        <Accounts.ui.Fields fields={ fields } />\n        <Accounts.ui.Buttons buttons={ buttons } />\n        <Accounts.ui.PasswordOrService oauthServices={ oauthServices } translate={ translate } />\n        <Accounts.ui.SocialButtons oauthServices={ oauthServices } />\n        <Accounts.ui.FormMessages messages={messages} />\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  oauthServices: PropTypes.object,\n  fields: PropTypes.object.isRequired,\n  buttons: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  ready: PropTypes.bool\n};\n\nAccounts.ui.Form = Form;\n"]},"hash":"ac8ac1d6e68ce1bfd6cd29e5483e5f82efe5d2c5"}
