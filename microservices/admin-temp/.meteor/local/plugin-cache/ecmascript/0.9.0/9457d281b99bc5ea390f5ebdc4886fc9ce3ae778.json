{"metadata":{"usedHelpers":["classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/ejson","imported":["EJSON"],"specifiers":[{"kind":"named","imported":"EJSON","local":"EJSON"}]}],"exports":{"exported":["BaseResultCacher"],"specifiers":[{"kind":"local","local":"BaseResultCacher","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js","filenameRelative":"packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"BaseResultCacher"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n    \"default\": function () {\n        return BaseResultCacher;\n    }\n});\nvar EJSON = void 0;\nmodule.watch(require(\"meteor/ejson\"), {\n    EJSON: function (v) {\n        EJSON = v;\n    }\n}, 0);\n\nvar BaseResultCacher = function () {\n    function BaseResultCacher() {\n        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        (0, _classCallCheck3.default)(this, BaseResultCacher);\n        this.config = config;\n    } /**\n       * @param queryName\n       * @param params\n       * @returns {string}\n       */\n\n    BaseResultCacher.prototype.generateQueryId = function () {\n        function generateQueryId(queryName, params) {\n            return queryName + \"::\" + EJSON.stringify(params);\n        }\n\n        return generateQueryId;\n    }(); /**\n          * Dummy function\n          */\n\n    BaseResultCacher.prototype.fetch = function () {\n        function fetch(cacheId, _ref) {\n            var query = _ref.query,\n                countCursor = _ref.countCursor;\n            throw 'Not implemented';\n        }\n\n        return fetch;\n    }(); /**\n          * @param query\n          * @param countCursor\n          * @returns {*}\n          */\n\n    BaseResultCacher.fetchData = function () {\n        function fetchData(_ref2) {\n            var query = _ref2.query,\n                countCursor = _ref2.countCursor;\n\n            if (query) {\n                return query.fetch();\n            } else {\n                return countCursor.count();\n            }\n        }\n\n        return fetchData;\n    }();\n\n    return BaseResultCacher;\n}();","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js"],"names":["module","export","BaseResultCacher","EJSON","watch","require","v","config","generateQueryId","queryName","params","stringify","fetch","cacheId","query","countCursor","fetchData","count"],"mappings":";;;;;;AAAAA,OAAOC,MAAP,CAAc;AAAC,eAAQ;AAAA,eAAIC,gBAAJ;AAAA;AAAT,CAAd;AAA8C,IAAIC,cAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,SAAD,YAAOG,CAAP,EAAS;AAACH,gBAAMG,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;;IAKnCJ,gB;AACjB,gCAAyB;AAAA,YAAbK,MAAa,uEAAJ,EAAI;AAAA;AACrB,aAAKA,MAAL,GAAcA,MAAd;AACH,K,CAED;;;;;;+BAKAC,e;iCAAgBC,S,EAAWC,M,EAAQ;AAC/B,mBAAUD,SAAV,UAAwBN,MAAMQ,SAAN,CAAgBD,MAAhB,CAAxB;AACH;;;SAED;;;;+BAGAE,K;uBAAMC,O,QAA+B;AAAA,gBAArBC,KAAqB,QAArBA,KAAqB;AAAA,gBAAdC,WAAc,QAAdA,WAAc;AACjC,kBAAM,iBAAN;AACH;;;SAED;;;;;;qBAKOC,S;kCAAgC;AAAA,gBAArBF,KAAqB,SAArBA,KAAqB;AAAA,gBAAdC,WAAc,SAAdA,WAAc;;AACnC,gBAAID,KAAJ,EAAW;AACP,uBAAOA,MAAMF,KAAN,EAAP;AACH,aAFD,MAEO;AACH,uBAAOG,YAAYE,KAAZ,EAAP;AACH;AACJ","file":"packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js.map","sourcesContent":["import {EJSON} from 'meteor/ejson';\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class BaseResultCacher {\n    constructor(config = {}) {\n        this.config = config;\n    }\n\n    /**\n     * @param queryName\n     * @param params\n     * @returns {string}\n     */\n    generateQueryId(queryName, params) {\n        return `${queryName}::${EJSON.stringify(params)}`;\n    }\n\n    /**\n     * Dummy function\n     */\n    fetch(cacheId, {query, countCursor}) {\n        throw 'Not implemented';\n    }\n\n    /**\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    static fetchData({query, countCursor}) {\n        if (query) {\n            return query.fetch();\n        } else {\n            return countCursor.count();\n        }\n    }\n}\n"]},"hash":"9457d281b99bc5ea390f5ebdc4886fc9ce3ae778"}
