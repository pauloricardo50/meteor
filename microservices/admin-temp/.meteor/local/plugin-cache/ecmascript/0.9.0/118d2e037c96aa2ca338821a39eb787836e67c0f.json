{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]}],"exports":{"exported":["Authors","AuthorProfiles","Posts","Groups","Categories"],"specifiers":[{"kind":"local","local":"Authors","exported":"Authors"},{"kind":"local","local":"AuthorProfiles","exported":"AuthorProfiles"},{"kind":"local","local":"Posts","exported":"Posts"},{"kind":"local","local":"Groups","exported":"Groups"},{"kind":"local","local":"Categories","exported":"Categories"}]}}},"options":{"filename":"packages/cultofcoders:grapher-react/__tests__/bootstrap/collections.js","filenameRelative":"packages/cultofcoders:grapher-react/__tests__/bootstrap/collections.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher-react/__tests__/bootstrap/collections.js.map","sourceFileName":"packages/cultofcoders:grapher-react/__tests__/bootstrap/collections.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"collections"},"ignored":false,"code":"module.export({\n    Authors: () => Authors,\n    AuthorProfiles: () => AuthorProfiles,\n    Posts: () => Posts,\n    Groups: () => Groups,\n    Categories: () => Categories\n});\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo(v) {\n        Mongo = v;\n    }\n\n}, 0);\nconst Authors = new Mongo.Collection('authors');\nconst AuthorProfiles = new Mongo.Collection('author_profiles');\nconst Posts = new Mongo.Collection('posts');\nconst Groups = new Mongo.Collection('groups');\nconst Categories = new Mongo.Collection('categories');\nPosts.addLinks({\n    author: {\n        type: 'one',\n        collection: Authors,\n        field: 'authorId'\n    },\n    categories: {\n        type: 'many',\n        metadata: true,\n        collection: Categories,\n        field: 'categoryIds'\n    }\n});\nAuthors.addLinks({\n    posts: {\n        collection: Posts,\n        inversedBy: 'author'\n    },\n    groups: {\n        type: 'many',\n        collection: Groups,\n        field: 'groupIds'\n    },\n    profile: {\n        type: 'one',\n        metadata: true,\n        collection: AuthorProfiles,\n        field: 'profileId',\n        unique: true\n    }\n});\nAuthorProfiles.addLinks({\n    author: {\n        collection: Authors,\n        inversedBy: 'profile',\n        unique: true\n    }\n});\nGroups.addLinks({\n    authors: {\n        collection: Authors,\n        inversedBy: 'groups'\n    }\n});\nCategories.addLinks({\n    posts: {\n        collection: Posts,\n        inversedBy: 'categories'\n    }\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher-react/__tests__/bootstrap/collections.js"],"names":["module","export","Authors","AuthorProfiles","Posts","Groups","Categories","Mongo","watch","require","v","Collection","addLinks","author","type","collection","field","categories","metadata","posts","inversedBy","groups","profile","unique","authors"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,aAAQ,MAAIA,OAAb;AAAqBC,oBAAe,MAAIA,cAAxC;AAAuDC,WAAM,MAAIA,KAAjE;AAAuEC,YAAO,MAAIA,MAAlF;AAAyFC,gBAAW,MAAIA;AAAxG,CAAd;AAAmI,IAAIC,KAAJ;AAAUP,OAAOQ,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,UAAMG,CAAN,EAAQ;AAACH,gBAAMG,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAEtI,MAAMR,UAAU,IAAIK,MAAMI,UAAV,CAAqB,SAArB,CAAhB;AACA,MAAMR,iBAAiB,IAAII,MAAMI,UAAV,CAAqB,iBAArB,CAAvB;AACA,MAAMP,QAAQ,IAAIG,MAAMI,UAAV,CAAqB,OAArB,CAAd;AACA,MAAMN,SAAS,IAAIE,MAAMI,UAAV,CAAqB,QAArB,CAAf;AACA,MAAML,aAAa,IAAIC,MAAMI,UAAV,CAAqB,YAArB,CAAnB;AAEPP,MAAMQ,QAAN,CAAe;AACXC,YAAQ;AACJC,cAAM,KADF;AAEJC,oBAAYb,OAFR;AAGJc,eAAO;AAHH,KADG;AAMXC,gBAAY;AACRH,cAAM,MADE;AAERI,kBAAU,IAFF;AAGRH,oBAAYT,UAHJ;AAIRU,eAAO;AAJC;AAND,CAAf;AAcAd,QAAQU,QAAR,CAAiB;AACbO,WAAO;AACHJ,oBAAYX,KADT;AAEHgB,oBAAY;AAFT,KADM;AAKbC,YAAQ;AACJP,cAAM,MADF;AAEJC,oBAAYV,MAFR;AAGJW,eAAO;AAHH,KALK;AAUbM,aAAS;AACLR,cAAM,KADD;AAELI,kBAAU,IAFL;AAGLH,oBAAYZ,cAHP;AAILa,eAAO,WAJF;AAKLO,gBAAQ;AALH;AAVI,CAAjB;AAmBApB,eAAeS,QAAf,CAAwB;AACpBC,YAAQ;AACJE,oBAAYb,OADR;AAEJkB,oBAAY,SAFR;AAGJG,gBAAQ;AAHJ;AADY,CAAxB;AAQAlB,OAAOO,QAAP,CAAgB;AACZY,aAAS;AACLT,oBAAYb,OADP;AAELkB,oBAAY;AAFP;AADG,CAAhB;AAOAd,WAAWM,QAAX,CAAoB;AAChBO,WAAO;AACHJ,oBAAYX,KADT;AAEHgB,oBAAY;AAFT;AADS,CAApB","file":"packages/cultofcoders:grapher-react/__tests__/bootstrap/collections.js.map","sourcesContent":["import {Mongo} from 'meteor/mongo';\n\nexport const Authors = new Mongo.Collection('authors');\nexport const AuthorProfiles = new Mongo.Collection('author_profiles');\nexport const Posts = new Mongo.Collection('posts');\nexport const Groups = new Mongo.Collection('groups');\nexport const Categories = new Mongo.Collection('categories');\n\nPosts.addLinks({\n    author: {\n        type: 'one',\n        collection: Authors,\n        field: 'authorId',\n    },\n    categories: {\n        type: 'many',\n        metadata: true,\n        collection: Categories,\n        field: 'categoryIds',\n    }\n});\n\nAuthors.addLinks({\n    posts: {\n        collection: Posts,\n        inversedBy: 'author',\n    },\n    groups: {\n        type: 'many',\n        collection: Groups,\n        field: 'groupIds',\n    },\n    profile: {\n        type: 'one',\n        metadata: true,\n        collection: AuthorProfiles,\n        field: 'profileId',\n        unique: true,\n    }\n});\n\nAuthorProfiles.addLinks({\n    author: {\n        collection: Authors,\n        inversedBy: 'profile',\n        unique: true,\n    }\n});\n\nGroups.addLinks({\n    authors: {\n        collection: Authors,\n        inversedBy: 'groups',\n    }\n});\n\nCategories.addLinks({\n    posts: {\n        collection: Posts,\n        inversedBy: 'categories',\n    }\n});\n"]},"hash":"118d2e037c96aa2ca338821a39eb787836e67c0f"}
