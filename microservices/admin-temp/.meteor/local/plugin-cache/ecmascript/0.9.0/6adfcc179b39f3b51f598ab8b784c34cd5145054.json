{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"simpl-schema","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SimpleSchema"}]},{"source":"../files/files","imported":["getFileSchema"],"specifiers":[{"kind":"named","imported":"getFileSchema","local":"getFileSchema"}]},{"source":"./borrowerConstants","imported":["RESIDENCY_PERMIT","GENDER","CIVIL_STATUS","OTHER_FORTUNE","OTHER_INCOME","EXPENSES","REAL_ESTATE"],"specifiers":[{"kind":"named","imported":"RESIDENCY_PERMIT","local":"RESIDENCY_PERMIT"},{"kind":"named","imported":"GENDER","local":"GENDER"},{"kind":"named","imported":"CIVIL_STATUS","local":"CIVIL_STATUS"},{"kind":"named","imported":"OTHER_FORTUNE","local":"OTHER_FORTUNE"},{"kind":"named","imported":"OTHER_INCOME","local":"OTHER_INCOME"},{"kind":"named","imported":"EXPENSES","local":"EXPENSES"},{"kind":"named","imported":"REAL_ESTATE","local":"REAL_ESTATE"}]}],"exports":{"exported":["BorrowerSchema"],"specifiers":[{"kind":"local","local":"BorrowerSchema","exported":"BorrowerSchema"}]}}},"options":{"filename":"imports/core/api/borrowers/borrowers.js","filenameRelative":"imports/core/api/borrowers/borrowers.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/borrowers/borrowers.js.map","sourceFileName":"imports/core/api/borrowers/borrowers.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"borrowers"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.export({\n  BorrowerSchema: function BorrowerSchema() {\n    return _BorrowerSchema;\n  }\n});\n\nvar _Mongo = void 0;\n\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function Mongo(v) {\n    _Mongo = v;\n  }\n}, 0);\nvar SimpleSchema = void 0;\nmodule.watch(require(\"simpl-schema\"), {\n  default: function _default(v) {\n    SimpleSchema = v;\n  }\n}, 1);\n\nvar _getFileSchema = void 0;\n\nmodule.watch(require(\"../files/files\"), {\n  getFileSchema: function getFileSchema(v) {\n    _getFileSchema = v;\n  }\n}, 2);\n\nvar _RESIDENCY_PERMIT = void 0,\n    _GENDER = void 0,\n    _CIVIL_STATUS = void 0,\n    _OTHER_FORTUNE = void 0,\n    _OTHER_INCOME = void 0,\n    _EXPENSES = void 0,\n    _REAL_ESTATE = void 0;\n\nmodule.watch(require(\"./borrowerConstants\"), {\n  RESIDENCY_PERMIT: function RESIDENCY_PERMIT(v) {\n    _RESIDENCY_PERMIT = v;\n  },\n  GENDER: function GENDER(v) {\n    _GENDER = v;\n  },\n  CIVIL_STATUS: function CIVIL_STATUS(v) {\n    _CIVIL_STATUS = v;\n  },\n  OTHER_FORTUNE: function OTHER_FORTUNE(v) {\n    _OTHER_FORTUNE = v;\n  },\n  OTHER_INCOME: function OTHER_INCOME(v) {\n    _OTHER_INCOME = v;\n  },\n  EXPENSES: function EXPENSES(v) {\n    _EXPENSES = v;\n  },\n  REAL_ESTATE: function REAL_ESTATE(v) {\n    _REAL_ESTATE = v;\n  }\n}, 3);\nvar Borrowers = new _Mongo.Collection('borrowers'); // Prevent all client side modifications of mongoDB\n\nexports.BorrowerSchema = _BorrowerSchema;\nBorrowers.deny({\n  insert: function insert() {\n    return true;\n  },\n  update: function update() {\n    return true;\n  },\n  remove: function remove() {\n    return true;\n  }\n});\nBorrowers.allow({\n  insert: function insert() {\n    return false;\n  },\n  update: function update() {\n    return false;\n  },\n  remove: function remove() {\n    return false;\n  }\n});\nvar BorrowerFilesSchema = new SimpleSchema(_getFileSchema('borrower'));\nvar LogicSchema = new SimpleSchema({\n  financeEthics: {\n    type: Boolean,\n    defaultValue: false,\n    optional: true\n  },\n  hasValidatedFinances: {\n    type: Boolean,\n    defaultValue: false,\n    optional: true\n  },\n  adminValidated: {\n    type: Boolean,\n    defaultValue: false\n  }\n}); // Documentation is in the google drive dev/MongoDB Schemas\n\nvar _BorrowerSchema = new SimpleSchema({\n  userId: {\n    type: String,\n    index: true,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      }\n    }\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function autoValue() {\n      // Verify the update is from the user owning this doc, ignoring admin/partner updates\n      var doc = Borrowers.findOne(this.docId, {\n        fields: {\n          userId: 1\n        }\n      });\n\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpdate && doc && this.userId === doc.userId) {\n        return new Date();\n      }\n    }\n  },\n  // Personal Information\n  firstName: {\n    type: String,\n    optional: true\n  },\n  lastName: {\n    type: String,\n    optional: true\n  },\n  gender: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(_GENDER)\n  },\n  age: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 18,\n    max: 120\n  },\n  address1: {\n    type: String,\n    optional: true\n  },\n  address2: {\n    type: String,\n    optional: true\n  },\n  zipCode: {\n    type: Number,\n    optional: true,\n    min: 1000,\n    max: 9999\n  },\n  city: {\n    type: String,\n    optional: true\n  },\n  sameAddress: {\n    type: Boolean,\n    optional: true\n  },\n  isSwiss: {\n    type: Boolean,\n    optional: true\n  },\n  residencyPermit: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(_RESIDENCY_PERMIT)\n  },\n  birthDate: {\n    type: String,\n    optional: true,\n    regEx: '/^d{4}[/-](0?[1-9]|1[012])[/-](0?[1-9]|[12][0-9]|3[01])$/' // YYYY-MM-DD\n\n  },\n  birthPlace: {\n    type: String,\n    optional: true\n  },\n  citizenship: {\n    type: String,\n    optional: true\n  },\n  isUSPerson: {\n    type: Boolean,\n    optional: true\n  },\n  civilStatus: {\n    type: String,\n    defaultValue: _CIVIL_STATUS.SINGLE,\n    allowedValues: Object.values(_CIVIL_STATUS)\n  },\n  childrenCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 20\n  },\n  company: {\n    type: String,\n    optional: true\n  },\n  worksForOwnCompany: {\n    type: Boolean,\n    optional: true\n  },\n  salary: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100000000\n  },\n  bonusExists: {\n    type: Boolean,\n    defaultValue: false\n  },\n  bonus: {\n    type: Object,\n    defaultValue: {}\n  },\n  'bonus.bonus2014': {\n    // oldest\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true\n  },\n  'bonus.bonus2015': {\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true\n  },\n  'bonus.bonus2016': {\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true\n  },\n  'bonus.bonus2017': {\n    // most recent\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true\n  },\n  otherIncome: {\n    type: Array,\n    optional: true,\n    defaultValue: []\n  },\n  'otherIncome.$': Object,\n  'otherIncome.$.value': {\n    type: Number,\n    min: 0,\n    max: 100000000\n  },\n  'otherIncome.$.description': {\n    type: String,\n    allowedValues: Object.values(_OTHER_INCOME)\n  },\n  otherFortune: {\n    type: Array,\n    optional: true,\n    defaultValue: []\n  },\n  'otherFortune.$': Object,\n  'otherFortune.$.value': {\n    type: Number,\n    min: 0,\n    max: 100000000\n  },\n  'otherFortune.$.description': {\n    type: String,\n    allowedValues: Object.values(_OTHER_FORTUNE)\n  },\n  expenses: {\n    type: Array,\n    optional: true,\n    defaultValue: []\n  },\n  'expenses.$': Object,\n  'expenses.$.value': {\n    type: Number,\n    min: 0,\n    max: 100000000\n  },\n  'expenses.$.description': {\n    type: String,\n    allowedValues: Object.values(_EXPENSES)\n  },\n  bankFortune: {\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true\n  },\n  realEstate: {\n    type: Array,\n    optional: true,\n    defaultValue: []\n  },\n  'realEstate.$': Object,\n  'realEstate.$.value': {\n    type: Number,\n    min: 0,\n    max: 100000000\n  },\n  'realEstate.$.loan': {\n    type: Number,\n    min: 0,\n    max: 100000000\n  },\n  'realEstate.$.description': {\n    type: String,\n    allowedValues: Object.values(_REAL_ESTATE)\n  },\n  personalBank: {\n    type: String,\n    optional: true\n  },\n  corporateBankExists: {\n    type: Boolean,\n    defaultValue: false\n  },\n  corporateBank: {\n    type: String,\n    optional: true\n  },\n  insuranceSecondPillar: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100000000\n  },\n  insuranceThirdPillar: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100000000\n  },\n  insurance3B: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100000000\n  },\n  files: {\n    type: BorrowerFilesSchema,\n    defaultValue: {}\n  },\n  // business logic and admin\n  logic: {\n    type: LogicSchema,\n    defaultValue: {}\n  },\n  admin: {\n    // TODO\n    type: Object,\n    optional: true\n  },\n  adminValidation: {\n    type: Object,\n    defaultValue: {},\n    blackbox: true\n  }\n});\n\nBorrowers.attachSchema(_BorrowerSchema);\nmodule.exportDefault(Borrowers);","map":{"version":3,"sources":["imports/core/api/borrowers/borrowers.js"],"names":["module","export","BorrowerSchema","Mongo","watch","require","v","SimpleSchema","default","getFileSchema","RESIDENCY_PERMIT","GENDER","CIVIL_STATUS","OTHER_FORTUNE","OTHER_INCOME","EXPENSES","REAL_ESTATE","Borrowers","Collection","deny","insert","update","remove","allow","BorrowerFilesSchema","LogicSchema","financeEthics","type","Boolean","defaultValue","optional","hasValidatedFinances","adminValidated","userId","String","index","createdAt","Date","autoValue","isInsert","updatedAt","doc","findOne","docId","fields","isUpdate","firstName","lastName","gender","allowedValues","Object","values","age","Integer","min","max","address1","address2","zipCode","Number","city","sameAddress","isSwiss","residencyPermit","birthDate","regEx","birthPlace","citizenship","isUSPerson","civilStatus","SINGLE","childrenCount","company","worksForOwnCompany","salary","bonusExists","bonus","otherIncome","Array","otherFortune","expenses","bankFortune","realEstate","personalBank","corporateBankExists","corporateBank","insuranceSecondPillar","insuranceThirdPillar","insurance3B","files","logic","admin","adminValidation","blackbox","attachSchema","exportDefault"],"mappings":"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","file":"imports/core/api/borrowers/borrowers.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\nimport { getFileSchema } from '../files/files';\nimport {\n  RESIDENCY_PERMIT,\n  GENDER,\n  CIVIL_STATUS,\n  OTHER_FORTUNE,\n  OTHER_INCOME,\n  EXPENSES,\n  REAL_ESTATE,\n} from './borrowerConstants';\n\nconst Borrowers = new Mongo.Collection('borrowers');\n\n// Prevent all client side modifications of mongoDB\nBorrowers.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nBorrowers.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nconst BorrowerFilesSchema = new SimpleSchema(getFileSchema('borrower'));\n\nconst LogicSchema = new SimpleSchema({\n  financeEthics: {\n    type: Boolean,\n    defaultValue: false,\n    optional: true,\n  },\n  hasValidatedFinances: {\n    type: Boolean,\n    defaultValue: false,\n    optional: true,\n  },\n  adminValidated: {\n    type: Boolean,\n    defaultValue: false,\n  },\n});\n\n// Documentation is in the google drive dev/MongoDB Schemas\nexport const BorrowerSchema = new SimpleSchema({\n  userId: {\n    type: String,\n    index: true,\n    optional: true,\n  },\n  createdAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      }\n    },\n  },\n  updatedAt: {\n    type: Date,\n    autoValue() {\n      // Verify the update is from the user owning this doc, ignoring admin/partner updates\n      const doc = Borrowers.findOne(this.docId, { fields: { userId: 1 } });\n\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpdate && doc && this.userId === doc.userId) {\n        return new Date();\n      }\n    },\n  },\n\n  // Personal Information\n  firstName: {\n    type: String,\n    optional: true,\n  },\n  lastName: {\n    type: String,\n    optional: true,\n  },\n  gender: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(GENDER),\n  },\n  age: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 18,\n    max: 120,\n  },\n  address1: {\n    type: String,\n    optional: true,\n  },\n  address2: {\n    type: String,\n    optional: true,\n  },\n  zipCode: {\n    type: Number,\n    optional: true,\n    min: 1000,\n    max: 9999,\n  },\n  city: {\n    type: String,\n    optional: true,\n  },\n  sameAddress: {\n    type: Boolean,\n    optional: true,\n  },\n  isSwiss: {\n    type: Boolean,\n    optional: true,\n  },\n  residencyPermit: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(RESIDENCY_PERMIT),\n  },\n  birthDate: {\n    type: String,\n    optional: true,\n    regEx: '/^d{4}[/-](0?[1-9]|1[012])[/-](0?[1-9]|[12][0-9]|3[01])$/', // YYYY-MM-DD\n  },\n  birthPlace: {\n    type: String,\n    optional: true,\n  },\n  citizenship: {\n    type: String,\n    optional: true,\n  },\n  isUSPerson: {\n    type: Boolean,\n    optional: true,\n  },\n  civilStatus: {\n    type: String,\n    defaultValue: CIVIL_STATUS.SINGLE,\n    allowedValues: Object.values(CIVIL_STATUS),\n  },\n  childrenCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 20,\n  },\n  company: {\n    type: String,\n    optional: true,\n  },\n  worksForOwnCompany: {\n    type: Boolean,\n    optional: true,\n  },\n  salary: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100000000,\n  },\n  bonusExists: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  bonus: {\n    type: Object,\n    defaultValue: {},\n  },\n  'bonus.bonus2014': {\n    // oldest\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true,\n  },\n  'bonus.bonus2015': {\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true,\n  },\n  'bonus.bonus2016': {\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true,\n  },\n  'bonus.bonus2017': {\n    // most recent\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true,\n  },\n  otherIncome: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n  },\n  'otherIncome.$': Object,\n  'otherIncome.$.value': {\n    type: Number,\n    min: 0,\n    max: 100000000,\n  },\n  'otherIncome.$.description': {\n    type: String,\n    allowedValues: Object.values(OTHER_INCOME),\n  },\n  otherFortune: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n  },\n  'otherFortune.$': Object,\n  'otherFortune.$.value': {\n    type: Number,\n    min: 0,\n    max: 100000000,\n  },\n  'otherFortune.$.description': {\n    type: String,\n    allowedValues: Object.values(OTHER_FORTUNE),\n  },\n  expenses: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n  },\n  'expenses.$': Object,\n  'expenses.$.value': {\n    type: Number,\n    min: 0,\n    max: 100000000,\n  },\n  'expenses.$.description': {\n    type: String,\n    allowedValues: Object.values(EXPENSES),\n  },\n  bankFortune: {\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true,\n  },\n  realEstate: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n  },\n  'realEstate.$': Object,\n  'realEstate.$.value': {\n    type: Number,\n    min: 0,\n    max: 100000000,\n  },\n  'realEstate.$.loan': {\n    type: Number,\n    min: 0,\n    max: 100000000,\n  },\n  'realEstate.$.description': {\n    type: String,\n    allowedValues: Object.values(REAL_ESTATE),\n  },\n  personalBank: {\n    type: String,\n    optional: true,\n  },\n  corporateBankExists: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  corporateBank: {\n    type: String,\n    optional: true,\n  },\n  insuranceSecondPillar: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100000000,\n  },\n  insuranceThirdPillar: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100000000,\n  },\n  insurance3B: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100000000,\n  },\n  files: {\n    type: BorrowerFilesSchema,\n    defaultValue: {},\n  },\n  // business logic and admin\n  logic: {\n    type: LogicSchema,\n    defaultValue: {},\n  },\n  admin: {\n    // TODO\n    type: Object,\n    optional: true,\n  },\n  adminValidation: {\n    type: Object,\n    defaultValue: {},\n    blackbox: true,\n  },\n});\n\nBorrowers.attachSchema(BorrowerSchema);\nexport default Borrowers;\n"]},"hash":"6adfcc179b39f3b51f598ab8b784c34cd5145054"}
