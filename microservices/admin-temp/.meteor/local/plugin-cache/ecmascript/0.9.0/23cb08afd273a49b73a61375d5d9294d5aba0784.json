{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"./api","imported":["getLocationId","callApi"],"specifiers":[{"kind":"named","imported":"getLocationId","local":"getLocationId"},{"kind":"named","imported":"callApi","local":"callApi"}]},{"source":"../loanFunctions","imported":["getLoanValue"],"specifiers":[{"kind":"named","imported":"getLoanValue","local":"getLoanValue"}]},{"source":"../offerFunctions","imported":["getBestRate"],"specifiers":[{"kind":"named","imported":"getBestRate","local":"getBestRate"}]},{"source":"../../api/constants","imported":["USAGE_TYPE"],"specifiers":[{"kind":"named","imported":"USAGE_TYPE","local":"USAGE_TYPE"}]}],"exports":{"exported":["getLocation","getTaxBase","getMortgageArray","getAmortizationObject","calculateDirectAmo","calculateIndirectAmo"],"specifiers":[{"kind":"local","local":"getLocation","exported":"getLocation"},{"kind":"local","local":"getTaxBase","exported":"getTaxBase"},{"kind":"local","local":"getMortgageArray","exported":"getMortgageArray"},{"kind":"local","local":"getAmortizationObject","exported":"getAmortizationObject"},{"kind":"local","local":"calculateDirectAmo","exported":"calculateDirectAmo"},{"kind":"local","local":"calculateIndirectAmo","exported":"calculateIndirectAmo"}]}}},"options":{"filename":"imports/core/utils/logismata/mapping.js","filenameRelative":"imports/core/utils/logismata/mapping.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/utils/logismata/mapping.js.map","sourceFileName":"imports/core/utils/logismata/mapping.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"mapping"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLocation = undefined;\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  getLocation: function getLocation() {\n    return _getLocation;\n  },\n  getTaxBase: function getTaxBase() {\n    return _getTaxBase;\n  },\n  getMortgageArray: function getMortgageArray() {\n    return _getMortgageArray;\n  },\n  getAmortizationObject: function getAmortizationObject() {\n    return _getAmortizationObject;\n  },\n  calculateDirectAmo: function calculateDirectAmo() {\n    return _calculateDirectAmo;\n  },\n  calculateIndirectAmo: function calculateIndirectAmo() {\n    return _calculateIndirectAmo;\n  }\n});\n\nvar _getLocationId = void 0,\n    _callApi = void 0;\n\nmodule.watch(require(\"./api\"), {\n  getLocationId: function getLocationId(v) {\n    _getLocationId = v;\n  },\n  callApi: function callApi(v) {\n    _callApi = v;\n  }\n}, 0);\n\nvar _getLoanValue = void 0;\n\nmodule.watch(require(\"../loanFunctions\"), {\n  getLoanValue: function getLoanValue(v) {\n    _getLoanValue = v;\n  }\n}, 1);\nexports.getLocation = _getLocation;\n\nvar _getBestRate = void 0;\n\nmodule.watch(require(\"../offerFunctions\"), {\n  getBestRate: function getBestRate(v) {\n    _getBestRate = v;\n  }\n}, 2);\n\nvar _USAGE_TYPE = void 0;\n\nmodule.watch(require(\"../../api/constants\"), {\n  USAGE_TYPE: function USAGE_TYPE(v) {\n    _USAGE_TYPE = v;\n  }\n}, 3);\n\nvar _getLocation = function _getLocation(_ref) {\n  var loan = _ref.loan,\n      borrowers = _ref.borrowers,\n      property = _ref.property;\n  var search = '';\n\n  if (loan.general.usageType === _USAGE_TYPE.PRIMARY) {\n    // use future property address\n    search = property.zipCode.toString() + \" \" + property.city;\n  } else {\n    // Use first borrower's current address\n    search = borrowers[0].zipCode + \" \" + borrowers[0].city;\n  }\n\n  return _getLocationId(search);\n};\n\nvar _getTaxBase = function _getTaxBase(loan, borrowers, locationId) {\n  return {\n    locationId: locationId,\n    currentYear: new Date().getFullYear(),\n    civilStatus: borrowers[0].civilStatus,\n    confession: 'other',\n    // confession2: '',\n    childrenCount: borrowers[0].childrenCount || 0,\n    age: borrowers[0].age,\n    sex: borrowers[0].sex,\n    incomeBase: 'gross income',\n    grossIncome: borrowers[0].salary,\n    grossFortune: borrowers[0].bankFortune\n  };\n};\n\nvar _getMortgageArray = function _getMortgageArray(_ref2) {\n  var loan = _ref2.loan,\n      offers = _ref2.offers,\n      property = _ref2.property;\n\n  var loanValue = _getLoanValue({\n    loan: loan\n  });\n\n  var propertyValue = property.value;\n  var hasRank2 = loanValue / propertyValue > 0.65; // Logismata sends 1% as 1.0\n\n  var interestRate = _getBestRate({\n    offers: offers\n  }) * 100;\n  var defaultObject = {\n    duration: 10,\n    typ: 2,\n    // fixed\n    interestrate: interestRate\n  };\n  var mortgages = [];\n  mortgages.push((0, _extends3.default)({}, defaultObject, {\n    id: property.address1 + \" 1\",\n    description: 'rank 1',\n    rang: 1,\n    amount: hasRank2 ? 0.65 * propertyValue : loanValue\n  }));\n\n  if (hasRank2) {\n    // If this project has a rank 2 mortgage\n    mortgages.push((0, _extends3.default)({}, defaultObject, {\n      id: property.address1 + \" 2\",\n      description: 'rank 2',\n      rang: 2,\n      amount: loanValue - 0.65 * propertyValue\n    }));\n  }\n\n  return mortgages;\n};\n\nvar _getAmortizationObject = function _getAmortizationObject(_ref3) {\n  var loan = _ref3.loan,\n      offers = _ref3.offers,\n      property = _ref3.property;\n\n  var loanValue = _getLoanValue({\n    loan: loan\n  });\n\n  var propertyValue = property.value; // Very simple here, amortization goal is to reach 65%\n\n  var goal = loanValue - 0.65 * propertyValue;\n  return {\n    amortizationGoal: goal,\n    duration: 10,\n    isDetailed: false,\n    rentalValue: 0,\n    maintenanceCosts: 0,\n    newMortgages: true,\n    mortgages: _getMortgageArray({\n      loan: loan,\n      offers: offers\n    }),\n    savingType: 'Saving 3a',\n    savingRate: 0.5\n  };\n};\n\nvar _calculateDirectAmo = function _calculateDirectAmo(_ref4) {\n  var loan = _ref4.loan,\n      borrowers = _ref4.borrowers,\n      offers = _ref4.offers;\n  console.log('calculating direct...');\n  return _getLocation(loan, borrowers).then(function (locationId) {\n    return _callApi('calcDirectAmortization', (0, _extends3.default)({\n      taxBase: _getTaxBase({\n        loan: loan,\n        borrowers: borrowers\n      }, locationId)\n    }, _getAmortizationObject({\n      loan: loan,\n      offers: offers\n    })));\n  });\n};\n\nvar _calculateIndirectAmo = function _calculateIndirectAmo(_ref5) {\n  var loan = _ref5.loan,\n      borrowers = _ref5.borrowers,\n      offers = _ref5.offers;\n  console.log('calculating direct...');\n  return _getLocation({\n    loan: loan,\n    borrowers: borrowers\n  }).then(function (locationId) {\n    return _callApi('calcIndirectAmortization', (0, _extends3.default)({\n      taxBase: _getTaxBase({\n        loan: loan,\n        borrowers: borrowers\n      }, locationId)\n    }, _getAmortizationObject({\n      loan: loan,\n      offers: offers\n    })));\n  });\n};","map":{"version":3,"sources":["imports/core/utils/logismata/mapping.js"],"names":["module","export","getLocation","getTaxBase","getMortgageArray","getAmortizationObject","calculateDirectAmo","calculateIndirectAmo","getLocationId","callApi","watch","require","v","getLoanValue","getBestRate","USAGE_TYPE","loan","borrowers","property","search","general","usageType","PRIMARY","zipCode","toString","city","locationId","currentYear","Date","getFullYear","civilStatus","confession","childrenCount","age","sex","incomeBase","grossIncome","salary","grossFortune","bankFortune","offers","loanValue","propertyValue","value","hasRank2","interestRate","defaultObject","duration","typ","interestrate","mortgages","push","id","address1","description","rang","amount","goal","amortizationGoal","isDetailed","rentalValue","maintenanceCosts","newMortgages","savingType","savingRate","console","log","then","taxBase"],"mappings":"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","file":"imports/core/utils/logismata/mapping.js.map","sourcesContent":["import { getLocationId, callApi } from './api';\nimport { getLoanValue } from '../loanFunctions';\nimport { getBestRate } from '../offerFunctions';\nimport { USAGE_TYPE } from 'core/api/constants';\n\nexport const getLocation = ({ loan, borrowers, property }) => {\n  let search = '';\n  if (loan.general.usageType === USAGE_TYPE.PRIMARY) {\n    // use future property address\n    search = `${property.zipCode.toString()} ${property.city}`;\n  } else {\n    // Use first borrower's current address\n    search = `${borrowers[0].zipCode} ${borrowers[0].city}`;\n  }\n\n  return getLocationId(search);\n};\n\nexport const getTaxBase = (loan, borrowers, locationId) => ({\n  locationId,\n  currentYear: new Date().getFullYear(),\n  civilStatus: borrowers[0].civilStatus,\n  confession: 'other',\n  // confession2: '',\n  childrenCount: borrowers[0].childrenCount || 0,\n  age: borrowers[0].age,\n  sex: borrowers[0].sex,\n  incomeBase: 'gross income',\n  grossIncome: borrowers[0].salary,\n  grossFortune: borrowers[0].bankFortune,\n});\n\nexport const getMortgageArray = ({ loan, offers, property }) => {\n  const loanValue = getLoanValue({ loan });\n  const propertyValue = property.value;\n  const hasRank2 = loanValue / propertyValue > 0.65;\n\n  // Logismata sends 1% as 1.0\n  const interestRate = getBestRate({ offers }) * 100;\n\n  const defaultObject = {\n    duration: 10,\n    typ: 2, // fixed\n    interestrate: interestRate,\n  };\n\n  const mortgages = [];\n  mortgages.push({\n    ...defaultObject,\n    id: `${property.address1} 1`,\n    description: 'rank 1',\n    rang: 1,\n    amount: hasRank2 ? 0.65 * propertyValue : loanValue,\n  });\n\n  if (hasRank2) {\n    // If this project has a rank 2 mortgage\n    mortgages.push({\n      ...defaultObject,\n      id: `${property.address1} 2`,\n      description: 'rank 2',\n      rang: 2,\n      amount: loanValue - 0.65 * propertyValue,\n    });\n  }\n\n  return mortgages;\n};\n\nexport const getAmortizationObject = ({ loan, offers, property }) => {\n  const loanValue = getLoanValue({ loan });\n  const propertyValue = property.value;\n\n  // Very simple here, amortization goal is to reach 65%\n  const goal = loanValue - 0.65 * propertyValue;\n\n  return {\n    amortizationGoal: goal,\n    duration: 10,\n    isDetailed: false,\n    rentalValue: 0,\n    maintenanceCosts: 0,\n    newMortgages: true,\n    mortgages: getMortgageArray({ loan, offers }),\n    savingType: 'Saving 3a',\n    savingRate: 0.5,\n  };\n};\n\nexport const calculateDirectAmo = ({ loan, borrowers, offers }) => {\n  console.log('calculating direct...');\n  return getLocation(loan, borrowers).then(locationId =>\n    callApi('calcDirectAmortization', {\n      taxBase: getTaxBase({ loan, borrowers }, locationId),\n      ...getAmortizationObject({ loan, offers }),\n    }));\n};\n\nexport const calculateIndirectAmo = ({ loan, borrowers, offers }) => {\n  console.log('calculating direct...');\n\n  return getLocation({ loan, borrowers }).then(locationId =>\n    callApi('calcIndirectAmortization', {\n      taxBase: getTaxBase({ loan, borrowers }, locationId),\n      ...getAmortizationObject({ loan, offers }),\n    }));\n};\n"]},"hash":"23cb08afd273a49b73a61375d5d9294d5aba0784"}
