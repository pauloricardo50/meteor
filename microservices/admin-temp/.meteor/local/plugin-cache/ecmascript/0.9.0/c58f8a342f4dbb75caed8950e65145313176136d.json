{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/okgrow:analytics","imported":["analytics"],"specifiers":[{"kind":"named","imported":"analytics","local":"analytics"}]},{"source":"./browserFunctions","imported":["storageAvailable","isDemo"],"specifiers":[{"kind":"named","imported":"storageAvailable","local":"storageAvailable"},{"kind":"named","imported":"isDemo","local":"isDemo"}]}],"exports":{"exported":["allowTracking","addUserTracking","trackOncePerSession"],"specifiers":[{"kind":"local","local":"allowTracking","exported":"allowTracking"},{"kind":"local","local":"addUserTracking","exported":"addUserTracking"},{"kind":"local","local":"trackOncePerSession","exported":"trackOncePerSession"}]}}},"options":{"filename":"imports/core/utils/analytics.js","filenameRelative":"imports/core/utils/analytics.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/utils/analytics.js.map","sourceFileName":"imports/core/utils/analytics.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"analytics"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.export({\n  allowTracking: function allowTracking() {\n    return _allowTracking;\n  },\n  addUserTracking: function addUserTracking() {\n    return _addUserTracking;\n  },\n  trackOncePerSession: function trackOncePerSession() {\n    return _trackOncePerSession;\n  }\n});\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _analytics = void 0;\n\nexports.allowTracking = _allowTracking;\nmodule.watch(require(\"meteor/okgrow:analytics\"), {\n  analytics: function analytics(v) {\n    _analytics = v;\n  }\n}, 1);\n\nvar _storageAvailable = void 0,\n    _isDemo = void 0;\n\nmodule.watch(require(\"./browserFunctions\"), {\n  storageAvailable: function storageAvailable(v) {\n    _storageAvailable = v;\n  },\n  isDemo: function isDemo(v) {\n    _isDemo = v;\n  }\n}, 2);\n\n/**\n * allowTracking - Prevents tracking during tests and on a demo website\n *\n * @return {Boolean}\n */var _allowTracking = function _allowTracking() {\n  if (_isDemo()) {\n    return false;\n  } else if (_Meteor.isTest) {\n    return false;\n  }\n\n  return true;\n};\n\nvar _addUserTracking = function _addUserTracking(userId, metadata) {\n  if (!userId) {\n    throw new Error('no tracking identification userId provided');\n  }\n\n  if (_allowTracking()) {\n    _analytics.identify(userId, metadata);\n  }\n};\n\nvar track = function track(eventName, metadata) {\n  if (!eventName) {\n    throw new Error('no tracking eventName provided');\n  }\n\n  if (_allowTracking()) {\n    _analytics.track(eventName, metadata);\n  }\n};\n\nmodule.exportDefault(track);\n\nvar _trackOncePerSession = function _trackOncePerSession(eventName, metadata) {\n  var localId = \"epotek-tracking.\" + eventName; // Make sure we can use sessionStorage\n\n  if (_storageAvailable('sessionStorage')) {\n    var localTracked = sessionStorage.getItem(localId);\n\n    if (!localTracked) {\n      // If this id has never been tracked in localStorage, track\n      track(eventName, metadata);\n      sessionStorage.setItem(localId, eventName);\n    } else {\n      return false;\n    }\n  }\n};","map":{"version":3,"sources":["imports/core/utils/analytics.js"],"names":["module","export","allowTracking","addUserTracking","trackOncePerSession","Meteor","watch","require","v","analytics","storageAvailable","isDemo","isTest","userId","metadata","Error","identify","track","eventName","exportDefault","localId","localTracked","sessionStorage","getItem","setItem"],"mappings":";;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,iBAAc;AAAA,WAAIA,cAAJ;AAAA,GAAf;AAAiCC,mBAAgB;AAAA,WAAIA,gBAAJ;AAAA,GAAjD;AAAqEC,uBAAoB;AAAA,WAAIA,oBAAJ;AAAA;AAAzF,CAAd;;AAAiI,IAAIC,gBAAJ;;AAAWL,OAAOM,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,QAAD,kBAAQG,CAAR,EAAU;AAACH,cAAOG,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;;AAA+D,IAAIC,mBAAJ;;;AAAcT,OAAOM,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAACE,WAAD,qBAAWD,CAAX,EAAa;AAACC,iBAAUD,CAAV;AAAY;AAA1B,CAAhD,EAA4E,CAA5E;;AAA+E,IAAIE,0BAAJ;AAAA,IAAqBC,gBAArB;;AAA4BX,OAAOM,KAAP,CAAaC,QAAQ,oBAAR,CAAb,EAA2C;AAACG,kBAAD,4BAAkBF,CAAlB,EAAoB;AAACE,wBAAiBF,CAAjB;AAAmB,GAAxC;AAAyCG,QAAzC,kBAAgDH,CAAhD,EAAkD;AAACG,cAAOH,CAAP;AAAS;AAA5D,CAA3C,EAAyG,CAAzG;;AAIpU;;;;GAKO,IAAMN,iBAAgB,SAAhBA,cAAgB,GAAM;AACjC,MAAIS,SAAJ,EAAc;AACZ,WAAO,KAAP;AACD,GAFD,MAEO,IAAIN,QAAOO,MAAX,EAAmB;AACxB,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD,CARM;;AAUA,IAAMT,mBAAkB,SAAlBA,gBAAkB,CAACU,MAAD,EAASC,QAAT,EAAsB;AACnD,MAAI,CAACD,MAAL,EAAa;AACX,UAAM,IAAIE,KAAJ,CAAU,4CAAV,CAAN;AACD;;AACD,MAAIb,gBAAJ,EAAqB;AACnBO,eAAUO,QAAV,CAAmBH,MAAnB,EAA2BC,QAA3B;AACD;AACF,CAPM;;AASP,IAAMG,QAAQ,SAARA,KAAQ,CAACC,SAAD,EAAYJ,QAAZ,EAAyB;AACrC,MAAI,CAACI,SAAL,EAAgB;AACd,UAAM,IAAIH,KAAJ,CAAU,gCAAV,CAAN;AACD;;AACD,MAAIb,gBAAJ,EAAqB;AACnBO,eAAUQ,KAAV,CAAgBC,SAAhB,EAA2BJ,QAA3B;AACD;AACF,CAPD;;AA5BAd,OAAOmB,aAAP,CAqCeF,KArCf;;AAuCO,IAAMb,uBAAsB,SAAtBA,oBAAsB,CAACc,SAAD,EAAYJ,QAAZ,EAAyB;AAC1D,MAAMM,+BAA6BF,SAAnC,CAD0D,CAG1D;;AACA,MAAIR,kBAAiB,gBAAjB,CAAJ,EAAwC;AACtC,QAAMW,eAAeC,eAAeC,OAAf,CAAuBH,OAAvB,CAArB;;AAEA,QAAI,CAACC,YAAL,EAAmB;AACjB;AACAJ,YAAMC,SAAN,EAAiBJ,QAAjB;AACAQ,qBAAeE,OAAf,CAAuBJ,OAAvB,EAAgCF,SAAhC;AACD,KAJD,MAIO;AACL,aAAO,KAAP;AACD;AACF;AACF,CAfM","file":"imports/core/utils/analytics.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { analytics } from 'meteor/okgrow:analytics';\nimport { storageAvailable, isDemo } from './browserFunctions';\n\n/**\n * allowTracking - Prevents tracking during tests and on a demo website\n *\n * @return {Boolean}\n */\nexport const allowTracking = () => {\n  if (isDemo()) {\n    return false;\n  } else if (Meteor.isTest) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const addUserTracking = (userId, metadata) => {\n  if (!userId) {\n    throw new Error('no tracking identification userId provided');\n  }\n  if (allowTracking()) {\n    analytics.identify(userId, metadata);\n  }\n};\n\nconst track = (eventName, metadata) => {\n  if (!eventName) {\n    throw new Error('no tracking eventName provided');\n  }\n  if (allowTracking()) {\n    analytics.track(eventName, metadata);\n  }\n};\n\nexport default track;\n\nexport const trackOncePerSession = (eventName, metadata) => {\n  const localId = `epotek-tracking.${eventName}`;\n\n  // Make sure we can use sessionStorage\n  if (storageAvailable('sessionStorage')) {\n    const localTracked = sessionStorage.getItem(localId);\n\n    if (!localTracked) {\n      // If this id has never been tracked in localStorage, track\n      track(eventName, metadata);\n      sessionStorage.setItem(localId, eventName);\n    } else {\n      return false;\n    }\n  }\n};\n"]},"hash":"c58f8a342f4dbb75caed8950e65145313176136d"}
