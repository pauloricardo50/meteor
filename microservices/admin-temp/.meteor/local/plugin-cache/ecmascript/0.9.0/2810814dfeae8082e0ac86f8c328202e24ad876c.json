{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"../../../core/components/DropdownMenu","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"DropdownMenu"}]},{"source":"../../../core/api","imported":["callMutation","mutations"],"specifiers":[{"kind":"named","imported":"callMutation","local":"callMutation"},{"kind":"named","imported":"mutations","local":"mutations"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","filenameRelative":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourceFileName":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TasksAssignedUserDropdown"},"ignored":false,"code":"\"use strict\";\n\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar DropdownMenu = void 0;\nmodule.watch(require(\"../../../core/components/DropdownMenu\"), {\n  \"default\": function () {\n    function _default(v) {\n      DropdownMenu = v;\n    }\n\n    return _default;\n  }()\n}, 2);\n\nvar _callMutation = void 0,\n    _mutations = void 0;\n\nmodule.watch(require(\"../../../core/api\"), {\n  callMutation: function () {\n    function callMutation(v) {\n      _callMutation = v;\n    }\n\n    return callMutation;\n  }(),\n  mutations: function () {\n    function mutations(v) {\n      _mutations = v;\n    }\n\n    return mutations;\n  }()\n}, 3);\n\nvar firstUserAssign = function () {\n  function firstUserAssign(_ref) {\n    var taskAssignedTo = _ref.taskAssignedTo,\n        relatedUserId = _ref.relatedUserId,\n        user = _ref.user,\n        taskId = _ref.taskId,\n        taskType = _ref.taskType;\n\n    if (!taskAssignedTo) {\n      _callMutation(_mutations.ASSIGN_ADMIN_TO_NEW_USER_TASK, {\n        userId: relatedUserId,\n        adminId: user._id,\n        taskId: taskId,\n        taskType: taskType\n      });\n    } else {\n      _callMutation(_mutations.TASK_CHANGE_ASSIGNED_TO, {\n        taskId: taskId,\n        newAssignee: user._id\n      });\n    }\n  }\n\n  return firstUserAssign;\n}();\n\nvar changeAssignedUser = function () {\n  function changeAssignedUser(_ref2) {\n    var user = _ref2.user,\n        task = _ref2.task,\n        taskAssignedTo = _ref2.taskAssignedTo;\n    var taskUserId = task.user ? task.user._id : undefined;\n\n    if (!taskUserId) {\n      _callMutation(_mutations.TASK_GET_RELATED_TO, {\n        task: task\n      }).then(function (relatedUserId) {\n        firstUserAssign({\n          taskAssignedTo: taskAssignedTo,\n          relatedUserId: relatedUserId,\n          user: user,\n          taskId: task._id,\n          taskType: task.type\n        });\n      });\n    } else {\n      firstUserAssign({\n        taskAssignedTo: taskAssignedTo,\n        relatedUserId: taskUserId,\n        user: user,\n        taskId: task._id,\n        taskType: task.type\n      });\n    }\n  }\n\n  return changeAssignedUser;\n}();\n\nvar getMenuItems = function () {\n  function getMenuItems(users, task) {\n    var taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n    var options = users.map(function (user) {\n      return {\n        id: user._id,\n        show: user._id !== taskUser,\n        label: user.emails[0].address,\n        link: false,\n        onClick: function () {\n          function onClick() {\n            changeAssignedUser(user._id, taskId);\n          }\n\n          return onClick;\n        }()\n      };\n    });\n    return options;\n  }\n\n  return getMenuItems;\n}();\n\nvar TasksAssignedUserDropdown = function () {\n  function TasksAssignedUserDropdown(props) {\n    var data = props.data,\n        isLoading = props.isLoading,\n        error = props.error,\n        task = props.task,\n        styles = props.styles;\n\n    if (isLoading) {\n      return null;\n    }\n\n    if (error) {\n      return React.createElement(\n        \"div\",\n        null,\n        \"Error: \",\n        error.reason\n      );\n    }\n\n    return React.createElement(DropdownMenu, {\n      iconType: \"personAdd\",\n      options: getMenuItems(data, task),\n      style: styles\n    });\n  }\n\n  return TasksAssignedUserDropdown;\n}();\n\nmodule.exportDefault(TasksAssignedUserDropdown);","map":{"version":3,"sources":["imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx"],"names":["React","module","watch","require","v","PropTypes","DropdownMenu","callMutation","mutations","firstUserAssign","taskAssignedTo","relatedUserId","user","taskId","taskType","ASSIGN_ADMIN_TO_NEW_USER_TASK","userId","adminId","_id","TASK_CHANGE_ASSIGNED_TO","newAssignee","changeAssignedUser","task","taskUserId","undefined","TASK_GET_RELATED_TO","then","type","getMenuItems","users","assignedUser","options","map","id","show","taskUser","label","emails","address","link","onClick","TasksAssignedUserDropdown","props","data","isLoading","error","styles","reason","exportDefault"],"mappings":"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","file":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DropdownMenu from 'core/components/DropdownMenu/';\nimport { callMutation, mutations } from 'core/api';\n\nconst firstUserAssign = ({\n  taskAssignedTo,\n  relatedUserId,\n  user,\n  taskId,\n  taskType,\n}) => {\n  if (!taskAssignedTo) {\n    callMutation(mutations.ASSIGN_ADMIN_TO_NEW_USER_TASK, {\n      userId: relatedUserId,\n      adminId: user._id,\n      taskId,\n      taskType,\n    });\n  } else {\n    callMutation(mutations.TASK_CHANGE_ASSIGNED_TO, {\n      taskId,\n      newAssignee: user._id,\n    });\n  }\n};\n\nconst changeAssignedUser = ({ user, task, taskAssignedTo }) => {\n  const taskUserId = task.user ? task.user._id : undefined;\n  if (!taskUserId) {\n    callMutation(mutations.TASK_GET_RELATED_TO, {\n      task,\n    }).then((relatedUserId) => {\n      firstUserAssign({\n        taskAssignedTo,\n        relatedUserId,\n        user,\n        taskId: task._id,\n        taskType: task.type,\n      });\n    });\n  } else {\n    firstUserAssign({\n      taskAssignedTo,\n      relatedUserId: taskUserId,\n      user,\n      taskId: task._id,\n      taskType: task.type,\n    });\n  }\n};\n\nconst getMenuItems = (users, task) => {\n  const taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n  const options = users.map(user => ({\n    id: user._id,\n    show: user._id !== taskUser,\n    label: user.emails[0].address,\n    link: false,\n    onClick: () => {\n      changeAssignedUser(user._id, taskId);\n    },\n  }));\n  return options;\n};\n\nconst TasksAssignedUserDropdown = (props) => {\n  const { data, isLoading, error, task, styles } = props;\n\n  if (isLoading) {\n    return null;\n  }\n  if (error) {\n    return <div>Error: {error.reason}</div>;\n  }\n\n  return (\n    <DropdownMenu\n      iconType=\"personAdd\"\n      options={getMenuItems(data, task)}\n      style={styles}\n    />\n  );\n};\n\nexport default TasksAssignedUserDropdown;\n"]},"hash":"2810814dfeae8082e0ac86f8c328202e24ad876c"}
