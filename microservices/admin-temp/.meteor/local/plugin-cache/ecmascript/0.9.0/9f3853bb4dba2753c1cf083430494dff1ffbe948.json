{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"simpl-schema","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SimpleSchema"}]}],"exports":{"exported":["ComparatorSchema"],"specifiers":[{"kind":"local","local":"ComparatorSchema","exported":"ComparatorSchema"}]}}},"options":{"filename":"imports/core/api/comparators/comparators.js","filenameRelative":"imports/core/api/comparators/comparators.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/comparators/comparators.js.map","sourceFileName":"imports/core/api/comparators/comparators.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"comparators"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.export({\n  ComparatorSchema: function () {\n    function ComparatorSchema() {\n      return _ComparatorSchema;\n    }\n\n    return ComparatorSchema;\n  }()\n});\n\nvar _Mongo = void 0;\n\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function () {\n    function Mongo(v) {\n      _Mongo = v;\n    }\n\n    return Mongo;\n  }()\n}, 0);\nvar SimpleSchema = void 0;\nmodule.watch(require(\"simpl-schema\"), {\n  \"default\": function () {\n    function _default(v) {\n      SimpleSchema = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar Comparators = new _Mongo.Collection('comparators'); // Prevent all client side modifications of mongoDB\n\nexports.ComparatorSchema = _ComparatorSchema;\nComparators.deny({\n  insert: function () {\n    function insert() {\n      return true;\n    }\n\n    return insert;\n  }(),\n  update: function () {\n    function update() {\n      return true;\n    }\n\n    return update;\n  }(),\n  remove: function () {\n    function remove() {\n      return true;\n    }\n\n    return remove;\n  }()\n});\nComparators.allow({\n  insert: function () {\n    function insert() {\n      return false;\n    }\n\n    return insert;\n  }(),\n  update: function () {\n    function update() {\n      return false;\n    }\n\n    return update;\n  }(),\n  remove: function () {\n    function remove() {\n      return false;\n    }\n\n    return remove;\n  }()\n});\n\nvar _ComparatorSchema = new SimpleSchema({\n  userId: {\n    type: String\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      function autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        }\n      }\n\n      return autoValue;\n    }()\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function () {\n      function autoValue() {\n        if (this.isInsert || this.isUpdate) {\n          return new Date();\n        }\n      }\n\n      return autoValue;\n    }()\n  },\n  useBorrowers: {\n    type: Boolean,\n    defaultValue: false\n  },\n  income: {\n    type: Number,\n    defaultValue: 100000,\n    optional: true\n  },\n  fortune: {\n    type: Number,\n    defaultValue: 100000,\n    optional: true\n  },\n  interestRate: {\n    type: Number,\n    defaultValue: 0.0125,\n    optional: true\n  },\n  borrowRatio: {\n    type: Number,\n    defaultValue: 0.8,\n    optional: true\n  },\n  usageType: {\n    type: String,\n    defaultValue: 'primary'\n  },\n  customFields: {\n    type: Array,\n    defaultValue: []\n  },\n  'customFields.$': Object,\n  'customFields.$.id': String,\n  'customFields.$.name': String,\n  'customFields.$.type': String,\n  customFieldCount: {\n    type: Number,\n    defaultValue: 0\n  },\n  hiddenFields: {\n    type: Array,\n    defaultValue: ['realBorrowRatio', 'incomeRatio', 'theoreticalMonthly']\n  },\n  'hiddenFields.$': String,\n  borrowers: {\n    type: Array,\n    defaultValue: []\n  },\n  'borrowers.$': String\n}); // Attach schema\n\n\nComparators.attachSchema(_ComparatorSchema);\nmodule.exportDefault(Comparators);","map":{"version":3,"sources":["imports/core/api/comparators/comparators.js"],"names":["module","export","ComparatorSchema","Mongo","watch","require","v","SimpleSchema","Comparators","Collection","deny","insert","update","remove","allow","userId","type","String","createdAt","Date","autoValue","isInsert","updatedAt","isUpdate","useBorrowers","Boolean","defaultValue","income","Number","optional","fortune","interestRate","borrowRatio","usageType","customFields","Array","Object","customFieldCount","hiddenFields","borrowers","attachSchema","exportDefault"],"mappings":"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","file":"imports/core/api/comparators/comparators.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\nconst Comparators = new Mongo.Collection('comparators');\n\n// Prevent all client side modifications of mongoDB\nComparators.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\nComparators.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nexport const ComparatorSchema = new SimpleSchema({\n  userId: { type: String },\n  createdAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      }\n    },\n  },\n  updatedAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert || this.isUpdate) {\n        return new Date();\n      }\n    },\n  },\n  useBorrowers: { type: Boolean, defaultValue: false },\n  income: { type: Number, defaultValue: 100000, optional: true },\n  fortune: { type: Number, defaultValue: 100000, optional: true },\n  interestRate: { type: Number, defaultValue: 0.0125, optional: true },\n  borrowRatio: { type: Number, defaultValue: 0.8, optional: true },\n  usageType: { type: String, defaultValue: 'primary' },\n  customFields: { type: Array, defaultValue: [] },\n  'customFields.$': Object,\n  'customFields.$.id': String,\n  'customFields.$.name': String,\n  'customFields.$.type': String,\n  customFieldCount: { type: Number, defaultValue: 0 },\n  hiddenFields: {\n    type: Array,\n    defaultValue: ['realBorrowRatio', 'incomeRatio', 'theoreticalMonthly'],\n  },\n  'hiddenFields.$': String,\n  borrowers: { type: Array, defaultValue: [] },\n  'borrowers.$': String,\n});\n\n// Attach schema\nComparators.attachSchema(ComparatorSchema);\nexport default Comparators;\n"]},"hash":"9f3853bb4dba2753c1cf083430494dff1ffbe948"}
