{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"./Translation","imported":["IntlNumber"],"specifiers":[{"kind":"named","imported":"IntlNumber","local":"IntlNumber"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/MetricsTriple.jsx","filenameRelative":"imports/core/components/MetricsTriple.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/MetricsTriple.jsx.map","sourceFileName":"imports/core/components/MetricsTriple.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"MetricsTriple"},"ignored":false,"code":"\"use strict\";\n\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  }\n}, 1);\n\nvar _IntlNumber = void 0;\n\nmodule.watch(require(\"./Translation\"), {\n  IntlNumber: function IntlNumber(v) {\n    _IntlNumber = v;\n  }\n}, 2);\n\nvar MetricsTriple = function MetricsTriple(props) {\n  return React.createElement(\n    \"div\",\n    {\n      className: \"metrics\"\n    },\n    props.metrics.map(function (metric) {\n      return !metric.hide && React.createElement(\n        \"div\",\n        {\n          className: \"metric\",\n          key: metric.name\n        },\n        React.createElement(\n          \"div\",\n          null,\n          React.createElement(\n            \"h4\",\n            {\n              className: \"secondary\"\n            },\n            metric.name,\n            ' ',\n            metric.isValid !== undefined && (metric.isValid ? React.createElement(\"span\", {\n              className: \"fa fa-check success\"\n            }) : React.createElement(\"span\", {\n              className: \"fa fa-times error\"\n            }))\n          ),\n          !metric.isValid && React.createElement(\n            \"p\",\n            {\n              className: \"error\"\n            },\n            metric.error\n          ),\n          React.createElement(\n            \"h1\",\n            null,\n            props.percent ? React.createElement(_IntlNumber, {\n              value: metric.value,\n              format: \"percentage\"\n            }) : metric.value\n          )\n        )\n      );\n    })\n  );\n};\n\nMetricsTriple.defaultProps = {\n  percent: true\n};\nMetricsTriple.propTypes = {\n  metrics: PropTypes.arrayOf(PropTypes.any).isRequired,\n  percent: PropTypes.bool\n};\nmodule.exportDefault(MetricsTriple);","map":{"version":3,"sources":["imports/core/components/MetricsTriple.jsx"],"names":["PropTypes","module","watch","require","default","v","React","IntlNumber","MetricsTriple","props","metrics","map","metric","hide","name","isValid","undefined","error","percent","value","defaultProps","propTypes","arrayOf","any","isRequired","bool","exportDefault"],"mappings":";;AAAA,IAAIA,kBAAJ;AAAcC,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACL,gBAAUK,CAAV;AAAY;AAAxB,CAAnC,EAA6D,CAA7D;AAAgE,IAAIC,cAAJ;AAAUL,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACC,YAAMD,CAAN;AAAQ;AAApB,CAA9B,EAAoD,CAApD;;AAAuD,IAAIE,oBAAJ;;AAAeN,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACI,YAAD,sBAAYF,CAAZ,EAAc;AAACE,kBAAWF,CAAX;AAAa;AAA5B,CAAtC,EAAoE,CAApE;;AAK9J,IAAMG,gBAAgB,SAAhBA,aAAgB;AAAA,SACpB;AAAA;AAAA;AAAK,iBAAU;AAAf;AACGC,UAAMC,OAAN,CAAcC,GAAd,CAAkB;AAAA,aACjB,CAACC,OAAOC,IAAR,IACE;AAAA;AAAA;AAAK,qBAAU,QAAf;AAAwB,eAAKD,OAAOE;AAApC;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAI,yBAAU;AAAd;AACGF,mBAAOE,IADV;AACgB,eADhB;AAEGF,mBAAOG,OAAP,KAAmBC,SAAnB,KACIJ,OAAOG,OAAP,GACC;AAAM,yBAAU;AAAhB,cADD,GAGC;AAAM,yBAAU;AAAhB,cAJL;AAFH,WADF;AAWG,WAACH,OAAOG,OAAR,IAAmB;AAAA;AAAA;AAAG,yBAAU;AAAb;AAAsBH,mBAAOK;AAA7B,WAXtB;AAaE;AAAA;AAAA;AACGR,kBAAMS,OAAN,GACC,oBAAC,WAAD;AAAY,qBAAON,OAAOO,KAA1B;AAAiC,sBAAO;AAAxC,cADD,GAGCP,OAAOO;AAJX;AAbF;AADF,OAFe;AAAA,KAAlB;AADH,GADoB;AAAA,CAAtB;;AA+BAX,cAAcY,YAAd,GAA6B;AAC3BF,WAAS;AADkB,CAA7B;AAIAV,cAAca,SAAd,GAA0B;AACxBX,WAASV,UAAUsB,OAAV,CAAkBtB,UAAUuB,GAA5B,EAAiCC,UADlB;AAExBN,WAASlB,UAAUyB;AAFK,CAA1B;AAxCAxB,OAAOyB,aAAP,CA6CelB,aA7Cf","file":"imports/core/components/MetricsTriple.jsx.map","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { IntlNumber } from 'core/components/Translation';\n\nconst MetricsTriple = props => (\n  <div className=\"metrics\">\n    {props.metrics.map(metric =>\n      !metric.hide && (\n        <div className=\"metric\" key={metric.name}>\n          <div>\n            <h4 className=\"secondary\">\n              {metric.name}{' '}\n              {metric.isValid !== undefined &&\n                  (metric.isValid ? (\n                    <span className=\"fa fa-check success\" />\n                  ) : (\n                    <span className=\"fa fa-times error\" />\n                  ))}\n            </h4>\n\n            {!metric.isValid && <p className=\"error\">{metric.error}</p>}\n\n            <h1>\n              {props.percent ? (\n                <IntlNumber value={metric.value} format=\"percentage\" />\n              ) : (\n                metric.value\n              )}\n            </h1>\n          </div>\n        </div>\n      ))}\n  </div>\n);\n\nMetricsTriple.defaultProps = {\n  percent: true,\n};\n\nMetricsTriple.propTypes = {\n  metrics: PropTypes.arrayOf(PropTypes.any).isRequired,\n  percent: PropTypes.bool,\n};\n\nexport default MetricsTriple;\n"]},"hash":"89a8ce7d200000077cdd7b477c93d54e1e23cc1e"}
