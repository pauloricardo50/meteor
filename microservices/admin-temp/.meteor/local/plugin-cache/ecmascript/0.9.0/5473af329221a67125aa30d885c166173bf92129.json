{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./collection.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Authors"}]},{"source":"../posts/collection.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Posts"}]},{"source":"../comments/collection.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Comments"}]},{"source":"../groups/collection.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Groups"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/authors/links.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/authors/links.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/authors/links.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/authors/links.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"links"},"ignored":false,"code":"var Authors = void 0;\nmodule.watch(require(\"./collection.js\"), {\n    \"default\": function (v) {\n        Authors = v;\n    }\n}, 0);\nvar Posts = void 0;\nmodule.watch(require(\"../posts/collection.js\"), {\n    \"default\": function (v) {\n        Posts = v;\n    }\n}, 1);\nvar Comments = void 0;\nmodule.watch(require(\"../comments/collection.js\"), {\n    \"default\": function (v) {\n        Comments = v;\n    }\n}, 2);\nvar Groups = void 0;\nmodule.watch(require(\"../groups/collection.js\"), {\n    \"default\": function (v) {\n        Groups = v;\n    }\n}, 3);\nAuthors.addLinks({\n    comments: {\n        collection: Comments,\n        inversedBy: 'author'\n    },\n    posts: {\n        collection: Posts,\n        inversedBy: 'author'\n    },\n    groups: {\n        type: 'many',\n        metadata: true,\n        collection: Groups,\n        field: 'groupIds'\n    }\n});\nAuthors.addReducers({\n    fullName: {\n        body: {\n            name: 1\n        },\n        reduce: function (object) {\n            return 'full - ' + object.name;\n        }\n    },\n    groupNames: {\n        body: {\n            groups: {\n                name: 1\n            }\n        },\n        reduce: function (object) {\n            if (object.groups) {\n                return object.groups.map(function (group) {\n                    return 'G#' + group.name;\n                });\n            }\n        }\n    },\n    referenceReducer: {\n        body: {\n            fullName: 1\n        },\n        reduce: function (object) {\n            return 'nested - ' + object.fullName;\n        }\n    },\n    fullNameNested: {\n        body: {\n            profile: {\n                firstName: 1,\n                lastName: 1\n            }\n        },\n        reduce: function (object) {\n            if (!object.profile) {\n                return null;\n            }\n\n            return object.profile.firstName + ' ' + object.profile.lastName;\n        }\n    },\n    paramBasedReducer: {\n        body: {\n            _id: 1\n        },\n        reduce: function (object, params) {\n            return params.element;\n        }\n    }\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/testing/bootstrap/authors/links.js"],"names":["Authors","module","watch","require","v","Posts","Comments","Groups","addLinks","comments","collection","inversedBy","posts","groups","type","metadata","field","addReducers","fullName","body","name","reduce","object","groupNames","map","group","referenceReducer","fullNameNested","profile","firstName","lastName","paramBasedReducer","_id","params","element"],"mappings":"AAAA,IAAIA,gBAAJ;AAAYC,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAAA,yBAASC,CAAT,EAAW;AAACJ,kBAAQI,CAAR;AAAU;AAAtB,CAAxC,EAAgE,CAAhE;AAAmE,IAAIC,cAAJ;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,wBAAR,CAAb,EAA+C;AAAA,yBAASC,CAAT,EAAW;AAACC,gBAAMD,CAAN;AAAQ;AAApB,CAA/C,EAAqE,CAArE;AAAwE,IAAIE,iBAAJ;AAAaL,OAAOC,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAAA,yBAASC,CAAT,EAAW;AAACE,mBAASF,CAAT;AAAW;AAAvB,CAAlD,EAA2E,CAA3E;AAA8E,IAAIG,eAAJ;AAAWN,OAAOC,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAAA,yBAASC,CAAT,EAAW;AAACG,iBAAOH,CAAP;AAAS;AAArB,CAAhD,EAAuE,CAAvE;AAKvQJ,QAAQQ,QAAR,CAAiB;AACbC,cAAU;AACNC,oBAAYJ,QADN;AAENK,oBAAY;AAFN,KADG;AAKbC,WAAO;AACHF,oBAAYL,KADT;AAEHM,oBAAY;AAFT,KALM;AASbE,YAAQ;AACJC,cAAM,MADF;AAEJC,kBAAU,IAFN;AAGJL,oBAAYH,MAHR;AAIJS,eAAO;AAJH;AATK,CAAjB;AAiBAhB,QAAQiB,WAAR,CAAoB;AAChBC,cAAU;AACNC,cAAM;AACFC,kBAAM;AADJ,SADA;AAINC,cAJM,YAICC,MAJD,EAIS;AACX,mBAAO,YAAYA,OAAOF,IAA1B;AACH;AANK,KADM;AAShBG,gBAAY;AACRJ,cAAM;AACFN,oBAAQ;AACJO,sBAAM;AADF;AADN,SADE;AAMRC,cANQ,YAMDC,MANC,EAMO;AACX,gBAAIA,OAAOT,MAAX,EAAmB;AACf,uBAAOS,OAAOT,MAAP,CAAcW,GAAd,CAAkB;AAAA,2BAAS,OAAOC,MAAML,IAAtB;AAAA,iBAAlB,CAAP;AACH;AACJ;AAVO,KATI;AAqBhBM,sBAAkB;AACdP,cAAM;AACFD,sBAAU;AADR,SADQ;AAIdG,cAJc,YAIPC,MAJO,EAIC;AACX,mBAAO,cAAcA,OAAOJ,QAA5B;AACH;AANa,KArBF;AA6BhBS,oBAAgB;AACZR,cAAM;AACFS,qBAAS;AACLC,2BAAW,CADN;AAELC,0BAAU;AAFL;AADP,SADM;AAOZT,cAPY,YAOLC,MAPK,EAOG;AACX,gBAAI,CAACA,OAAOM,OAAZ,EAAqB;AACjB,uBAAO,IAAP;AACH;;AAED,mBAAON,OAAOM,OAAP,CAAeC,SAAf,GAA2B,GAA3B,GAAiCP,OAAOM,OAAP,CAAeE,QAAvD;AACH;AAbW,KA7BA;AA4ChBC,uBAAmB;AACfZ,cAAM;AACFa,iBAAK;AADH,SADS;AAIfX,cAJe,YAIRC,MAJQ,EAIAW,MAJA,EAIQ;AACnB,mBAAOA,OAAOC,OAAd;AACH;AANc;AA5CH,CAApB","file":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/authors/links.js.map","sourcesContent":["import Authors from './collection.js';\nimport Posts from '../posts/collection.js';\nimport Comments from '../comments/collection.js';\nimport Groups from '../groups/collection.js';\n\nAuthors.addLinks({\n    comments: {\n        collection: Comments,\n        inversedBy: 'author'\n    },\n    posts: {\n        collection: Posts,\n        inversedBy: 'author'\n    },\n    groups: {\n        type: 'many',\n        metadata: true,\n        collection: Groups,\n        field: 'groupIds'\n    }\n});\n\nAuthors.addReducers({\n    fullName: {\n        body: {\n            name: 1\n        },\n        reduce(object) {\n            return 'full - ' + object.name;\n        }\n    },\n    groupNames: {\n        body: {\n            groups: {\n                name: 1\n            }\n        },\n        reduce(object) {\n            if (object.groups) {\n                return object.groups.map(group => 'G#' + group.name);\n            }\n        }\n    },\n    referenceReducer: {\n        body: {\n            fullName: 1\n        },\n        reduce(object) {\n            return 'nested - ' + object.fullName;\n        }\n    },\n    fullNameNested: {\n        body: {\n            profile: {\n                firstName: 1,\n                lastName: 1\n            }\n        },\n        reduce(object) {\n            if (!object.profile) {\n                return null;\n            }\n\n            return object.profile.firstName + ' ' + object.profile.lastName;\n        }\n    },\n    paramBasedReducer: {\n        body: {\n            _id: 1,\n        },\n        reduce(object, params) {\n            return params.element;\n        }\n    }\n});"]},"hash":"5473af329221a67125aa30d885c166173bf92129"}
