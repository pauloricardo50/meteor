{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/vsivsi:job-collection","imported":["JobCollection"],"specifiers":[{"kind":"named","imported":"JobCollection","local":"JobCollection"}]},{"source":"./jobConstants","imported":["SCHEDULE_METHOD"],"specifiers":[{"kind":"named","imported":"SCHEDULE_METHOD","local":"SCHEDULE_METHOD"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/jobs/server/jobs.js","filenameRelative":"imports/core/api/jobs/server/jobs.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/jobs/server/jobs.js.map","sourceFileName":"imports/core/api/jobs/server/jobs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"jobs"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _JobCollection = void 0;\n\nmodule.watch(require(\"meteor/vsivsi:job-collection\"), {\n  JobCollection: function JobCollection(v) {\n    _JobCollection = v;\n  }\n}, 1);\n\nvar _SCHEDULE_METHOD = void 0;\n\nmodule.watch(require(\"./jobConstants\"), {\n  SCHEDULE_METHOD: function SCHEDULE_METHOD(v) {\n    _SCHEDULE_METHOD = v;\n  }\n}, 2);\nvar Jobs = new _JobCollection('jobs');\nvar jobList = [{\n  type: _SCHEDULE_METHOD,\n  options: {\n    pollInterval: 5000\n  },\n  run: function run(data, callback) {\n    var _Meteor2;\n\n    console.log('calling scheduled method..');\n    var method = data.method,\n        params = data.params;\n\n    if (typeof method !== 'string') {\n      throw new Error('invalid method name');\n    }\n\n    (_Meteor2 = _Meteor).call.apply(_Meteor2, [method].concat(_toConsumableArray(params), [function (err, result) {\n      if (err) {\n        callback(err, undefined);\n      } else {\n        callback(err, result);\n      }\n    }]));\n  }\n}];\njobList.forEach(function (jobObject) {\n  Jobs.processJobs(jobObject.type, (0, _extends3.default)({\n    pollInterval: 5000\n  }, jobObject.options), function (job, callback) {\n    var type = job.type,\n        data = job.data,\n        done = job.done,\n        fail = job.fail;\n\n    try {\n      jobObject.run(data, function (err, result) {\n        if (err) {\n          fail(err);\n        } else {\n          done(result);\n        }\n\n        callback();\n      });\n    } catch (error) {\n      fail(error);\n      callback();\n    }\n  });\n});\nmodule.exportDefault(Jobs);","map":{"version":3,"sources":["imports/core/api/jobs/server/jobs.js"],"names":["Meteor","module","watch","require","v","JobCollection","SCHEDULE_METHOD","Jobs","jobList","type","options","pollInterval","run","data","callback","console","log","method","params","Error","call","err","result","undefined","forEach","jobObject","processJobs","job","done","fail","error","exportDefault"],"mappings":";;;;;;;;;;AAAA,IAAIA,gBAAJ;;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,QAAD,kBAAQI,CAAR,EAAU;AAACJ,cAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;;AAA+D,IAAIC,uBAAJ;;AAAkBJ,OAAOC,KAAP,CAAaC,QAAQ,8BAAR,CAAb,EAAqD;AAACE,eAAD,yBAAeD,CAAf,EAAiB;AAACC,qBAAcD,CAAd;AAAgB;AAAlC,CAArD,EAAyF,CAAzF;;AAA4F,IAAIE,yBAAJ;;AAAoBL,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACG,iBAAD,2BAAiBF,CAAjB,EAAmB;AAACE,uBAAgBF,CAAhB;AAAkB;AAAtC,CAAvC,EAA+E,CAA/E;AAI5M,IAAMG,OAAO,IAAIF,cAAJ,CAAkB,MAAlB,CAAb;AAEA,IAAMG,UAAU,CACd;AACEC,QAAMH,gBADR;AAEEI,WAAS;AAAEC,kBAAc;AAAhB,GAFX;AAGEC,OAAK,aAACC,IAAD,EAAOC,QAAP,EAAoB;AAAA;;AACvBC,YAAQC,GAAR,CAAY,4BAAZ;AADuB,QAGfC,MAHe,GAGIJ,IAHJ,CAGfI,MAHe;AAAA,QAGPC,MAHO,GAGIL,IAHJ,CAGPK,MAHO;;AAKvB,QAAI,OAAOD,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,YAAM,IAAIE,KAAJ,CAAU,qBAAV,CAAN;AACD;;AAED,yBAAOC,IAAP,kBAAYH,MAAZ,4BAAuBC,MAAvB,IAA+B,UAACG,GAAD,EAAMC,MAAN,EAAiB;AAC9C,UAAID,GAAJ,EAAS;AACPP,iBAASO,GAAT,EAAcE,SAAd;AACD,OAFD,MAEO;AACLT,iBAASO,GAAT,EAAcC,MAAd;AACD;AACF,KAND;AAOD;AAnBH,CADc,CAAhB;AAwBAd,QAAQgB,OAAR,CAAgB,UAACC,SAAD,EAAe;AAC7BlB,OAAKmB,WAAL,CACED,UAAUhB,IADZ;AAEIE,kBAAc;AAFlB,KAE2Bc,UAAUf,OAFrC,GAGE,UAACiB,GAAD,EAAMb,QAAN,EAAmB;AAAA,QACTL,IADS,GACkBkB,GADlB,CACTlB,IADS;AAAA,QACHI,IADG,GACkBc,GADlB,CACHd,IADG;AAAA,QACGe,IADH,GACkBD,GADlB,CACGC,IADH;AAAA,QACSC,IADT,GACkBF,GADlB,CACSE,IADT;;AAEjB,QAAI;AACFJ,gBAAUb,GAAV,CAAcC,IAAd,EAAoB,UAACQ,GAAD,EAAMC,MAAN,EAAiB;AACnC,YAAID,GAAJ,EAAS;AACPQ,eAAKR,GAAL;AACD,SAFD,MAEO;AACLO,eAAKN,MAAL;AACD;;AACDR;AACD,OAPD;AAQD,KATD,CASE,OAAOgB,KAAP,EAAc;AACdD,WAAKC,KAAL;AACAhB;AACD;AACF,GAlBH;AAoBD,CArBD;AA9BAb,OAAO8B,aAAP,CAqDexB,IArDf","file":"imports/core/api/jobs/server/jobs.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { JobCollection } from 'meteor/vsivsi:job-collection';\nimport { SCHEDULE_METHOD } from './jobConstants';\n\nconst Jobs = new JobCollection('jobs');\n\nconst jobList = [\n  {\n    type: SCHEDULE_METHOD,\n    options: { pollInterval: 5000 },\n    run: (data, callback) => {\n      console.log('calling scheduled method..');\n\n      const { method, params } = data;\n\n      if (typeof method !== 'string') {\n        throw new Error('invalid method name');\n      }\n\n      Meteor.call(method, ...params, (err, result) => {\n        if (err) {\n          callback(err, undefined);\n        } else {\n          callback(err, result);\n        }\n      });\n    },\n  },\n];\n\njobList.forEach((jobObject) => {\n  Jobs.processJobs(\n    jobObject.type,\n    { pollInterval: 5000, ...jobObject.options },\n    (job, callback) => {\n      const { type, data, done, fail } = job;\n      try {\n        jobObject.run(data, (err, result) => {\n          if (err) {\n            fail(err);\n          } else {\n            done(result);\n          }\n          callback();\n        });\n      } catch (error) {\n        fail(error);\n        callback();\n      }\n    },\n  );\n});\n\nexport default Jobs;\n"]},"hash":"4e5e463a1921e92066cddaac9124eb0fd91a32d1"}
