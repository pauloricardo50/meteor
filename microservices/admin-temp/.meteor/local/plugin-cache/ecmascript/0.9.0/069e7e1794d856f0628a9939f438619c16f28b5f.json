{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"./Fields.jsx","imported":[],"specifiers":[]},{"source":"./Buttons.jsx","imported":[],"specifiers":[]},{"source":"./FormMessage.jsx","imported":[],"specifiers":[]},{"source":"./PasswordOrService.jsx","imported":[],"specifiers":[]},{"source":"./SocialButtons.jsx","imported":[],"specifiers":[]},{"source":"./FormMessages.jsx","imported":[],"specifiers":[]}],"exports":{"exported":["Form"],"specifiers":[{"kind":"local","local":"Form","exported":"Form"}]}}},"options":{"filename":"packages/std:accounts-ui/imports/ui/components/Form.jsx","filenameRelative":"packages/std:accounts-ui/imports/ui/components/Form.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/std:accounts-ui/imports/ui/components/Form.jsx.map","sourceFileName":"packages/std:accounts-ui/imports/ui/components/Form.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Form"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  Form: function () {\n    return Form;\n  }\n});\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar ReactDOM = void 0;\nmodule.watch(require(\"react-dom\"), {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 2);\nvar Accounts = void 0;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 3);\nmodule.watch(require(\"./Fields.jsx\"));\nmodule.watch(require(\"./Buttons.jsx\"));\nmodule.watch(require(\"./FormMessage.jsx\"));\nmodule.watch(require(\"./PasswordOrService.jsx\"));\nmodule.watch(require(\"./SocialButtons.jsx\"));\nmodule.watch(require(\"./FormMessages.jsx\"));\n\nvar Form = function (_React$Component) {\n  (0, _inherits3.default)(Form, _React$Component);\n\n  function Form() {\n    (0, _classCallCheck3.default)(this, Form);\n    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));\n  }\n\n  Form.prototype.componentDidMount = function () {\n    function componentDidMount() {\n      var form = this.form;\n\n      if (form) {\n        form.addEventListener('submit', function (e) {\n          e.preventDefault();\n        });\n      }\n    }\n\n    return componentDidMount;\n  }();\n\n  Form.prototype.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          hasPasswordService = _props.hasPasswordService,\n          oauthServices = _props.oauthServices,\n          fields = _props.fields,\n          buttons = _props.buttons,\n          error = _props.error,\n          messages = _props.messages,\n          translate = _props.translate,\n          _props$ready = _props.ready,\n          ready = _props$ready === undefined ? true : _props$ready,\n          className = _props.className;\n      return React.createElement(\n        \"form\",\n        {\n          ref: function (ref) {\n            return _this2.form = ref;\n          },\n          className: [className, ready ? \"ready\" : null].join(' '),\n          className: \"accounts-ui\",\n          noValidate: true\n        },\n        React.createElement(Accounts.ui.Fields, {\n          fields: fields\n        }),\n        React.createElement(Accounts.ui.Buttons, {\n          buttons: buttons\n        }),\n        React.createElement(Accounts.ui.PasswordOrService, {\n          oauthServices: oauthServices,\n          translate: translate\n        }),\n        React.createElement(Accounts.ui.SocialButtons, {\n          oauthServices: oauthServices\n        }),\n        React.createElement(Accounts.ui.FormMessages, {\n          messages: messages\n        })\n      );\n    }\n\n    return render;\n  }();\n\n  return Form;\n}(React.Component);\n\nForm.propTypes = {\n  oauthServices: PropTypes.object,\n  fields: PropTypes.object.isRequired,\n  buttons: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  ready: PropTypes.bool\n};\nAccounts.ui.Form = Form;","map":{"version":3,"sources":["packages/std:accounts-ui/imports/ui/components/Form.jsx"],"names":["module","export","Form","React","watch","require","v","PropTypes","ReactDOM","Accounts","componentDidMount","form","addEventListener","e","preventDefault","render","props","hasPasswordService","oauthServices","fields","buttons","error","messages","translate","ready","className","ref","join","Component","propTypes","object","isRequired","func","string","bool","ui"],"mappings":"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","file":"packages/std:accounts-ui/imports/ui/components/Form.jsx.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport './Fields.jsx';\nimport './Buttons.jsx';\nimport './FormMessage.jsx';\nimport './PasswordOrService.jsx';\nimport './SocialButtons.jsx';\nimport './FormMessages.jsx';\n\nexport class Form extends React.Component {\n  componentDidMount() {\n    let form = this.form;\n    if (form) {\n      form.addEventListener('submit', (e) => {\n        e.preventDefault();\n      });\n    }\n  }\n\n  render() {\n    const {\n      hasPasswordService,\n      oauthServices,\n      fields,\n      buttons,\n      error,\n      messages,\n      translate,\n      ready = true,\n      className\n    } = this.props;\n    return (\n      <form\n        ref={(ref) => this.form = ref}\n        className={[className, ready ? \"ready\" : null].join(' ')}\n        className=\"accounts-ui\"\n        noValidate\n      >\n        <Accounts.ui.Fields fields={ fields } />\n        <Accounts.ui.Buttons buttons={ buttons } />\n        <Accounts.ui.PasswordOrService oauthServices={ oauthServices } translate={ translate } />\n        <Accounts.ui.SocialButtons oauthServices={ oauthServices } />\n        <Accounts.ui.FormMessages messages={messages} />\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  oauthServices: PropTypes.object,\n  fields: PropTypes.object.isRequired,\n  buttons: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  ready: PropTypes.bool\n};\n\nAccounts.ui.Form = Form;\n"]},"hash":"069e7e1794d856f0628a9939f438619c16f28b5f"}
