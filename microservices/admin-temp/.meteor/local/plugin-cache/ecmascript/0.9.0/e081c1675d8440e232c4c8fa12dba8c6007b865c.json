{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"caller-path","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"callerPath"}]},{"source":"path","imported":["dirname","resolve"],"specifiers":[{"kind":"named","imported":"dirname","local":"dirname"},{"kind":"named","imported":"resolve","local":"resolve"}]},{"source":"./meteorStubs","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"meteorStubs"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/utils/testHelpers/testRequire.js","filenameRelative":"imports/core/utils/testHelpers/testRequire.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/utils/testHelpers/testRequire.js.map","sourceFileName":"imports/core/utils/testHelpers/testRequire.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"testRequire"},"ignored":false,"code":"\"use strict\";\n\nvar callerPath = void 0;\nmodule.watch(require(\"caller-path\"), {\n  default: function _default(v) {\n    callerPath = v;\n  }\n}, 0);\n\nvar _dirname = void 0,\n    _resolve = void 0;\n\nmodule.watch(require(\"path\"), {\n  dirname: function dirname(v) {\n    _dirname = v;\n  },\n  resolve: function resolve(v) {\n    _resolve = v;\n  }\n}, 1);\nvar meteorStubs = void 0;\nmodule.watch(require(\"./meteorStubs\"), {\n  default: function _default(v) {\n    meteorStubs = v;\n  }\n}, 2);\n\nvar testRequire = function testRequire(filePath) {\n  var importedModule = void 0;\n\n  if (global.Meteor) {\n    // If this test is happening in a meteor environment, return false\n    // and require it in the file\n    importedModule = false;\n  } else {\n    // If this is a local environment, like wallabyJS, import it with proxyquire\n    // and stubs\n    var proxyquire = require('proxyquire');\n\n    var realPath = _resolve(_dirname(callerPath()), filePath);\n\n    importedModule = proxyquire(realPath, meteorStubs);\n  }\n\n  return importedModule;\n};\n\nmodule.exportDefault(testRequire);","map":{"version":3,"sources":["imports/core/utils/testHelpers/testRequire.js"],"names":["callerPath","module","watch","require","default","v","dirname","resolve","meteorStubs","testRequire","filePath","importedModule","global","Meteor","proxyquire","realPath","exportDefault"],"mappings":";;AAAA,IAAIA,mBAAJ;AAAeC,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACL,iBAAWK,CAAX;AAAa;AAAzB,CAApC,EAA+D,CAA/D;;AAAkE,IAAIC,iBAAJ;AAAA,IAAYC,iBAAZ;;AAAoBN,OAAOC,KAAP,CAAaC,QAAQ,MAAR,CAAb,EAA6B;AAACG,SAAD,mBAASD,CAAT,EAAW;AAACC,eAAQD,CAAR;AAAU,GAAtB;AAAuBE,SAAvB,mBAA+BF,CAA/B,EAAiC;AAACE,eAAQF,CAAR;AAAU;AAA5C,CAA7B,EAA2E,CAA3E;AAA8E,IAAIG,oBAAJ;AAAgBP,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACC,SAAD,oBAASC,CAAT,EAAW;AAACG,kBAAYH,CAAZ;AAAc;AAA1B,CAAtC,EAAkE,CAAlE;;AAQnM,IAAMI,cAAc,SAAdA,WAAc,CAACC,QAAD,EAAc;AAChC,MAAIC,uBAAJ;;AAEA,MAAIC,OAAOC,MAAX,EAAmB;AACjB;AACA;AACAF,qBAAiB,KAAjB;AACD,GAJD,MAIO;AACL;AACA;AACA,QAAMG,aAAaX,QAAQ,YAAR,CAAnB;;AACA,QAAMY,WAAWR,SAAQD,SAAQN,YAAR,CAAR,EAA+BU,QAA/B,CAAjB;;AACAC,qBAAiBG,WAAWC,QAAX,EAAqBP,WAArB,CAAjB;AACD;;AAED,SAAOG,cAAP;AACD,CAhBD;;AARAV,OAAOe,aAAP,CA0BeP,WA1Bf","file":"imports/core/utils/testHelpers/testRequire.js.map","sourcesContent":["/* eslint global-require: 0 */\n/* eslint import/no-dynamic-require: 0 */\n\nimport callerPath from 'caller-path';\nimport { dirname, resolve } from 'path';\n\nimport meteorStubs from './meteorStubs';\n\nconst testRequire = (filePath) => {\n  let importedModule;\n\n  if (global.Meteor) {\n    // If this test is happening in a meteor environment, return false\n    // and require it in the file\n    importedModule = false;\n  } else {\n    // If this is a local environment, like wallabyJS, import it with proxyquire\n    // and stubs\n    const proxyquire = require('proxyquire');\n    const realPath = resolve(dirname(callerPath()), filePath);\n    importedModule = proxyquire(realPath, meteorStubs);\n  }\n\n  return importedModule;\n};\n\nexport default testRequire;\n"]},"hash":"e081c1675d8440e232c4c8fa12dba8c6007b865c"}
