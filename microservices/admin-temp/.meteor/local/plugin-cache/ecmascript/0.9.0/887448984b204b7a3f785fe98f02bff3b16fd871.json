{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"simpl-schema","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SimpleSchema"}]},{"source":"./tasksConstants","imported":["TASK_STATUS","TASK_TYPE"],"specifiers":[{"kind":"named","imported":"TASK_STATUS","local":"TASK_STATUS"},{"kind":"named","imported":"TASK_TYPE","local":"TASK_TYPE"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/tasks/tasks.js","filenameRelative":"imports/core/api/tasks/tasks.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/tasks/tasks.js.map","sourceFileName":"imports/core/api/tasks/tasks.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"tasks"},"ignored":false,"code":"\"use strict\";\n\nvar _Mongo = void 0;\n\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function Mongo(v) {\n    _Mongo = v;\n  }\n}, 0);\nvar SimpleSchema = void 0;\nmodule.watch(require(\"simpl-schema\"), {\n  default: function _default(v) {\n    SimpleSchema = v;\n  }\n}, 1);\n\nvar _TASK_STATUS = void 0,\n    _TASK_TYPE = void 0;\n\nmodule.watch(require(\"./tasksConstants\"), {\n  TASK_STATUS: function TASK_STATUS(v) {\n    _TASK_STATUS = v;\n  },\n  TASK_TYPE: function TASK_TYPE(v) {\n    _TASK_TYPE = v;\n  }\n}, 2);\nvar Tasks = new _Mongo.Collection('tasks'); // Prevent all client side modifications of mongoDB\n\nTasks.deny({\n  insert: function insert() {\n    return true;\n  },\n  update: function update() {\n    return true;\n  },\n  remove: function remove() {\n    return true;\n  }\n});\nTasks.allow({\n  insert: function insert() {\n    return false;\n  },\n  update: function update() {\n    return false;\n  },\n  remove: function remove() {\n    return false;\n  }\n});\nvar TasksSchema = new SimpleSchema({\n  createdAt: {\n    type: Date,\n    autoValue: function autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      }\n    }\n  },\n  updatedAt: {\n    type: Date,\n    optional: true\n  },\n  status: {\n    type: String,\n    defaultValue: _TASK_STATUS.ACTIVE,\n    allowedValues: Object.values(_TASK_STATUS)\n  },\n  completedAt: {\n    type: Date,\n    optional: true\n  },\n  dueAt: {\n    type: Date,\n    optional: true\n  },\n  createdBy: {\n    type: String,\n    optional: true\n  },\n  assignedTo: {\n    type: String,\n    optional: true\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(_TASK_TYPE),\n    optional: true\n  },\n  title: {\n    type: String,\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  loanId: {\n    type: String,\n    optional: true\n  },\n  propertyId: {\n    type: String,\n    optional: true\n  },\n  borrowerId: {\n    type: String,\n    optional: true\n  }\n});\nTasks.attachSchema(TasksSchema);\nmodule.exportDefault(Tasks);","map":{"version":3,"sources":["imports/core/api/tasks/tasks.js"],"names":["Mongo","module","watch","require","v","SimpleSchema","default","TASK_STATUS","TASK_TYPE","Tasks","Collection","deny","insert","update","remove","allow","TasksSchema","createdAt","type","Date","autoValue","isInsert","updatedAt","optional","status","String","defaultValue","ACTIVE","allowedValues","Object","values","completedAt","dueAt","createdBy","assignedTo","title","description","loanId","propertyId","borrowerId","attachSchema","exportDefault"],"mappings":";;AAAA,IAAIA,eAAJ;;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACH,OAAD,iBAAOI,CAAP,EAAS;AAACJ,aAAMI,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,qBAAJ;AAAiBJ,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,SAAD,oBAASF,CAAT,EAAW;AAACC,mBAAaD,CAAb;AAAe;AAA3B,CAArC,EAAkE,CAAlE;;AAAqE,IAAIG,qBAAJ;AAAA,IAAgBC,mBAAhB;;AAA0BP,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACI,aAAD,uBAAaH,CAAb,EAAe;AAACG,mBAAYH,CAAZ;AAAc,GAA9B;AAA+BI,WAA/B,qBAAyCJ,CAAzC,EAA2C;AAACI,iBAAUJ,CAAV;AAAY;AAAxD,CAAzC,EAAmG,CAAnG;AAItL,IAAMK,QAAQ,IAAIT,OAAMU,UAAV,CAAqB,OAArB,CAAd,C,CAEA;;AACAD,MAAME,IAAN,CAAW;AACTC,UAAQ;AAAA,WAAM,IAAN;AAAA,GADC;AAETC,UAAQ;AAAA,WAAM,IAAN;AAAA,GAFC;AAGTC,UAAQ;AAAA,WAAM,IAAN;AAAA;AAHC,CAAX;AAMAL,MAAMM,KAAN,CAAY;AACVH,UAAQ;AAAA,WAAM,KAAN;AAAA,GADE;AAEVC,UAAQ;AAAA,WAAM,KAAN;AAAA,GAFE;AAGVC,UAAQ;AAAA,WAAM,KAAN;AAAA;AAHE,CAAZ;AAMA,IAAME,cAAc,IAAIX,YAAJ,CAAiB;AACnCY,aAAW;AACTC,UAAMC,IADG;AAETC,aAFS,uBAEG;AACV,UAAI,KAAKC,QAAT,EAAmB;AACjB,eAAO,IAAIF,IAAJ,EAAP;AACD;AACF;AANQ,GADwB;AASnCG,aAAW;AACTJ,UAAMC,IADG;AAETI,cAAU;AAFD,GATwB;AAanCC,UAAQ;AACNN,UAAMO,MADA;AAENC,kBAAcnB,aAAYoB,MAFpB;AAGNC,mBAAeC,OAAOC,MAAP,CAAcvB,YAAd;AAHT,GAb2B;AAkBnCwB,eAAa;AACXb,UAAMC,IADK;AAEXI,cAAU;AAFC,GAlBsB;AAsBnCS,SAAO;AACLd,UAAMC,IADD;AAELI,cAAU;AAFL,GAtB4B;AA0BnCU,aAAW;AACTf,UAAMO,MADG;AAETF,cAAU;AAFD,GA1BwB;AA8BnCW,cAAY;AACVhB,UAAMO,MADI;AAEVF,cAAU;AAFA,GA9BuB;AAkCnCL,QAAM;AACJA,UAAMO,MADF;AAEJG,mBAAeC,OAAOC,MAAP,CAActB,UAAd,CAFX;AAGJe,cAAU;AAHN,GAlC6B;AAuCnCY,SAAO;AACLjB,UAAMO,MADD;AAELF,cAAU;AAFL,GAvC4B;AA2CnCa,eAAa;AACXlB,UAAMO,MADK;AAEXF,cAAU;AAFC,GA3CsB;AA+CnCc,UAAQ;AACNnB,UAAMO,MADA;AAENF,cAAU;AAFJ,GA/C2B;AAmDnCe,cAAY;AACVpB,UAAMO,MADI;AAEVF,cAAU;AAFA,GAnDuB;AAuDnCgB,cAAY;AACVrB,UAAMO,MADI;AAEVF,cAAU;AAFA;AAvDuB,CAAjB,CAApB;AA6DAd,MAAM+B,YAAN,CAAmBxB,WAAnB;AAhFAf,OAAOwC,aAAP,CAiFehC,KAjFf","file":"imports/core/api/tasks/tasks.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\nimport { TASK_STATUS, TASK_TYPE } from './tasksConstants';\n\nconst Tasks = new Mongo.Collection('tasks');\n\n// Prevent all client side modifications of mongoDB\nTasks.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nTasks.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nconst TasksSchema = new SimpleSchema({\n  createdAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      }\n    },\n  },\n  updatedAt: {\n    type: Date,\n    optional: true,\n  },\n  status: {\n    type: String,\n    defaultValue: TASK_STATUS.ACTIVE,\n    allowedValues: Object.values(TASK_STATUS),\n  },\n  completedAt: {\n    type: Date,\n    optional: true,\n  },\n  dueAt: {\n    type: Date,\n    optional: true,\n  },\n  createdBy: {\n    type: String,\n    optional: true,\n  },\n  assignedTo: {\n    type: String,\n    optional: true,\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(TASK_TYPE),\n    optional: true,\n  },\n  title: {\n    type: String,\n    optional: true,\n  },\n  description: {\n    type: String,\n    optional: true,\n  },\n  loanId: {\n    type: String,\n    optional: true,\n  },\n  propertyId: {\n    type: String,\n    optional: true,\n  },\n  borrowerId: {\n    type: String,\n    optional: true,\n  },\n});\n\nTasks.attachSchema(TasksSchema);\nexport default Tasks;\n"]},"hash":"887448984b204b7a3f785fe98f02bff3b16fd871"}
