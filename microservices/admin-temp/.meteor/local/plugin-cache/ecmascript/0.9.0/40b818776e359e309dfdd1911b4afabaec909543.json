{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"../api/events","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"EventService"}]},{"source":"../api/users/userConstants","imported":["USER_EVENTS"],"specifiers":[{"kind":"named","imported":"USER_EVENTS","local":"USER_EVENTS"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/fixtures/users.js","filenameRelative":"imports/core/fixtures/users.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/fixtures/users.js.map","sourceFileName":"imports/core/fixtures/users.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"users"},"ignored":false,"code":"\"use strict\";\n\nvar _Accounts = void 0;\n\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts: function () {\n    function Accounts(v) {\n      _Accounts = v;\n    }\n\n    return Accounts;\n  }()\n}, 0);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function () {\n    function Roles(v) {\n      _Roles = v;\n    }\n\n    return Roles;\n  }()\n}, 1);\nvar EventService = void 0;\nmodule.watch(require(\"../api/events\"), {\n  \"default\": function () {\n    function _default(v) {\n      EventService = v;\n    }\n\n    return _default;\n  }()\n}, 2);\n\nvar _USER_EVENTS = void 0;\n\nmodule.watch(require(\"../api/users/userConstants\"), {\n  USER_EVENTS: function () {\n    function USER_EVENTS(v) {\n      _USER_EVENTS = v;\n    }\n\n    return USER_EVENTS;\n  }()\n}, 3);\n\nvar createFakeUsers = function () {\n  function createFakeUsers(count, role) {\n    var insertedUsers = [];\n\n    for (var i = 0; i < count; i += 1) {\n      var userId = _Accounts.createUser({\n        email: role + \"-\" + (i + 1) + \"@epotek.ch\",\n        password: '12345'\n      });\n\n      _Roles.addUsersToRoles(userId, [role]);\n\n      EventService.emit(_USER_EVENTS.USER_CREATED, {\n        userId: userId\n      });\n      insertedUsers.push(userId);\n    }\n\n    return insertedUsers;\n  }\n\n  return createFakeUsers;\n}();\n\nmodule.exportDefault(createFakeUsers);","map":{"version":3,"sources":["imports/core/fixtures/users.js"],"names":["Accounts","module","watch","require","v","Roles","EventService","USER_EVENTS","createFakeUsers","count","role","insertedUsers","i","userId","createUser","email","password","addUsersToRoles","emit","USER_CREATED","push","exportDefault"],"mappings":";;AAAA,IAAIA,kBAAJ;;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACH,UAAD;AAAA,sBAAUI,CAAV,EAAY;AAACJ,kBAASI,CAAT;AAAW;;AAAxB;AAAA;AAAA,CAA7C,EAAuE,CAAvE;;AAA0E,IAAIC,eAAJ;;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACE,OAAD;AAAA,mBAAOD,CAAP,EAAS;AAACC,eAAMD,CAAN;AAAQ;;AAAlB;AAAA;AAAA,CAA9C,EAAkE,CAAlE;AAAqE,IAAIE,qBAAJ;AAAiBL,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACE,qBAAaF,CAAb;AAAe;;AAA3B;AAAA;AAAA,CAAtC,EAAmE,CAAnE;;AAAsE,IAAIG,qBAAJ;;AAAgBN,OAAOC,KAAP,CAAaC,QAAQ,4BAAR,CAAb,EAAmD;AAACI,aAAD;AAAA,yBAAaH,CAAb,EAAe;AAACG,qBAAYH,CAAZ;AAAc;;AAA9B;AAAA;AAAA,CAAnD,EAAmF,CAAnF;;AAK7Q,IAAMI;AAAkB,WAAlBA,eAAkB,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACvC,QAAMC,gBAAgB,EAAtB;;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,KAApB,EAA2BG,KAAK,CAAhC,EAAmC;AACjC,UAAMC,SAASb,UAASc,UAAT,CAAoB;AACjCC,eAAUL,IAAV,UAAkBE,IAAI,CAAtB,gBADiC;AAEjCI,kBAAU;AAFuB,OAApB,CAAf;;AAIAX,aAAMY,eAAN,CAAsBJ,MAAtB,EAA8B,CAACH,IAAD,CAA9B;;AACAJ,mBAAaY,IAAb,CAAkBX,aAAYY,YAA9B,EAA4C;AAAEN;AAAF,OAA5C;AACAF,oBAAcS,IAAd,CAAmBP,MAAnB;AACD;;AACD,WAAOF,aAAP;AACD;;AAZK;AAAA,GAAN;;AALAV,OAAOoB,aAAP,CAmBeb,eAnBf","file":"imports/core/fixtures/users.js.map","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\nimport { Roles } from 'meteor/alanning:roles';\nimport EventService from 'core/api/events';\nimport { USER_EVENTS } from 'core/api/users/userConstants';\n\nconst createFakeUsers = (count, role) => {\n  const insertedUsers = [];\n  for (let i = 0; i < count; i += 1) {\n    const userId = Accounts.createUser({\n      email: `${role}-${i + 1}@epotek.ch`,\n      password: '12345',\n    });\n    Roles.addUsersToRoles(userId, [role]);\n    EventService.emit(USER_EVENTS.USER_CREATED, { userId });\n    insertedUsers.push(userId);\n  }\n  return insertedUsers;\n};\n\nexport default createFakeUsers;\n"]},"hash":"40b818776e359e309dfdd1911b4afabaec909543"}
