{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"../../utils/loadable","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loadable"}]},{"source":"../../utils/conversionFunctions","imported":["toMoney"],"specifiers":[{"kind":"named","imported":"toMoney","local":"toMoney"}]},{"source":"../../utils/loanFunctions","imported":["getLoanValue","getProjectValue"],"specifiers":[{"kind":"named","imported":"getLoanValue","local":"getLoanValue"},{"kind":"named","imported":"getProjectValue","local":"getProjectValue"}]},{"source":"../../config/constants","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"constants"}]},{"source":"../../config/colors","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"colors"}]},{"source":"../../containers/withLoan","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"withLoan"}]},{"source":"./chartSettings","imported":["legend"],"specifiers":[{"kind":"named","imported":"legend","local":"legend"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/charts/ProjectPieChart.jsx","filenameRelative":"imports/core/components/charts/ProjectPieChart.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/charts/ProjectPieChart.jsx.map","sourceFileName":"imports/core/components/charts/ProjectPieChart.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ProjectPieChart"},"ignored":false,"code":"\"use strict\";\n\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar Loadable = void 0;\nmodule.watch(require(\"../../utils/loadable\"), {\n  \"default\": function () {\n    function _default(v) {\n      Loadable = v;\n    }\n\n    return _default;\n  }()\n}, 2);\n\nvar _toMoney = void 0;\n\nmodule.watch(require(\"../../utils/conversionFunctions\"), {\n  toMoney: function () {\n    function toMoney(v) {\n      _toMoney = v;\n    }\n\n    return toMoney;\n  }()\n}, 3);\n\nvar _getLoanValue = void 0,\n    _getProjectValue = void 0;\n\nmodule.watch(require(\"../../utils/loanFunctions\"), {\n  getLoanValue: function () {\n    function getLoanValue(v) {\n      _getLoanValue = v;\n    }\n\n    return getLoanValue;\n  }(),\n  getProjectValue: function () {\n    function getProjectValue(v) {\n      _getProjectValue = v;\n    }\n\n    return getProjectValue;\n  }()\n}, 4);\nvar constants = void 0;\nmodule.watch(require(\"../../config/constants\"), {\n  \"default\": function () {\n    function _default(v) {\n      constants = v;\n    }\n\n    return _default;\n  }()\n}, 5);\nvar colors = void 0;\nmodule.watch(require(\"../../config/colors\"), {\n  \"default\": function () {\n    function _default(v) {\n      colors = v;\n    }\n\n    return _default;\n  }()\n}, 6);\nvar withLoan = void 0;\nmodule.watch(require(\"../../containers/withLoan\"), {\n  \"default\": function () {\n    function _default(v) {\n      withLoan = v;\n    }\n\n    return _default;\n  }()\n}, 7);\n\nvar _legend = void 0;\n\nmodule.watch(require(\"./chartSettings\"), {\n  legend: function () {\n    function legend(v) {\n      _legend = v;\n    }\n\n    return legend;\n  }()\n}, 8);\nvar ReactHighcharts = Loadable({\n  loader: function () {\n    function loader() {\n      return module.dynamicImport('react-highcharts');\n    }\n\n    return loader;\n  }()\n});\nvar chartColors = {\n  notaryFees: colors.charts[4],\n  lppFees: colors.charts[3],\n  fortune: colors.charts[2],\n  insuranceFortune: colors.charts[1],\n  loan: colors.charts[0]\n};\n\nvar getConfig = function () {\n  function getConfig(props) {\n    var r = props.loan;\n\n    var total = _getProjectValue({\n      loan: r,\n      property: props.property\n    });\n\n    var options = {\n      chart: {\n        type: 'pie',\n        style: {\n          fontFamily: 'Source Sans Pro'\n        },\n        animation: {\n          duration: 400\n        }\n      },\n      title: {\n        text: 'Mon Projet',\n        style: {\n          fontSize: '18px',\n          color: '#222',\n          fontWeight: 400\n        },\n        align: props.titleAlign\n      },\n      subtitle: {\n        text: \"CHF \" + _toMoney(total),\n        style: {\n          fontSize: '14px'\n        },\n        align: props.titleAlign\n      },\n      tooltip: {\n        formatter: function () {\n          function formatter() {\n            return \"<span style=\\\"color:\" + this.color + \"\\\">\\u25CF</span> \" + this.key + \"<br /> <b>CHF \" + _toMoney(Math.round(this.y)) + \"</b><br />\" + Math.round(1000 * this.y / total) / 10 + \"%\";\n          }\n\n          return formatter;\n        }(),\n        style: {\n          fontSize: '14px'\n        }\n      },\n      plotOptions: {\n        pie: {\n          borderWidth: 0,\n          allowPointSelect: false,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: false,\n            format: '<b>{point.name}</b><br />CHF {point.y:,.0f}',\n            style: {\n              overflow: 'visible'\n            }\n          },\n          showInLegend: true\n        }\n      },\n      legend: _legend,\n      series: [{\n        type: 'pie',\n        name: 'Mon Projet',\n        data: [{\n          name: 'Emprunt',\n          y: _getLoanValue(props)\n        }, {\n          name: '2ème Pilier',\n          y: r.general.insuranceFortuneUsed || 0\n        }, {\n          name: 'Fortune',\n          // subtract fees from this\n          y: r.general.fortuneUsed - props.property.value * constants.notaryFees - (r.general.insuranceFortuneUsed * constants.lppFees || 0)\n        }, {\n          name: 'Frais de Notaire',\n          y: props.property.value * constants.notaryFees\n        }, {\n          name: 'Frais 2ème Pilier',\n          y: r.general.insuranceFortuneUsed * constants.lppFees || 0\n        }]\n      }],\n      colors: [chartColors.loan, chartColors.insuranceFortune, chartColors.fortune, chartColors.notaryFees, chartColors.lppFees],\n      lang: {\n        thousandsSep: \"'\"\n      },\n      credits: {\n        enabled: false\n      }\n    };\n    return options;\n  }\n\n  return getConfig;\n}();\n\nvar ProjectPieChart = function () {\n  function ProjectPieChart(props) {\n    return React.createElement(ReactHighcharts, {\n      config: getConfig(props)\n    });\n  }\n\n  return ProjectPieChart;\n}();\n\nProjectPieChart.defaultProps = {\n  divName: 'projectPieChart',\n  titleAlign: 'center'\n};\nProjectPieChart.propTypes = {\n  loan: PropTypes.objectOf(PropTypes.any).isRequired,\n  divName: PropTypes.string,\n  titleAlign: PropTypes.string\n};\nmodule.exportDefault(withLoan(ProjectPieChart));","map":{"version":3,"sources":["imports/core/components/charts/ProjectPieChart.jsx"],"names":["PropTypes","module","watch","require","v","React","Loadable","toMoney","getLoanValue","getProjectValue","constants","colors","withLoan","legend","ReactHighcharts","loader","chartColors","notaryFees","charts","lppFees","fortune","insuranceFortune","loan","getConfig","props","r","total","property","options","chart","type","style","fontFamily","animation","duration","title","text","fontSize","color","fontWeight","align","titleAlign","subtitle","tooltip","formatter","key","Math","round","y","plotOptions","pie","borderWidth","allowPointSelect","cursor","dataLabels","enabled","format","overflow","showInLegend","series","name","data","general","insuranceFortuneUsed","fortuneUsed","value","lang","thousandsSep","credits","ProjectPieChart","defaultProps","divName","propTypes","objectOf","any","isRequired","string","exportDefault"],"mappings":"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","file":"imports/core/components/charts/ProjectPieChart.jsx.map","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport Loadable from 'core/utils/loadable';\n\nimport { toMoney } from 'core/utils/conversionFunctions';\nimport { getLoanValue, getProjectValue } from 'core/utils/loanFunctions';\nimport constants from 'core/config/constants';\nimport colors from 'core/config/colors';\nimport withLoan from 'core/containers/withLoan';\n\nimport { legend } from './chartSettings';\n\nconst ReactHighcharts = Loadable({\n  loader: () => import('react-highcharts'),\n});\n\nconst chartColors = {\n  notaryFees: colors.charts[4],\n  lppFees: colors.charts[3],\n  fortune: colors.charts[2],\n  insuranceFortune: colors.charts[1],\n  loan: colors.charts[0],\n};\n\nconst getConfig = (props) => {\n  const r = props.loan;\n  const total = getProjectValue({ loan: r, property: props.property });\n\n  const options = {\n    chart: {\n      type: 'pie',\n      style: { fontFamily: 'Source Sans Pro' },\n      animation: { duration: 400 },\n    },\n    title: {\n      text: 'Mon Projet',\n      style: { fontSize: '18px', color: '#222', fontWeight: 400 },\n      align: props.titleAlign,\n    },\n    subtitle: {\n      text: `CHF ${toMoney(total)}`,\n      style: { fontSize: '14px' },\n      align: props.titleAlign,\n    },\n    tooltip: {\n      formatter() {\n        return `<span style=\"color:${this.color}\">\\u25CF</span> ${\n          this.key\n        }<br /> <b>CHF ${toMoney(Math.round(this.y))}</b><br />${Math.round(1000 * this.y / total) / 10}%`;\n      },\n      style: { fontSize: '14px' },\n    },\n    plotOptions: {\n      pie: {\n        borderWidth: 0,\n        allowPointSelect: false,\n        cursor: 'pointer',\n        dataLabels: {\n          enabled: false,\n          format: '<b>{point.name}</b><br />CHF {point.y:,.0f}',\n          style: {\n            overflow: 'visible',\n          },\n        },\n        showInLegend: true,\n      },\n    },\n    legend,\n    series: [\n      {\n        type: 'pie',\n        name: 'Mon Projet',\n        data: [\n          {\n            name: 'Emprunt',\n            y: getLoanValue(props),\n          },\n          {\n            name: '2ème Pilier',\n            y: r.general.insuranceFortuneUsed || 0,\n          },\n          {\n            name: 'Fortune', // subtract fees from this\n            y:\n              r.general.fortuneUsed -\n              props.property.value * constants.notaryFees -\n              (r.general.insuranceFortuneUsed * constants.lppFees || 0),\n          },\n          {\n            name: 'Frais de Notaire',\n            y: props.property.value * constants.notaryFees,\n          },\n          {\n            name: 'Frais 2ème Pilier',\n            y: r.general.insuranceFortuneUsed * constants.lppFees || 0,\n          },\n        ],\n      },\n    ],\n    colors: [\n      chartColors.loan,\n      chartColors.insuranceFortune,\n      chartColors.fortune,\n      chartColors.notaryFees,\n      chartColors.lppFees,\n    ],\n    lang: { thousandsSep: \"'\" },\n    credits: { enabled: false },\n  };\n\n  return options;\n};\n\nconst ProjectPieChart = props => <ReactHighcharts config={getConfig(props)} />;\n\nProjectPieChart.defaultProps = {\n  divName: 'projectPieChart',\n  titleAlign: 'center',\n};\n\nProjectPieChart.propTypes = {\n  loan: PropTypes.objectOf(PropTypes.any).isRequired,\n  divName: PropTypes.string,\n  titleAlign: PropTypes.string,\n};\n\nexport default withLoan(ProjectPieChart);\n"]},"hash":"4f78b879838ebfff98778f91c834123d5fd82cb8"}
