{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"simpl-schema","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SimpleSchema"}]}],"exports":{"exported":["ComparatorSchema"],"specifiers":[{"kind":"local","local":"ComparatorSchema","exported":"ComparatorSchema"}]}}},"options":{"filename":"imports/core/api/comparators/comparators.js","filenameRelative":"imports/core/api/comparators/comparators.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/comparators/comparators.js.map","sourceFileName":"imports/core/api/comparators/comparators.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"comparators"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.export({\n  ComparatorSchema: function ComparatorSchema() {\n    return _ComparatorSchema;\n  }\n});\n\nvar _Mongo = void 0;\n\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function Mongo(v) {\n    _Mongo = v;\n  }\n}, 0);\nvar SimpleSchema = void 0;\nmodule.watch(require(\"simpl-schema\"), {\n  default: function _default(v) {\n    SimpleSchema = v;\n  }\n}, 1);\nvar Comparators = new _Mongo.Collection('comparators'); // Prevent all client side modifications of mongoDB\n\nexports.ComparatorSchema = _ComparatorSchema;\nComparators.deny({\n  insert: function insert() {\n    return true;\n  },\n  update: function update() {\n    return true;\n  },\n  remove: function remove() {\n    return true;\n  }\n});\nComparators.allow({\n  insert: function insert() {\n    return false;\n  },\n  update: function update() {\n    return false;\n  },\n  remove: function remove() {\n    return false;\n  }\n});\n\nvar _ComparatorSchema = new SimpleSchema({\n  userId: {\n    type: String,\n    index: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      }\n    }\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function autoValue() {\n      if (this.isInsert || this.isUpdate) {\n        return new Date();\n      }\n    }\n  },\n  useBorrowers: {\n    type: Boolean,\n    defaultValue: false\n  },\n  income: {\n    type: Number,\n    defaultValue: 100000,\n    optional: true\n  },\n  fortune: {\n    type: Number,\n    defaultValue: 100000,\n    optional: true\n  },\n  interestRate: {\n    type: Number,\n    defaultValue: 0.0125,\n    optional: true\n  },\n  borrowRatio: {\n    type: Number,\n    defaultValue: 0.8,\n    optional: true\n  },\n  usageType: {\n    type: String,\n    defaultValue: 'primary'\n  },\n  customFields: {\n    type: Array,\n    defaultValue: []\n  },\n  'customFields.$': Object,\n  'customFields.$.id': String,\n  'customFields.$.name': String,\n  'customFields.$.type': String,\n  customFieldCount: {\n    type: Number,\n    defaultValue: 0\n  },\n  hiddenFields: {\n    type: Array,\n    defaultValue: ['realBorrowRatio', 'incomeRatio', 'theoreticalMonthly']\n  },\n  'hiddenFields.$': String,\n  borrowers: {\n    type: Array,\n    defaultValue: []\n  },\n  'borrowers.$': String\n}); // Attach schema\n\n\nComparators.attachSchema(_ComparatorSchema);\nmodule.exportDefault(Comparators);","map":{"version":3,"sources":["imports/core/api/comparators/comparators.js"],"names":["module","export","ComparatorSchema","Mongo","watch","require","v","SimpleSchema","default","Comparators","Collection","deny","insert","update","remove","allow","userId","type","String","index","createdAt","Date","autoValue","isInsert","updatedAt","isUpdate","useBorrowers","Boolean","defaultValue","income","Number","optional","fortune","interestRate","borrowRatio","usageType","customFields","Array","Object","customFieldCount","hiddenFields","borrowers","attachSchema","exportDefault"],"mappings":";;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,oBAAiB;AAAA,WAAIA,iBAAJ;AAAA;AAAlB,CAAd;;AAAuD,IAAIC,eAAJ;;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACF,OAAD,iBAAOG,CAAP,EAAS;AAACH,aAAMG,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,qBAAJ;AAAiBP,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,SAAD,oBAASF,CAAT,EAAW;AAACC,mBAAaD,CAAb;AAAe;AAA3B,CAArC,EAAkE,CAAlE;AAG9I,IAAMG,cAAc,IAAIN,OAAMO,UAAV,CAAqB,aAArB,CAApB,C,CAEA;;;AACAD,YAAYE,IAAZ,CAAiB;AACfC,UAAQ;AAAA,WAAM,IAAN;AAAA,GADO;AAEfC,UAAQ;AAAA,WAAM,IAAN;AAAA,GAFO;AAGfC,UAAQ;AAAA,WAAM,IAAN;AAAA;AAHO,CAAjB;AAKAL,YAAYM,KAAZ,CAAkB;AAChBH,UAAQ;AAAA,WAAM,KAAN;AAAA,GADQ;AAEhBC,UAAQ;AAAA,WAAM,KAAN;AAAA,GAFQ;AAGhBC,UAAQ;AAAA,WAAM,KAAN;AAAA;AAHQ,CAAlB;;AAMO,IAAMZ,oBAAmB,IAAIK,YAAJ,CAAiB;AAC/CS,UAAQ;AAAEC,UAAMC,MAAR;AAAgBC,WAAO;AAAvB,GADuC;AAE/CC,aAAW;AACTH,UAAMI,IADG;AAETC,aAFS,uBAEG;AACV,UAAI,KAAKC,QAAT,EAAmB;AACjB,eAAO,IAAIF,IAAJ,EAAP;AACD;AACF;AANQ,GAFoC;AAU/CG,aAAW;AACTP,UAAMI,IADG;AAETC,aAFS,uBAEG;AACV,UAAI,KAAKC,QAAL,IAAiB,KAAKE,QAA1B,EAAoC;AAClC,eAAO,IAAIJ,IAAJ,EAAP;AACD;AACF;AANQ,GAVoC;AAkB/CK,gBAAc;AAAET,UAAMU,OAAR;AAAiBC,kBAAc;AAA/B,GAlBiC;AAmB/CC,UAAQ;AAAEZ,UAAMa,MAAR;AAAgBF,kBAAc,MAA9B;AAAsCG,cAAU;AAAhD,GAnBuC;AAoB/CC,WAAS;AAAEf,UAAMa,MAAR;AAAgBF,kBAAc,MAA9B;AAAsCG,cAAU;AAAhD,GApBsC;AAqB/CE,gBAAc;AAAEhB,UAAMa,MAAR;AAAgBF,kBAAc,MAA9B;AAAsCG,cAAU;AAAhD,GArBiC;AAsB/CG,eAAa;AAAEjB,UAAMa,MAAR;AAAgBF,kBAAc,GAA9B;AAAmCG,cAAU;AAA7C,GAtBkC;AAuB/CI,aAAW;AAAElB,UAAMC,MAAR;AAAgBU,kBAAc;AAA9B,GAvBoC;AAwB/CQ,gBAAc;AAAEnB,UAAMoB,KAAR;AAAeT,kBAAc;AAA7B,GAxBiC;AAyB/C,oBAAkBU,MAzB6B;AA0B/C,uBAAqBpB,MA1B0B;AA2B/C,yBAAuBA,MA3BwB;AA4B/C,yBAAuBA,MA5BwB;AA6B/CqB,oBAAkB;AAAEtB,UAAMa,MAAR;AAAgBF,kBAAc;AAA9B,GA7B6B;AA8B/CY,gBAAc;AACZvB,UAAMoB,KADM;AAEZT,kBAAc,CAAC,iBAAD,EAAoB,aAApB,EAAmC,oBAAnC;AAFF,GA9BiC;AAkC/C,oBAAkBV,MAlC6B;AAmC/CuB,aAAW;AAAExB,UAAMoB,KAAR;AAAeT,kBAAc;AAA7B,GAnCoC;AAoC/C,iBAAeV;AApCgC,CAAjB,CAAzB,C,CAuCP;;;AACAT,YAAYiC,YAAZ,CAAyBxC,iBAAzB;AAzDAF,OAAO2C,aAAP,CA0DelC,WA1Df","file":"imports/core/api/comparators/comparators.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\nconst Comparators = new Mongo.Collection('comparators');\n\n// Prevent all client side modifications of mongoDB\nComparators.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\nComparators.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nexport const ComparatorSchema = new SimpleSchema({\n  userId: { type: String, index: true },\n  createdAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      }\n    },\n  },\n  updatedAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert || this.isUpdate) {\n        return new Date();\n      }\n    },\n  },\n  useBorrowers: { type: Boolean, defaultValue: false },\n  income: { type: Number, defaultValue: 100000, optional: true },\n  fortune: { type: Number, defaultValue: 100000, optional: true },\n  interestRate: { type: Number, defaultValue: 0.0125, optional: true },\n  borrowRatio: { type: Number, defaultValue: 0.8, optional: true },\n  usageType: { type: String, defaultValue: 'primary' },\n  customFields: { type: Array, defaultValue: [] },\n  'customFields.$': Object,\n  'customFields.$.id': String,\n  'customFields.$.name': String,\n  'customFields.$.type': String,\n  customFieldCount: { type: Number, defaultValue: 0 },\n  hiddenFields: {\n    type: Array,\n    defaultValue: ['realBorrowRatio', 'incomeRatio', 'theoreticalMonthly'],\n  },\n  'hiddenFields.$': String,\n  borrowers: { type: Array, defaultValue: [] },\n  'borrowers.$': String,\n});\n\n// Attach schema\nComparators.attachSchema(ComparatorSchema);\nexport default Comparators;\n"]},"hash":"9b7d7a851a75771483731459331948ae984c2bc5"}
