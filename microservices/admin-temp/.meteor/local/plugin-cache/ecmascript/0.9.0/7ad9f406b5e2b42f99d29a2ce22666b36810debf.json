{"metadata":{"usedHelpers":["createClass","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"lodash.clonedeep","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"deepClone"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]}],"exports":{"exported":["QueryBase"],"specifiers":[{"kind":"local","local":"QueryBase","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/query.base.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/query.base.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/query.base.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/query.base.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"query.base"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n    \"default\": function () {\n        return QueryBase;\n    }\n});\nvar deepClone = void 0;\nmodule.watch(require(\"lodash.clonedeep\"), {\n    \"default\": function (v) {\n        deepClone = v;\n    }\n}, 0);\nvar check = void 0;\nmodule.watch(require(\"meteor/check\"), {\n    check: function (v) {\n        check = v;\n    }\n}, 1);\n\nvar QueryBase = function () {\n    function QueryBase(collection, body) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        (0, _classCallCheck3.default)(this, QueryBase);\n        this.isGlobalQuery = true;\n        this.collection = collection;\n        this.body = deepClone(body);\n        this.params = options.params || {};\n        this.options = options;\n    }\n\n    QueryBase.prototype.clone = function () {\n        function clone(newParams) {\n            var params = _.extend({}, deepClone(this.params), newParams);\n\n            return new this.constructor(this.collection, deepClone(this.body), (0, _extends3.default)({\n                params: params\n            }, this.options));\n        }\n\n        return clone;\n    }();\n\n    /**\n     * Validates the parameters\n     */QueryBase.prototype.doValidateParams = function () {\n        function doValidateParams() {\n            var validateParams = this.options.validateParams;\n            if (!validateParams) return;\n\n            if (_.isFunction(validateParams)) {\n                validateParams.call(null, this.params);\n            } else {\n                check(this.params);\n            }\n        }\n\n        return doValidateParams;\n    }(); /**\n          * Merges the params with previous params.\n          *\n          * @param params\n          * @returns {Query}\n          */\n\n    QueryBase.prototype.setParams = function () {\n        function setParams(params) {\n            this.params = _.extend({}, this.params, params);\n            return this;\n        }\n\n        return setParams;\n    }();\n\n    (0, _createClass3.default)(QueryBase, [{\n        key: \"name\",\n        get: function () {\n            return \"exposure_\" + this.collection._name;\n        }\n    }]);\n    return QueryBase;\n}();","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/query.base.js"],"names":["module","export","QueryBase","deepClone","watch","require","v","check","collection","body","options","isGlobalQuery","params","clone","newParams","_","extend","constructor","doValidateParams","validateParams","isFunction","call","setParams","_name"],"mappings":";;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAAC,eAAQ;AAAA,eAAIC,SAAJ;AAAA;AAAT,CAAd;AAAuC,IAAIC,kBAAJ;AAAcH,OAAOI,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAAA,yBAASC,CAAT,EAAW;AAACH,oBAAUG,CAAV;AAAY;AAAxB,CAAzC,EAAmE,CAAnE;AAAsE,IAAIC,cAAJ;AAAUP,OAAOI,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,SAAD,YAAOD,CAAP,EAAS;AAACC,gBAAMD,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;;IAGhHJ,S;AAGjB,uBAAYM,UAAZ,EAAwBC,IAAxB,EAA4C;AAAA,YAAdC,OAAc,uEAAJ,EAAI;AAAA;AAAA,aAF5CC,aAE4C,GAF5B,IAE4B;AACxC,aAAKH,UAAL,GAAkBA,UAAlB;AAEA,aAAKC,IAAL,GAAYN,UAAUM,IAAV,CAAZ;AAEA,aAAKG,MAAL,GAAcF,QAAQE,MAAR,IAAkB,EAAhC;AACA,aAAKF,OAAL,GAAeA,OAAf;AACH;;wBAEDG,K;uBAAMC,S,EAAW;AACb,gBAAMF,SAASG,EAAEC,MAAF,CAAS,EAAT,EAAab,UAAU,KAAKS,MAAf,CAAb,EAAqCE,SAArC,CAAf;;AAEA,mBAAO,IAAI,KAAKG,WAAT,CACH,KAAKT,UADF,EAEHL,UAAU,KAAKM,IAAf,CAFG;AAICG;AAJD,eAKI,KAAKF,OALT,EAAP;AAQH;;;;;AAMD;;2BAGAQ,gB;oCAAmB;AAAA,gBACRC,cADQ,GACU,KAAKT,OADf,CACRS,cADQ;AAEf,gBAAI,CAACA,cAAL,EAAqB;;AAErB,gBAAIJ,EAAEK,UAAF,CAAaD,cAAb,CAAJ,EAAkC;AAC9BA,+BAAeE,IAAf,CAAoB,IAApB,EAA0B,KAAKT,MAA/B;AACH,aAFD,MAEO;AACHL,sBAAM,KAAKK,MAAX;AACH;AACJ;;;SAED;;;;;;;wBAMAU,S;2BAAUV,M,EAAQ;AACd,iBAAKA,MAAL,GAAcG,EAAEC,MAAF,CAAS,EAAT,EAAa,KAAKJ,MAAlB,EAA0BA,MAA1B,CAAd;AAEA,mBAAO,IAAP;AACH;;;;;;;yBA5BU;AACP,iCAAmB,KAAKJ,UAAL,CAAgBe,KAAnC;AACH","file":"packages/cultofcoders:grapher/lib/query/query.base.js.map","sourcesContent":["import deepClone from 'lodash.clonedeep';\nimport {check} from 'meteor/check';\n\nexport default class QueryBase {\n    isGlobalQuery = true;\n\n    constructor(collection, body, options = {}) {\n        this.collection = collection;\n\n        this.body = deepClone(body);\n\n        this.params = options.params || {};\n        this.options = options;\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        return new this.constructor(\n            this.collection,\n            deepClone(this.body),\n            {\n                params,\n                ...this.options\n            }\n        );\n    }\n\n    get name() {\n        return `exposure_${this.collection._name}`;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams() {\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        if (_.isFunction(validateParams)) {\n            validateParams.call(null, this.params)\n        } else {\n            check(this.params)\n        }\n    }\n\n    /**\n     * Merges the params with previous params.\n     *\n     * @param params\n     * @returns {Query}\n     */\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n}"]},"hash":"7ad9f406b5e2b42f99d29a2ce22666b36810debf"}
