{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"../../../core/components/DropdownMenu","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"DropdownMenu"}]},{"source":"../../../core/api","imported":["callMutation","mutations"],"specifiers":[{"kind":"named","imported":"callMutation","local":"callMutation"},{"kind":"named","imported":"mutations","local":"mutations"}]},{"source":"../../../core/api/tasks/tasksConstants","imported":["TASK_STATUS"],"specifiers":[{"kind":"named","imported":"TASK_STATUS","local":"TASK_STATUS"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","filenameRelative":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourceFileName":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TasksAssignedUserDropdown"},"ignored":false,"code":"\"use strict\";\n\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar DropdownMenu = void 0;\nmodule.watch(require(\"../../../core/components/DropdownMenu\"), {\n  \"default\": function () {\n    function _default(v) {\n      DropdownMenu = v;\n    }\n\n    return _default;\n  }()\n}, 1);\n\nvar _callMutation = void 0,\n    _mutations = void 0;\n\nmodule.watch(require(\"../../../core/api\"), {\n  callMutation: function () {\n    function callMutation(v) {\n      _callMutation = v;\n    }\n\n    return callMutation;\n  }(),\n  mutations: function () {\n    function mutations(v) {\n      _mutations = v;\n    }\n\n    return mutations;\n  }()\n}, 2);\n\nvar _TASK_STATUS = void 0;\n\nmodule.watch(require(\"../../../core/api/tasks/tasksConstants\"), {\n  TASK_STATUS: function () {\n    function TASK_STATUS(v) {\n      _TASK_STATUS = v;\n    }\n\n    return TASK_STATUS;\n  }()\n}, 3);\n\nvar firstUserAssign = function () {\n  function firstUserAssign(taskAssignedTo, relatedUserId, user, taskId) {\n    if (!taskAssignedTo) {\n      _callMutation(_mutations.ASSIGN_ADMIN_TO_USER, {\n        userId: relatedUserId,\n        adminId: user._id\n      }).then(function (nbOfAffectedRows) {\n        if (nbOfAffectedRows > 0) {\n          _callMutation(_mutations.TASK_CHANGE_ASSIGNED_TO, {\n            taskId: taskId,\n            newAssignee: user._id\n          });\n        }\n      }).then(function (nbOfAffectedRows) {\n        if (nbOfAffectedRows > 0) {\n          _callMutation(_mutations.TASK_CHANGE_STATUS, {\n            taskId: taskId,\n            newStatus: _TASK_STATUS.COMPLETED\n          });\n        }\n      });\n    } else {\n      _callMutation(_mutations.TASK_CHANGE_ASSIGNED_TO, {\n        taskId: taskId,\n        newAssignee: user._id\n      });\n    }\n  }\n\n  return firstUserAssign;\n}();\n\nvar changeAssignedUser = function () {\n  function changeAssignedUser(_ref) {\n    var user = _ref.user,\n        task = _ref.task,\n        taskAssignedTo = _ref.taskAssignedTo;\n    var taskId = task._id;\n    var taskUserId = task.user ? task.user._id : undefined;\n\n    if (!taskUserId) {\n      _callMutation(_mutations.TASK_GET_RELATED_TO, {\n        task: task\n      }).then(function (relatedUserId) {\n        firstUserAssign(taskAssignedTo, relatedUserId, user, taskId);\n      });\n    } else {\n      firstUserAssign(taskAssignedTo, taskUserId, user, taskId);\n    }\n  }\n\n  return changeAssignedUser;\n}();\n\nvar getMenuItems = function () {\n  function getMenuItems(users, task) {\n    var taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n    var options = users.map(function (user) {\n      return {\n        id: user._id,\n        show: user._id !== taskAssignedTo,\n        label: user.emails[0].address,\n        link: false,\n        onClick: function () {\n          function onClick() {\n            changeAssignedUser({\n              user: user,\n              task: task,\n              taskAssignedTo: taskAssignedTo\n            });\n          }\n\n          return onClick;\n        }()\n      };\n    });\n    return options;\n  }\n\n  return getMenuItems;\n}();\n\nvar TasksAssignedUserDropdown = function () {\n  function TasksAssignedUserDropdown(props) {\n    var data = props.data,\n        isLoading = props.isLoading,\n        error = props.error,\n        task = props.task,\n        styles = props.styles;\n\n    if (isLoading) {\n      return null;\n    }\n\n    if (error) {\n      return React.createElement(\n        \"div\",\n        null,\n        \"Error: \",\n        error.reason\n      );\n    }\n\n    return React.createElement(DropdownMenu, {\n      iconType: \"personAdd\",\n      options: getMenuItems(data, task),\n      style: styles\n    });\n  }\n\n  return TasksAssignedUserDropdown;\n}();\n\nmodule.exportDefault(TasksAssignedUserDropdown);","map":{"version":3,"sources":["imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx"],"names":["React","module","watch","require","v","DropdownMenu","callMutation","mutations","TASK_STATUS","firstUserAssign","taskAssignedTo","relatedUserId","user","taskId","ASSIGN_ADMIN_TO_USER","userId","adminId","_id","then","nbOfAffectedRows","TASK_CHANGE_ASSIGNED_TO","newAssignee","TASK_CHANGE_STATUS","newStatus","COMPLETED","changeAssignedUser","task","taskUserId","undefined","TASK_GET_RELATED_TO","getMenuItems","users","assignedUser","options","map","id","show","label","emails","address","link","onClick","TasksAssignedUserDropdown","props","data","isLoading","error","styles","reason","exportDefault"],"mappings":"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","file":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourcesContent":["import React from 'react';\nimport DropdownMenu from 'core/components/DropdownMenu/';\nimport { callMutation, mutations } from 'core/api';\nimport { TASK_STATUS } from 'core/api/tasks/tasksConstants';\n\nconst firstUserAssign = (taskAssignedTo, relatedUserId, user, taskId) => {\n  if (!taskAssignedTo) {\n    callMutation(mutations.ASSIGN_ADMIN_TO_USER, {\n      userId: relatedUserId,\n      adminId: user._id,\n    })\n      .then((nbOfAffectedRows) => {\n        if (nbOfAffectedRows > 0) {\n          callMutation(mutations.TASK_CHANGE_ASSIGNED_TO, {\n            taskId,\n            newAssignee: user._id,\n          });\n        }\n      })\n      .then((nbOfAffectedRows) => {\n        if (nbOfAffectedRows > 0) {\n          callMutation(mutations.TASK_CHANGE_STATUS, {\n            taskId,\n            newStatus: TASK_STATUS.COMPLETED,\n          });\n        }\n      });\n  } else {\n    callMutation(mutations.TASK_CHANGE_ASSIGNED_TO, {\n      taskId,\n      newAssignee: user._id,\n    });\n  }\n};\n\nconst changeAssignedUser = ({\n  user,\n  task,\n  taskAssignedTo,\n}) => {\n  const taskId = task._id;\n  const taskUserId = task.user ? task.user._id : undefined;\n  if (!taskUserId) {\n    callMutation(mutations.TASK_GET_RELATED_TO, {\n      task,\n    }).then((relatedUserId) => {\n      firstUserAssign(taskAssignedTo, relatedUserId, user, taskId);\n    });\n  } else {\n    firstUserAssign(taskAssignedTo, taskUserId, user, taskId);\n  }\n};\n\nconst getMenuItems = (\n  users,\n  task,\n) => {\n  const taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n  const options = users.map(user => ({\n    id: user._id,\n    show: user._id !== taskAssignedTo,\n    label: user.emails[0].address,\n    link: false,\n    onClick: () => {\n      changeAssignedUser({\n        user,\n        task,\n        taskAssignedTo,\n      });\n    },\n  }));\n  return options;\n};\n\nconst TasksAssignedUserDropdown = (props) => {\n  const {\n    data,\n    isLoading,\n    error,\n    task,\n    styles,\n  } = props;\n\n  if (isLoading) {\n    return null;\n  }\n  if (error) {\n    return <div>Error: {error.reason}</div>;\n  }\n\n  return (\n    <DropdownMenu\n      iconType=\"personAdd\"\n      options={getMenuItems(\n        data,\n        task,\n      )}\n      style={styles}\n    />\n  );\n};\n\nexport default TasksAssignedUserDropdown;\n"]},"hash":"9965122fd119f1549fc7d683250fc50eb0d28725"}
