{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]}],"exports":{"exported":["FormMessage"],"specifiers":[{"kind":"local","local":"FormMessage","exported":"FormMessage"}]}}},"options":{"filename":"packages/std:accounts-ui/imports/ui/components/FormMessage.jsx","filenameRelative":"packages/std:accounts-ui/imports/ui/components/FormMessage.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/std:accounts-ui/imports/ui/components/FormMessage.jsx.map","sourceFileName":"packages/std:accounts-ui/imports/ui/components/FormMessage.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"FormMessage"},"ignored":false,"code":"module.export({\n  FormMessage: () => FormMessage\n});\nlet React;\nmodule.watch(require(\"react\"), {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\nclass FormMessage extends React.Component {\n  render() {\n    let {\n      message,\n      type,\n      className = \"message\",\n      style = {},\n      deprecated\n    } = this.props; // XXX Check for deprecations.\n\n    if (deprecated) {\n      // Found backwords compatibility issue.\n      console.warn('You are overriding Accounts.ui.Form and using FormMessage, the use of FormMessage in Form has been depreacted in v1.2.11, update your implementation to use FormMessages: https://github.com/studiointeract/accounts-ui/#deprecations');\n    }\n\n    message = isObject(message) ? message.message : message; // If message is object, then try to get message from it\n\n    return message ? React.createElement(\n      \"div\",\n      {\n        style: style,\n        className: [className, type].join(' ')\n      },\n      message\n    ) : null;\n  }\n\n}\n\nAccounts.ui.FormMessage = FormMessage;","map":{"version":3,"sources":["packages/std:accounts-ui/imports/ui/components/FormMessage.jsx"],"names":["module","export","FormMessage","React","watch","require","default","v","Accounts","isObject","obj","Object","Component","render","message","type","className","style","deprecated","props","console","warn","join","ui"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,eAAY,MAAIA;AAAjB,CAAd;AAA6C,IAAIC,KAAJ;AAAUH,OAAOI,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACC,UAAQC,CAAR,EAAU;AAACJ,YAAMI,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,QAAJ;AAAaR,OAAOI,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACG,WAASD,CAAT,EAAW;AAACC,eAASD,CAAT;AAAW;;AAAxB,CAA7C,EAAuE,CAAvE;;AAG3H,SAASE,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAOA,QAAQC,OAAOD,GAAP,CAAf;AACD;;AAEM,MAAMR,WAAN,SAA0BC,MAAMS,SAAhC,CAA0C;AAC/CC,WAAU;AACR,QAAI;AAAEC,aAAF;AAAWC,UAAX;AAAiBC,kBAAY,SAA7B;AAAwCC,cAAQ,EAAhD;AAAoDC;AAApD,QAAmE,KAAKC,KAA5E,CADQ,CAER;;AACA,QAAID,UAAJ,EAAgB;AACd;AACAE,cAAQC,IAAR,CAAa,uOAAb;AACD;;AACDP,cAAUL,SAASK,OAAT,IAAoBA,QAAQA,OAA5B,GAAsCA,OAAhD,CAPQ,CAOiD;;AACzD,WAAOA,UACL;AAAA;AAAA;AAAK,eAAQG,KAAb;AACK,mBAAW,CAAED,SAAF,EAAaD,IAAb,EAAoBO,IAApB,CAAyB,GAAzB;AADhB;AACiDR;AADjD,KADK,GAGH,IAHJ;AAID;;AAb8C;;AAgBjDN,SAASe,EAAT,CAAYrB,WAAZ,GAA0BA,WAA1B","file":"packages/std:accounts-ui/imports/ui/components/FormMessage.jsx.map","sourcesContent":["import React from 'react';\nimport { Accounts } from 'meteor/accounts-base';\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\nexport class FormMessage extends React.Component {\n  render () {\n    let { message, type, className = \"message\", style = {}, deprecated } = this.props;\n    // XXX Check for deprecations.\n    if (deprecated) {\n      // Found backwords compatibility issue.\n      console.warn('You are overriding Accounts.ui.Form and using FormMessage, the use of FormMessage in Form has been depreacted in v1.2.11, update your implementation to use FormMessages: https://github.com/studiointeract/accounts-ui/#deprecations');\n    }\n    message = isObject(message) ? message.message : message; // If message is object, then try to get message from it\n    return message ? (\n      <div style={ style }Â \n           className={[ className, type ].join(' ')}>{ message }</div>\n    ) : null;\n  }\n}\n\nAccounts.ui.FormMessage = FormMessage;\n"]},"hash":"d3527eda0de4243c4dfecba83ef2f9c5dc269445"}
