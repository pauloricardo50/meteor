{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"lodash.clonedeep","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"cloneDeep"}]},{"source":"./BaseResultCacher","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"BaseResultCacher"}]}],"exports":{"exported":["MemoryResultCacher"],"specifiers":[{"kind":"local","local":"MemoryResultCacher","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js","filenameRelative":"packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"MemoryResultCacher"},"ignored":false,"code":"module.export({\n    default: () => MemoryResultCacher\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor(v) {\n        Meteor = v;\n    }\n\n}, 0);\nlet cloneDeep;\nmodule.watch(require(\"lodash.clonedeep\"), {\n    default(v) {\n        cloneDeep = v;\n    }\n\n}, 1);\nlet BaseResultCacher;\nmodule.watch(require(\"./BaseResultCacher\"), {\n    default(v) {\n        BaseResultCacher = v;\n    }\n\n}, 2);\nconst DEFAULT_TTL = 60000; /**\n                            * This is a very basic in-memory result caching functionality\n                            */\n\nclass MemoryResultCacher extends BaseResultCacher {\n    constructor(config = {}) {\n        super(config);\n        this.store = {};\n    } /**\n       * @param cacheId\n       * @param query\n       * @param countCursor\n       * @returns {*}\n       */\n\n    fetch(cacheId, {\n        query,\n        countCursor\n    }) {\n        const cacheData = this.store[cacheId];\n\n        if (cacheData !== undefined) {\n            return cloneDeep(cacheData);\n        }\n\n        const data = BaseResultCacher.fetchData({\n            query,\n            countCursor\n        });\n        this.storeData(cacheId, data);\n        return data;\n    } /**\n       * @param cacheId\n       * @param data\n       */\n\n    storeData(cacheId, data) {\n        const ttl = this.config.ttl || DEFAULT_TTL;\n        this.store[cacheId] = cloneDeep(data);\n        Meteor.setTimeout(() => {\n            delete this.store[cacheId];\n        }, ttl);\n    }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js"],"names":["module","export","default","MemoryResultCacher","Meteor","watch","require","v","cloneDeep","BaseResultCacher","DEFAULT_TTL","constructor","config","store","fetch","cacheId","query","countCursor","cacheData","undefined","data","fetchData","storeData","ttl","setTimeout"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,aAAQ,MAAIC;AAAb,CAAd;AAAgD,IAAIC,MAAJ;AAAWJ,OAAOK,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,WAAOG,CAAP,EAAS;AAACH,iBAAOG,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,SAAJ;AAAcR,OAAOK,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACJ,YAAQK,CAAR,EAAU;AAACC,oBAAUD,CAAV;AAAY;;AAAxB,CAAzC,EAAmE,CAAnE;AAAsE,IAAIE,gBAAJ;AAAqBT,OAAOK,KAAP,CAAaC,QAAQ,oBAAR,CAAb,EAA2C;AAACJ,YAAQK,CAAR,EAAU;AAACE,2BAAiBF,CAAjB;AAAmB;;AAA/B,CAA3C,EAA4E,CAA5E;AAInO,MAAMG,cAAc,KAApB,C,CAEA;;;;AAGe,MAAMP,kBAAN,SAAiCM,gBAAjC,CAAkD;AAC7DE,gBAAYC,SAAS,EAArB,EAAyB;AACrB,cAAMA,MAAN;AACA,aAAKC,KAAL,GAAa,EAAb;AACH,KAJ4D,CAM7D;;;;;;;AAMAC,UAAMC,OAAN,EAAe;AAACC,aAAD;AAAQC;AAAR,KAAf,EAAqC;AACjC,cAAMC,YAAY,KAAKL,KAAL,CAAWE,OAAX,CAAlB;;AACA,YAAIG,cAAcC,SAAlB,EAA6B;AACzB,mBAAOX,UAAUU,SAAV,CAAP;AACH;;AAED,cAAME,OAAOX,iBAAiBY,SAAjB,CAA2B;AAACL,iBAAD;AAAQC;AAAR,SAA3B,CAAb;AACA,aAAKK,SAAL,CAAeP,OAAf,EAAwBK,IAAxB;AAEA,eAAOA,IAAP;AACH,KAtB4D,CAyB7D;;;;;AAIAE,cAAUP,OAAV,EAAmBK,IAAnB,EAAyB;AACrB,cAAMG,MAAM,KAAKX,MAAL,CAAYW,GAAZ,IAAmBb,WAA/B;AACA,aAAKG,KAAL,CAAWE,OAAX,IAAsBP,UAAUY,IAAV,CAAtB;AAEAhB,eAAOoB,UAAP,CAAkB,MAAM;AACpB,mBAAO,KAAKX,KAAL,CAAWE,OAAX,CAAP;AACH,SAFD,EAEGQ,GAFH;AAGH;;AApC4D","file":"packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js.map","sourcesContent":["import {Meteor} from 'meteor/meteor';\nimport cloneDeep from 'lodash.clonedeep';\nimport BaseResultCacher from './BaseResultCacher';\n\nconst DEFAULT_TTL = 60000;\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class MemoryResultCacher extends BaseResultCacher {\n    constructor(config = {}) {\n        super(config);\n        this.store = {};\n    }\n\n    /**\n     * @param cacheId\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    fetch(cacheId, {query, countCursor}) {\n        const cacheData = this.store[cacheId];\n        if (cacheData !== undefined) {\n            return cloneDeep(cacheData);\n        }\n\n        const data = BaseResultCacher.fetchData({query, countCursor});\n        this.storeData(cacheId, data);\n\n        return data;\n    }\n\n\n    /**\n     * @param cacheId\n     * @param data\n     */\n    storeData(cacheId, data) {\n        const ttl = this.config.ttl || DEFAULT_TTL;\n        this.store[cacheId] = cloneDeep(data);\n\n        Meteor.setTimeout(() => {\n            delete this.store[cacheId];\n        }, ttl)\n    }\n}\n"]},"hash":"94b99b1f6bd519a952540a4651e64902ddb32894"}
