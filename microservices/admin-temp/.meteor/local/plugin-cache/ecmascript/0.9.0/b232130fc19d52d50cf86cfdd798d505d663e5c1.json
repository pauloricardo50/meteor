{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./fixtures","imported":[],"specifiers":[]},{"source":"./collections","imported":["Authors","Groups","Posts","Categories","AuthorProfiles"],"specifiers":[{"kind":"named","imported":"Authors","local":"Authors"},{"kind":"named","imported":"Groups","local":"Groups"},{"kind":"named","imported":"Posts","local":"Posts"},{"kind":"named","imported":"Categories","local":"Categories"},{"kind":"named","imported":"AuthorProfiles","local":"AuthorProfiles"}]},{"source":"./namedQueries","imported":["authorsList","postsList","exceptionPostList"],"specifiers":[{"kind":"named","imported":"authorsList","local":"authorsList"},{"kind":"named","imported":"postsList","local":"postsList"},{"kind":"named","imported":"exceptionPostList","local":"exceptionPostList"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/cultofcoders:grapher-react/__tests__/bootstrap/server.js","filenameRelative":"packages/cultofcoders:grapher-react/__tests__/bootstrap/server.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher-react/__tests__/bootstrap/server.js.map","sourceFileName":"packages/cultofcoders:grapher-react/__tests__/bootstrap/server.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"server"},"ignored":false,"code":"module.watch(require(\"./fixtures\"));\nlet Authors, Groups, Posts, Categories, AuthorProfiles;\nmodule.watch(require(\"./collections\"), {\n    Authors(v) {\n        Authors = v;\n    },\n\n    Groups(v) {\n        Groups = v;\n    },\n\n    Posts(v) {\n        Posts = v;\n    },\n\n    Categories(v) {\n        Categories = v;\n    },\n\n    AuthorProfiles(v) {\n        AuthorProfiles = v;\n    }\n\n}, 0);\nlet authorsList, postsList, exceptionPostList;\nmodule.watch(require(\"./namedQueries\"), {\n    authorsList(v) {\n        authorsList = v;\n    },\n\n    postsList(v) {\n        postsList = v;\n    },\n\n    exceptionPostList(v) {\n        exceptionPostList = v;\n    }\n\n}, 1);\n\nfunction expose(exposables) {\n    exposables.forEach(exposable => {\n        exposable.expose();\n    });\n}\n\nfunction allow(collections) {\n    collections.forEach(collection => {\n        collection.allow({\n            insert: () => true,\n            update: () => true,\n            remove: () => true\n        });\n    });\n}\n\nallow([Authors, Groups, Posts, Categories, AuthorProfiles]);\nexpose([Authors, Groups, Posts, Categories, AuthorProfiles]);\nexpose([authorsList, postsList]);\nexceptionPostList.expose({\n    firewall() {\n        throw new Meteor.Error('not-good', 'not-good');\n    }\n\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher-react/__tests__/bootstrap/server.js"],"names":["module","watch","require","Authors","Groups","Posts","Categories","AuthorProfiles","v","authorsList","postsList","exceptionPostList","expose","exposables","forEach","exposable","allow","collections","collection","insert","update","remove","firewall","Meteor","Error"],"mappings":"AAAAA,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb;AAAoC,IAAIC,OAAJ,EAAYC,MAAZ,EAAmBC,KAAnB,EAAyBC,UAAzB,EAAoCC,cAApC;AAAmDP,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACC,YAAQK,CAAR,EAAU;AAACL,kBAAQK,CAAR;AAAU,KAAtB;;AAAuBJ,WAAOI,CAAP,EAAS;AAACJ,iBAAOI,CAAP;AAAS,KAA1C;;AAA2CH,UAAMG,CAAN,EAAQ;AAACH,gBAAMG,CAAN;AAAQ,KAA5D;;AAA6DF,eAAWE,CAAX,EAAa;AAACF,qBAAWE,CAAX;AAAa,KAAxF;;AAAyFD,mBAAeC,CAAf,EAAiB;AAACD,yBAAeC,CAAf;AAAiB;;AAA5H,CAAtC,EAAoK,CAApK;AAAuK,IAAIC,WAAJ,EAAgBC,SAAhB,EAA0BC,iBAA1B;AAA4CX,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACO,gBAAYD,CAAZ,EAAc;AAACC,sBAAYD,CAAZ;AAAc,KAA9B;;AAA+BE,cAAUF,CAAV,EAAY;AAACE,oBAAUF,CAAV;AAAY,KAAxD;;AAAyDG,sBAAkBH,CAAlB,EAAoB;AAACG,4BAAkBH,CAAlB;AAAoB;;AAAlG,CAAvC,EAA2I,CAA3I;;AAI1S,SAASI,MAAT,CAAgBC,UAAhB,EAA4B;AACxBA,eAAWC,OAAX,CAAmBC,aAAa;AAC5BA,kBAAUH,MAAV;AACH,KAFD;AAGH;;AAED,SAASI,KAAT,CAAeC,WAAf,EAA4B;AACxBA,gBAAYH,OAAZ,CAAoBI,cAAc;AAC9BA,mBAAWF,KAAX,CAAiB;AACbG,oBAAQ,MAAM,IADD;AAEbC,oBAAQ,MAAM,IAFD;AAGbC,oBAAQ,MAAM;AAHD,SAAjB;AAKH,KAND;AAOH;;AAEDL,MAAM,CAACb,OAAD,EAAUC,MAAV,EAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCC,cAArC,CAAN;AAEAK,OAAO,CAACT,OAAD,EAAUC,MAAV,EAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCC,cAArC,CAAP;AACAK,OAAO,CAACH,WAAD,EAAcC,SAAd,CAAP;AAEAC,kBAAkBC,MAAlB,CAAyB;AACrBU,eAAW;AACP,cAAM,IAAIC,OAAOC,KAAX,CAAiB,UAAjB,EAA6B,UAA7B,CAAN;AACH;;AAHoB,CAAzB","file":"packages/cultofcoders:grapher-react/__tests__/bootstrap/server.js.map","sourcesContent":["import './fixtures';\nimport {Authors, Groups, Posts, Categories, AuthorProfiles} from './collections';\nimport {authorsList, postsList, exceptionPostList} from './namedQueries';\n\nfunction expose(exposables) {\n    exposables.forEach(exposable => {\n        exposable.expose();\n    });\n}\n\nfunction allow(collections) {\n    collections.forEach(collection => {\n        collection.allow({\n            insert: () => true,\n            update: () => true,\n            remove: () => true,\n        })\n    })\n}\n\nallow([Authors, Groups, Posts, Categories, AuthorProfiles]);\n\nexpose([Authors, Groups, Posts, Categories, AuthorProfiles]);\nexpose([authorsList, postsList]);\n\nexceptionPostList.expose({\n    firewall() {\n        throw new Meteor.Error('not-good', 'not-good');\n    }\n});"]},"hash":"b232130fc19d52d50cf86cfdd798d505d663e5c1"}
