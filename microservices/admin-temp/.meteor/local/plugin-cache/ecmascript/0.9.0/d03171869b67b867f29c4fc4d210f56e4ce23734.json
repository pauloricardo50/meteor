{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/themeteorchef:bert","imported":["Bert"],"specifiers":[{"kind":"named","imported":"Bert","local":"Bert"}]},{"source":"./createMutator","imported":["checkParams"],"specifiers":[{"kind":"named","imported":"checkParams","local":"checkParams"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/mutations/callMutation.js","filenameRelative":"imports/core/api/mutations/callMutation.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/mutations/callMutation.js.map","sourceFileName":"imports/core/api/mutations/callMutation.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"callMutation"},"ignored":false,"code":"\"use strict\";\n\nvar module1 = module;\n\nvar _Meteor = void 0;\n\nmodule1.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _Bert = void 0;\n\nmodule1.watch(require(\"meteor/themeteorchef:bert\"), {\n  Bert: function Bert(v) {\n    _Bert = v;\n  }\n}, 1);\n\nvar _checkParams = void 0;\n\nmodule1.watch(require(\"./createMutator\"), {\n  checkParams: function checkParams(v) {\n    _checkParams = v;\n  }\n}, 2);\n\nvar handleError = function handleError(error, mutationName) {\n  if (_Meteor.isClient) {\n    _Bert.defaults.hideDelay = 7500;\n\n    _Bert.alert({\n      title: 'Misère, une erreur!',\n      message: \"<h3 class=\\\"bert\\\">\" + error.message + \" in \" + mutationName + \"</h3>\",\n      type: 'danger',\n      style: 'fixed-top'\n    });\n  }\n\n  console.log('callMutation error:', error); // Throw the error again so that it can be catched again via promise chaining\n  // All uses of this module should catch and implement proper fail-safe logic\n\n  throw error;\n};\n\nvar callMutation = function callMutation(mutationOptions) {\n  var callParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var name = mutationOptions.name,\n      params = mutationOptions.params;\n\n  _checkParams(callParams, params);\n\n  return new Promise(function (resolve, reject) {\n    _Meteor.call(name, callParams, function (error, result) {\n      if (error) {\n        reject(handleError(error, name));\n      } else {\n        resolve(result);\n      }\n    });\n  });\n};\n\nmodule1.exportDefault(callMutation);","map":{"version":3,"sources":["imports/core/api/mutations/callMutation.js"],"names":["module1","module","Meteor","watch","require","v","Bert","checkParams","handleError","error","mutationName","isClient","defaults","hideDelay","alert","title","message","type","style","console","log","callMutation","mutationOptions","callParams","name","params","Promise","resolve","reject","call","result","exportDefault"],"mappings":";;AAAA,IAAMA,UAAQC,MAAd;;AAAqB,IAAIC,gBAAJ;;AAAWF,QAAQG,KAAR,CAAcC,QAAQ,eAAR,CAAd,EAAuC;AAACF,QAAD,kBAAQG,CAAR,EAAU;AAACH,cAAOG,CAAP;AAAS;AAApB,CAAvC,EAA6D,CAA7D;;AAAgE,IAAIC,cAAJ;;AAASN,QAAQG,KAAR,CAAcC,QAAQ,2BAAR,CAAd,EAAmD;AAACE,MAAD,gBAAMD,CAAN,EAAQ;AAACC,YAAKD,CAAL;AAAO;AAAhB,CAAnD,EAAqE,CAArE;;AAAwE,IAAIE,qBAAJ;;AAAgBP,QAAQG,KAAR,CAAcC,QAAQ,iBAAR,CAAd,EAAyC;AAACG,aAAD,uBAAaF,CAAb,EAAe;AAACE,mBAAYF,CAAZ;AAAc;AAA9B,CAAzC,EAAyE,CAAzE;;AAKjM,IAAMG,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAQC,YAAR,EAAyB;AAC3C,MAAIR,QAAOS,QAAX,EAAqB;AACnBL,UAAKM,QAAL,CAAcC,SAAd,GAA0B,IAA1B;;AACAP,UAAKQ,KAAL,CAAW;AACTC,aAAO,qBADE;AAETC,uCAA6BP,MAAMO,OAAnC,YAAiDN,YAAjD,UAFS;AAGTO,YAAM,QAHG;AAITC,aAAO;AAJE,KAAX;AAMD;;AAEDC,UAAQC,GAAR,CAAY,qBAAZ,EAAmCX,KAAnC,EAX2C,CAY3C;AACA;;AACA,QAAMA,KAAN;AACD,CAfD;;AAiBA,IAAMY,eAAe,SAAfA,YAAe,CAACC,eAAD,EAAsC;AAAA,MAApBC,UAAoB,uEAAP,EAAO;AAAA,MACjDC,IADiD,GAChCF,eADgC,CACjDE,IADiD;AAAA,MAC3CC,MAD2C,GAChCH,eADgC,CAC3CG,MAD2C;;AAEzDlB,eAAYgB,UAAZ,EAAwBE,MAAxB;;AAEA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC1B,YAAO2B,IAAP,CAAYL,IAAZ,EAAkBD,UAAlB,EAA8B,UAACd,KAAD,EAAQqB,MAAR,EAAmB;AAC/C,UAAIrB,KAAJ,EAAW;AACTmB,eAAOpB,YAAYC,KAAZ,EAAmBe,IAAnB,CAAP;AACD,OAFD,MAEO;AACLG,gBAAQG,MAAR;AACD;AACF,KAND;AAOD,GARM,CAAP;AASD,CAbD;;AAtBA9B,QAAQ+B,aAAR,CAqCeV,YArCf","file":"imports/core/api/mutations/callMutation.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Bert } from 'meteor/themeteorchef:bert';\n\nimport { checkParams } from './createMutator';\n\nconst handleError = (error, mutationName) => {\n  if (Meteor.isClient) {\n    Bert.defaults.hideDelay = 7500;\n    Bert.alert({\n      title: 'Misère, une erreur!',\n      message: `<h3 class=\"bert\">${error.message} in ${mutationName}</h3>`,\n      type: 'danger',\n      style: 'fixed-top',\n    });\n  }\n\n  console.log('callMutation error:', error);\n  // Throw the error again so that it can be catched again via promise chaining\n  // All uses of this module should catch and implement proper fail-safe logic\n  throw error;\n};\n\nconst callMutation = (mutationOptions, callParams = {}) => {\n  const { name, params } = mutationOptions;\n  checkParams(callParams, params);\n\n  return new Promise((resolve, reject) => {\n    Meteor.call(name, callParams, (error, result) => {\n      if (error) {\n        reject(handleError(error, name));\n      } else {\n        resolve(result);\n      }\n    });\n  });\n};\n\nexport default callMutation;\n"]},"hash":"d03171869b67b867f29c4fc4d210f56e4ce23734"}
