{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"../../utils/loadable","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loadable"}]},{"source":"react-intl","imported":["FormattedMessage","FormattedDate","FormattedTime","FormattedRelative","FormattedNumber","FormattedPlural"],"specifiers":[{"kind":"named","imported":"FormattedMessage","local":"FormattedMessage"},{"kind":"named","imported":"FormattedDate","local":"FormattedDate"},{"kind":"named","imported":"FormattedTime","local":"FormattedTime"},{"kind":"named","imported":"FormattedRelative","local":"FormattedRelative"},{"kind":"named","imported":"FormattedNumber","local":"FormattedNumber"},{"kind":"named","imported":"FormattedPlural","local":"FormattedPlural"}]},{"source":"./AutoTooltip","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AutoTooltip"}]}],"exports":{"exported":["T","IntlDate","IntlNumber"],"specifiers":[{"kind":"local","local":"T","exported":"T"},{"kind":"local","local":"IntlDate","exported":"IntlDate"},{"kind":"local","local":"IntlNumber","exported":"IntlNumber"}]}}},"options":{"filename":"imports/core/components/Translation/Translation.jsx","filenameRelative":"imports/core/components/Translation/Translation.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/Translation/Translation.jsx.map","sourceFileName":"imports/core/components/Translation/Translation.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Translation"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.T = undefined;\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  T: function T() {\n    return _T;\n  },\n  IntlDate: function IntlDate() {\n    return _IntlDate;\n  },\n  IntlNumber: function IntlNumber() {\n    return _IntlNumber;\n  }\n});\n\nvar React = void 0,\n    _Component = void 0;\n\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  },\n  Component: function Component(v) {\n    _Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Loadable = void 0;\nexports.T = _T;\nmodule.watch(require(\"../../utils/loadable\"), {\n  default: function _default(v) {\n    Loadable = v;\n  }\n}, 2);\n\nvar _FormattedMessage = void 0,\n    _FormattedDate = void 0,\n    _FormattedTime = void 0,\n    _FormattedRelative = void 0,\n    _FormattedNumber = void 0,\n    _FormattedPlural = void 0;\n\nmodule.watch(require(\"react-intl\"), {\n  FormattedMessage: function FormattedMessage(v) {\n    _FormattedMessage = v;\n  },\n  FormattedDate: function FormattedDate(v) {\n    _FormattedDate = v;\n  },\n  FormattedTime: function FormattedTime(v) {\n    _FormattedTime = v;\n  },\n  FormattedRelative: function FormattedRelative(v) {\n    _FormattedRelative = v;\n  },\n  FormattedNumber: function FormattedNumber(v) {\n    _FormattedNumber = v;\n  },\n  FormattedPlural: function FormattedPlural(v) {\n    _FormattedPlural = v;\n  }\n}, 3);\nvar AutoTooltip = void 0;\nmodule.watch(require(\"./AutoTooltip\"), {\n  default: function _default(v) {\n    AutoTooltip = v;\n  }\n}, 4);\n\n/**\n * T - A wrapper around react-intl's Formatted Message, it\n * automatically adds tooltips if they exist.\n * It is only rerendered if the id changes\n * @extends Component\n */var _T = function (_Component2) {\n  (0, _inherits3.default)(_T, _Component2);\n\n  function _T() {\n    (0, _classCallCheck3.default)(this, _T);\n    return (0, _possibleConstructorReturn3.default)(this, (_T.__proto__ || Object.getPrototypeOf(_T)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(_T, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          noTooltips = _props.noTooltips,\n          id = _props.id,\n          values = _props.values,\n          tooltipId = _props.tooltipId,\n          tooltipPlacement = _props.tooltipPlacement,\n          tooltipDelay = _props.tooltipDelay;\n\n      if (noTooltips) {\n        return React.createElement(_FormattedMessage, this.props);\n      } else if (typeof id !== 'string') {\n        return id;\n      } // formattedMessage provides an array of values in the children function.\n      // When there is more than a simple string to render, for example a rich\n      // HTML element was added as a values prop, then it returns several values\n      // To avoid unnecessary spans, separate those with a single message\n      // and those, rare, with more.\n\n\n      var Auto = function Auto(content, key) {\n        return React.createElement(\n          AutoTooltip,\n          (0, _extends3.default)({}, _this2.props, {\n            id: tooltipId,\n            placement: tooltipPlacement,\n            delay: tooltipDelay,\n            key: key\n          }),\n          content\n        );\n      };\n\n      return React.createElement(\n        _FormattedMessage,\n        {\n          id: id,\n          values: (0, _extends3.default)({}, values, {\n            verticalSpace: React.createElement(\n              \"span\",\n              null,\n              React.createElement(\"br\", null),\n              React.createElement(\"br\", null)\n            )\n          })\n        },\n        function () {\n          for (var _len = arguments.length, formattedMessage = Array(_len), _key = 0; _key < _len; _key++) {\n            formattedMessage[_key] = arguments[_key];\n          }\n\n          return formattedMessage.length === 1 ? Auto(formattedMessage[0]) : React.createElement(\n            \"span\",\n            null,\n            formattedMessage.map(function (msg, i) {\n              return Auto(msg, i);\n            })\n          );\n        }\n      );\n    }\n  }]);\n  return _T;\n}(_Component);\n\n_T.propTypes = {\n  id: PropTypes.string.isRequired,\n  noTooltips: PropTypes.bool,\n  tooltipId: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  tooltipPlacement: PropTypes.string\n};\n_T.defaultProps = {\n  noTooltips: false,\n  tooltipId: undefined,\n  tooltipPlacement: undefined\n};\n\nvar _IntlDate = function _IntlDate(props) {\n  switch (props.type) {\n    case 'time':\n      return React.createElement(_FormattedTime, props);\n\n    case 'relative':\n      return React.createElement(_FormattedRelative, props);\n\n    default:\n      return React.createElement(_FormattedDate, props);\n  }\n};\n\nvar _IntlNumber = function _IntlNumber(props) {\n  // If this is passed something else than a number, render the value directly\n  if (typeof props.value !== 'number') {\n    return props.value || null;\n  }\n\n  switch (props.type) {\n    case 'plural':\n      return React.createElement(_FormattedPlural, props);\n\n    default:\n      return React.createElement(_FormattedNumber, props);\n  }\n};","map":{"version":3,"sources":["imports/core/components/Translation/Translation.jsx"],"names":["module","export","T","IntlDate","IntlNumber","React","Component","watch","require","default","v","PropTypes","Loadable","FormattedMessage","FormattedDate","FormattedTime","FormattedRelative","FormattedNumber","FormattedPlural","AutoTooltip","props","noTooltips","id","values","tooltipId","tooltipPlacement","tooltipDelay","Auto","content","key","verticalSpace","formattedMessage","length","map","msg","i","propTypes","string","isRequired","bool","oneOfType","arrayOf","defaultProps","undefined","type","value"],"mappings":"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","file":"imports/core/components/Translation/Translation.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Loadable from 'core/utils/loadable';\n\n// const {\n//   FormattedMessage,\n//   FormattedDate,\n//   FormattedTime,\n//   FormattedRelative,\n//   FormattedNumber,\n//   FormattedPlural,\n// } = Loadable({ loader: () => import('react-intl') });\nimport {\n  FormattedMessage,\n  FormattedDate,\n  FormattedTime,\n  FormattedRelative,\n  FormattedNumber,\n  FormattedPlural,\n} from 'react-intl';\n\nimport AutoTooltip from './AutoTooltip';\n\n/**\n * T - A wrapper around react-intl's Formatted Message, it\n * automatically adds tooltips if they exist.\n * It is only rerendered if the id changes\n * @extends Component\n */\nexport class T extends Component {\n  render() {\n    const {\n      noTooltips,\n      id,\n      values,\n      tooltipId,\n      tooltipPlacement,\n      tooltipDelay,\n    } = this.props;\n\n    if (noTooltips) {\n      return <FormattedMessage {...this.props} />;\n    } else if (typeof id !== 'string') {\n      return id;\n    }\n\n    // formattedMessage provides an array of values in the children function.\n    // When there is more than a simple string to render, for example a rich\n    // HTML element was added as a values prop, then it returns several values\n    // To avoid unnecessary spans, separate those with a single message\n    // and those, rare, with more.\n    const Auto = (content, key) => (\n      <AutoTooltip\n        {...this.props}\n        id={tooltipId}\n        placement={tooltipPlacement}\n        delay={tooltipDelay}\n        key={key}\n      >\n        {content}\n      </AutoTooltip>\n    );\n\n    return (\n      <FormattedMessage\n        id={id}\n        values={{\n          ...values,\n          verticalSpace: (\n            <span>\n              <br />\n              <br />\n            </span>\n          ),\n        }}\n      >\n        {(...formattedMessage) =>\n          (formattedMessage.length === 1 ? (\n            Auto(formattedMessage[0])\n          ) : (\n            <span>{formattedMessage.map((msg, i) => Auto(msg, i))}</span>\n          ))\n        }\n      </FormattedMessage>\n    );\n  }\n}\n\nT.propTypes = {\n  id: PropTypes.string.isRequired,\n  noTooltips: PropTypes.bool,\n  tooltipId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  tooltipPlacement: PropTypes.string,\n};\n\nT.defaultProps = {\n  noTooltips: false,\n  tooltipId: undefined,\n  tooltipPlacement: undefined,\n};\n\nexport const IntlDate = (props) => {\n  switch (props.type) {\n  case 'time':\n    return <FormattedTime {...props} />;\n  case 'relative':\n    return <FormattedRelative {...props} />;\n  default:\n    return <FormattedDate {...props} />;\n  }\n};\n\nexport const IntlNumber = (props) => {\n  // If this is passed something else than a number, render the value directly\n  if (typeof props.value !== 'number') {\n    return props.value || null;\n  }\n\n  switch (props.type) {\n  case 'plural':\n    return <FormattedPlural {...props} />;\n  default:\n    return <FormattedNumber {...props} />;\n  }\n};\n"]},"hash":"1adec33fdaa265145b9d36dcc415aa4f1435b220"}
