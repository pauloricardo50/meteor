{"metadata":{"usedHelpers":["extends","defineProperty","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"simpl-schema","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SimpleSchema"}]},{"source":"../constants","imported":["INTEREST_RATES","CANTONS"],"specifiers":[{"kind":"named","imported":"INTEREST_RATES","local":"INTEREST_RATES"},{"kind":"named","imported":"CANTONS","local":"CANTONS"}]}],"exports":{"exported":["OfferSchema"],"specifiers":[{"kind":"local","local":"OfferSchema","exported":"OfferSchema"}]}}},"options":{"filename":"imports/core/api/offers/offers.js","filenameRelative":"imports/core/api/offers/offers.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/offers/offers.js.map","sourceFileName":"imports/core/api/offers/offers.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"offers"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OfferSchema = undefined;\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends3 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends4 = _interopRequireDefault(_extends3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  OfferSchema: function OfferSchema() {\n    return _OfferSchema;\n  }\n});\n\nvar _Mongo = void 0;\n\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function Mongo(v) {\n    _Mongo = v;\n  }\n}, 0);\nvar SimpleSchema = void 0;\nmodule.watch(require(\"simpl-schema\"), {\n  default: function _default(v) {\n    SimpleSchema = v;\n  }\n}, 1);\n\nvar _INTEREST_RATES = void 0,\n    _CANTONS = void 0;\n\nmodule.watch(require(\"../constants\"), {\n  INTEREST_RATES: function INTEREST_RATES(v) {\n    _INTEREST_RATES = v;\n  },\n  CANTONS: function CANTONS(v) {\n    _CANTONS = v;\n  }\n}, 2);\nvar Offers = new _Mongo.Collection('offers'); // Prevent all client side modifications of mongoDB\n\nexports.OfferSchema = _OfferSchema;\nOffers.deny({\n  insert: function insert() {\n    return true;\n  },\n  update: function update() {\n    return true;\n  },\n  remove: function remove() {\n    return true;\n  }\n});\nOffers.allow({\n  insert: function insert() {\n    return false;\n  },\n  update: function update() {\n    return false;\n  },\n  remove: function remove() {\n    return false;\n  }\n});\nvar singleOffer = new SimpleSchema((0, _extends4.default)({\n  maxAmount: {\n    type: Number,\n    min: 0,\n    max: 100000000\n  },\n  amortization: {\n    type: Number\n  }\n}, Object.values(_INTEREST_RATES).reduce(function (object, interestKey) {\n  return (0, _extends4.default)({}, object, (0, _defineProperty3.default)({}, interestKey, {\n    type: Number,\n    min: 0,\n    max: 100,\n    optional: true\n  }));\n}, {})));\n\nvar _OfferSchema = new SimpleSchema({\n  loanId: {\n    type: String\n  },\n  userId: {\n    type: String\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      }\n    }\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function autoValue() {\n      if (this.isInsert || this.isUpdate) {\n        return new Date();\n      }\n    }\n  },\n  isAdmin: {\n    type: Boolean,\n    defaultValue: false\n  },\n  organization: String,\n  canton: {\n    type: String,\n    allowedValues: Object.keys(_CANTONS)\n  },\n  auctionEndTime: {\n    type: Date,\n    optional: true\n  },\n  standardOffer: {\n    type: singleOffer\n  },\n  counterpartOffer: {\n    type: singleOffer,\n    optional: true\n  },\n  counterparts: {\n    type: Array,\n    defaultValue: [],\n    optional: true\n  },\n  'counterparts.$': String,\n  conditions: {\n    type: Array,\n    defaultValue: []\n  },\n  'conditions.$': String\n}); // Attach schema\n\n\nOffers.attachSchema(_OfferSchema);\nmodule.exportDefault(Offers);","map":{"version":3,"sources":["imports/core/api/offers/offers.js"],"names":["module","export","OfferSchema","Mongo","watch","require","v","SimpleSchema","default","INTEREST_RATES","CANTONS","Offers","Collection","deny","insert","update","remove","allow","singleOffer","maxAmount","type","Number","min","max","amortization","Object","values","reduce","object","interestKey","optional","loanId","String","userId","createdAt","Date","autoValue","isInsert","updatedAt","isUpdate","isAdmin","Boolean","defaultValue","organization","canton","allowedValues","keys","auctionEndTime","standardOffer","counterpartOffer","counterparts","Array","conditions","attachSchema","exportDefault"],"mappings":"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","file":"imports/core/api/offers/offers.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\nimport { INTEREST_RATES, CANTONS } from '../constants';\n\nconst Offers = new Mongo.Collection('offers');\n\n// Prevent all client side modifications of mongoDB\nOffers.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\nOffers.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nconst singleOffer = new SimpleSchema({\n  maxAmount: {\n    type: Number,\n    min: 0,\n    max: 100000000,\n  },\n  amortization: {\n    type: Number,\n  },\n  // For each existing rate, insert an allowed value in the schema\n  ...Object.values(INTEREST_RATES).reduce(\n    (object, interestKey) => ({\n      ...object,\n      [interestKey]: {\n        type: Number,\n        min: 0,\n        max: 100,\n        optional: true,\n      },\n    }),\n    {},\n  ),\n});\n\nexport const OfferSchema = new SimpleSchema({\n  loanId: {\n    type: String,\n  },\n  userId: {\n    type: String,\n  },\n  createdAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      }\n    },\n  },\n  updatedAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert || this.isUpdate) {\n        return new Date();\n      }\n    },\n  },\n  isAdmin: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  organization: String,\n  canton: {\n    type: String,\n    allowedValues: Object.keys(CANTONS),\n  },\n  auctionEndTime: {\n    type: Date,\n    optional: true,\n  },\n  standardOffer: {\n    type: singleOffer,\n  },\n  counterpartOffer: {\n    type: singleOffer,\n    optional: true,\n  },\n  counterparts: {\n    type: Array,\n    defaultValue: [],\n    optional: true,\n  },\n  'counterparts.$': String,\n  conditions: {\n    type: Array,\n    defaultValue: [],\n  },\n  'conditions.$': String,\n});\n\n// Attach schema\nOffers.attachSchema(OfferSchema);\nexport default Offers;\n"]},"hash":"92fcacf3068aff9029e4a6f09750c493b8c547c3"}
