{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-intl","imported":["injectIntl"],"specifiers":[{"kind":"named","imported":"injectIntl","local":"injectIntl"}]},{"source":"react-highcharts","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactHighcharts"}]},{"source":"../../utils/finance-math","imported":["getInterests","getAmortization"],"specifiers":[{"kind":"named","imported":"getInterests","local":"getInterests"},{"kind":"named","imported":"getAmortization","local":"getAmortization"}]},{"source":"../../utils/loanFunctions","imported":["getInterestsWithOffer"],"specifiers":[{"kind":"named","imported":"getInterestsWithOffer","local":"getInterestsWithOffer"}]},{"source":"../../config/colors","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"colors"}]},{"source":"../../containers/withLoan","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"withLoan"}]},{"source":"./chartSettings","imported":["legendConfig"],"specifiers":[{"kind":"named","imported":"legendConfig","local":"legendConfig"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/charts/ExpensesChart.jsx","filenameRelative":"imports/core/components/charts/ExpensesChart.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/charts/ExpensesChart.jsx.map","sourceFileName":"imports/core/components/charts/ExpensesChart.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ExpensesChart"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 0);\n\nvar React = void 0,\n    _Component = void 0;\n\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  },\n  Component: function Component(v) {\n    _Component = v;\n  }\n}, 1);\n\nvar _injectIntl = void 0;\n\nmodule.watch(require(\"react-intl\"), {\n  injectIntl: function injectIntl(v) {\n    _injectIntl = v;\n  }\n}, 2);\nvar ReactHighcharts = void 0;\nmodule.watch(require(\"react-highcharts\"), {\n  default: function _default(v) {\n    ReactHighcharts = v;\n  }\n}, 3);\n\nvar _getInterests = void 0,\n    _getAmortization = void 0;\n\nmodule.watch(require(\"../../utils/finance-math\"), {\n  getInterests: function getInterests(v) {\n    _getInterests = v;\n  },\n  getAmortization: function getAmortization(v) {\n    _getAmortization = v;\n  }\n}, 4);\n\nvar _getInterestsWithOffer = void 0;\n\nmodule.watch(require(\"../../utils/loanFunctions\"), {\n  getInterestsWithOffer: function getInterestsWithOffer(v) {\n    _getInterestsWithOffer = v;\n  }\n}, 5);\nvar colors = void 0;\nmodule.watch(require(\"../../config/colors\"), {\n  default: function _default(v) {\n    colors = v;\n  }\n}, 6);\nvar withLoan = void 0;\nmodule.watch(require(\"../../containers/withLoan\"), {\n  default: function _default(v) {\n    withLoan = v;\n  }\n}, 7);\n\nvar _legendConfig = void 0;\n\nmodule.watch(require(\"./chartSettings\"), {\n  legendConfig: function legendConfig(v) {\n    _legendConfig = v;\n  }\n}, 8);\nvar chartColors = {\n  interest: colors.charts[0],\n  amortization: colors.charts[1],\n  maintenance: colors.charts[2]\n};\n\nvar update = function update(that) {\n  var _that$state = that.state,\n      interests = _that$state.interests,\n      amortization = _that$state.amortization,\n      maintenance = _that$state.maintenance;\n  var total = interests + amortization + maintenance;\n  var showLabels = interests && amortization && maintenance;\n  var f = that.props.intl.formatMessage;\n  var fN = that.props.intl.formatNumber;\n  that.chart.getChart().update({\n    title: {\n      text: fN(Math.round(total), {\n        format: 'money'\n      }) + \"<br>par mois*\"\n    },\n    tooltip: {\n      formatter: function formatter() {\n        var y = this.y,\n            color = this.color,\n            key = this.key;\n        var value = fN(Math.round(y), {\n          format: 'money'\n        });\n        var percent = fN(y / total, {\n          format: 'percentage'\n        });\n        return \"<span style=\\\"color:\" + color + \"\\\">\\u25CF</span> \" + key + \"<br /> <b>\" + value + \"</b><br />\" + percent;\n      }\n    },\n    series: [{\n      data: [{\n        name: f({\n          id: 'general.interests'\n        }),\n        y: interests,\n        id: 'interests'\n      }, {\n        name: f({\n          id: 'general.amortization'\n        }),\n        y: amortization,\n        id: 'amortization'\n      }, {\n        name: f({\n          id: 'general.buildingMaintenance'\n        }),\n        y: maintenance,\n        id: 'maintenance'\n      }]\n    }],\n    // Add the responsive object again to be able to hide datalabels if the values are updated to 0,\n    // which looks horrible on the chart\n    responsive: {\n      rules: [{\n        condition: {\n          maxWidth: 768\n        },\n        chartOptions: {\n          plotOptions: {\n            pie: {\n              dataLabels: {\n                enabled: false\n              },\n              showInLegend: true\n            }\n          }\n        }\n      }, {\n        condition: {\n          minWidth: 769\n        },\n        chartOptions: {\n          plotOptions: {\n            pie: {\n              dataLabels: {\n                enabled: that.props.showLegend !== false || showLabels\n              },\n              showInLegend: that.props.showLegend || false\n            }\n          }\n        }\n      }]\n    }\n  });\n};\n\nvar ExpensesChart = function (_Component2) {\n  (0, _inherits3.default)(ExpensesChart, _Component2);\n\n  function ExpensesChart(props) {\n    (0, _classCallCheck3.default)(this, ExpensesChart);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (ExpensesChart.__proto__ || Object.getPrototypeOf(ExpensesChart)).call(this, props));\n\n    _this.getConfig = function () {\n      var total = _this.state.interests + _this.state.amortization + _this.state.maintenance;\n      var that = _this;\n      var f = _this.props.intl.formatMessage;\n      var fN = _this.props.intl.formatNumber;\n      var options = {\n        chart: (0, _extends3.default)({\n          type: 'pie',\n          style: {\n            fontFamily: 'Source Sans Pro'\n          }\n        }, !_this.props.title && {\n          spacingTop: 0\n        }, !_this.props.title && {\n          marginTop: 0\n        }, {\n          events: {\n            load: function load() {\n              // adjustLegend(this);\n              that.addTitle(this);\n            },\n            redraw: function redraw() {\n              // adjustLegend(this);\n              that.addTitle(this);\n            }\n          },\n          spacingBottom: 0\n        }),\n        tooltip: {\n          formatter: function formatter() {\n            var y = this.y,\n                color = this.color,\n                key = this.key;\n            var value = fN(Math.round(y), {\n              format: 'money'\n            });\n            var percent = fN(y / total, {\n              format: 'percentage'\n            });\n            return \"<span style=\\\"color:\" + color + \"\\\">\\u25CF</span> \" + key + \"<br /> <b>\" + value + \"</b><br />\" + percent;\n          },\n          style: {\n            fontSize: '14px'\n          }\n        },\n        plotOptions: {\n          pie: {\n            size: '100%',\n            borderWidth: 0,\n            allowPointSelect: false,\n            cursor: 'pointer',\n            dataLabels: {\n              overflow: 'visible',\n              crop: false,\n              enabled: true,\n              distance: 10,\n              format: '<span class=\"bold\">{point.name}</span><br />CHF {point.y:,.0f}',\n              style: {\n                color: '#333',\n                fontSize: '14px',\n                fontWeight: 400,\n                overflow: 'visible'\n              }\n            },\n            showInLegend: false\n          }\n        },\n        legend: (0, _extends3.default)({}, _legendConfig),\n        series: [{\n          type: 'pie',\n          innerSize: '60%',\n          colorByPoint: true,\n          data: [{\n            name: f({\n              id: 'general.interests'\n            }),\n            y: _this.state.interests,\n            id: 'interests'\n          }, {\n            name: f({\n              id: 'general.amortization'\n            }),\n            y: _this.state.amortization,\n            id: 'amortization'\n          }, {\n            name: f({\n              id: 'general.buildingMaintenance'\n            }),\n            y: _this.state.maintenance,\n            id: 'maintenance'\n          }]\n        }],\n        colors: [chartColors.interest, chartColors.amortization, chartColors.maintenance],\n        lang: {\n          thousandsSep: \"'\"\n        },\n        credits: {\n          enabled: false\n        },\n        responsive: {\n          rules: [{\n            condition: {\n              maxWidth: 768\n            },\n            chartOptions: {\n              plotOptions: {\n                pie: {\n                  dataLabels: {\n                    enabled: false\n                  },\n                  showInLegend: true\n                }\n              }\n            }\n          }, {\n            condition: {\n              minWidth: 769\n            },\n            chartOptions: {\n              plotOptions: {\n                pie: {\n                  dataLabels: {\n                    enabled: _this.props.showLegend !== false || true\n                  },\n                  showInLegend: _this.props.showLegend || false\n                }\n              }\n            }\n          }]\n        }\n      };\n      return options;\n    };\n\n    _this.addTitle = function (that) {\n      var total = _this.state.interests + _this.state.amortization + _this.state.maintenance;\n      var f = _this.props.intl.formatMessage;\n      var fN = _this.props.intl.formatNumber;\n\n      if (that.title) {\n        that.title.destroy();\n      }\n\n      var r = that.renderer;\n      var x = that.series[0].center[0] + that.plotLeft;\n      var y = that.series[0].center[1] + that.plotTop;\n      var perMonth = f({\n        id: 'ExpensesChart.perMonth'\n      });\n      that.title = r.text(fN(Math.round(total), {\n        format: 'money'\n      }) + \"<br><span style=\\\"font-size: 14px;\\\" class=\\\"no-bold\\\">\" + perMonth + \"*</span>\", 0, 0).css({\n        color: '#333333',\n        fontSize: '16px',\n        fontWeight: 400\n      }).hide().add();\n      var bbox = that.title.getBBox();\n      that.title.attr({\n        x: x - bbox.width / 2,\n        y: y\n      }).show();\n\n      if (_this.props.title) {\n        if (_this.secondTitle) {\n          _this.secondTitle.destroy();\n        }\n\n        _this.secondTitle = r.text(f({\n          id: _this.props.title\n        }), 0, 20).css({\n          color: '#222',\n          fontSize: '18px',\n          fontWeight: 400\n        }).add();\n\n        var bbox2 = _this.secondTitle.getBBox();\n\n        if (_this.props.titleAlign === 'left') {\n          _this.secondTitle.attr({\n            x: 10\n          }); // the default spacing of highchartss\n\n        } else {\n          _this.secondTitle.attr({\n            x: x - bbox2.width / 2\n          });\n        }\n      }\n    };\n\n    if (_this.props.loan) {\n      var realRate = 0;\n\n      if (_this.props.loan.logic.lender && _this.props.loan.logic.lender.offerId) {\n        var offer = _this.props.offers.find(function (o) {\n          return o._id === _this.props.loan.logic.lender.offerId;\n        });\n\n        if (offer) {\n          realRate = _getInterestsWithOffer({\n            loan: _this.props.loan,\n            offer: offer\n          }, false);\n        }\n      }\n\n      _this.state = {\n        interests: realRate || _getInterests(props, _this.props.interestRate),\n        amortization: _getAmortization(_this.props).amortization,\n        maintenance: _this.props.property.value * 0.01 / 12\n      };\n    } else {\n      _this.state = {\n        interests: props.interests,\n        amortization: props.amortization,\n        maintenance: props.maintenance\n      };\n    }\n\n    return _this;\n  }\n\n  (0, _createClass3.default)(ExpensesChart, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(n) {\n      var _this2 = this;\n\n      var p = this.props;\n\n      if (n.interests !== p.interests || n.amortization !== p.amortization || n.maintenance !== p.maintenance || n.loan !== p.loan || n.interestRate !== p.interestRate) {\n        if (this.props.loan) {\n          this.setState({\n            interests: _getInterests(n, n.interestRate),\n            amortization: _getAmortization(n).amortization,\n            maintenance: n.property.value * 0.01 / 12\n          }, function () {\n            return update(_this2);\n          });\n        } else {\n          this.setState({\n            interests: n.interests,\n            amortization: n.amortization,\n            maintenance: n.maintenance\n          }, function () {\n            return update(_this2);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\n        \"div\",\n        {\n          id: \"expensesChart\"\n        },\n        React.createElement(ReactHighcharts, {\n          config: this.getConfig(),\n          ref: function ref(c) {\n            _this3.chart = c;\n          },\n          neverReflow: true,\n          isPureConfig: true\n        })\n      );\n    }\n  }]);\n  return ExpensesChart;\n}(_Component);\n\nExpensesChart.defaultProps = {\n  loan: undefined,\n  interests: 0,\n  amortization: 0,\n  maintenance: 0,\n  interestRate: 0.015,\n  showLegend: false,\n  title: undefined\n};\nExpensesChart.propTypes = {\n  loan: PropTypes.objectOf(PropTypes.any),\n  property: PropTypes.objectOf(PropTypes.any),\n  interests: PropTypes.number,\n  amortization: PropTypes.number,\n  maintenance: PropTypes.number,\n  interestRate: PropTypes.number,\n  showLegend: PropTypes.bool,\n  title: PropTypes.string\n};\nmodule.exportDefault(_injectIntl(withLoan(ExpensesChart)));","map":{"version":3,"sources":["imports/core/components/charts/ExpensesChart.jsx"],"names":["PropTypes","module","watch","require","default","v","React","Component","injectIntl","ReactHighcharts","getInterests","getAmortization","getInterestsWithOffer","colors","withLoan","legendConfig","chartColors","interest","charts","amortization","maintenance","update","that","state","interests","total","showLabels","f","props","intl","formatMessage","fN","formatNumber","chart","getChart","title","text","Math","round","format","tooltip","formatter","y","color","key","value","percent","series","data","name","id","responsive","rules","condition","maxWidth","chartOptions","plotOptions","pie","dataLabels","enabled","showInLegend","minWidth","showLegend","ExpensesChart","getConfig","options","type","style","fontFamily","spacingTop","marginTop","events","load","addTitle","redraw","spacingBottom","fontSize","size","borderWidth","allowPointSelect","cursor","overflow","crop","distance","fontWeight","legend","innerSize","colorByPoint","lang","thousandsSep","credits","destroy","r","renderer","x","center","plotLeft","plotTop","perMonth","css","hide","add","bbox","getBBox","attr","width","show","secondTitle","bbox2","titleAlign","loan","realRate","logic","lender","offerId","offer","offers","find","o","_id","interestRate","property","n","p","setState","c","defaultProps","undefined","propTypes","objectOf","any","number","bool","string","exportDefault"],"mappings":"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","file":"imports/core/components/charts/ExpensesChart.jsx.map","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { injectIntl } from 'react-intl';\nimport ReactHighcharts from 'react-highcharts';\n\nimport { getInterests, getAmortization } from 'core/utils/finance-math';\nimport { getInterestsWithOffer } from 'core/utils/loanFunctions';\nimport colors from 'core/config/colors';\nimport withLoan from 'core/containers/withLoan';\n\nimport { legendConfig } from './chartSettings';\n\nconst chartColors = {\n  interest: colors.charts[0],\n  amortization: colors.charts[1],\n  maintenance: colors.charts[2],\n};\n\nconst update = (that) => {\n  const { interests, amortization, maintenance } = that.state;\n  const total = interests + amortization + maintenance;\n  const showLabels = interests && amortization && maintenance;\n  const f = that.props.intl.formatMessage;\n  const fN = that.props.intl.formatNumber;\n\n  that.chart.getChart().update({\n    title: {\n      text: `${fN(Math.round(total), { format: 'money' })}<br>par mois*`,\n    },\n    tooltip: {\n      formatter() {\n        const { y, color, key } = this;\n        const value = fN(Math.round(y), { format: 'money' });\n        const percent = fN(y / total, { format: 'percentage' });\n        return `<span style=\"color:${color}\">\\u25CF</span> ${key}<br /> <b>${value}</b><br />${percent}`;\n      },\n    },\n    series: [\n      {\n        data: [\n          {\n            name: f({ id: 'general.interests' }),\n            y: interests,\n            id: 'interests',\n          },\n          {\n            name: f({ id: 'general.amortization' }),\n            y: amortization,\n            id: 'amortization',\n          },\n          {\n            name: f({ id: 'general.buildingMaintenance' }),\n            y: maintenance,\n            id: 'maintenance',\n          },\n        ],\n      },\n    ],\n    // Add the responsive object again to be able to hide datalabels if the values are updated to 0,\n    // which looks horrible on the chart\n    responsive: {\n      rules: [\n        {\n          condition: { maxWidth: 768 },\n          chartOptions: {\n            plotOptions: {\n              pie: { dataLabels: { enabled: false }, showInLegend: true },\n            },\n          },\n        },\n        {\n          condition: { minWidth: 769 },\n          chartOptions: {\n            plotOptions: {\n              pie: {\n                dataLabels: {\n                  enabled: that.props.showLegend !== false || showLabels,\n                },\n                showInLegend: that.props.showLegend || false,\n              },\n            },\n          },\n        },\n      ],\n    },\n  });\n};\n\nclass ExpensesChart extends Component {\n  constructor(props) {\n    super(props);\n\n    if (this.props.loan) {\n      let realRate = 0;\n      if (\n        this.props.loan.logic.lender &&\n        this.props.loan.logic.lender.offerId\n      ) {\n        const offer = this.props.offers.find(o => o._id === this.props.loan.logic.lender.offerId);\n        if (offer) {\n          realRate = getInterestsWithOffer(\n            {\n              loan: this.props.loan,\n              offer,\n            },\n            false,\n          );\n        }\n      }\n\n      this.state = {\n        interests: realRate || getInterests(props, this.props.interestRate),\n        amortization: getAmortization(this.props).amortization,\n        maintenance: this.props.property.value * 0.01 / 12,\n      };\n    } else {\n      this.state = {\n        interests: props.interests,\n        amortization: props.amortization,\n        maintenance: props.maintenance,\n      };\n    }\n  }\n\n  componentWillReceiveProps(n) {\n    const p = this.props;\n\n    if (\n      n.interests !== p.interests ||\n      n.amortization !== p.amortization ||\n      n.maintenance !== p.maintenance ||\n      n.loan !== p.loan ||\n      n.interestRate !== p.interestRate\n    ) {\n      if (this.props.loan) {\n        this.setState(\n          {\n            interests: getInterests(n, n.interestRate),\n            amortization: getAmortization(n).amortization,\n            maintenance: n.property.value * 0.01 / 12,\n          },\n          () => update(this),\n        );\n      } else {\n        this.setState(\n          {\n            interests: n.interests,\n            amortization: n.amortization,\n            maintenance: n.maintenance,\n          },\n          () => update(this),\n        );\n      }\n    }\n  }\n\n  getConfig = () => {\n    const total =\n      this.state.interests + this.state.amortization + this.state.maintenance;\n    const that = this;\n    const f = this.props.intl.formatMessage;\n    const fN = this.props.intl.formatNumber;\n\n    const options = {\n      chart: {\n        type: 'pie',\n        style: { fontFamily: 'Source Sans Pro' },\n        // animation: { duration: 400 },\n        ...(!this.props.title && { spacingTop: 0 }),\n        ...(!this.props.title && { marginTop: 0 }),\n        events: {\n          load() {\n            // adjustLegend(this);\n            that.addTitle(this);\n          },\n          redraw() {\n            // adjustLegend(this);\n            that.addTitle(this);\n          },\n        },\n        spacingBottom: 0,\n      },\n      tooltip: {\n        formatter() {\n          const { y, color, key } = this;\n          const value = fN(Math.round(y), { format: 'money' });\n          const percent = fN(y / total, { format: 'percentage' });\n\n          return `<span style=\"color:${color}\">\\u25CF</span> ${key}<br /> <b>${value}</b><br />${percent}`;\n        },\n        style: { fontSize: '14px' },\n      },\n      plotOptions: {\n        pie: {\n          size: '100%',\n          borderWidth: 0,\n          allowPointSelect: false,\n          cursor: 'pointer',\n          dataLabels: {\n            overflow: 'visible',\n            crop: false,\n            enabled: true,\n            distance: 10,\n            format:\n              '<span class=\"bold\">{point.name}</span><br />CHF {point.y:,.0f}',\n            style: {\n              color: '#333',\n              fontSize: '14px',\n              fontWeight: 400,\n              overflow: 'visible',\n            },\n          },\n          showInLegend: false,\n        },\n      },\n      legend: {\n        ...legendConfig,\n        // reversed: true,\n      },\n      series: [\n        {\n          type: 'pie',\n          innerSize: '60%',\n          colorByPoint: true,\n          data: [\n            {\n              name: f({ id: 'general.interests' }),\n              y: this.state.interests,\n              id: 'interests',\n            },\n            {\n              name: f({ id: 'general.amortization' }),\n              y: this.state.amortization,\n              id: 'amortization',\n            },\n            {\n              name: f({ id: 'general.buildingMaintenance' }),\n              y: this.state.maintenance,\n              id: 'maintenance',\n            },\n          ],\n        },\n      ],\n      colors: [\n        chartColors.interest,\n        chartColors.amortization,\n        chartColors.maintenance,\n      ],\n      lang: { thousandsSep: \"'\" },\n      credits: { enabled: false },\n      responsive: {\n        rules: [\n          {\n            condition: { maxWidth: 768 },\n            chartOptions: {\n              plotOptions: {\n                pie: { dataLabels: { enabled: false }, showInLegend: true },\n              },\n            },\n          },\n          {\n            condition: { minWidth: 769 },\n            chartOptions: {\n              plotOptions: {\n                pie: {\n                  dataLabels: {\n                    enabled: this.props.showLegend !== false || true,\n                  },\n                  showInLegend: this.props.showLegend || false,\n                },\n              },\n            },\n          },\n        ],\n      },\n    };\n\n    return options;\n  };\n\n  addTitle = (that) => {\n    const total =\n      this.state.interests + this.state.amortization + this.state.maintenance;\n    const f = this.props.intl.formatMessage;\n    const fN = this.props.intl.formatNumber;\n\n    if (that.title) {\n      that.title.destroy();\n    }\n\n    const r = that.renderer;\n    const x = that.series[0].center[0] + that.plotLeft;\n    const y = that.series[0].center[1] + that.plotTop;\n    const perMonth = f({ id: 'ExpensesChart.perMonth' });\n    that.title = r\n      .text(\n        `${fN(Math.round(total), {\n          format: 'money',\n        })}<br><span style=\"font-size: 14px;\" class=\"no-bold\">${perMonth}*</span>`,\n        0,\n        0,\n      )\n      .css({\n        color: '#333333',\n        fontSize: '16px',\n        fontWeight: 400,\n      })\n      .hide()\n      .add();\n\n    const bbox = that.title.getBBox();\n    that.title.attr({ x: x - bbox.width / 2, y }).show();\n\n    if (this.props.title) {\n      if (this.secondTitle) {\n        this.secondTitle.destroy();\n      }\n\n      this.secondTitle = r\n        .text(f({ id: this.props.title }), 0, 20)\n        .css({\n          color: '#222',\n          fontSize: '18px',\n          fontWeight: 400,\n        })\n        .add();\n\n      const bbox2 = this.secondTitle.getBBox();\n\n      if (this.props.titleAlign === 'left') {\n        this.secondTitle.attr({ x: 10 }); // the default spacing of highchartss\n      } else {\n        this.secondTitle.attr({ x: x - bbox2.width / 2 });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"expensesChart\">\n        <ReactHighcharts\n          config={this.getConfig()}\n          ref={(c) => {\n            this.chart = c;\n          }}\n          neverReflow\n          isPureConfig\n        />\n      </div>\n    );\n  }\n}\n\nExpensesChart.defaultProps = {\n  loan: undefined,\n  interests: 0,\n  amortization: 0,\n  maintenance: 0,\n  interestRate: 0.015,\n  showLegend: false,\n  title: undefined,\n};\n\nExpensesChart.propTypes = {\n  loan: PropTypes.objectOf(PropTypes.any),\n  property: PropTypes.objectOf(PropTypes.any),\n  interests: PropTypes.number,\n  amortization: PropTypes.number,\n  maintenance: PropTypes.number,\n  interestRate: PropTypes.number,\n  showLegend: PropTypes.bool,\n  title: PropTypes.string,\n};\n\nexport default injectIntl(withLoan(ExpensesChart));\n"]},"hash":"82436508334e5b31b0be8e71f925683582dabac3"}
