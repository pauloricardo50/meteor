{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react-dom/server","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOMServer"}]},{"source":"html-pdf","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"pdf"}]},{"source":"fs","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"fs"}]}],"exports":{"exported":["generateComponentAsPDF"],"specifiers":[{"kind":"local","local":"generateComponentAsPDF","exported":"generateComponentAsPDF"}]}}},"options":{"filename":"imports/core/utils/generate-pdf.js","filenameRelative":"imports/core/utils/generate-pdf.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/utils/generate-pdf.js.map","sourceFileName":"imports/core/utils/generate-pdf.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"generate-pdf"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.export({\n  generateComponentAsPDF: function () {\n    function generateComponentAsPDF() {\n      return _generateComponentAsPDF;\n    }\n\n    return generateComponentAsPDF;\n  }()\n});\nvar ReactDOMServer = void 0;\nmodule.watch(require(\"react-dom/server\"), {\n  \"default\": function () {\n    function _default(v) {\n      ReactDOMServer = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar pdf = void 0;\nmodule.watch(require(\"html-pdf\"), {\n  \"default\": function () {\n    function _default(v) {\n      pdf = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar fs = void 0;\nmodule.watch(require(\"fs\"), {\n  \"default\": function () {\n    function _default(v) {\n      fs = v;\n    }\n\n    return _default;\n  }()\n}, 2);\nvar thisModule = void 0;\n\nvar getBase64String = function () {\n  function getBase64String(path) {\n    try {\n      var file = fs.readFileSync(path);\n      return new Buffer(file).toString('base64');\n    } catch (exception) {\n      thisModule.reject(exception);\n    }\n  }\n\n  return getBase64String;\n}();\n\nexports.generateComponentAsPDF = _generateComponentAsPDF;\n\nvar generatePDF = function () {\n  function generatePDF(html, fileName) {\n    try {\n      pdf.create(html, {\n        format: 'A4',\n        border: {\n          top: '1in',\n          right: '1in',\n          bottom: '1in',\n          left: '1in'\n        }\n      }).toFile(\"./tmp/\" + fileName, function (error, response) {\n        if (error) {\n          thisModule.reject(error);\n        } else {\n          thisModule.resolve({\n            fileName: fileName,\n            base64: getBase64String(response.filename)\n          });\n          fs.unlink(response.filename);\n        }\n      });\n    } catch (exception) {\n      thisModule.reject(exception);\n    }\n  }\n\n  return generatePDF;\n}();\n\nvar getComponentAsHTML = function () {\n  function getComponentAsHTML(component, props) {\n    try {\n      return ReactDOMServer.renderToStaticMarkup(component(props));\n    } catch (exception) {\n      thisModule.reject(exception);\n    }\n  }\n\n  return getComponentAsHTML;\n}();\n\nvar handler = function () {\n  function handler(_ref, promise) {\n    var component = _ref.component,\n        props = _ref.props,\n        fileName = _ref.fileName;\n    thisModule = promise;\n    var html = getComponentAsHTML(component, props);\n\n    if (html && fileName) {\n      generatePDF(html, fileName);\n    }\n  }\n\n  return handler;\n}();\n\nvar _generateComponentAsPDF = function () {\n  function _generateComponentAsPDF(options) {\n    return new Promise(function (resolve, reject) {\n      return handler(options, {\n        resolve: resolve,\n        reject: reject\n      });\n    });\n  }\n\n  return _generateComponentAsPDF;\n}();","map":{"version":3,"sources":["imports/core/utils/generate-pdf.js"],"names":["module","export","generateComponentAsPDF","ReactDOMServer","watch","require","v","pdf","fs","thisModule","getBase64String","path","file","readFileSync","Buffer","toString","exception","reject","generatePDF","html","fileName","create","format","border","top","right","bottom","left","toFile","error","response","resolve","base64","filename","unlink","getComponentAsHTML","component","props","renderToStaticMarkup","handler","promise","Promise","options"],"mappings":"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","file":"imports/core/utils/generate-pdf.js.map","sourcesContent":["import ReactDOMServer from 'react-dom/server';\nimport pdf from 'html-pdf';\nimport fs from 'fs';\n\nlet thisModule;\n\nconst getBase64String = (path) => {\n  try {\n    const file = fs.readFileSync(path);\n    return new Buffer(file).toString('base64');\n  } catch (exception) {\n    thisModule.reject(exception);\n  }\n};\n\nconst generatePDF = (html, fileName) => {\n  try {\n    pdf\n      .create(html, {\n        format: 'A4',\n        border: { top: '1in', right: '1in', bottom: '1in', left: '1in' },\n      })\n      .toFile(`./tmp/${fileName}`, (error, response) => {\n        if (error) {\n          thisModule.reject(error);\n        } else {\n          thisModule.resolve({\n            fileName,\n            base64: getBase64String(response.filename),\n          });\n          fs.unlink(response.filename);\n        }\n      });\n  } catch (exception) {\n    thisModule.reject(exception);\n  }\n};\n\nconst getComponentAsHTML = (component, props) => {\n  try {\n    return ReactDOMServer.renderToStaticMarkup(component(props));\n  } catch (exception) {\n    thisModule.reject(exception);\n  }\n};\n\nconst handler = ({ component, props, fileName }, promise) => {\n  thisModule = promise;\n  const html = getComponentAsHTML(component, props);\n  if (html && fileName) {\n    generatePDF(html, fileName);\n  }\n};\n\nexport const generateComponentAsPDF = options =>\n  new Promise((resolve, reject) => handler(options, { resolve, reject }));\n"]},"hash":"5bc1950de8dc66853231d613287216aebc3f1a33"}
