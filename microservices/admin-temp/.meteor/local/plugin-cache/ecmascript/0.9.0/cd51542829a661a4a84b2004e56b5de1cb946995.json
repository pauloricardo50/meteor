{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"../../../core/components/DropdownMenu","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"DropdownMenu"}]},{"source":"../../../core/api","imported":["callMutation","mutations"],"specifiers":[{"kind":"named","imported":"callMutation","local":"callMutation"},{"kind":"named","imported":"mutations","local":"mutations"}]},{"source":"../../../core/api/tasks/tasksConstants","imported":["TASK_STATUS"],"specifiers":[{"kind":"named","imported":"TASK_STATUS","local":"TASK_STATUS"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","filenameRelative":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourceFileName":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TasksAssignedUserDropdown"},"ignored":false,"code":"\"use strict\";\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  }\n}, 1);\nvar DropdownMenu = void 0;\nmodule.watch(require(\"../../../core/components/DropdownMenu\"), {\n  default: function _default(v) {\n    DropdownMenu = v;\n  }\n}, 2);\n\nvar _callMutation = void 0,\n    _mutations = void 0;\n\nmodule.watch(require(\"../../../core/api\"), {\n  callMutation: function callMutation(v) {\n    _callMutation = v;\n  },\n  mutations: function mutations(v) {\n    _mutations = v;\n  }\n}, 3);\n\nvar _TASK_STATUS = void 0;\n\nmodule.watch(require(\"../../../core/api/tasks/tasksConstants\"), {\n  TASK_STATUS: function TASK_STATUS(v) {\n    _TASK_STATUS = v;\n  }\n}, 4);\n\nvar changeAssignedUser = function changeAssignedUser(_ref) {\n  var user = _ref.user,\n      task = _ref.task;\n  var taskId = task._id;\n  var taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n  var taskUserId = task.user ? task.user._id : undefined;\n  var initialAssignment = task.type === TASK_TYPE.ADD_ASSIGNED_TO && task.status === _TASK_STATUS.ACTIVE; // if (initialAssignment && taskUserId) {\n\n  if (!taskAssignedTo) {\n    _callMutation(_mutations.ASSIGN_ADMIN_TO_USER, {\n      userId: taskUserId,\n      adminId: user._id\n    }).then(function (nbOfAffectedRows) {\n      if (nbOfAffectedRows > 0) {\n        _callMutation(_mutations.TASK_CHANGE_ASSIGNED_TO, {\n          taskId: taskId,\n          newAssignee: user._id\n        });\n      }\n    }).then(function (nbOfAffectedRows) {\n      if (nbOfAffectedRows > 0) {\n        _callMutation(_mutations.TASK_CHANGE_STATUS, {\n          taskId: taskId,\n          newStatus: _TASK_STATUS.COMPLETED\n        });\n      }\n    });\n  } else {\n    _callMutation(_mutations.TASK_CHANGE_ASSIGNED_TO, {\n      taskId: taskId,\n      newAssignee: user._id\n    });\n  }\n};\n\nvar getMenuItems = function getMenuItems(users, task) // taskAssignedTo,\n// taskId,\n// taskUserId,\n// initialAssignment,\n{\n  var taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n  var options = users.map(function (user) {\n    return {\n      id: user._id,\n      show: user._id !== taskAssignedTo,\n      label: user.emails[0].address,\n      link: false,\n      onClick: function onClick() {\n        changeAssignedUser({\n          user: user,\n          task: task,\n          taskAssignedTo: taskAssignedTo // taskId,\n          // taskAssignedTo,\n          // taskUserId,\n          // initialAssignment,\n\n        });\n      }\n    };\n  });\n  return options;\n};\n\nvar TasksAssignedUserDropdown = function TasksAssignedUserDropdown(props) {\n  // const { data, isLoading, error, taskId, taskUser, styles } = props;\n  var data = props.data,\n      isLoading = props.isLoading,\n      error = props.error,\n      taskId = props.taskId,\n      taskAssignedTo = props.taskAssignedTo,\n      taskUserId = props.taskUserId,\n      initialAssignment = props.initialAssignment,\n      styles = props.styles;\n\n  if (isLoading) {\n    return null;\n  }\n\n  if (error) {\n    return React.createElement(\n      \"div\",\n      null,\n      \"Error: \",\n      error.reason\n    );\n  }\n\n  return React.createElement(DropdownMenu, {\n    iconType: \"personAdd\",\n    options: getMenuItems(data, taskAssignedTo, taskId, taskUserId, initialAssignment),\n    style: styles\n  });\n};\n\nmodule.exportDefault(TasksAssignedUserDropdown);","map":{"version":3,"sources":["imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx"],"names":["Meteor","module","watch","require","v","React","default","DropdownMenu","callMutation","mutations","TASK_STATUS","changeAssignedUser","user","task","taskId","_id","taskAssignedTo","assignedUser","undefined","taskUserId","initialAssignment","type","TASK_TYPE","ADD_ASSIGNED_TO","status","ACTIVE","ASSIGN_ADMIN_TO_USER","userId","adminId","then","nbOfAffectedRows","TASK_CHANGE_ASSIGNED_TO","newAssignee","TASK_CHANGE_STATUS","newStatus","COMPLETED","getMenuItems","users","options","map","id","show","label","emails","address","link","onClick","TasksAssignedUserDropdown","props","data","isLoading","error","styles","reason","exportDefault"],"mappings":"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","file":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport DropdownMenu from 'core/components/DropdownMenu/';\nimport { callMutation, mutations } from 'core/api';\nimport { TASK_STATUS } from 'core/api/tasks/tasksConstants';\n\nconst changeAssignedUser = ({\n  user,\n  task,\n\n  // taskId,\n  // taskAssignedTo,\n  // taskUserId,\n  // initialAssignment,\n}) => {\n  const taskId=task._id;\n  const taskAssignedTo=task.assignedUser ? task.assignedUser._id : undefined;\n  const taskUserId=task.user ? task.user._id : undefined;\n  const initialAssignment=task.type === TASK_TYPE.ADD_ASSIGNED_TO && task.status === TASK_STATUS.ACTIVE;\n  // if (initialAssignment && taskUserId) {\n  if (!taskAssignedTo) {\n    callMutation(mutations.ASSIGN_ADMIN_TO_USER, {\n      userId: taskUserId,\n      adminId: user._id,\n    })\n      .then((nbOfAffectedRows) => {\n        if (nbOfAffectedRows > 0) {\n          callMutation(mutations.TASK_CHANGE_ASSIGNED_TO, {\n            taskId,\n            newAssignee: user._id,\n          });\n        }\n      })\n      .then((nbOfAffectedRows) => {\n        if (nbOfAffectedRows > 0) {\n          callMutation(mutations.TASK_CHANGE_STATUS, {\n            taskId,\n            newStatus: TASK_STATUS.COMPLETED,\n          });\n        }\n      });\n  } else {\n    callMutation(mutations.TASK_CHANGE_ASSIGNED_TO, {\n      taskId,\n      newAssignee: user._id,\n    });\n  }\n};\n\nconst getMenuItems = (\n  users,\n  task,\n  // taskAssignedTo,\n  // taskId,\n  // taskUserId,\n  // initialAssignment,\n) => {\n  const taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n  const options = users.map(user => ({\n    id: user._id,\n    show: user._id !== taskAssignedTo,\n    label: user.emails[0].address,\n    link: false,\n    onClick: () => {\n      changeAssignedUser({\n        user,\n        task,\n        taskAssignedTo,\n        // taskId,\n        // taskAssignedTo,\n        // taskUserId,\n        // initialAssignment,\n      });\n    },\n  }));\n  return options;\n};\n\nconst TasksAssignedUserDropdown = (props) => {\n  // const { data, isLoading, error, taskId, taskUser, styles } = props;\n  const {\n    data,\n    isLoading,\n    error,\n    taskId,\n    taskAssignedTo,\n    taskUserId,\n    initialAssignment,\n    styles,\n  } = props;\n\n  if (isLoading) {\n    return null;\n  }\n  if (error) {\n    return <div>Error: {error.reason}</div>;\n  }\n\n  return (\n    <DropdownMenu\n      iconType=\"personAdd\"\n      options={getMenuItems(\n        data,\n        taskAssignedTo,\n        taskId,\n        taskUserId,\n        initialAssignment,\n      )}\n      style={styles}\n    />\n  );\n};\n\nexport default TasksAssignedUserDropdown;\n"]},"hash":"cd51542829a661a4a84b2004e56b5de1cb946995"}
