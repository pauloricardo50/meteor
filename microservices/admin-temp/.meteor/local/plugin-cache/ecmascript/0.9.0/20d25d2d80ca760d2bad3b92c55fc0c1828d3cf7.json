{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/okgrow:analytics","imported":["analytics"],"specifiers":[{"kind":"named","imported":"analytics","local":"analytics"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/okgrow:analytics/examples/flow-router/imports/flow-router.js","filenameRelative":"packages/okgrow:analytics/examples/flow-router/imports/flow-router.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/okgrow:analytics/examples/flow-router/imports/flow-router.js.map","sourceFileName":"packages/okgrow:analytics/examples/flow-router/imports/flow-router.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"flow-router"},"ignored":false,"code":"var Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar analytics = void 0;\nmodule.watch(require(\"meteor/okgrow:analytics\"), {\n  analytics: function (v) {\n    analytics = v;\n  }\n}, 1);\n\n// eslint-disable-line import/no-extraneous-dependencies, import/extensions\nif (Meteor.isClient) {\n  FlowRouter.route('/', {\n    action: function () {\n      BlazeLayout.render('mainLayout', {\n        main: 'one'\n      });\n    },\n    name: 'Home' // used for track\n\n  });\n  FlowRouter.route('/one', {\n    action: function () {\n      BlazeLayout.render('mainLayout', {\n        main: 'one'\n      });\n    },\n    name: 'One' // used for track\n\n  });\n  FlowRouter.route('/two', {\n    action: function () {\n      BlazeLayout.render('mainLayout', {\n        main: 'two'\n      });\n    },\n    name: 'Two' // used for track\n\n  });\n  FlowRouter.route('/three', {\n    action: function () {\n      BlazeLayout.render('mainLayout', {\n        main: 'three'\n      });\n    }\n  }); // without 'name', path is used for tracking\n\n  Template.mainLayout.onCreated(function () {\n    function mainLayoutOnCreated() {\n      Meteor.subscribe('oauthInfo');\n      var self = this;\n      self.log = new ReactiveVar([]);\n      self.currentIdentity = new ReactiveVar('No Identity Set'); // We don't want to register analytics if it has been blocked by an adblocker.\n\n      if (typeof analytics === 'undefined') return;\n      self.currentIdentity.set(analytics._user._getTraits().email || 'No Identity Set');\n      analytics.on('page', function (event, properties, options) {\n        var latest = self.log.get();\n        latest.push(\"Page: \" + options.path);\n        self.log.set(latest);\n      });\n      analytics.on('identify', function (event, properties) {\n        var latest = self.log.get();\n        latest.push(\"Identify: \" + properties.email);\n        self.log.set(latest);\n        self.currentIdentity.set(properties.email);\n      });\n      analytics.on('track', function (event) {\n        var latest = self.log.get();\n        latest.push(\"Track: \" + event);\n        self.log.set(latest);\n      });\n    }\n\n    return mainLayoutOnCreated;\n  }());\n  Template.mainLayout.onRendered(function () {\n    function mainLayoutOnRendered() {\n      Tracker.autorun(function () {\n        document.title = FlowRouter.getRouteName();\n      });\n    }\n\n    return mainLayoutOnRendered;\n  }());\n  Template.mainLayout.helpers({\n    log: function () {\n      return Template.instance().log.get();\n    },\n    currentIdentity: function () {\n      return Template.instance().currentIdentity.get();\n    },\n    isOauth: function () {\n      var user = Meteor.user();\n      var message = 'Not Signed In.';\n\n      if (user && user.services) {\n        if (user.services.facebook) {\n          message = \"Signed in with Facebook as \" + user.services.facebook.name + \" (\" + user.services.facebook.email + \")\";\n        } else if (user.services.github) {\n          message = \"Signed in with Github as \" + user.services.github.username + \" (\" + user.services.github.email + \")\";\n        } else if (user.services.google) {\n          message = \"Signed in with Google as \" + user.services.google.name + \" (\" + user.services.google.email + \")\";\n        }\n      } else if (user) {\n        message = 'Not an oauth login';\n      }\n\n      return message;\n    }\n  });\n}\n\nif (Meteor.isServer) {\n  Meteor.publish('oauthInfo', function () {\n    function publisOAuthInfo() {\n      return Meteor.users.find({\n        _id: this.userId\n      }, {\n        fields: {\n          'services.facebook.name': 1,\n          'services.facebook.email': 1,\n          'services.github.username': 1,\n          'services.github.email': 1,\n          'services.google.name': 1,\n          'services.google.email': 1\n        }\n      });\n    }\n\n    return publisOAuthInfo;\n  }());\n}","map":{"version":3,"sources":["packages/okgrow:analytics/examples/flow-router/imports/flow-router.js"],"names":["Meteor","module","watch","require","v","analytics","isClient","FlowRouter","route","action","BlazeLayout","render","main","name","Template","mainLayout","onCreated","mainLayoutOnCreated","subscribe","self","log","ReactiveVar","currentIdentity","set","_user","_getTraits","email","on","event","properties","options","latest","get","push","path","onRendered","mainLayoutOnRendered","Tracker","autorun","document","title","getRouteName","helpers","instance","isOauth","user","message","services","facebook","github","username","google","isServer","publish","publisOAuthInfo","users","find","_id","userId","fields"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,QAAD,YAAQI,CAAR,EAAU;AAACJ,aAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,kBAAJ;AAAcJ,OAAOC,KAAP,CAAaC,QAAQ,yBAAR,CAAb,EAAgD;AAACE,WAAD,YAAWD,CAAX,EAAa;AAACC,gBAAUD,CAAV;AAAY;AAA1B,CAAhD,EAA4E,CAA5E;;AACnC;AAErD,IAAIJ,OAAOM,QAAX,EAAqB;AACnBC,aAAWC,KAAX,CAAiB,GAAjB,EAAsB;AACpBC,UADoB,cACX;AACPC,kBAAYC,MAAZ,CAAmB,YAAnB,EAAiC;AAAEC,cAAM;AAAR,OAAjC;AACD,KAHmB;AAIpBC,UAAM,MAJc,CAIN;;AAJM,GAAtB;AAOAN,aAAWC,KAAX,CAAiB,MAAjB,EAAyB;AACvBC,UADuB,cACd;AACPC,kBAAYC,MAAZ,CAAmB,YAAnB,EAAiC;AAAEC,cAAM;AAAR,OAAjC;AACD,KAHsB;AAIvBC,UAAM,KAJiB,CAIV;;AAJU,GAAzB;AAOAN,aAAWC,KAAX,CAAiB,MAAjB,EAAyB;AACvBC,UADuB,cACd;AACPC,kBAAYC,MAAZ,CAAmB,YAAnB,EAAiC;AAAEC,cAAM;AAAR,OAAjC;AACD,KAHsB;AAIvBC,UAAM,KAJiB,CAIV;;AAJU,GAAzB;AAOAN,aAAWC,KAAX,CAAiB,QAAjB,EAA2B;AACzBC,UADyB,cAChB;AACPC,kBAAYC,MAAZ,CAAmB,YAAnB,EAAiC;AAAEC,cAAM;AAAR,OAAjC;AACD;AAHwB,GAA3B,EAtBmB,CA0Bf;;AAEJE,WAASC,UAAT,CAAoBC,SAApB;AAA8B,aAASC,mBAAT,GAA+B;AAC3DjB,aAAOkB,SAAP,CAAiB,WAAjB;AACA,UAAMC,OAAO,IAAb;AACAA,WAAKC,GAAL,GAAW,IAAIC,WAAJ,CAAgB,EAAhB,CAAX;AACAF,WAAKG,eAAL,GAAuB,IAAID,WAAJ,CAAgB,iBAAhB,CAAvB,CAJ2D,CAM3D;;AACA,UAAI,OAAOhB,SAAP,KAAqB,WAAzB,EAAsC;AAEtCc,WAAKG,eAAL,CAAqBC,GAArB,CAAyBlB,UAAUmB,KAAV,CAAgBC,UAAhB,GAA6BC,KAA7B,IAAsC,iBAA/D;AAEArB,gBAAUsB,EAAV,CAAa,MAAb,EAAqB,UAACC,KAAD,EAAQC,UAAR,EAAoBC,OAApB,EAAgC;AACnD,YAAMC,SAASZ,KAAKC,GAAL,CAASY,GAAT,EAAf;AACAD,eAAOE,IAAP,YAAqBH,QAAQI,IAA7B;AACAf,aAAKC,GAAL,CAASG,GAAT,CAAaQ,MAAb;AACD,OAJD;AAMA1B,gBAAUsB,EAAV,CAAa,UAAb,EAAyB,UAACC,KAAD,EAAQC,UAAR,EAAuB;AAC9C,YAAME,SAASZ,KAAKC,GAAL,CAASY,GAAT,EAAf;AACAD,eAAOE,IAAP,gBAAyBJ,WAAWH,KAApC;AACAP,aAAKC,GAAL,CAASG,GAAT,CAAaQ,MAAb;AACAZ,aAAKG,eAAL,CAAqBC,GAArB,CAAyBM,WAAWH,KAApC;AACD,OALD;AAOArB,gBAAUsB,EAAV,CAAa,OAAb,EAAsB,UAACC,KAAD,EAAW;AAC/B,YAAMG,SAASZ,KAAKC,GAAL,CAASY,GAAT,EAAf;AACAD,eAAOE,IAAP,aAAsBL,KAAtB;AACAT,aAAKC,GAAL,CAASG,GAAT,CAAaQ,MAAb;AACD,OAJD;AAKD;;AA7BD,WAAuCd,mBAAvC;AAAA;AA+BAH,WAASC,UAAT,CAAoBoB,UAApB;AAA+B,aAASC,oBAAT,GAAgC;AAC7DC,cAAQC,OAAR,CAAgB,YAAM;AACpBC,iBAASC,KAAT,GAAiBjC,WAAWkC,YAAX,EAAjB;AACD,OAFD;AAGD;;AAJD,WAAwCL,oBAAxC;AAAA;AAMAtB,WAASC,UAAT,CAAoB2B,OAApB,CAA4B;AAC1BtB,OAD0B,cACpB;AAAE,aAAON,SAAS6B,QAAT,GAAoBvB,GAApB,CAAwBY,GAAxB,EAAP;AAAuC,KADrB;AAE1BV,mBAF0B,cAER;AAAE,aAAOR,SAAS6B,QAAT,GAAoBrB,eAApB,CAAoCU,GAApC,EAAP;AAAmD,KAF7C;AAG1BY,WAH0B,cAGhB;AACR,UAAMC,OAAO7C,OAAO6C,IAAP,EAAb;AACA,UAAIC,UAAU,gBAAd;;AACA,UAAID,QAAQA,KAAKE,QAAjB,EAA2B;AACzB,YAAIF,KAAKE,QAAL,CAAcC,QAAlB,EAA4B;AAC1BF,oDAAwCD,KAAKE,QAAL,CAAcC,QAAd,CAAuBnC,IAA/D,UAAwEgC,KAAKE,QAAL,CAAcC,QAAd,CAAuBtB,KAA/F;AACD,SAFD,MAEO,IAAImB,KAAKE,QAAL,CAAcE,MAAlB,EAA0B;AAC/BH,kDAAsCD,KAAKE,QAAL,CAAcE,MAAd,CAAqBC,QAA3D,UAAwEL,KAAKE,QAAL,CAAcE,MAAd,CAAqBvB,KAA7F;AACD,SAFM,MAEA,IAAImB,KAAKE,QAAL,CAAcI,MAAlB,EAA0B;AAC/BL,kDAAsCD,KAAKE,QAAL,CAAcI,MAAd,CAAqBtC,IAA3D,UAAoEgC,KAAKE,QAAL,CAAcI,MAAd,CAAqBzB,KAAzF;AACD;AACF,OARD,MAQO,IAAImB,IAAJ,EAAU;AACfC,kBAAU,oBAAV;AACD;;AACD,aAAOA,OAAP;AACD;AAlByB,GAA5B;AAoBD;;AAED,IAAI9C,OAAOoD,QAAX,EAAqB;AACnBpD,SAAOqD,OAAP,CAAe,WAAf;AAA4B,aAASC,eAAT,GAA2B;AACrD,aAAOtD,OAAOuD,KAAP,CAAaC,IAAb,CACL;AAAEC,aAAK,KAAKC;AAAZ,OADK,EAEL;AACEC,gBAAQ;AACN,oCAA0B,CADpB;AAEN,qCAA2B,CAFrB;AAGN,sCAA4B,CAHtB;AAIN,mCAAyB,CAJnB;AAKN,kCAAwB,CALlB;AAMN,mCAAyB;AANnB;AADV,OAFK,CAAP;AAaD;;AAdD,WAAqCL,eAArC;AAAA;AAeD","file":"packages/okgrow:analytics/examples/flow-router/imports/flow-router.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor'; // eslint-disable-line import/no-extraneous-dependencies, import/extensions\nimport { analytics } from 'meteor/okgrow:analytics'; // eslint-disable-line import/no-extraneous-dependencies, import/extensions\n\nif (Meteor.isClient) {\n  FlowRouter.route('/', {\n    action() {\n      BlazeLayout.render('mainLayout', { main: 'one' });\n    },\n    name: 'Home', // used for track\n  });\n\n  FlowRouter.route('/one', {\n    action() {\n      BlazeLayout.render('mainLayout', { main: 'one' });\n    },\n    name: 'One', // used for track\n  });\n\n  FlowRouter.route('/two', {\n    action() {\n      BlazeLayout.render('mainLayout', { main: 'two' });\n    },\n    name: 'Two', // used for track\n  });\n\n  FlowRouter.route('/three', {\n    action() {\n      BlazeLayout.render('mainLayout', { main: 'three' });\n    },\n  }); // without 'name', path is used for tracking\n\n  Template.mainLayout.onCreated(function mainLayoutOnCreated() {\n    Meteor.subscribe('oauthInfo');\n    const self = this;\n    self.log = new ReactiveVar([]);\n    self.currentIdentity = new ReactiveVar('No Identity Set');\n\n    // We don't want to register analytics if it has been blocked by an adblocker.\n    if (typeof analytics === 'undefined') return;\n\n    self.currentIdentity.set(analytics._user._getTraits().email || 'No Identity Set');\n\n    analytics.on('page', (event, properties, options) => {\n      const latest = self.log.get();\n      latest.push(`Page: ${options.path}`);\n      self.log.set(latest);\n    });\n\n    analytics.on('identify', (event, properties) => {\n      const latest = self.log.get();\n      latest.push(`Identify: ${properties.email}`);\n      self.log.set(latest);\n      self.currentIdentity.set(properties.email);\n    });\n\n    analytics.on('track', (event) => {\n      const latest = self.log.get();\n      latest.push(`Track: ${event}`);\n      self.log.set(latest);\n    });\n  });\n\n  Template.mainLayout.onRendered(function mainLayoutOnRendered() {\n    Tracker.autorun(() => {\n      document.title = FlowRouter.getRouteName();\n    });\n  });\n\n  Template.mainLayout.helpers({\n    log() { return Template.instance().log.get(); },\n    currentIdentity() { return Template.instance().currentIdentity.get(); },\n    isOauth() {\n      const user = Meteor.user();\n      let message = 'Not Signed In.';\n      if (user && user.services) {\n        if (user.services.facebook) {\n          message = `Signed in with Facebook as ${user.services.facebook.name} (${user.services.facebook.email})`;\n        } else if (user.services.github) {\n          message = `Signed in with Github as ${user.services.github.username} (${user.services.github.email})`;\n        } else if (user.services.google) {\n          message = `Signed in with Google as ${user.services.google.name} (${user.services.google.email})`;\n        }\n      } else if (user) {\n        message = 'Not an oauth login';\n      }\n      return message;\n    },\n  });\n}\n\nif (Meteor.isServer) {\n  Meteor.publish('oauthInfo', function publisOAuthInfo() {\n    return Meteor.users.find(\n      { _id: this.userId },\n      {\n        fields: {\n          'services.facebook.name': 1,\n          'services.facebook.email': 1,\n          'services.github.username': 1,\n          'services.github.email': 1,\n          'services.google.name': 1,\n          'services.google.email': 1,\n        },\n      },\n    );\n  });\n}\n"]},"hash":"20d25d2d80ca760d2bad3b92c55fc0c1828d3cf7"}
