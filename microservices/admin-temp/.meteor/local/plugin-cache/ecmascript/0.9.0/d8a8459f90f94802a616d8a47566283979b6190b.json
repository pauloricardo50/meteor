{"metadata":{"usedHelpers":["extends","defineProperty","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"../config/constants","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"constants"}]},{"source":"../api/constants","imported":["USAGE_TYPE","LOAN_STRATEGY_PRESET","OFFER_TYPE"],"specifiers":[{"kind":"named","imported":"USAGE_TYPE","local":"USAGE_TYPE"},{"kind":"named","imported":"LOAN_STRATEGY_PRESET","local":"LOAN_STRATEGY_PRESET"},{"kind":"named","imported":"OFFER_TYPE","local":"OFFER_TYPE"}]},{"source":"./finance-math","imported":["getIncomeRatio"],"specifiers":[{"kind":"named","imported":"getIncomeRatio","local":"getIncomeRatio"}]},{"source":"../arrays/steps","imported":["propertyPercent","filesPercent"],"specifiers":[{"kind":"named","imported":"propertyPercent","local":"propertyPercent"},{"kind":"named","imported":"filesPercent","local":"filesPercent"}]},{"source":"../api/files/files","imported":["loanFiles","propertyFiles"],"specifiers":[{"kind":"named","imported":"loanFiles","local":"loanFiles"},{"kind":"named","imported":"propertyFiles","local":"propertyFiles"}]}],"exports":{"exported":["getProjectValue","getLoanValue","loanStrategySuccess","strategiesChosen","getInterestsWithOffer","getMonthlyWithOffer","getMonthlyWithExtractedOffer","getPropAndWork","getTotalUsed","getBorrowRatio","getLenderCount","disableForms","getFees","isLoanValid","getPropertyCompletion","validateRatios","validateRatiosCompletely","getMaintenance","strategyDone","getAuctionEndTime"],"specifiers":[{"kind":"local","local":"getProjectValue","exported":"getProjectValue"},{"kind":"local","local":"getLoanValue","exported":"getLoanValue"},{"kind":"local","local":"loanStrategySuccess","exported":"loanStrategySuccess"},{"kind":"local","local":"strategiesChosen","exported":"strategiesChosen"},{"kind":"local","local":"getInterestsWithOffer","exported":"getInterestsWithOffer"},{"kind":"local","local":"getMonthlyWithOffer","exported":"getMonthlyWithOffer"},{"kind":"local","local":"getMonthlyWithExtractedOffer","exported":"getMonthlyWithExtractedOffer"},{"kind":"local","local":"getPropAndWork","exported":"getPropAndWork"},{"kind":"local","local":"getTotalUsed","exported":"getTotalUsed"},{"kind":"local","local":"getBorrowRatio","exported":"getBorrowRatio"},{"kind":"local","local":"getLenderCount","exported":"getLenderCount"},{"kind":"local","local":"disableForms","exported":"disableForms"},{"kind":"local","local":"getFees","exported":"getFees"},{"kind":"local","local":"isLoanValid","exported":"isLoanValid"},{"kind":"local","local":"getPropertyCompletion","exported":"getPropertyCompletion"},{"kind":"local","local":"validateRatios","exported":"validateRatios"},{"kind":"local","local":"validateRatiosCompletely","exported":"validateRatiosCompletely"},{"kind":"local","local":"getMaintenance","exported":"getMaintenance"},{"kind":"local","local":"strategyDone","exported":"strategyDone"},{"kind":"local","local":"getAuctionEndTime","exported":"getAuctionEndTime"}]}}},"options":{"filename":"imports/core/utils/loanFunctions.js","filenameRelative":"imports/core/utils/loanFunctions.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/utils/loanFunctions.js.map","sourceFileName":"imports/core/utils/loanFunctions.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"loanFunctions"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProjectValue = undefined;\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  getProjectValue: function () {\n    function getProjectValue() {\n      return _getProjectValue;\n    }\n\n    return getProjectValue;\n  }(),\n  getLoanValue: function () {\n    function getLoanValue() {\n      return _getLoanValue;\n    }\n\n    return getLoanValue;\n  }(),\n  loanStrategySuccess: function () {\n    function loanStrategySuccess() {\n      return _loanStrategySuccess;\n    }\n\n    return loanStrategySuccess;\n  }(),\n  strategiesChosen: function () {\n    function strategiesChosen() {\n      return _strategiesChosen;\n    }\n\n    return strategiesChosen;\n  }(),\n  getInterestsWithOffer: function () {\n    function getInterestsWithOffer() {\n      return _getInterestsWithOffer;\n    }\n\n    return getInterestsWithOffer;\n  }(),\n  getMonthlyWithOffer: function () {\n    function getMonthlyWithOffer() {\n      return _getMonthlyWithOffer;\n    }\n\n    return getMonthlyWithOffer;\n  }(),\n  getMonthlyWithExtractedOffer: function () {\n    function getMonthlyWithExtractedOffer() {\n      return _getMonthlyWithExtractedOffer;\n    }\n\n    return getMonthlyWithExtractedOffer;\n  }(),\n  getPropAndWork: function () {\n    function getPropAndWork() {\n      return _getPropAndWork;\n    }\n\n    return getPropAndWork;\n  }(),\n  getTotalUsed: function () {\n    function getTotalUsed() {\n      return _getTotalUsed;\n    }\n\n    return getTotalUsed;\n  }(),\n  getBorrowRatio: function () {\n    function getBorrowRatio() {\n      return _getBorrowRatio;\n    }\n\n    return getBorrowRatio;\n  }(),\n  getLenderCount: function () {\n    function getLenderCount() {\n      return _getLenderCount;\n    }\n\n    return getLenderCount;\n  }(),\n  disableForms: function () {\n    function disableForms() {\n      return _disableForms;\n    }\n\n    return disableForms;\n  }(),\n  getFees: function () {\n    function getFees() {\n      return _getFees;\n    }\n\n    return getFees;\n  }(),\n  isLoanValid: function () {\n    function isLoanValid() {\n      return _isLoanValid;\n    }\n\n    return isLoanValid;\n  }(),\n  getPropertyCompletion: function () {\n    function getPropertyCompletion() {\n      return _getPropertyCompletion;\n    }\n\n    return getPropertyCompletion;\n  }(),\n  validateRatios: function () {\n    function validateRatios() {\n      return _validateRatios;\n    }\n\n    return validateRatios;\n  }(),\n  validateRatiosCompletely: function () {\n    function validateRatiosCompletely() {\n      return _validateRatiosCompletely;\n    }\n\n    return validateRatiosCompletely;\n  }(),\n  getMaintenance: function () {\n    function getMaintenance() {\n      return _getMaintenance;\n    }\n\n    return getMaintenance;\n  }(),\n  strategyDone: function () {\n    function strategyDone() {\n      return _strategyDone;\n    }\n\n    return strategyDone;\n  }(),\n  getAuctionEndTime: function () {\n    function getAuctionEndTime() {\n      return _getAuctionEndTime;\n    }\n\n    return getAuctionEndTime;\n  }()\n});\nvar moment = void 0;\nmodule.watch(require(\"moment\"), {\n  \"default\": function () {\n    function _default(v) {\n      moment = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar constants = void 0;\nmodule.watch(require(\"../config/constants\"), {\n  \"default\": function () {\n    function _default(v) {\n      constants = v;\n    }\n\n    return _default;\n  }()\n}, 1);\n\nvar _USAGE_TYPE = void 0,\n    _LOAN_STRATEGY_PRESET = void 0,\n    _OFFER_TYPE = void 0;\n\nmodule.watch(require(\"../api/constants\"), {\n  USAGE_TYPE: function () {\n    function USAGE_TYPE(v) {\n      _USAGE_TYPE = v;\n    }\n\n    return USAGE_TYPE;\n  }(),\n  LOAN_STRATEGY_PRESET: function () {\n    function LOAN_STRATEGY_PRESET(v) {\n      _LOAN_STRATEGY_PRESET = v;\n    }\n\n    return LOAN_STRATEGY_PRESET;\n  }(),\n  OFFER_TYPE: function () {\n    function OFFER_TYPE(v) {\n      _OFFER_TYPE = v;\n    }\n\n    return OFFER_TYPE;\n  }()\n}, 2);\nexports.getProjectValue = _getProjectValue;\n\nvar _getIncomeRatio = void 0;\n\nmodule.watch(require(\"./finance-math\"), {\n  getIncomeRatio: function () {\n    function getIncomeRatio(v) {\n      _getIncomeRatio = v;\n    }\n\n    return getIncomeRatio;\n  }()\n}, 3);\n\nvar _propertyPercent = void 0,\n    _filesPercent = void 0;\n\nmodule.watch(require(\"../arrays/steps\"), {\n  propertyPercent: function () {\n    function propertyPercent(v) {\n      _propertyPercent = v;\n    }\n\n    return propertyPercent;\n  }(),\n  filesPercent: function () {\n    function filesPercent(v) {\n      _filesPercent = v;\n    }\n\n    return filesPercent;\n  }()\n}, 4);\n\nvar _loanFiles = void 0,\n    _propertyFiles = void 0;\n\nmodule.watch(require(\"../api/files/files\"), {\n  loanFiles: function () {\n    function loanFiles(v) {\n      _loanFiles = v;\n    }\n\n    return loanFiles;\n  }(),\n  propertyFiles: function () {\n    function propertyFiles(v) {\n      _propertyFiles = v;\n    }\n\n    return propertyFiles;\n  }()\n}, 5);\n\nvar _getProjectValue = function () {\n  function _getProjectValue(_ref) {\n    var loan = _ref.loan,\n        property = _ref.property;\n\n    if (!property || !property.value) {\n      return 0;\n    } else if (property.value <= 0) {\n      return 0;\n    }\n\n    var value = property.value * (1 + constants.notaryFees) + (loan.general.propertyWork || 0);\n\n    if (loan.general.usageType === _USAGE_TYPE.PRIMARY) {\n      value += (loan.general.insuranceFortuneUsed || 0) * constants.lppFees;\n    }\n\n    return Math.max(0, Math.round(value));\n  }\n\n  return _getProjectValue;\n}();\n\nvar _getLoanValue = function () {\n  function _getLoanValue(_ref2, roundedTo10000) {\n    var loan = _ref2.loan,\n        property = _ref2.property;\n\n    if (!loan || !loan.general) {\n      return 0;\n    }\n\n    var value = _getProjectValue({\n      loan: loan,\n      property: property\n    }) - (loan.general.fortuneUsed || 0);\n\n    if (loan.general.usageType === _USAGE_TYPE.PRIMARY) {\n      value -= loan.general.insuranceFortuneUsed || 0;\n    } // Do this when picking tranches\n\n\n    if (roundedTo10000) {\n      value = Math.round(value / 10000) * 10000;\n    } // Check negative values\n\n\n    return Math.max(0, Math.round(value));\n  }\n\n  return _getLoanValue;\n}();\n\nvar _loanStrategySuccess = function () {\n  function _loanStrategySuccess() {\n    var loanTranches = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var loanValue = arguments[1];\n\n    if (!Number.isInteger(loanValue)) {\n      throw new Error('loanValue must be an integer');\n    }\n\n    if (loanTranches.length < 1) {\n      return false;\n    } // User has to choose a preset\n\n\n    var trancheSum = loanTranches.reduce(function (tot, tranche) {\n      return tranche.value + tot;\n    }, 0);\n\n    if (trancheSum === loanValue) {\n      // If the sum of all tranches is equal to the loan, success!\n      return true;\n    }\n\n    return false;\n  }\n\n  return _loanStrategySuccess;\n}();\n\nvar _strategiesChosen = function () {\n  function _strategiesChosen(_ref3) {\n    var loan = _ref3.loan,\n        property = _ref3.property;\n    return _loanStrategySuccess(loan.general.loanTranches, _getLoanValue({\n      loan: loan,\n      property: property\n    })) && loan.logic.amortizationStrategyPreset && loan.logic.hasValidatedCashStrategy;\n  }\n\n  return _strategiesChosen;\n}();\n\nvar _getInterestsWithOffer = function () {\n  function _getInterestsWithOffer(_ref4) {\n    var loan = _ref4.loan,\n        offer = _ref4.offer;\n    var isStandard = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (!offer) {\n      return 0;\n    }\n\n    var tranches = loan.general.loanTranches;\n    var interestRates = isStandard ? offer.standardOffer : offer.counterpartOffer;\n    var interests = 0;\n    tranches.every(function (tranche) {\n      var rate = interestRates[tranche.type]; // If the lender doesn't have this interest rate, return false\n\n      if (!rate) {\n        interests = -1; // break loop\n\n        return false;\n      }\n\n      interests += tranche.value * rate;\n      return true;\n    });\n    return interests >= 0 ? Math.round(interests / 12) : interests;\n  }\n\n  return _getInterestsWithOffer;\n}();\n\nvar _getMonthlyWithOffer = function () {\n  function _getMonthlyWithOffer(_ref5) {\n    var loan = _ref5.loan,\n        property = _ref5.property,\n        offer = _ref5.offer;\n    var isStandard = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var fortuneUsed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var insuranceFortuneUsed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    // Return undefined if the counterpartOffer doesn't exist\n    if (!isStandard && !offer.counterpartOffer) {\n      return undefined;\n    } // Make a copy of the loan\n\n\n    var r = (0, _extends3.default)({}, loan, {\n      general: (0, _extends3.default)({}, loan.general, {\n        fortuneUsed: fortuneUsed || loan.general.fortuneUsed,\n        insuranceFortuneUsed: insuranceFortuneUsed || loan.general.insuranceFortuneUsed\n      })\n    }); // Modify it to include additional parameters\n    // r.general.fortuneUsed = fortuneUsed || r.general.fortuneUsed;\n    // r.general.insuranceFortuneUsed =\n    //   insuranceFortuneUsed || r.general.insuranceFortuneUsed;\n\n    var loanValue = _getLoanValue({\n      loan: r,\n      property: property\n    });\n\n    var maintenance = constants.maintenanceReal * (property.value + (r.general.propertyWork || 0));\n    var amortization = isStandard ? offer.standardOffer.amortization : offer.counterpartOffer.amortization;\n    amortization = amortization || constants.amortization;\n\n    var interests = _getInterestsWithOffer({\n      loan: r,\n      offer: offer\n    }, isStandard);\n\n    return interests >= 0 ? Math.round((maintenance + loanValue * amortization + interests) / 12) || 0 : 0;\n  }\n\n  return _getMonthlyWithOffer;\n}();\n\nvar _getMonthlyWithExtractedOffer = function () {\n  function _getMonthlyWithExtractedOffer(_ref6) {\n    var loan = _ref6.loan,\n        offer = _ref6.offer,\n        property = _ref6.property;\n    return _getMonthlyWithOffer({\n      loan: loan,\n      property: property,\n      offer: (0, _defineProperty3.default)({}, offer.type === _OFFER_TYPE.STANDARD ? 'standardOffer' : 'counterpartOffer', offer)\n    }, offer.type === _OFFER_TYPE.STANDARD);\n  }\n\n  return _getMonthlyWithExtractedOffer;\n}();\n\nvar _getPropAndWork = function () {\n  function _getPropAndWork(_ref7) {\n    var loan = _ref7.loan,\n        property = _ref7.property;\n    return property && property.value + (loan && loan.general && loan.general.propertyWork || 0) || 0;\n  }\n\n  return _getPropAndWork;\n}();\n\nvar _getTotalUsed = function () {\n  function _getTotalUsed(_ref8) {\n    var loan = _ref8.loan;\n    return Math.round(loan.general.fortuneUsed + (loan.general.insuranceFortuneUsed || 0));\n  }\n\n  return _getTotalUsed;\n}();\n\nvar _getBorrowRatio = function () {\n  function _getBorrowRatio(_ref9) {\n    var loan = _ref9.loan,\n        property = _ref9.property;\n\n    var loanValue = _getLoanValue({\n      loan: loan,\n      property: property\n    });\n\n    var propAndWork = _getPropAndWork({\n      loan: loan,\n      property: property\n    });\n\n    return loanValue / propAndWork;\n  }\n\n  return _getBorrowRatio;\n}();\n\nvar _getLenderCount = function () {\n  function _getLenderCount(_ref10) {\n    var loan = _ref10.loan,\n        borrowers = _ref10.borrowers,\n        property = _ref10.property;\n\n    var incomeRatio = _getIncomeRatio({\n      loan: loan,\n      borrowers: borrowers,\n      property: property\n    });\n\n    var borrowRatio = _getBorrowRatio({\n      loan: loan,\n      property: property\n    });\n\n    if (incomeRatio > 0.38) {\n      return 0;\n    } else if (incomeRatio > 1 / 3) {\n      return 4;\n    } else if (borrowRatio <= 0.65) {\n      return 20;\n    } else if (borrowRatio > 0.65 && borrowRatio <= 0.9) {\n      return 10;\n    }\n\n    return 0;\n  }\n\n  return _getLenderCount;\n}();\n\nvar _disableForms = function () {\n  function _disableForms(_ref11) {\n    var loan = _ref11.loan;\n    return !!(loan.logic && (loan.logic.step > 1 || loan.logic.verification && (loan.logic.verification.requested || loan.logic.verification.validated !== undefined)));\n  }\n\n  return _disableForms;\n}();\n\nvar _getFees = function () {\n  function _getFees(_ref12) {\n    var loan = _ref12.loan,\n        property = _ref12.property;\n    var notaryFees = property.value * constants.notaryFees;\n    var insuranceFees = 0;\n\n    if (loan.general.usageType === _USAGE_TYPE.PRIMARY) {\n      insuranceFees = loan.general.insuranceFortuneUsed * constants.lppFees;\n    }\n\n    return notaryFees + (insuranceFees || 0);\n  }\n\n  return _getFees;\n}();\n\nvar _isLoanValid = function () {\n  function _isLoanValid(_ref13) {\n    var loan = _ref13.loan,\n        borrowers = _ref13.borrowers,\n        property = _ref13.property;\n\n    var incomeRatio = _getIncomeRatio({\n      loan: loan,\n      borrowers: borrowers,\n      property: property\n    });\n\n    var borrowRatio = _getBorrowRatio({\n      loan: loan,\n      borrowers: borrowers,\n      property: property\n    });\n\n    var fees = _getFees({\n      loan: loan,\n      property: property\n    });\n\n    var propAndWork = _getPropAndWork({\n      loan: loan,\n      property: property\n    });\n\n    var cashRequired = constants.minCash * propAndWork + fees;\n\n    if (incomeRatio > 0.38) {\n      throw new Error('income');\n    } else if (loan.general.fortuneUsed < cashRequired) {\n      throw new Error('cash');\n    } else if (borrowRatio > 0.8) {\n      throw new Error('ownFunds');\n    }\n\n    return true;\n  }\n\n  return _isLoanValid;\n}();\n\nvar _getPropertyCompletion = function () {\n  function _getPropertyCompletion(_ref14) {\n    var loan = _ref14.loan,\n        borrowers = _ref14.borrowers,\n        property = _ref14.property;\n\n    var formsProgress = _propertyPercent(loan, borrowers, property);\n\n    var filesProgress = _filesPercent(property, _propertyFiles, 'auction');\n\n    return (formsProgress + filesProgress) / 2;\n  }\n\n  return _getPropertyCompletion;\n}();\n\nvar _validateRatios = function () {\n  function _validateRatios(incomeRatio, borrowRatio) {\n    var allowInsurance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var borrowRatioWanted = arguments[3];\n    // To prevent rounding errors\n    var incomeRatioSafe = incomeRatio - 0.001;\n    var borrowRatioSafe = borrowRatio - 0.001;\n\n    if (borrowRatioWanted && borrowRatioWanted !== 0.8) {\n      if (borrowRatioSafe > borrowRatioWanted) {\n        throw new Error('fortune');\n      }\n    }\n\n    if (incomeRatioSafe > 0.38) {\n      throw new Error('income');\n    } else if (!allowInsurance && borrowRatioSafe > 0.8) {\n      throw new Error('fortune');\n    } else if (borrowRatioSafe > 0.9) {\n      throw new Error('fortune');\n    } else if (incomeRatioSafe > 1 / 3) {\n      throw new Error('incomeTight');\n    } else if (borrowRatioSafe > 0.8) {\n      throw new Error('fortuneTight');\n    }\n\n    return true;\n  }\n\n  return _validateRatios;\n}();\n\nvar _validateRatiosCompletely = function () {\n  function _validateRatiosCompletely(incomeRatio, borrowRatio) {\n    var allowInsurance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var borrowRatioWanted = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.9;\n\n    try {\n      _validateRatios(incomeRatio, borrowRatio, borrowRatioWanted, allowInsurance);\n\n      return {\n        isValid: true,\n        message: 'valid',\n        message2: '',\n        icon: 'check',\n        className: 'success'\n      };\n    } catch (error) {\n      var isTight = error.message.indexOf('Tight') >= 0;\n      return {\n        isValid: false,\n        message: \"\" + error.message,\n        message2: error.message + \"2\",\n        icon: isTight ? 'warning' : 'close',\n        className: isTight ? 'warning' : 'error'\n      };\n    }\n  }\n\n  return _validateRatiosCompletely;\n}();\n\nvar _getMaintenance = function () {\n  function _getMaintenance(_ref15) {\n    var property = _ref15.property;\n    return property.value * 0.01 / 12;\n  }\n\n  return _getMaintenance;\n}();\n\nvar _strategyDone = function () {\n  function _strategyDone(_ref16) {\n    var loan = _ref16.loan,\n        property = _ref16.property;\n    var general = loan.general,\n        logic = loan.logic;\n\n    if (general.insuranceFortuneUsed > 0 && !logic.insuranceUsePreset) {\n      return false;\n    }\n\n    if (!logic.amortizationStrategyPreset) {\n      return false;\n    }\n\n    if (!logic.loanStrategyPreset) {\n      return false;\n    }\n\n    if (logic.loanStrategyPreset === _LOAN_STRATEGY_PRESET.MANUAL && !_loanStrategySuccess(general.loanTranches, _getLoanValue({\n      loan: loan,\n      property: property\n    }, true))) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return _strategyDone;\n}();\n\nvar _getAuctionEndTime = function () {\n  function _getAuctionEndTime(startTime) {\n    var time = moment(startTime);\n\n    if (time.isoWeekday() === 6) {\n      // On saturdays, go to Tuesday\n      time.add(3, 'd');\n    } else if (time.isoWeekday() === 7) {\n      // On saturdays, go to Tuesday\n      time.add(2, 'd');\n    } else if (time.hour() >= 0 && time.hour() < 7) {\n      // If the start time is between midnight and 7:00,\n      // set endtime to be tomorrow night\n      time.add(1, 'd');\n    } else {\n      // Else, set endtime in 2 days from now\n      time.add(2, 'd');\n    } // Skip weekends\n\n\n    if (time.isoWeekday() === 6 || time.isoWeekday() === 7) {\n      // Saturday or Sunday\n      time.add(2, 'd');\n    } // Auctions always end at midnight\n\n\n    time.hours(23);\n    time.minutes(59);\n    time.seconds(59);\n    time.milliseconds(0);\n    return time.toDate();\n  }\n\n  return _getAuctionEndTime;\n}();","map":{"version":3,"sources":["imports/core/utils/loanFunctions.js"],"names":["module","export","getProjectValue","getLoanValue","loanStrategySuccess","strategiesChosen","getInterestsWithOffer","getMonthlyWithOffer","getMonthlyWithExtractedOffer","getPropAndWork","getTotalUsed","getBorrowRatio","getLenderCount","disableForms","getFees","isLoanValid","getPropertyCompletion","validateRatios","validateRatiosCompletely","getMaintenance","strategyDone","getAuctionEndTime","moment","watch","require","v","constants","USAGE_TYPE","LOAN_STRATEGY_PRESET","OFFER_TYPE","getIncomeRatio","propertyPercent","filesPercent","loanFiles","propertyFiles","loan","property","value","notaryFees","general","propertyWork","usageType","PRIMARY","insuranceFortuneUsed","lppFees","Math","max","round","roundedTo10000","fortuneUsed","loanTranches","loanValue","Number","isInteger","Error","length","trancheSum","reduce","tot","tranche","logic","amortizationStrategyPreset","hasValidatedCashStrategy","offer","isStandard","tranches","interestRates","standardOffer","counterpartOffer","interests","every","rate","type","undefined","r","maintenance","maintenanceReal","amortization","STANDARD","propAndWork","borrowers","incomeRatio","borrowRatio","step","verification","requested","validated","insuranceFees","fees","cashRequired","minCash","formsProgress","filesProgress","allowInsurance","borrowRatioWanted","incomeRatioSafe","borrowRatioSafe","isValid","message","message2","icon","className","error","isTight","indexOf","insuranceUsePreset","loanStrategyPreset","MANUAL","startTime","time","isoWeekday","add","hour","hours","minutes","seconds","milliseconds","toDate"],"mappings":";;;;;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC;AAAgB;AAAA,aAAIA,gBAAJ;AAAA;;AAAhB;AAAA,KAAD;AAAqCC;AAAa;AAAA,aAAIA,aAAJ;AAAA;;AAAb;AAAA,KAArC;AAAmEC;AAAoB;AAAA,aAAIA,oBAAJ;AAAA;;AAApB;AAAA,KAAnE;AAA+GC;AAAiB;AAAA,aAAIA,iBAAJ;AAAA;;AAAjB;AAAA,KAA/G;AAAqJC;AAAsB;AAAA,aAAIA,sBAAJ;AAAA;;AAAtB;AAAA,KAArJ;AAAqMC;AAAoB;AAAA,aAAIA,oBAAJ;AAAA;;AAApB;AAAA,KAArM;AAAiPC;AAA6B;AAAA,aAAIA,6BAAJ;AAAA;;AAA7B;AAAA,KAAjP;AAA+SC;AAAe;AAAA,aAAIA,eAAJ;AAAA;;AAAf;AAAA,KAA/S;AAAiVC;AAAa;AAAA,aAAIA,aAAJ;AAAA;;AAAb;AAAA,KAAjV;AAA+WC;AAAe;AAAA,aAAIA,eAAJ;AAAA;;AAAf;AAAA,KAA/W;AAAiZC;AAAe;AAAA,aAAIA,eAAJ;AAAA;;AAAf;AAAA,KAAjZ;AAAmbC;AAAa;AAAA,aAAIA,aAAJ;AAAA;;AAAb;AAAA,KAAnb;AAAidC;AAAQ;AAAA,aAAIA,QAAJ;AAAA;;AAAR;AAAA,KAAjd;AAAqeC;AAAY;AAAA,aAAIA,YAAJ;AAAA;;AAAZ;AAAA,KAAre;AAAigBC;AAAsB;AAAA,aAAIA,sBAAJ;AAAA;;AAAtB;AAAA,KAAjgB;AAAijBC;AAAe;AAAA,aAAIA,eAAJ;AAAA;;AAAf;AAAA,KAAjjB;AAAmlBC;AAAyB;AAAA,aAAIA,yBAAJ;AAAA;;AAAzB;AAAA,KAAnlB;AAAyoBC;AAAe;AAAA,aAAIA,eAAJ;AAAA;;AAAf;AAAA,KAAzoB;AAA2qBC;AAAa;AAAA,aAAIA,aAAJ;AAAA;;AAAb;AAAA,KAA3qB;AAAysBC;AAAkB;AAAA,aAAIA,kBAAJ;AAAA;;AAAlB;AAAA;AAAzsB,CAAd;AAAiwB,IAAIC,eAAJ;AAAWtB,OAAOuB,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACH,eAAOG,CAAP;AAAS;;AAArB;AAAA;AAAA,CAA/B,EAAsD,CAAtD;AAAyD,IAAIC,kBAAJ;AAAc1B,OAAOuB,KAAP,CAAaC,QAAQ,qBAAR,CAAb,EAA4C;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACC,kBAAUD,CAAV;AAAY;;AAAxB;AAAA;AAAA,CAA5C,EAAsE,CAAtE;;AAAyE,IAAIE,oBAAJ;AAAA,IAAeC,8BAAf;AAAA,IAAoCC,oBAApC;;AAA+C7B,OAAOuB,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACG,YAAD;AAAA,wBAAYF,CAAZ,EAAc;AAACE,oBAAWF,CAAX;AAAa;;AAA5B;AAAA;AAA6BG,sBAA7B;AAAA,kCAAkDH,CAAlD,EAAoD;AAACG,8BAAqBH,CAArB;AAAuB;;AAA5E;AAAA;AAA6EI,YAA7E;AAAA,wBAAwFJ,CAAxF,EAA0F;AAACI,oBAAWJ,CAAX;AAAa;;AAAxG;AAAA;AAAA,CAAzC,EAAmJ,CAAnJ;;;AAAsJ,IAAIK,wBAAJ;;AAAmB9B,OAAOuB,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACM,gBAAD;AAAA,4BAAgBL,CAAhB,EAAkB;AAACK,wBAAeL,CAAf;AAAiB;;AAApC;AAAA;AAAA,CAAvC,EAA6E,CAA7E;;AAAgF,IAAIM,yBAAJ;AAAA,IAAoBC,sBAApB;;AAAiChC,OAAOuB,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACO,iBAAD;AAAA,6BAAiBN,CAAjB,EAAmB;AAACM,yBAAgBN,CAAhB;AAAkB;;AAAtC;AAAA;AAAuCO,cAAvC;AAAA,0BAAoDP,CAApD,EAAsD;AAACO,sBAAaP,CAAb;AAAe;;AAAtE;AAAA;AAAA,CAAxC,EAAgH,CAAhH;;AAAmH,IAAIQ,mBAAJ;AAAA,IAAcC,uBAAd;;AAA4BlC,OAAOuB,KAAP,CAAaC,QAAQ,oBAAR,CAAb,EAA2C;AAACS,WAAD;AAAA,uBAAWR,CAAX,EAAa;AAACQ,mBAAUR,CAAV;AAAY;;AAA1B;AAAA;AAA2BS,eAA3B;AAAA,2BAAyCT,CAAzC,EAA2C;AAACS,uBAAcT,CAAd;AAAgB;;AAA5D;AAAA;AAAA,CAA3C,EAAyG,CAAzG;;AAQ72C,IAAMvB;AAAkB,WAAlBA,gBAAkB,OAAwB;AAAA,QAArBiC,IAAqB,QAArBA,IAAqB;AAAA,QAAfC,QAAe,QAAfA,QAAe;;AACrD,QAAI,CAACA,QAAD,IAAa,CAACA,SAASC,KAA3B,EAAkC;AAChC,aAAO,CAAP;AACD,KAFD,MAEO,IAAID,SAASC,KAAT,IAAkB,CAAtB,EAAyB;AAC9B,aAAO,CAAP;AACD;;AAED,QAAIA,QACFD,SAASC,KAAT,IAAkB,IAAIX,UAAUY,UAAhC,KACCH,KAAKI,OAAL,CAAaC,YAAb,IAA6B,CAD9B,CADF;;AAIA,QAAIL,KAAKI,OAAL,CAAaE,SAAb,KAA2Bd,YAAWe,OAA1C,EAAmD;AACjDL,eAAS,CAACF,KAAKI,OAAL,CAAaI,oBAAb,IAAqC,CAAtC,IAA2CjB,UAAUkB,OAA9D;AACD;;AAED,WAAOC,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKE,KAAL,CAAWV,KAAX,CAAZ,CAAP;AACD;;AAhBY;AAAA,GAAN;;AAkBA,IAAMlC;AAAe,WAAfA,aAAe,QAAqB6C,cAArB,EAAwC;AAAA,QAArCb,IAAqC,SAArCA,IAAqC;AAAA,QAA/BC,QAA+B,SAA/BA,QAA+B;;AAClE,QAAI,CAACD,IAAD,IAAS,CAACA,KAAKI,OAAnB,EAA4B;AAC1B,aAAO,CAAP;AACD;;AAED,QAAIF,QACFnC,iBAAgB;AAAEiC,gBAAF;AAAQC;AAAR,KAAhB,KAAuCD,KAAKI,OAAL,CAAaU,WAAb,IAA4B,CAAnE,CADF;;AAGA,QAAId,KAAKI,OAAL,CAAaE,SAAb,KAA2Bd,YAAWe,OAA1C,EAAmD;AACjDL,eAASF,KAAKI,OAAL,CAAaI,oBAAb,IAAqC,CAA9C;AACD,KAViE,CAYlE;;;AACA,QAAIK,cAAJ,EAAoB;AAClBX,cAAQQ,KAAKE,KAAL,CAAWV,QAAQ,KAAnB,IAA4B,KAApC;AACD,KAfiE,CAiBlE;;;AACA,WAAOQ,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKE,KAAL,CAAWV,KAAX,CAAZ,CAAP;AACD;;AAnBY;AAAA,GAAN;;AAqBA,IAAMjC;AAAsB,WAAtBA,oBAAsB,GAAkC;AAAA,QAAjC8C,YAAiC,uEAAlB,EAAkB;AAAA,QAAdC,SAAc;;AACnE,QAAI,CAACC,OAAOC,SAAP,CAAiBF,SAAjB,CAAL,EAAkC;AAChC,YAAM,IAAIG,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,QAAIJ,aAAaK,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,aAAO,KAAP;AACD,KANkE,CAQnE;;;AACA,QAAMC,aAAaN,aAAaO,MAAb,CACjB,UAACC,GAAD,EAAMC,OAAN;AAAA,aAAkBA,QAAQtB,KAAR,GAAgBqB,GAAlC;AAAA,KADiB,EAEjB,CAFiB,CAAnB;;AAIA,QAAIF,eAAeL,SAAnB,EAA8B;AAC5B;AACA,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD;;AAnBY;AAAA,GAAN;;AAqBA,IAAM9C;AAAmB,WAAnBA,iBAAmB;AAAA,QAAG8B,IAAH,SAAGA,IAAH;AAAA,QAASC,QAAT,SAASA,QAAT;AAAA,WAC9BhC,qBACE+B,KAAKI,OAAL,CAAaW,YADf,EAEE/C,cAAa;AAAEgC,gBAAF;AAAQC;AAAR,KAAb,CAFF,KAIAD,KAAKyB,KAAL,CAAWC,0BAJX,IAKA1B,KAAKyB,KAAL,CAAWE,wBANmB;AAAA;;AAAnB;AAAA,GAAN;;AAkBA,IAAMxD;AAAwB,WAAxBA,sBAAwB,QAAwC;AAAA,QAArC6B,IAAqC,SAArCA,IAAqC;AAAA,QAA/B4B,KAA+B,SAA/BA,KAA+B;AAAA,QAAtBC,UAAsB,uEAAT,IAAS;;AAC3E,QAAI,CAACD,KAAL,EAAY;AACV,aAAO,CAAP;AACD;;AAED,QAAME,WAAW9B,KAAKI,OAAL,CAAaW,YAA9B;AACA,QAAMgB,gBAAgBF,aAClBD,MAAMI,aADY,GAElBJ,MAAMK,gBAFV;AAIA,QAAIC,YAAY,CAAhB;AACAJ,aAASK,KAAT,CAAe,UAACX,OAAD,EAAa;AAC1B,UAAMY,OAAOL,cAAcP,QAAQa,IAAtB,CAAb,CAD0B,CAG1B;;AACA,UAAI,CAACD,IAAL,EAAW;AACTF,oBAAY,CAAC,CAAb,CADS,CAET;;AACA,eAAO,KAAP;AACD;;AAEDA,mBAAaV,QAAQtB,KAAR,GAAgBkC,IAA7B;AACA,aAAO,IAAP;AACD,KAZD;AAcA,WAAOF,aAAa,CAAb,GAAiBxB,KAAKE,KAAL,CAAWsB,YAAY,EAAvB,CAAjB,GAA8CA,SAArD;AACD;;AA1BY;AAAA,GAAN;;AA4BA,IAAM9D;AAAsB,WAAtBA,oBAAsB,QAK9B;AAAA,QAJD4B,IAIC,SAJDA,IAIC;AAAA,QAJKC,QAIL,SAJKA,QAIL;AAAA,QAJe2B,KAIf,SAJeA,KAIf;AAAA,QAHHC,UAGG,uEAHU,IAGV;AAAA,QAFHf,WAEG,uEAFW,CAEX;AAAA,QADHN,oBACG,uEADoB,CACpB;;AACH;AACA,QAAI,CAACqB,UAAD,IAAe,CAACD,MAAMK,gBAA1B,EAA4C;AAC1C,aAAOK,SAAP;AACD,KAJE,CAMH;;;AACA,QAAMC,+BACDvC,IADC;AAEJI,0CACKJ,KAAKI,OADV;AAEEU,qBAAaA,eAAed,KAAKI,OAAL,CAAaU,WAF3C;AAGEN,8BACEA,wBAAwBR,KAAKI,OAAL,CAAaI;AAJzC;AAFI,MAAN,CAPG,CAiBH;AACA;AACA;AACA;;AACA,QAAMQ,YAAYhD,cAAa;AAAEgC,YAAMuC,CAAR;AAAWtC;AAAX,KAAb,CAAlB;;AAEA,QAAMuC,cACJjD,UAAUkD,eAAV,IACCxC,SAASC,KAAT,IAAkBqC,EAAEnC,OAAF,CAAUC,YAAV,IAA0B,CAA5C,CADD,CADF;AAIA,QAAIqC,eAAeb,aACfD,MAAMI,aAAN,CAAoBU,YADL,GAEfd,MAAMK,gBAAN,CAAuBS,YAF3B;AAGAA,mBAAeA,gBAAgBnD,UAAUmD,YAAzC;;AAEA,QAAMR,YAAY/D,uBAAsB;AAAE6B,YAAMuC,CAAR;AAAWX;AAAX,KAAtB,EAA0CC,UAA1C,CAAlB;;AAEA,WAAOK,aAAa,CAAb,GACHxB,KAAKE,KAAL,CAAW,CAAC4B,cAAcxB,YAAY0B,YAA1B,GAAyCR,SAA1C,IAAuD,EAAlE,KAAyE,CADtE,GAEH,CAFJ;AAGD;;AA1CY;AAAA,GAAN;;AA4CA,IAAM7D;AAA+B,WAA/BA,6BAA+B;AAAA,QAAG2B,IAAH,SAAGA,IAAH;AAAA,QAAS4B,KAAT,SAASA,KAAT;AAAA,QAAgB3B,QAAhB,SAAgBA,QAAhB;AAAA,WAC1C7B,qBACE;AACE4B,gBADF;AAEEC,wBAFF;AAGE2B,+CACGA,MAAMS,IAAN,KAAe3C,YAAWiD,QAA1B,GACG,eADH,GAEG,kBAHN,EAG2Bf,KAH3B;AAHF,KADF,EAUEA,MAAMS,IAAN,KAAe3C,YAAWiD,QAV5B,CAD0C;AAAA;;AAA/B;AAAA,GAAN;;AAcA,IAAMrE;AAAiB,WAAjBA,eAAiB;AAAA,QAAG0B,IAAH,SAAGA,IAAH;AAAA,QAASC,QAAT,SAASA,QAAT;AAAA,WAC3BA,YACCA,SAASC,KAAT,IACIF,QAAQA,KAAKI,OAAb,IAAwBJ,KAAKI,OAAL,CAAaC,YAAtC,IAAuD,CAD1D,CADF,IAGA,CAJ4B;AAAA;;AAAjB;AAAA,GAAN;;AAMA,IAAM9B;AAAe,WAAfA,aAAe;AAAA,QAAGyB,IAAH,SAAGA,IAAH;AAAA,WAC1BU,KAAKE,KAAL,CAAWZ,KAAKI,OAAL,CAAaU,WAAb,IAA4Bd,KAAKI,OAAL,CAAaI,oBAAb,IAAqC,CAAjE,CAAX,CAD0B;AAAA;;AAAf;AAAA,GAAN;;AAGA,IAAMhC;AAAiB,WAAjBA,eAAiB,QAAwB;AAAA,QAArBwB,IAAqB,SAArBA,IAAqB;AAAA,QAAfC,QAAe,SAAfA,QAAe;;AACpD,QAAMe,YAAYhD,cAAa;AAAEgC,gBAAF;AAAQC;AAAR,KAAb,CAAlB;;AACA,QAAM2C,cAActE,gBAAe;AAAE0B,gBAAF;AAAQC;AAAR,KAAf,CAApB;;AAEA,WAAOe,YAAY4B,WAAnB;AACD;;AALY;AAAA,GAAN;;AAOA,IAAMnE;AAAiB,WAAjBA,eAAiB,SAAmC;AAAA,QAAhCuB,IAAgC,UAAhCA,IAAgC;AAAA,QAA1B6C,SAA0B,UAA1BA,SAA0B;AAAA,QAAf5C,QAAe,UAAfA,QAAe;;AAC/D,QAAM6C,cAAcnD,gBAAe;AAAEK,gBAAF;AAAQ6C,0BAAR;AAAmB5C;AAAnB,KAAf,CAApB;;AACA,QAAM8C,cAAcvE,gBAAe;AAAEwB,gBAAF;AAAQC;AAAR,KAAf,CAApB;;AACA,QAAI6C,cAAc,IAAlB,EAAwB;AACtB,aAAO,CAAP;AACD,KAFD,MAEO,IAAIA,cAAc,IAAI,CAAtB,EAAyB;AAC9B,aAAO,CAAP;AACD,KAFM,MAEA,IAAIC,eAAe,IAAnB,EAAyB;AAC9B,aAAO,EAAP;AACD,KAFM,MAEA,IAAIA,cAAc,IAAd,IAAsBA,eAAe,GAAzC,EAA8C;AACnD,aAAO,EAAP;AACD;;AAED,WAAO,CAAP;AACD;;AAdY;AAAA,GAAN;;AAgBA,IAAMrE;AAAe,WAAfA,aAAe;AAAA,QAAGsB,IAAH,UAAGA,IAAH;AAAA,WAC1B,CAAC,EACCA,KAAKyB,KAAL,KACCzB,KAAKyB,KAAL,CAAWuB,IAAX,GAAkB,CAAlB,IACEhD,KAAKyB,KAAL,CAAWwB,YAAX,KACEjD,KAAKyB,KAAL,CAAWwB,YAAX,CAAwBC,SAAxB,IACClD,KAAKyB,KAAL,CAAWwB,YAAX,CAAwBE,SAAxB,KAAsCb,SAFzC,CAFH,CADD,CADyB;AAAA;;AAAf;AAAA,GAAN;;AASA,IAAM3D;AAAU,WAAVA,QAAU,SAAwB;AAAA,QAArBqB,IAAqB,UAArBA,IAAqB;AAAA,QAAfC,QAAe,UAAfA,QAAe;AAC7C,QAAME,aAAaF,SAASC,KAAT,GAAiBX,UAAUY,UAA9C;AACA,QAAIiD,gBAAgB,CAApB;;AAEA,QAAIpD,KAAKI,OAAL,CAAaE,SAAb,KAA2Bd,YAAWe,OAA1C,EAAmD;AACjD6C,sBAAgBpD,KAAKI,OAAL,CAAaI,oBAAb,GAAoCjB,UAAUkB,OAA9D;AACD;;AAED,WAAON,cAAciD,iBAAiB,CAA/B,CAAP;AACD;;AATY;AAAA,GAAN;;AAWA,IAAMxE;AAAc,WAAdA,YAAc,SAAmC;AAAA,QAAhCoB,IAAgC,UAAhCA,IAAgC;AAAA,QAA1B6C,SAA0B,UAA1BA,SAA0B;AAAA,QAAf5C,QAAe,UAAfA,QAAe;;AAC5D,QAAM6C,cAAcnD,gBAAe;AAAEK,gBAAF;AAAQ6C,0BAAR;AAAmB5C;AAAnB,KAAf,CAApB;;AACA,QAAM8C,cAAcvE,gBAAe;AAAEwB,gBAAF;AAAQ6C,0BAAR;AAAmB5C;AAAnB,KAAf,CAApB;;AACA,QAAMoD,OAAO1E,SAAQ;AAAEqB,gBAAF;AAAQC;AAAR,KAAR,CAAb;;AACA,QAAM2C,cAActE,gBAAe;AAAE0B,gBAAF;AAAQC;AAAR,KAAf,CAApB;;AAEA,QAAMqD,eAAe/D,UAAUgE,OAAV,GAAoBX,WAApB,GAAkCS,IAAvD;;AAEA,QAAIP,cAAc,IAAlB,EAAwB;AACtB,YAAM,IAAI3B,KAAJ,CAAU,QAAV,CAAN;AACD,KAFD,MAEO,IAAInB,KAAKI,OAAL,CAAaU,WAAb,GAA2BwC,YAA/B,EAA6C;AAClD,YAAM,IAAInC,KAAJ,CAAU,MAAV,CAAN;AACD,KAFM,MAEA,IAAI4B,cAAc,GAAlB,EAAuB;AAC5B,YAAM,IAAI5B,KAAJ,CAAU,UAAV,CAAN;AACD;;AAED,WAAO,IAAP;AACD;;AAjBY;AAAA,GAAN;;AAmBA,IAAMtC;AAAwB,WAAxBA,sBAAwB,SAAmC;AAAA,QAAhCmB,IAAgC,UAAhCA,IAAgC;AAAA,QAA1B6C,SAA0B,UAA1BA,SAA0B;AAAA,QAAf5C,QAAe,UAAfA,QAAe;;AACtE,QAAMuD,gBAAgB5D,iBAAgBI,IAAhB,EAAsB6C,SAAtB,EAAiC5C,QAAjC,CAAtB;;AACA,QAAMwD,gBAAgB5D,cAAaI,QAAb,EAAuBF,cAAvB,EAAsC,SAAtC,CAAtB;;AAEA,WAAO,CAACyD,gBAAgBC,aAAjB,IAAkC,CAAzC;AACD;;AALY;AAAA,GAAN;;AAMA,IAAM3E;AAAiB,WAAjBA,eAAiB,CAC5BgE,WAD4B,EAE5BC,WAF4B,EAKzB;AAAA,QAFHW,cAEG,uEAFc,IAEd;AAAA,QADHC,iBACG;AACH;AACA,QAAMC,kBAAkBd,cAAc,KAAtC;AACA,QAAMe,kBAAkBd,cAAc,KAAtC;;AAEA,QAAIY,qBAAqBA,sBAAsB,GAA/C,EAAoD;AAClD,UAAIE,kBAAkBF,iBAAtB,EAAyC;AACvC,cAAM,IAAIxC,KAAJ,CAAU,SAAV,CAAN;AACD;AACF;;AAED,QAAIyC,kBAAkB,IAAtB,EAA4B;AAC1B,YAAM,IAAIzC,KAAJ,CAAU,QAAV,CAAN;AACD,KAFD,MAEO,IAAI,CAACuC,cAAD,IAAmBG,kBAAkB,GAAzC,EAA8C;AACnD,YAAM,IAAI1C,KAAJ,CAAU,SAAV,CAAN;AACD,KAFM,MAEA,IAAI0C,kBAAkB,GAAtB,EAA2B;AAChC,YAAM,IAAI1C,KAAJ,CAAU,SAAV,CAAN;AACD,KAFM,MAEA,IAAIyC,kBAAkB,IAAI,CAA1B,EAA6B;AAClC,YAAM,IAAIzC,KAAJ,CAAU,aAAV,CAAN;AACD,KAFM,MAEA,IAAI0C,kBAAkB,GAAtB,EAA2B;AAChC,YAAM,IAAI1C,KAAJ,CAAU,cAAV,CAAN;AACD;;AAED,WAAO,IAAP;AACD;;AA7BY;AAAA,GAAN;;AA+BA,IAAMpC;AAA2B,WAA3BA,yBAA2B,CACtC+D,WADsC,EAEtCC,WAFsC,EAKnC;AAAA,QAFHW,cAEG,uEAFc,IAEd;AAAA,QADHC,iBACG,uEADiB,GACjB;;AACH,QAAI;AACF7E,sBAAegE,WAAf,EAA4BC,WAA5B,EAAyCY,iBAAzC,EAA4DD,cAA5D;;AACA,aAAO;AACLI,iBAAS,IADJ;AAELC,iBAAS,OAFJ;AAGLC,kBAAU,EAHL;AAILC,cAAM,OAJD;AAKLC,mBAAW;AALN,OAAP;AAOD,KATD,CASE,OAAOC,KAAP,EAAc;AACd,UAAMC,UAAUD,MAAMJ,OAAN,CAAcM,OAAd,CAAsB,OAAtB,KAAkC,CAAlD;AACA,aAAO;AACLP,iBAAS,KADJ;AAELC,sBAAYI,MAAMJ,OAFb;AAGLC,kBAAaG,MAAMJ,OAAnB,MAHK;AAILE,cAAMG,UAAU,SAAV,GAAsB,OAJvB;AAKLF,mBAAWE,UAAU,SAAV,GAAsB;AAL5B,OAAP;AAOD;AACF;;AAzBY;AAAA,GAAN;;AA4BA,IAAMpF;AAAiB,WAAjBA,eAAiB;AAAA,QAAGiB,QAAH,UAAGA,QAAH;AAAA,WAAkBA,SAASC,KAAT,GAAiB,IAAjB,GAAwB,EAA1C;AAAA;;AAAjB;AAAA,GAAN;;AAEA,IAAMjB;AAAe,WAAfA,aAAe,SAAwB;AAAA,QAArBe,IAAqB,UAArBA,IAAqB;AAAA,QAAfC,QAAe,UAAfA,QAAe;AAAA,QAC1CG,OAD0C,GACvBJ,IADuB,CAC1CI,OAD0C;AAAA,QACjCqB,KADiC,GACvBzB,IADuB,CACjCyB,KADiC;;AAElD,QAAIrB,QAAQI,oBAAR,GAA+B,CAA/B,IAAoC,CAACiB,MAAM6C,kBAA/C,EAAmE;AACjE,aAAO,KAAP;AACD;;AAED,QAAI,CAAC7C,MAAMC,0BAAX,EAAuC;AACrC,aAAO,KAAP;AACD;;AAED,QAAI,CAACD,MAAM8C,kBAAX,EAA+B;AAC7B,aAAO,KAAP;AACD;;AAED,QACE9C,MAAM8C,kBAAN,KAA6B9E,sBAAqB+E,MAAlD,IACA,CAACvG,qBACCmC,QAAQW,YADT,EAEC/C,cAAa;AAAEgC,gBAAF;AAAQC;AAAR,KAAb,EAAiC,IAAjC,CAFD,CAFH,EAME;AACA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAzBY;AAAA,GAAN;;AA4BA,IAAMf;AAAoB,WAApBA,kBAAoB,CAACuF,SAAD,EAAe;AAC9C,QAAMC,OAAOvF,OAAOsF,SAAP,CAAb;;AAEA,QAAIC,KAAKC,UAAL,OAAsB,CAA1B,EAA6B;AAC3B;AACAD,WAAKE,GAAL,CAAS,CAAT,EAAY,GAAZ;AACD,KAHD,MAGO,IAAIF,KAAKC,UAAL,OAAsB,CAA1B,EAA6B;AAClC;AACAD,WAAKE,GAAL,CAAS,CAAT,EAAY,GAAZ;AACD,KAHM,MAGA,IAAIF,KAAKG,IAAL,MAAe,CAAf,IAAoBH,KAAKG,IAAL,KAAc,CAAtC,EAAyC;AAC9C;AACA;AACAH,WAAKE,GAAL,CAAS,CAAT,EAAY,GAAZ;AACD,KAJM,MAIA;AACL;AACAF,WAAKE,GAAL,CAAS,CAAT,EAAY,GAAZ;AACD,KAhB6C,CAkB9C;;;AACA,QAAIF,KAAKC,UAAL,OAAsB,CAAtB,IAA2BD,KAAKC,UAAL,OAAsB,CAArD,EAAwD;AACtD;AACAD,WAAKE,GAAL,CAAS,CAAT,EAAY,GAAZ;AACD,KAtB6C,CAwB9C;;;AACAF,SAAKI,KAAL,CAAW,EAAX;AACAJ,SAAKK,OAAL,CAAa,EAAb;AACAL,SAAKM,OAAL,CAAa,EAAb;AACAN,SAAKO,YAAL,CAAkB,CAAlB;AAEA,WAAOP,KAAKQ,MAAL,EAAP;AACD;;AA/BY;AAAA,GAAN","file":"imports/core/utils/loanFunctions.js.map","sourcesContent":["import moment from 'moment';\n\nimport constants from '../config/constants';\nimport { USAGE_TYPE, LOAN_STRATEGY_PRESET, OFFER_TYPE } from '../api/constants';\nimport { getIncomeRatio } from './finance-math';\nimport { propertyPercent, filesPercent } from '../arrays/steps';\nimport { loanFiles, propertyFiles } from '../api/files/files';\n\nexport const getProjectValue = ({ loan, property }) => {\n  if (!property || !property.value) {\n    return 0;\n  } else if (property.value <= 0) {\n    return 0;\n  }\n\n  let value =\n    property.value * (1 + constants.notaryFees) +\n    (loan.general.propertyWork || 0);\n\n  if (loan.general.usageType === USAGE_TYPE.PRIMARY) {\n    value += (loan.general.insuranceFortuneUsed || 0) * constants.lppFees;\n  }\n\n  return Math.max(0, Math.round(value));\n};\n\nexport const getLoanValue = ({ loan, property }, roundedTo10000) => {\n  if (!loan || !loan.general) {\n    return 0;\n  }\n\n  let value =\n    getProjectValue({ loan, property }) - (loan.general.fortuneUsed || 0);\n\n  if (loan.general.usageType === USAGE_TYPE.PRIMARY) {\n    value -= loan.general.insuranceFortuneUsed || 0;\n  }\n\n  // Do this when picking tranches\n  if (roundedTo10000) {\n    value = Math.round(value / 10000) * 10000;\n  }\n\n  // Check negative values\n  return Math.max(0, Math.round(value));\n};\n\nexport const loanStrategySuccess = (loanTranches = [], loanValue) => {\n  if (!Number.isInteger(loanValue)) {\n    throw new Error('loanValue must be an integer');\n  }\n  if (loanTranches.length < 1) {\n    return false;\n  }\n\n  // User has to choose a preset\n  const trancheSum = loanTranches.reduce(\n    (tot, tranche) => tranche.value + tot,\n    0,\n  );\n  if (trancheSum === loanValue) {\n    // If the sum of all tranches is equal to the loan, success!\n    return true;\n  }\n\n  return false;\n};\n\nexport const strategiesChosen = ({ loan, property }) =>\n  loanStrategySuccess(\n    loan.general.loanTranches,\n    getLoanValue({ loan, property }),\n  ) &&\n  loan.logic.amortizationStrategyPreset &&\n  loan.logic.hasValidatedCashStrategy;\n\n/**\n * getInterestsWithOffer - Get the aggregate monthly interest rate for a\n * loan and an offer\n *\n * @param {type}    loan              Description\n * @param {type}    offer                    Description\n * @param {boolean} [withCounterparts=false] Description\n *\n * @return {Number} min 0\n */\nexport const getInterestsWithOffer = ({ loan, offer }, isStandard = true) => {\n  if (!offer) {\n    return 0;\n  }\n\n  const tranches = loan.general.loanTranches;\n  const interestRates = isStandard\n    ? offer.standardOffer\n    : offer.counterpartOffer;\n\n  let interests = 0;\n  tranches.every((tranche) => {\n    const rate = interestRates[tranche.type];\n\n    // If the lender doesn't have this interest rate, return false\n    if (!rate) {\n      interests = -1;\n      // break loop\n      return false;\n    }\n\n    interests += tranche.value * rate;\n    return true;\n  });\n\n  return interests >= 0 ? Math.round(interests / 12) : interests;\n};\n\nexport const getMonthlyWithOffer = (\n  { loan, property, offer },\n  isStandard = true,\n  fortuneUsed = 0,\n  insuranceFortuneUsed = 0,\n) => {\n  // Return undefined if the counterpartOffer doesn't exist\n  if (!isStandard && !offer.counterpartOffer) {\n    return undefined;\n  }\n\n  // Make a copy of the loan\n  const r = {\n    ...loan,\n    general: {\n      ...loan.general,\n      fortuneUsed: fortuneUsed || loan.general.fortuneUsed,\n      insuranceFortuneUsed:\n        insuranceFortuneUsed || loan.general.insuranceFortuneUsed,\n    },\n  };\n\n  // Modify it to include additional parameters\n  // r.general.fortuneUsed = fortuneUsed || r.general.fortuneUsed;\n  // r.general.insuranceFortuneUsed =\n  //   insuranceFortuneUsed || r.general.insuranceFortuneUsed;\n  const loanValue = getLoanValue({ loan: r, property });\n\n  const maintenance =\n    constants.maintenanceReal *\n    (property.value + (r.general.propertyWork || 0));\n\n  let amortization = isStandard\n    ? offer.standardOffer.amortization\n    : offer.counterpartOffer.amortization;\n  amortization = amortization || constants.amortization;\n\n  const interests = getInterestsWithOffer({ loan: r, offer }, isStandard);\n\n  return interests >= 0\n    ? Math.round((maintenance + loanValue * amortization + interests) / 12) || 0\n    : 0;\n};\n\nexport const getMonthlyWithExtractedOffer = ({ loan, offer, property }) =>\n  getMonthlyWithOffer(\n    {\n      loan,\n      property,\n      offer: {\n        [offer.type === OFFER_TYPE.STANDARD\n          ? 'standardOffer'\n          : 'counterpartOffer']: offer,\n      },\n    },\n    offer.type === OFFER_TYPE.STANDARD,\n  );\n\nexport const getPropAndWork = ({ loan, property }) =>\n  (property &&\n    property.value +\n      ((loan && loan.general && loan.general.propertyWork) || 0)) ||\n  0;\n\nexport const getTotalUsed = ({ loan }) =>\n  Math.round(loan.general.fortuneUsed + (loan.general.insuranceFortuneUsed || 0));\n\nexport const getBorrowRatio = ({ loan, property }) => {\n  const loanValue = getLoanValue({ loan, property });\n  const propAndWork = getPropAndWork({ loan, property });\n\n  return loanValue / propAndWork;\n};\n\nexport const getLenderCount = ({ loan, borrowers, property }) => {\n  const incomeRatio = getIncomeRatio({ loan, borrowers, property });\n  const borrowRatio = getBorrowRatio({ loan, property });\n  if (incomeRatio > 0.38) {\n    return 0;\n  } else if (incomeRatio > 1 / 3) {\n    return 4;\n  } else if (borrowRatio <= 0.65) {\n    return 20;\n  } else if (borrowRatio > 0.65 && borrowRatio <= 0.9) {\n    return 10;\n  }\n\n  return 0;\n};\n\nexport const disableForms = ({ loan }) =>\n  !!(\n    loan.logic &&\n    (loan.logic.step > 1 ||\n      (loan.logic.verification &&\n        (loan.logic.verification.requested ||\n          loan.logic.verification.validated !== undefined)))\n  );\n\nexport const getFees = ({ loan, property }) => {\n  const notaryFees = property.value * constants.notaryFees;\n  let insuranceFees = 0;\n\n  if (loan.general.usageType === USAGE_TYPE.PRIMARY) {\n    insuranceFees = loan.general.insuranceFortuneUsed * constants.lppFees;\n  }\n\n  return notaryFees + (insuranceFees || 0);\n};\n\nexport const isLoanValid = ({ loan, borrowers, property }) => {\n  const incomeRatio = getIncomeRatio({ loan, borrowers, property });\n  const borrowRatio = getBorrowRatio({ loan, borrowers, property });\n  const fees = getFees({ loan, property });\n  const propAndWork = getPropAndWork({ loan, property });\n\n  const cashRequired = constants.minCash * propAndWork + fees;\n\n  if (incomeRatio > 0.38) {\n    throw new Error('income');\n  } else if (loan.general.fortuneUsed < cashRequired) {\n    throw new Error('cash');\n  } else if (borrowRatio > 0.8) {\n    throw new Error('ownFunds');\n  }\n\n  return true;\n};\n\nexport const getPropertyCompletion = ({ loan, borrowers, property }) => {\n  const formsProgress = propertyPercent(loan, borrowers, property);\n  const filesProgress = filesPercent(property, propertyFiles, 'auction');\n\n  return (formsProgress + filesProgress) / 2;\n};\nexport const validateRatios = (\n  incomeRatio,\n  borrowRatio,\n  allowInsurance = true,\n  borrowRatioWanted,\n) => {\n  // To prevent rounding errors\n  const incomeRatioSafe = incomeRatio - 0.001;\n  const borrowRatioSafe = borrowRatio - 0.001;\n\n  if (borrowRatioWanted && borrowRatioWanted !== 0.8) {\n    if (borrowRatioSafe > borrowRatioWanted) {\n      throw new Error('fortune');\n    }\n  }\n\n  if (incomeRatioSafe > 0.38) {\n    throw new Error('income');\n  } else if (!allowInsurance && borrowRatioSafe > 0.8) {\n    throw new Error('fortune');\n  } else if (borrowRatioSafe > 0.9) {\n    throw new Error('fortune');\n  } else if (incomeRatioSafe > 1 / 3) {\n    throw new Error('incomeTight');\n  } else if (borrowRatioSafe > 0.8) {\n    throw new Error('fortuneTight');\n  }\n\n  return true;\n};\n\nexport const validateRatiosCompletely = (\n  incomeRatio,\n  borrowRatio,\n  allowInsurance = true,\n  borrowRatioWanted = 0.9,\n) => {\n  try {\n    validateRatios(incomeRatio, borrowRatio, borrowRatioWanted, allowInsurance);\n    return {\n      isValid: true,\n      message: 'valid',\n      message2: '',\n      icon: 'check',\n      className: 'success',\n    };\n  } catch (error) {\n    const isTight = error.message.indexOf('Tight') >= 0;\n    return {\n      isValid: false,\n      message: `${error.message}`,\n      message2: `${error.message}2`,\n      icon: isTight ? 'warning' : 'close',\n      className: isTight ? 'warning' : 'error',\n    };\n  }\n};\n\n// Returns the maintenance to pay every month, i.e. 1% of the property divided by 12 months\nexport const getMaintenance = ({ property }) => property.value * 0.01 / 12;\n\nexport const strategyDone = ({ loan, property }) => {\n  const { general, logic } = loan;\n  if (general.insuranceFortuneUsed > 0 && !logic.insuranceUsePreset) {\n    return false;\n  }\n\n  if (!logic.amortizationStrategyPreset) {\n    return false;\n  }\n\n  if (!logic.loanStrategyPreset) {\n    return false;\n  }\n\n  if (\n    logic.loanStrategyPreset === LOAN_STRATEGY_PRESET.MANUAL &&\n    !loanStrategySuccess(\n      general.loanTranches,\n      getLoanValue({ loan, property }, true),\n    )\n  ) {\n    return false;\n  }\n\n  return true;\n};\n\n// Gives the end time of an auction, given the start time\nexport const getAuctionEndTime = (startTime) => {\n  const time = moment(startTime);\n\n  if (time.isoWeekday() === 6) {\n    // On saturdays, go to Tuesday\n    time.add(3, 'd');\n  } else if (time.isoWeekday() === 7) {\n    // On saturdays, go to Tuesday\n    time.add(2, 'd');\n  } else if (time.hour() >= 0 && time.hour() < 7) {\n    // If the start time is between midnight and 7:00,\n    // set endtime to be tomorrow night\n    time.add(1, 'd');\n  } else {\n    // Else, set endtime in 2 days from now\n    time.add(2, 'd');\n  }\n\n  // Skip weekends\n  if (time.isoWeekday() === 6 || time.isoWeekday() === 7) {\n    // Saturday or Sunday\n    time.add(2, 'd');\n  }\n\n  // Auctions always end at midnight\n  time.hours(23);\n  time.minutes(59);\n  time.seconds(59);\n  time.milliseconds(0);\n\n  return time.toDate();\n};\n"]},"hash":"d8a8459f90f94802a616d8a47566283979b6190b"}
