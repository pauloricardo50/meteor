{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"./getDisplayName","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"getDisplayName"}]}],"exports":{"exported":["withStaticQueryContainer","WrappedComponent"],"specifiers":[{"kind":"local","local":"withStaticQueryContainer","exported":"default"},{"kind":"local","local":"WrappedComponent","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher-react/lib/withStaticQuery.js","filenameRelative":"packages/cultofcoders:grapher-react/lib/withStaticQuery.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher-react/lib/withStaticQuery.js.map","sourceFileName":"packages/cultofcoders:grapher-react/lib/withStaticQuery.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"withStaticQuery"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n    default: () => withStaticQueryContainer\n});\nlet React;\nmodule.watch(require(\"react\"), {\n    default(v) {\n        React = v;\n    }\n\n}, 0);\nlet getDisplayName;\nmodule.watch(require(\"./getDisplayName\"), {\n    default(v) {\n        getDisplayName = v;\n    }\n\n}, 1);\n\nfunction withStaticQueryContainer(WrappedComponent) {\n    /**\n     * We use it like this so we can have naming inside React Dev Tools\n     * This is a standard pattern in HOCs\n     */class GrapherStaticQueryContainer extends React.Component {\n        constructor(...args) {\n            var _temp;\n\n            return _temp = super(...args), this.state = {\n                isLoading: true,\n                error: null,\n                data: []\n            }, this.refetch = () => {\n                const {\n                    query\n                } = this.props;\n                this.fetch(query);\n            }, _temp;\n        }\n\n        componentWillReceiveProps(nextProps) {\n            const {\n                query\n            } = nextProps;\n            this.fetch(query);\n        }\n\n        componentDidMount() {\n            const {\n                query,\n                config\n            } = this.props;\n            this.fetch(query);\n\n            if (config.pollingMs) {\n                this.pollingInterval = setInterval(() => {\n                    this.fetch(query);\n                }, config.pollingMs);\n            }\n        }\n\n        componentWillUnmount() {\n            this.pollingInterval && clearInterval(this.pollingInterval);\n        }\n\n        fetch(query) {\n            query.fetch((error, data) => {\n                if (error) {\n                    this.setState({\n                        error,\n                        data: [],\n                        isLoading: false\n                    });\n                } else {\n                    this.setState({\n                        error: null,\n                        data,\n                        isLoading: false\n                    });\n                }\n            });\n        }\n\n        render() {\n            const {\n                config,\n                props,\n                query\n            } = this.props;\n            return React.createElement(WrappedComponent, {\n                grapher: this.state,\n                config,\n                query,\n                props: (0, _extends3.default)({}, props, {\n                    refetch: this.refetch\n                })\n            });\n        }\n\n    }\n\n    GrapherStaticQueryContainer.displayName = `StaticQuery(${getDisplayName(WrappedComponent)})`;\n    return GrapherStaticQueryContainer;\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher-react/lib/withStaticQuery.js"],"names":["module","export","default","withStaticQueryContainer","React","watch","require","v","getDisplayName","WrappedComponent","GrapherStaticQueryContainer","Component","state","isLoading","error","data","refetch","query","props","fetch","componentWillReceiveProps","nextProps","componentDidMount","config","pollingMs","pollingInterval","setInterval","componentWillUnmount","clearInterval","setState","render","createElement","grapher","displayName"],"mappings":";;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,aAAQ,MAAIC;AAAb,CAAd;AAAsD,IAAIC,KAAJ;AAAUJ,OAAOK,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACJ,YAAQK,CAAR,EAAU;AAACH,gBAAMG,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,cAAJ;AAAmBR,OAAOK,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACJ,YAAQK,CAAR,EAAU;AAACC,yBAAeD,CAAf;AAAiB;;AAA7B,CAAzC,EAAwE,CAAxE;;AAG3H,SAASJ,wBAAT,CAAkCM,gBAAlC,EAAoD;AAC/D;;;OAIA,MAAMC,2BAAN,SAA0CN,MAAMO,SAAhD,CAA0D;AAAA;AAAA;;AAAA,gDACtDC,KADsD,GAC9C;AACJC,2BAAW,IADP;AAEJC,uBAAO,IAFH;AAGJC,sBAAM;AAHF,aAD8C,OA6CtDC,OA7CsD,GA6C5C,MAAM;AACZ,sBAAM;AAACC;AAAD,oBAAU,KAAKC,KAArB;AACA,qBAAKC,KAAL,CAAWF,KAAX;AACH,aAhDqD;AAAA;;AAOtDG,kCAA0BC,SAA1B,EAAqC;AACjC,kBAAM;AAACJ;AAAD,gBAAUI,SAAhB;AACA,iBAAKF,KAAL,CAAWF,KAAX;AACH;;AAEDK,4BAAoB;AAChB,kBAAM;AAACL,qBAAD;AAAQM;AAAR,gBAAkB,KAAKL,KAA7B;AACA,iBAAKC,KAAL,CAAWF,KAAX;;AAEA,gBAAIM,OAAOC,SAAX,EAAsB;AAClB,qBAAKC,eAAL,GAAuBC,YAAY,MAAM;AACrC,yBAAKP,KAAL,CAAWF,KAAX;AACH,iBAFsB,EAEpBM,OAAOC,SAFa,CAAvB;AAGH;AACJ;;AAEDG,+BAAuB;AACnB,iBAAKF,eAAL,IAAwBG,cAAc,KAAKH,eAAnB,CAAxB;AACH;;AAEDN,cAAMF,KAAN,EAAa;AACTA,kBAAME,KAAN,CAAY,CAACL,KAAD,EAAQC,IAAR,KAAiB;AACzB,oBAAID,KAAJ,EAAW;AACP,yBAAKe,QAAL,CAAc;AACVf,6BADU;AAEVC,8BAAM,EAFI;AAGVF,mCAAW;AAHD,qBAAd;AAKH,iBAND,MAMO;AACH,yBAAKgB,QAAL,CAAc;AACVf,+BAAO,IADG;AAEVC,4BAFU;AAGVF,mCAAW;AAHD,qBAAd;AAKH;AACJ,aAdD;AAeH;;AAODiB,iBAAS;AACL,kBAAM;AAACP,sBAAD;AAASL,qBAAT;AAAgBD;AAAhB,gBAAyB,KAAKC,KAApC;AAEA,mBAAOd,MAAM2B,aAAN,CAAoBtB,gBAApB,EAAsC;AACzCuB,yBAAS,KAAKpB,KAD2B;AAEzCW,sBAFyC;AAGzCN,qBAHyC;AAIzCC,kDAAWA,KAAX;AAAkBF,6BAAS,KAAKA;AAAhC;AAJyC,aAAtC,CAAP;AAMH;;AA3DqD;;AA8D1DN,gCAA4BuB,WAA5B,GAA2C,eAAczB,eAAeC,gBAAf,CAAiC,GAA1F;AAEA,WAAOC,2BAAP;AACH","file":"packages/cultofcoders:grapher-react/lib/withStaticQuery.js.map","sourcesContent":["import React from 'react';\nimport getDisplayName from './getDisplayName';\n\nexport default function withStaticQueryContainer(WrappedComponent) {\n    /**\n     * We use it like this so we can have naming inside React Dev Tools\n     * This is a standard pattern in HOCs\n     */\n    class GrapherStaticQueryContainer extends React.Component {\n        state = {\n            isLoading: true,\n            error: null,\n            data: [],\n        };\n\n        componentWillReceiveProps(nextProps) {\n            const {query} = nextProps;\n            this.fetch(query);\n        }\n\n        componentDidMount() {\n            const {query, config} = this.props;\n            this.fetch(query);\n\n            if (config.pollingMs) {\n                this.pollingInterval = setInterval(() => {\n                    this.fetch(query);\n                }, config.pollingMs)\n            }\n        }\n\n        componentWillUnmount() {\n            this.pollingInterval && clearInterval(this.pollingInterval);\n        }\n\n        fetch(query) {\n            query.fetch((error, data) => {\n                if (error) {\n                    this.setState({\n                        error,\n                        data: [],\n                        isLoading: false,\n                    })\n                } else {\n                    this.setState({\n                        error: null,\n                        data,\n                        isLoading: false,\n                    });\n                }\n            });\n        }\n\n        refetch = () => {\n            const {query} = this.props;\n            this.fetch(query);\n        };\n\n        render() {\n            const {config, props, query} = this.props;\n\n            return React.createElement(WrappedComponent, {\n                grapher: this.state,\n                config,\n                query,\n                props: {...props, refetch: this.refetch},\n            });\n        }\n    }\n\n    GrapherStaticQueryContainer.displayName = `StaticQuery(${getDisplayName(WrappedComponent)})`;\n\n    return GrapherStaticQueryContainer;\n}"]},"hash":"db059f82efb29be551ca3af7ec14746a27b72a4e"}
