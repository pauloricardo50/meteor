{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"../../../core/components/DropdownMenu","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"DropdownMenu"}]},{"source":"../../../core/api","imported":["callMutation","mutations"],"specifiers":[{"kind":"named","imported":"callMutation","local":"callMutation"},{"kind":"named","imported":"mutations","local":"mutations"}]},{"source":"../../../core/api/tasks/tasksConstants","imported":["TASK_STATUS"],"specifiers":[{"kind":"named","imported":"TASK_STATUS","local":"TASK_STATUS"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","filenameRelative":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourceFileName":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TasksAssignedUserDropdown"},"ignored":false,"code":"\"use strict\";\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  }\n}, 1);\nvar DropdownMenu = void 0;\nmodule.watch(require(\"../../../core/components/DropdownMenu\"), {\n  default: function _default(v) {\n    DropdownMenu = v;\n  }\n}, 2);\n\nvar _callMutation = void 0,\n    _mutations = void 0;\n\nmodule.watch(require(\"../../../core/api\"), {\n  callMutation: function callMutation(v) {\n    _callMutation = v;\n  },\n  mutations: function mutations(v) {\n    _mutations = v;\n  }\n}, 3);\n\nvar _TASK_STATUS = void 0;\n\nmodule.watch(require(\"../../../core/api/tasks/tasksConstants\"), {\n  TASK_STATUS: function TASK_STATUS(v) {\n    _TASK_STATUS = v;\n  }\n}, 4);\n\nvar changeAssignedUser = function changeAssignedUser(_ref) {\n  var user = _ref.user,\n      task = _ref.task,\n      taskAssignedTo = _ref.taskAssignedTo;\n  var taskId = task._id;\n  var taskUserId = task.user ? task.user._id : undefined; // if (initialAssignment && taskUserId) {\n\n  if (!taskUserId) {\n    _callMutation(_mutations.TASK_IS_RELATED_TO, {\n      task: task,\n      userId: taskUserId\n    }).then(function () {\n      if (!taskAssignedTo) {\n        _callMutation(_mutations.ASSIGN_ADMIN_TO_USER, {\n          userId: taskUserId,\n          adminId: user._id\n        }).then(function (nbOfAffectedRows) {\n          if (nbOfAffectedRows > 0) {\n            _callMutation(_mutations.TASK_CHANGE_ASSIGNED_TO, {\n              taskId: taskId,\n              newAssignee: user._id\n            });\n          }\n        }).then(function (nbOfAffectedRows) {\n          if (nbOfAffectedRows > 0) {\n            _callMutation(_mutations.TASK_CHANGE_STATUS, {\n              taskId: taskId,\n              newStatus: _TASK_STATUS.COMPLETED\n            });\n          }\n        });\n      } else {\n        _callMutation(_mutations.TASK_CHANGE_ASSIGNED_TO, {\n          taskId: taskId,\n          newAssignee: user._id\n        });\n      }\n    });\n  }\n};\n\nvar getMenuItems = function getMenuItems(users, task) // taskAssignedTo,\n// taskId,\n// taskUserId,\n// initialAssignment,\n{\n  var taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n  var options = users.map(function (user) {\n    return {\n      id: user._id,\n      show: user._id !== taskAssignedTo,\n      label: user.emails[0].address,\n      link: false,\n      onClick: function onClick() {\n        changeAssignedUser({\n          user: user,\n          task: task,\n          taskAssignedTo: taskAssignedTo // taskId,\n          // taskAssignedTo,\n          // taskUserId,\n          // initialAssignment,\n\n        });\n      }\n    };\n  });\n  return options;\n};\n\nvar TasksAssignedUserDropdown = function TasksAssignedUserDropdown(props) {\n  // const { data, isLoading, error, taskId, taskUser, styles } = props;\n  var data = props.data,\n      isLoading = props.isLoading,\n      error = props.error,\n      task = props.task,\n      styles = props.styles;\n\n  if (isLoading) {\n    return null;\n  }\n\n  if (error) {\n    return React.createElement(\n      \"div\",\n      null,\n      \"Error: \",\n      error.reason\n    );\n  }\n\n  return React.createElement(DropdownMenu, {\n    iconType: \"personAdd\",\n    options: getMenuItems(data, task // taskAssignedTo,\n    // taskId,\n    // taskUserId,\n    // initialAssignment,\n    ),\n    style: styles\n  });\n};\n\nmodule.exportDefault(TasksAssignedUserDropdown);","map":{"version":3,"sources":["imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx"],"names":["Meteor","module","watch","require","v","React","default","DropdownMenu","callMutation","mutations","TASK_STATUS","changeAssignedUser","user","task","taskAssignedTo","taskId","_id","taskUserId","undefined","TASK_IS_RELATED_TO","userId","then","ASSIGN_ADMIN_TO_USER","adminId","nbOfAffectedRows","TASK_CHANGE_ASSIGNED_TO","newAssignee","TASK_CHANGE_STATUS","newStatus","COMPLETED","getMenuItems","users","assignedUser","options","map","id","show","label","emails","address","link","onClick","TasksAssignedUserDropdown","props","data","isLoading","error","styles","reason","exportDefault"],"mappings":"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","file":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport DropdownMenu from 'core/components/DropdownMenu/';\nimport { callMutation, mutations } from 'core/api';\nimport { TASK_STATUS } from 'core/api/tasks/tasksConstants';\n\nconst changeAssignedUser = ({\n  user,\n  task,\n  taskAssignedTo,\n  // taskId,\n  // taskAssignedTo,\n  // taskUserId,\n  // initialAssignment,\n}) => {\n  const taskId = task._id;\n  const taskUserId = task.user ? task.user._id : undefined;\n\n  // if (initialAssignment && taskUserId) {\n  if (!taskUserId) {\n    callMutation(mutations.TASK_IS_RELATED_TO, {\n      task,\n      userId: taskUserId,\n    }).then(() => {\n      if (!taskAssignedTo) {\n      callMutation(mutations.ASSIGN_ADMIN_TO_USER, {\n        userId: taskUserId,\n        adminId: user._id,\n      })\n        .then((nbOfAffectedRows) => {\n          if (nbOfAffectedRows > 0) {\n            callMutation(mutations.TASK_CHANGE_ASSIGNED_TO, {\n              taskId,\n              newAssignee: user._id,\n            });\n          }\n        })\n        .then((nbOfAffectedRows) => {\n          if (nbOfAffectedRows > 0) {\n            callMutation(mutations.TASK_CHANGE_STATUS, {\n              taskId,\n              newStatus: TASK_STATUS.COMPLETED,\n            });\n          }\n        });\n    } else {\n      callMutation(mutations.TASK_CHANGE_ASSIGNED_TO, {\n        taskId,\n        newAssignee: user._id,\n      });\n    }\n    });\n  }\n\n};\n\nconst getMenuItems = (\n  users,\n  task,\n  // taskAssignedTo,\n  // taskId,\n  // taskUserId,\n  // initialAssignment,\n) => {\n  const taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n  const options = users.map(user => ({\n    id: user._id,\n    show: user._id !== taskAssignedTo,\n    label: user.emails[0].address,\n    link: false,\n    onClick: () => {\n      changeAssignedUser({\n        user,\n        task,\n        taskAssignedTo,\n        // taskId,\n        // taskAssignedTo,\n        // taskUserId,\n        // initialAssignment,\n      });\n    },\n  }));\n  return options;\n};\n\nconst TasksAssignedUserDropdown = (props) => {\n  // const { data, isLoading, error, taskId, taskUser, styles } = props;\n  const {\n    data,\n    isLoading,\n    error,\n    task,\n    // taskId,\n    // taskAssignedTo,\n    // taskUserId,\n    // initialAssignment,\n    styles,\n  } = props;\n\n  if (isLoading) {\n    return null;\n  }\n  if (error) {\n    return <div>Error: {error.reason}</div>;\n  }\n\n  return (\n    <DropdownMenu\n      iconType=\"personAdd\"\n      options={getMenuItems(\n        data,\n        task,\n        // taskAssignedTo,\n        // taskId,\n        // taskUserId,\n        // initialAssignment,\n      )}\n      style={styles}\n    />\n  );\n};\n\nexport default TasksAssignedUserDropdown;\n"]},"hash":"2c206a1fad90ce9a52bec05f8b15bc8c11314230"}
