{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"../borrowers","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Borrowers"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/borrowers/server/publications.js","filenameRelative":"imports/core/api/borrowers/server/publications.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/borrowers/server/publications.js.map","sourceFileName":"imports/core/api/borrowers/server/publications.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"publications"},"ignored":false,"code":"\"use strict\";\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _check = void 0;\n\nmodule.watch(require(\"meteor/check\"), {\n  check: function check(v) {\n    _check = v;\n  }\n}, 1);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function Roles(v) {\n    _Roles = v;\n  }\n}, 2);\nvar Borrowers = void 0;\nmodule.watch(require(\"../borrowers\"), {\n  default: function _default(v) {\n    Borrowers = v;\n  }\n}, 3);\n\n// Publish a specific loan with an ID\n_Meteor.publish('borrower', function publish(id) {\n  // Verify if user is logged In\n  if (!_Meteor.userId()) {\n    return this.ready();\n  }\n\n  _check(id, String);\n\n  if (_Roles.userIsInRole(_Meteor.userId(), 'admin') || _Roles.userIsInRole(_Meteor.userId(), 'dev')) {\n    return Borrowers.find({\n      _id: id\n    });\n  }\n\n  return Borrowers.find({\n    userId: _Meteor.userId(),\n    _id: id\n  });\n}); // Publish all borrowers from the current user\n\n\n_Meteor.publish('borrowers', function publish() {\n  // Verify if user is logged In\n  if (!_Meteor.userId()) {\n    return this.ready();\n  }\n\n  var borrowers = Borrowers.find({\n    userId: _Meteor.userId()\n  });\n  return borrowers;\n}); // Publish all borrowers for a user\n\n\n_Meteor.publish('userBorrowers', function publish(userId) {\n  _check(userId, String); // Verify if user is logged In\n\n\n  if (_Roles.userIsInRole(_Meteor.userId(), 'admin') || _Roles.userIsInRole(_Meteor.userId(), 'dev')) {\n    // Return all users\n    return Borrowers.find({\n      userId: userId\n    });\n  }\n\n  return this.ready();\n}); // Publish all borrowers in the database for admins\n\n\n_Meteor.publish('allBorrowers', function publish() {\n  // Verify if user is logged In\n  if (_Roles.userIsInRole(_Meteor.userId(), 'admin') || _Roles.userIsInRole(_Meteor.userId(), 'dev')) {\n    // Return all users\n    return Borrowers.find();\n  }\n\n  return this.ready();\n}); // Publish all borrowers for a loan for admins\n\n\n_Meteor.publish('loanBorrowers', function publish(borrowerIds) {\n  _check(borrowerIds, [String]); // Verify if user is an admin\n\n\n  if (_Roles.userIsInRole(_Meteor.userId(), 'admin') || _Roles.userIsInRole(_Meteor.userId(), 'dev')) {\n    // Return all borrowers\n    return Borrowers.find({\n      _id: {\n        $in: borrowerIds\n      }\n    });\n  }\n\n  return this.ready();\n});","map":{"version":3,"sources":["imports/core/api/borrowers/server/publications.js"],"names":["Meteor","module","watch","require","v","check","Roles","Borrowers","default","publish","id","userId","ready","String","userIsInRole","find","_id","borrowers","borrowerIds","$in"],"mappings":"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","file":"imports/core/api/borrowers/server/publications.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { Roles } from 'meteor/alanning:roles';\nimport Borrowers from '../borrowers';\n\n// Publish a specific loan with an ID\nMeteor.publish('borrower', function publish(id) {\n  // Verify if user is logged In\n  if (!Meteor.userId()) {\n    return this.ready();\n  }\n\n  check(id, String);\n\n  if (\n    Roles.userIsInRole(Meteor.userId(), 'admin') ||\n    Roles.userIsInRole(Meteor.userId(), 'dev')\n  ) {\n    return Borrowers.find({\n      _id: id,\n    });\n  }\n\n  return Borrowers.find({\n    userId: Meteor.userId(),\n    _id: id,\n  });\n});\n\n// Publish all borrowers from the current user\nMeteor.publish('borrowers', function publish() {\n  // Verify if user is logged In\n  if (!Meteor.userId()) {\n    return this.ready();\n  }\n\n  const borrowers = Borrowers.find({\n    userId: Meteor.userId(),\n  });\n\n  return borrowers;\n});\n\n// Publish all borrowers for a user\nMeteor.publish('userBorrowers', function publish(userId) {\n  check(userId, String);\n\n  // Verify if user is logged In\n  if (\n    Roles.userIsInRole(Meteor.userId(), 'admin') ||\n    Roles.userIsInRole(Meteor.userId(), 'dev')\n  ) {\n    // Return all users\n    return Borrowers.find({ userId });\n  }\n\n  return this.ready();\n});\n\n// Publish all borrowers in the database for admins\nMeteor.publish('allBorrowers', function publish() {\n  // Verify if user is logged In\n  if (\n    Roles.userIsInRole(Meteor.userId(), 'admin') ||\n    Roles.userIsInRole(Meteor.userId(), 'dev')\n  ) {\n    // Return all users\n    return Borrowers.find();\n  }\n\n  return this.ready();\n});\n\n// Publish all borrowers for a loan for admins\nMeteor.publish('loanBorrowers', function publish(borrowerIds) {\n  check(borrowerIds, [String]);\n  // Verify if user is an admin\n  if (\n    Roles.userIsInRole(Meteor.userId(), 'admin') ||\n    Roles.userIsInRole(Meteor.userId(), 'dev')\n  ) {\n    // Return all borrowers\n    return Borrowers.find({ _id: { $in: borrowerIds } });\n  }\n\n  return this.ready();\n});\n"]},"hash":"10da8e44b798059adced27b7d11af716a138805f"}
