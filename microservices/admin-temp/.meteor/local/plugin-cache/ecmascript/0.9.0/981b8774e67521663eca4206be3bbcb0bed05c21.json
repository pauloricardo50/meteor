{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"../../../core/components/DropdownMenu","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"DropdownMenu"}]},{"source":"../../../core/api","imported":["callMutation","mutations"],"specifiers":[{"kind":"named","imported":"callMutation","local":"callMutation"},{"kind":"named","imported":"mutations","local":"mutations"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","filenameRelative":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourceFileName":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TasksAssignedUserDropdown"},"ignored":false,"code":"\"use strict\";\n\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar DropdownMenu = void 0;\nmodule.watch(require(\"../../../core/components/DropdownMenu\"), {\n  \"default\": function () {\n    function _default(v) {\n      DropdownMenu = v;\n    }\n\n    return _default;\n  }()\n}, 2);\n\nvar _callMutation = void 0,\n    _mutations = void 0;\n\nmodule.watch(require(\"../../../core/api\"), {\n  callMutation: function () {\n    function callMutation(v) {\n      _callMutation = v;\n    }\n\n    return callMutation;\n  }(),\n  mutations: function () {\n    function mutations(v) {\n      _mutations = v;\n    }\n\n    return mutations;\n  }()\n}, 3);\n\nvar changeAssignedUser = function () {\n  function changeAssignedUser(user, taskId) {\n    _callMutation(_mutations.TASK_CHANGE_USER, {\n      taskId: taskId,\n      newUser: user\n    });\n  }\n\n  return changeAssignedUser;\n}();\n\nvar getMenuItems = function () {\n  function getMenuItems(users, taskUser, taskId) {\n    var options = users.map(function (user) {\n      return {\n        id: user._id,\n        show: user._id !== taskUser,\n        label: user.emails[0].address,\n        link: false,\n        onClick: function () {\n          function onClick() {\n            changeAssignedUser(user._id, taskId);\n          }\n\n          return onClick;\n        }()\n      };\n    });\n    return options;\n  }\n\n  return getMenuItems;\n}();\n\nvar TasksAssignedUserDropdown = function () {\n  function TasksAssignedUserDropdown(props) {\n    var data = props.data,\n        isLoading = props.isLoading,\n        error = props.error,\n        taskId = props.taskId,\n        taskUser = props.taskUser,\n        styles = props.styles;\n\n    if (isLoading) {\n      return null;\n    }\n\n    if (error) {\n      return React.createElement(\n        \"div\",\n        null,\n        \"Error: \",\n        error.reason\n      );\n    }\n\n    return React.createElement(DropdownMenu, {\n      iconType: \"personAdd\",\n      options: getMenuItems(data, taskUser, taskId),\n      style: styles\n    });\n  }\n\n  return TasksAssignedUserDropdown;\n}();\n\nmodule.exportDefault(TasksAssignedUserDropdown);","map":{"version":3,"sources":["imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx"],"names":["React","module","watch","require","v","PropTypes","DropdownMenu","callMutation","mutations","changeAssignedUser","user","taskId","TASK_CHANGE_USER","newUser","getMenuItems","users","taskUser","options","map","id","_id","show","label","emails","address","link","onClick","TasksAssignedUserDropdown","props","data","isLoading","error","styles","reason","exportDefault"],"mappings":";;AAAA,IAAIA,cAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACJ,cAAMI,CAAN;AAAQ;;AAApB;AAAA;AAAA,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,kBAAJ;AAAcJ,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACC,kBAAUD,CAAV;AAAY;;AAAxB;AAAA;AAAA,CAAnC,EAA6D,CAA7D;AAAgE,IAAIE,qBAAJ;AAAiBL,OAAOC,KAAP,CAAaC,QAAQ,uCAAR,CAAb,EAA8D;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACE,qBAAaF,CAAb;AAAe;;AAA3B;AAAA;AAAA,CAA9D,EAA2F,CAA3F;;AAA8F,IAAIG,sBAAJ;AAAA,IAAiBC,mBAAjB;;AAA2BP,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACI,cAAD;AAAA,0BAAcH,CAAd,EAAgB;AAACG,sBAAaH,CAAb;AAAe;;AAAhC;AAAA;AAAiCI,WAAjC;AAAA,uBAA2CJ,CAA3C,EAA6C;AAACI,mBAAUJ,CAAV;AAAY;;AAA1D;AAAA;AAAA,CAA1C,EAAsG,CAAtG;;AAMzR,IAAMK;AAAqB,WAArBA,kBAAqB,CAACC,IAAD,EAAOC,MAAP,EAAkB;AAC3CJ,kBAAaC,WAAUI,gBAAvB,EAAyC;AACvCD,oBADuC;AAEvCE,eAASH;AAF8B,KAAzC;AAID;;AALK;AAAA,GAAN;;AAOA,IAAMI;AAAe,WAAfA,YAAe,CAACC,KAAD,EAAQC,QAAR,EAAkBL,MAAlB,EAA6B;AAChD,QAAMM,UAAUF,MAAMG,GAAN,CAAU;AAAA,aAAS;AACjCC,YAAIT,KAAKU,GADwB;AAEjCC,cAAMX,KAAKU,GAAL,KAAaJ,QAFc;AAGjCM,eAAOZ,KAAKa,MAAL,CAAY,CAAZ,EAAeC,OAHW;AAIjCC,cAAM,KAJ2B;AAKjCC;AAAS,6BAAM;AACbjB,+BAAmBC,KAAKU,GAAxB,EAA6BT,MAA7B;AACD;;AAFD;AAAA;AALiC,OAAT;AAAA,KAAV,CAAhB;AASA,WAAOM,OAAP;AACD;;AAXK;AAAA,GAAN;;AAaA,IAAMU;AAA4B,WAA5BA,yBAA4B,CAACC,KAAD,EAAW;AAAA,QACnCC,IADmC,GACkBD,KADlB,CACnCC,IADmC;AAAA,QAC7BC,SAD6B,GACkBF,KADlB,CAC7BE,SAD6B;AAAA,QAClBC,KADkB,GACkBH,KADlB,CAClBG,KADkB;AAAA,QACXpB,MADW,GACkBiB,KADlB,CACXjB,MADW;AAAA,QACHK,QADG,GACkBY,KADlB,CACHZ,QADG;AAAA,QACOgB,MADP,GACkBJ,KADlB,CACOI,MADP;;AAG3C,QAAIF,SAAJ,EAAe;AACb,aAAO,IAAP;AACD;;AACD,QAAIC,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAaA,cAAME;AAAnB,OAAP;AACD;;AAED,WACE,oBAAC,YAAD;AACE,gBAAS,WADX;AAEE,eAASnB,aAAae,IAAb,EAAmBb,QAAnB,EAA6BL,MAA7B,CAFX;AAGE,aAAOqB;AAHT,MADF;AAOD;;AAjBK;AAAA,GAAN;;AA1BA/B,OAAOiC,aAAP,CA6CeP,yBA7Cf","file":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DropdownMenu from 'core/components/DropdownMenu/';\nimport { callMutation, mutations } from 'core/api';\n\nconst changeAssignedUser = (user, taskId) => {\n  callMutation(mutations.TASK_CHANGE_USER, {\n    taskId,\n    newUser: user,\n  });\n};\n\nconst getMenuItems = (users, taskUser, taskId) => {\n  const options = users.map(user => ({\n    id: user._id,\n    show: user._id !== taskUser,\n    label: user.emails[0].address,\n    link: false,\n    onClick: () => {\n      changeAssignedUser(user._id, taskId);\n    },\n  }));\n  return options;\n};\n\nconst TasksAssignedUserDropdown = (props) => {\n  const { data, isLoading, error, taskId, taskUser, styles } = props;\n\n  if (isLoading) {\n    return null;\n  }\n  if (error) {\n    return <div>Error: {error.reason}</div>;\n  }\n\n  return (\n    <DropdownMenu\n      iconType=\"personAdd\"\n      options={getMenuItems(data, taskUser, taskId)}\n      style={styles}\n    />\n  );\n};\n\nexport default TasksAssignedUserDropdown;\n"]},"hash":"981b8774e67521663eca4206be3bbcb0bed05c21"}
