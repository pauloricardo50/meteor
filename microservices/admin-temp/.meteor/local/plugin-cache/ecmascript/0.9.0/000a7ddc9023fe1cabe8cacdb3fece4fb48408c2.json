{"metadata":{"usedHelpers":["extends","defineProperty","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["check","Match"],"specifiers":[{"kind":"named","imported":"check","local":"check"},{"kind":"named","imported":"Match","local":"Match"}]},{"source":"../events","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"EventService"}]}],"exports":{"exported":["beforeLogger","afterLogger","validateMutationOptions","checkParams"],"specifiers":[{"kind":"local","local":"beforeLogger","exported":"beforeLogger"},{"kind":"local","local":"afterLogger","exported":"afterLogger"},{"kind":"local","local":"validateMutationOptions","exported":"validateMutationOptions"},{"kind":"local","local":"checkParams","exported":"checkParams"}]}}},"options":{"filename":"imports/core/api/mutations/createMutator.js","filenameRelative":"imports/core/api/mutations/createMutator.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/mutations/createMutator.js.map","sourceFileName":"imports/core/api/mutations/createMutator.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"createMutator"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.beforeLogger = undefined;\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends3 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends4 = _interopRequireDefault(_extends3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  beforeLogger: function beforeLogger() {\n    return _beforeLogger;\n  },\n  afterLogger: function afterLogger() {\n    return _afterLogger;\n  },\n  validateMutationOptions: function validateMutationOptions() {\n    return _validateMutationOptions;\n  },\n  checkParams: function checkParams() {\n    return _checkParams;\n  }\n});\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _check = void 0,\n    _Match = void 0;\n\nmodule.watch(require(\"meteor/check\"), {\n  check: function check(v) {\n    _check = v;\n  },\n  Match: function Match(v) {\n    _Match = v;\n  }\n}, 1);\nvar EventService = void 0;\nexports.beforeLogger = _beforeLogger;\nmodule.watch(require(\"../events\"), {\n  default: function _default(v) {\n    EventService = v;\n  }\n}, 2);\nvar INVALID_MUTATION_OPTIONS = 'INVALID_MUTATION_OPTIONS';\nvar MUTATION_ERROR = 'MUTATION_ERROR';\n\nvar _beforeLogger = function _beforeLogger(callParameters, name) {\n  if (_Meteor.isDevelopment && !_Meteor.isTest) {\n    console.log(\"Executing method \" + name + \" with the following params:\");\n    console.log(callParameters);\n  }\n};\n\nvar _afterLogger = function _afterLogger(result, name) {\n  if (_Meteor.isDevelopment && !_Meteor.isTest) {\n    console.log(\"Executed \" + name + \" and got result:\");\n    console.log(result);\n  }\n};\n\nvar _validateMutationOptions = function _validateMutationOptions(_ref) {\n  var name = _ref.name,\n      params = _ref.params;\n\n  if (!name || typeof name !== 'string') {\n    throw new _Meteor.Error(INVALID_MUTATION_OPTIONS, 'name has to be a string');\n  }\n\n  if (params) {\n    Object.keys(params).forEach(function (param) {\n      var type = params[param].type;\n\n      if (!type) {\n        throw new _Meteor.Error(INVALID_MUTATION_OPTIONS, \"you have to provide a type for parameter: \\\"\" + param + \"\\\" in \" + name);\n      }\n    });\n  }\n};\n\nvar _checkParams = function _checkParams(callParameters, params) {\n  _check(callParameters, Object.keys(params).reduce(function (matchPattern, param) {\n    var _params$param = params[param],\n        optional = _params$param.optional,\n        type = _params$param.type; // Return a Match Pattern and check for optionals\n\n    return (0, _extends4.default)({}, matchPattern, (0, _defineProperty3.default)({}, param, optional ? _Match.Optional(type) : type));\n  }, {}));\n};\n\nvar createMutator = function createMutator(options, functionBody) {\n  _validateMutationOptions(options);\n\n  var name = options.name,\n      params = options.params;\n\n  _Meteor.methods((0, _defineProperty3.default)({}, name, function (callParameters) {\n    _beforeLogger(callParameters, name);\n\n    _checkParams(callParameters, params, name);\n\n    var result = void 0;\n\n    try {\n      result = functionBody(callParameters);\n      EventService.emitMutation(options, callParameters);\n    } catch (error) {\n      throw error;\n    }\n\n    _afterLogger(result, name);\n\n    return result;\n  }));\n};\n\nmodule.exportDefault(createMutator);","map":{"version":3,"sources":["imports/core/api/mutations/createMutator.js"],"names":["module","export","beforeLogger","afterLogger","validateMutationOptions","checkParams","Meteor","watch","require","v","check","Match","EventService","default","INVALID_MUTATION_OPTIONS","MUTATION_ERROR","callParameters","name","isDevelopment","isTest","console","log","result","params","Error","Object","keys","forEach","param","type","reduce","matchPattern","optional","Optional","createMutator","options","functionBody","methods","emitMutation","error","exportDefault"],"mappings":";;;;;;;;;;;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,gBAAa;AAAA,WAAIA,aAAJ;AAAA,GAAd;AAA+BC,eAAY;AAAA,WAAIA,YAAJ;AAAA,GAA3C;AAA2DC,2BAAwB;AAAA,WAAIA,wBAAJ;AAAA,GAAnF;AAA+GC,eAAY;AAAA,WAAIA,YAAJ;AAAA;AAA3H,CAAd;;AAA2J,IAAIC,gBAAJ;;AAAWN,OAAOO,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACF,QAAD,kBAAQG,CAAR,EAAU;AAACH,cAAOG,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;;AAA+D,IAAIC,eAAJ;AAAA,IAAUC,eAAV;;AAAgBX,OAAOO,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,OAAD,iBAAOD,CAAP,EAAS;AAACC,aAAMD,CAAN;AAAQ,GAAlB;AAAmBE,OAAnB,iBAAyBF,CAAzB,EAA2B;AAACE,aAAMF,CAAN;AAAQ;AAApC,CAArC,EAA2E,CAA3E;AAA8E,IAAIG,qBAAJ;;AAAiBZ,OAAOO,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAACK,SAAD,oBAASJ,CAAT,EAAW;AAACG,mBAAaH,CAAb;AAAe;AAA3B,CAAlC,EAA+D,CAA/D;AAKpV,IAAMK,2BAA2B,0BAAjC;AACA,IAAMC,iBAAiB,gBAAvB;;AAEO,IAAMb,gBAAe,SAAfA,aAAe,CAACc,cAAD,EAAiBC,IAAjB,EAA0B;AACpD,MAAIX,QAAOY,aAAP,IAAwB,CAACZ,QAAOa,MAApC,EAA4C;AAC1CC,YAAQC,GAAR,uBAAgCJ,IAAhC;AACAG,YAAQC,GAAR,CAAYL,cAAZ;AACD;AACF,CALM;;AAOA,IAAMb,eAAc,SAAdA,YAAc,CAACmB,MAAD,EAASL,IAAT,EAAkB;AAC3C,MAAIX,QAAOY,aAAP,IAAwB,CAACZ,QAAOa,MAApC,EAA4C;AAC1CC,YAAQC,GAAR,eAAwBJ,IAAxB;AACAG,YAAQC,GAAR,CAAYC,MAAZ;AACD;AACF,CALM;;AAOA,IAAMlB,2BAA0B,SAA1BA,wBAA0B,OAAsB;AAAA,MAAnBa,IAAmB,QAAnBA,IAAmB;AAAA,MAAbM,MAAa,QAAbA,MAAa;;AAC3D,MAAI,CAACN,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;AACrC,UAAM,IAAIX,QAAOkB,KAAX,CAAiBV,wBAAjB,EAA2C,yBAA3C,CAAN;AACD;;AAED,MAAIS,MAAJ,EAAY;AACVE,WAAOC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAACC,KAAD,EAAW;AAAA,UAC7BC,IAD6B,GACpBN,OAAOK,KAAP,CADoB,CAC7BC,IAD6B;;AAErC,UAAI,CAACA,IAAL,EAAW;AACT,cAAM,IAAIvB,QAAOkB,KAAX,CACJV,wBADI,mDAE0Cc,KAF1C,cAEuDX,IAFvD,CAAN;AAID;AACF,KARD;AASD;AACF,CAhBM;;AAkBA,IAAMZ,eAAc,SAAdA,YAAc,CAACW,cAAD,EAAiBO,MAAjB,EAA4B;AACrDb,SACEM,cADF,EAEES,OAAOC,IAAP,CAAYH,MAAZ,EAAoBO,MAApB,CAA2B,UAACC,YAAD,EAAeH,KAAf,EAAyB;AAAA,wBACvBL,OAAOK,KAAP,CADuB;AAAA,QAC1CI,QAD0C,iBAC1CA,QAD0C;AAAA,QAChCH,IADgC,iBAChCA,IADgC,EAGlD;;AACA,sCACKE,YADL,oCAEGH,KAFH,EAEWI,WAAWrB,OAAMsB,QAAN,CAAeJ,IAAf,CAAX,GAAkCA,IAF7C;AAID,GARD,EAQG,EARH,CAFF;AAYD,CAbM;;AAeP,IAAMK,gBAAgB,SAAhBA,aAAgB,CAACC,OAAD,EAAUC,YAAV,EAA2B;AAC/ChC,2BAAwB+B,OAAxB;;AAD+C,MAEvClB,IAFuC,GAEtBkB,OAFsB,CAEvClB,IAFuC;AAAA,MAEjCM,MAFiC,GAEtBY,OAFsB,CAEjCZ,MAFiC;;AAI/CjB,UAAO+B,OAAP,mCACGpB,IADH,YACSD,cADT,EACyB;AACrBd,kBAAac,cAAb,EAA6BC,IAA7B;;AACAZ,iBAAYW,cAAZ,EAA4BO,MAA5B,EAAoCN,IAApC;;AAEA,QAAIK,eAAJ;;AACA,QAAI;AACFA,eAASc,aAAapB,cAAb,CAAT;AACAJ,mBAAa0B,YAAb,CAA0BH,OAA1B,EAAmCnB,cAAnC;AACD,KAHD,CAGE,OAAOuB,KAAP,EAAc;AACd,YAAMA,KAAN;AACD;;AAEDpC,iBAAYmB,MAAZ,EAAoBL,IAApB;;AAEA,WAAOK,MAAP;AACD,GAhBH;AAkBD,CAtBD;;AAvDAtB,OAAOwC,aAAP,CA+EeN,aA/Ef","file":"imports/core/api/mutations/createMutator.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check, Match } from 'meteor/check';\n\nimport EventService from '../events';\n\nconst INVALID_MUTATION_OPTIONS = 'INVALID_MUTATION_OPTIONS';\nconst MUTATION_ERROR = 'MUTATION_ERROR';\n\nexport const beforeLogger = (callParameters, name) => {\n  if (Meteor.isDevelopment && !Meteor.isTest) {\n    console.log(`Executing method ${name} with the following params:`);\n    console.log(callParameters);\n  }\n};\n\nexport const afterLogger = (result, name) => {\n  if (Meteor.isDevelopment && !Meteor.isTest) {\n    console.log(`Executed ${name} and got result:`);\n    console.log(result);\n  }\n};\n\nexport const validateMutationOptions = ({ name, params }) => {\n  if (!name || typeof name !== 'string') {\n    throw new Meteor.Error(INVALID_MUTATION_OPTIONS, 'name has to be a string');\n  }\n\n  if (params) {\n    Object.keys(params).forEach((param) => {\n      const { type } = params[param];\n      if (!type) {\n        throw new Meteor.Error(\n          INVALID_MUTATION_OPTIONS,\n          `you have to provide a type for parameter: \"${param}\" in ${name}`,\n        );\n      }\n    });\n  }\n};\n\nexport const checkParams = (callParameters, params) => {\n  check(\n    callParameters,\n    Object.keys(params).reduce((matchPattern, param) => {\n      const { optional, type } = params[param];\n\n      // Return a Match Pattern and check for optionals\n      return {\n        ...matchPattern,\n        [param]: optional ? Match.Optional(type) : type,\n      };\n    }, {}),\n  );\n};\n\nconst createMutator = (options, functionBody) => {\n  validateMutationOptions(options);\n  const { name, params } = options;\n\n  Meteor.methods({\n    [name](callParameters) {\n      beforeLogger(callParameters, name);\n      checkParams(callParameters, params, name);\n\n      let result;\n      try {\n        result = functionBody(callParameters);\n        EventService.emitMutation(options, callParameters);\n      } catch (error) {\n        throw error;\n      }\n\n      afterLogger(result, name);\n\n      return result;\n    },\n  });\n};\n\nexport default createMutator;\n"]},"hash":"000a7ddc9023fe1cabe8cacdb3fece4fb48408c2"}
