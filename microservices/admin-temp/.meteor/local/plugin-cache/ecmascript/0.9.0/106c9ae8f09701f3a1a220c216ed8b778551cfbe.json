{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/redux/reducers/notifications.js","filenameRelative":"imports/core/redux/reducers/notifications.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/redux/reducers/notifications.js.map","sourceFileName":"imports/core/redux/reducers/notifications.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"notifications"},"ignored":false,"code":"\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar initialState = [];\nvar ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nvar POP_NOTIFICATION = 'POP_NOTIFICATION';\n\nvar notifications = function () {\n  function notifications() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var _ref = arguments[1];\n    var type = _ref.type,\n        notification = _ref.notification;\n\n    switch (type) {\n      case ADD_NOTIFICATION:\n        return [].concat(_toConsumableArray(state), [notification]);\n\n      case POP_NOTIFICATION:\n        return [].concat(_toConsumableArray(state.slice(1)));\n\n      default:\n        return state;\n    }\n  }\n\n  return notifications;\n}();\n\nmodule.exportDefault(notifications);","map":{"version":3,"sources":["imports/core/redux/reducers/notifications.js"],"names":["initialState","ADD_NOTIFICATION","POP_NOTIFICATION","notifications","state","type","notification","slice","module","exportDefault"],"mappings":";;;;AAAA,IAAMA,eAAe,EAArB;AAEA,IAAMC,mBAAmB,kBAAzB;AACA,IAAMC,mBAAmB,kBAAzB;;AAEA,IAAMC;AAAgB,WAAhBA,aAAgB,GAAkD;AAAA,QAAjDC,KAAiD,uEAAzCJ,YAAyC;AAAA;AAAA,QAAzBK,IAAyB,QAAzBA,IAAyB;AAAA,QAAnBC,YAAmB,QAAnBA,YAAmB;;AACtE,YAAQD,IAAR;AACA,WAAKJ,gBAAL;AACE,4CAAWG,KAAX,IAAkBE,YAAlB;;AACF,WAAKJ,gBAAL;AACE,4CAAWE,MAAMG,KAAN,CAAY,CAAZ,CAAX;;AACF;AACE,eAAOH,KAAP;AANF;AAQD;;AATK;AAAA,GAAN;;AALAI,OAAOC,aAAP,CAgBeN,aAhBf","file":"imports/core/redux/reducers/notifications.js.map","sourcesContent":["const initialState = [];\n\nconst ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nconst POP_NOTIFICATION = 'POP_NOTIFICATION';\n\nconst notifications = (state = initialState, { type, notification }) => {\n  switch (type) {\n  case ADD_NOTIFICATION:\n    return [...state, notification];\n  case POP_NOTIFICATION:\n    return [...state.slice(1)];\n  default:\n    return state;\n  }\n};\n\nexport default notifications;\n"]},"hash":"106c9ae8f09701f3a1a220c216ed8b778551cfbe"}
