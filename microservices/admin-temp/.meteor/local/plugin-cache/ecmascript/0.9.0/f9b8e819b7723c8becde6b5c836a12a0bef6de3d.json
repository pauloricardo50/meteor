{"metadata":{"usedHelpers":["classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/namedQuery/store.js","filenameRelative":"packages/cultofcoders:grapher/lib/namedQuery/store.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/namedQuery/store.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/namedQuery/store.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"store"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exportDefault(new (function () {\n    function _class() {\n        (0, _classCallCheck3.default)(this, _class);\n        this.storage = {};\n    }\n\n    _class.prototype.add = function () {\n        function add(key, value) {\n            if (this.storage[key]) {\n                throw new Meteor.Error('invalid-name', \"You have previously defined another namedQuery with the same name: \\\"\" + key + \"\\\". Named Query names should be unique.\");\n            }\n\n            this.storage[key] = value;\n        }\n\n        return add;\n    }();\n\n    _class.prototype.get = function () {\n        function get(key) {\n            return this.storage[key];\n        }\n\n        return get;\n    }();\n\n    _class.prototype.getAll = function () {\n        function getAll() {\n            return this.storage;\n        }\n\n        return getAll;\n    }();\n\n    return _class;\n}())());","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/namedQuery/store.js"],"names":["module","exportDefault","storage","add","key","value","Meteor","Error","get","getAll"],"mappings":";;;;;;AAAAA,OAAOC,aAAP,CAAe;AACX,sBAAc;AAAA;AACV,aAAKC,OAAL,GAAe,EAAf;AACH;;AAHU,qBAKXC,GALW;AAAA,qBAKPC,GALO,EAKFC,KALE,EAKK;AACZ,gBAAI,KAAKH,OAAL,CAAaE,GAAb,CAAJ,EAAuB;AACnB,sBAAM,IAAIE,OAAOC,KAAX,CAAiB,cAAjB,4EAAwGH,GAAxG,6CAAN;AACH;;AAED,iBAAKF,OAAL,CAAaE,GAAb,IAAoBC,KAApB;AACH;;AAXU;AAAA;;AAAA,qBAaXG,GAbW;AAAA,qBAaPJ,GAbO,EAaF;AACL,mBAAO,KAAKF,OAAL,CAAaE,GAAb,CAAP;AACH;;AAfU;AAAA;;AAAA,qBAiBXK,MAjBW;AAAA,0BAiBF;AACL,mBAAO,KAAKP,OAAZ;AACH;;AAnBU;AAAA;;AAAA;AAAA,MAAf","file":"packages/cultofcoders:grapher/lib/namedQuery/store.js.map","sourcesContent":["export default new class {\n    constructor() {\n        this.storage = {};\n    }\n\n    add(key, value) {\n        if (this.storage[key]) {\n            throw new Meteor.Error('invalid-name', `You have previously defined another namedQuery with the same name: \"${key}\". Named Query names should be unique.`);\n        }\n\n        this.storage[key] = value;\n    }\n\n    get(key) {\n        return this.storage[key];\n    }\n\n    getAll() {\n        return this.storage;\n    }\n}"]},"hash":"f9b8e819b7723c8becde6b5c836a12a0bef6de3d"}
