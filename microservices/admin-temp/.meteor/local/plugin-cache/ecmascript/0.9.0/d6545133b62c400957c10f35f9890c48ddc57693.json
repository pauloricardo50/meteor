{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"../../../core/components/DropdownMenu","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"DropdownMenu"}]},{"source":"../../../core/api","imported":["callMutation","mutations"],"specifiers":[{"kind":"named","imported":"callMutation","local":"callMutation"},{"kind":"named","imported":"mutations","local":"mutations"}]},{"source":"../../../core/api/tasks/tasksConstants","imported":["TASK_STATUS"],"specifiers":[{"kind":"named","imported":"TASK_STATUS","local":"TASK_STATUS"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","filenameRelative":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourceFileName":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TasksAssignedUserDropdown"},"ignored":false,"code":"\"use strict\";\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function () {\n    function Meteor(v) {\n      _Meteor = v;\n    }\n\n    return Meteor;\n  }()\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar DropdownMenu = void 0;\nmodule.watch(require(\"../../../core/components/DropdownMenu\"), {\n  \"default\": function () {\n    function _default(v) {\n      DropdownMenu = v;\n    }\n\n    return _default;\n  }()\n}, 2);\n\nvar _callMutation = void 0,\n    _mutations = void 0;\n\nmodule.watch(require(\"../../../core/api\"), {\n  callMutation: function () {\n    function callMutation(v) {\n      _callMutation = v;\n    }\n\n    return callMutation;\n  }(),\n  mutations: function () {\n    function mutations(v) {\n      _mutations = v;\n    }\n\n    return mutations;\n  }()\n}, 3);\n\nvar _TASK_STATUS = void 0;\n\nmodule.watch(require(\"../../../core/api/tasks/tasksConstants\"), {\n  TASK_STATUS: function () {\n    function TASK_STATUS(v) {\n      _TASK_STATUS = v;\n    }\n\n    return TASK_STATUS;\n  }()\n}, 4);\n\nvar firstUserAssign = function () {\n  function firstUserAssign(taskAssignedTo, relatedUserId, user, taskId) {\n    if (!taskAssignedTo) {\n      _callMutation(_mutations.ASSIGN_ADMIN_TO_USER, {\n        userId: relatedUserId,\n        adminId: user._id\n      }).then(function (nbOfAffectedRows) {\n        if (nbOfAffectedRows > 0) {\n          _callMutation(_mutations.TASK_CHANGE_ASSIGNED_TO, {\n            taskId: taskId,\n            newAssignee: user._id\n          });\n        }\n      }).then(function (nbOfAffectedRows) {\n        if (nbOfAffectedRows > 0) {\n          _callMutation(_mutations.TASK_CHANGE_STATUS, {\n            taskId: taskId,\n            newStatus: _TASK_STATUS.COMPLETED\n          });\n        }\n      });\n    } else {\n      _callMutation(_mutations.TASK_CHANGE_ASSIGNED_TO, {\n        taskId: taskId,\n        newAssignee: user._id\n      });\n    }\n  }\n\n  return firstUserAssign;\n}();\n\nvar changeAssignedUser = function () {\n  function changeAssignedUser(_ref) {\n    var user = _ref.user,\n        task = _ref.task,\n        taskAssignedTo = _ref.taskAssignedTo;\n    var taskId = task._id;\n    var taskUserId = task.user ? task.user._id : undefined; // if (initialAssignment && taskUserId) {\n\n    if (!taskUserId) {\n      _callMutation(_mutations.TASK_GET_RELATED_TO, {\n        task: task\n      }).then(function (relatedUserId) {\n        firstUserAssign(taskAssignedTo, relatedUserId, user, taskId);\n      });\n    } else {\n      firstUserAssign(taskAssignedTo, taskUserId, user, taskId);\n    }\n  }\n\n  return changeAssignedUser;\n}();\n\nvar getMenuItems = function () {\n  function getMenuItems(users, task) // taskAssignedTo,\n  // taskId,\n  // taskUserId,\n  // initialAssignment,\n  {\n    var taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n    var options = users.map(function (user) {\n      return {\n        id: user._id,\n        show: user._id !== taskAssignedTo,\n        label: user.emails[0].address,\n        link: false,\n        onClick: function () {\n          function onClick() {\n            changeAssignedUser({\n              user: user,\n              task: task,\n              taskAssignedTo: taskAssignedTo // taskId,\n              // taskAssignedTo,\n              // taskUserId,\n              // initialAssignment,\n\n            });\n          }\n\n          return onClick;\n        }()\n      };\n    });\n    return options;\n  }\n\n  return getMenuItems;\n}();\n\nvar TasksAssignedUserDropdown = function () {\n  function TasksAssignedUserDropdown(props) {\n    // const { data, isLoading, error, taskId, taskUser, styles } = props;\n    var data = props.data,\n        isLoading = props.isLoading,\n        error = props.error,\n        task = props.task,\n        styles = props.styles;\n\n    if (isLoading) {\n      return null;\n    }\n\n    if (error) {\n      return React.createElement(\n        \"div\",\n        null,\n        \"Error: \",\n        error.reason\n      );\n    }\n\n    return React.createElement(DropdownMenu, {\n      iconType: \"personAdd\",\n      options: getMenuItems(data, task // taskAssignedTo,\n      // taskId,\n      // taskUserId,\n      // initialAssignment,\n      ),\n      style: styles\n    });\n  }\n\n  return TasksAssignedUserDropdown;\n}();\n\nmodule.exportDefault(TasksAssignedUserDropdown);","map":{"version":3,"sources":["imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx"],"names":["Meteor","module","watch","require","v","React","DropdownMenu","callMutation","mutations","TASK_STATUS","firstUserAssign","taskAssignedTo","relatedUserId","user","taskId","ASSIGN_ADMIN_TO_USER","userId","adminId","_id","then","nbOfAffectedRows","TASK_CHANGE_ASSIGNED_TO","newAssignee","TASK_CHANGE_STATUS","newStatus","COMPLETED","changeAssignedUser","task","taskUserId","undefined","TASK_GET_RELATED_TO","getMenuItems","users","assignedUser","options","map","id","show","label","emails","address","link","onClick","TasksAssignedUserDropdown","props","data","isLoading","error","styles","reason","exportDefault"],"mappings":"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","file":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport DropdownMenu from 'core/components/DropdownMenu/';\nimport { callMutation, mutations } from 'core/api';\nimport { TASK_STATUS } from 'core/api/tasks/tasksConstants';\n\nconst firstUserAssign = (taskAssignedTo, relatedUserId, user, taskId) => {\n  if (!taskAssignedTo) {\n    callMutation(mutations.ASSIGN_ADMIN_TO_USER, {\n      userId: relatedUserId,\n      adminId: user._id,\n    })\n      .then((nbOfAffectedRows) => {\n        if (nbOfAffectedRows > 0) {\n          callMutation(mutations.TASK_CHANGE_ASSIGNED_TO, {\n            taskId,\n            newAssignee: user._id,\n          });\n        }\n      })\n      .then((nbOfAffectedRows) => {\n        if (nbOfAffectedRows > 0) {\n          callMutation(mutations.TASK_CHANGE_STATUS, {\n            taskId,\n            newStatus: TASK_STATUS.COMPLETED,\n          });\n        }\n      });\n  } else {\n    callMutation(mutations.TASK_CHANGE_ASSIGNED_TO, {\n      taskId,\n      newAssignee: user._id,\n    });\n  }\n};\n\nconst changeAssignedUser = ({\n  user,\n  task,\n  taskAssignedTo,\n  // taskId,\n  // taskAssignedTo,\n  // taskUserId,\n  // initialAssignment,\n}) => {\n  const taskId = task._id;\n  const taskUserId = task.user ? task.user._id : undefined;\n  // if (initialAssignment && taskUserId) {\n  if (!taskUserId) {\n    callMutation(mutations.TASK_GET_RELATED_TO, {\n      task,\n    }).then((relatedUserId) => {\n      firstUserAssign(taskAssignedTo, relatedUserId, user, taskId);\n    });\n  } else {\n    firstUserAssign(taskAssignedTo, taskUserId, user, taskId);\n  }\n};\n\nconst getMenuItems = (\n  users,\n  task,\n  // taskAssignedTo,\n  // taskId,\n  // taskUserId,\n  // initialAssignment,\n) => {\n  const taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n  const options = users.map(user => ({\n    id: user._id,\n    show: user._id !== taskAssignedTo,\n    label: user.emails[0].address,\n    link: false,\n    onClick: () => {\n      changeAssignedUser({\n        user,\n        task,\n        taskAssignedTo,\n        // taskId,\n        // taskAssignedTo,\n        // taskUserId,\n        // initialAssignment,\n      });\n    },\n  }));\n  return options;\n};\n\nconst TasksAssignedUserDropdown = (props) => {\n  // const { data, isLoading, error, taskId, taskUser, styles } = props;\n  const {\n    data,\n    isLoading,\n    error,\n    task,\n    // taskId,\n    // taskAssignedTo,\n    // taskUserId,\n    // initialAssignment,\n    styles,\n  } = props;\n\n  if (isLoading) {\n    return null;\n  }\n  if (error) {\n    return <div>Error: {error.reason}</div>;\n  }\n\n  return (\n    <DropdownMenu\n      iconType=\"personAdd\"\n      options={getMenuItems(\n        data,\n        task,\n        // taskAssignedTo,\n        // taskId,\n        // taskUserId,\n        // initialAssignment,\n      )}\n      style={styles}\n    />\n  );\n};\n\nexport default TasksAssignedUserDropdown;\n"]},"hash":"d6545133b62c400957c10f35f9890c48ddc57693"}
