{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../api/borrowers/BorrowerService","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"BorrowerService"}]},{"source":"../api/borrowers/borrowerConstants","imported":["RESIDENCY_PERMIT","GENDER","CIVIL_STATUS","OTHER_FORTUNE","OTHER_INCOME","EXPENSES","REAL_ESTATE"],"specifiers":[{"kind":"named","imported":"RESIDENCY_PERMIT","local":"RESIDENCY_PERMIT"},{"kind":"named","imported":"GENDER","local":"GENDER"},{"kind":"named","imported":"CIVIL_STATUS","local":"CIVIL_STATUS"},{"kind":"named","imported":"OTHER_FORTUNE","local":"OTHER_FORTUNE"},{"kind":"named","imported":"OTHER_INCOME","local":"OTHER_INCOME"},{"kind":"named","imported":"EXPENSES","local":"EXPENSES"},{"kind":"named","imported":"REAL_ESTATE","local":"REAL_ESTATE"}]},{"source":"../api/files/files","imported":["fakeFile"],"specifiers":[{"kind":"named","imported":"fakeFile","local":"fakeFile"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/fixtures/borrowers.js","filenameRelative":"imports/core/fixtures/borrowers.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/fixtures/borrowers.js.map","sourceFileName":"imports/core/fixtures/borrowers.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"borrowers"},"ignored":false,"code":"\"use strict\";\n\nvar BorrowerService = void 0;\nmodule.watch(require(\"../api/borrowers/BorrowerService\"), {\n  \"default\": function () {\n    function _default(v) {\n      BorrowerService = v;\n    }\n\n    return _default;\n  }()\n}, 0);\n\nvar _RESIDENCY_PERMIT = void 0,\n    _GENDER = void 0,\n    _CIVIL_STATUS = void 0,\n    _OTHER_FORTUNE = void 0,\n    _OTHER_INCOME = void 0,\n    _EXPENSES = void 0,\n    _REAL_ESTATE = void 0;\n\nmodule.watch(require(\"../api/borrowers/borrowerConstants\"), {\n  RESIDENCY_PERMIT: function () {\n    function RESIDENCY_PERMIT(v) {\n      _RESIDENCY_PERMIT = v;\n    }\n\n    return RESIDENCY_PERMIT;\n  }(),\n  GENDER: function () {\n    function GENDER(v) {\n      _GENDER = v;\n    }\n\n    return GENDER;\n  }(),\n  CIVIL_STATUS: function () {\n    function CIVIL_STATUS(v) {\n      _CIVIL_STATUS = v;\n    }\n\n    return CIVIL_STATUS;\n  }(),\n  OTHER_FORTUNE: function () {\n    function OTHER_FORTUNE(v) {\n      _OTHER_FORTUNE = v;\n    }\n\n    return OTHER_FORTUNE;\n  }(),\n  OTHER_INCOME: function () {\n    function OTHER_INCOME(v) {\n      _OTHER_INCOME = v;\n    }\n\n    return OTHER_INCOME;\n  }(),\n  EXPENSES: function () {\n    function EXPENSES(v) {\n      _EXPENSES = v;\n    }\n\n    return EXPENSES;\n  }(),\n  REAL_ESTATE: function () {\n    function REAL_ESTATE(v) {\n      _REAL_ESTATE = v;\n    }\n\n    return REAL_ESTATE;\n  }()\n}, 1);\n\nvar _fakeFile = void 0;\n\nmodule.watch(require(\"../api/files/files\"), {\n  fakeFile: function () {\n    function fakeFile(v) {\n      _fakeFile = v;\n    }\n\n    return fakeFile;\n  }()\n}, 2);\nvar firstNames = ['Marie', 'Camille', 'Léa', 'Manon', 'Thomas', 'Nicolas', 'Julien'];\nvar lastNames = ['Arsenault', 'Babel', 'Rochat'];\n\nvar generateSecondBorrowerProbabillity = function () {\n  function generateSecondBorrowerProbabillity() {\n    return Math.random() < 0.8;\n  }\n\n  return generateSecondBorrowerProbabillity;\n}();\n\nvar insertFakeBorrower = function () {\n  function insertFakeBorrower(userId) {\n    var borrower = {\n      firstName: firstNames[Math.floor(Math.random() * firstNames.length)],\n      lastName: lastNames[Math.floor(Math.random() * lastNames.length)],\n      gender: 'F',\n      address1: 'Chemin du Mont 3',\n      zipCode: 1400,\n      city: 'Yverdon-les-Bains',\n      citizenships: 'Suisse, Français',\n      age: 35,\n      birthPlace: 'Lausanne',\n      civilStatus: 'SINGLE',\n      childrenCount: 2,\n      company: 'Deloitte',\n      personalBank: 'BCGE',\n      isSwiss: true,\n      isUSPerson: false,\n      worksForOwnCompany: false,\n      sameAddress: true,\n      salary: 300000,\n      bonusExists: true,\n      bonus: {\n        bonus2014: 12300,\n        bonus2015: 15490,\n        bonus2016: 11140,\n        bonus2017: 13780\n      },\n      otherIncome: [{\n        value: 10000,\n        description: 'PENSION'\n      }, {\n        value: 15000,\n        description: 'RENT'\n      }],\n      expenses: [{\n        value: 3000,\n        description: 'LEASING'\n      }, {\n        value: 4000,\n        description: 'PERSONAL_LOAN'\n      }],\n      realEstate: [{\n        value: 433000,\n        loan: 240000,\n        description: 'PRIMARY'\n      }],\n      bankFortune: 300000,\n      insuranceSecondPillar: 120000,\n      insuranceThirdPillar: 50000,\n      files: {\n        identity: [_fakeFile],\n        taxes: [_fakeFile],\n        salaryCertificate: [_fakeFile],\n        bonus: [_fakeFile],\n        otherIncome: [_fakeFile],\n        expenses: [_fakeFile],\n        nonPursuitExtract: [_fakeFile],\n        lastSalaries: [_fakeFile],\n        currentMortgages: [_fakeFile],\n        bankAssetsChange: [_fakeFile],\n        pensionFundYearlyStatement: [_fakeFile],\n        retirementInsurancePlan: [_fakeFile]\n      },\n      logic: {\n        financeEthics: true,\n        hasValidatedFinances: true\n      }\n    };\n    return BorrowerService.insert({\n      borrower: borrower,\n      userId: userId\n    });\n  }\n\n  return insertFakeBorrower;\n}();\n\nvar createFakeBorrowers = function () {\n  function createFakeBorrowers(userId) {\n    var borrowerIds = [insertFakeBorrower(userId)];\n\n    if (generateSecondBorrowerProbabillity()) {\n      borrowerIds.push(insertFakeBorrower(userId));\n    }\n\n    return borrowerIds;\n  }\n\n  return createFakeBorrowers;\n}();\n\nmodule.exportDefault(createFakeBorrowers);","map":{"version":3,"sources":["imports/core/fixtures/borrowers.js"],"names":["BorrowerService","module","watch","require","v","RESIDENCY_PERMIT","GENDER","CIVIL_STATUS","OTHER_FORTUNE","OTHER_INCOME","EXPENSES","REAL_ESTATE","fakeFile","firstNames","lastNames","generateSecondBorrowerProbabillity","Math","random","insertFakeBorrower","userId","borrower","firstName","floor","length","lastName","gender","address1","zipCode","city","citizenships","age","birthPlace","civilStatus","childrenCount","company","personalBank","isSwiss","isUSPerson","worksForOwnCompany","sameAddress","salary","bonusExists","bonus","bonus2014","bonus2015","bonus2016","bonus2017","otherIncome","value","description","expenses","realEstate","loan","bankFortune","insuranceSecondPillar","insuranceThirdPillar","files","identity","taxes","salaryCertificate","nonPursuitExtract","lastSalaries","currentMortgages","bankAssetsChange","pensionFundYearlyStatement","retirementInsurancePlan","logic","financeEthics","hasValidatedFinances","insert","createFakeBorrowers","borrowerIds","push","exportDefault"],"mappings":"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","file":"imports/core/fixtures/borrowers.js.map","sourcesContent":["import BorrowerService from 'core/api/borrowers/BorrowerService';\nimport {\n  RESIDENCY_PERMIT,\n  GENDER,\n  CIVIL_STATUS,\n  OTHER_FORTUNE,\n  OTHER_INCOME,\n  EXPENSES,\n  REAL_ESTATE,\n} from 'core/api/borrowers/borrowerConstants';\nimport { fakeFile } from 'core/api/files/files';\n\nconst firstNames = [\n  'Marie',\n  'Camille',\n  'Léa',\n  'Manon',\n  'Thomas',\n  'Nicolas',\n  'Julien',\n];\n\nconst lastNames = ['Arsenault', 'Babel', 'Rochat'];\n\nconst generateSecondBorrowerProbabillity = () => Math.random() < 0.8;\n\nconst insertFakeBorrower = (userId) => {\n  const borrower = {\n    firstName: firstNames[Math.floor(Math.random() * firstNames.length)],\n    lastName: lastNames[Math.floor(Math.random() * lastNames.length)],\n    gender: 'F',\n    address1: 'Chemin du Mont 3',\n    zipCode: 1400,\n    city: 'Yverdon-les-Bains',\n    citizenships: 'Suisse, Français',\n    age: 35,\n    birthPlace: 'Lausanne',\n    civilStatus: 'SINGLE',\n    childrenCount: 2,\n    company: 'Deloitte',\n    personalBank: 'BCGE',\n    isSwiss: true,\n    isUSPerson: false,\n    worksForOwnCompany: false,\n    sameAddress: true,\n\n    salary: 300000,\n    bonusExists: true,\n    bonus: {\n      bonus2014: 12300,\n      bonus2015: 15490,\n      bonus2016: 11140,\n      bonus2017: 13780,\n    },\n    otherIncome: [\n      {\n        value: 10000,\n        description: 'PENSION',\n      },\n      {\n        value: 15000,\n        description: 'RENT',\n      },\n    ],\n    expenses: [\n      {\n        value: 3000,\n        description: 'LEASING',\n      },\n      {\n        value: 4000,\n        description: 'PERSONAL_LOAN',\n      },\n    ],\n    realEstate: [\n      {\n        value: 433000,\n        loan: 240000,\n        description: 'PRIMARY',\n      },\n    ],\n    bankFortune: 300000,\n    insuranceSecondPillar: 120000,\n    insuranceThirdPillar: 50000,\n    files: {\n      identity: [fakeFile],\n      taxes: [fakeFile],\n      salaryCertificate: [fakeFile],\n      bonus: [fakeFile],\n      otherIncome: [fakeFile],\n      expenses: [fakeFile],\n      nonPursuitExtract: [fakeFile],\n      lastSalaries: [fakeFile],\n      currentMortgages: [fakeFile],\n      bankAssetsChange: [fakeFile],\n      pensionFundYearlyStatement: [fakeFile],\n      retirementInsurancePlan: [fakeFile],\n    },\n    logic: {\n      financeEthics: true,\n      hasValidatedFinances: true,\n    },\n  };\n  \n  return BorrowerService.insert({ borrower, userId });\n};\n\nconst createFakeBorrowers = (userId) => {\n  const borrowerIds = [insertFakeBorrower(userId)];\n  if (generateSecondBorrowerProbabillity()) {\n    borrowerIds.push(insertFakeBorrower(userId));\n  }\n  return borrowerIds;\n};\n\nexport default createFakeBorrowers;\n"]},"hash":"b03b81964808ed13fd2babefea2a4844059db710"}
