{"metadata":{"usedHelpers":["createClass","classCallCheck","toConsumableArray","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"sift","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"sift"}]}],"exports":{"exported":["AggregateFilters"],"specifiers":[{"kind":"local","local":"AggregateFilters","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"aggregateSearchFilters"},"ignored":false,"code":"var _toConsumableArray2 = require(\"babel-runtime/helpers/toConsumableArray\");\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n    \"default\": function () {\n        return AggregateFilters;\n    }\n});\nvar sift = void 0;\nmodule.watch(require(\"sift\"), {\n    \"default\": function (v) {\n        sift = v;\n    }\n}, 0);\n\nvar AggregateFilters = function () {\n    function AggregateFilters(collectionNode, metaFilters) {\n        (0, _classCallCheck3.default)(this, AggregateFilters);\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    AggregateFilters.prototype.create = function () {\n        function create() {\n            switch (this.linker.strategy) {\n                case 'one':\n                    return this.createOne();\n\n                case 'one-meta':\n                    return this.createOneMeta();\n\n                case 'many':\n                    return this.createMany();\n\n                case 'many-meta':\n                    return this.createManyMeta();\n\n                default:\n                    throw new Meteor.Error(\"Invalid linker type: \" + this.linker.type);\n            }\n        }\n\n        return create;\n    }();\n\n    AggregateFilters.prototype.createOne = function () {\n        function createOne() {\n            if (!this.isVirtual) {\n                return {\n                    _id: {\n                        $in: _.uniq(_.pluck(this.parentObjects, this.linkStorageField))\n                    }\n                };\n            } else {\n                var _ref;\n\n                return _ref = {}, _ref[this.linkStorageField] = {\n                    $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n                }, _ref;\n            }\n        }\n\n        return createOne;\n    }();\n\n    AggregateFilters.prototype.createOneMeta = function () {\n        function createOneMeta() {\n            var _this = this;\n\n            if (!this.isVirtual) {\n                var eligibleObjects = this.parentObjects;\n\n                if (this.metaFilters) {\n                    eligibleObjects = _.filter(this.parentObjects, function (object) {\n                        return sift(_this.metaFilters)(object[_this.linkStorageField]);\n                    });\n                }\n\n                var storages = _.pluck(eligibleObjects, this.linkStorageField);\n\n                var ids = [];\n\n                _.each(storages, function (storage) {\n                    if (storage) {\n                        ids.push(storage._id);\n                    }\n                });\n\n                return {\n                    _id: {\n                        $in: _.uniq(ids)\n                    }\n                };\n            } else {\n                var filters = {};\n\n                if (this.metaFilters) {\n                    _.each(this.metaFilters, function (value, key) {\n                        filters[_this.linkStorageField + '.' + key] = value;\n                    });\n                }\n\n                filters[this.linkStorageField + '._id'] = {\n                    $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n                };\n                return filters;\n            }\n        }\n\n        return createOneMeta;\n    }();\n\n    AggregateFilters.prototype.createMany = function () {\n        function createMany() {\n            if (!this.isVirtual) {\n                var _ref2;\n\n                var arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n\n                return {\n                    _id: {\n                        $in: _.uniq((_ref2 = _).union.apply(_ref2, (0, _toConsumableArray3.default)(arrayOfIds)))\n                    }\n                };\n            } else {\n                var _ref3, _ref4;\n\n                var _arrayOfIds = _.pluck(this.parentObjects, '_id');\n\n                return _ref4 = {}, _ref4[this.linkStorageField] = {\n                    $in: _.uniq((_ref3 = _).union.apply(_ref3, (0, _toConsumableArray3.default)(_arrayOfIds)))\n                }, _ref4;\n            }\n        }\n\n        return createMany;\n    }();\n\n    AggregateFilters.prototype.createManyMeta = function () {\n        function createManyMeta() {\n            var _this2 = this;\n\n            if (!this.isVirtual) {\n                var ids = [];\n\n                _.each(this.parentObjects, function (object) {\n                    if (object[_this2.linkStorageField]) {\n                        if (_this2.metaFilters) {\n                            var isValid = sift(_this2.metaFilters);\n\n                            _.each(object[_this2.linkStorageField], function (object) {\n                                if (isValid(object)) {\n                                    ids.push(object._id);\n                                }\n                            });\n                        } else {\n                            _.each(object[_this2.linkStorageField], function (object) {\n                                ids.push(object._id);\n                            });\n                        }\n                    }\n                });\n\n                return {\n                    _id: {\n                        $in: _.uniq(ids)\n                    }\n                };\n            } else {\n                var _ref5;\n\n                var filters = {};\n\n                if (this.metaFilters) {\n                    _.each(this.metaFilters, function (value, key) {\n                        filters[key] = value;\n                    });\n                }\n\n                filters._id = {\n                    $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n                };\n                return _ref5 = {}, _ref5[this.linkStorageField] = {\n                    $elemMatch: filters\n                }, _ref5;\n            }\n        }\n\n        return createManyMeta;\n    }();\n\n    (0, _createClass3.default)(AggregateFilters, [{\n        key: \"parentObjects\",\n        get: function () {\n            return this.collectionNode.parent.results;\n        }\n    }]);\n    return AggregateFilters;\n}();","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js"],"names":["module","export","AggregateFilters","sift","watch","require","v","collectionNode","metaFilters","linker","isVirtual","linkStorageField","create","strategy","createOne","createOneMeta","createMany","createManyMeta","Meteor","Error","type","_id","$in","_","uniq","pluck","parentObjects","eligibleObjects","filter","object","storages","ids","each","storage","push","filters","value","key","arrayOfIds","union","isValid","$elemMatch","parent","results"],"mappings":"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","file":"packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js.map","sourcesContent":["import sift from 'sift';\n\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\nexport default class AggregateFilters {\n    constructor(collectionNode, metaFilters) {\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    get parentObjects() {\n        return this.collectionNode.parent.results;\n    }\n\n    create() {\n        switch (this.linker.strategy) {\n            case 'one':\n                return this.createOne();\n            case 'one-meta':\n                return this.createOneMeta();\n            case 'many':\n                return this.createMany();\n            case 'many-meta':\n                return this.createManyMeta();\n            default:\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n        }\n    }\n\n    createOne() {\n        if (!this.isVirtual) {\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, this.linkStorageField)\n                    )\n                }\n            };\n        } else {\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, '_id')\n                    )\n                }\n            };\n        }\n    }\n\n    createOneMeta() {\n        if (!this.isVirtual) {\n            let eligibleObjects = this.parentObjects;\n\n            if (this.metaFilters) {\n                eligibleObjects = _.filter(this.parentObjects, object => {\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\n                });\n            }\n\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\n            let ids = [];\n            _.each(storages, storage => {\n                if (storage) {\n                    ids.push(storage._id);\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[this.linkStorageField + '.' + key] = value;\n                })\n            }\n\n            filters[this.linkStorageField + '._id'] = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return filters;\n        }\n    }\n\n    createMany() {\n        if (!this.isVirtual) {\n            const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        } else {\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        }\n    }\n\n    createManyMeta() {\n        if (!this.isVirtual) {\n            let ids = [];\n\n            _.each(this.parentObjects, object => {\n                if (object[this.linkStorageField]) {\n                    if (this.metaFilters) {\n                        const isValid = sift(this.metaFilters);\n                        _.each(object[this.linkStorageField], object => {\n                            if (isValid(object)) {\n                                ids.push(object._id);\n                            }\n                        });\n                    } else {\n                        _.each(object[this.linkStorageField], object => {\n                            ids.push(object._id);\n                        });\n                    }\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[key] = value;\n                })\n            }\n\n            filters._id = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return {\n                [this.linkStorageField]: {\n                    $elemMatch: filters\n                }\n            };\n        }\n    }\n}"]},"hash":"0f61fff37fdc0a5275f6f532ba35392963f28503"}
