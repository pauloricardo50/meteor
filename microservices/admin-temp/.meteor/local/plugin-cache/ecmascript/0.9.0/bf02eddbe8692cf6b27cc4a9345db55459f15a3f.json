{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/testing/lib/waitForHandleToBeReady.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/testing/lib/waitForHandleToBeReady.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/testing/lib/waitForHandleToBeReady.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/testing/lib/waitForHandleToBeReady.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"waitForHandleToBeReady"},"ignored":false,"code":"module.exportDefault(handle => {\n    return new Promise((resolve, reject) => {\n        Tracker.autorun(c => {\n            if (handle.ready()) {\n                c.stop();\n                resolve();\n            }\n        });\n    });\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/testing/lib/waitForHandleToBeReady.js"],"names":["module","exportDefault","handle","Promise","resolve","reject","Tracker","autorun","c","ready","stop"],"mappings":"AAAAA,OAAOC,aAAP,CAAgBC,MAAD,IAAY;AACvB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,gBAAQC,OAAR,CAAgBC,KAAK;AACjB,gBAAIN,OAAOO,KAAP,EAAJ,EAAoB;AAChBD,kBAAEE,IAAF;AAEAN;AACH;AACJ,SAND;AAOH,KARM,CAAP;AASH,CAVD","file":"packages/cultofcoders:grapher/lib/query/testing/lib/waitForHandleToBeReady.js.map","sourcesContent":["export default (handle) => {\n    return new Promise((resolve, reject) => {\n        Tracker.autorun(c => {\n            if (handle.ready()) {\n                c.stop();\n\n                resolve();\n            }\n        })\n    })\n};"]},"hash":"bf02eddbe8692cf6b27cc4a9345db55459f15a3f"}
