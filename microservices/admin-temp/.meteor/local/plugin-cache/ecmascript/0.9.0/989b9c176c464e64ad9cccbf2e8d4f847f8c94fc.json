{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"../../../core/components/DropdownMenu","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"DropdownMenu"}]},{"source":"../../../core/api","imported":["callMutation","mutations"],"specifiers":[{"kind":"named","imported":"callMutation","local":"callMutation"},{"kind":"named","imported":"mutations","local":"mutations"}]},{"source":"../../../core/api/tasks/tasksConstants","imported":["TASK_STATUS"],"specifiers":[{"kind":"named","imported":"TASK_STATUS","local":"TASK_STATUS"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/components/TasksTable/TasksAssignedUserDropdown.jsx","filenameRelative":"imports/ui/components/TasksTable/TasksAssignedUserDropdown.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/components/TasksTable/TasksAssignedUserDropdown.jsx.map","sourceFileName":"imports/ui/components/TasksTable/TasksAssignedUserDropdown.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TasksAssignedUserDropdown"},"ignored":false,"code":"\"use strict\";\n\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  }\n}, 0);\nvar DropdownMenu = void 0;\nmodule.watch(require(\"../../../core/components/DropdownMenu\"), {\n  default: function _default(v) {\n    DropdownMenu = v;\n  }\n}, 1);\n\nvar _callMutation = void 0,\n    _mutations = void 0;\n\nmodule.watch(require(\"../../../core/api\"), {\n  callMutation: function callMutation(v) {\n    _callMutation = v;\n  },\n  mutations: function mutations(v) {\n    _mutations = v;\n  }\n}, 2);\n\nvar _TASK_STATUS = void 0;\n\nmodule.watch(require(\"../../../core/api/tasks/tasksConstants\"), {\n  TASK_STATUS: function TASK_STATUS(v) {\n    _TASK_STATUS = v;\n  }\n}, 3);\n\nvar firstUserAssign = function firstUserAssign(_ref) {\n  var taskAssignedTo = _ref.taskAssignedTo,\n      relatedUserId = _ref.relatedUserId,\n      user = _ref.user,\n      taskId = _ref.taskId;\n\n  if (!taskAssignedTo) {\n    _callMutation(_mutations.ASSIGN_ADMIN_TO_USER, {\n      userId: relatedUserId,\n      adminId: user._id\n    }).then(function (nbOfAffectedRows) {\n      if (nbOfAffectedRows > 0) {\n        _callMutation(_mutations.TASK_CHANGE_ASSIGNED_TO, {\n          taskId: taskId,\n          newAssignee: user._id\n        });\n      }\n    }).then(function (nbOfAffectedRows) {\n      if (nbOfAffectedRows > 0) {\n        _callMutation(_mutations.TASK_CHANGE_STATUS, {\n          taskId: taskId,\n          newStatus: _TASK_STATUS.COMPLETED\n        });\n      }\n    });\n  } else {\n    _callMutation(_mutations.TASK_CHANGE_ASSIGNED_TO, {\n      taskId: taskId,\n      newAssignee: user._id\n    });\n  }\n};\n\nvar changeAssignedUser = function changeAssignedUser(_ref2) {\n  var user = _ref2.user,\n      task = _ref2.task,\n      taskAssignedTo = _ref2.taskAssignedTo;\n  var taskId = task._id;\n  var taskUserId = task.user ? task.user._id : undefined;\n\n  if (!taskUserId) {\n    _callMutation(_mutations.TASK_GET_RELATED_TO, {\n      task: task\n    }).then(function (relatedUserId) {\n      firstUserAssign({\n        taskAssignedTo: taskAssignedTo,\n        relatedUserId: relatedUserId,\n        user: user,\n        taskId: taskId\n      });\n    });\n  } else {\n    firstUserAssign({\n      taskAssignedTo: taskAssignedTo,\n      taskUserId: taskUserId,\n      user: user,\n      taskId: taskId\n    });\n  }\n};\n\nvar getMenuItems = function getMenuItems(users, task) {\n  var taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n  var options = users.map(function (user) {\n    return {\n      id: user._id,\n      show: user._id !== taskAssignedTo,\n      label: user.emails[0].address,\n      link: false,\n      onClick: function onClick() {\n        changeAssignedUser({\n          user: user,\n          task: task,\n          taskAssignedTo: taskAssignedTo\n        });\n      }\n    };\n  });\n  return options;\n};\n\nvar TasksAssignedUserDropdown = function TasksAssignedUserDropdown(props) {\n  var data = props.data,\n      isLoading = props.isLoading,\n      error = props.error,\n      task = props.task,\n      styles = props.styles;\n\n  if (isLoading) {\n    return null;\n  }\n\n  if (error) {\n    return React.createElement(\n      \"div\",\n      null,\n      \"Error: \",\n      error.reason\n    );\n  }\n\n  return React.createElement(DropdownMenu, {\n    iconType: \"personAdd\",\n    options: getMenuItems(data, task),\n    style: styles\n  });\n};\n\nmodule.exportDefault(TasksAssignedUserDropdown);","map":{"version":3,"sources":["imports/ui/components/TasksTable/TasksAssignedUserDropdown.jsx"],"names":["React","module","watch","require","default","v","DropdownMenu","callMutation","mutations","TASK_STATUS","firstUserAssign","taskAssignedTo","relatedUserId","user","taskId","ASSIGN_ADMIN_TO_USER","userId","adminId","_id","then","nbOfAffectedRows","TASK_CHANGE_ASSIGNED_TO","newAssignee","TASK_CHANGE_STATUS","newStatus","COMPLETED","changeAssignedUser","task","taskUserId","undefined","TASK_GET_RELATED_TO","getMenuItems","users","assignedUser","options","map","id","show","label","emails","address","link","onClick","TasksAssignedUserDropdown","props","data","isLoading","error","styles","reason","exportDefault"],"mappings":"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","file":"imports/ui/components/TasksTable/TasksAssignedUserDropdown.jsx.map","sourcesContent":["import React from 'react';\nimport DropdownMenu from 'core/components/DropdownMenu/';\nimport { callMutation, mutations } from 'core/api';\nimport { TASK_STATUS } from 'core/api/tasks/tasksConstants';\n\nconst firstUserAssign = ({ taskAssignedTo, relatedUserId, user, taskId }) => {\n  if (!taskAssignedTo) {\n    callMutation(mutations.ASSIGN_ADMIN_TO_USER, {\n      userId: relatedUserId,\n      adminId: user._id,\n    })\n      .then((nbOfAffectedRows) => {\n        if (nbOfAffectedRows > 0) {\n          callMutation(mutations.TASK_CHANGE_ASSIGNED_TO, {\n            taskId,\n            newAssignee: user._id,\n          });\n        }\n      })\n      .then((nbOfAffectedRows) => {\n        if (nbOfAffectedRows > 0) {\n          callMutation(mutations.TASK_CHANGE_STATUS, {\n            taskId,\n            newStatus: TASK_STATUS.COMPLETED,\n          });\n        }\n      });\n  } else {\n    callMutation(mutations.TASK_CHANGE_ASSIGNED_TO, {\n      taskId,\n      newAssignee: user._id,\n    });\n  }\n};\n\nconst changeAssignedUser = ({\n  user,\n  task,\n  taskAssignedTo,\n}) => {\n  const taskId = task._id;\n  const taskUserId = task.user ? task.user._id : undefined;\n  if (!taskUserId) {\n    callMutation(mutations.TASK_GET_RELATED_TO, {\n      task,\n    }).then((relatedUserId) => {\n      firstUserAssign({ taskAssignedTo, relatedUserId, user, taskId });\n    });\n  } else {\n    firstUserAssign({ taskAssignedTo, taskUserId, user, taskId });\n  }\n};\n\nconst getMenuItems = (\n  users,\n  task,\n) => {\n  const taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n  const options = users.map(user => ({\n    id: user._id,\n    show: user._id !== taskAssignedTo,\n    label: user.emails[0].address,\n    link: false,\n    onClick: () => {\n      changeAssignedUser({\n        user,\n        task,\n        taskAssignedTo,\n      });\n    },\n  }));\n  return options;\n};\n\nconst TasksAssignedUserDropdown = (props) => {\n  const {\n    data,\n    isLoading,\n    error,\n    task,\n    styles,\n  } = props;\n\n  if (isLoading) {\n    return null;\n  }\n  if (error) {\n    return <div>Error: {error.reason}</div>;\n  }\n\n  return (\n    <DropdownMenu\n      iconType=\"personAdd\"\n      options={getMenuItems(\n        data,\n        task,\n      )}\n      style={styles}\n    />\n  );\n};\n\nexport default TasksAssignedUserDropdown;\n"]},"hash":"989b9c176c464e64ad9cccbf2e8d4f847f8c94fc"}
