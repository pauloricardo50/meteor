{"metadata":{"usedHelpers":["objectWithoutProperties","extends","inherits","possibleConstructorReturn","createClass","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react-autosuggest","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Autosuggest"}]},{"source":"material-ui/Paper","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Paper"}]},{"source":"material-ui/Menu","imported":["MenuItem"],"specifiers":[{"kind":"named","imported":"MenuItem","local":"MenuItem"}]},{"source":"material-ui/styles","imported":["withStyles"],"specifiers":[{"kind":"named","imported":"withStyles","local":"withStyles"}]},{"source":"../TextInput","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TextInput"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/AutoComplete/AutoComplete.jsx","filenameRelative":"imports/core/components/AutoComplete/AutoComplete.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/AutoComplete/AutoComplete.jsx.map","sourceFileName":"imports/core/components/AutoComplete/AutoComplete.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"AutoComplete"},"ignored":false,"code":"\"use strict\";\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar React = void 0,\n    _Component = void 0;\n\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  },\n  Component: function Component(v) {\n    _Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Autosuggest = void 0;\nmodule.watch(require(\"react-autosuggest\"), {\n  default: function _default(v) {\n    Autosuggest = v;\n  }\n}, 2);\nvar Paper = void 0;\nmodule.watch(require(\"material-ui/Paper\"), {\n  default: function _default(v) {\n    Paper = v;\n  }\n}, 3);\n\nvar _MenuItem = void 0;\n\nmodule.watch(require(\"material-ui/Menu\"), {\n  MenuItem: function MenuItem(v) {\n    _MenuItem = v;\n  }\n}, 4);\n\nvar _withStyles = void 0;\n\nmodule.watch(require(\"material-ui/styles\"), {\n  withStyles: function withStyles(v) {\n    _withStyles = v;\n  }\n}, 5);\nvar TextInput = void 0;\nmodule.watch(require(\"../TextInput\"), {\n  default: function _default(v) {\n    TextInput = v;\n  }\n}, 6);\n\nvar renderInput = function renderInput(inputProps) {\n  var classes = inputProps.classes,\n      autoFocus = inputProps.autoFocus,\n      value = inputProps.value,\n      ref = inputProps.ref,\n      _onChange = inputProps.onChange,\n      onBlur = inputProps.onBlur,\n      id = inputProps.id,\n      placeholder = inputProps.placeholder,\n      other = (0, _objectWithoutProperties3.default)(inputProps, [\"classes\", \"autoFocus\", \"value\", \"ref\", \"onChange\", \"onBlur\", \"id\", \"placeholder\"]);\n  return React.createElement(TextInput, (0, _extends3.default)({\n    id: id + \"autocomplete\",\n    autoFocus: autoFocus,\n    className: classes.textField,\n    value: value,\n    inputRef: ref,\n    inputProps: (0, _extends3.default)({}, other),\n    onChange: function onChange(_, __, event) {\n      return _onChange(event);\n    },\n    onBlur: onBlur,\n    classes: {\n      input: classes.input\n    },\n    placeholder: placeholder\n  }, other));\n};\n\nvar renderSuggestion = function renderSuggestion(suggestion, _ref) {\n  var isHighlighted = _ref.isHighlighted;\n  return React.createElement(\n    _MenuItem,\n    {\n      selected: isHighlighted,\n      component: \"div\"\n    },\n    suggestion.label\n  );\n};\n\nvar renderSuggestionsContainer = function renderSuggestionsContainer(options) {\n  var containerProps = options.containerProps,\n      children = options.children;\n  return React.createElement(\n    Paper,\n    (0, _extends3.default)({}, containerProps, {\n      square: true\n    }),\n    children\n  );\n};\n\nvar getSuggestionValue = function getSuggestionValue(suggestion) {\n  return suggestion.value;\n};\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      flexGrow: 1,\n      position: 'relative',\n      marginBottom: 16\n    },\n    suggestionsContainerOpen: {\n      position: 'absolute',\n      marginTop: theme.spacing.unit,\n      marginBottom: theme.spacing.unit * 3,\n      left: 0,\n      right: 0,\n      zIndex: 1\n    },\n    suggestion: {\n      display: 'block'\n    },\n    suggestionsList: {\n      margin: 0,\n      padding: 0,\n      listStyleType: 'none'\n    },\n    textField: {\n      width: '100%'\n    }\n  };\n};\n\nvar AutoComplete = function (_Component2) {\n  (0, _inherits3.default)(AutoComplete, _Component2);\n\n  function AutoComplete(props) {\n    (0, _classCallCheck3.default)(this, AutoComplete);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (AutoComplete.__proto__ || Object.getPrototypeOf(AutoComplete)).call(this, props));\n\n    _this.handleSuggestionsFetchRequested = function (_ref2) {\n      var value = _ref2.value;\n      return _this.setState({\n        suggestions: _this.getSuggestions(value)\n      });\n    };\n\n    _this.handleSuggestionsClearRequested = function () {\n      return _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.getSuggestions = function (value) {\n      var _this$props = _this.props,\n          suggestions = _this$props.suggestions,\n          maxCount = _this$props.maxCount,\n          filter = _this$props.filter;\n      var inputValue = value.trim().toLowerCase();\n      var inputLength = inputValue.length;\n      var count = 0;\n      return inputLength === 0 ? [] : suggestions.filter(function (suggestion) {\n        var keep = count < maxCount && filter(suggestion, inputValue); // suggestion.label.toLowerCase().slice(0, inputLength) === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n    };\n\n    _this.state = {\n      suggestions: []\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(AutoComplete, [{\n    key: \"componentDidUpdate\",\n    // Fix for async data update\n    value: function componentDidUpdate(prevProps) {\n      if (JSON.stringify(prevProps.suggestions) !== JSON.stringify(this.props.suggestions)) {\n        this.handleSuggestionsFetchRequested({\n          value: this.props.value\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          classes = _props.classes,\n          onSelect = _props.onSelect,\n          value = _props.value,\n          onChange = _props.onChange,\n          onBlur = _props.onBlur,\n          label = _props.label,\n          placeholder = _props.placeholder,\n          disabled = _props.disabled,\n          style = _props.style;\n      return React.createElement(Autosuggest, {\n        theme: {\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        },\n        renderInputComponent: renderInput,\n        suggestions: this.state.suggestions,\n        onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n        renderSuggestionsContainer: renderSuggestionsContainer,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion,\n        inputProps: {\n          classes: classes,\n          value: value,\n          onChange: onChange,\n          onBlur: onBlur,\n          label: label,\n          placeholder: placeholder,\n          disabled: disabled,\n          style: style\n        },\n        onSuggestionSelected: function onSuggestionSelected(event, _ref3) {\n          var suggestion = _ref3.suggestion,\n              suggestionValue = _ref3.suggestionValue,\n              suggestionIndex = _ref3.suggestionIndex,\n              sectionIndex = _ref3.sectionIndex,\n              method = _ref3.method;\n          return onSelect(suggestion, suggestionValue);\n        }\n      });\n    }\n  }]);\n  return AutoComplete;\n}(_Component);\n\nAutoComplete.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  suggestions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  label: PropTypes.node,\n  filter: PropTypes.func,\n  maxCount: PropTypes.number\n};\nAutoComplete.defaultProps = {\n  filter: function filter() {\n    return true;\n  },\n  label: undefined,\n  maxCount: 5\n};\nmodule.exportDefault(_withStyles(styles)(AutoComplete));","map":{"version":3,"sources":["imports/core/components/AutoComplete/AutoComplete.jsx"],"names":["React","Component","module","watch","require","default","v","PropTypes","Autosuggest","Paper","MenuItem","withStyles","TextInput","renderInput","inputProps","classes","autoFocus","value","ref","onChange","onBlur","id","placeholder","other","textField","_","__","event","input","renderSuggestion","suggestion","isHighlighted","label","renderSuggestionsContainer","options","containerProps","children","getSuggestionValue","styles","container","flexGrow","position","marginBottom","suggestionsContainerOpen","marginTop","theme","spacing","unit","left","right","zIndex","display","suggestionsList","margin","padding","listStyleType","width","AutoComplete","props","handleSuggestionsFetchRequested","setState","suggestions","getSuggestions","handleSuggestionsClearRequested","maxCount","filter","inputValue","trim","toLowerCase","inputLength","length","count","keep","state","prevProps","JSON","stringify","onSelect","disabled","style","suggestionValue","suggestionIndex","sectionIndex","method","propTypes","func","isRequired","string","arrayOf","object","node","number","defaultProps","undefined","exportDefault"],"mappings":"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","file":"imports/core/components/AutoComplete/AutoComplete.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Autosuggest from 'react-autosuggest';\nimport Paper from 'material-ui/Paper';\nimport { MenuItem } from 'material-ui/Menu';\nimport { withStyles } from 'material-ui/styles';\n\nimport TextInput from 'core/components/TextInput';\n\nconst renderInput = (inputProps) => {\n  const {\n    classes,\n    autoFocus,\n    value,\n    ref,\n    onChange,\n    onBlur,\n    id,\n    placeholder,\n    ...other\n  } = inputProps;\n\n  return (\n    <TextInput\n      id={`${id}autocomplete`}\n      autoFocus={autoFocus}\n      className={classes.textField}\n      value={value}\n      inputRef={ref}\n      inputProps={{ ...other }}\n      onChange={(_, __, event) => onChange(event)}\n      onBlur={onBlur}\n      classes={{ input: classes.input }}\n      placeholder={placeholder}\n      {...other}\n    />\n  );\n};\n\nconst renderSuggestion = (suggestion, { isHighlighted }) => (\n  <MenuItem selected={isHighlighted} component=\"div\">\n    {suggestion.label}\n  </MenuItem>\n);\n\nconst renderSuggestionsContainer = (options) => {\n  const { containerProps, children } = options;\n\n  return (\n    <Paper {...containerProps} square>\n      {children}\n    </Paper>\n  );\n};\n\nconst getSuggestionValue = suggestion => suggestion.value;\n\nconst styles = theme => ({\n  container: {\n    flexGrow: 1,\n    position: 'relative',\n    marginBottom: 16,\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit * 3,\n    left: 0,\n    right: 0,\n    zIndex: 1,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  textField: {\n    width: '100%',\n  },\n});\n\nclass AutoComplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { suggestions: [] };\n  }\n\n  handleSuggestionsFetchRequested = ({ value }) =>\n    this.setState({ suggestions: this.getSuggestions(value) });\n\n  handleSuggestionsClearRequested = () => this.setState({ suggestions: [] });\n\n  getSuggestions = (value) => {\n    const { suggestions, maxCount, filter } = this.props;\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0\n      ? []\n      : suggestions.filter((suggestion) => {\n        const keep = count < maxCount && filter(suggestion, inputValue);\n        // suggestion.label.toLowerCase().slice(0, inputLength) === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n  };\n\n  // Fix for async data update\n  componentDidUpdate(prevProps) {\n    if (\n      JSON.stringify(prevProps.suggestions) !==\n      JSON.stringify(this.props.suggestions)\n    ) {\n      this.handleSuggestionsFetchRequested({ value: this.props.value });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      onSelect,\n      value,\n      onChange,\n      onBlur,\n      label,\n      placeholder,\n      disabled,\n      style,\n    } = this.props;\n\n    return (\n      <Autosuggest\n        theme={{\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion,\n        }}\n        renderInputComponent={renderInput}\n        suggestions={this.state.suggestions}\n        onSuggestionsFetchRequested={this.handleSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\n        renderSuggestionsContainer={renderSuggestionsContainer}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={{\n          classes,\n          value,\n          onChange,\n          onBlur,\n          label,\n          placeholder,\n          disabled,\n          style,\n        }}\n        onSuggestionSelected={(\n          event,\n          { suggestion, suggestionValue, suggestionIndex, sectionIndex, method },\n        ) => onSelect(suggestion, suggestionValue)}\n      />\n    );\n  }\n}\n\nAutoComplete.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  suggestions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  label: PropTypes.node,\n  filter: PropTypes.func,\n  maxCount: PropTypes.number,\n};\n\nAutoComplete.defaultProps = {\n  filter: () => true,\n  label: undefined,\n  maxCount: 5,\n};\n\nexport default withStyles(styles)(AutoComplete);\n"]},"hash":"41ba57a54d97e3b514cb7c9e68a3200ef65688c7"}
