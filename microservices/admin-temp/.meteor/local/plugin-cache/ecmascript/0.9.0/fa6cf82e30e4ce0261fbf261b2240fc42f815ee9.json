{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","defineProperty","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"../../api/cleanMethods","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"cleanMethod"}]},{"source":"../Translation","imported":["T"],"specifiers":[{"kind":"named","imported":"T","local":"T"}]},{"source":"../RadioButtons","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"RadioButtons"}]},{"source":"./FormValidator","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"FormValidator"}]},{"source":"./ValidIcon","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ValidIcon"}]}],"exports":{"exported":["RadioInput"],"specifiers":[{"kind":"local","local":"RadioInput","exported":"default"}]}}},"options":{"filename":"imports/core/components/AutoForm/RadioInput.jsx","filenameRelative":"imports/core/components/AutoForm/RadioInput.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/AutoForm/RadioInput.jsx.map","sourceFileName":"imports/core/components/AutoForm/RadioInput.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"RadioInput"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  \"default\": function () {\n    function _default() {\n      return RadioInput;\n    }\n\n    return _default;\n  }()\n});\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 0);\n\nvar React = void 0,\n    _Component = void 0;\n\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }(),\n  Component: function () {\n    function Component(v) {\n      _Component = v;\n    }\n\n    return Component;\n  }()\n}, 1);\nvar cleanMethod = void 0;\nmodule.watch(require(\"../../api/cleanMethods\"), {\n  \"default\": function () {\n    function _default(v) {\n      cleanMethod = v;\n    }\n\n    return _default;\n  }()\n}, 2);\n\nvar _T = void 0;\n\nmodule.watch(require(\"../Translation\"), {\n  T: function () {\n    function T(v) {\n      _T = v;\n    }\n\n    return T;\n  }()\n}, 3);\nvar RadioButtons = void 0;\nmodule.watch(require(\"../RadioButtons\"), {\n  \"default\": function () {\n    function _default(v) {\n      RadioButtons = v;\n    }\n\n    return _default;\n  }()\n}, 4);\nvar FormValidator = void 0;\nmodule.watch(require(\"./FormValidator\"), {\n  \"default\": function () {\n    function _default(v) {\n      FormValidator = v;\n    }\n\n    return _default;\n  }()\n}, 5);\nvar ValidIcon = void 0;\nmodule.watch(require(\"./ValidIcon\"), {\n  \"default\": function () {\n    function _default(v) {\n      ValidIcon = v;\n    }\n\n    return _default;\n  }()\n}, 6);\nvar styles = {\n  validIcon: {\n    position: 'absolute',\n    top: 16,\n    right: -25\n  }\n};\n\nvar RadioInput = function (_Component2) {\n  (0, _inherits3.default)(RadioInput, _Component2);\n\n  function RadioInput(props) {\n    (0, _classCallCheck3.default)(this, RadioInput);\n\n    // Set initial state to be the 1st option\n    var _this = (0, _possibleConstructorReturn3.default)(this, (RadioInput.__proto__ || Object.getPrototypeOf(RadioInput)).call(this, props));\n\n    _this.setValue = function (value) {\n      return _this.setState({\n        value: value\n      }, _this.saveValue(value));\n    };\n\n    _this.getOptionLabel = function (optionId, intlValues) {\n      // If the options are true and false, render \"yes\" and \"no\" as labels\n      if (optionId === true) {\n        return React.createElement(_T, {\n          id: \"general.yes\",\n          values: intlValues\n        });\n      } else if (optionId === false) {\n        return React.createElement(_T, {\n          id: \"general.no\",\n          values: intlValues\n        });\n      }\n\n      return React.createElement(_T, {\n        id: \"Forms.\" + (_this.props.inputProps.intlId || _this.props.inputProps.id) + \".\" + optionId,\n        values: intlValues\n      });\n    };\n\n    _this.saveValue = function (value) {\n      _this.setState({\n        saving: true\n      }); // For radiobuttons, check if I actually want to pass a boolean instead of a String\n      // event.target.value is always a String\n\n\n      var safeValue = value;\n\n      if (value === 'true') {\n        safeValue = true;\n      } else if (value === 'false') {\n        safeValue = false;\n      } // Save data to DB\n\n\n      var object = (0, _defineProperty3.default)({}, _this.props.inputProps.id, safeValue);\n      cleanMethod(_this.props.updateFunc, {\n        object: object,\n        id: _this.props.docId\n      }).then(function () {\n        return _this.setState({\n          saving: false\n        });\n      }).catch(function () {\n        return _this.setState({\n          saving: false\n        });\n      });\n    };\n\n    if (_this.props.inputProps.currentValue !== undefined) {\n      _this.state = {\n        value: _this.props.inputProps.currentValue\n      };\n    } else {\n      // this.state = { value: this.props.options[0].id };\n      _this.state = {\n        value: undefined,\n        saving: false\n      };\n    }\n\n    return _this;\n  } // Change radio button group state to appropriate value\n\n\n  (0, _createClass3.default)(RadioInput, [{\n    key: \"render\",\n    value: function () {\n      function render() {\n        var _this2 = this;\n\n        var _props = this.props,\n            _props$inputProps = _props.inputProps,\n            id = _props$inputProps.id,\n            style = _props$inputProps.style,\n            label = _props$inputProps.label,\n            onConditionalChange = _props$inputProps.onConditionalChange,\n            options = _props$inputProps.options,\n            disabled = _props$inputProps.disabled,\n            required = _props$inputProps.required,\n            admin = _props.admin;\n        var _state = this.state,\n            value = _state.value,\n            saving = _state.saving;\n        return (// relative position for the FormValidator\n          React.createElement(\n            \"div\",\n            {\n              style: (0, _extends3.default)({}, style, {\n                marginBottom: 16,\n                position: 'relative'\n              })\n            },\n            React.createElement(RadioButtons, {\n              label: label,\n              id: id,\n              options: options.map(function (o) {\n                return {\n                  id: o.id,\n                  label: _this2.getOptionLabel(o.id, o.intlValues)\n                };\n              }),\n              onChange: function () {\n                function onChange(_, newValue) {\n                  if (typeof onConditionalChange === 'function') {\n                    onConditionalChange(newValue);\n                  }\n\n                  _this2.setValue(newValue);\n                }\n\n                return onChange;\n              }(),\n              value: value,\n              disabled: disabled\n            }),\n            React.createElement(ValidIcon, {\n              saving: saving,\n              value: value,\n              required: required,\n              style: styles.validIcon,\n              hide: admin\n            }),\n            React.createElement(FormValidator, this.props)\n          )\n        );\n      }\n\n      return render;\n    }()\n  }]);\n  return RadioInput;\n}(_Component);\n\nRadioInput.propTypes = {\n  onConditionalChange: PropTypes.func,\n  currentValue: PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number]),\n  docId: PropTypes.string.isRequired,\n  updateFunc: PropTypes.string.isRequired,\n  inputProps: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n    options: PropTypes.arrayOf(PropTypes.object).isRequired,\n    disabled: PropTypes.bool\n  }).isRequired\n};\nRadioInput.defaultProps = {\n  currentValue: undefined,\n  onConditionalChange: function () {\n    function onConditionalChange() {\n      return null;\n    }\n\n    return onConditionalChange;\n  }()\n};","map":{"version":3,"sources":["imports/core/components/AutoForm/RadioInput.jsx"],"names":["module","export","RadioInput","PropTypes","watch","require","v","React","Component","cleanMethod","T","RadioButtons","FormValidator","ValidIcon","styles","validIcon","position","top","right","props","setValue","setState","value","saveValue","getOptionLabel","optionId","intlValues","inputProps","intlId","id","saving","safeValue","object","updateFunc","docId","then","catch","currentValue","undefined","state","style","label","onConditionalChange","options","disabled","required","admin","marginBottom","map","o","_","newValue","propTypes","func","oneOfType","bool","string","number","isRequired","shape","arrayOf","defaultProps"],"mappings":"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","file":"imports/core/components/AutoForm/RadioInput.jsx.map","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport cleanMethod from 'core/api/cleanMethods';\n\nimport { T } from 'core/components/Translation';\nimport RadioButtons from 'core/components/RadioButtons';\nimport FormValidator from './FormValidator';\nimport ValidIcon from './ValidIcon';\n\nconst styles = {\n  validIcon: {\n    position: 'absolute',\n    top: 16,\n    right: -25,\n  },\n};\n\nexport default class RadioInput extends Component {\n  constructor(props) {\n    super(props);\n    // Set initial state to be the 1st option\n    if (this.props.inputProps.currentValue !== undefined) {\n      this.state = { value: this.props.inputProps.currentValue };\n    } else {\n      // this.state = { value: this.props.options[0].id };\n      this.state = { value: undefined, saving: false };\n    }\n  }\n\n  // Change radio button group state to appropriate value\n  setValue = value => this.setState({ value }, this.saveValue(value));\n\n  getOptionLabel = (optionId, intlValues) => {\n    // If the options are true and false, render \"yes\" and \"no\" as labels\n    if (optionId === true) {\n      return <T id=\"general.yes\" values={intlValues} />;\n    } else if (optionId === false) {\n      return <T id=\"general.no\" values={intlValues} />;\n    }\n    return (\n      <T\n        id={`Forms.${this.props.inputProps.intlId ||\n          this.props.inputProps.id}.${optionId}`}\n        values={intlValues}\n      />\n    );\n  };\n\n  saveValue = (value) => {\n    this.setState({ saving: true });\n    // For radiobuttons, check if I actually want to pass a boolean instead of a String\n    // event.target.value is always a String\n    let safeValue = value;\n    if (value === 'true') {\n      safeValue = true;\n    } else if (value === 'false') {\n      safeValue = false;\n    }\n\n    // Save data to DB\n    const object = { [this.props.inputProps.id]: safeValue };\n    cleanMethod(this.props.updateFunc, { object, id: this.props.docId })\n      .then(() => this.setState({ saving: false }))\n      .catch(() => this.setState({ saving: false }));\n  };\n\n  render() {\n    const {\n      inputProps: {\n        id,\n        style,\n        label,\n        onConditionalChange,\n        options,\n        disabled,\n        required,\n      },\n      admin,\n    } = this.props;\n    const { value, saving } = this.state;\n\n    return (\n      // relative position for the FormValidator\n      <div style={{ ...style, marginBottom: 16, position: 'relative' }}>\n        <RadioButtons\n          label={label}\n          id={id}\n          options={options.map(o => ({\n            id: o.id,\n            label: this.getOptionLabel(o.id, o.intlValues),\n          }))}\n          onChange={(_, newValue) => {\n            if (typeof onConditionalChange === 'function') {\n              onConditionalChange(newValue);\n            }\n            this.setValue(newValue);\n          }}\n          value={value}\n          disabled={disabled}\n        />\n        <ValidIcon\n          saving={saving}\n          value={value}\n          required={required}\n          style={styles.validIcon}\n          hide={admin}\n        />\n        <FormValidator {...this.props} />\n      </div>\n    );\n  }\n}\n\nRadioInput.propTypes = {\n  onConditionalChange: PropTypes.func,\n  currentValue: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  docId: PropTypes.string.isRequired,\n  updateFunc: PropTypes.string.isRequired,\n  inputProps: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n    options: PropTypes.arrayOf(PropTypes.object).isRequired,\n    disabled: PropTypes.bool,\n  }).isRequired,\n};\n\nRadioInput.defaultProps = {\n  currentValue: undefined,\n  onConditionalChange: () => null,\n};\n"]},"hash":"fa6cf82e30e4ce0261fbf261b2240fc42f815ee9"}
