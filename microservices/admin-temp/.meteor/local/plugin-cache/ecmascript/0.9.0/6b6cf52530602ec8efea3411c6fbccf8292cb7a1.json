{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"simpl-schema","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SimpleSchema"}]},{"source":"../files/files","imported":["getFileSchema"],"specifiers":[{"kind":"named","imported":"getFileSchema","local":"getFileSchema"}]},{"source":"./propertyConstants","imported":["PROPERTY_STATUS","USAGE_TYPE","PROPERTY_STYLE","VOLUME_NORM"],"specifiers":[{"kind":"named","imported":"PROPERTY_STATUS","local":"PROPERTY_STATUS"},{"kind":"named","imported":"USAGE_TYPE","local":"USAGE_TYPE"},{"kind":"named","imported":"PROPERTY_STYLE","local":"PROPERTY_STYLE"},{"kind":"named","imported":"VOLUME_NORM","local":"VOLUME_NORM"}]}],"exports":{"exported":["PropertySchema"],"specifiers":[{"kind":"local","local":"PropertySchema","exported":"PropertySchema"}]}}},"options":{"filename":"imports/core/api/properties/properties.js","filenameRelative":"imports/core/api/properties/properties.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/properties/properties.js.map","sourceFileName":"imports/core/api/properties/properties.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"properties"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.export({\n  PropertySchema: function () {\n    function PropertySchema() {\n      return _PropertySchema;\n    }\n\n    return PropertySchema;\n  }()\n});\n\nvar _Mongo = void 0;\n\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function () {\n    function Mongo(v) {\n      _Mongo = v;\n    }\n\n    return Mongo;\n  }()\n}, 0);\nvar SimpleSchema = void 0;\nmodule.watch(require(\"simpl-schema\"), {\n  \"default\": function () {\n    function _default(v) {\n      SimpleSchema = v;\n    }\n\n    return _default;\n  }()\n}, 1);\n\nvar _getFileSchema = void 0;\n\nmodule.watch(require(\"../files/files\"), {\n  getFileSchema: function () {\n    function getFileSchema(v) {\n      _getFileSchema = v;\n    }\n\n    return getFileSchema;\n  }()\n}, 2);\n\nvar _PROPERTY_STATUS = void 0,\n    _USAGE_TYPE = void 0,\n    _PROPERTY_STYLE = void 0,\n    _VOLUME_NORM = void 0;\n\nmodule.watch(require(\"./propertyConstants\"), {\n  PROPERTY_STATUS: function () {\n    function PROPERTY_STATUS(v) {\n      _PROPERTY_STATUS = v;\n    }\n\n    return PROPERTY_STATUS;\n  }(),\n  USAGE_TYPE: function () {\n    function USAGE_TYPE(v) {\n      _USAGE_TYPE = v;\n    }\n\n    return USAGE_TYPE;\n  }(),\n  PROPERTY_STYLE: function () {\n    function PROPERTY_STYLE(v) {\n      _PROPERTY_STYLE = v;\n    }\n\n    return PROPERTY_STYLE;\n  }(),\n  VOLUME_NORM: function () {\n    function VOLUME_NORM(v) {\n      _VOLUME_NORM = v;\n    }\n\n    return VOLUME_NORM;\n  }()\n}, 3);\nexports.PropertySchema = _PropertySchema;\nvar Properties = new _Mongo.Collection('properties'); // Prevent all client side modifications of mongoDB\n\nProperties.deny({\n  insert: function () {\n    function insert() {\n      return true;\n    }\n\n    return insert;\n  }(),\n  update: function () {\n    function update() {\n      return true;\n    }\n\n    return update;\n  }(),\n  remove: function () {\n    function remove() {\n      return true;\n    }\n\n    return remove;\n  }()\n});\nProperties.allow({\n  insert: function () {\n    function insert() {\n      return false;\n    }\n\n    return insert;\n  }(),\n  update: function () {\n    function update() {\n      return false;\n    }\n\n    return update;\n  }(),\n  remove: function () {\n    function remove() {\n      return false;\n    }\n\n    return remove;\n  }()\n});\nvar PropertyFilesSchema = new SimpleSchema(_getFileSchema('property'));\n\nvar _PropertySchema = new SimpleSchema({\n  userId: {\n    type: String,\n    index: true,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      function autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        }\n      }\n\n      return autoValue;\n    }()\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function () {\n      function autoValue() {\n        if (this.isInsert || this.isUpdate) {\n          return new Date();\n        }\n      }\n\n      return autoValue;\n    }()\n  },\n  status: {\n    type: String,\n    defaultValue: _PROPERTY_STATUS.FOR_SALE,\n    allowedValues: Object.values(_PROPERTY_STATUS)\n  },\n  value: {\n    // Cost of the property\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true\n  },\n  propertyWork: {\n    // Additional work on property\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true\n  },\n  usageType: {\n    type: String,\n    defaultValue: _USAGE_TYPE.PRIMARY,\n    allowedValues: Object.values(_USAGE_TYPE)\n  },\n  investmentRent: {\n    // Rent of property if investment\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100000000\n  },\n  style: {\n    type: String,\n    optional: true,\n    defaultValue: _PROPERTY_STYLE.FLAT,\n    allowedValues: Object.values(_PROPERTY_STYLE)\n  },\n  address: {\n    // For condensed, google places addresses\n    type: String,\n    optional: true\n  },\n  address1: {\n    type: String,\n    optional: true\n  },\n  address2: {\n    type: String,\n    optional: true\n  },\n  zipCode: {\n    type: Number,\n    optional: true,\n    min: 1000,\n    max: 9999\n  },\n  city: {\n    type: String,\n    optional: true\n  },\n  constructionYear: {\n    type: Number,\n    min: 0,\n    max: 2030,\n    optional: true\n  },\n  renovationYear: {\n    type: Number,\n    min: 0,\n    max: 2030,\n    optional: true\n  },\n  insideArea: {\n    type: Number,\n    optional: true,\n    min: 0\n  },\n  landArea: {\n    type: Number,\n    optional: true,\n    min: 0\n  },\n  balconyArea: {\n    type: Number,\n    optional: true,\n    min: 0\n  },\n  terraceArea: {\n    type: Number,\n    optional: true,\n    min: 0\n  },\n  roomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  bathroomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  toiletCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  volume: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 5000\n  },\n  volumeNorm: {\n    type: String,\n    defaultValue: _VOLUME_NORM.SIA,\n    allowedValues: Object.keys(_VOLUME_NORM)\n  },\n  parking: {\n    type: Object,\n    defaultValue: {}\n  },\n  'parking.box': {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  'parking.inside': {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  'parking.outside': {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  minergie: {\n    type: Boolean,\n    defaultValue: false\n  },\n  isCoproperty: {\n    type: Boolean,\n    defaultValue: false\n  },\n  isNew: {\n    type: Boolean,\n    defaultValue: false\n  },\n  copropertyPercentage: {\n    type: Number,\n    min: 0,\n    max: 1000,\n    optional: true\n  },\n  cityPlacementQuality: {\n    type: Number,\n    min: 0,\n    max: 5,\n    optional: true\n  },\n  buildingPlacementQuality: {\n    type: Number,\n    min: 0,\n    max: 5,\n    optional: true\n  },\n  buildingQuality: {\n    type: Number,\n    min: 0,\n    max: 5,\n    optional: true\n  },\n  flatQuality: {\n    type: Number,\n    min: 0,\n    max: 5,\n    optional: true\n  },\n  materialsQuality: {\n    type: Number,\n    min: 0,\n    max: 5,\n    optional: true\n  },\n  otherNotes: {\n    type: String,\n    optional: true\n  },\n  name: {\n    type: String,\n    optional: true\n  },\n  latitude: {\n    type: Number,\n    optional: true,\n    min: -90,\n    max: 90\n  },\n  longitude: {\n    type: Number,\n    optional: true,\n    min: -180,\n    max: 180\n  },\n  nearestBusStation: {\n    type: Object,\n    blackbox: true,\n    optional: true\n  },\n  nearestTrainStation: {\n    type: Object,\n    blackbox: true,\n    optional: true\n  },\n  customFields: {\n    // Allows storing custom fields that aren't allowed by the default schema\n    type: Object,\n    blackbox: true,\n    defaultValue: {}\n  },\n  adminValidation: {\n    type: Object,\n    defaultValue: {},\n    blackbox: true\n  },\n  files: {\n    type: PropertyFilesSchema,\n    defaultValue: {}\n  }\n}); // Attach schema\n\n\nProperties.attachSchema(_PropertySchema);\nmodule.exportDefault(Properties);","map":{"version":3,"sources":["imports/core/api/properties/properties.js"],"names":["module","export","PropertySchema","Mongo","watch","require","v","SimpleSchema","getFileSchema","PROPERTY_STATUS","USAGE_TYPE","PROPERTY_STYLE","VOLUME_NORM","Properties","Collection","deny","insert","update","remove","allow","PropertyFilesSchema","userId","type","String","index","optional","createdAt","Date","autoValue","isInsert","updatedAt","isUpdate","status","defaultValue","FOR_SALE","allowedValues","Object","values","value","Number","min","max","propertyWork","usageType","PRIMARY","investmentRent","style","FLAT","address","address1","address2","zipCode","city","constructionYear","renovationYear","insideArea","landArea","balconyArea","terraceArea","roomCount","bathroomCount","toiletCount","volume","volumeNorm","SIA","keys","parking","minergie","Boolean","isCoproperty","isNew","copropertyPercentage","cityPlacementQuality","buildingPlacementQuality","buildingQuality","flatQuality","materialsQuality","otherNotes","name","latitude","longitude","nearestBusStation","blackbox","nearestTrainStation","customFields","adminValidation","files","attachSchema","exportDefault"],"mappings":"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","file":"imports/core/api/properties/properties.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\nimport { getFileSchema } from '../files/files';\nimport {\n  PROPERTY_STATUS,\n  USAGE_TYPE,\n  PROPERTY_STYLE,\n  VOLUME_NORM,\n} from './propertyConstants';\n\nconst Properties = new Mongo.Collection('properties');\n\n// Prevent all client side modifications of mongoDB\nProperties.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\nProperties.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nconst PropertyFilesSchema = new SimpleSchema(getFileSchema('property'));\n\nexport const PropertySchema = new SimpleSchema({\n  userId: {\n    type: String,\n    index: true,\n    optional: true,\n  },\n  createdAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      }\n    },\n  },\n  updatedAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert || this.isUpdate) {\n        return new Date();\n      }\n    },\n  },\n  status: {\n    type: String,\n    defaultValue: PROPERTY_STATUS.FOR_SALE,\n    allowedValues: Object.values(PROPERTY_STATUS),\n  },\n  value: {\n    // Cost of the property\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true,\n  },\n  propertyWork: {\n    // Additional work on property\n    type: Number,\n    min: 0,\n    max: 100000000,\n    optional: true,\n  },\n  usageType: {\n    type: String,\n    defaultValue: USAGE_TYPE.PRIMARY,\n    allowedValues: Object.values(USAGE_TYPE),\n  },\n  investmentRent: {\n    // Rent of property if investment\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100000000,\n  },\n  style: {\n    type: String,\n    optional: true,\n    defaultValue: PROPERTY_STYLE.FLAT,\n    allowedValues: Object.values(PROPERTY_STYLE),\n  },\n  address: {\n    // For condensed, google places addresses\n    type: String,\n    optional: true,\n  },\n  address1: {\n    type: String,\n    optional: true,\n  },\n  address2: {\n    type: String,\n    optional: true,\n  },\n  zipCode: {\n    type: Number,\n    optional: true,\n    min: 1000,\n    max: 9999,\n  },\n  city: {\n    type: String,\n    optional: true,\n  },\n  constructionYear: {\n    type: Number,\n    min: 0,\n    max: 2030,\n    optional: true,\n  },\n  renovationYear: {\n    type: Number,\n    min: 0,\n    max: 2030,\n    optional: true,\n  },\n  insideArea: {\n    type: Number,\n    optional: true,\n    min: 0,\n  },\n  landArea: {\n    type: Number,\n    optional: true,\n    min: 0,\n  },\n  balconyArea: {\n    type: Number,\n    optional: true,\n    min: 0,\n  },\n  terraceArea: {\n    type: Number,\n    optional: true,\n    min: 0,\n  },\n  roomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  bathroomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  toiletCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  volume: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 5000,\n  },\n  volumeNorm: {\n    type: String,\n    defaultValue: VOLUME_NORM.SIA,\n    allowedValues: Object.keys(VOLUME_NORM),\n  },\n  parking: {\n    type: Object,\n    defaultValue: {},\n  },\n  'parking.box': {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  'parking.inside': {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  'parking.outside': {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  minergie: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  isCoproperty: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  isNew: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  copropertyPercentage: {\n    type: Number,\n    min: 0,\n    max: 1000,\n    optional: true,\n  },\n  cityPlacementQuality: {\n    type: Number,\n    min: 0,\n    max: 5,\n    optional: true,\n  },\n  buildingPlacementQuality: {\n    type: Number,\n    min: 0,\n    max: 5,\n    optional: true,\n  },\n  buildingQuality: {\n    type: Number,\n    min: 0,\n    max: 5,\n    optional: true,\n  },\n  flatQuality: {\n    type: Number,\n    min: 0,\n    max: 5,\n    optional: true,\n  },\n  materialsQuality: {\n    type: Number,\n    min: 0,\n    max: 5,\n    optional: true,\n  },\n  otherNotes: {\n    type: String,\n    optional: true,\n  },\n  name: {\n    type: String,\n    optional: true,\n  },\n  latitude: {\n    type: Number,\n    optional: true,\n    min: -90,\n    max: 90,\n  },\n  longitude: {\n    type: Number,\n    optional: true,\n    min: -180,\n    max: 180,\n  },\n  nearestBusStation: {\n    type: Object,\n    blackbox: true,\n    optional: true,\n  },\n  nearestTrainStation: {\n    type: Object,\n    blackbox: true,\n    optional: true,\n  },\n  customFields: {\n    // Allows storing custom fields that aren't allowed by the default schema\n    type: Object,\n    blackbox: true,\n    defaultValue: {},\n  },\n  adminValidation: { type: Object, defaultValue: {}, blackbox: true },\n  files: {\n    type: PropertyFilesSchema,\n    defaultValue: {},\n  },\n});\n\n// Attach schema\nProperties.attachSchema(PropertySchema);\nexport default Properties;\n"]},"hash":"6b6cf52530602ec8efea3411c6fbccf8292cb7a1"}
