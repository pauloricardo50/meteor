{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"./Translation","imported":["IntlNumber"],"specifiers":[{"kind":"named","imported":"IntlNumber","local":"IntlNumber"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/MetricsTriple.jsx","filenameRelative":"imports/core/components/MetricsTriple.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/MetricsTriple.jsx.map","sourceFileName":"imports/core/components/MetricsTriple.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"MetricsTriple"},"ignored":false,"code":"\"use strict\";\n\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 1);\n\nvar _IntlNumber = void 0;\n\nmodule.watch(require(\"./Translation\"), {\n  IntlNumber: function () {\n    function IntlNumber(v) {\n      _IntlNumber = v;\n    }\n\n    return IntlNumber;\n  }()\n}, 2);\n\nvar MetricsTriple = function () {\n  function MetricsTriple(props) {\n    return React.createElement(\n      \"div\",\n      {\n        className: \"metrics\"\n      },\n      props.metrics.map(function (metric) {\n        return !metric.hide && React.createElement(\n          \"div\",\n          {\n            className: \"metric\",\n            key: metric.name\n          },\n          React.createElement(\n            \"div\",\n            null,\n            React.createElement(\n              \"h4\",\n              {\n                className: \"secondary\"\n              },\n              metric.name,\n              ' ',\n              metric.isValid !== undefined && (metric.isValid ? React.createElement(\"span\", {\n                className: \"fa fa-check success\"\n              }) : React.createElement(\"span\", {\n                className: \"fa fa-times error\"\n              }))\n            ),\n            !metric.isValid && React.createElement(\n              \"p\",\n              {\n                className: \"error\"\n              },\n              metric.error\n            ),\n            React.createElement(\n              \"h1\",\n              null,\n              props.percent ? React.createElement(_IntlNumber, {\n                value: metric.value,\n                format: \"percentage\"\n              }) : metric.value\n            )\n          )\n        );\n      })\n    );\n  }\n\n  return MetricsTriple;\n}();\n\nMetricsTriple.defaultProps = {\n  percent: true\n};\nMetricsTriple.propTypes = {\n  metrics: PropTypes.arrayOf(PropTypes.any).isRequired,\n  percent: PropTypes.bool\n};\nmodule.exportDefault(MetricsTriple);","map":{"version":3,"sources":["imports/core/components/MetricsTriple.jsx"],"names":["PropTypes","module","watch","require","v","React","IntlNumber","MetricsTriple","props","metrics","map","metric","hide","name","isValid","undefined","error","percent","value","defaultProps","propTypes","arrayOf","any","isRequired","bool","exportDefault"],"mappings":";;AAAA,IAAIA,kBAAJ;AAAcC,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACJ,kBAAUI,CAAV;AAAY;;AAAxB;AAAA;AAAA,CAAnC,EAA6D,CAA7D;AAAgE,IAAIC,cAAJ;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACC,cAAMD,CAAN;AAAQ;;AAApB;AAAA;AAAA,CAA9B,EAAoD,CAApD;;AAAuD,IAAIE,oBAAJ;;AAAeL,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACG,YAAD;AAAA,wBAAYF,CAAZ,EAAc;AAACE,oBAAWF,CAAX;AAAa;;AAA5B;AAAA;AAAA,CAAtC,EAAoE,CAApE;;AAK9J,IAAMG;AAAgB,WAAhBA,aAAgB;AAAA,WACpB;AAAA;AAAA;AAAK,mBAAU;AAAf;AACGC,YAAMC,OAAN,CAAcC,GAAd,CAAkB;AAAA,eACjB,CAACC,OAAOC,IAAR,IACE;AAAA;AAAA;AAAK,uBAAU,QAAf;AAAwB,iBAAKD,OAAOE;AAApC;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAI,2BAAU;AAAd;AACGF,qBAAOE,IADV;AACgB,iBADhB;AAEGF,qBAAOG,OAAP,KAAmBC,SAAnB,KACIJ,OAAOG,OAAP,GACC;AAAM,2BAAU;AAAhB,gBADD,GAGC;AAAM,2BAAU;AAAhB,gBAJL;AAFH,aADF;AAWG,aAACH,OAAOG,OAAR,IAAmB;AAAA;AAAA;AAAG,2BAAU;AAAb;AAAsBH,qBAAOK;AAA7B,aAXtB;AAaE;AAAA;AAAA;AACGR,oBAAMS,OAAN,GACC,oBAAC,WAAD;AAAY,uBAAON,OAAOO,KAA1B;AAAiC,wBAAO;AAAxC,gBADD,GAGCP,OAAOO;AAJX;AAbF;AADF,SAFe;AAAA,OAAlB;AADH,KADoB;AAAA;;AAAhB;AAAA,GAAN;;AA+BAX,cAAcY,YAAd,GAA6B;AAC3BF,WAAS;AADkB,CAA7B;AAIAV,cAAca,SAAd,GAA0B;AACxBX,WAAST,UAAUqB,OAAV,CAAkBrB,UAAUsB,GAA5B,EAAiCC,UADlB;AAExBN,WAASjB,UAAUwB;AAFK,CAA1B;AAxCAvB,OAAOwB,aAAP,CA6CelB,aA7Cf","file":"imports/core/components/MetricsTriple.jsx.map","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { IntlNumber } from 'core/components/Translation';\n\nconst MetricsTriple = props => (\n  <div className=\"metrics\">\n    {props.metrics.map(metric =>\n      !metric.hide && (\n        <div className=\"metric\" key={metric.name}>\n          <div>\n            <h4 className=\"secondary\">\n              {metric.name}{' '}\n              {metric.isValid !== undefined &&\n                  (metric.isValid ? (\n                    <span className=\"fa fa-check success\" />\n                  ) : (\n                    <span className=\"fa fa-times error\" />\n                  ))}\n            </h4>\n\n            {!metric.isValid && <p className=\"error\">{metric.error}</p>}\n\n            <h1>\n              {props.percent ? (\n                <IntlNumber value={metric.value} format=\"percentage\" />\n              ) : (\n                metric.value\n              )}\n            </h1>\n          </div>\n        </div>\n      ))}\n  </div>\n);\n\nMetricsTriple.defaultProps = {\n  percent: true,\n};\n\nMetricsTriple.propTypes = {\n  metrics: PropTypes.arrayOf(PropTypes.any).isRequired,\n  percent: PropTypes.bool,\n};\n\nexport default MetricsTriple;\n"]},"hash":"c15223281b48eb884c9c51a89d0440d2bae0a814"}
