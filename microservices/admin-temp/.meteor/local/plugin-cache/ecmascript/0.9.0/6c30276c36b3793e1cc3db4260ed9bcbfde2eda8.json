{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../arrays/steps","imported":["personalInfoPercent","filesPercent"],"specifiers":[{"kind":"named","imported":"personalInfoPercent","local":"personalInfoPercent"},{"kind":"named","imported":"filesPercent","local":"filesPercent"}]},{"source":"../api/files/files","imported":["borrowerFiles"],"specifiers":[{"kind":"named","imported":"borrowerFiles","local":"borrowerFiles"}]},{"source":"./general","imported":["arrayify"],"specifiers":[{"kind":"named","imported":"arrayify","local":"arrayify"}]}],"exports":{"exported":["getFortune","getInsuranceFortune","getBorrowerCompletion","getBonusIncome","getArrayValues","getOtherIncome","getExpenses","getBorrowerIncome","getTotalFortune","getRealEstateFortune","getRealEstateValue","getRealEstateDebt","getBorrowerSalary"],"specifiers":[{"kind":"local","local":"getFortune","exported":"getFortune"},{"kind":"local","local":"getInsuranceFortune","exported":"getInsuranceFortune"},{"kind":"local","local":"getBorrowerCompletion","exported":"getBorrowerCompletion"},{"kind":"local","local":"getBonusIncome","exported":"getBonusIncome"},{"kind":"local","local":"getArrayValues","exported":"getArrayValues"},{"kind":"local","local":"getOtherIncome","exported":"getOtherIncome"},{"kind":"local","local":"getExpenses","exported":"getExpenses"},{"kind":"local","local":"getBorrowerIncome","exported":"getBorrowerIncome"},{"kind":"local","local":"getTotalFortune","exported":"getTotalFortune"},{"kind":"local","local":"getRealEstateFortune","exported":"getRealEstateFortune"},{"kind":"local","local":"getRealEstateValue","exported":"getRealEstateValue"},{"kind":"local","local":"getRealEstateDebt","exported":"getRealEstateDebt"},{"kind":"local","local":"getBorrowerSalary","exported":"getBorrowerSalary"}]}}},"options":{"filename":"imports/core/utils/borrowerFunctions.js","filenameRelative":"imports/core/utils/borrowerFunctions.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/utils/borrowerFunctions.js.map","sourceFileName":"imports/core/utils/borrowerFunctions.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"borrowerFunctions"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.export({\n  getFortune: function getFortune() {\n    return _getFortune;\n  },\n  getInsuranceFortune: function getInsuranceFortune() {\n    return _getInsuranceFortune;\n  },\n  getBorrowerCompletion: function getBorrowerCompletion() {\n    return _getBorrowerCompletion;\n  },\n  getBonusIncome: function getBonusIncome() {\n    return _getBonusIncome;\n  },\n  getArrayValues: function getArrayValues() {\n    return _getArrayValues;\n  },\n  getOtherIncome: function getOtherIncome() {\n    return _getOtherIncome;\n  },\n  getExpenses: function getExpenses() {\n    return _getExpenses;\n  },\n  getBorrowerIncome: function getBorrowerIncome() {\n    return _getBorrowerIncome;\n  },\n  getTotalFortune: function getTotalFortune() {\n    return _getTotalFortune;\n  },\n  getRealEstateFortune: function getRealEstateFortune() {\n    return _getRealEstateFortune;\n  },\n  getRealEstateValue: function getRealEstateValue() {\n    return _getRealEstateValue;\n  },\n  getRealEstateDebt: function getRealEstateDebt() {\n    return _getRealEstateDebt;\n  },\n  getBorrowerSalary: function getBorrowerSalary() {\n    return _getBorrowerSalary;\n  }\n});\n\nvar _personalInfoPercent = void 0,\n    _filesPercent = void 0;\n\nmodule.watch(require(\"../arrays/steps\"), {\n  personalInfoPercent: function personalInfoPercent(v) {\n    _personalInfoPercent = v;\n  },\n  filesPercent: function filesPercent(v) {\n    _filesPercent = v;\n  }\n}, 0);\n\nvar _borrowerFiles = void 0;\n\nexports.getFortune = _getFortune;\nmodule.watch(require(\"../api/files/files\"), {\n  borrowerFiles: function borrowerFiles(v) {\n    _borrowerFiles = v;\n  }\n}, 1);\n\nvar _arrayify = void 0;\n\nmodule.watch(require(\"./general\"), {\n  arrayify: function arrayify(v) {\n    _arrayify = v;\n  }\n}, 2);\n\nvar _getFortune = function _getFortune(_ref) {\n  var borrowers = _ref.borrowers;\n  var array = [];\n\n  _arrayify(borrowers).forEach(function (b) {\n    array.push(b.bankFortune);\n  });\n\n  return array.reduce(function (tot, val) {\n    return val > 0 && tot + val || tot;\n  }, 0);\n};\n\nvar _getInsuranceFortune = function _getInsuranceFortune(_ref2) {\n  var borrowers = _ref2.borrowers;\n  var array = [];\n\n  _arrayify(borrowers).forEach(function (b) {\n    array.push(b.insuranceSecondPillar);\n    array.push(b.insuranceThirdPillar);\n  });\n\n  return array.reduce(function (tot, val) {\n    return val > 0 && tot + val || tot;\n  }, 0);\n};\n\nvar _getBorrowerCompletion = function _getBorrowerCompletion(_ref3) {\n  var borrower = _ref3.borrower;\n  return (_filesPercent([borrower], _borrowerFiles, 'auction') + _personalInfoPercent([borrower]) + (borrower.logic.hasValidatedFinances ? 1 : 0)) / 3;\n};\n\nvar _getBonusIncome = function _getBonusIncome(_ref4) {\n  var borrowers = _ref4.borrowers;\n  var total = 0;\n\n  _arrayify(borrowers).forEach(function (borrower) {\n    if (borrower.bonus) {\n      var arr = Object.keys(borrower.bonus).map(function (key) {\n        return borrower.bonus[key];\n      });\n\n      if (arr.length < 1) {\n        return;\n      } else if (arr.length > 4) {\n        throw new Error('too many bonuses provided');\n      }\n\n      arr = arr.map(function (v) {\n        return v || 0;\n      }); // Sum all values, remove the lowest one, and return 50% of their average\n\n      var sum = arr.reduce(function (tot, val) {\n        return tot + val;\n      }, 0);\n\n      if (arr.length > 3) {\n        sum -= Math.min.apply(Math, _toConsumableArray(arr));\n      }\n\n      total = 0.5 * (sum / Math.min(3, arr.length)) || 0;\n    }\n  });\n\n  return Math.max(0, Math.round(total));\n};\n\nvar _getArrayValues = function _getArrayValues(_ref5, key, mapFunc) {\n  var borrowers = _ref5.borrowers;\n  var sum = 0;\n\n  _arrayify(borrowers).forEach(function (borrower) {\n    if (!borrower[key]) {\n      return 0;\n    }\n\n    sum += [].concat(_toConsumableArray(borrower[key] ? borrower[key].map(mapFunc || function (i) {\n      return i.value;\n    }) : [])).reduce(function (tot, val) {\n      return val > 0 && tot + val || tot;\n    }, 0);\n  });\n\n  return Math.max(0, Math.round(sum));\n};\n\nvar _getOtherIncome = function _getOtherIncome(_ref6) {\n  var borrowers = _ref6.borrowers;\n  return _getArrayValues({\n    borrowers: borrowers\n  }, 'otherIncome');\n};\n\nvar _getExpenses = function _getExpenses(_ref7) {\n  var borrowers = _ref7.borrowers;\n  return _getArrayValues({\n    borrowers: borrowers\n  }, 'expenses');\n};\n\nvar _getBorrowerIncome = function _getBorrowerIncome(_ref8) {\n  var borrowers = _ref8.borrowers;\n  var sum = 0;\n\n  _arrayify(borrowers).forEach(function (borrower) {\n    sum += borrower.salary || 0;\n    sum += _getBonusIncome({\n      borrowers: borrower\n    }) || 0;\n    sum += _getOtherIncome({\n      borrowers: borrower\n    }) || 0;\n    sum -= _getExpenses({\n      borrowers: borrower\n    }) || 0;\n  });\n\n  return Math.max(sum, 0);\n};\n\nvar _getTotalFortune = function _getTotalFortune(_ref9) {\n  var borrowers = _ref9.borrowers;\n  var sum = 0;\n\n  _arrayify(borrowers).forEach(function (borrower) {\n    sum += borrower.bankFortune || 0;\n    sum += borrower.insuranceSecondPillar || 0;\n    sum += borrower.insuranceThirdPillar || 0; // TODO: Complete with all fortune fields !!\n  });\n\n  return Math.max(0, Math.round(sum));\n};\n\nvar _getRealEstateFortune = function _getRealEstateFortune(_ref10) {\n  var borrowers = _ref10.borrowers;\n  return _getArrayValues({\n    borrowers: borrowers\n  }, 'realEstate', function (i) {\n    return i.value - i.loan;\n  });\n};\n\nvar _getRealEstateValue = function _getRealEstateValue(_ref11) {\n  var borrowers = _ref11.borrowers;\n  return _getArrayValues({\n    borrowers: borrowers\n  }, 'realEstate');\n};\n\nvar _getRealEstateDebt = function _getRealEstateDebt(_ref12) {\n  var borrowers = _ref12.borrowers;\n  return _getArrayValues({\n    borrowers: borrowers\n  }, 'realEstate', function (i) {\n    return i.loan;\n  });\n};\n\nvar _getBorrowerSalary = function _getBorrowerSalary(_ref13) {\n  var borrowers = _ref13.borrowers;\n  return _arrayify(borrowers).reduce(function (t, b) {\n    return t + (b.salary || 0);\n  }, 0);\n};","map":{"version":3,"sources":["imports/core/utils/borrowerFunctions.js"],"names":["module","export","getFortune","getInsuranceFortune","getBorrowerCompletion","getBonusIncome","getArrayValues","getOtherIncome","getExpenses","getBorrowerIncome","getTotalFortune","getRealEstateFortune","getRealEstateValue","getRealEstateDebt","getBorrowerSalary","personalInfoPercent","filesPercent","watch","require","v","borrowerFiles","arrayify","borrowers","array","forEach","b","push","bankFortune","reduce","tot","val","insuranceSecondPillar","insuranceThirdPillar","borrower","logic","hasValidatedFinances","total","bonus","arr","Object","keys","map","key","length","Error","sum","Math","min","max","round","mapFunc","i","value","salary","loan","t"],"mappings":"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","file":"imports/core/utils/borrowerFunctions.js.map","sourcesContent":["import { personalInfoPercent, filesPercent } from '../arrays/steps';\nimport { borrowerFiles } from '../api/files/files';\nimport { arrayify } from './general';\n\nexport const getFortune = ({ borrowers }) => {\n  const array = [];\n\n  arrayify(borrowers).forEach((b) => {\n    array.push(b.bankFortune);\n  });\n  return array.reduce((tot, val) => (val > 0 && tot + val) || tot, 0);\n};\n\nexport const getInsuranceFortune = ({ borrowers }) => {\n  const array = [];\n\n  arrayify(borrowers).forEach((b) => {\n    array.push(b.insuranceSecondPillar);\n    array.push(b.insuranceThirdPillar);\n  });\n  return array.reduce((tot, val) => (val > 0 && tot + val) || tot, 0);\n};\n\nexport const getBorrowerCompletion = ({ borrower }) =>\n  (filesPercent([borrower], borrowerFiles, 'auction') +\n    personalInfoPercent([borrower]) +\n    (borrower.logic.hasValidatedFinances ? 1 : 0)) /\n  3;\n\nexport const getBonusIncome = ({ borrowers }) => {\n  let total = 0;\n  arrayify(borrowers).forEach((borrower) => {\n    if (borrower.bonus) {\n      let arr = Object.keys(borrower.bonus).map(key => borrower.bonus[key]);\n      if (arr.length < 1) {\n        return;\n      } else if (arr.length > 4) {\n        throw new Error('too many bonuses provided');\n      }\n\n      arr = arr.map(v => v || 0);\n      // Sum all values, remove the lowest one, and return 50% of their average\n      let sum = arr.reduce((tot, val) => tot + val, 0);\n\n      if (arr.length > 3) {\n        sum -= Math.min(...arr);\n      }\n      total = 0.5 * (sum / Math.min(3, arr.length)) || 0;\n    }\n  });\n\n  return Math.max(0, Math.round(total));\n};\n\nexport const getArrayValues = ({ borrowers }, key, mapFunc) => {\n  let sum = 0;\n\n  arrayify(borrowers).forEach((borrower) => {\n    if (!borrower[key]) {\n      return 0;\n    }\n    sum += [\n      ...(borrower[key] ? borrower[key].map(mapFunc || (i => i.value)) : []),\n    ].reduce((tot, val) => (val > 0 && tot + val) || tot, 0);\n  });\n\n  return Math.max(0, Math.round(sum));\n};\n\nexport const getOtherIncome = ({ borrowers }) =>\n  getArrayValues({ borrowers }, 'otherIncome');\n\nexport const getExpenses = ({ borrowers }) =>\n  getArrayValues({ borrowers }, 'expenses');\n\nexport const getBorrowerIncome = ({ borrowers }) => {\n  let sum = 0;\n\n  arrayify(borrowers).forEach((borrower) => {\n    sum += borrower.salary || 0;\n    sum += getBonusIncome({ borrowers: borrower }) || 0;\n    sum += getOtherIncome({ borrowers: borrower }) || 0;\n    sum -= getExpenses({ borrowers: borrower }) || 0;\n  });\n\n  return Math.max(sum, 0);\n};\n\nexport const getTotalFortune = ({ borrowers }) => {\n  let sum = 0;\n\n  arrayify(borrowers).forEach((borrower) => {\n    sum += borrower.bankFortune || 0;\n    sum += borrower.insuranceSecondPillar || 0;\n    sum += borrower.insuranceThirdPillar || 0;\n\n    // TODO: Complete with all fortune fields !!\n  });\n\n  return Math.max(0, Math.round(sum));\n};\n\nexport const getRealEstateFortune = ({ borrowers }) =>\n  getArrayValues({ borrowers }, 'realEstate', i => i.value - i.loan);\n\nexport const getRealEstateValue = ({ borrowers }) =>\n  getArrayValues({ borrowers }, 'realEstate');\n\nexport const getRealEstateDebt = ({ borrowers }) =>\n  getArrayValues({ borrowers }, 'realEstate', i => i.loan);\n\nexport const getBorrowerSalary = ({ borrowers }) =>\n  arrayify(borrowers).reduce((t, b) => t + (b.salary || 0), 0);\n"]},"hash":"6c30276c36b3793e1cc3db4260ed9bcbfde2eda8"}
