{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":["applyProps","node"],"specifiers":[{"kind":"local","local":"applyProps","exported":"default"},{"kind":"local","local":"node","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/lib/applyProps.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/lib/applyProps.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/lib/applyProps.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/lib/applyProps.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"applyProps"},"ignored":false,"code":"module.export({\n    default: () => applyProps\n});\nconst restrictOptions = ['disableOplog', 'pollingIntervalMs', 'pollingThrottleMs'];\n\nfunction applyProps(node) {\n    let filters = _.extend({}, node.props.$filters);\n\n    let options = _.extend({}, node.props.$options);\n\n    options = _.omit(options, ...restrictOptions);\n    options.fields = options.fields || {};\n    node.applyFields(filters, options);\n    return {\n        filters,\n        options\n    };\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/lib/applyProps.js"],"names":["module","export","default","applyProps","restrictOptions","node","filters","_","extend","props","$filters","options","$options","omit","fields","applyFields"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,aAAQ,MAAIC;AAAb,CAAd;AAAA,MAAMC,kBAAkB,CACpB,cADoB,EAEpB,mBAFoB,EAGpB,mBAHoB,CAAxB;;AAMe,SAASD,UAAT,CAAoBE,IAApB,EAA0B;AACrC,QAAIC,UAAUC,EAAEC,MAAF,CAAS,EAAT,EAAaH,KAAKI,KAAL,CAAWC,QAAxB,CAAd;;AACA,QAAIC,UAAUJ,EAAEC,MAAF,CAAS,EAAT,EAAaH,KAAKI,KAAL,CAAWG,QAAxB,CAAd;;AAEAD,cAAUJ,EAAEM,IAAF,CAAOF,OAAP,EAAgB,GAAGP,eAAnB,CAAV;AACAO,YAAQG,MAAR,GAAiBH,QAAQG,MAAR,IAAkB,EAAnC;AAEAT,SAAKU,WAAL,CAAiBT,OAAjB,EAA0BK,OAA1B;AAEA,WAAO;AAACL,eAAD;AAAUK;AAAV,KAAP;AACH","file":"packages/cultofcoders:grapher/lib/query/lib/applyProps.js.map","sourcesContent":["const restrictOptions = [\n    'disableOplog',\n    'pollingIntervalMs',\n    'pollingThrottleMs'\n];\n\nexport default function applyProps(node) {\n    let filters = _.extend({}, node.props.$filters);\n    let options = _.extend({}, node.props.$options);\n\n    options = _.omit(options, ...restrictOptions);\n    options.fields = options.fields || {};\n\n    node.applyFields(filters, options);\n\n    return {filters, options};\n}\n"]},"hash":"84b39d6f2caad12d42402c88e3f90a74a197db14"}
