{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"../../../core/components/Translation","imported":["IntlDate"],"specifiers":[{"kind":"named","imported":"IntlDate","local":"IntlDate"}]},{"source":"./Event","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Event"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/components/MixpanelAnalytics/EventsDay.jsx","filenameRelative":"imports/ui/components/MixpanelAnalytics/EventsDay.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/components/MixpanelAnalytics/EventsDay.jsx.map","sourceFileName":"imports/ui/components/MixpanelAnalytics/EventsDay.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"EventsDay"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar moment = void 0;\nmodule.watch(require(\"moment\"), {\n  \"default\": function () {\n    function _default(v) {\n      moment = v;\n    }\n\n    return _default;\n  }()\n}, 2);\n\nvar _IntlDate = void 0;\n\nmodule.watch(require(\"../../../core/components/Translation\"), {\n  IntlDate: function () {\n    function IntlDate(v) {\n      _IntlDate = v;\n    }\n\n    return IntlDate;\n  }()\n}, 3);\nvar Event = void 0;\nmodule.watch(require(\"./Event\"), {\n  \"default\": function () {\n    function _default(v) {\n      Event = v;\n    }\n\n    return _default;\n  }()\n}, 4);\nvar today = moment();\nvar yesterday = moment().subtract(1, 'day');\n\nvar getDayTitle = function () {\n  function getDayTitle(day) {\n    var momentDate = moment(day);\n\n    if (momentDate.isSame(today, 'day')) {\n      return \"Aujourd'hui\";\n    } else if (momentDate.isSame(yesterday, 'day')) {\n      return 'Hier';\n    }\n\n    return React.createElement(_IntlDate, {\n      value: day,\n      month: \"long\",\n      year: \"numeric\",\n      weekday: \"long\",\n      day: \"2-digit\"\n    });\n  }\n\n  return getDayTitle;\n}();\n\nvar EventsDay = function () {\n  function EventsDay(_ref) {\n    var day = _ref.day,\n        events = _ref.events;\n    var sortedFromLast = [].concat(_toConsumableArray(events)).reverse();\n    return React.createElement(\n      \"li\",\n      {\n        className: \"events-day\"\n      },\n      React.createElement(\n        \"h3\",\n        null,\n        getDayTitle(day)\n      ),\n      React.createElement(\n        \"ol\",\n        null,\n        sortedFromLast.map(function (event, index) {\n          return React.createElement(Event, (0, _extends3.default)({\n            key: index\n          }, event));\n        })\n      )\n    );\n  }\n\n  return EventsDay;\n}();\n\nEventsDay.propTypes = {\n  day: PropTypes.string.isRequired,\n  events: PropTypes.array.isRequired\n};\nmodule.exportDefault(EventsDay);","map":{"version":3,"sources":["imports/ui/components/MixpanelAnalytics/EventsDay.jsx"],"names":["React","module","watch","require","v","PropTypes","moment","IntlDate","Event","today","yesterday","subtract","getDayTitle","day","momentDate","isSame","EventsDay","events","sortedFromLast","reverse","map","event","index","propTypes","string","isRequired","array","exportDefault"],"mappings":";;;;;;;;;;AAAA,IAAIA,cAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACJ,cAAMI,CAAN;AAAQ;;AAApB;AAAA;AAAA,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,kBAAJ;AAAcJ,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACC,kBAAUD,CAAV;AAAY;;AAAxB;AAAA;AAAA,CAAnC,EAA6D,CAA7D;AAAgE,IAAIE,eAAJ;AAAWL,OAAOC,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACE,eAAOF,CAAP;AAAS;;AAArB;AAAA;AAAA,CAA/B,EAAsD,CAAtD;;AAAyD,IAAIG,kBAAJ;;AAAaN,OAAOC,KAAP,CAAaC,QAAQ,sCAAR,CAAb,EAA6D;AAACI,UAAD;AAAA,sBAAUH,CAAV,EAAY;AAACG,kBAASH,CAAT;AAAW;;AAAxB;AAAA;AAAA,CAA7D,EAAuF,CAAvF;AAA0F,IAAII,cAAJ;AAAUP,OAAOC,KAAP,CAAaC,QAAQ,SAAR,CAAb,EAAgC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACI,cAAMJ,CAAN;AAAQ;;AAApB;AAAA;AAAA,CAAhC,EAAsD,CAAtD;AAOpU,IAAMK,QAAQH,QAAd;AACA,IAAMI,YAAYJ,SAASK,QAAT,CAAkB,CAAlB,EAAqB,KAArB,CAAlB;;AAEA,IAAMC;AAAc,WAAdA,WAAc,CAACC,GAAD,EAAS;AAC3B,QAAMC,aAAaR,OAAOO,GAAP,CAAnB;;AAEA,QAAIC,WAAWC,MAAX,CAAkBN,KAAlB,EAAyB,KAAzB,CAAJ,EAAqC;AACnC,aAAO,aAAP;AACD,KAFD,MAEO,IAAIK,WAAWC,MAAX,CAAkBL,SAAlB,EAA6B,KAA7B,CAAJ,EAAyC;AAC9C,aAAO,MAAP;AACD;;AACD,WACE,oBAAC,SAAD;AACE,aAAOG,GADT;AAEE,aAAM,MAFR;AAGE,YAAK,SAHP;AAIE,eAAQ,MAJV;AAKE,WAAI;AALN,MADF;AASD;;AAjBK;AAAA,GAAN;;AAmBA,IAAMG;AAAY,WAAZA,SAAY,OAAqB;AAAA,QAAlBH,GAAkB,QAAlBA,GAAkB;AAAA,QAAbI,MAAa,QAAbA,MAAa;AACrC,QAAMC,iBAAiB,6BAAID,MAAJ,GAAYE,OAAZ,EAAvB;AACA,WACE;AAAA;AAAA;AAAI,mBAAU;AAAd;AACE;AAAA;AAAA;AAAKP,oBAAYC,GAAZ;AAAL,OADF;AAEE;AAAA;AAAA;AACGK,uBAAeE,GAAf,CAAmB,UAACC,KAAD,EAAQC,KAAR;AAAA,iBAAkB,oBAAC,KAAD;AAAO,iBAAKA;AAAZ,aAAuBD,KAAvB,EAAlB;AAAA,SAAnB;AADH;AAFF,KADF;AAQD;;AAVK;AAAA,GAAN;;AAYAL,UAAUO,SAAV,GAAsB;AACpBV,OAAKR,UAAUmB,MAAV,CAAiBC,UADF;AAEpBR,UAAQZ,UAAUqB,KAAV,CAAgBD;AAFJ,CAAtB;AAzCAxB,OAAO0B,aAAP,CA8CeX,SA9Cf","file":"imports/ui/components/MixpanelAnalytics/EventsDay.jsx.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { IntlDate } from 'core/components/Translation';\nimport Event from './Event';\n\nconst today = moment();\nconst yesterday = moment().subtract(1, 'day');\n\nconst getDayTitle = (day) => {\n  const momentDate = moment(day);\n\n  if (momentDate.isSame(today, 'day')) {\n    return \"Aujourd'hui\";\n  } else if (momentDate.isSame(yesterday, 'day')) {\n    return 'Hier';\n  }\n  return (\n    <IntlDate\n      value={day}\n      month=\"long\"\n      year=\"numeric\"\n      weekday=\"long\"\n      day=\"2-digit\"\n    />\n  );\n};\n\nconst EventsDay = ({ day, events }) => {\n  const sortedFromLast = [...events].reverse();\n  return (\n    <li className=\"events-day\">\n      <h3>{getDayTitle(day)}</h3>\n      <ol>\n        {sortedFromLast.map((event, index) => <Event key={index} {...event} />)}\n      </ol>\n    </li>\n  );\n};\n\nEventsDay.propTypes = {\n  day: PropTypes.string.isRequired,\n  events: PropTypes.array.isRequired,\n};\n\nexport default EventsDay;\n"]},"hash":"a300c1fe1e6d197f4eeda0c12a4c0b7cf5a8438f"}
