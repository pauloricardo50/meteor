{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"react-router-dom","imported":["Redirect"],"specifiers":[{"kind":"named","imported":"Redirect","local":"Redirect"}]},{"source":"../../../core/components/ErrorBoundary","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ErrorBoundary"}]},{"source":"./AdminTopNav","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AdminTopNav"}]},{"source":"./AdminSideNav","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AdminSideNav"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/layouts/AdminLayout/AdminLayout.jsx","filenameRelative":"imports/ui/layouts/AdminLayout/AdminLayout.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/layouts/AdminLayout/AdminLayout.jsx.map","sourceFileName":"imports/ui/layouts/AdminLayout/AdminLayout.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"AdminLayout"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }()\n}, 1);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function () {\n    function Roles(v) {\n      _Roles = v;\n    }\n\n    return Roles;\n  }()\n}, 2);\n\nvar _Redirect = void 0;\n\nmodule.watch(require(\"react-router-dom\"), {\n  Redirect: function () {\n    function Redirect(v) {\n      _Redirect = v;\n    }\n\n    return Redirect;\n  }()\n}, 3);\nvar ErrorBoundary = void 0;\nmodule.watch(require(\"../../../core/components/ErrorBoundary\"), {\n  \"default\": function () {\n    function _default(v) {\n      ErrorBoundary = v;\n    }\n\n    return _default;\n  }()\n}, 4);\nvar AdminTopNav = void 0;\nmodule.watch(require(\"./AdminTopNav\"), {\n  \"default\": function () {\n    function _default(v) {\n      AdminTopNav = v;\n    }\n\n    return _default;\n  }()\n}, 5);\nvar AdminSideNav = void 0;\nmodule.watch(require(\"./AdminSideNav\"), {\n  \"default\": function () {\n    function _default(v) {\n      AdminSideNav = v;\n    }\n\n    return _default;\n  }()\n}, 6);\n\nvar getRedirect = function () {\n  function getRedirect(_ref) {\n    var currentUser = _ref.currentUser,\n        pathname = _ref.history.location.pathname;\n\n    var userIsAdmin = _Roles.userIsInRole(currentUser, 'admin');\n\n    var userIsDev = _Roles.userIsInRole(currentUser, 'dev');\n\n    if (!currentUser) {\n      return \"/login?path=\" + pathname;\n    }\n\n    if (!(userIsAdmin || userIsDev)) {// TODO: Redirect to app subdomain\n    }\n\n    return false;\n  }\n\n  return getRedirect;\n}();\n\nvar AdminLayout = function () {\n  function AdminLayout(props) {\n    var history = props.history,\n        children = props.children;\n    var redirect = getRedirect(props);\n    var path = history.location.pathname;\n    var isLogin = path.slice(0, 6) === '/login';\n\n    if (redirect && !isLogin) {\n      return React.createElement(_Redirect, {\n        to: redirect\n      });\n    }\n\n    return React.createElement(\n      \"div\",\n      {\n        className: \"admin-layout\"\n      },\n      React.createElement(AdminTopNav, props),\n      React.createElement(\n        \"div\",\n        {\n          className: \"main-row\"\n        },\n        React.createElement(AdminSideNav, props),\n        React.createElement(\n          \"main\",\n          null,\n          React.createElement(\n            ErrorBoundary,\n            {\n              helper: \"layout\",\n              pathname: history.location.pathname\n            },\n            React.cloneElement(children, (0, _extends3.default)({}, props))\n          )\n        )\n      )\n    );\n  }\n\n  return AdminLayout;\n}();\n\nAdminLayout.defaultProps = {\n  currentUser: undefined\n};\nAdminLayout.propTypes = {\n  currentUser: PropTypes.objectOf(PropTypes.any),\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  children: PropTypes.any.isRequired\n};\nmodule.exportDefault(AdminLayout);","map":{"version":3,"sources":["imports/ui/layouts/AdminLayout/AdminLayout.jsx"],"names":["PropTypes","module","watch","require","v","React","Roles","Redirect","ErrorBoundary","AdminTopNav","AdminSideNav","getRedirect","currentUser","pathname","history","location","userIsAdmin","userIsInRole","userIsDev","AdminLayout","props","children","redirect","path","isLogin","slice","cloneElement","defaultProps","undefined","propTypes","objectOf","any","isRequired","exportDefault"],"mappings":"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","file":"imports/ui/layouts/AdminLayout/AdminLayout.jsx.map","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Roles } from 'meteor/alanning:roles';\nimport { Redirect } from 'react-router-dom';\n\nimport ErrorBoundary from 'core/components/ErrorBoundary';\nimport AdminTopNav from './AdminTopNav';\nimport AdminSideNav from './AdminSideNav';\n\nconst getRedirect = ({ currentUser, history: { location: { pathname } } }) => {\n  const userIsAdmin = Roles.userIsInRole(currentUser, 'admin');\n  const userIsDev = Roles.userIsInRole(currentUser, 'dev');\n\n  if (!currentUser) {\n    return `/login?path=${pathname}`;\n  }\n\n  if (!(userIsAdmin || userIsDev)) {\n    // TODO: Redirect to app subdomain\n  }\n\n  return false;\n};\n\nconst AdminLayout = (props) => {\n  const { history, children } = props;\n  const redirect = getRedirect(props);\n  const path = history.location.pathname;\n  const isLogin = path.slice(0, 6) === '/login';\n\n  if (redirect && !isLogin) {\n    return <Redirect to={redirect} />;\n  }\n\n  return (\n    <div className=\"admin-layout\">\n      <AdminTopNav {...props} />\n\n      <div className=\"main-row\">\n        <AdminSideNav {...props} />\n\n        <main>\n          <ErrorBoundary helper=\"layout\" pathname={history.location.pathname}>\n            {React.cloneElement(children, { ...props })}\n          </ErrorBoundary>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nAdminLayout.defaultProps = {\n  currentUser: undefined,\n};\n\nAdminLayout.propTypes = {\n  currentUser: PropTypes.objectOf(PropTypes.any),\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  children: PropTypes.any.isRequired,\n};\n\nexport default AdminLayout;\n"]},"hash":"2ea9c4ce41bf74670f966d9fe79a715016cc0dcb"}
