{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"../emailConstants","imported":["FROM_DEFAULT","EMAIL_IDS","EMAIL_PARTS"],"specifiers":[{"kind":"named","imported":"FROM_DEFAULT","local":"FROM_DEFAULT"},{"kind":"named","imported":"EMAIL_IDS","local":"EMAIL_IDS"},{"kind":"named","imported":"EMAIL_PARTS","local":"EMAIL_PARTS"}]},{"source":"./EmailService","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"EmailService"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/email/server/accountsEmails.js","filenameRelative":"imports/core/api/email/server/accountsEmails.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/email/server/accountsEmails.js.map","sourceFileName":"imports/core/api/email/server/accountsEmails.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"accountsEmails"},"ignored":false,"code":"\"use strict\";\n\nvar _Accounts = void 0;\n\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts: function Accounts(v) {\n    _Accounts = v;\n  }\n}, 0);\n\nvar _FROM_DEFAULT = void 0,\n    _EMAIL_IDS = void 0,\n    _EMAIL_PARTS = void 0;\n\nmodule.watch(require(\"../emailConstants\"), {\n  FROM_DEFAULT: function FROM_DEFAULT(v) {\n    _FROM_DEFAULT = v;\n  },\n  EMAIL_IDS: function EMAIL_IDS(v) {\n    _EMAIL_IDS = v;\n  },\n  EMAIL_PARTS: function EMAIL_PARTS(v) {\n    _EMAIL_PARTS = v;\n  }\n}, 1);\nvar EmailService = void 0;\nmodule.watch(require(\"./EmailService\"), {\n  default: function _default(v) {\n    EmailService = v;\n  }\n}, 2);\n// Meteor default emails\n// https://themeteorchef.com/tutorials/sign-up-with-email-verification\n_Accounts.emailTemplates.siteName = 'e-Potek';\n_Accounts.emailTemplates.from = _FROM_DEFAULT;\n\n_Accounts.emailTemplates.verifyEmail = function () {\n  var emailId = _EMAIL_IDS.VERIFY_EMAIL;\n  return {\n    subject: function subject() {\n      return EmailService.getEmailPart(emailId, _EMAIL_PARTS.SUBJECT);\n    },\n    html: function html(user, url) {\n      // TODO: Make sure this doesn't block\n      var template = EmailService.getAccountsTemplate(emailId, {\n        user: user,\n        url: url\n      });\n      var result = EmailService.renderTemplate(template, emailId);\n      return result.data.html;\n    }\n  };\n}();\n\n_Accounts.emailTemplates.resetPassword = function () {\n  var emailId = _EMAIL_IDS.RESET_PASSWORD;\n  return {\n    subject: function subject() {\n      return EmailService.getEmailPart(emailId, _EMAIL_PARTS.SUBJECT);\n    },\n    html: function html(user, url) {\n      // TODO: Make sure this doesn't block\n      var template = EmailService.getAccountsTemplate(emailId, {\n        user: user,\n        url: url\n      });\n      var result = EmailService.renderTemplate(template, emailId);\n      return result.data.html;\n    }\n  };\n}();\n\n_Accounts.emailTemplates.enrollAccount = function () {\n  var emailId = _EMAIL_IDS.ENROLL_ACCOUNT;\n  return {\n    subject: function subject() {\n      return EmailService.getEmailPart(emailId, _EMAIL_PARTS.SUBJECT);\n    },\n    html: function html(user, url) {\n      // TODO: Make sure this doesn't block\n      var template = EmailService.getAccountsTemplate(emailId, {\n        user: user,\n        url: url\n      });\n      var result = EmailService.renderTemplate(template, emailId);\n      return result.data.html;\n    }\n  };\n}();","map":{"version":3,"sources":["imports/core/api/email/server/accountsEmails.js"],"names":["Accounts","module","watch","require","v","FROM_DEFAULT","EMAIL_IDS","EMAIL_PARTS","EmailService","default","emailTemplates","siteName","from","verifyEmail","emailId","VERIFY_EMAIL","subject","getEmailPart","SUBJECT","html","user","url","template","getAccountsTemplate","result","renderTemplate","data","resetPassword","RESET_PASSWORD","enrollAccount","ENROLL_ACCOUNT"],"mappings":";;AAAA,IAAIA,kBAAJ;;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACH,UAAD,oBAAUI,CAAV,EAAY;AAACJ,gBAASI,CAAT;AAAW;AAAxB,CAA7C,EAAuE,CAAvE;;AAA0E,IAAIC,sBAAJ;AAAA,IAAiBC,mBAAjB;AAAA,IAA2BC,qBAA3B;;AAAuCN,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACE,cAAD,wBAAcD,CAAd,EAAgB;AAACC,oBAAaD,CAAb;AAAe,GAAhC;AAAiCE,WAAjC,qBAA2CF,CAA3C,EAA6C;AAACE,iBAAUF,CAAV;AAAY,GAA1D;AAA2DG,aAA3D,uBAAuEH,CAAvE,EAAyE;AAACG,mBAAYH,CAAZ;AAAc;AAAxF,CAA1C,EAAoI,CAApI;AAAuI,IAAII,qBAAJ;AAAiBP,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACM,SAAD,oBAASL,CAAT,EAAW;AAACI,mBAAaJ,CAAb;AAAe;AAA3B,CAAvC,EAAoE,CAApE;AAKtR;AACA;AACAJ,UAASU,cAAT,CAAwBC,QAAxB,GAAmC,SAAnC;AACAX,UAASU,cAAT,CAAwBE,IAAxB,GAA+BP,aAA/B;;AAEAL,UAASU,cAAT,CAAwBG,WAAxB,GAAuC,YAAM;AAC3C,MAAMC,UAAUR,WAAUS,YAA1B;AACA,SAAO;AACLC,aAAS;AAAA,aAAMR,aAAaS,YAAb,CAA0BH,OAA1B,EAAmCP,aAAYW,OAA/C,CAAN;AAAA,KADJ;AAELC,QAFK,gBAEAC,IAFA,EAEMC,GAFN,EAEW;AACd;AACA,UAAMC,WAAWd,aAAae,mBAAb,CAAiCT,OAAjC,EAA0C;AAAEM,kBAAF;AAAQC;AAAR,OAA1C,CAAjB;AACA,UAAMG,SAAShB,aAAaiB,cAAb,CAA4BH,QAA5B,EAAsCR,OAAtC,CAAf;AACA,aAAOU,OAAOE,IAAP,CAAYP,IAAnB;AACD;AAPI,GAAP;AASD,CAXqC,EAAtC;;AAaAnB,UAASU,cAAT,CAAwBiB,aAAxB,GAAyC,YAAM;AAC7C,MAAMb,UAAUR,WAAUsB,cAA1B;AAEA,SAAO;AACLZ,aAAS;AAAA,aAAMR,aAAaS,YAAb,CAA0BH,OAA1B,EAAmCP,aAAYW,OAA/C,CAAN;AAAA,KADJ;AAELC,QAFK,gBAEAC,IAFA,EAEMC,GAFN,EAEW;AACd;AACA,UAAMC,WAAWd,aAAae,mBAAb,CAAiCT,OAAjC,EAA0C;AAAEM,kBAAF;AAAQC;AAAR,OAA1C,CAAjB;AACA,UAAMG,SAAShB,aAAaiB,cAAb,CAA4BH,QAA5B,EAAsCR,OAAtC,CAAf;AACA,aAAOU,OAAOE,IAAP,CAAYP,IAAnB;AACD;AAPI,GAAP;AASD,CAZuC,EAAxC;;AAcAnB,UAASU,cAAT,CAAwBmB,aAAxB,GAAyC,YAAM;AAC7C,MAAMf,UAAUR,WAAUwB,cAA1B;AAEA,SAAO;AACLd,aAAS;AAAA,aAAMR,aAAaS,YAAb,CAA0BH,OAA1B,EAAmCP,aAAYW,OAA/C,CAAN;AAAA,KADJ;AAELC,QAFK,gBAEAC,IAFA,EAEMC,GAFN,EAEW;AACd;AACA,UAAMC,WAAWd,aAAae,mBAAb,CAAiCT,OAAjC,EAA0C;AAAEM,kBAAF;AAAQC;AAAR,OAA1C,CAAjB;AACA,UAAMG,SAAShB,aAAaiB,cAAb,CAA4BH,QAA5B,EAAsCR,OAAtC,CAAf;AACA,aAAOU,OAAOE,IAAP,CAAYP,IAAnB;AACD;AAPI,GAAP;AASD,CAZuC,EAAxC","file":"imports/core/api/email/server/accountsEmails.js.map","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\n\nimport { FROM_DEFAULT, EMAIL_IDS, EMAIL_PARTS } from '../emailConstants';\nimport EmailService from './EmailService';\n\n// Meteor default emails\n// https://themeteorchef.com/tutorials/sign-up-with-email-verification\nAccounts.emailTemplates.siteName = 'e-Potek';\nAccounts.emailTemplates.from = FROM_DEFAULT;\n\nAccounts.emailTemplates.verifyEmail = (() => {\n  const emailId = EMAIL_IDS.VERIFY_EMAIL;\n  return {\n    subject: () => EmailService.getEmailPart(emailId, EMAIL_PARTS.SUBJECT),\n    html(user, url) {\n      // TODO: Make sure this doesn't block\n      const template = EmailService.getAccountsTemplate(emailId, { user, url });\n      const result = EmailService.renderTemplate(template, emailId);\n      return result.data.html;\n    },\n  };\n})();\n\nAccounts.emailTemplates.resetPassword = (() => {\n  const emailId = EMAIL_IDS.RESET_PASSWORD;\n\n  return {\n    subject: () => EmailService.getEmailPart(emailId, EMAIL_PARTS.SUBJECT),\n    html(user, url) {\n      // TODO: Make sure this doesn't block\n      const template = EmailService.getAccountsTemplate(emailId, { user, url });\n      const result = EmailService.renderTemplate(template, emailId);\n      return result.data.html;\n    },\n  };\n})();\n\nAccounts.emailTemplates.enrollAccount = (() => {\n  const emailId = EMAIL_IDS.ENROLL_ACCOUNT;\n\n  return {\n    subject: () => EmailService.getEmailPart(emailId, EMAIL_PARTS.SUBJECT),\n    html(user, url) {\n      // TODO: Make sure this doesn't block\n      const template = EmailService.getAccountsTemplate(emailId, { user, url });\n      const result = EmailService.renderTemplate(template, emailId);\n      return result.data.html;\n    },\n  };\n})();\n"]},"hash":"abdc4a986afc7240f5ba87aa3a153605c3d30acc"}
