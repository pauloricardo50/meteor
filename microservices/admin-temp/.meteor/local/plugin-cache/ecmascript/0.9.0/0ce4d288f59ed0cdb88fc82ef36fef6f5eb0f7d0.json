{"metadata":{"usedHelpers":["classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"../loans","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loans"}]},{"source":"../constants","imported":["LOAN_STATUS","AUCTION_STATUS"],"specifiers":[{"kind":"named","imported":"LOAN_STATUS","local":"LOAN_STATUS"},{"kind":"named","imported":"AUCTION_STATUS","local":"AUCTION_STATUS"}]},{"source":"../../utils/loanFunctions","imported":["getAuctionEndTime"],"specifiers":[{"kind":"named","imported":"getAuctionEndTime","local":"getAuctionEndTime"}]}],"exports":{"exported":["LoanServiceModel"],"specifiers":[{"kind":"local","local":"LoanServiceModel","exported":"LoanServiceModel"}]}}},"options":{"filename":"imports/core/api/loans/LoanService.js","filenameRelative":"imports/core/api/loans/LoanService.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/loans/LoanService.js.map","sourceFileName":"imports/core/api/loans/LoanService.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"LoanService"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  LoanServiceModel: function () {\n    function LoanServiceModel() {\n      return _LoanServiceModel;\n    }\n\n    return LoanServiceModel;\n  }()\n});\nvar moment = void 0;\nmodule.watch(require(\"moment\"), {\n  \"default\": function () {\n    function _default(v) {\n      moment = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nvar Loans = void 0;\nmodule.watch(require(\"../loans\"), {\n  \"default\": function () {\n    function _default(v) {\n      Loans = v;\n    }\n\n    return _default;\n  }()\n}, 1);\n\nvar _LOAN_STATUS = void 0,\n    _AUCTION_STATUS = void 0;\n\nmodule.watch(require(\"../constants\"), {\n  LOAN_STATUS: function () {\n    function LOAN_STATUS(v) {\n      _LOAN_STATUS = v;\n    }\n\n    return LOAN_STATUS;\n  }(),\n  AUCTION_STATUS: function () {\n    function AUCTION_STATUS(v) {\n      _AUCTION_STATUS = v;\n    }\n\n    return AUCTION_STATUS;\n  }()\n}, 2);\n\nvar _getAuctionEndTime = void 0;\n\nmodule.watch(require(\"../../utils/loanFunctions\"), {\n  getAuctionEndTime: function () {\n    function getAuctionEndTime(v) {\n      _getAuctionEndTime = v;\n    }\n\n    return getAuctionEndTime;\n  }()\n}, 3);\n\nvar _LoanServiceModel = function () {\n  function _LoanServiceModel() {\n    var _this = this;\n\n    (0, _classCallCheck3.default)(this, _LoanServiceModel);\n\n    this.insert = function (_ref) {\n      var loan = _ref.loan,\n          userId = _ref.userId;\n      return Loans.insert((0, _extends3.default)({}, loan, {\n        // Do this to allow userId to be null\n        userId: userId\n      }));\n    };\n\n    this.update = function (_ref2) {\n      var loanId = _ref2.loanId,\n          object = _ref2.object;\n      return Loans.update(loanId, {\n        $set: object\n      });\n    };\n\n    this.remove = function (_ref3) {\n      var loanId = _ref3.loanId;\n      return Loans.remove(loanId);\n    };\n\n    this.incrementStep = function (_ref4) {\n      var loanId = _ref4.loanId;\n      return Loans.update(loanId, {\n        $inc: {\n          'logic.step': 1\n        }\n      });\n    };\n\n    this.askVerification = function (_ref5) {\n      var loanId = _ref5.loanId;\n      var loan = Loans.findOne(loanId);\n\n      if (loan.logic.verification.requested) {\n        // Don't do anything if this loan is already in requested mode\n        return false;\n      }\n\n      return Loans.update(loanId, {\n        $set: {\n          'logic.verification.requested': true,\n          'logic.verification.requestedTime': new Date()\n        }\n      });\n    };\n\n    this.startAuction = function (_ref6) {\n      var loanId = _ref6.loanId;\n      var loan = Loans.findOne(loanId);\n\n      if (loan.logic.auction.status !== _AUCTION_STATUS.NONE) {\n        // Don't do anything if this auction has already started or ended\n        return false;\n      }\n\n      return Loans.update(loanId, {\n        $set: {\n          'logic.auction.status': _AUCTION_STATUS.STARTED,\n          'logic.auction.startTime': moment().toDate(),\n          'logic.auction.endTime': _getAuctionEndTime(moment())\n        }\n      });\n    };\n\n    this.endAuction = function (_ref7) {\n      var loanId = _ref7.loanId;\n      var loan = Loans.findOne(loanId); // This method is called in the future (through a job),\n      // so only call this if the auction is ongoing\n\n      if (!loan || loan.logic.auction.status !== _AUCTION_STATUS.STARTED) {\n        return false;\n      }\n\n      return Loans.update(id, {\n        $set: {\n          'logic.auction.status': _AUCTION_STATUS.ENDED,\n          'logic.auction.endTime': new Date()\n        }\n      });\n    };\n\n    this.cancelAuction = function (_ref8) {\n      var loanId = _ref8.loanId;\n      return _this.update(loanId, {\n        $set: {\n          'logic.auction.endTime': undefined,\n          'logic.auction.status': '',\n          'logic.auction.startTime': undefined\n        }\n      });\n    };\n\n    this.confirmClosing = function (_ref9) {\n      var loanId = _ref9.loanId,\n          object = _ref9.object;\n      return Loans.update(loanId, {\n        $set: (0, _extends3.default)({\n          status: _LOAN_STATUS.DONE\n        }, object)\n      });\n    };\n  }\n\n  return _LoanServiceModel;\n}() // TODO: make sure step is really done\n;\n\nvar LoanService = new _LoanServiceModel({});\nmodule.exportDefault(LoanService);","map":{"version":3,"sources":["imports/core/api/loans/LoanService.js"],"names":["module","export","LoanServiceModel","moment","watch","require","v","Loans","LOAN_STATUS","AUCTION_STATUS","getAuctionEndTime","insert","loan","userId","update","loanId","object","$set","remove","incrementStep","$inc","askVerification","findOne","logic","verification","requested","Date","startAuction","auction","status","NONE","STARTED","toDate","endAuction","id","ENDED","cancelAuction","undefined","confirmClosing","DONE","LoanService","exportDefault"],"mappings":"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","file":"imports/core/api/loans/LoanService.js.map","sourcesContent":["import moment from 'moment';\nimport Loans from '../loans';\n\nimport { LOAN_STATUS, AUCTION_STATUS } from '../constants';\nimport { getAuctionEndTime } from '../../utils/loanFunctions';\n\nclass LoanServiceModel {\n  insert = ({ loan, userId }) =>\n    Loans.insert({\n      ...loan,\n      // Do this to allow userId to be null\n      userId,\n    });\n\n  update = ({ loanId, object }) => Loans.update(loanId, { $set: object });\n\n  remove = ({ loanId }) => Loans.remove(loanId);\n\n  // TODO: make sure step is really done\n  incrementStep = ({ loanId }) =>\n    Loans.update(loanId, { $inc: { 'logic.step': 1 } });\n\n  askVerification = ({ loanId }) => {\n    const loan = Loans.findOne(loanId);\n\n    if (loan.logic.verification.requested) {\n      // Don't do anything if this loan is already in requested mode\n      return false;\n    }\n\n    return Loans.update(loanId, {\n      $set: {\n        'logic.verification.requested': true,\n        'logic.verification.requestedTime': new Date(),\n      },\n    });\n  };\n\n  startAuction = ({ loanId }) => {\n    const loan = Loans.findOne(loanId);\n\n    if (loan.logic.auction.status !== AUCTION_STATUS.NONE) {\n      // Don't do anything if this auction has already started or ended\n      return false;\n    }\n\n    return Loans.update(loanId, {\n      $set: {\n        'logic.auction.status': AUCTION_STATUS.STARTED,\n        'logic.auction.startTime': moment().toDate(),\n        'logic.auction.endTime': getAuctionEndTime(moment()),\n      },\n    });\n  };\n\n  endAuction = ({ loanId }) => {\n    const loan = Loans.findOne(loanId);\n\n    // This method is called in the future (through a job),\n    // so only call this if the auction is ongoing\n    if (!loan || loan.logic.auction.status !== AUCTION_STATUS.STARTED) {\n      return false;\n    }\n\n    return Loans.update(id, {\n      $set: {\n        'logic.auction.status': AUCTION_STATUS.ENDED,\n        'logic.auction.endTime': new Date(),\n      },\n    });\n  };\n\n  cancelAuction = ({ loanId }) =>\n    this.update(loanId, {\n      $set: {\n        'logic.auction.endTime': undefined,\n        'logic.auction.status': '',\n        'logic.auction.startTime': undefined,\n      },\n    });\n\n  confirmClosing = ({ loanId, object }) =>\n    Loans.update(loanId, {\n      $set: {\n        status: LOAN_STATUS.DONE,\n        ...object,\n      },\n    });\n}\n\nconst LoanService = new LoanServiceModel({});\n\nexport { LoanServiceModel };\nexport default LoanService;\n"]},"hash":"0ce4d288f59ed0cdb88fc82ef36fef6f5eb0f7d0"}
