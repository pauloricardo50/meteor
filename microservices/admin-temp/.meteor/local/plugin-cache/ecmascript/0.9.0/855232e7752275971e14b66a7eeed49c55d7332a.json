{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"../../../core/api/cleanMethods","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"cleanMethod"}]}],"exports":{"exported":["createQuery"],"specifiers":[{"kind":"local","local":"createQuery","exported":"createQuery"}]}}},"options":{"filename":"imports/ui/components/MixpanelAnalytics/getMixpanelData.js","filenameRelative":"imports/ui/components/MixpanelAnalytics/getMixpanelData.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/components/MixpanelAnalytics/getMixpanelData.js.map","sourceFileName":"imports/ui/components/MixpanelAnalytics/getMixpanelData.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"getMixpanelData"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.export({\n  createQuery: function () {\n    function createQuery() {\n      return _createQuery;\n    }\n\n    return createQuery;\n  }()\n});\nvar cleanMethod = void 0;\nmodule.watch(require(\"../../../core/api/cleanMethods\"), {\n  \"default\": function () {\n    function _default(v) {\n      cleanMethod = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nexports.createQuery = _createQuery;\nvar MIXPANEL_URL = 'https://mixpanel.com/api/2.0/';\n\nvar _createQuery = function () {\n  function _createQuery(params) {\n    return params ? \"?\" + Object.keys(params).map(function (param) {\n      return encodeURIComponent(param) + \"=\" + encodeURIComponent(params[param]);\n    }).join('&') : '';\n  }\n\n  return _createQuery;\n}();\n\nvar buildUrl = function () {\n  function buildUrl(_ref) {\n    var params = _ref.params,\n        _ref$endpoint = _ref.endpoint,\n        endpoint = _ref$endpoint === undefined ? 'segmentation' : _ref$endpoint;\n\n    var url = MIXPANEL_URL + endpoint + _createQuery(params);\n\n    return url;\n  }\n\n  return buildUrl;\n}();\n\nvar getData = function () {\n  function getData(url) {\n    return cleanMethod('getMixpanelAuthorization').then(function (Authorization) {\n      return fetch(url, {\n        method: 'GET',\n        headers: {\n          Authorization: Authorization\n        }\n      });\n    }).then(function (result) {\n      return result.json();\n    }).catch(function (error) {\n      console.log('Mixpanel fetch error:', error);\n      throw error;\n    });\n  }\n\n  return getData;\n}();\n\nvar getEventsByUserId = function () {\n  function getEventsByUserId(userId) {\n    return getData(buildUrl({\n      params: {\n        distinct_ids: \"[\\\"\" + userId + \"\\\"]\"\n      },\n      endpoint: 'stream/query'\n    }));\n  }\n\n  return getEventsByUserId;\n}();\n\nmodule.exportDefault(getEventsByUserId);","map":{"version":3,"sources":["imports/ui/components/MixpanelAnalytics/getMixpanelData.js"],"names":["module","export","createQuery","cleanMethod","watch","require","v","MIXPANEL_URL","params","Object","keys","map","encodeURIComponent","param","join","buildUrl","endpoint","url","getData","then","fetch","method","headers","Authorization","result","json","catch","error","console","log","getEventsByUserId","distinct_ids","userId","exportDefault"],"mappings":";;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC;AAAY;AAAA,aAAIA,YAAJ;AAAA;;AAAZ;AAAA;AAAD,CAAd;AAA6C,IAAIC,oBAAJ;AAAgBH,OAAOI,KAAP,CAAaC,QAAQ,gCAAR,CAAb,EAAuD;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACH,oBAAYG,CAAZ;AAAc;;AAA1B;AAAA;AAAA,CAAvD,EAAmF,CAAnF;;AAE7D,IAAMC,eAAe,+BAArB;;AAEO,IAAML;AAAc,WAAdA,YAAc;AAAA,WACxBM,eACOC,OAAOC,IAAP,CAAYF,MAAZ,EACHG,GADG,CACC;AAAA,aACAC,mBAAmBC,KAAnB,CADA,SAC6BD,mBAAmBJ,OAAOK,KAAP,CAAnB,CAD7B;AAAA,KADD,EAGHC,IAHG,CAGE,GAHF,CADP,GAKG,EANqB;AAAA;;AAAd;AAAA,GAAN;;AAQP,IAAMC;AAAW,WAAXA,QAAW,OAA2C;AAAA,QAAxCP,MAAwC,QAAxCA,MAAwC;AAAA,6BAAhCQ,QAAgC;AAAA,QAAhCA,QAAgC,iCAArB,cAAqB;;AAC1D,QAAMC,MAAMV,eAAeS,QAAf,GAA0Bd,aAAYM,MAAZ,CAAtC;;AACA,WAAOS,GAAP;AACD;;AAHK;AAAA,GAAN;;AAKA,IAAMC;AAAU,WAAVA,OAAU;AAAA,WACdf,YAAY,0BAAZ,EACGgB,IADH,CACQ;AAAA,aACJC,MAAMH,GAAN,EAAW;AAAEI,gBAAQ,KAAV;AAAiBC,iBAAS;AAAEC;AAAF;AAA1B,OAAX,CADI;AAAA,KADR,EAGGJ,IAHH,CAGQ;AAAA,aAAUK,OAAOC,IAAP,EAAV;AAAA,KAHR,EAIGC,KAJH,CAIS,UAACC,KAAD,EAAW;AAChBC,cAAQC,GAAR,CAAY,uBAAZ,EAAqCF,KAArC;AACA,YAAMA,KAAN;AACD,KAPH,CADc;AAAA;;AAAV;AAAA,GAAN;;AAUA,IAAMG;AAAoB,WAApBA,iBAAoB;AAAA,WACxBZ,QAAQH,SAAS;AACfP,cAAQ;AACNuB,8BAAmBC,MAAnB;AADM,OADO;AAIfhB,gBAAU;AAJK,KAAT,CAAR,CADwB;AAAA;;AAApB;AAAA,GAAN;;AA3BAhB,OAAOiC,aAAP,CAmCeH,iBAnCf","file":"imports/ui/components/MixpanelAnalytics/getMixpanelData.js.map","sourcesContent":["import cleanMethod from 'core/api/cleanMethods';\n\nconst MIXPANEL_URL = 'https://mixpanel.com/api/2.0/';\n\nexport const createQuery = params =>\n  (params\n    ? `?${Object.keys(params)\n      .map(param =>\n        `${encodeURIComponent(param)}=${encodeURIComponent(params[param])}`)\n      .join('&')}`\n    : '');\n\nconst buildUrl = ({ params, endpoint = 'segmentation' }) => {\n  const url = MIXPANEL_URL + endpoint + createQuery(params);\n  return url;\n};\n\nconst getData = url =>\n  cleanMethod('getMixpanelAuthorization')\n    .then(Authorization =>\n      fetch(url, { method: 'GET', headers: { Authorization } }))\n    .then(result => result.json())\n    .catch((error) => {\n      console.log('Mixpanel fetch error:', error);\n      throw error;\n    });\n\nconst getEventsByUserId = userId =>\n  getData(buildUrl({\n    params: {\n      distinct_ids: `[\"${userId}\"]`,\n    },\n    endpoint: 'stream/query',\n  }));\n\nexport default getEventsByUserId;\n"]},"hash":"855232e7752275971e14b66a7eeed49c55d7332a"}
