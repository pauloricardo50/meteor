{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./enzyme.config","imported":[],"specifiers":[]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"enzyme","imported":["shallow","mount"],"specifiers":[{"kind":"named","imported":"shallow","local":"shallow"},{"kind":"named","imported":"mount","local":"mount"}]},{"source":"./bootstrap/collections","imported":["Authors","Groups","Posts","Categories","AuthorProfiles"],"specifiers":[{"kind":"named","imported":"Authors","local":"Authors"},{"kind":"named","imported":"Groups","local":"Groups"},{"kind":"named","imported":"Posts","local":"Posts"},{"kind":"named","imported":"Categories","local":"Categories"},{"kind":"named","imported":"AuthorProfiles","local":"AuthorProfiles"}]},{"source":"./bootstrap/namedQueries","imported":["authorsList","postsList"],"specifiers":[{"kind":"named","imported":"authorsList","local":"authorsList"},{"kind":"named","imported":"postsList","local":"postsList"}]},{"source":"sinon","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"sinon"}]},{"source":"meteor/cultofcoders:grapher-react","imported":["withQuery"],"specifiers":[{"kind":"named","imported":"withQuery","local":"withQuery"}]},{"source":"chai","imported":["expect"],"specifiers":[{"kind":"named","imported":"expect","local":"expect"}]},{"source":"./components/containers/PostItem","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PostItemContainer"}]},{"source":"./components/containers/PostItemPolling","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PostItemPollingContainer"}]},{"source":"./components/containers/PostItemReactive","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PostItemReactiveContainer"}]},{"source":"./components/containers/PostItemError","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PostItemErrorContainer"}]},{"source":"./components/containers/PostItemReactiveError","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PostItemReactiveErrorContainer"}]},{"source":"./components/dumb/Post","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Post"}]},{"source":"./components/dumb/Loading","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loading"}]},{"source":"./components/dumb/Error","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Error"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/cultofcoders:grapher-react/__tests__/main.client.js","filenameRelative":"packages/cultofcoders:grapher-react/__tests__/main.client.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher-react/__tests__/main.client.js.map","sourceFileName":"packages/cultofcoders:grapher-react/__tests__/main.client.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main.client"},"ignored":false,"code":"module.watch(require(\"./enzyme.config\"));\nlet React;\nmodule.watch(require(\"react\"), {\n    default(v) {\n        React = v;\n    }\n\n}, 0);\nlet shallow, mount;\nmodule.watch(require(\"enzyme\"), {\n    shallow(v) {\n        shallow = v;\n    },\n\n    mount(v) {\n        mount = v;\n    }\n\n}, 1);\nlet Authors, Groups, Posts, Categories, AuthorProfiles;\nmodule.watch(require(\"./bootstrap/collections\"), {\n    Authors(v) {\n        Authors = v;\n    },\n\n    Groups(v) {\n        Groups = v;\n    },\n\n    Posts(v) {\n        Posts = v;\n    },\n\n    Categories(v) {\n        Categories = v;\n    },\n\n    AuthorProfiles(v) {\n        AuthorProfiles = v;\n    }\n\n}, 2);\nlet authorsList, postsList;\nmodule.watch(require(\"./bootstrap/namedQueries\"), {\n    authorsList(v) {\n        authorsList = v;\n    },\n\n    postsList(v) {\n        postsList = v;\n    }\n\n}, 3);\nlet sinon;\nmodule.watch(require(\"sinon\"), {\n    default(v) {\n        sinon = v;\n    }\n\n}, 4);\nlet withQuery;\nmodule.watch(require(\"meteor/cultofcoders:grapher-react\"), {\n    withQuery(v) {\n        withQuery = v;\n    }\n\n}, 5);\nlet expect;\nmodule.watch(require(\"chai\"), {\n    expect(v) {\n        expect = v;\n    }\n\n}, 6);\nlet PostItemContainer;\nmodule.watch(require(\"./components/containers/PostItem\"), {\n    default(v) {\n        PostItemContainer = v;\n    }\n\n}, 7);\nlet PostItemPollingContainer;\nmodule.watch(require(\"./components/containers/PostItemPolling\"), {\n    default(v) {\n        PostItemPollingContainer = v;\n    }\n\n}, 8);\nlet PostItemReactiveContainer;\nmodule.watch(require(\"./components/containers/PostItemReactive\"), {\n    default(v) {\n        PostItemReactiveContainer = v;\n    }\n\n}, 9);\nlet PostItemErrorContainer;\nmodule.watch(require(\"./components/containers/PostItemError\"), {\n    default(v) {\n        PostItemErrorContainer = v;\n    }\n\n}, 10);\nlet PostItemReactiveErrorContainer;\nmodule.watch(require(\"./components/containers/PostItemReactiveError\"), {\n    default(v) {\n        PostItemReactiveErrorContainer = v;\n    }\n\n}, 11);\nlet Post;\nmodule.watch(require(\"./components/dumb/Post\"), {\n    default(v) {\n        Post = v;\n    }\n\n}, 12);\nlet Loading;\nmodule.watch(require(\"./components/dumb/Loading\"), {\n    default(v) {\n        Loading = v;\n    }\n\n}, 13);\nlet Error;\nmodule.watch(require(\"./components/dumb/Error\"), {\n    default(v) {\n        Error = v;\n    }\n\n}, 14);\ndescribe('withTracker()', function () {\n    it('[Static] Should load the date after mounting', function (done) {\n        const wrapper = mount(React.createElement(PostItemContainer, null));\n        let loadingComponent = wrapper.html();\n        expect(wrapper.find('Post').length).to.equal(1);\n        expect(wrapper.find('Loading').length).to.equal(1);\n        setTimeout(function () {\n            let html = wrapper.html();\n            expect(html).to.equal('<div class=\"title\">Post 0</div>');\n            done();\n        }, 100);\n    });\n    it('[Static] Should trigger the error if specified', function (done) {\n        const wrapper = mount(React.createElement(PostItemErrorContainer, null));\n        let html = wrapper.html();\n        expect(wrapper.find('Post').length).to.equal(1);\n        expect(wrapper.find('Loading').length).to.equal(1);\n        setTimeout(function () {\n            wrapper.update();\n            expect(wrapper.find('Error').length).to.equal(1);\n            done();\n        }, 100);\n    });\n    it('[Reactive] Should load the date after mounting', function (done) {\n        const wrapper = mount(React.createElement(PostItemReactiveContainer, null));\n        expect(wrapper.find('Post').length).to.equal(1);\n        expect(wrapper.find('Loading').length).to.equal(1);\n        setTimeout(function () {\n            let html = wrapper.html();\n            expect(html).to.equal('<div class=\"title\">Post 0</div>'); // triggering a reactive change\n\n            wrapper.update();\n            const {\n                data\n            } = wrapper.find('Post').props();\n            assert.isObject(data);\n            Posts.update(data._id, {\n                $set: {\n                    'title': 'Post 0 update'\n                }\n            });\n            setTimeout(function () {\n                wrapper.update();\n                let html = wrapper.html();\n                expect(html).to.equal('<div class=\"title\">Post 0 update</div>');\n                Posts.update(data._id, {\n                    $set: {\n                        'title': 'Post 0'\n                    }\n                });\n                done();\n            }, 200);\n        }, 100);\n    });\n    it('[Reactive] Should trigger the error if specified', function (done) {\n        const wrapper = mount(React.createElement(PostItemReactiveErrorContainer, null));\n        let html = wrapper.html();\n        expect(wrapper.find('Post').length).to.equal(1);\n        expect(wrapper.find('Loading').length).to.equal(1);\n        setTimeout(function () {\n            wrapper.update();\n            expect(wrapper.find('Error').length).to.equal(1);\n            expect(wrapper.find('Error').html()).to.equal('<div>not-good</div>');\n            done();\n        }, 100);\n    });\n    it('[Static] Should load the date after polling', function (done) {\n        const wrapper = mount(React.createElement(PostItemPollingContainer, null));\n        expect(wrapper.find('Post').length).to.equal(1);\n        expect(wrapper.find('Loading').length).to.equal(1);\n        setTimeout(function () {\n            let html = wrapper.html();\n            expect(html).to.equal('<div class=\"title\">Post 0</div>'); // triggering a reactive change\n\n            wrapper.update();\n            const {\n                data\n            } = wrapper.find('Post').props();\n            assert.isObject(data);\n            Posts.update(data._id, {\n                $set: {\n                    'title': 'Post 0 update'\n                }\n            });\n            setTimeout(function () {\n                wrapper.update();\n                let html = wrapper.html();\n                expect(html).to.equal('<div class=\"title\">Post 0 update</div>');\n                Posts.update(data._id, {\n                    $set: {\n                        'title': 'Post 0'\n                    }\n                });\n                done();\n            }, 200);\n        }, 100);\n    });\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher-react/__tests__/main.client.js"],"names":["module","watch","require","React","default","v","shallow","mount","Authors","Groups","Posts","Categories","AuthorProfiles","authorsList","postsList","sinon","withQuery","expect","PostItemContainer","PostItemPollingContainer","PostItemReactiveContainer","PostItemErrorContainer","PostItemReactiveErrorContainer","Post","Loading","Error","describe","it","done","wrapper","loadingComponent","html","find","length","to","equal","setTimeout","update","data","props","assert","isObject","_id","$set"],"mappings":"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","file":"packages/cultofcoders:grapher-react/__tests__/main.client.js.map","sourcesContent":["import './enzyme.config';\n\nimport React from 'react';\nimport {shallow, mount} from 'enzyme';\nimport {Authors, Groups, Posts, Categories, AuthorProfiles} from './bootstrap/collections';\nimport {authorsList, postsList} from './bootstrap/namedQueries';\nimport sinon from 'sinon';\nimport {withQuery} from 'meteor/cultofcoders:grapher-react';\nimport {expect} from 'chai';\n\nimport PostItemContainer from './components/containers/PostItem';\nimport PostItemPollingContainer from './components/containers/PostItemPolling';\nimport PostItemReactiveContainer from './components/containers/PostItemReactive';\nimport PostItemErrorContainer from './components/containers/PostItemError';\nimport PostItemReactiveErrorContainer from './components/containers/PostItemReactiveError';\nimport Post from './components/dumb/Post';\nimport Loading from './components/dumb/Loading';\nimport Error from './components/dumb/Error';\n\ndescribe('withTracker()', function () {\n    it('[Static] Should load the date after mounting', function (done) {\n        const wrapper = mount(<PostItemContainer />);\n        let loadingComponent = wrapper.html();\n\n        expect(wrapper.find('Post').length).to.equal(1);\n        expect(wrapper.find('Loading').length).to.equal(1);\n\n        setTimeout(function () {\n            let html = wrapper.html();\n            expect(html).to.equal('<div class=\"title\">Post 0</div>');\n\n            done();\n        }, 100)\n    });\n\n    it('[Static] Should trigger the error if specified', function (done) {\n        const wrapper = mount(<PostItemErrorContainer />);\n\n        let html = wrapper.html();\n\n        expect(wrapper.find('Post').length).to.equal(1);\n        expect(wrapper.find('Loading').length).to.equal(1);\n\n        setTimeout(function () {\n            wrapper.update();\n            expect(wrapper.find('Error').length).to.equal(1);\n            done();\n        }, 100)\n    });\n\n\n    it('[Reactive] Should load the date after mounting', function (done) {\n        const wrapper = mount(<PostItemReactiveContainer />);\n\n        expect(wrapper.find('Post').length).to.equal(1);\n        expect(wrapper.find('Loading').length).to.equal(1);\n\n        setTimeout(function () {\n            let html = wrapper.html();\n            expect(html).to.equal('<div class=\"title\">Post 0</div>');\n\n            // triggering a reactive change\n            wrapper.update();\n            const {data} = wrapper.find('Post').props();\n            assert.isObject(data);\n\n            Posts.update(data._id, {$set: {'title': 'Post 0 update'}});\n\n            setTimeout(function () {\n                wrapper.update();\n                let html = wrapper.html();\n                expect(html).to.equal('<div class=\"title\">Post 0 update</div>');\n                Posts.update(data._id, {$set: {'title': 'Post 0'}});\n                done();\n            }, 200);\n        }, 100)\n    });\n\n    it('[Reactive] Should trigger the error if specified', function (done) {\n        const wrapper = mount(<PostItemReactiveErrorContainer />);\n\n        let html = wrapper.html();\n\n        expect(wrapper.find('Post').length).to.equal(1);\n        expect(wrapper.find('Loading').length).to.equal(1);\n\n        setTimeout(function () {\n            wrapper.update();\n            expect(wrapper.find('Error').length).to.equal(1);\n            expect(wrapper.find('Error').html()).to.equal('<div>not-good</div>')\n            done();\n        }, 100)\n    });\n\n    it('[Static] Should load the date after polling', function (done) {\n        const wrapper = mount(<PostItemPollingContainer />);\n\n        expect(wrapper.find('Post').length).to.equal(1);\n        expect(wrapper.find('Loading').length).to.equal(1);\n\n        setTimeout(function () {\n            let html = wrapper.html();\n            expect(html).to.equal('<div class=\"title\">Post 0</div>');\n\n            // triggering a reactive change\n            wrapper.update();\n            const {data} = wrapper.find('Post').props();\n            assert.isObject(data);\n\n            Posts.update(data._id, {$set: {'title': 'Post 0 update'}});\n\n            setTimeout(function () {\n                wrapper.update();\n                let html = wrapper.html();\n                expect(html).to.equal('<div class=\"title\">Post 0 update</div>');\n                Posts.update(data._id, {$set: {'title': 'Post 0'}});\n                done();\n            }, 200);\n        }, 100);\n    });\n});"]},"hash":"43f0bea4662916f9699a787f3d5b192c0b8b2ea4"}
