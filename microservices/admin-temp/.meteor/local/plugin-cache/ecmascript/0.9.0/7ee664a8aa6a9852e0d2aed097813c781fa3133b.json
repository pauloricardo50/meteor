{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"../emailConstants","imported":["EMAIL_TEMPLATES","EMAIL_IDS","CTA_URL_DEFAULT"],"specifiers":[{"kind":"named","imported":"EMAIL_TEMPLATES","local":"EMAIL_TEMPLATES"},{"kind":"named","imported":"EMAIL_IDS","local":"EMAIL_IDS"},{"kind":"named","imported":"CTA_URL_DEFAULT","local":"CTA_URL_DEFAULT"}]},{"source":"./emailHelpers","imported":["getEnrollmentUrl","notificationTemplateDefaultOverride","notificationAndCtaTemplateDefaultOverride"],"specifiers":[{"kind":"named","imported":"getEnrollmentUrl","local":"getEnrollmentUrl"},{"kind":"named","imported":"notificationTemplateDefaultOverride","local":"notificationTemplateDefaultOverride"},{"kind":"named","imported":"notificationAndCtaTemplateDefaultOverride","local":"notificationAndCtaTemplateDefaultOverride"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/email/server/emailConfigs.js","filenameRelative":"imports/core/api/email/server/emailConfigs.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/email/server/emailConfigs.js.map","sourceFileName":"imports/core/api/email/server/emailConfigs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"emailConfigs"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _EMAIL_TEMPLATES = void 0,\n    _EMAIL_IDS = void 0,\n    _CTA_URL_DEFAULT = void 0;\n\nmodule.watch(require(\"../emailConstants\"), {\n  EMAIL_TEMPLATES: function EMAIL_TEMPLATES(v) {\n    _EMAIL_TEMPLATES = v;\n  },\n  EMAIL_IDS: function EMAIL_IDS(v) {\n    _EMAIL_IDS = v;\n  },\n  CTA_URL_DEFAULT: function CTA_URL_DEFAULT(v) {\n    _CTA_URL_DEFAULT = v;\n  }\n}, 0);\n\nvar _getEnrollmentUrl = void 0,\n    _notificationTemplateDefaultOverride = void 0,\n    _notificationAndCtaTemplateDefaultOverride = void 0;\n\nmodule.watch(require(\"./emailHelpers\"), {\n  getEnrollmentUrl: function getEnrollmentUrl(v) {\n    _getEnrollmentUrl = v;\n  },\n  notificationTemplateDefaultOverride: function notificationTemplateDefaultOverride(v) {\n    _notificationTemplateDefaultOverride = v;\n  },\n  notificationAndCtaTemplateDefaultOverride: function notificationAndCtaTemplateDefaultOverride(v) {\n    _notificationAndCtaTemplateDefaultOverride = v;\n  }\n}, 1);\nvar emailConfigs = {};\nvar emailDefaults = {\n  allowUnsubscribe: false,\n  createIntlValues: function createIntlValues() {\n    return {\n      variables: []\n    };\n  }\n}; /**\n    * addEmailConfig - A function that creates a config for a given emailId\n    *\n    * @param {String} emailId A unique id representing the email, from EMAIL_IDS\n    * @param {Object} config A config object that can have the following keys:\n    * {Object} template A template object from EMAIL_TEMPLATES\n    * {Boolean} allowUnsubscribe Defines whether the email will be rendered with\n    * a footer that allows the user to unsubscribe to notifications.\n    * default is `false`\n    * {Function} createOverrides A function that takes the user's values and\n    * returns an object with overrides for the email template\n    * {Function} createIntlValues A function that takes the user's values and\n    * returns an object with intl values that need to be injected inside of the\n    * i18n strings\n    */\n\nvar addEmailConfig = function addEmailConfig(emailId, config) {\n  if (config.template === _EMAIL_TEMPLATES.NOTIFICATION) {\n    emailConfigs[emailId] = (0, _extends3.default)({\n      createOverrides: _notificationTemplateDefaultOverride\n    }, emailDefaults, config);\n  } else if (config.template === _EMAIL_TEMPLATES.NOTIFICATION_AND_CTA) {\n    emailConfigs[emailId] = (0, _extends3.default)({\n      createOverrides: _notificationAndCtaTemplateDefaultOverride\n    }, emailDefaults, config);\n  } else {\n    emailConfigs[emailId] = (0, _extends3.default)({}, emailDefaults, config);\n  }\n};\n\nvar verifyConfig = {\n  template: _EMAIL_TEMPLATES.WELCOME,\n  createOverrides: function createOverrides(_ref) {\n    var user = _ref.user,\n        url = _ref.url;\n    var variables = this.template.variables;\n    var urlWithoutHash = url.replace('#/', '');\n    return {\n      variables: [{\n        name: variables.VERIFICATION_URL,\n        content: urlWithoutHash\n      }]\n    };\n  }\n};\naddEmailConfig(_EMAIL_IDS.VERIFY_EMAIL, verifyConfig);\naddEmailConfig(_EMAIL_IDS.RESET_PASSWORD, {\n  template: _EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides: function createOverrides(_ref2, _ref3) {\n    var user = _ref2.user,\n        url = _ref2.url;\n    var title = _ref3.title,\n        body = _ref3.body,\n        cta = _ref3.cta;\n    var variables = this.template.variables;\n    var urlWithoutHash = url.replace('#/', '');\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: urlWithoutHash || _CTA_URL_DEFAULT\n      }]\n    };\n  }\n});\naddEmailConfig(_EMAIL_IDS.ENROLL_ACCOUNT, {\n  template: _EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides: function createOverrides(_ref4, _ref5) {\n    var user = _ref4.user,\n        url = _ref4.url;\n    var title = _ref5.title,\n        body = _ref5.body,\n        cta = _ref5.cta;\n    var variables = this.template.variables;\n\n    var enrollUrl = _getEnrollmentUrl(user, url);\n\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: enrollUrl || _CTA_URL_DEFAULT\n      }]\n    };\n  }\n});\naddEmailConfig(_EMAIL_IDS.VERIFICATION_REQUESTED, {\n  template: _EMAIL_TEMPLATES.NOTIFICATION\n});\naddEmailConfig(_EMAIL_IDS.VERIFICATION_ERROR, {\n  template: _EMAIL_TEMPLATES.NOTIFICATION_AND_CTA\n});\naddEmailConfig(_EMAIL_IDS.VERIFICATION_PASSED, {\n  template: _EMAIL_TEMPLATES.NOTIFICATION_AND_CTA\n});\naddEmailConfig(_EMAIL_IDS.AUCTION_STARTED, {\n  template: _EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createIntlValues: function createIntlValues(_ref6) {\n    var auctionEndTime = _ref6.auctionEndTime;\n    return {\n      date: auctionEndTime\n    };\n  }\n});\naddEmailConfig(_EMAIL_IDS.AUCTION_ENDED, {\n  template: _EMAIL_TEMPLATES.NOTIFICATION_AND_CTA\n});\naddEmailConfig(_EMAIL_IDS.AUCTION_CANCELLED, {\n  template: _EMAIL_TEMPLATES.NOTIFICATION_AND_CTA\n});\nmodule.exportDefault(emailConfigs);","map":{"version":3,"sources":["imports/core/api/email/server/emailConfigs.js"],"names":["EMAIL_TEMPLATES","EMAIL_IDS","CTA_URL_DEFAULT","module","watch","require","v","getEnrollmentUrl","notificationTemplateDefaultOverride","notificationAndCtaTemplateDefaultOverride","emailConfigs","emailDefaults","allowUnsubscribe","createIntlValues","variables","addEmailConfig","emailId","config","template","NOTIFICATION","createOverrides","NOTIFICATION_AND_CTA","verifyConfig","WELCOME","user","url","urlWithoutHash","replace","name","VERIFICATION_URL","content","VERIFY_EMAIL","RESET_PASSWORD","title","body","cta","TITLE","BODY","CTA","CTA_URL","ENROLL_ACCOUNT","enrollUrl","VERIFICATION_REQUESTED","VERIFICATION_ERROR","VERIFICATION_PASSED","AUCTION_STARTED","auctionEndTime","date","AUCTION_ENDED","AUCTION_CANCELLED","exportDefault"],"mappings":"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","file":"imports/core/api/email/server/emailConfigs.js.map","sourcesContent":["import { EMAIL_TEMPLATES, EMAIL_IDS, CTA_URL_DEFAULT } from '../emailConstants';\nimport {\n  getEnrollmentUrl,\n  notificationTemplateDefaultOverride,\n  notificationAndCtaTemplateDefaultOverride,\n} from './emailHelpers';\n\nconst emailConfigs = {};\n\nconst emailDefaults = {\n  allowUnsubscribe: false,\n  createIntlValues: () => ({ variables: [] }),\n};\n\n/**\n * addEmailConfig - A function that creates a config for a given emailId\n *\n * @param {String} emailId A unique id representing the email, from EMAIL_IDS\n * @param {Object} config A config object that can have the following keys:\n * {Object} template A template object from EMAIL_TEMPLATES\n * {Boolean} allowUnsubscribe Defines whether the email will be rendered with\n * a footer that allows the user to unsubscribe to notifications.\n * default is `false`\n * {Function} createOverrides A function that takes the user's values and\n * returns an object with overrides for the email template\n * {Function} createIntlValues A function that takes the user's values and\n * returns an object with intl values that need to be injected inside of the\n * i18n strings\n */\nconst addEmailConfig = (emailId, config) => {\n  if (config.template === EMAIL_TEMPLATES.NOTIFICATION) {\n    emailConfigs[emailId] = {\n      createOverrides: notificationTemplateDefaultOverride,\n      ...emailDefaults,\n      ...config,\n    };\n  } else if (config.template === EMAIL_TEMPLATES.NOTIFICATION_AND_CTA) {\n    emailConfigs[emailId] = {\n      createOverrides: notificationAndCtaTemplateDefaultOverride,\n      ...emailDefaults,\n      ...config,\n    };\n  } else {\n    emailConfigs[emailId] = { ...emailDefaults, ...config };\n  }\n};\n\nconst verifyConfig = {\n  template: EMAIL_TEMPLATES.WELCOME,\n  createOverrides({ user, url }) {\n    const { variables } = this.template;\n    const urlWithoutHash = url.replace('#/', '');\n\n    return {\n      variables: [\n        { name: variables.VERIFICATION_URL, content: urlWithoutHash },\n      ],\n    };\n  },\n};\naddEmailConfig(EMAIL_IDS.VERIFY_EMAIL, verifyConfig);\n\naddEmailConfig(EMAIL_IDS.RESET_PASSWORD, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ user, url }, { title, body, cta }) {\n    const { variables } = this.template;\n    const urlWithoutHash = url.replace('#/', '');\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: urlWithoutHash || CTA_URL_DEFAULT },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.ENROLL_ACCOUNT, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ user, url }, { title, body, cta }) {\n    const { variables } = this.template;\n    const enrollUrl = getEnrollmentUrl(user, url);\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: enrollUrl || CTA_URL_DEFAULT },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.VERIFICATION_REQUESTED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n});\n\naddEmailConfig(EMAIL_IDS.VERIFICATION_ERROR, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\naddEmailConfig(EMAIL_IDS.VERIFICATION_PASSED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\naddEmailConfig(EMAIL_IDS.AUCTION_STARTED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createIntlValues: ({ auctionEndTime }) => ({ date: auctionEndTime }),\n});\n\naddEmailConfig(EMAIL_IDS.AUCTION_ENDED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\naddEmailConfig(EMAIL_IDS.AUCTION_CANCELLED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\nexport default emailConfigs;\n"]},"hash":"7ee664a8aa6a9852e0d2aed097813c781fa3133b"}
