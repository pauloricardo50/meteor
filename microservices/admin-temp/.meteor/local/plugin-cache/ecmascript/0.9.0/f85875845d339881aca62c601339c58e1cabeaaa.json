{"metadata":{"usedHelpers":["classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"../loans","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loans"}]},{"source":"../constants","imported":["LOAN_STATUS","AUCTION_STATUS"],"specifiers":[{"kind":"named","imported":"LOAN_STATUS","local":"LOAN_STATUS"},{"kind":"named","imported":"AUCTION_STATUS","local":"AUCTION_STATUS"}]},{"source":"../../utils/loanFunctions","imported":["getAuctionEndTime"],"specifiers":[{"kind":"named","imported":"getAuctionEndTime","local":"getAuctionEndTime"}]}],"exports":{"exported":["LoanServiceModel"],"specifiers":[{"kind":"local","local":"LoanServiceModel","exported":"LoanServiceModel"}]}}},"options":{"filename":"imports/core/api/loans/LoanService.js","filenameRelative":"imports/core/api/loans/LoanService.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/loans/LoanService.js.map","sourceFileName":"imports/core/api/loans/LoanService.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"LoanService"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  LoanServiceModel: function LoanServiceModel() {\n    return _LoanServiceModel;\n  }\n});\nvar moment = void 0;\nmodule.watch(require(\"moment\"), {\n  default: function _default(v) {\n    moment = v;\n  }\n}, 0);\nvar Loans = void 0;\nmodule.watch(require(\"../loans\"), {\n  default: function _default(v) {\n    Loans = v;\n  }\n}, 1);\n\nvar _LOAN_STATUS = void 0,\n    _AUCTION_STATUS = void 0;\n\nmodule.watch(require(\"../constants\"), {\n  LOAN_STATUS: function LOAN_STATUS(v) {\n    _LOAN_STATUS = v;\n  },\n  AUCTION_STATUS: function AUCTION_STATUS(v) {\n    _AUCTION_STATUS = v;\n  }\n}, 2);\n\nvar _getAuctionEndTime = void 0;\n\nmodule.watch(require(\"../../utils/loanFunctions\"), {\n  getAuctionEndTime: function getAuctionEndTime(v) {\n    _getAuctionEndTime = v;\n  }\n}, 3);\n\nvar _LoanServiceModel = function _LoanServiceModel() {\n  var _this = this;\n\n  (0, _classCallCheck3.default)(this, _LoanServiceModel);\n\n  this.insert = function (_ref) {\n    var loan = _ref.loan,\n        userId = _ref.userId;\n    return Loans.insert((0, _extends3.default)({}, loan, {\n      // Do this to allow userId to be null\n      userId: userId\n    }));\n  };\n\n  this.update = function (_ref2) {\n    var loanId = _ref2.loanId,\n        loan = _ref2.loan;\n    console.log(loan);\n    Loans.update(loanId, {\n      $set: loan\n    });\n  };\n\n  this.remove = function (_ref3) {\n    var loanId = _ref3.loanId;\n    return Loans.remove(loanId);\n  };\n\n  this.incrementStep = function (_ref4) {\n    var loanId = _ref4.loanId;\n    return Loans.update(loanId, {\n      $inc: {\n        'logic.step': 1\n      }\n    });\n  };\n\n  this.askVerification = function (_ref5) {\n    var loanId = _ref5.loanId;\n    var loan = Loans.findOne(loanId);\n\n    if (loan.logic.verification.requested) {\n      // Don't do anything if this loan is already in requested mode\n      return false;\n    }\n\n    return Loans.update(loanId, {\n      $set: {\n        'logic.verification.requested': true,\n        'logic.verification.requestedTime': new Date()\n      }\n    });\n  };\n\n  this.startAuction = function (_ref6) {\n    var loanId = _ref6.loanId;\n    var loan = Loans.findOne(loanId);\n\n    if (loan.logic.auction.status !== _AUCTION_STATUS.NONE) {\n      // Don't do anything if this auction has already started or ended\n      return false;\n    }\n\n    return Loans.update(loanId, {\n      $set: {\n        'logic.auction.status': _AUCTION_STATUS.STARTED,\n        'logic.auction.startTime': moment().toDate(),\n        'logic.auction.endTime': _getAuctionEndTime(moment())\n      }\n    });\n  };\n\n  this.endAuction = function (_ref7) {\n    var loanId = _ref7.loanId;\n    var loan = Loans.findOne(loanId); // This method is called in the future (through a job),\n    // so only call this if the auction is ongoing\n\n    if (!loan || loan.logic.auction.status !== _AUCTION_STATUS.STARTED) {\n      return false;\n    }\n\n    return Loans.update(id, {\n      $set: {\n        'logic.auction.status': _AUCTION_STATUS.ENDED,\n        'logic.auction.endTime': new Date()\n      }\n    });\n  };\n\n  this.cancelAuction = function (_ref8) {\n    var loanId = _ref8.loanId;\n    return _this.update(loanId, {\n      $set: {\n        'logic.auction.endTime': undefined,\n        'logic.auction.status': '',\n        'logic.auction.startTime': undefined\n      }\n    });\n  };\n\n  this.confirmClosing = function (_ref9) {\n    var loanId = _ref9.loanId,\n        object = _ref9.object;\n    return Loans.update(loanId, {\n      $set: (0, _extends3.default)({\n        status: _LOAN_STATUS.DONE\n      }, object)\n    });\n  };\n} // TODO: make sure step is really done\n;\n\nvar LoanService = new _LoanServiceModel({});\nmodule.exportDefault(LoanService);","map":{"version":3,"sources":["imports/core/api/loans/LoanService.js"],"names":["module","export","LoanServiceModel","moment","watch","require","default","v","Loans","LOAN_STATUS","AUCTION_STATUS","getAuctionEndTime","insert","loan","userId","update","loanId","console","log","$set","remove","incrementStep","$inc","askVerification","findOne","logic","verification","requested","Date","startAuction","auction","status","NONE","STARTED","toDate","endAuction","id","ENDED","cancelAuction","undefined","confirmClosing","object","DONE","LoanService","exportDefault"],"mappings":"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","file":"imports/core/api/loans/LoanService.js.map","sourcesContent":["import moment from 'moment';\nimport Loans from '../loans';\n\nimport { LOAN_STATUS, AUCTION_STATUS } from '../constants';\nimport { getAuctionEndTime } from '../../utils/loanFunctions';\n\nclass LoanServiceModel {\n  insert = ({ loan, userId }) =>\n    Loans.insert({\n      ...loan,\n      // Do this to allow userId to be null\n      userId,\n    });\n\n  update = ({ loanId, loan }) => {\n    console.log(loan);\n    Loans.update(loanId, { $set: loan });\n  };\n\n  remove = ({ loanId }) => Loans.remove(loanId);\n\n  // TODO: make sure step is really done\n  incrementStep = ({ loanId }) =>\n    Loans.update(loanId, { $inc: { 'logic.step': 1 } });\n\n  askVerification = ({ loanId }) => {\n    const loan = Loans.findOne(loanId);\n\n    if (loan.logic.verification.requested) {\n      // Don't do anything if this loan is already in requested mode\n      return false;\n    }\n\n    return Loans.update(loanId, {\n      $set: {\n        'logic.verification.requested': true,\n        'logic.verification.requestedTime': new Date(),\n      },\n    });\n  };\n\n  startAuction = ({ loanId }) => {\n    const loan = Loans.findOne(loanId);\n\n    if (loan.logic.auction.status !== AUCTION_STATUS.NONE) {\n      // Don't do anything if this auction has already started or ended\n      return false;\n    }\n\n    return Loans.update(loanId, {\n      $set: {\n        'logic.auction.status': AUCTION_STATUS.STARTED,\n        'logic.auction.startTime': moment().toDate(),\n        'logic.auction.endTime': getAuctionEndTime(moment()),\n      },\n    });\n  };\n\n  endAuction = ({ loanId }) => {\n    const loan = Loans.findOne(loanId);\n\n    // This method is called in the future (through a job),\n    // so only call this if the auction is ongoing\n    if (!loan || loan.logic.auction.status !== AUCTION_STATUS.STARTED) {\n      return false;\n    }\n\n    return Loans.update(id, {\n      $set: {\n        'logic.auction.status': AUCTION_STATUS.ENDED,\n        'logic.auction.endTime': new Date(),\n      },\n    });\n  };\n\n  cancelAuction = ({ loanId }) =>\n    this.update(loanId, {\n      $set: {\n        'logic.auction.endTime': undefined,\n        'logic.auction.status': '',\n        'logic.auction.startTime': undefined,\n      },\n    });\n\n  confirmClosing = ({ loanId, object }) =>\n    Loans.update(loanId, {\n      $set: {\n        status: LOAN_STATUS.DONE,\n        ...object,\n      },\n    });\n}\n\nconst LoanService = new LoanServiceModel({});\n\nexport { LoanServiceModel };\nexport default LoanService;\n"]},"hash":"f85875845d339881aca62c601339c58e1cabeaaa"}
