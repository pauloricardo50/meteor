{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":["ReducerNode"],"specifiers":[{"kind":"local","local":"ReducerNode","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"reducerNode"},"ignored":false,"code":"module.export({\n    default: () => ReducerNode\n});\n\nclass ReducerNode {\n    constructor(name, {\n        body,\n        reduce\n    }) {\n        this.name = name;\n        this.body = body;\n        this.reduceFunction = reduce;\n    } /**\n       * When computing we also pass the parameters\n       * \n       * @param {*} object \n       * @param {*} args \n       */\n\n    compute(object, ...args) {\n        object[this.name] = this.reduce.call(this, object, ...args);\n    }\n\n    reduce(object, ...args) {\n        return this.reduceFunction.call(this, object, ...args);\n    }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js"],"names":["module","export","default","ReducerNode","constructor","name","body","reduce","reduceFunction","compute","object","args","call"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,aAAQ,MAAIC;AAAb,CAAd;;AAAe,MAAMA,WAAN,CAAkB;AAC7BC,gBAAYC,IAAZ,EAAkB;AAACC,YAAD;AAAOC;AAAP,KAAlB,EAAkC;AAC9B,aAAKF,IAAL,GAAYA,IAAZ;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKE,cAAL,GAAsBD,MAAtB;AACH,KAL4B,CAO7B;;;;;;;AAMAE,YAAQC,MAAR,EAAgB,GAAGC,IAAnB,EAAyB;AACrBD,eAAO,KAAKL,IAAZ,IAAoB,KAAKE,MAAL,CAAYK,IAAZ,CAAiB,IAAjB,EAAuBF,MAAvB,EAA+B,GAAGC,IAAlC,CAApB;AACH;;AAEDJ,WAAOG,MAAP,EAAe,GAAGC,IAAlB,EAAwB;AACpB,eAAO,KAAKH,cAAL,CAAoBI,IAApB,CAAyB,IAAzB,EAA+BF,MAA/B,EAAuC,GAAGC,IAA1C,CAAP;AACH;;AAnB4B","file":"packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js.map","sourcesContent":["export default class ReducerNode {\n    constructor(name, {body, reduce}) {\n        this.name = name;\n        this.body = body;\n        this.reduceFunction = reduce;\n    }\n\n    /**\n     * When computing we also pass the parameters\n     * \n     * @param {*} object \n     * @param {*} args \n     */\n    compute(object, ...args) {\n        object[this.name] = this.reduce.call(this, object, ...args);\n    }\n\n    reduce(object, ...args) {\n        return this.reduceFunction.call(this, object, ...args);\n    }\n}"]},"hash":"e6f8f4c676f2acef508b54502e5223c2379dda76"}
