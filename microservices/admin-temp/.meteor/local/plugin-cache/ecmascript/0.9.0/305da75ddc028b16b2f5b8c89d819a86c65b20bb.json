{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","defineProperty","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"react-intl","imported":["injectIntl"],"specifiers":[{"kind":"named","imported":"injectIntl","local":"injectIntl"}]},{"source":"../../api/cleanMethods","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"cleanMethod"}]},{"source":"../../api/files/files","imported":["getFileCount"],"specifiers":[{"kind":"named","imported":"getFileCount","local":"getFileCount"}]},{"source":"../../utils/bert","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"bert"}]},{"source":"../../api/files/meteor-slingshot","imported":["allowedFileTypes","maxSize"],"specifiers":[{"kind":"named","imported":"allowedFileTypes","local":"allowedFileTypes"},{"kind":"named","imported":"maxSize","local":"maxSize"}]},{"source":"../../api/constants","imported":["FILE_STATUS"],"specifiers":[{"kind":"named","imported":"FILE_STATUS","local":"FILE_STATUS"}]},{"source":"./Title","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Title"}]},{"source":"./File","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"File"}]},{"source":"./TempFile","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TempFile"}]},{"source":"./FileAdder","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"FileAdder"}]},{"source":"./FileDropper","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"FileDropper"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/UploaderArray/Uploader.jsx","filenameRelative":"imports/core/components/UploaderArray/Uploader.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/UploaderArray/Uploader.jsx.map","sourceFileName":"imports/core/components/UploaderArray/Uploader.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Uploader"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\");\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar React = void 0,\n    _Component = void 0;\n\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  },\n  Component: function Component(v) {\n    _Component = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 1);\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 2);\n\nvar _injectIntl = void 0;\n\nmodule.watch(require(\"react-intl\"), {\n  injectIntl: function injectIntl(v) {\n    _injectIntl = v;\n  }\n}, 3);\nvar cleanMethod = void 0;\nmodule.watch(require(\"../../api/cleanMethods\"), {\n  default: function _default(v) {\n    cleanMethod = v;\n  }\n}, 4);\n\nvar _getFileCount = void 0;\n\nmodule.watch(require(\"../../api/files/files\"), {\n  getFileCount: function getFileCount(v) {\n    _getFileCount = v;\n  }\n}, 5);\nvar bert = void 0;\nmodule.watch(require(\"../../utils/bert\"), {\n  default: function _default(v) {\n    bert = v;\n  }\n}, 6);\n\nvar _allowedFileTypes = void 0,\n    _maxSize = void 0;\n\nmodule.watch(require(\"../../api/files/meteor-slingshot\"), {\n  allowedFileTypes: function allowedFileTypes(v) {\n    _allowedFileTypes = v;\n  },\n  maxSize: function maxSize(v) {\n    _maxSize = v;\n  }\n}, 7);\n\nvar _FILE_STATUS = void 0;\n\nmodule.watch(require(\"../../api/constants\"), {\n  FILE_STATUS: function FILE_STATUS(v) {\n    _FILE_STATUS = v;\n  }\n}, 8);\nvar Title = void 0;\nmodule.watch(require(\"./Title\"), {\n  default: function _default(v) {\n    Title = v;\n  }\n}, 9);\nvar File = void 0;\nmodule.watch(require(\"./File\"), {\n  default: function _default(v) {\n    File = v;\n  }\n}, 10);\nvar TempFile = void 0;\nmodule.watch(require(\"./TempFile\"), {\n  default: function _default(v) {\n    TempFile = v;\n  }\n}, 11);\nvar FileAdder = void 0;\nmodule.watch(require(\"./FileAdder\"), {\n  default: function _default(v) {\n    FileAdder = v;\n  }\n}, 12);\nvar FileDropper = void 0;\nmodule.watch(require(\"./FileDropper\"), {\n  default: function _default(v) {\n    FileDropper = v;\n  }\n}, 13);\n\nvar checkFile = function checkFile(file) {\n  if (_allowedFileTypes.indexOf(file.type) < 0) {\n    return 'fileType';\n  } else if (file.size > _maxSize) {\n    return 'fileSize';\n  }\n\n  return true;\n};\n\nvar Uploader = function (_Component2) {\n  (0, _inherits3.default)(Uploader, _Component2);\n\n  function Uploader(props) {\n    (0, _classCallCheck3.default)(this, Uploader);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Uploader.__proto__ || Object.getPrototypeOf(Uploader)).call(this, props));\n\n    _this.handleAddFiles = function () {\n      var files = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var fileArray = [];\n      var showError = false;\n      files.forEach(function (file) {\n        var isValid = checkFile(file);\n\n        if (isValid === true) {\n          fileArray.push(file);\n        } else {\n          showError = isValid;\n        }\n      });\n\n      if (showError) {\n        var intl = _this.props.intl;\n        var f = intl.formatMessage;\n        bert(f({\n          id: \"error.\" + showError + \".title\"\n        }), f({\n          id: \"error.\" + showError + \".description\"\n        }), 'danger');\n        return;\n      }\n\n      _this.setState(function (prev) {\n        return {\n          tempFiles: [].concat(_toConsumableArray(prev.tempFiles), _toConsumableArray(files))\n        };\n      });\n    };\n\n    _this.handleSave = function (file, downloadUrl) {\n      var _this$props = _this.props,\n          currentValue = _this$props.currentValue,\n          docId = _this$props.docId,\n          pushFunc = _this$props.pushFunc,\n          fileMeta = _this$props.fileMeta;\n\n      var _getFileCount2 = _getFileCount(currentValue),\n          fileCount = _getFileCount2.fileCount,\n          fileCountString = _getFileCount2.fileCountString;\n\n      var object = (0, _defineProperty3.default)({}, \"files.\" + fileMeta.id, {\n        name: \"\" + fileCountString + file.name,\n        initialName: file.name,\n        size: file.size,\n        type: file.type,\n        url: encodeURI(downloadUrl),\n        // To avoid spaces and unallowed chars\n        key: downloadUrl.split('amazonaws.com/')[1],\n        status: _FILE_STATUS.UNVERIFIED,\n        fileCount: fileCount\n      });\n      cleanMethod(pushFunc, {\n        object: object,\n        id: docId\n      }).then(function () {});\n    };\n\n    _this.handleRemove = function (key) {\n      _Meteor.call('deleteFile', key, function (err) {\n        if (!err) {\n          var _this$props2 = _this.props,\n              currentValue = _this$props2.currentValue,\n              docId = _this$props2.docId,\n              updateFunc = _this$props2.updateFunc,\n              fileMeta = _this$props2.fileMeta; // Filter out the file we want to delete\n\n          var newFileArray = currentValue.filter(function (file) {\n            return file.key !== key;\n          });\n          var object = (0, _defineProperty3.default)({}, \"files.\" + fileMeta.id, newFileArray);\n          cleanMethod(updateFunc, {\n            object: object,\n            id: docId\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      tempFiles: []\n    };\n    return _this;\n  } // Remove temp files from state when they are saved to the DB, and appear in\n  // props.\n  // FIXME: This prevents someone from uploading a file with the same name twice\n\n\n  (0, _createClass3.default)(Uploader, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var nextValue = nextProps.currentValue;\n      var currentValue = this.props.currentValue;\n\n      if (nextValue.length !== currentValue.length) {\n        var tempFiles = this.state.tempFiles;\n\n        if (tempFiles && tempFiles.length) {\n          nextValue.forEach(function (file) {\n            tempFiles.forEach(function (temp) {\n              if (temp.name === file.initialName) {\n                _this2.setState(function (prev) {\n                  return {\n                    tempFiles: prev.tempFiles.filter(function (f) {\n                      return f.name !== file.initialName;\n                    })\n                  };\n                });\n              }\n            });\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          fileMeta = _props.fileMeta,\n          currentValue = _props.currentValue,\n          disabled = _props.disabled,\n          docId = _props.docId,\n          collection = _props.collection,\n          pushFunc = _props.pushFunc;\n      var tempFiles = this.state.tempFiles;\n      var id = fileMeta.id; // If one of the files has an error, allow uploading even if form is disabled\n\n      var disableAdd = currentValue.reduce(function (acc, f) {\n        return !(f.status === _FILE_STATUS.ERROR);\n      }, true) && disabled;\n      return React.createElement(\n        FileDropper,\n        {\n          className: \"uploader\",\n          handleAddFiles: this.handleAddFiles,\n          disabled: disableAdd\n        },\n        React.createElement(Title, (0, _extends3.default)({}, fileMeta, {\n          currentValue: currentValue\n        })),\n        currentValue.sort(function (a, b) {\n          return a.fileCount > b.fileCount;\n        }).map(function (f) {\n          return React.createElement(File, {\n            key: f.key,\n            file: f,\n            disabled: disabled,\n            handleRemove: _this3.handleRemove\n          });\n        }),\n        tempFiles.map(function (f, i) {\n          return React.createElement(TempFile, {\n            file: f,\n            key: f.name + i // if the same file is uploaded twice there's a conflict\n            ,\n            docId: docId,\n            collection: collection,\n            handleSave: _this3.handleSave,\n            id: id,\n            currentValue: currentValue\n          });\n        }),\n        !disableAdd && React.createElement(FileAdder, {\n          id: fileMeta.id,\n          handleAddFiles: this.handleAddFiles,\n          docId: docId\n        })\n      );\n    }\n  }]);\n  return Uploader;\n}(_Component);\n\nUploader.propTypes = {\n  fileMeta: PropTypes.objectOf(PropTypes.any).isRequired,\n  pushFunc: PropTypes.string,\n  updateFunc: PropTypes.string,\n  docId: PropTypes.string.isRequired,\n  currentValue: PropTypes.arrayOf(PropTypes.object),\n  disabled: PropTypes.bool.isRequired,\n  collection: PropTypes.string\n};\nUploader.defaultProps = {\n  currentValue: [],\n  pushFunc: 'pushLoanValue',\n  updateFunc: 'updateLoan',\n  collection: 'loans'\n};\nmodule.exportDefault(_injectIntl(Uploader));","map":{"version":3,"sources":["imports/core/components/UploaderArray/Uploader.jsx"],"names":["React","Component","module","watch","require","default","v","PropTypes","Meteor","injectIntl","cleanMethod","getFileCount","bert","allowedFileTypes","maxSize","FILE_STATUS","Title","File","TempFile","FileAdder","FileDropper","checkFile","file","indexOf","type","size","Uploader","props","handleAddFiles","files","fileArray","showError","forEach","isValid","push","intl","f","formatMessage","id","setState","tempFiles","prev","handleSave","downloadUrl","currentValue","docId","pushFunc","fileMeta","fileCount","fileCountString","object","name","initialName","url","encodeURI","key","split","status","UNVERIFIED","then","handleRemove","call","err","updateFunc","newFileArray","filter","state","nextProps","nextValue","length","temp","disabled","collection","disableAdd","reduce","acc","ERROR","sort","a","b","map","i","propTypes","objectOf","any","isRequired","string","arrayOf","bool","defaultProps","exportDefault"],"mappings":"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","file":"imports/core/components/UploaderArray/Uploader.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Meteor } from 'meteor/meteor';\nimport { injectIntl } from 'react-intl';\n\nimport cleanMethod from 'core/api/cleanMethods';\nimport { getFileCount } from 'core/api/files/files';\nimport bert from 'core/utils/bert';\nimport { allowedFileTypes, maxSize } from 'core/api/files/meteor-slingshot';\nimport { FILE_STATUS } from '../../api/constants';\n\nimport Title from './Title';\nimport File from './File';\nimport TempFile from './TempFile';\nimport FileAdder from './FileAdder';\nimport FileDropper from './FileDropper';\n\nconst checkFile = (file) => {\n  if (allowedFileTypes.indexOf(file.type) < 0) {\n    return 'fileType';\n  } else if (file.size > maxSize) {\n    return 'fileSize';\n  }\n  return true;\n};\n\nclass Uploader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { tempFiles: [] };\n  }\n\n  // Remove temp files from state when they are saved to the DB, and appear in\n  // props.\n  // FIXME: This prevents someone from uploading a file with the same name twice\n  componentWillReceiveProps(nextProps) {\n    const { currentValue: nextValue } = nextProps;\n    const { currentValue } = this.props;\n\n    if (nextValue.length !== currentValue.length) {\n      const { tempFiles } = this.state;\n\n      if (tempFiles && tempFiles.length) {\n        nextValue.forEach((file) => {\n          tempFiles.forEach((temp) => {\n            if (temp.name === file.initialName) {\n              this.setState(prev => ({\n                tempFiles: prev.tempFiles.filter(f => f.name !== file.initialName),\n              }));\n            }\n          });\n        });\n      }\n    }\n  }\n\n  handleAddFiles = (files = []) => {\n    const fileArray = [];\n    let showError = false;\n\n    files.forEach((file) => {\n      const isValid = checkFile(file);\n      if (isValid === true) {\n        fileArray.push(file);\n      } else {\n        showError = isValid;\n      }\n    });\n\n    if (showError) {\n      const { intl } = this.props;\n      const { formatMessage: f } = intl;\n      bert(\n        f({ id: `error.${showError}.title` }),\n        f({ id: `error.${showError}.description` }),\n        'danger',\n      );\n      return;\n    }\n\n    this.setState(prev => ({ tempFiles: [...prev.tempFiles, ...files] }));\n  };\n\n  handleSave = (file, downloadUrl) => {\n    const { currentValue, docId, pushFunc, fileMeta } = this.props;\n    const { fileCount, fileCountString } = getFileCount(currentValue);\n\n    const object = {\n      [`files.${fileMeta.id}`]: {\n        name: `${fileCountString}${file.name}`,\n        initialName: file.name,\n        size: file.size,\n        type: file.type,\n        url: encodeURI(downloadUrl), // To avoid spaces and unallowed chars\n        key: downloadUrl.split('amazonaws.com/')[1],\n        status: FILE_STATUS.UNVERIFIED,\n        fileCount,\n      },\n    };\n\n    cleanMethod(pushFunc, { object, id: docId }).then(() => {});\n  };\n\n  handleRemove = (key) => {\n    Meteor.call('deleteFile', key, (err) => {\n      if (!err) {\n        const { currentValue, docId, updateFunc, fileMeta } = this.props;\n        // Filter out the file we want to delete\n        const newFileArray = currentValue.filter(file => file.key !== key);\n        const object = { [`files.${fileMeta.id}`]: newFileArray };\n\n        cleanMethod(updateFunc, { object, id: docId });\n      }\n    });\n  };\n\n  render() {\n    const {\n      fileMeta,\n      currentValue,\n      disabled,\n      docId,\n      collection,\n      pushFunc,\n    } = this.props;\n    const { tempFiles } = this.state;\n    const { id } = fileMeta;\n    // If one of the files has an error, allow uploading even if form is disabled\n    const disableAdd =\n      currentValue.reduce(\n        (acc, f) => !(f.status === FILE_STATUS.ERROR),\n        true,\n      ) && disabled;\n\n    return (\n      <FileDropper\n        className=\"uploader\"\n        handleAddFiles={this.handleAddFiles}\n        disabled={disableAdd}\n      >\n        <Title {...fileMeta} currentValue={currentValue} />\n\n        {currentValue\n          .sort((a, b) => a.fileCount > b.fileCount)\n          .map(f => (\n            <File\n              key={f.key}\n              file={f}\n              disabled={disabled}\n              handleRemove={this.handleRemove}\n            />\n          ))}\n\n        {tempFiles.map((f, i) => (\n          <TempFile\n            file={f}\n            key={f.name + i} // if the same file is uploaded twice there's a conflict\n            docId={docId}\n            collection={collection}\n            handleSave={this.handleSave}\n            id={id}\n            currentValue={currentValue}\n          />\n        ))}\n\n        {!disableAdd && (\n          <FileAdder\n            id={fileMeta.id}\n            handleAddFiles={this.handleAddFiles}\n            docId={docId}\n          />\n        )}\n      </FileDropper>\n    );\n  }\n}\n\nUploader.propTypes = {\n  fileMeta: PropTypes.objectOf(PropTypes.any).isRequired,\n  pushFunc: PropTypes.string,\n  updateFunc: PropTypes.string,\n  docId: PropTypes.string.isRequired,\n  currentValue: PropTypes.arrayOf(PropTypes.object),\n  disabled: PropTypes.bool.isRequired,\n  collection: PropTypes.string,\n};\n\nUploader.defaultProps = {\n  currentValue: [],\n  pushFunc: 'pushLoanValue',\n  updateFunc: 'updateLoan',\n  collection: 'loans',\n};\n\nexport default injectIntl(Uploader);\n"]},"hash":"305da75ddc028b16b2f5b8c89d819a86c65b20bb"}
