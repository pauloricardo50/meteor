{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"../../../core/components/DropdownMenu","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"DropdownMenu"}]},{"source":"../../../core/api","imported":["callMutation","mutations"],"specifiers":[{"kind":"named","imported":"callMutation","local":"callMutation"},{"kind":"named","imported":"mutations","local":"mutations"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","filenameRelative":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourceFileName":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TasksAssignedUserDropdown"},"ignored":false,"code":"\"use strict\";\n\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  }\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 1);\nvar DropdownMenu = void 0;\nmodule.watch(require(\"../../../core/components/DropdownMenu\"), {\n  default: function _default(v) {\n    DropdownMenu = v;\n  }\n}, 2);\n\nvar _callMutation = void 0,\n    _mutations = void 0;\n\nmodule.watch(require(\"../../../core/api\"), {\n  callMutation: function callMutation(v) {\n    _callMutation = v;\n  },\n  mutations: function mutations(v) {\n    _mutations = v;\n  }\n}, 3);\n\nvar firstUserAssign = function firstUserAssign(_ref) {\n  var taskAssignedTo = _ref.taskAssignedTo,\n      relatedUserId = _ref.relatedUserId,\n      user = _ref.user,\n      taskId = _ref.taskId,\n      taskType = _ref.taskType;\n\n  if (!taskAssignedTo) {\n    _callMutation(_mutations.ASSIGN_ADMIN_TO_NEW_USER_TASK, {\n      userId: relatedUserId,\n      adminId: user._id,\n      taskId: taskId,\n      taskType: taskType\n    });\n  } else {\n    _callMutation(_mutations.TASK_CHANGE_ASSIGNED_TO, {\n      taskId: taskId,\n      newAssignee: user._id\n    });\n  }\n};\n\nvar changeAssignedUser = function changeAssignedUser(_ref2) {\n  var user = _ref2.user,\n      task = _ref2.task,\n      taskAssignedTo = _ref2.taskAssignedTo;\n  var taskUserId = task.user ? task.user._id : undefined;\n\n  if (!taskUserId) {\n    _callMutation(_mutations.TASK_GET_RELATED_TO, {\n      task: task\n    }).then(function (relatedUserId) {\n      firstUserAssign({\n        taskAssignedTo: taskAssignedTo,\n        relatedUserId: relatedUserId,\n        user: user,\n        taskId: task._id,\n        taskType: task.type\n      });\n    });\n  } else {\n    firstUserAssign({\n      taskAssignedTo: taskAssignedTo,\n      relatedUserId: taskUserId,\n      user: user,\n      taskId: task._id,\n      taskType: task.type\n    });\n  }\n};\n\nvar getMenuItems = function getMenuItems(users, task) {\n  var taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n  var options = users.map(function (user) {\n    return {\n      id: user._id,\n      show: user._id !== taskUser,\n      label: user.emails[0].address,\n      link: false,\n      onClick: function onClick() {\n        changeAssignedUser(user._id, taskId);\n      }\n    };\n  });\n  return options;\n};\n\nvar TasksAssignedUserDropdown = function TasksAssignedUserDropdown(props) {\n  var data = props.data,\n      isLoading = props.isLoading,\n      error = props.error,\n      task = props.task,\n      styles = props.styles;\n\n  if (isLoading) {\n    return null;\n  }\n\n  if (error) {\n    return React.createElement(\n      \"div\",\n      null,\n      \"Error: \",\n      error.reason\n    );\n  }\n\n  return React.createElement(DropdownMenu, {\n    iconType: \"personAdd\",\n    options: getMenuItems(data, task),\n    style: styles\n  });\n};\n\nmodule.exportDefault(TasksAssignedUserDropdown);","map":{"version":3,"sources":["imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx"],"names":["React","module","watch","require","default","v","PropTypes","DropdownMenu","callMutation","mutations","firstUserAssign","taskAssignedTo","relatedUserId","user","taskId","taskType","ASSIGN_ADMIN_TO_NEW_USER_TASK","userId","adminId","_id","TASK_CHANGE_ASSIGNED_TO","newAssignee","changeAssignedUser","task","taskUserId","undefined","TASK_GET_RELATED_TO","then","type","getMenuItems","users","assignedUser","options","map","id","show","taskUser","label","emails","address","link","onClick","TasksAssignedUserDropdown","props","data","isLoading","error","styles","reason","exportDefault"],"mappings":"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","file":"imports/ui/pages/TasksPage/TasksAssignedUserDropdown.jsx.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DropdownMenu from 'core/components/DropdownMenu/';\nimport { callMutation, mutations } from 'core/api';\n\nconst firstUserAssign = ({\n  taskAssignedTo,\n  relatedUserId,\n  user,\n  taskId,\n  taskType,\n}) => {\n  if (!taskAssignedTo) {\n    callMutation(mutations.ASSIGN_ADMIN_TO_NEW_USER_TASK, {\n      userId: relatedUserId,\n      adminId: user._id,\n      taskId,\n      taskType,\n    });\n  } else {\n    callMutation(mutations.TASK_CHANGE_ASSIGNED_TO, {\n      taskId,\n      newAssignee: user._id,\n    });\n  }\n};\n\nconst changeAssignedUser = ({ user, task, taskAssignedTo }) => {\n  const taskUserId = task.user ? task.user._id : undefined;\n  if (!taskUserId) {\n    callMutation(mutations.TASK_GET_RELATED_TO, {\n      task,\n    }).then((relatedUserId) => {\n      firstUserAssign({\n        taskAssignedTo,\n        relatedUserId,\n        user,\n        taskId: task._id,\n        taskType: task.type,\n      });\n    });\n  } else {\n    firstUserAssign({\n      taskAssignedTo,\n      relatedUserId: taskUserId,\n      user,\n      taskId: task._id,\n      taskType: task.type,\n    });\n  }\n};\n\nconst getMenuItems = (users, task) => {\n  const taskAssignedTo = task.assignedUser ? task.assignedUser._id : undefined;\n  const options = users.map(user => ({\n    id: user._id,\n    show: user._id !== taskUser,\n    label: user.emails[0].address,\n    link: false,\n    onClick: () => {\n      changeAssignedUser(user._id, taskId);\n    },\n  }));\n  return options;\n};\n\nconst TasksAssignedUserDropdown = (props) => {\n  const { data, isLoading, error, task, styles } = props;\n\n  if (isLoading) {\n    return null;\n  }\n  if (error) {\n    return <div>Error: {error.reason}</div>;\n  }\n\n  return (\n    <DropdownMenu\n      iconType=\"personAdd\"\n      options={getMenuItems(data, task)}\n      style={styles}\n    />\n  );\n};\n\nexport default TasksAssignedUserDropdown;\n"]},"hash":"54bd849e775123c6548075cd84c83870e4c085b5"}
