{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"../../../utils/intl","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"formatMessage"}]},{"source":"../emailConstants","imported":["FROM_DEFAULT","CTA_URL_DEFAULT","EMAIL_I18N_NAMESPACE","EMAIL_PARTS"],"specifiers":[{"kind":"named","imported":"FROM_DEFAULT","local":"FROM_DEFAULT"},{"kind":"named","imported":"CTA_URL_DEFAULT","local":"CTA_URL_DEFAULT"},{"kind":"named","imported":"EMAIL_I18N_NAMESPACE","local":"EMAIL_I18N_NAMESPACE"},{"kind":"named","imported":"EMAIL_PARTS","local":"EMAIL_PARTS"}]}],"exports":{"exported":["getEmailFooter","getEmailPart","getEmailContent","getEnrollmentUrl","notificationTemplateDefaultOverride","params","title","body","notificationAndCtaTemplateDefaultOverride","params","title","body","cta"],"specifiers":[{"kind":"local","local":"getEmailFooter","exported":"getEmailFooter"},{"kind":"local","local":"getEmailPart","exported":"getEmailPart"},{"kind":"local","local":"getEmailContent","exported":"getEmailContent"},{"kind":"local","local":"getEnrollmentUrl","exported":"getEnrollmentUrl"},{"kind":"local","local":"notificationTemplateDefaultOverride","exported":"notificationTemplateDefaultOverride"},{"kind":"local","local":"params","exported":"params"},{"kind":"local","local":"title","exported":"title"},{"kind":"local","local":"body","exported":"body"},{"kind":"local","local":"notificationAndCtaTemplateDefaultOverride","exported":"notificationAndCtaTemplateDefaultOverride"},{"kind":"local","local":"params","exported":"params"},{"kind":"local","local":"title","exported":"title"},{"kind":"local","local":"body","exported":"body"},{"kind":"local","local":"cta","exported":"cta"}]}}},"options":{"filename":"imports/core/api/email/server/emailHelpers.js","filenameRelative":"imports/core/api/email/server/emailHelpers.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/email/server/emailHelpers.js.map","sourceFileName":"imports/core/api/email/server/emailHelpers.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"emailHelpers"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.notificationAndCtaTemplateDefaultOverride = exports.notificationTemplateDefaultOverride = exports.getEmailFooter = undefined;\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  getEmailFooter: function getEmailFooter() {\n    return _getEmailFooter;\n  },\n  getEmailPart: function getEmailPart() {\n    return _getEmailPart;\n  },\n  getEmailContent: function getEmailContent() {\n    return _getEmailContent;\n  },\n  getEnrollmentUrl: function getEnrollmentUrl() {\n    return _getEnrollmentUrl;\n  },\n  notificationTemplateDefaultOverride: function notificationTemplateDefaultOverride() {\n    return _notificationTemplateDefaultOverride;\n  },\n  notificationAndCtaTemplateDefaultOverride: function notificationAndCtaTemplateDefaultOverride() {\n    return _notificationAndCtaTemplateDefaultOverride;\n  }\n});\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\nvar formatMessage = void 0;\nmodule.watch(require(\"../../../utils/intl\"), {\n  default: function _default(v) {\n    formatMessage = v;\n  }\n}, 1);\n\nvar _FROM_DEFAULT = void 0,\n    _CTA_URL_DEFAULT = void 0,\n    _EMAIL_I18N_NAMESPACE = void 0,\n    _EMAIL_PARTS = void 0;\n\nexports.getEmailFooter = _getEmailFooter;\nmodule.watch(require(\"../emailConstants\"), {\n  FROM_DEFAULT: function FROM_DEFAULT(v) {\n    _FROM_DEFAULT = v;\n  },\n  CTA_URL_DEFAULT: function CTA_URL_DEFAULT(v) {\n    _CTA_URL_DEFAULT = v;\n  },\n  EMAIL_I18N_NAMESPACE: function EMAIL_I18N_NAMESPACE(v) {\n    _EMAIL_I18N_NAMESPACE = v;\n  },\n  EMAIL_PARTS: function EMAIL_PARTS(v) {\n    _EMAIL_PARTS = v;\n  }\n}, 2);\nvar WWW_URL = _Meteor.settings.public.subdomains.www;\nvar APP_URL = _Meteor.settings.public.subdomains.app; /**\n                                                       * emailFooter - Returns the default email footer for all emails\n                                                       *\n                                                       * @param {boolean} [unsubscribe=true] Whether to show an unsubscribe line or not\n                                                       *\n                                                       * @return {type} a HTML string\n                                                       */\n\nvar _getEmailFooter = function _getEmailFooter() {\n  var allowUnsubscribe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  return formatMessage('emails.footer', {\n    copyright: '<em>&copy; *|CURRENT_YEAR|* e-Potek</em><br /><br />',\n    url: \"<a href=\\\"\" + WWW_URL + \"\\\" target=\\\"_blank\\\">e-potek.ch</a><br />\",\n    unsubscribe: allowUnsubscribe ? \"<a href=\\\"*|UNSUB|*\\\">\" + formatMessage('emails.unsubscribe') + \"</a>\" : ''\n  });\n};\n\nexports.notificationTemplateDefaultOverride = _notificationTemplateDefaultOverride;\n\nvar _getEmailPart = function _getEmailPart(_ref) {\n  var emailId = _ref.emailId,\n      part = _ref.part,\n      _ref$intlValues = _ref.intlValues,\n      intlValues = _ref$intlValues === undefined ? {} : _ref$intlValues,\n      _ref$intlFallback = _ref.intlFallback,\n      intlFallback = _ref$intlFallback === undefined ? '' : _ref$intlFallback;\n  return formatMessage(_EMAIL_I18N_NAMESPACE + \".\" + emailId + \".\" + part, intlValues, intlFallback);\n};\n\nexports.notificationAndCtaTemplateDefaultOverride = _notificationAndCtaTemplateDefaultOverride;\n\nvar _getEmailContent = function _getEmailContent(emailId, intlValues) {\n  var subject = _getEmailPart({\n    emailId: emailId,\n    part: _EMAIL_PARTS.SUBJECT\n  });\n\n  var title = _getEmailPart({\n    emailId: emailId,\n    part: _EMAIL_PARTS.TITLE\n  });\n\n  var body = _getEmailPart({\n    emailId: emailId,\n    part: _EMAIL_PARTS.BODY,\n    intlValues: (0, _extends3.default)({\n      verticalSpace: '<span><br/><br/></span>'\n    }, intlValues)\n  });\n\n  var cta = _getEmailPart({\n    emailId: emailId,\n    part: _EMAIL_PARTS.CTA,\n    intlValues: intlValues,\n    intlFallback: _CTA_URL_DEFAULT\n  });\n\n  var customFrom = _getEmailPart({\n    emailId: emailId,\n    part: _EMAIL_PARTS.FROM,\n    intlValues: intlValues,\n    intlFallback: _FROM_DEFAULT\n  });\n\n  return {\n    subject: subject,\n    title: title,\n    body: body,\n    cta: cta,\n    from: customFrom\n  };\n};\n\nvar _getEnrollmentUrl = function _getEnrollmentUrl(user, url) {\n  if (user.roles === 'user' || user.roles.indexOf('user') >= 0) {\n    var enrollToken = url.split('/enroll-account/')[1];\n    return APP_URL + \"/enroll-account/\" + enrollToken;\n  }\n\n  return url;\n};\n\n/**\n * This is a default override function for the NOTIFICATION template\n *\n * @export\n * @param {Object} params The params passed by the mutation\n * @param {Object} { title, body } The strings extracted from i18n files\n * @returns a template override object\n */function _notificationTemplateDefaultOverride(params, _ref2) {\n  var title = _ref2.title,\n      body = _ref2.body;\n  var variables = this.template.variables;\n  return {\n    variables: [{\n      name: variables.TITLE,\n      content: title\n    }, {\n      name: variables.BODY,\n      content: body\n    }]\n  };\n} /**\n   * This is a default override function for the NOTIFICATION_AND_CTA template\n   *\n   * @export\n   * @param {Object} params The params passed by the mutation\n   * @param {Object} { title, body, cta } The strings extracted from i18n files\n   * @returns a template override object\n   */\n\nfunction _notificationAndCtaTemplateDefaultOverride(params, _ref3) {\n  var title = _ref3.title,\n      body = _ref3.body,\n      cta = _ref3.cta;\n  var variables = this.template.variables;\n  return {\n    variables: [{\n      name: variables.TITLE,\n      content: title\n    }, {\n      name: variables.BODY,\n      content: body\n    }, {\n      name: variables.CTA,\n      content: cta\n    }, {\n      name: variables.CTA_URL,\n      content: _CTA_URL_DEFAULT\n    }]\n  };\n}","map":{"version":3,"sources":["imports/core/api/email/server/emailHelpers.js"],"names":["module","export","getEmailFooter","getEmailPart","getEmailContent","getEnrollmentUrl","notificationTemplateDefaultOverride","notificationAndCtaTemplateDefaultOverride","Meteor","watch","require","v","formatMessage","default","FROM_DEFAULT","CTA_URL_DEFAULT","EMAIL_I18N_NAMESPACE","EMAIL_PARTS","WWW_URL","settings","public","subdomains","www","APP_URL","app","allowUnsubscribe","copyright","url","unsubscribe","emailId","part","intlValues","intlFallback","subject","SUBJECT","title","TITLE","body","BODY","verticalSpace","cta","CTA","customFrom","FROM","from","user","roles","indexOf","enrollToken","split","params","variables","template","name","content","CTA_URL"],"mappings":"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","file":"imports/core/api/email/server/emailHelpers.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport formatMessage from 'core/utils/intl';\n\nimport {\n  FROM_DEFAULT,\n  CTA_URL_DEFAULT,\n  EMAIL_I18N_NAMESPACE,\n  EMAIL_PARTS,\n} from '../emailConstants';\n\nconst WWW_URL = Meteor.settings.public.subdomains.www;\nconst APP_URL = Meteor.settings.public.subdomains.app;\n\n/**\n * emailFooter - Returns the default email footer for all emails\n *\n * @param {boolean} [unsubscribe=true] Whether to show an unsubscribe line or not\n *\n * @return {type} a HTML string\n */\nexport const getEmailFooter = (allowUnsubscribe = true) =>\n  formatMessage('emails.footer', {\n    copyright: '<em>&copy; *|CURRENT_YEAR|* e-Potek</em><br /><br />',\n    url: `<a href=\"${WWW_URL}\" target=\"_blank\">e-potek.ch</a><br />`,\n    unsubscribe: allowUnsubscribe\n      ? `<a href=\"*|UNSUB|*\">${formatMessage('emails.unsubscribe')}</a>`\n      : '',\n  });\n\nexport const getEmailPart = ({\n  emailId,\n  part,\n  intlValues = {},\n  intlFallback = '',\n}) =>\n  formatMessage(\n    `${EMAIL_I18N_NAMESPACE}.${emailId}.${part}`,\n    intlValues,\n    intlFallback,\n  );\n\n/**\n * getEmailContent - Returns all the fields for an email\n *\n * @param {String} emailId an id representing what email this is, example:\n * auctionEnded, verificationRequested\n *\n * @return {Object} contains all the fields\n */\nexport const getEmailContent = (emailId, intlValues) => {\n  const subject = getEmailPart({ emailId, part: EMAIL_PARTS.SUBJECT });\n  const title = getEmailPart({ emailId, part: EMAIL_PARTS.TITLE });\n  const body = getEmailPart({\n    emailId,\n    part: EMAIL_PARTS.BODY,\n    intlValues: {\n      verticalSpace: '<span><br/><br/></span>',\n      ...intlValues,\n    },\n  });\n  const cta = getEmailPart({\n    emailId,\n    part: EMAIL_PARTS.CTA,\n    intlValues,\n    intlFallback: CTA_URL_DEFAULT,\n  });\n  const customFrom = getEmailPart({\n    emailId,\n    part: EMAIL_PARTS.FROM,\n    intlValues,\n    intlFallback: FROM_DEFAULT,\n  });\n\n  return {\n    subject,\n    title,\n    body,\n    cta,\n    from: customFrom,\n  };\n};\n\nexport const getEnrollmentUrl = (user, url) => {\n  if (user.roles === 'user' || user.roles.indexOf('user') >= 0) {\n    const enrollToken = url.split('/enroll-account/')[1];\n\n    return `${APP_URL}/enroll-account/${enrollToken}`;\n  }\n\n  return url;\n};\n\n/**\n * This is a default override function for the NOTIFICATION template\n *\n * @export\n * @param {Object} params The params passed by the mutation\n * @param {Object} { title, body } The strings extracted from i18n files\n * @returns a template override object\n */\nexport function notificationTemplateDefaultOverride(params, { title, body }) {\n  const { variables } = this.template;\n\n  return {\n    variables: [\n      { name: variables.TITLE, content: title },\n      { name: variables.BODY, content: body },\n    ],\n  };\n}\n\n/**\n * This is a default override function for the NOTIFICATION_AND_CTA template\n *\n * @export\n * @param {Object} params The params passed by the mutation\n * @param {Object} { title, body, cta } The strings extracted from i18n files\n * @returns a template override object\n */\nexport function notificationAndCtaTemplateDefaultOverride(\n  params,\n  { title, body, cta },\n) {\n  const { variables } = this.template;\n\n  return {\n    variables: [\n      { name: variables.TITLE, content: title },\n      { name: variables.BODY, content: body },\n      { name: variables.CTA, content: cta },\n      { name: variables.CTA_URL, content: CTA_URL_DEFAULT },\n    ],\n  };\n}\n"]},"hash":"64665348de8841004acf770db33a8097bab0d4ff"}
