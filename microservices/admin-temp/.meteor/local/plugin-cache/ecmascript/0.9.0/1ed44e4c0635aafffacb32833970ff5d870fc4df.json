{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"./MixpanelEventList","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"MixpanelEventList"}]},{"source":"./getMixpanelData","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"getMixpanelData"}]},{"source":"./groupDataByDay","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"groupDataByDay"}]}],"exports":{"exported":["MixpanelAnalytics"],"specifiers":[{"kind":"local","local":"MixpanelAnalytics","exported":"default"}]}}},"options":{"filename":"imports/ui/components/MixpanelAnalytics/MixpanelAnalytics.jsx","filenameRelative":"imports/ui/components/MixpanelAnalytics/MixpanelAnalytics.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/components/MixpanelAnalytics/MixpanelAnalytics.jsx.map","sourceFileName":"imports/ui/components/MixpanelAnalytics/MixpanelAnalytics.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"MixpanelAnalytics"},"ignored":false,"code":"\"use strict\";\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  \"default\": function () {\n    function _default() {\n      return MixpanelAnalytics;\n    }\n\n    return _default;\n  }()\n});\n\nvar React = void 0,\n    _Component = void 0;\n\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }(),\n  Component: function () {\n    function Component(v) {\n      _Component = v;\n    }\n\n    return Component;\n  }()\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 1);\nvar MixpanelEventList = void 0;\nmodule.watch(require(\"./MixpanelEventList\"), {\n  \"default\": function () {\n    function _default(v) {\n      MixpanelEventList = v;\n    }\n\n    return _default;\n  }()\n}, 2);\nvar getMixpanelData = void 0;\nmodule.watch(require(\"./getMixpanelData\"), {\n  \"default\": function () {\n    function _default(v) {\n      getMixpanelData = v;\n    }\n\n    return _default;\n  }()\n}, 3);\nvar groupDataByDay = void 0;\nmodule.watch(require(\"./groupDataByDay\"), {\n  \"default\": function () {\n    function _default(v) {\n      groupDataByDay = v;\n    }\n\n    return _default;\n  }()\n}, 4);\n\nvar MixpanelAnalytics = function (_Component2) {\n  (0, _inherits3.default)(MixpanelAnalytics, _Component2);\n\n  function MixpanelAnalytics(props) {\n    (0, _classCallCheck3.default)(this, MixpanelAnalytics);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (MixpanelAnalytics.__proto__ || Object.getPrototypeOf(MixpanelAnalytics)).call(this, props));\n\n    _this.getData = function () {\n      var userId = _this.props.loan.userId;\n      return getMixpanelData(userId).then(function (data) {\n        if (data.status === 'ok') {\n          _this.setState({\n            error: false,\n            events: data.results.events,\n            groupedEvents: groupDataByDay(data.results.events)\n          });\n        } else {\n          _this.setState({\n            error: data.status\n          });\n        }\n      }).catch(function (error) {\n        _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.state = {\n      error: false\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(MixpanelAnalytics, [{\n    key: \"componentDidMount\",\n    value: function () {\n      function componentDidMount() {\n        this.getData();\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function () {\n      function render() {\n        var _state = this.state,\n            error = _state.error,\n            events = _state.events,\n            groupedEvents = _state.groupedEvents;\n\n        if (error) {\n          return React.createElement(\n            \"h3\",\n            {\n              className: \"error\"\n            },\n            \"Il y eu une erreur Mixpanel (status: \",\n            error,\n            \")\"\n          );\n        } else if (!events) {\n          return React.createElement(\n            \"h4\",\n            null,\n            \"Loading...\"\n          );\n        }\n\n        console.log('Grouped Events:', groupedEvents);\n        return React.createElement(MixpanelEventList, {\n          events: events,\n          groupedEvents: groupedEvents\n        });\n      }\n\n      return render;\n    }()\n  }]);\n  return MixpanelAnalytics;\n}(_Component);\n\nMixpanelAnalytics.propTypes = {\n  loan: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["imports/ui/components/MixpanelAnalytics/MixpanelAnalytics.jsx"],"names":["module","export","MixpanelAnalytics","React","Component","watch","require","v","PropTypes","MixpanelEventList","getMixpanelData","groupDataByDay","props","getData","userId","loan","then","data","status","setState","error","events","results","groupedEvents","catch","state","console","log","propTypes","object","isRequired"],"mappings":"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","file":"imports/ui/components/MixpanelAnalytics/MixpanelAnalytics.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MixpanelEventList from './MixpanelEventList';\nimport getMixpanelData from './getMixpanelData';\nimport groupDataByDay from './groupDataByDay';\n\nexport default class MixpanelAnalytics extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: false };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    const { loan: { userId } } = this.props;\n    return getMixpanelData(userId)\n      .then((data) => {\n        if (data.status === 'ok') {\n          this.setState({\n            error: false,\n            events: data.results.events,\n            groupedEvents: groupDataByDay(data.results.events),\n          });\n        } else {\n          this.setState({ error: data.status });\n        }\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n  };\n\n  render() {\n    const { error, events, groupedEvents } = this.state;\n\n    if (error) {\n      return (\n        <h3 className=\"error\">Il y eu une erreur Mixpanel (status: {error})</h3>\n      );\n    } else if (!events) {\n      return <h4>Loading...</h4>;\n    }\n\n    console.log('Grouped Events:', groupedEvents);\n    return <MixpanelEventList events={events} groupedEvents={groupedEvents} />;\n  }\n}\n\nMixpanelAnalytics.propTypes = {\n  loan: PropTypes.object.isRequired,\n};\n"]},"hash":"1ed44e4c0635aafffacb32833970ff5d870fc4df"}
