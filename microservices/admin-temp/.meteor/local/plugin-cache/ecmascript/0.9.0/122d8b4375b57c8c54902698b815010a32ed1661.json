{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/random","imported":["Random"],"specifiers":[{"kind":"named","imported":"Random","local":"Random"}]},{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"./security/fixtures","imported":[],"specifiers":[]},{"source":"./authors/collection","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Authors"}]},{"source":"./comments/collection","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Comments"}]},{"source":"./posts/collection","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Posts"}]},{"source":"./tags/collection","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Tags"}]},{"source":"./groups/collection","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Groups"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/fixtures.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/fixtures.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/fixtures.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/fixtures.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"fixtures"},"ignored":false,"code":"var Random = void 0;\nmodule.watch(require(\"meteor/random\"), {\n    Random: function (v) {\n        Random = v;\n    }\n}, 0);\n\nvar _ = void 0;\n\nmodule.watch(require(\"meteor/underscore\"), {\n    _: function (v) {\n        _ = v;\n    }\n}, 1);\nmodule.watch(require(\"./security/fixtures\"));\nvar Authors = void 0;\nmodule.watch(require(\"./authors/collection\"), {\n    \"default\": function (v) {\n        Authors = v;\n    }\n}, 2);\nvar Comments = void 0;\nmodule.watch(require(\"./comments/collection\"), {\n    \"default\": function (v) {\n        Comments = v;\n    }\n}, 3);\nvar Posts = void 0;\nmodule.watch(require(\"./posts/collection\"), {\n    \"default\": function (v) {\n        Posts = v;\n    }\n}, 4);\nvar Tags = void 0;\nmodule.watch(require(\"./tags/collection\"), {\n    \"default\": function (v) {\n        Tags = v;\n    }\n}, 5);\nvar Groups = void 0;\nmodule.watch(require(\"./groups/collection\"), {\n    \"default\": function (v) {\n        Groups = v;\n    }\n}, 6);\nAuthors.remove({});\nComments.remove({});\nPosts.remove({});\nTags.remove({});\nGroups.remove({});\nvar AUTHORS = 6;\nvar POST_PER_USER = 6;\nvar COMMENTS_PER_POST = 6;\nvar TAGS = ['JavaScript', 'Meteor', 'React', 'Other'];\nvar GROUPS = ['JavaScript', 'Meteor', 'React', 'Other'];\nvar COMMENT_TEXT_SAMPLES = ['Good', 'Bad', 'Neutral'];\nconsole.log('[testing] Loading test fixtures ...');\nvar tags = TAGS.map(function (name) {\n    return Tags.insert({\n        name: name\n    });\n});\nvar groups = GROUPS.map(function (name) {\n    return Groups.insert({\n        name: name,\n        createdAt: new Date()\n    });\n});\n\nvar authors = _.range(AUTHORS).map(function (idx) {\n    return Authors.insert({\n        name: 'Author - ' + idx,\n        profile: {\n            firstName: 'First Name - ' + idx,\n            lastName: 'Last Name - ' + idx\n        }\n    });\n});\n\nvar idx = 1;\n\n_.each(authors, function (author) {\n    idx++;\n    var authorPostLink = Authors.getLink(author, 'posts');\n    var authorGroupLink = Authors.getLink(author, 'groups');\n    authorGroupLink.add(groups[idx % 4], {\n        isAdmin: _.sample([true, false])\n    });\n\n    _.each(_.range(POST_PER_USER), function (idx) {\n        var post = {\n            title: \"User Post - \" + idx,\n            createdAt: new Date()\n        };\n        authorPostLink.add(post);\n        var postCommentsLink = Posts.getLink(post, 'comments');\n        var postTagsLink = Posts.getLink(post, 'tags');\n        var postGroupLink = Posts.getLink(post, 'group');\n        postGroupLink.set(_.sample(groups), {\n            random: Random.id()\n        });\n        postTagsLink.add(_.sample(tags));\n\n        _.each(_.range(COMMENTS_PER_POST), function (idx) {\n            var comment = {\n                text: _.sample(COMMENT_TEXT_SAMPLES)\n            };\n            postCommentsLink.add(comment);\n            Comments.getLink(comment, 'author').set(_.sample(authors));\n        });\n    });\n});\n\nconsole.log('[ok] fixtures have been loaded.');","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/testing/bootstrap/fixtures.js"],"names":["Random","module","watch","require","v","_","Authors","Comments","Posts","Tags","Groups","remove","AUTHORS","POST_PER_USER","COMMENTS_PER_POST","TAGS","GROUPS","COMMENT_TEXT_SAMPLES","console","log","tags","map","insert","name","groups","createdAt","Date","authors","range","idx","profile","firstName","lastName","each","author","authorPostLink","getLink","authorGroupLink","add","isAdmin","sample","post","title","postCommentsLink","postTagsLink","postGroupLink","set","random","id","comment","text"],"mappings":"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","file":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/fixtures.js.map","sourcesContent":["import { Random } from 'meteor/random';\nimport { _ } from 'meteor/underscore';\nimport './security/fixtures';\n\nimport Authors from './authors/collection';\nimport Comments from './comments/collection';\nimport Posts from './posts/collection';\nimport Tags from './tags/collection';\nimport Groups from './groups/collection';\n\nAuthors.remove({});\nComments.remove({});\nPosts.remove({});\nTags.remove({});\nGroups.remove({});\n\nconst AUTHORS = 6;\nconst POST_PER_USER = 6;\nconst COMMENTS_PER_POST = 6;\nconst TAGS = ['JavaScript', 'Meteor', 'React', 'Other'];\nconst GROUPS = ['JavaScript', 'Meteor', 'React', 'Other'];\nconst COMMENT_TEXT_SAMPLES = [\n    'Good', 'Bad', 'Neutral'\n];\n\nconsole.log('[testing] Loading test fixtures ...');\n\nlet tags = TAGS.map(name => Tags.insert({name}));\nlet groups = GROUPS.map(name => Groups.insert({\n    name,\n    createdAt: new Date(),\n}));\nlet authors = _.range(AUTHORS).map(idx => {\n    return Authors.insert({\n        name: 'Author - ' + idx,\n        profile: {\n            firstName: 'First Name - ' + idx,\n            lastName: 'Last Name - ' + idx\n        }\n    });\n});\n\nlet idx = 1;\n_.each(authors, (author) => {\n    idx++;\n    const authorPostLink = Authors.getLink(author, 'posts');\n    const authorGroupLink = Authors.getLink(author, 'groups');\n\n    authorGroupLink.add(groups[idx % 4], {\n        isAdmin: _.sample([true, false])\n    });\n\n    _.each(_.range(POST_PER_USER), (idx) => {\n        let post = {\n            title: `User Post - ${idx}`,\n            createdAt: new Date(),\n        };\n\n        authorPostLink.add(post);\n        const postCommentsLink = Posts.getLink(post, 'comments');\n        const postTagsLink = Posts.getLink(post, 'tags');\n        const postGroupLink = Posts.getLink(post, 'group');\n        postGroupLink.set(_.sample(groups), {random: Random.id()});\n\n        postTagsLink.add(_.sample(tags));\n\n        _.each(_.range(COMMENTS_PER_POST), (idx) => {\n            let comment = {\n                text: _.sample(COMMENT_TEXT_SAMPLES)\n            };\n\n            postCommentsLink.add(comment);\n            Comments.getLink(comment, 'author').set(_.sample(authors));\n        })\n    })\n});\n\nconsole.log('[ok] fixtures have been loaded.');\n"]},"hash":"122d8b4375b57c8c54902698b815010a32ed1661"}
