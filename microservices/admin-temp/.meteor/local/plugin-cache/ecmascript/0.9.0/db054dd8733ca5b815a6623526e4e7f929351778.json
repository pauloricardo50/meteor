{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/random","imported":["Random"],"specifiers":[{"kind":"named","imported":"Random","local":"Random"}]},{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]},{"source":"./security/fixtures","imported":[],"specifiers":[]},{"source":"./authors/collection","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Authors"}]},{"source":"./comments/collection","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Comments"}]},{"source":"./posts/collection","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Posts"}]},{"source":"./tags/collection","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Tags"}]},{"source":"./groups/collection","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Groups"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/fixtures.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/fixtures.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/fixtures.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/fixtures.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"fixtures"},"ignored":false,"code":"let Random;\nmodule.watch(require(\"meteor/random\"), {\n    Random(v) {\n        Random = v;\n    }\n\n}, 0);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n    _(v) {\n        _ = v;\n    }\n\n}, 1);\nmodule.watch(require(\"./security/fixtures\"));\nlet Authors;\nmodule.watch(require(\"./authors/collection\"), {\n    default(v) {\n        Authors = v;\n    }\n\n}, 2);\nlet Comments;\nmodule.watch(require(\"./comments/collection\"), {\n    default(v) {\n        Comments = v;\n    }\n\n}, 3);\nlet Posts;\nmodule.watch(require(\"./posts/collection\"), {\n    default(v) {\n        Posts = v;\n    }\n\n}, 4);\nlet Tags;\nmodule.watch(require(\"./tags/collection\"), {\n    default(v) {\n        Tags = v;\n    }\n\n}, 5);\nlet Groups;\nmodule.watch(require(\"./groups/collection\"), {\n    default(v) {\n        Groups = v;\n    }\n\n}, 6);\nAuthors.remove({});\nComments.remove({});\nPosts.remove({});\nTags.remove({});\nGroups.remove({});\nconst AUTHORS = 6;\nconst POST_PER_USER = 6;\nconst COMMENTS_PER_POST = 6;\nconst TAGS = ['JavaScript', 'Meteor', 'React', 'Other'];\nconst GROUPS = ['JavaScript', 'Meteor', 'React', 'Other'];\nconst COMMENT_TEXT_SAMPLES = ['Good', 'Bad', 'Neutral'];\nconsole.log('[testing] Loading test fixtures ...');\nlet tags = TAGS.map(name => Tags.insert({\n    name\n}));\nlet groups = GROUPS.map(name => Groups.insert({\n    name,\n    createdAt: new Date()\n}));\n\nlet authors = _.range(AUTHORS).map(idx => {\n    return Authors.insert({\n        name: 'Author - ' + idx,\n        profile: {\n            firstName: 'First Name - ' + idx,\n            lastName: 'Last Name - ' + idx\n        }\n    });\n});\n\nlet idx = 1;\n\n_.each(authors, author => {\n    idx++;\n    const authorPostLink = Authors.getLink(author, 'posts');\n    const authorGroupLink = Authors.getLink(author, 'groups');\n    authorGroupLink.add(groups[idx % 4], {\n        isAdmin: _.sample([true, false])\n    });\n\n    _.each(_.range(POST_PER_USER), idx => {\n        let post = {\n            title: `User Post - ${idx}`,\n            createdAt: new Date()\n        };\n        authorPostLink.add(post);\n        const postCommentsLink = Posts.getLink(post, 'comments');\n        const postTagsLink = Posts.getLink(post, 'tags');\n        const postGroupLink = Posts.getLink(post, 'group');\n        postGroupLink.set(_.sample(groups), {\n            random: Random.id()\n        });\n        postTagsLink.add(_.sample(tags));\n\n        _.each(_.range(COMMENTS_PER_POST), idx => {\n            let comment = {\n                text: _.sample(COMMENT_TEXT_SAMPLES)\n            };\n            postCommentsLink.add(comment);\n            Comments.getLink(comment, 'author').set(_.sample(authors));\n        });\n    });\n});\n\nconsole.log('[ok] fixtures have been loaded.');","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/testing/bootstrap/fixtures.js"],"names":["Random","module","watch","require","v","_","Authors","default","Comments","Posts","Tags","Groups","remove","AUTHORS","POST_PER_USER","COMMENTS_PER_POST","TAGS","GROUPS","COMMENT_TEXT_SAMPLES","console","log","tags","map","name","insert","groups","createdAt","Date","authors","range","idx","profile","firstName","lastName","each","author","authorPostLink","getLink","authorGroupLink","add","isAdmin","sample","post","title","postCommentsLink","postTagsLink","postGroupLink","set","random","id","comment","text"],"mappings":"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","file":"packages/cultofcoders:grapher/lib/query/testing/bootstrap/fixtures.js.map","sourcesContent":["import { Random } from 'meteor/random';\nimport { _ } from 'meteor/underscore';\nimport './security/fixtures';\n\nimport Authors from './authors/collection';\nimport Comments from './comments/collection';\nimport Posts from './posts/collection';\nimport Tags from './tags/collection';\nimport Groups from './groups/collection';\n\nAuthors.remove({});\nComments.remove({});\nPosts.remove({});\nTags.remove({});\nGroups.remove({});\n\nconst AUTHORS = 6;\nconst POST_PER_USER = 6;\nconst COMMENTS_PER_POST = 6;\nconst TAGS = ['JavaScript', 'Meteor', 'React', 'Other'];\nconst GROUPS = ['JavaScript', 'Meteor', 'React', 'Other'];\nconst COMMENT_TEXT_SAMPLES = [\n    'Good', 'Bad', 'Neutral'\n];\n\nconsole.log('[testing] Loading test fixtures ...');\n\nlet tags = TAGS.map(name => Tags.insert({name}));\nlet groups = GROUPS.map(name => Groups.insert({\n    name,\n    createdAt: new Date(),\n}));\nlet authors = _.range(AUTHORS).map(idx => {\n    return Authors.insert({\n        name: 'Author - ' + idx,\n        profile: {\n            firstName: 'First Name - ' + idx,\n            lastName: 'Last Name - ' + idx\n        }\n    });\n});\n\nlet idx = 1;\n_.each(authors, (author) => {\n    idx++;\n    const authorPostLink = Authors.getLink(author, 'posts');\n    const authorGroupLink = Authors.getLink(author, 'groups');\n\n    authorGroupLink.add(groups[idx % 4], {\n        isAdmin: _.sample([true, false])\n    });\n\n    _.each(_.range(POST_PER_USER), (idx) => {\n        let post = {\n            title: `User Post - ${idx}`,\n            createdAt: new Date(),\n        };\n\n        authorPostLink.add(post);\n        const postCommentsLink = Posts.getLink(post, 'comments');\n        const postTagsLink = Posts.getLink(post, 'tags');\n        const postGroupLink = Posts.getLink(post, 'group');\n        postGroupLink.set(_.sample(groups), {random: Random.id()});\n\n        postTagsLink.add(_.sample(tags));\n\n        _.each(_.range(COMMENTS_PER_POST), (idx) => {\n            let comment = {\n                text: _.sample(COMMENT_TEXT_SAMPLES)\n            };\n\n            postCommentsLink.add(comment);\n            Comments.getLink(comment, 'author').set(_.sample(authors));\n        })\n    })\n});\n\nconsole.log('[ok] fixtures have been loaded.');\n"]},"hash":"db054dd8733ca5b815a6623526e4e7f929351778"}
