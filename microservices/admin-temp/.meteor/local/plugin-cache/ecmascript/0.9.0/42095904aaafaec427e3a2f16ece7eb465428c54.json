{"metadata":{"usedHelpers":["classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"../events","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"EventService"}]},{"source":"./userConstants","imported":["USER_EVENTS"],"specifiers":[{"kind":"named","imported":"USER_EVENTS","local":"USER_EVENTS"}]},{"source":"../users","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Users"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/users/UserService.js","filenameRelative":"imports/core/api/users/UserService.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/users/UserService.js.map","sourceFileName":"imports/core/api/users/UserService.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"UserService"},"ignored":false,"code":"\"use strict\";\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _Accounts = void 0;\n\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts: function () {\n    function Accounts(v) {\n      _Accounts = v;\n    }\n\n    return Accounts;\n  }()\n}, 0);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function () {\n    function Roles(v) {\n      _Roles = v;\n    }\n\n    return Roles;\n  }()\n}, 1);\nvar EventService = void 0;\nmodule.watch(require(\"../events\"), {\n  \"default\": function () {\n    function _default(v) {\n      EventService = v;\n    }\n\n    return _default;\n  }()\n}, 2);\n\nvar _USER_EVENTS = void 0;\n\nmodule.watch(require(\"./userConstants\"), {\n  USER_EVENTS: function () {\n    function USER_EVENTS(v) {\n      _USER_EVENTS = v;\n    }\n\n    return USER_EVENTS;\n  }()\n}, 3);\nvar Users = void 0;\nmodule.watch(require(\"../users\"), {\n  \"default\": function () {\n    function _default(v) {\n      Users = v;\n    }\n\n    return _default;\n  }()\n}, 4);\n\nvar UserService = function () {\n  function UserService() {\n    var _this = this;\n\n    (0, _classCallCheck3.default)(this, UserService);\n\n    this.createUser = function (_ref) {\n      var options = _ref.options,\n          role = _ref.role;\n\n      var newUserId = _Accounts.createUser(options, function (err) {\n        if (err) console.log(err);else {\n          _Roles.addUsersToRoles(newUserId, role); // Emitter.emit(Events.ITEM_CREATED, { newUserId });\n\n\n          if (role === 'user') {\n            EventService.emit(_USER_EVENTS.USER_CREATED, {\n              newUserId: newUserId\n            });\n          }\n\n          return newUserId;\n        }\n        return null;\n      });\n    };\n\n    this.remove = function (_ref2) {\n      var userId = _ref2.userId;\n      Users.remove(userId);\n    };\n\n    this.update = function (_ref3) {\n      var userId = _ref3.userId,\n          user = _ref3.user;\n      return Users.update(userId, {\n        $set: user\n      });\n    };\n\n    this.assignAdminToUser = function (_ref4) {\n      var userId = _ref4.userId,\n          adminId = _ref4.adminId;\n      return _this.update({\n        userId: userId,\n        user: {\n          assignedTo: adminId\n        }\n      });\n    };\n\n    this.getAdmins = function () {\n      return Users.find({\n        roles: {\n          $in: ['admin']\n        }\n      }).fetch();\n    };\n  }\n\n  return UserService;\n}();\n\nmodule.exportDefault(new UserService());","map":{"version":3,"sources":["imports/core/api/users/UserService.js"],"names":["Accounts","module","watch","require","v","Roles","EventService","USER_EVENTS","Users","UserService","createUser","options","role","newUserId","err","console","log","addUsersToRoles","emit","USER_CREATED","remove","userId","update","user","$set","assignAdminToUser","adminId","assignedTo","getAdmins","find","roles","$in","fetch","exportDefault"],"mappings":";;;;;;;;AAAA,IAAIA,kBAAJ;;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACH,UAAD;AAAA,sBAAUI,CAAV,EAAY;AAACJ,kBAASI,CAAT;AAAW;;AAAxB;AAAA;AAAA,CAA7C,EAAuE,CAAvE;;AAA0E,IAAIC,eAAJ;;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACE,OAAD;AAAA,mBAAOD,CAAP,EAAS;AAACC,eAAMD,CAAN;AAAQ;;AAAlB;AAAA;AAAA,CAA9C,EAAkE,CAAlE;AAAqE,IAAIE,qBAAJ;AAAiBL,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACE,qBAAaF,CAAb;AAAe;;AAA3B;AAAA;AAAA,CAAlC,EAA+D,CAA/D;;AAAkE,IAAIG,qBAAJ;;AAAgBN,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACI,aAAD;AAAA,yBAAaH,CAAb,EAAe;AAACG,qBAAYH,CAAZ;AAAc;;AAA9B;AAAA;AAAA,CAAxC,EAAwE,CAAxE;AAA2E,IAAII,cAAJ;AAAUP,OAAOC,KAAP,CAAaC,QAAQ,UAAR,CAAb,EAAiC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACI,cAAMJ,CAAN;AAAQ;;AAApB;AAAA;AAAA,CAAjC,EAAuD,CAAvD;;IAOxVK,W;;;;;;SACJC,U,GAAa,gBAAuB;AAAA,UAApBC,OAAoB,QAApBA,OAAoB;AAAA,UAAXC,IAAW,QAAXA,IAAW;;AAClC,UAAMC,YAAYb,UAASU,UAAT,CAAoBC,OAApB,EAA6B,UAACG,GAAD,EAAS;AACtD,YAAIA,GAAJ,EAASC,QAAQC,GAAR,CAAYF,GAAZ,EAAT,KACK;AACHT,iBAAMY,eAAN,CAAsBJ,SAAtB,EAAiCD,IAAjC,EADG,CAEH;;;AACA,cAAIA,SAAS,MAAb,EAAqB;AACnBN,yBAAaY,IAAb,CAAkBX,aAAYY,YAA9B,EAA4C;AAAEN;AAAF,aAA5C;AACD;;AACD,iBAAOA,SAAP;AACD;AACD,eAAO,IAAP;AACD,OAXiB,CAAlB;AAYD,K;;SAEDO,M,GAAS,iBAAgB;AAAA,UAAbC,MAAa,SAAbA,MAAa;AACvBb,YAAMY,MAAN,CAAaC,MAAb;AACD,K;;SAEDC,M,GAAS;AAAA,UAAGD,MAAH,SAAGA,MAAH;AAAA,UAAWE,IAAX,SAAWA,IAAX;AAAA,aAAsBf,MAAMc,MAAN,CAAaD,MAAb,EAAqB;AAAEG,cAAMD;AAAR,OAArB,CAAtB;AAAA,K;;SAETE,iB,GAAoB;AAAA,UAAGJ,MAAH,SAAGA,MAAH;AAAA,UAAWK,OAAX,SAAWA,OAAX;AAAA,aAAyB,MAAKJ,MAAL,CAAY;AACvDD,sBADuD;AAEvDE,cAAM;AAAEI,sBAAYD;AAAd;AAFiD,OAAZ,CAAzB;AAAA,K;;SAMpBE,S,GAAY;AAAA,aAAMpB,MAAMqB,IAAN,CAAW;AAAEC,eAAO;AAAEC,eAAK,CAAC,OAAD;AAAP;AAAT,OAAX,EAA0CC,KAA1C,EAAN;AAAA,K;;;;;;AAnCd/B,OAAOgC,aAAP,CAsCe,IAAIxB,WAAJ,EAtCf","file":"imports/core/api/users/UserService.js.map","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\nimport { Roles } from 'meteor/alanning:roles';\n// import { Emitter, Events } from '/core/api/users';\nimport EventService from 'core/api/events';\nimport { USER_EVENTS } from './userConstants';\nimport Users from '../users';\n\nclass UserService {\n  createUser = ({ options, role }) => {\n    const newUserId = Accounts.createUser(options, (err) => {\n      if (err) console.log(err);\n      else {\n        Roles.addUsersToRoles(newUserId, role);\n        // Emitter.emit(Events.ITEM_CREATED, { newUserId });\n        if (role === 'user') {\n          EventService.emit(USER_EVENTS.USER_CREATED, { newUserId });\n        }\n        return newUserId;\n      }\n      return null;\n    });\n  };\n\n  remove = ({ userId }) => {\n    Users.remove(userId);\n  };\n\n  update = ({ userId, user }) => Users.update(userId, { $set: user });\n\n  assignAdminToUser = ({ userId, adminId }) => this.update({\n    userId,\n    user: { assignedTo: adminId },\n  });\n\n\n  getAdmins = () => Users.find({ roles: { $in: ['admin'] } }).fetch();\n}\n\nexport default new UserService();\n"]},"hash":"42095904aaafaec427e3a2f16ece7eb465428c54"}
