{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react-intl","imported":["addLocaleData"],"specifiers":[{"kind":"named","imported":"addLocaleData","local":"addLocaleData"}]},{"source":"meteor/softwarerero:accounts-t9n","imported":["T9n"],"specifiers":[{"kind":"named","imported":"T9n","local":"T9n"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"./loadable","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loadable"}]},{"source":"react-intl/locale-data/fr","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"fr"}]}],"exports":{"exported":["getUserLocale","getFormats","localizationStartup"],"specifiers":[{"kind":"local","local":"getUserLocale","exported":"getUserLocale"},{"kind":"local","local":"getFormats","exported":"getFormats"},{"kind":"local","local":"localizationStartup","exported":"localizationStartup"}]}}},"options":{"filename":"imports/core/utils/localization.js","filenameRelative":"imports/core/utils/localization.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/utils/localization.js.map","sourceFileName":"imports/core/utils/localization.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"localization"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.export({\n  getUserLocale: function getUserLocale() {\n    return _getUserLocale;\n  },\n  getFormats: function getFormats() {\n    return _getFormats;\n  },\n  localizationStartup: function localizationStartup() {\n    return _localizationStartup;\n  }\n});\n\nvar _addLocaleData = void 0;\n\nmodule.watch(require(\"react-intl\"), {\n  addLocaleData: function addLocaleData(v) {\n    _addLocaleData = v;\n  }\n}, 0);\n\nvar _T9n = void 0;\n\nmodule.watch(require(\"meteor/softwarerero:accounts-t9n\"), {\n  T9n: function T9n(v) {\n    _T9n = v;\n  }\n}, 1);\nvar moment = void 0;\nexports.getUserLocale = _getUserLocale;\nmodule.watch(require(\"moment\"), {\n  default: function _default(v) {\n    moment = v;\n  }\n}, 2);\nvar Loadable = void 0;\nmodule.watch(require(\"./loadable\"), {\n  default: function _default(v) {\n    Loadable = v;\n  }\n}, 3);\nvar fr = void 0;\nmodule.watch(require(\"react-intl/locale-data/fr\"), {\n  default: function _default(v) {\n    fr = v;\n  }\n}, 4);\n\nvar _getUserLocale = function _getUserLocale() {\n  return 'fr-CH';\n};\n\nvar _getFormats = function _getFormats() {\n  return {\n    number: {\n      money: {\n        style: 'currency',\n        currency: 'CHF',\n        maximumFractionDigits: 0,\n        minimumFractionDigits: 0\n      },\n      moneyWithoutCurrency: {\n        style: 'decimal',\n        useGrouping: true,\n        maximumFractionDigits: 0,\n        minimumFractionDigits: 0\n      },\n      percentage: {\n        style: 'percent',\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      },\n      percentageRounded: {\n        style: 'percent',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      }\n    }\n  };\n};\n\nvar _localizationStartup = function _localizationStartup() {\n  // Add locales used in app here\n  _addLocaleData(fr);\n\n  _T9n.setLanguage('fr');\n\n  setupMoment();\n  moment.locale('fr');\n};\n\nvar setupMoment = function setupMoment() {\n  moment.locale('fr', {\n    months: 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n    monthsShort: 'Janv._Févr._Mars_Avr._Mai_Juin_Juil._Août_Sept._Oct._Nov._Déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n    weekdaysShort: 'Dim._Lun._Mar._Mer._Jeu._Ven._Sam.'.split('_'),\n    weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'quelques secondes',\n      m: 'une minute',\n      mm: '%d minutes',\n      h: 'une heure',\n      hh: '%d heures',\n      d: 'un jour',\n      dd: '%d jours',\n      M: 'un mois',\n      MM: '%d mois',\n      y: 'un an',\n      yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal: function ordinal(number) {\n      return number + (number === 1 ? 'er' : 'e');\n    },\n    meridiemParse: /PD|MD/,\n    isPM: function isPM(input) {\n      return input.charAt(0) === 'M';\n    },\n    // In case the meridiem units are not separated around 12, then implement\n    // this function (look at locale/id.js for an example).\n    // meridiemHour : function (hour, meridiem) {\n    //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n    // },\n    meridiem: function meridiem(hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  });\n};","map":{"version":3,"sources":["imports/core/utils/localization.js"],"names":["module","export","getUserLocale","getFormats","localizationStartup","addLocaleData","watch","require","v","T9n","moment","default","Loadable","fr","number","money","style","currency","maximumFractionDigits","minimumFractionDigits","moneyWithoutCurrency","useGrouping","percentage","percentageRounded","setLanguage","setupMoment","locale","months","split","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","meridiemParse","isPM","input","charAt","meridiem","hours","minutes","isLower","week","dow","doy"],"mappings":"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","file":"imports/core/utils/localization.js.map","sourcesContent":["// This file is shared between client and server to allow server-side tests to have access to it\n\nimport { addLocaleData } from 'react-intl';\nimport { T9n } from 'meteor/softwarerero:accounts-t9n';\nimport moment from 'moment';\nimport Loadable from 'core/utils/loadable';\nimport fr from 'react-intl/locale-data/fr';\n\nexport const getUserLocale = () => 'fr-CH';\n\nexport const getFormats = () => ({\n  number: {\n    money: {\n      style: 'currency',\n      currency: 'CHF',\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    },\n    moneyWithoutCurrency: {\n      style: 'decimal',\n      useGrouping: true,\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    },\n    percentage: {\n      style: 'percent',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    },\n    percentageRounded: {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    },\n  },\n});\n\nexport const localizationStartup = () => {\n  // Add locales used in app here\n  addLocaleData(fr);\n  T9n.setLanguage('fr');\n  setupMoment();\n  moment.locale('fr');\n};\n\nconst setupMoment = () => {\n  moment.locale('fr', {\n    months: 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n    monthsShort: 'Janv._Févr._Mars_Avr._Mai_Juin_Juil._Août_Sept._Oct._Nov._Déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n    weekdaysShort: 'Dim._Lun._Mar._Mer._Jeu._Ven._Sam.'.split('_'),\n    weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm',\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: 'L',\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'quelques secondes',\n      m: 'une minute',\n      mm: '%d minutes',\n      h: 'une heure',\n      hh: '%d heures',\n      d: 'un jour',\n      dd: '%d jours',\n      M: 'un mois',\n      MM: '%d mois',\n      y: 'un an',\n      yy: '%d ans',\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal(number) {\n      return number + (number === 1 ? 'er' : 'e');\n    },\n    meridiemParse: /PD|MD/,\n    isPM(input) {\n      return input.charAt(0) === 'M';\n    },\n    // In case the meridiem units are not separated around 12, then implement\n    // this function (look at locale/id.js for an example).\n    // meridiemHour : function (hour, meridiem) {\n    //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n    // },\n    meridiem(hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n    week: {\n      dow: 1, // Monday is the first day of the week.\n      doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n  });\n};\n"]},"hash":"2b3f6a9f3feda7dbcea491144e1888755f2ea346"}
