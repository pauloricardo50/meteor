{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"meteor/cultofcoders:grapher-react","imported":["Query","NamedQuery"],"specifiers":[{"kind":"named","imported":"Query","local":"Query"},{"kind":"named","imported":"NamedQuery","local":"NamedQuery"}]},{"source":"./getDisplayName","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"getDisplayName"}]},{"source":"meteor/react-meteor-data","imported":["withTracker"],"specifiers":[{"kind":"named","imported":"withTracker","local":"withTracker"}]}],"exports":{"exported":["withQueryContainer","WrappedComponent"],"specifiers":[{"kind":"local","local":"withQueryContainer","exported":"default"},{"kind":"local","local":"WrappedComponent","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher-react/lib/withQueryContainer.js","filenameRelative":"packages/cultofcoders:grapher-react/lib/withQueryContainer.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher-react/lib/withQueryContainer.js.map","sourceFileName":"packages/cultofcoders:grapher-react/lib/withQueryContainer.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"withQueryContainer"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n    default: () => withQueryContainer\n});\nlet React;\nmodule.watch(require(\"react\"), {\n    default(v) {\n        React = v;\n    }\n\n}, 0);\nlet PropTypes;\nmodule.watch(require(\"prop-types\"), {\n    default(v) {\n        PropTypes = v;\n    }\n\n}, 1);\nlet Query, NamedQuery;\nmodule.watch(require(\"meteor/cultofcoders:grapher-react\"), {\n    Query(v) {\n        Query = v;\n    },\n\n    NamedQuery(v) {\n        NamedQuery = v;\n    }\n\n}, 2);\nlet getDisplayName;\nmodule.watch(require(\"./getDisplayName\"), {\n    default(v) {\n        getDisplayName = v;\n    }\n\n}, 3);\nlet withTracker;\nmodule.watch(require(\"meteor/react-meteor-data\"), {\n    withTracker(v) {\n        withTracker = v;\n    }\n\n}, 4);\nconst propTypes = {\n    grapher: PropTypes.shape({\n        isLoading: PropTypes.bool.isRequired,\n        error: PropTypes.object,\n        data: PropTypes.array,\n        query: PropTypes.oneOfType([PropTypes.instanceOf(Query), PropTypes.instanceOf(NamedQuery)])\n    }).isRequired,\n    config: PropTypes.object.isRequired,\n    props: PropTypes.object\n};\n\nfunction withQueryContainer(WrappedComponent) {\n    let GrapherQueryContainer = function ({\n        grapher,\n        config,\n        query,\n        props\n    }) {\n        const {\n            isLoading,\n            error,\n            data\n        } = grapher;\n\n        if (error && config.errorComponent) {\n            return React.createElement(config.errorComponent, {\n                error,\n                query\n            });\n        }\n\n        if (isLoading && config.loadingComponent) {\n            return React.createElement(config.loadingComponent, {\n                query\n            });\n        }\n\n        return React.createElement(WrappedComponent, (0, _extends3.default)({}, props, {\n            isLoading: error ? false : isLoading,\n            error,\n            data: config.single ? data[0] : data,\n            query\n        }));\n    };\n\n    GrapherQueryContainer.propTypes = propTypes;\n    GrapherQueryContainer.displayName = `GrapherQuery(${getDisplayName(WrappedComponent)})`;\n    return GrapherQueryContainer;\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher-react/lib/withQueryContainer.js"],"names":["module","export","default","withQueryContainer","React","watch","require","v","PropTypes","Query","NamedQuery","getDisplayName","withTracker","propTypes","grapher","shape","isLoading","bool","isRequired","error","object","data","array","query","oneOfType","instanceOf","config","props","WrappedComponent","GrapherQueryContainer","errorComponent","createElement","loadingComponent","single","displayName"],"mappings":";;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,aAAQ,MAAIC;AAAb,CAAd;AAAgD,IAAIC,KAAJ;AAAUJ,OAAOK,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACJ,YAAQK,CAAR,EAAU;AAACH,gBAAMG,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;AAAuD,IAAIC,SAAJ;AAAcR,OAAOK,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACJ,YAAQK,CAAR,EAAU;AAACC,oBAAUD,CAAV;AAAY;;AAAxB,CAAnC,EAA6D,CAA7D;AAAgE,IAAIE,KAAJ,EAAUC,UAAV;AAAqBV,OAAOK,KAAP,CAAaC,QAAQ,mCAAR,CAAb,EAA0D;AAACG,UAAMF,CAAN,EAAQ;AAACE,gBAAMF,CAAN;AAAQ,KAAlB;;AAAmBG,eAAWH,CAAX,EAAa;AAACG,qBAAWH,CAAX;AAAa;;AAA9C,CAA1D,EAA0G,CAA1G;AAA6G,IAAII,cAAJ;AAAmBX,OAAOK,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACJ,YAAQK,CAAR,EAAU;AAACI,yBAAeJ,CAAf;AAAiB;;AAA7B,CAAzC,EAAwE,CAAxE;AAA2E,IAAIK,WAAJ;AAAgBZ,OAAOK,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAACM,gBAAYL,CAAZ,EAAc;AAACK,sBAAYL,CAAZ;AAAc;;AAA9B,CAAjD,EAAiF,CAAjF;AAM/a,MAAMM,YAAY;AACdC,aAASN,UAAUO,KAAV,CAAgB;AACrBC,mBAAWR,UAAUS,IAAV,CAAeC,UADL;AAErBC,eAAOX,UAAUY,MAFI;AAGrBC,cAAMb,UAAUc,KAHK;AAIrBC,eAAOf,UAAUgB,SAAV,CAAoB,CACvBhB,UAAUiB,UAAV,CAAqBhB,KAArB,CADuB,EAEvBD,UAAUiB,UAAV,CAAqBf,UAArB,CAFuB,CAApB;AAJc,KAAhB,EAQNQ,UATW;AAUdQ,YAAQlB,UAAUY,MAAV,CAAiBF,UAVX;AAWdS,WAAOnB,UAAUY;AAXH,CAAlB;;AAce,SAASjB,kBAAT,CAA4ByB,gBAA5B,EAA8C;AACzD,QAAIC,wBAAwB,UAAS;AAACf,eAAD;AAAUY,cAAV;AAAkBH,aAAlB;AAAyBI;AAAzB,KAAT,EAA0C;AAClE,cAAM;AAACX,qBAAD;AAAYG,iBAAZ;AAAmBE;AAAnB,YAA2BP,OAAjC;;AAEA,YAAIK,SAASO,OAAOI,cAApB,EAAoC;AAChC,mBAAO1B,MAAM2B,aAAN,CAAoBL,OAAOI,cAA3B,EAA2C;AAC9CX,qBAD8C;AAE9CI;AAF8C,aAA3C,CAAP;AAIH;;AAED,YAAIP,aAAaU,OAAOM,gBAAxB,EAA0C;AACtC,mBAAO5B,MAAM2B,aAAN,CAAoBL,OAAOM,gBAA3B,EAA6C;AAChDT;AADgD,aAA7C,CAAP;AAGH;;AAED,eAAOnB,MAAM2B,aAAN,CAAoBH,gBAApB,6BACAD,KADA;AAEHX,uBAAWG,QAAQ,KAAR,GAAgBH,SAFxB;AAGHG,iBAHG;AAIHE,kBAAMK,OAAOO,MAAP,GAAgBZ,KAAK,CAAL,CAAhB,GAA0BA,IAJ7B;AAKHE;AALG,WAAP;AAOH,KAvBD;;AAyBAM,0BAAsBhB,SAAtB,GAAkCA,SAAlC;AACAgB,0BAAsBK,WAAtB,GAAqC,gBAAevB,eAAeiB,gBAAf,CAAiC,GAArF;AAEA,WAAOC,qBAAP;AACH","file":"packages/cultofcoders:grapher-react/lib/withQueryContainer.js.map","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Query, NamedQuery} from 'meteor/cultofcoders:grapher-react';\nimport getDisplayName from './getDisplayName';\nimport {withTracker} from 'meteor/react-meteor-data';\n\nconst propTypes = {\n    grapher: PropTypes.shape({\n        isLoading: PropTypes.bool.isRequired,\n        error: PropTypes.object,\n        data: PropTypes.array,\n        query: PropTypes.oneOfType([\n            PropTypes.instanceOf(Query),\n            PropTypes.instanceOf(NamedQuery),\n        ])\n    }).isRequired,\n    config: PropTypes.object.isRequired,\n    props: PropTypes.object,\n};\n\nexport default function withQueryContainer(WrappedComponent) {\n    let GrapherQueryContainer = function({grapher, config, query, props}) {\n        const {isLoading, error, data} = grapher;\n\n        if (error && config.errorComponent) {\n            return React.createElement(config.errorComponent, {\n                error,\n                query,\n            })\n        }\n\n        if (isLoading && config.loadingComponent) {\n            return React.createElement(config.loadingComponent, {\n                query,\n            })\n        }\n\n        return React.createElement(WrappedComponent, {\n            ...props,\n            isLoading: error ? false : isLoading,\n            error,\n            data: config.single ? data[0] : data,\n            query\n        })\n    };\n\n    GrapherQueryContainer.propTypes = propTypes;\n    GrapherQueryContainer.displayName = `GrapherQuery(${getDisplayName(WrappedComponent)})`;\n\n    return GrapherQueryContainer;\n}\n"]},"hash":"5a8c7f770fb00f0d4ef95d32807308fa33e8004a"}
