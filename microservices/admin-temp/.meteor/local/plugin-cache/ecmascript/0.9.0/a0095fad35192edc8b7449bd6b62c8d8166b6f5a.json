{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"lodash.clonedeep","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"deepClone"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]}],"exports":{"exported":["QueryBase"],"specifiers":[{"kind":"local","local":"QueryBase","exported":"default"}]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/query/query.base.js","filenameRelative":"packages/cultofcoders:grapher/lib/query/query.base.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/query/query.base.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/query/query.base.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"query.base"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n    default: () => QueryBase\n});\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n    default(v) {\n        deepClone = v;\n    }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n    check(v) {\n        check = v;\n    }\n\n}, 1);\n\nclass QueryBase {\n    constructor(collection, body, options = {}) {\n        this.isGlobalQuery = true;\n        this.collection = collection;\n        this.body = deepClone(body);\n        this.params = options.params || {};\n        this.options = options;\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        return new this.constructor(this.collection, deepClone(this.body), (0, _extends3.default)({\n            params\n        }, this.options));\n    }\n\n    get name() {\n        return `exposure_${this.collection._name}`;\n    } /**\n       * Validates the parameters\n       */\n\n    doValidateParams() {\n        const {\n            validateParams\n        } = this.options;\n        if (!validateParams) return;\n\n        if (_.isFunction(validateParams)) {\n            validateParams.call(null, this.params);\n        } else {\n            check(this.params);\n        }\n    } /**\n       * Merges the params with previous params.\n       *\n       * @param params\n       * @returns {Query}\n       */\n\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n        return this;\n    }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/query.base.js"],"names":["module","export","default","QueryBase","deepClone","watch","require","v","check","constructor","collection","body","options","isGlobalQuery","params","clone","newParams","_","extend","name","_name","doValidateParams","validateParams","isFunction","call","setParams"],"mappings":";;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC,aAAQ,MAAIC;AAAb,CAAd;AAAuC,IAAIC,SAAJ;AAAcJ,OAAOK,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACJ,YAAQK,CAAR,EAAU;AAACH,oBAAUG,CAAV;AAAY;;AAAxB,CAAzC,EAAmE,CAAnE;AAAsE,IAAIC,KAAJ;AAAUR,OAAOK,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,UAAMD,CAAN,EAAQ;AAACC,gBAAMD,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;;AAGtH,MAAMJ,SAAN,CAAgB;AAG3BM,gBAAYC,UAAZ,EAAwBC,IAAxB,EAA8BC,UAAU,EAAxC,EAA4C;AAAA,aAF5CC,aAE4C,GAF5B,IAE4B;AACxC,aAAKH,UAAL,GAAkBA,UAAlB;AAEA,aAAKC,IAAL,GAAYP,UAAUO,IAAV,CAAZ;AAEA,aAAKG,MAAL,GAAcF,QAAQE,MAAR,IAAkB,EAAhC;AACA,aAAKF,OAAL,GAAeA,OAAf;AACH;;AAEDG,UAAMC,SAAN,EAAiB;AACb,cAAMF,SAASG,EAAEC,MAAF,CAAS,EAAT,EAAad,UAAU,KAAKU,MAAf,CAAb,EAAqCE,SAArC,CAAf;;AAEA,eAAO,IAAI,KAAKP,WAAT,CACH,KAAKC,UADF,EAEHN,UAAU,KAAKO,IAAf,CAFG;AAICG;AAJD,WAKI,KAAKF,OALT,EAAP;AAQH;;AAED,QAAIO,IAAJ,GAAW;AACP,eAAQ,YAAW,KAAKT,UAAL,CAAgBU,KAAM,EAAzC;AACH,KA3B0B,CA6B3B;;;;AAGAC,uBAAmB;AACf,cAAM;AAACC;AAAD,YAAmB,KAAKV,OAA9B;AACA,YAAI,CAACU,cAAL,EAAqB;;AAErB,YAAIL,EAAEM,UAAF,CAAaD,cAAb,CAAJ,EAAkC;AAC9BA,2BAAeE,IAAf,CAAoB,IAApB,EAA0B,KAAKV,MAA/B;AACH,SAFD,MAEO;AACHN,kBAAM,KAAKM,MAAX;AACH;AACJ,KAzC0B,CA2C3B;;;;;;;AAMAW,cAAUX,MAAV,EAAkB;AACd,aAAKA,MAAL,GAAcG,EAAEC,MAAF,CAAS,EAAT,EAAa,KAAKJ,MAAlB,EAA0BA,MAA1B,CAAd;AAEA,eAAO,IAAP;AACH;;AArD0B","file":"packages/cultofcoders:grapher/lib/query/query.base.js.map","sourcesContent":["import deepClone from 'lodash.clonedeep';\nimport {check} from 'meteor/check';\n\nexport default class QueryBase {\n    isGlobalQuery = true;\n\n    constructor(collection, body, options = {}) {\n        this.collection = collection;\n\n        this.body = deepClone(body);\n\n        this.params = options.params || {};\n        this.options = options;\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        return new this.constructor(\n            this.collection,\n            deepClone(this.body),\n            {\n                params,\n                ...this.options\n            }\n        );\n    }\n\n    get name() {\n        return `exposure_${this.collection._name}`;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams() {\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        if (_.isFunction(validateParams)) {\n            validateParams.call(null, this.params)\n        } else {\n            check(this.params)\n        }\n    }\n\n    /**\n     * Merges the params with previous params.\n     *\n     * @param params\n     * @returns {Query}\n     */\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n}"]},"hash":"a0095fad35192edc8b7449bd6b62c8d8166b6f5a"}
