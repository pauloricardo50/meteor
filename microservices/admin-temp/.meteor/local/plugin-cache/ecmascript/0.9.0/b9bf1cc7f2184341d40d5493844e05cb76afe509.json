{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./collections","imported":["Authors","Groups","Posts","Categories","AuthorProfiles"],"specifiers":[{"kind":"named","imported":"Authors","local":"Authors"},{"kind":"named","imported":"Groups","local":"Groups"},{"kind":"named","imported":"Posts","local":"Posts"},{"kind":"named","imported":"Categories","local":"Categories"},{"kind":"named","imported":"AuthorProfiles","local":"AuthorProfiles"}]}],"exports":{"exported":["categoryIds","groupIds","authorIds","postIds"],"specifiers":[{"kind":"local","local":"categoryIds","exported":"categoryIds"},{"kind":"local","local":"groupIds","exported":"groupIds"},{"kind":"local","local":"authorIds","exported":"authorIds"},{"kind":"local","local":"postIds","exported":"postIds"}]}}},"options":{"filename":"packages/cultofcoders:grapher-react/__tests__/bootstrap/fixtures.js","filenameRelative":"packages/cultofcoders:grapher-react/__tests__/bootstrap/fixtures.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher-react/__tests__/bootstrap/fixtures.js.map","sourceFileName":"packages/cultofcoders:grapher-react/__tests__/bootstrap/fixtures.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"fixtures"},"ignored":false,"code":"module.export({\n    categoryIds: function () {\n        return categoryIds;\n    },\n    groupIds: function () {\n        return groupIds;\n    },\n    authorIds: function () {\n        return authorIds;\n    },\n    postIds: function () {\n        return postIds;\n    }\n});\nvar Authors = void 0,\n    Groups = void 0,\n    Posts = void 0,\n    Categories = void 0,\n    AuthorProfiles = void 0;\nmodule.watch(require(\"./collections\"), {\n    Authors: function (v) {\n        Authors = v;\n    },\n    Groups: function (v) {\n        Groups = v;\n    },\n    Posts: function (v) {\n        Posts = v;\n    },\n    Categories: function (v) {\n        Categories = v;\n    },\n    AuthorProfiles: function (v) {\n        AuthorProfiles = v;\n    }\n}, 0);\nvar GROUPS = 3;\nvar CATEGORIES = 3;\nvar AUTHOR_PER_GROUPS = 3;\nvar POSTS_PER_AUTHOR = 3;\nvar categoryIds = [];\nvar groupIds = [];\nvar authorIds = [];\nvar postIds = [];\nAuthors.remove({});\nAuthorProfiles.remove({});\nPosts.remove({});\nGroups.remove({});\nCategories.remove({});\n\nfor (var i = 0; i < CATEGORIES; i++) {\n    var categoryId = Categories.insert({\n        name: \"Category \" + i\n    });\n    categoryIds.push(categoryId);\n}\n\nfor (var _i = 0; _i < GROUPS; _i++) {\n    var groupId = Groups.insert({\n        name: \"Group \" + _i\n    });\n    groupIds.push(groupId);\n}\n\ngroupIds.forEach(function (groupId) {\n    for (var _i2 = 0; _i2 < AUTHOR_PER_GROUPS; _i2++) {\n        var authorId = Authors.insert({\n            name: \"Author \" + authorIds.length,\n            createdAt: new Date()\n        });\n        var authorProfileId = AuthorProfiles.insert({\n            name: \"Author \" + authorIds.length,\n            createdAt: new Date()\n        });\n        Authors.getLink(authorId, 'profile').set(authorProfileId);\n        authorIds.push(authorId); // link it to the group\n\n        var groupLink = Authors.getLink(authorId, 'groups');\n        groupLink.add(groupId);\n\n        for (var j = 0; j < POSTS_PER_AUTHOR; j++) {\n            createPost(authorId);\n        }\n    }\n});\n\nfunction createPost(authorId) {\n    var postId = Posts.insert({\n        title: \"Post \" + postIds.length,\n        createdAt: new Date()\n    });\n    postIds.push(postId);\n    var authorLink = Posts.getLink(postId, 'author');\n    authorLink.set(authorId);\n    var randomCategoryId = categoryIds[Math.floor(Math.random() * categoryIds.length)];\n    var categoriesLink = Posts.getLink(postId, 'categories');\n    categoriesLink.add(randomCategoryId, {\n        createdAt: new Date()\n    });\n    return postId;\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher-react/__tests__/bootstrap/fixtures.js"],"names":["module","export","categoryIds","groupIds","authorIds","postIds","Authors","Groups","Posts","Categories","AuthorProfiles","watch","require","v","GROUPS","CATEGORIES","AUTHOR_PER_GROUPS","POSTS_PER_AUTHOR","remove","i","categoryId","insert","name","push","groupId","forEach","authorId","length","createdAt","Date","authorProfileId","getLink","set","groupLink","add","j","createPost","postId","title","authorLink","randomCategoryId","Math","floor","random","categoriesLink"],"mappings":"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","file":"packages/cultofcoders:grapher-react/__tests__/bootstrap/fixtures.js.map","sourcesContent":["import {Authors, Groups, Posts, Categories, AuthorProfiles} from './collections';\n\nconst GROUPS = 3;\nconst CATEGORIES = 3;\nconst AUTHOR_PER_GROUPS = 3;\nconst POSTS_PER_AUTHOR = 3;\n\nexport let categoryIds = [];\nexport let groupIds = [];\nexport let authorIds = [];\nexport let postIds = [];\n\nAuthors.remove({});\nAuthorProfiles.remove({});\nPosts.remove({});\nGroups.remove({});\nCategories.remove({});\n\nfor (let i = 0; i < CATEGORIES; i++) {\n    const categoryId = Categories.insert({\n        name: `Category ${i}`\n    });\n\n    categoryIds.push(categoryId);\n}\n\n\nfor (let i = 0; i < GROUPS; i++) {\n    const groupId = Groups.insert({\n        name: `Group ${i}`\n    });\n\n    groupIds.push(groupId);\n}\n\ngroupIds.forEach(groupId => {\n    for (let i = 0; i < AUTHOR_PER_GROUPS; i++) {\n        const authorId = Authors.insert({\n            name: `Author ${authorIds.length}`,\n            createdAt: new Date(),\n        });\n\n        const authorProfileId = AuthorProfiles.insert({\n            name: `Author ${authorIds.length}`,\n            createdAt: new Date(),\n        });\n\n        Authors.getLink(authorId, 'profile').set(authorProfileId);\n\n        authorIds.push(authorId);\n\n        // link it to the group\n        const groupLink = Authors.getLink(authorId, 'groups');\n        groupLink.add(groupId);\n\n        for (let j = 0; j < POSTS_PER_AUTHOR; j++) {\n            createPost(authorId);\n        }\n    }\n});\n\nfunction createPost(authorId) {\n    const postId = Posts.insert({\n        title: `Post ${postIds.length}`,\n        createdAt: new Date(),\n    });\n\n    postIds.push(postId);\n\n    const authorLink = Posts.getLink(postId, 'author');\n    authorLink.set(authorId);\n\n    const randomCategoryId = categoryIds[Math.floor(Math.random()*categoryIds.length)];\n\n    const categoriesLink = Posts.getLink(postId, 'categories');\n    categoriesLink.add(randomCategoryId, {\n        createdAt: new Date(),\n    });\n\n    return postId;\n}\n"]},"hash":"b9bf1cc7f2184341d40d5493844e05cb76afe509"}
