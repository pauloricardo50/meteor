{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"./cache.js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"settings"}]}],"exports":{"exported":["MigrationHistory","addMigration","collection","insertFn","options","migrate","collectionName","cacheField","selector","autoMigrate"],"specifiers":[{"kind":"local","local":"MigrationHistory","exported":"MigrationHistory"},{"kind":"local","local":"addMigration","exported":"addMigration"},{"kind":"local","local":"collection","exported":"collection"},{"kind":"local","local":"insertFn","exported":"insertFn"},{"kind":"local","local":"options","exported":"options"},{"kind":"local","local":"migrate","exported":"migrate"},{"kind":"local","local":"collectionName","exported":"collectionName"},{"kind":"local","local":"cacheField","exported":"cacheField"},{"kind":"local","local":"selector","exported":"selector"},{"kind":"local","local":"autoMigrate","exported":"autoMigrate"}]}}},"options":{"filename":"packages/herteby:denormalize/migrations.js","filenameRelative":"packages/herteby:denormalize/migrations.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/herteby:denormalize/migrations.js.map","sourceFileName":"packages/herteby:denormalize/migrations.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"migrations"},"ignored":false,"code":"module.export({\n  MigrationHistory: () => MigrationHistory,\n  addMigration: () => addMigration,\n  migrate: () => migrate,\n  autoMigrate: () => autoMigrate\n});\n\nlet _;\n\nmodule.watch(require(\"lodash\"), {\n  default(v) {\n    _ = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet settings;\nmodule.watch(require(\"./cache.js\"), {\n  default(v) {\n    settings = v;\n  }\n\n}, 2);\nconst MigrationHistory = new Mongo.Collection('_cacheMigrations');\nlet migrations = [];\n\nfunction addMigration(collection, insertFn, options) {\n  let opts = _.clone(options);\n\n  if (opts.collection) {\n    //prevent Error: Converting circular structure to JSON\n    opts.collection = opts.collection._name;\n  }\n\n  opts = JSON.stringify(opts);\n  migrations.push({\n    options: opts,\n    collectionName: collection._name,\n    collection: collection,\n    cacheField: options.cacheField,\n    fn: insertFn\n  });\n}\n\nfunction migrate(collectionName, cacheField, selector) {\n  let migration = _.find(migrations, {\n    collectionName,\n    cacheField\n  });\n\n  if (!migration) {\n    throw new Error('no migration found for ' + collectionName + ' - ' + cacheField);\n  } else {\n    let time = new Date();\n    let n = 0;\n    migration.collection.find(selector || {}).forEach(doc => {\n      migration.fn(null, doc);\n      n++;\n    });\n    console.log(`migrated ${cacheField} of ${n} docs in ${collectionName + (selector ? ' matching ' + JSON.stringify(selector) : '')}. It took ${new Date() - time}ms`);\n  }\n}\n\nfunction autoMigrate() {\n  _.each(migrations, migration => {\n    if (!MigrationHistory.findOne({\n      collectionName: migration.collectionName,\n      options: migration.options\n    })) {\n      migrate(migration.collectionName, migration.cacheField);\n      MigrationHistory.insert({\n        collectionName: migration.collectionName,\n        options: migration.options,\n        date: new Date()\n      });\n    }\n  });\n}","map":{"version":3,"sources":["packages/herteby:denormalize/migrations.js"],"names":["module","export","MigrationHistory","addMigration","migrate","autoMigrate","_","watch","require","default","v","Mongo","settings","Collection","migrations","collection","insertFn","options","opts","clone","_name","JSON","stringify","push","collectionName","cacheField","fn","selector","migration","find","Error","time","Date","n","forEach","doc","console","log","each","findOne","insert","date"],"mappings":"AAAAA,OAAOC,MAAP,CAAc;AAACC,oBAAiB,MAAIA,gBAAtB;AAAuCC,gBAAa,MAAIA,YAAxD;AAAqEC,WAAQ,MAAIA,OAAjF;AAAyFC,eAAY,MAAIA;AAAzG,CAAd;;AAAqI,IAAIC,CAAJ;;AAAMN,OAAOO,KAAP,CAAaC,QAAQ,QAAR,CAAb,EAA+B;AAACC,UAAQC,CAAR,EAAU;AAACJ,QAAEI,CAAF;AAAI;;AAAhB,CAA/B,EAAiD,CAAjD;AAAoD,IAAIC,KAAJ;AAAUX,OAAOO,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIE,QAAJ;AAAaZ,OAAOO,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,UAAQC,CAAR,EAAU;AAACE,eAASF,CAAT;AAAW;;AAAvB,CAAnC,EAA4D,CAA5D;AAI3Q,MAAMR,mBAAmB,IAAIS,MAAME,UAAV,CAAqB,kBAArB,CAAzB;AAEP,IAAIC,aAAa,EAAjB;;AAEO,SAASX,YAAT,CAAsBY,UAAtB,EAAkCC,QAAlC,EAA4CC,OAA5C,EAAoD;AACzD,MAAIC,OAAOZ,EAAEa,KAAF,CAAQF,OAAR,CAAX;;AACA,MAAGC,KAAKH,UAAR,EAAmB;AAAE;AACnBG,SAAKH,UAAL,GAAkBG,KAAKH,UAAL,CAAgBK,KAAlC;AACD;;AACDF,SAAOG,KAAKC,SAAL,CAAeJ,IAAf,CAAP;AACAJ,aAAWS,IAAX,CAAgB;AACdN,aAAQC,IADM;AAEdM,oBAAeT,WAAWK,KAFZ;AAGdL,gBAAWA,UAHG;AAIdU,gBAAWR,QAAQQ,UAJL;AAKdC,QAAGV;AALW,GAAhB;AAOD;;AAEM,SAASZ,OAAT,CAAiBoB,cAAjB,EAAiCC,UAAjC,EAA6CE,QAA7C,EAAsD;AAC3D,MAAIC,YAAYtB,EAAEuB,IAAF,CAAOf,UAAP,EAAmB;AAACU,kBAAD;AAAiBC;AAAjB,GAAnB,CAAhB;;AACA,MAAG,CAACG,SAAJ,EAAc;AACZ,UAAM,IAAIE,KAAJ,CAAU,4BAA4BN,cAA5B,GAA6C,KAA7C,GAAqDC,UAA/D,CAAN;AACD,GAFD,MAEO;AACL,QAAIM,OAAO,IAAIC,IAAJ,EAAX;AACA,QAAIC,IAAI,CAAR;AACAL,cAAUb,UAAV,CAAqBc,IAArB,CAA0BF,YAAY,EAAtC,EAA0CO,OAA1C,CAAkDC,OAAO;AACvDP,gBAAUF,EAAV,CAAa,IAAb,EAAmBS,GAAnB;AACAF;AACD,KAHD;AAIAG,YAAQC,GAAR,CAAa,YAAWZ,UAAW,OAAMQ,CAAE,YAAWT,kBAAkBG,WAAW,eAAeN,KAAKC,SAAL,CAAeK,QAAf,CAA1B,GAAqD,EAAvE,CAA2E,aAAY,IAAIK,IAAJ,KAAaD,IAAK,IAA/J;AACD;AACF;;AAEM,SAAS1B,WAAT,GAAsB;AAC3BC,IAAEgC,IAAF,CAAOxB,UAAP,EAAmBc,aAAa;AAC9B,QAAG,CAAC1B,iBAAiBqC,OAAjB,CAAyB;AAACf,sBAAeI,UAAUJ,cAA1B;AAA0CP,eAAQW,UAAUX;AAA5D,KAAzB,CAAJ,EAAmG;AACjGb,cAAQwB,UAAUJ,cAAlB,EAAkCI,UAAUH,UAA5C;AACAvB,uBAAiBsC,MAAjB,CAAwB;AACtBhB,wBAAeI,UAAUJ,cADH;AAEtBP,iBAAQW,UAAUX,OAFI;AAGtBwB,cAAK,IAAIT,IAAJ;AAHiB,OAAxB;AAKD;AACF,GATD;AAUD","file":"packages/herteby:denormalize/migrations.js.map","sourcesContent":["import _ from 'lodash'\nimport {Mongo} from 'meteor/mongo'\nimport settings from './cache.js'\n\nexport const MigrationHistory = new Mongo.Collection('_cacheMigrations')\n\nlet migrations = []\n\nexport function addMigration(collection, insertFn, options){\n  let opts = _.clone(options)\n  if(opts.collection){ //prevent Error: Converting circular structure to JSON\n    opts.collection = opts.collection._name\n  }\n  opts = JSON.stringify(opts)\n  migrations.push({\n    options:opts,\n    collectionName:collection._name,\n    collection:collection,\n    cacheField:options.cacheField,\n    fn:insertFn\n  })\n}\n\nexport function migrate(collectionName, cacheField, selector){\n  let migration = _.find(migrations, {collectionName, cacheField})\n  if(!migration){\n    throw new Error('no migration found for ' + collectionName + ' - ' + cacheField)\n  } else {\n    let time = new Date()\n    let n = 0\n    migration.collection.find(selector || {}).forEach(doc => {\n      migration.fn(null, doc)\n      n++\n    })\n    console.log(`migrated ${cacheField} of ${n} docs in ${collectionName + (selector ? ' matching ' + JSON.stringify(selector) : '')}. It took ${new Date() - time}ms`)\n  }\n}\n\nexport function autoMigrate(){\n  _.each(migrations, migration => {\n    if(!MigrationHistory.findOne({collectionName:migration.collectionName, options:migration.options})){\n      migrate(migration.collectionName, migration.cacheField)\n      MigrationHistory.insert({\n        collectionName:migration.collectionName,\n        options:migration.options,\n        date:new Date()\n      })\n    }    \n  })\n}"]},"hash":"3f0212af81c8f025e41e9333f0f8e70413a74ae6"}
