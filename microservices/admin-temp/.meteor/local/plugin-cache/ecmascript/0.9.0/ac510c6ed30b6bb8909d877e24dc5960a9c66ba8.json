{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]},{"source":"../utils/conversionFunctions","imported":["toMoney"],"specifiers":[{"kind":"named","imported":"toMoney","local":"toMoney"}]},{"source":"../config/constants","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"constants"}]},{"source":"./Translation","imported":["T","IntlNumber"],"specifiers":[{"kind":"named","imported":"T","local":"T"},{"kind":"named","imported":"IntlNumber","local":"IntlNumber"}]},{"source":"../utils/loanFunctions","imported":["getPropAndWork","getProjectValue","getTotalUsed","getLoanValue","getLenderCount","getBorrowRatio"],"specifiers":[{"kind":"named","imported":"getPropAndWork","local":"getPropAndWork"},{"kind":"named","imported":"getProjectValue","local":"getProjectValue"},{"kind":"named","imported":"getTotalUsed","local":"getTotalUsed"},{"kind":"named","imported":"getLoanValue","local":"getLoanValue"},{"kind":"named","imported":"getLenderCount","local":"getLenderCount"},{"kind":"named","imported":"getBorrowRatio","local":"getBorrowRatio"}]},{"source":"../utils/borrowerFunctions","imported":["getExpenses","getBorrowerIncome","getRealEstateFortune","getTotalFortune","getRealEstateDebt","getFortune","getBonusIncome","getOtherIncome","getBorrowerSalary","getRealEstateValue","getInsuranceFortune"],"specifiers":[{"kind":"named","imported":"getExpenses","local":"getExpenses"},{"kind":"named","imported":"getBorrowerIncome","local":"getBorrowerIncome"},{"kind":"named","imported":"getRealEstateFortune","local":"getRealEstateFortune"},{"kind":"named","imported":"getTotalFortune","local":"getTotalFortune"},{"kind":"named","imported":"getRealEstateDebt","local":"getRealEstateDebt"},{"kind":"named","imported":"getFortune","local":"getFortune"},{"kind":"named","imported":"getBonusIncome","local":"getBonusIncome"},{"kind":"named","imported":"getOtherIncome","local":"getOtherIncome"},{"kind":"named","imported":"getBorrowerSalary","local":"getBorrowerSalary"},{"kind":"named","imported":"getRealEstateValue","local":"getRealEstateValue"},{"kind":"named","imported":"getInsuranceFortune","local":"getInsuranceFortune"}]},{"source":"../utils/finance-math","imported":["getMonthlyPayment","getIncomeRatio"],"specifiers":[{"kind":"named","imported":"getMonthlyPayment","local":"getMonthlyPayment"},{"kind":"named","imported":"getIncomeRatio","local":"getIncomeRatio"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/components/Recap.jsx","filenameRelative":"imports/core/components/Recap.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/components/Recap.jsx.map","sourceFileName":"imports/core/components/Recap.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Recap"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 0);\nvar React = void 0;\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  }\n}, 1);\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 2);\nvar classnames = void 0;\nmodule.watch(require(\"classnames\"), {\n  default: function _default(v) {\n    classnames = v;\n  }\n}, 3);\n\nvar _toMoney = void 0;\n\nmodule.watch(require(\"../utils/conversionFunctions\"), {\n  toMoney: function toMoney(v) {\n    _toMoney = v;\n  }\n}, 4);\nvar constants = void 0;\nmodule.watch(require(\"../config/constants\"), {\n  default: function _default(v) {\n    constants = v;\n  }\n}, 5);\n\nvar _T = void 0,\n    _IntlNumber = void 0;\n\nmodule.watch(require(\"./Translation\"), {\n  T: function T(v) {\n    _T = v;\n  },\n  IntlNumber: function IntlNumber(v) {\n    _IntlNumber = v;\n  }\n}, 6);\n\nvar _getPropAndWork = void 0,\n    _getProjectValue = void 0,\n    _getTotalUsed = void 0,\n    _getLoanValue = void 0,\n    _getLenderCount = void 0,\n    _getBorrowRatio = void 0;\n\nmodule.watch(require(\"../utils/loanFunctions\"), {\n  getPropAndWork: function getPropAndWork(v) {\n    _getPropAndWork = v;\n  },\n  getProjectValue: function getProjectValue(v) {\n    _getProjectValue = v;\n  },\n  getTotalUsed: function getTotalUsed(v) {\n    _getTotalUsed = v;\n  },\n  getLoanValue: function getLoanValue(v) {\n    _getLoanValue = v;\n  },\n  getLenderCount: function getLenderCount(v) {\n    _getLenderCount = v;\n  },\n  getBorrowRatio: function getBorrowRatio(v) {\n    _getBorrowRatio = v;\n  }\n}, 7);\n\nvar _getExpenses = void 0,\n    _getBorrowerIncome = void 0,\n    _getRealEstateFortune = void 0,\n    _getTotalFortune = void 0,\n    _getRealEstateDebt = void 0,\n    _getFortune = void 0,\n    _getBonusIncome = void 0,\n    _getOtherIncome = void 0,\n    _getBorrowerSalary = void 0,\n    _getRealEstateValue = void 0,\n    _getInsuranceFortune = void 0;\n\nmodule.watch(require(\"../utils/borrowerFunctions\"), {\n  getExpenses: function getExpenses(v) {\n    _getExpenses = v;\n  },\n  getBorrowerIncome: function getBorrowerIncome(v) {\n    _getBorrowerIncome = v;\n  },\n  getRealEstateFortune: function getRealEstateFortune(v) {\n    _getRealEstateFortune = v;\n  },\n  getTotalFortune: function getTotalFortune(v) {\n    _getTotalFortune = v;\n  },\n  getRealEstateDebt: function getRealEstateDebt(v) {\n    _getRealEstateDebt = v;\n  },\n  getFortune: function getFortune(v) {\n    _getFortune = v;\n  },\n  getBonusIncome: function getBonusIncome(v) {\n    _getBonusIncome = v;\n  },\n  getOtherIncome: function getOtherIncome(v) {\n    _getOtherIncome = v;\n  },\n  getBorrowerSalary: function getBorrowerSalary(v) {\n    _getBorrowerSalary = v;\n  },\n  getRealEstateValue: function getRealEstateValue(v) {\n    _getRealEstateValue = v;\n  },\n  getInsuranceFortune: function getInsuranceFortune(v) {\n    _getInsuranceFortune = v;\n  }\n}, 8);\n\nvar _getMonthlyPayment = void 0,\n    _getIncomeRatio = void 0;\n\nmodule.watch(require(\"../utils/finance-math\"), {\n  getMonthlyPayment: function getMonthlyPayment(v) {\n    _getMonthlyPayment = v;\n  },\n  getIncomeRatio: function getIncomeRatio(v) {\n    _getIncomeRatio = v;\n  }\n}, 9);\n\nvar getDashboardArray = function getDashboardArray(props) {\n  var r = props.loan;\n  var b = props.borrowers;\n  var p = props.property;\n\n  var incomeRatio = _getIncomeRatio(props);\n\n  var borrowRatio = _getBorrowRatio(props);\n\n  var loanValue = _getLoanValue(props);\n\n  var project = _getProjectValue(props);\n\n  var totalUsed = _getTotalUsed(props);\n\n  var propAndWork = _getPropAndWork(props);\n\n  var monthly = _getMonthlyPayment(props).total;\n\n  var expenses = _getExpenses(props);\n\n  var bonusIncome = _getBonusIncome(props);\n\n  var otherIncome = _getOtherIncome(props);\n\n  var realEstateFortune = _getRealEstateFortune(props);\n\n  var realEstateValue = _getRealEstateValue(props);\n\n  var realEstateDebt = _getRealEstateDebt(props);\n\n  var fortune = _getFortune(props);\n\n  var insuranceFortune = _getInsuranceFortune(props);\n\n  var totalFortune = _getTotalFortune(props);\n\n  var lenderCount = _getLenderCount(props);\n\n  return [{\n    title: true,\n    label: 'Recap.title',\n    props: {\n      style: {\n        marginTop: 0\n      }\n    }\n  }, {\n    label: 'Recap.purchasePrice',\n    value: _toMoney(Math.round(p.value))\n  }, {\n    label: 'Recap.propertyWork',\n    value: _toMoney(Math.round(r.general.propertyWork)),\n    hide: !r.general.propertyWork,\n    spacing: true\n  }, {\n    label: 'Recap.propAndWork',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(Math.round(propAndWork))\n    ),\n    hide: !r.general.propertyWork\n  }, {\n    label: 'general.notaryFees',\n    value: _toMoney(Math.round(p.value * constants.notaryFees))\n  }, {\n    label: 'general.insuranceFees',\n    value: _toMoney(Math.round(r.general.insuranceFortuneUsed * constants.lppFees)),\n    hide: !r.general.insuranceFortuneUsed\n  }, {\n    label: 'Recap.totalCost',\n    labelStyle: {\n      fontWeight: 400\n    },\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(project)\n    ),\n    spacingTop: true,\n    spacing: true,\n    bold: true\n  }, {\n    title: true,\n    label: 'Recap.financing'\n  }, {\n    label: 'general.ownFunds',\n    value: _toMoney(totalUsed),\n    hide: r.general.insuranceFortuneUsed\n  }, {\n    label: 'Recap.ownFundsCash',\n    value: _toMoney(r.general.fortuneUsed),\n    hide: !r.general.insuranceFortuneUsed\n  }, {\n    label: 'Recap.ownFundsInsurance',\n    value: _toMoney(r.general.insuranceFortuneUsed),\n    hide: !r.general.insuranceFortuneUsed\n  }, {\n    label: 'Recap.ownFundsTotal',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(totalUsed)\n    ),\n    spacingTop: true,\n    hide: !r.general.insuranceFortuneUsed,\n    bold: true\n  }, {\n    label: 'general.mortgageLoan',\n    value: _toMoney(loanValue)\n  }, {\n    label: 'Recap.totalFinancing',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(project)\n    ),\n    spacingTop: true,\n    spacing: true,\n    bold: true\n  }, {\n    label: 'Recap.monthlyCost',\n    value: React.createElement(\n      \"span\",\n      null,\n      _toMoney(monthly),\n      \" \",\n      React.createElement(\n        \"small\",\n        null,\n        \"/mois\"\n      )\n    )\n  }, {\n    title: true,\n    label: 'Recap.finmaRules'\n  }, {\n    label: r.general.propertyWork ? 'Recap.borrowRatio2' : 'Recap.borrowRatio1',\n    value: React.createElement(\n      \"span\",\n      null,\n      React.createElement(_IntlNumber, {\n        value: borrowRatio,\n        format: \"percentage\"\n      }),\n      ' ',\n      React.createElement(\"span\", {\n        className: borrowRatio <= constants.maxLoan(r.general.usageType) + 0.001 // add 0.1% to avoid rounding errors\n        ? 'fa fa-check success' : 'fa fa-times error'\n      })\n    )\n  }, {\n    label: 'Recap.incomeRatio',\n    value: React.createElement(\n      \"span\",\n      null,\n      React.createElement(_IntlNumber, {\n        value: incomeRatio,\n        format: \"percentage\"\n      }),\n      ' ',\n      React.createElement(\"span\", {\n        className: incomeRatio <= 1 / 3 ? 'fa fa-check success' : incomeRatio <= 0.38 ? 'fa fa-exclamation warning' : 'fa fa-times error'\n      })\n    )\n  }, {\n    title: true,\n    label: 'Recap.fortune',\n    hide: !(realEstateFortune || insuranceFortune)\n  }, {\n    label: 'Recap.bankFortune',\n    value: _toMoney(fortune)\n  }, {\n    label: 'Recap.insuranceFortune',\n    value: _toMoney(insuranceFortune),\n    hide: !insuranceFortune\n  }, {\n    label: 'Recap.availableFunds',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(totalFortune)\n    ),\n    hide: !realEstateFortune,\n    spacingTop: true,\n    bold: true\n  }, {\n    label: 'Recap.realEstate',\n    value: _toMoney(realEstateValue),\n    hide: !realEstateFortune,\n    spacingTop: true\n  }, {\n    label: 'Recap.realEstateLoans',\n    value: \"- \" + _toMoney(realEstateDebt),\n    hide: !realEstateFortune\n  }, {\n    label: 'Recap.netFortune',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(totalFortune + realEstateFortune)\n    ),\n    spacingTop: true,\n    hide: !realEstateFortune\n  }, {\n    title: true,\n    label: 'general.income'\n  }, {\n    label: 'general.salary',\n    value: _toMoney(_getBorrowerSalary(props))\n  }, {\n    label: 'Recap.consideredBonus',\n    value: _toMoney(bonusIncome),\n    hide: !bonusIncome\n  }, {\n    label: 'Recap.otherIncome',\n    value: _toMoney(otherIncome),\n    hide: !otherIncome\n  }, {\n    label: 'Recap.expenses',\n    value: \"- \" + _toMoney(expenses),\n    hide: !expenses\n  }, {\n    label: 'Recap.consideredIncome',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(_getBorrowerIncome(props))\n    ),\n    spacingTop: true,\n    bold: true\n  }, {\n    title: true,\n    label: 'general.lenders'\n  }, {\n    label: 'Recap.interestedLenders',\n    value: lenderCount,\n    spacing: true\n  }];\n};\n\nvar getSmallDashboardArray = function getSmallDashboardArray(props) {\n  var r = props.loan;\n  var b = props.borrowers;\n  var p = props.property;\n\n  var loanValue = _getLoanValue(props);\n\n  var monthly = _getMonthlyPayment(props).total;\n\n  var totalUsed = _getTotalUsed(props);\n\n  var propAndWork = _getPropAndWork(props);\n\n  var project = _getProjectValue(props);\n\n  return [{\n    title: true,\n    label: 'Recap.title',\n    props: {\n      style: {\n        marginTop: 0\n      }\n    }\n  }, {\n    label: 'Recap.purchasePrice',\n    value: _toMoney(Math.round(p.value))\n  }, {\n    label: 'Recap.propertyWork',\n    value: _toMoney(Math.round(r.general.propertyWork)),\n    hide: !r.general.propertyWork\n  }, {\n    label: 'general.notaryFees',\n    value: _toMoney(Math.round(p.value * constants.notaryFees))\n  }, {\n    label: 'general.insuranceFees',\n    value: _toMoney(Math.round(r.general.insuranceFortuneUsed * constants.lppFees)),\n    hide: !r.general.insuranceFortuneUsed\n  }, {\n    label: 'Recap.totalCost',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(project)\n    ),\n    spacingTop: true,\n    spacing: true,\n    bold: true\n  }, {\n    title: true,\n    label: 'Recap.financing'\n  }, {\n    label: 'general.mortgageLoan',\n    value: _toMoney(loanValue)\n  }, {\n    label: 'Recap.ownFundsCash',\n    value: _toMoney(r.general.fortuneUsed),\n    hide: !r.general.insuranceFortuneUsed\n  }, {\n    label: 'Recap.ownFundsInsurance',\n    value: _toMoney(r.general.insuranceFortuneUsed),\n    hide: !r.general.insuranceFortuneUsed\n  }, {\n    label: 'Recap.totalFinancing',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(project)\n    ),\n    spacingTop: true,\n    spacing: true,\n    bold: true\n  }, {\n    label: 'Recap.monthlyCost',\n    value: React.createElement(\n      \"span\",\n      null,\n      _toMoney(monthly),\n      \" \",\n      React.createElement(\n        \"small\",\n        null,\n        \"/mois\"\n      )\n    )\n  }];\n};\n\nvar getStart2Array = function getStart2Array(props) {\n  var p = props;\n  return [{\n    title: true,\n    label: 'Recap.title',\n    props: {\n      style: {\n        marginTop: 0\n      }\n    }\n  }, {\n    label: p.type === 'test' ? 'Recap.purchasePrice' : 'Recap.maxPurchasePrice',\n    value: _toMoney(Math.round(p.property))\n  }, {\n    label: 'Recap.propertyWork',\n    value: _toMoney(Math.round(p.propertyWork)),\n    hide: !p.propertyWork,\n    spacing: true\n  }, {\n    label: 'Recap.propAndWork',\n    value: _toMoney(Math.round(p.propAndWork)),\n    hide: !p.propertyWork\n  }, {\n    label: 'general.notaryFees',\n    value: _toMoney(Math.round(p.property * constants.notaryFees))\n  }, {\n    label: 'general.insuranceFees',\n    value: _toMoney(Math.round(p.lppFees)),\n    hide: !p.insuranceFortuneUsed\n  }, {\n    label: 'Recap.totalCost',\n    labelStyle: {\n      fontWeight: 400\n    },\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"bold sum\"\n      },\n      _toMoney(Math.round(p.property * (1 + constants.notaryFees) + p.propertyWork + p.lppFees))\n    ),\n    spacingTop: true,\n    spacing: p.fortuneUsed\n  }, {\n    label: 'general.ownFunds',\n    value: _toMoney(Math.round(p.fortuneUsed)),\n    hide: !p.fortuneUsed || p.insuranceFortuneUsed\n  }, {\n    label: 'Recap.ownFundsCash',\n    value: _toMoney(p.fortuneUsed),\n    hide: !p.fortuneUsed || !p.insuranceFortuneUsed\n  }, {\n    label: 'Recap.ownFundsInsurance',\n    value: _toMoney(p.insuranceFortuneUsed),\n    hide: !p.fortuneUsed || !p.insuranceFortuneUsed\n  }, {\n    label: 'Recap.ownFundsTotal',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(Math.round(p.fortuneUsed + p.insuranceFortuneUsed))\n    ),\n    spacingTop: true,\n    hide: !p.fortuneUsed || !p.insuranceFortuneUsed,\n    bold: true\n  }, {\n    label: 'general.mortgageLoan',\n    value: _toMoney(Math.round(p.loanWanted)),\n    hide: !p.loanWanted,\n    spacing: !p.loanWanted\n  }, {\n    label: 'Recap.monthlyCost',\n    value: React.createElement(\n      \"span\",\n      null,\n      _toMoney(Math.round(p.monthlyReal)),\n      \" \",\n      React.createElement(\n        \"small\",\n        null,\n        \"/mois\"\n      )\n    ),\n    hide: !p.fortuneUsed\n  }, {\n    title: true,\n    label: 'Recap.finmaRules',\n    hide: !p.fortuneUsed\n  }, {\n    label: p.propertyWork ? 'Recap.borrowRatio2' : 'Recap.borrowRatio1',\n    value: React.createElement(\n      \"span\",\n      null,\n      React.createElement(_IntlNumber, {\n        value: p.borrow,\n        format: \"percentage\"\n      }),\n      ' ',\n      React.createElement(\"span\", {\n        className: p.borrow <= constants.maxLoan(p.usageType) + 0.001 // add 0.1% to avoid rounding errors\n        ? 'fa fa-check success' : 'fa fa-times error'\n      })\n    ),\n    hide: !p.fortuneUsed\n  }, {\n    label: 'Recap.incomeRatio',\n    value: React.createElement(\n      \"span\",\n      null,\n      React.createElement(_IntlNumber, {\n        value: p.ratio,\n        format: \"percentage\"\n      }),\n      ' ',\n      React.createElement(\"span\", {\n        className: p.ratio <= 1 / 3 ? 'fa fa-check success' : p.ratio <= 0.38 ? 'fa fa-exclamation warning' : 'fa fa-times error'\n      })\n    ),\n    hide: !p.fortuneUsed\n  }, {\n    title: true,\n    label: 'Recap.fortune',\n    hide: !(p.fortune || p.realEstate || p.insuranceFortune)\n  }, {\n    label: 'Recap.bankFortune',\n    value: _toMoney(Math.round(p.fortune)),\n    hide: !p.fortune\n  }, {\n    label: 'Recap.insuranceFortune',\n    value: _toMoney(Math.round(p.insuranceFortuneDisplayed)),\n    hide: !p.insuranceFortuneDisplayed\n  }, {\n    label: 'Recap.availableFunds',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(Math.round(p.fortune + p.insuranceFortuneDisplayed))\n    ),\n    hide: !p.insuranceFortuneDisplayed,\n    spacingTop: true,\n    bold: true\n  }, {\n    label: 'Recap.realEstate',\n    value: _toMoney(Math.round(p.realEstateValue)),\n    hide: !p.realEstate,\n    spacingTop: true\n  }, {\n    label: 'Recap.realEstateLoans',\n    value: \"- \" + _toMoney(Math.round(p.realEstateDebt)),\n    hide: !p.realEstate\n  }, {\n    label: 'Recap.netFortune',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(Math.round(p.fortune + p.insuranceFortuneDisplayed + p.realEstate))\n    ),\n    spacingTop: true,\n    hide: !p.realEstate,\n    bold: true\n  }, {\n    title: true,\n    label: 'general.income',\n    hide: !(p.salary || p.bonus || p.otherIncome || p.expenses || p.propertyRent)\n  }, {\n    label: 'Recap.receivedRent',\n    value: _toMoney(Math.round(p.propertyRent * 12)),\n    hide: p.usageType !== 'investment'\n  }, {\n    label: 'general.salary',\n    value: _toMoney(Math.round(p.salary)),\n    hide: !p.salary\n  }, {\n    label: 'Recap.consideredBonus',\n    value: _toMoney(Math.round(p.bonus)),\n    hide: !p.bonus\n  }, {\n    label: 'Recap.otherIncome',\n    value: _toMoney(Math.round(p.otherIncome)),\n    hide: !p.otherIncome\n  }, {\n    label: 'Recap.expenses',\n    value: \"- \" + _toMoney(Math.round(p.expenses)),\n    hide: !p.expenses\n  }, {\n    label: 'Recap.consideredIncome',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(Math.round(p.income - p.expenses))\n    ),\n    hide: !(p.salary || p.bonus || p.otherIncome || p.expenses),\n    spacingTop: true,\n    bold: true\n  }, {\n    title: true,\n    label: 'e-Potek'\n  }, {\n    label: 'Recap.interestedLenders',\n    value: p.lenderCount,\n    spacing: true\n  }];\n};\n\nvar getBorrowerArray = function getBorrowerArray(props) {\n  var b = [props.borrower];\n\n  var expenses = _getExpenses({\n    borrowers: b\n  });\n\n  var bonusIncome = _getBonusIncome({\n    borrowers: b\n  });\n\n  var otherIncome = _getOtherIncome({\n    borrowers: b\n  });\n\n  var realEstateFortune = _getRealEstateFortune({\n    borrowers: b\n  });\n\n  var realEstateValue = _getRealEstateValue({\n    borrowers: b\n  });\n\n  var realEstateDebt = _getRealEstateDebt({\n    borrowers: b\n  });\n\n  var fortune = _getFortune({\n    borrowers: b\n  });\n\n  var insuranceFortune = _getInsuranceFortune({\n    borrowers: b\n  });\n\n  var totalFortune = _getTotalFortune({\n    borrowers: b\n  });\n\n  var salary = _getBorrowerSalary({\n    borrowers: b\n  });\n\n  var income = _getBorrowerIncome({\n    borrowers: b\n  });\n\n  return [{\n    title: true,\n    label: 'Recap.fortune',\n    hide: !(realEstateFortune && insuranceFortune)\n  }, {\n    label: 'Recap.bankFortune',\n    value: _toMoney(fortune)\n  }, {\n    label: 'Recap.insuranceFortune',\n    value: _toMoney(insuranceFortune),\n    hide: !insuranceFortune\n  }, {\n    label: 'Recap.availableFunds',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(totalFortune)\n    ),\n    hide: !realEstateFortune,\n    spacingTop: true,\n    bold: true\n  }, {\n    label: 'Recap.realEstate',\n    value: _toMoney(realEstateValue),\n    hide: !realEstateFortune,\n    spacingTop: true\n  }, {\n    label: 'Recap.realEstateLoans',\n    value: \"- \" + _toMoney(realEstateDebt),\n    hide: !realEstateFortune\n  }, {\n    label: 'Recap.netFortune',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(totalFortune + realEstateFortune)\n    ),\n    spacingTop: true,\n    hide: !realEstateFortune\n  }, {\n    title: true,\n    label: 'general.income'\n  }, {\n    label: 'general.salary',\n    value: _toMoney(salary)\n  }, {\n    label: 'Recap.consideredBonus',\n    value: _toMoney(bonusIncome),\n    hide: !bonusIncome\n  }, {\n    label: 'Recap.otherIncome',\n    value: _toMoney(otherIncome),\n    hide: !otherIncome\n  }, {\n    label: 'Recap.expenses',\n    value: \"- \" + _toMoney(expenses),\n    hide: !expenses\n  }, {\n    label: 'Recap.consideredIncome',\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(income)\n    ),\n    spacingTop: true,\n    bold: true\n  }];\n};\n\nvar getStructureArray = function getStructureArray(props) {\n  var r = props.loan;\n  var b = props.borrowers;\n  var p = props.property;\n\n  var project = _getProjectValue(props);\n\n  var loanValue = _getLoanValue(props);\n\n  var monthly = _getMonthlyPayment(props).total;\n\n  var totalUsed = _getTotalUsed(props);\n\n  var propAndWork = _getPropAndWork(props);\n\n  var lenderCount = _getLenderCount(props);\n\n  var incomeRatio = _getIncomeRatio(props);\n\n  var borrowRatio = _getBorrowRatio(props);\n\n  return [{\n    title: true,\n    label: 'Recap.title',\n    props: {\n      style: {\n        marginTop: 0\n      }\n    }\n  }, {\n    label: 'Recap.propAndWork',\n    value: _toMoney(Math.round(propAndWork)),\n    hide: !r.general.propertyWork\n  }, {\n    label: 'general.notaryFees',\n    value: _toMoney(Math.round(p.value * constants.notaryFees))\n  }, {\n    label: 'general.insuranceFees',\n    value: _toMoney(Math.round(r.general.insuranceFortuneUsed * constants.lppFees)),\n    hide: !r.general.insuranceFortuneUsed\n  }, {\n    label: 'Recap.totalCost',\n    labelStyle: {\n      fontWeight: 400\n    },\n    value: React.createElement(\n      \"span\",\n      {\n        className: \"sum\"\n      },\n      _toMoney(project)\n    ),\n    spacingTop: true,\n    spacing: true,\n    bold: true\n  }, {\n    label: 'general.mortgageLoan',\n    value: _toMoney(loanValue)\n  }, {\n    label: 'Recap.ownFundsTotal',\n    value: _toMoney(totalUsed),\n    spacing: true\n  }, {\n    label: 'Recap.monthlyCost',\n    value: React.createElement(\n      \"span\",\n      null,\n      _toMoney(monthly),\n      \" \",\n      React.createElement(\n        \"small\",\n        null,\n        \"/mois\"\n      )\n    )\n  }, {\n    title: true,\n    label: 'Recap.finmaRules'\n  }, {\n    label: r.general.propertyWork ? 'Recap.borrowRatio2' : 'Recap.borrowRatio1',\n    value: React.createElement(\n      \"span\",\n      null,\n      React.createElement(_IntlNumber, {\n        value: borrowRatio,\n        format: \"percentage\"\n      }),\n      ' ',\n      React.createElement(\"span\", {\n        className: borrowRatio <= constants.maxLoan(r.general.usageType) + 0.001 // add 0.1% to avoid rounding errors\n        ? 'fa fa-check success' : 'fa fa-times error'\n      })\n    )\n  }, {\n    label: 'Recap.incomeRatio',\n    value: React.createElement(\n      \"span\",\n      null,\n      React.createElement(_IntlNumber, {\n        value: incomeRatio,\n        format: \"percentage\"\n      }),\n      ' ',\n      React.createElement(\"span\", {\n        className: incomeRatio <= 1 / 3 ? 'fa fa-check success' : incomeRatio <= 0.38 ? 'fa fa-exclamation warning' : 'fa fa-times error'\n      })\n    ),\n    spacing: true\n  }, {\n    label: 'Recap.interestedLenders',\n    value: lenderCount,\n    spacing: true\n  }];\n};\n\nvar arraySwitch = function arraySwitch(props) {\n  switch (props.arrayName) {\n    case 'start1':\n      return null;\n\n    case 'start2':\n      return getStart2Array(props);\n\n    case 'dashboard':\n      return getDashboardArray(props);\n\n    case 'dashboard-small':\n      return getSmallDashboardArray(props);\n\n    case 'borrower':\n      return getBorrowerArray(props);\n\n    case 'structure':\n      return getStructureArray(props);\n\n    default:\n      throw new _Meteor.Error('Not a valid recap array');\n  }\n};\n\nvar Recap = function Recap(props) {\n  var array = props.array || arraySwitch(props);\n  return React.createElement(\n    \"article\",\n    {\n      className: \"validator\"\n    },\n    React.createElement(\n      \"div\",\n      {\n        className: \"result animated fadeIn\"\n      },\n      array.map(function (item) {\n        if (item.hide) {\n          return null;\n        } else if (item.title) {\n          return React.createElement(\n            \"label\",\n            (0, _extends3.default)({\n              className: \"text-center\"\n            }, item.props, {\n              key: item.label,\n              style: item.labelStyle\n            }),\n            React.createElement(_T, {\n              id: item.label\n            })\n          );\n        }\n\n        return React.createElement(\n          \"div\",\n          {\n            className: classnames({\n              'fixed-size': true,\n              'no-scale': props.noScale,\n              bold: item.bold\n            }),\n            style: {\n              marginBottom: item.spacing && 16,\n              marginTop: item.spacingTop && 16\n            },\n            key: item.label\n          },\n          React.createElement(\n            \"h4\",\n            {\n              className: \"secondary\"\n            },\n            React.createElement(_T, {\n              id: item.label,\n              tooltipPlacement: \"bottom\"\n            })\n          ),\n          React.createElement(\n            \"h3\",\n            item.props,\n            item.value\n          )\n        );\n      })\n    )\n  );\n};\n\nRecap.propTypes = {\n  loan: PropTypes.objectOf(PropTypes.any),\n  borrowers: PropTypes.arrayOf(PropTypes.object),\n  borrower: PropTypes.objectOf(PropTypes.any),\n  array: PropTypes.arrayOf(PropTypes.object),\n  noScale: PropTypes.bool\n};\nRecap.defaultProps = {\n  loan: {},\n  borrowers: [{}],\n  borrower: {},\n  array: undefined,\n  noScale: false\n};\nmodule.exportDefault(Recap);","map":{"version":3,"sources":["imports/core/components/Recap.jsx"],"names":["PropTypes","module","watch","require","default","v","React","Meteor","classnames","toMoney","constants","T","IntlNumber","getPropAndWork","getProjectValue","getTotalUsed","getLoanValue","getLenderCount","getBorrowRatio","getExpenses","getBorrowerIncome","getRealEstateFortune","getTotalFortune","getRealEstateDebt","getFortune","getBonusIncome","getOtherIncome","getBorrowerSalary","getRealEstateValue","getInsuranceFortune","getMonthlyPayment","getIncomeRatio","getDashboardArray","props","r","loan","b","borrowers","p","property","incomeRatio","borrowRatio","loanValue","project","totalUsed","propAndWork","monthly","total","expenses","bonusIncome","otherIncome","realEstateFortune","realEstateValue","realEstateDebt","fortune","insuranceFortune","totalFortune","lenderCount","title","label","style","marginTop","value","Math","round","general","propertyWork","hide","spacing","notaryFees","insuranceFortuneUsed","lppFees","labelStyle","fontWeight","spacingTop","bold","fortuneUsed","maxLoan","usageType","getSmallDashboardArray","getStart2Array","type","loanWanted","monthlyReal","borrow","ratio","realEstate","insuranceFortuneDisplayed","salary","bonus","propertyRent","income","getBorrowerArray","borrower","getStructureArray","arraySwitch","arrayName","Error","Recap","array","map","item","noScale","marginBottom","propTypes","objectOf","any","arrayOf","object","bool","defaultProps","undefined","exportDefault"],"mappings":"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","file":"imports/core/components/Recap.jsx.map","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport classnames from 'classnames';\n\nimport { toMoney } from 'core/utils/conversionFunctions';\nimport constants from 'core/config/constants';\nimport { T, IntlNumber } from 'core/components/Translation';\n\nimport {\n  getPropAndWork,\n  getProjectValue,\n  getTotalUsed,\n  getLoanValue,\n  getLenderCount,\n  getBorrowRatio,\n} from 'core/utils/loanFunctions';\n\nimport {\n  getExpenses,\n  getBorrowerIncome,\n  getRealEstateFortune,\n  getTotalFortune,\n  getRealEstateDebt,\n  getFortune,\n  getBonusIncome,\n  getOtherIncome,\n  getBorrowerSalary,\n  getRealEstateValue,\n  getInsuranceFortune,\n} from 'core/utils/borrowerFunctions';\n\nimport { getMonthlyPayment, getIncomeRatio } from 'core/utils/finance-math';\n\nconst getDashboardArray = (props) => {\n  const r = props.loan;\n  const b = props.borrowers;\n  const p = props.property;\n\n  const incomeRatio = getIncomeRatio(props);\n  const borrowRatio = getBorrowRatio(props);\n  const loanValue = getLoanValue(props);\n  const project = getProjectValue(props);\n  const totalUsed = getTotalUsed(props);\n  const propAndWork = getPropAndWork(props);\n  const monthly = getMonthlyPayment(props).total;\n  const expenses = getExpenses(props);\n  const bonusIncome = getBonusIncome(props);\n  const otherIncome = getOtherIncome(props);\n  const realEstateFortune = getRealEstateFortune(props);\n  const realEstateValue = getRealEstateValue(props);\n  const realEstateDebt = getRealEstateDebt(props);\n\n  const fortune = getFortune(props);\n  const insuranceFortune = getInsuranceFortune(props);\n  const totalFortune = getTotalFortune(props);\n  const lenderCount = getLenderCount(props);\n\n  return [\n    {\n      title: true,\n      label: 'Recap.title',\n      props: {\n        style: {\n          marginTop: 0,\n        },\n      },\n    },\n    {\n      label: 'Recap.purchasePrice',\n      value: toMoney(Math.round(p.value)),\n    },\n    {\n      label: 'Recap.propertyWork',\n      value: toMoney(Math.round(r.general.propertyWork)),\n      hide: !r.general.propertyWork,\n      spacing: true,\n    },\n    {\n      label: 'Recap.propAndWork',\n      value: <span className=\"sum\">{toMoney(Math.round(propAndWork))}</span>,\n      hide: !r.general.propertyWork,\n    },\n    {\n      label: 'general.notaryFees',\n      value: toMoney(Math.round(p.value * constants.notaryFees)),\n    },\n    {\n      label: 'general.insuranceFees',\n      value: toMoney(Math.round(r.general.insuranceFortuneUsed * constants.lppFees)),\n      hide: !r.general.insuranceFortuneUsed,\n    },\n    {\n      label: 'Recap.totalCost',\n      labelStyle: {\n        fontWeight: 400,\n      },\n      value: <span className=\"sum\">{toMoney(project)}</span>,\n      spacingTop: true,\n      spacing: true,\n      bold: true,\n    },\n    {\n      title: true,\n      label: 'Recap.financing',\n    },\n    {\n      label: 'general.ownFunds',\n      value: toMoney(totalUsed),\n      hide: r.general.insuranceFortuneUsed,\n    },\n    {\n      label: 'Recap.ownFundsCash',\n      value: toMoney(r.general.fortuneUsed),\n      hide: !r.general.insuranceFortuneUsed,\n    },\n    {\n      label: 'Recap.ownFundsInsurance',\n      value: toMoney(r.general.insuranceFortuneUsed),\n      hide: !r.general.insuranceFortuneUsed,\n    },\n    {\n      label: 'Recap.ownFundsTotal',\n      value: <span className=\"sum\">{toMoney(totalUsed)}</span>,\n      spacingTop: true,\n      hide: !r.general.insuranceFortuneUsed,\n      bold: true,\n    },\n    {\n      label: 'general.mortgageLoan',\n      value: toMoney(loanValue),\n    },\n    {\n      label: 'Recap.totalFinancing',\n      value: <span className=\"sum\">{toMoney(project)}</span>,\n      spacingTop: true,\n      spacing: true,\n      bold: true,\n    },\n    {\n      label: 'Recap.monthlyCost',\n      value: (\n        <span>\n          {toMoney(monthly)} <small>/mois</small>\n        </span>\n      ),\n    },\n    {\n      title: true,\n      label: 'Recap.finmaRules',\n    },\n    {\n      label: r.general.propertyWork\n        ? 'Recap.borrowRatio2'\n        : 'Recap.borrowRatio1',\n      value: (\n        <span>\n          <IntlNumber value={borrowRatio} format=\"percentage\" />{' '}\n          <span\n            className={\n              borrowRatio <= constants.maxLoan(r.general.usageType) + 0.001 // add 0.1% to avoid rounding errors\n                ? 'fa fa-check success'\n                : 'fa fa-times error'\n            }\n          />\n        </span>\n      ),\n    },\n    {\n      label: 'Recap.incomeRatio',\n      value: (\n        <span>\n          <IntlNumber value={incomeRatio} format=\"percentage\" />{' '}\n          <span\n            className={\n              incomeRatio <= 1 / 3\n                ? 'fa fa-check success'\n                : incomeRatio <= 0.38\n                  ? 'fa fa-exclamation warning'\n                  : 'fa fa-times error'\n            }\n          />\n        </span>\n      ),\n    },\n    {\n      title: true,\n      label: 'Recap.fortune',\n      hide: !(realEstateFortune || insuranceFortune),\n    },\n    {\n      label: 'Recap.bankFortune',\n      value: toMoney(fortune),\n    },\n    {\n      label: 'Recap.insuranceFortune',\n      value: toMoney(insuranceFortune),\n      hide: !insuranceFortune,\n    },\n    {\n      label: 'Recap.availableFunds',\n      value: <span className=\"sum\">{toMoney(totalFortune)}</span>,\n      hide: !realEstateFortune,\n      spacingTop: true,\n      bold: true,\n    },\n    {\n      label: 'Recap.realEstate',\n      value: toMoney(realEstateValue),\n      hide: !realEstateFortune,\n      spacingTop: true,\n    },\n    {\n      label: 'Recap.realEstateLoans',\n      value: `- ${toMoney(realEstateDebt)}`,\n      hide: !realEstateFortune,\n    },\n    {\n      label: 'Recap.netFortune',\n      value: (\n        <span className=\"sum\">{toMoney(totalFortune + realEstateFortune)}</span>\n      ),\n      spacingTop: true,\n      hide: !realEstateFortune,\n    },\n    {\n      title: true,\n      label: 'general.income',\n    },\n    {\n      label: 'general.salary',\n      value: toMoney(getBorrowerSalary(props)),\n    },\n    {\n      label: 'Recap.consideredBonus',\n      value: toMoney(bonusIncome),\n      hide: !bonusIncome,\n    },\n    {\n      label: 'Recap.otherIncome',\n      value: toMoney(otherIncome),\n      hide: !otherIncome,\n    },\n    {\n      label: 'Recap.expenses',\n      value: `- ${toMoney(expenses)}`,\n      hide: !expenses,\n    },\n    {\n      label: 'Recap.consideredIncome',\n      value: <span className=\"sum\">{toMoney(getBorrowerIncome(props))}</span>,\n      spacingTop: true,\n      bold: true,\n    },\n    {\n      title: true,\n      label: 'general.lenders',\n    },\n    {\n      label: 'Recap.interestedLenders',\n      value: lenderCount,\n      spacing: true,\n    },\n  ];\n};\n\nconst getSmallDashboardArray = (props) => {\n  const r = props.loan;\n  const b = props.borrowers;\n  const p = props.property;\n  const loanValue = getLoanValue(props);\n  const monthly = getMonthlyPayment(props).total;\n  const totalUsed = getTotalUsed(props);\n  const propAndWork = getPropAndWork(props);\n  const project = getProjectValue(props);\n\n  return [\n    {\n      title: true,\n      label: 'Recap.title',\n      props: {\n        style: {\n          marginTop: 0,\n        },\n      },\n    },\n    {\n      label: 'Recap.purchasePrice',\n      value: toMoney(Math.round(p.value)),\n    },\n    {\n      label: 'Recap.propertyWork',\n      value: toMoney(Math.round(r.general.propertyWork)),\n      hide: !r.general.propertyWork,\n    },\n    {\n      label: 'general.notaryFees',\n      value: toMoney(Math.round(p.value * constants.notaryFees)),\n    },\n    {\n      label: 'general.insuranceFees',\n      value: toMoney(Math.round(r.general.insuranceFortuneUsed * constants.lppFees)),\n      hide: !r.general.insuranceFortuneUsed,\n    },\n    {\n      label: 'Recap.totalCost',\n      value: <span className=\"sum\">{toMoney(project)}</span>,\n      spacingTop: true,\n      spacing: true,\n      bold: true,\n    },\n    {\n      title: true,\n      label: 'Recap.financing',\n    },\n    {\n      label: 'general.mortgageLoan',\n      value: toMoney(loanValue),\n    },\n    {\n      label: 'Recap.ownFundsCash',\n      value: toMoney(r.general.fortuneUsed),\n      hide: !r.general.insuranceFortuneUsed,\n    },\n    {\n      label: 'Recap.ownFundsInsurance',\n      value: toMoney(r.general.insuranceFortuneUsed),\n      hide: !r.general.insuranceFortuneUsed,\n    },\n    {\n      label: 'Recap.totalFinancing',\n      value: <span className=\"sum\">{toMoney(project)}</span>,\n      spacingTop: true,\n      spacing: true,\n      bold: true,\n    },\n    {\n      label: 'Recap.monthlyCost',\n      value: (\n        <span>\n          {toMoney(monthly)} <small>/mois</small>\n        </span>\n      ),\n    },\n  ];\n};\n\nconst getStart2Array = (props) => {\n  const p = props;\n\n  return [\n    {\n      title: true,\n      label: 'Recap.title',\n      props: {\n        style: {\n          marginTop: 0,\n        },\n      },\n    },\n    {\n      label:\n        p.type === 'test' ? 'Recap.purchasePrice' : 'Recap.maxPurchasePrice',\n      value: toMoney(Math.round(p.property)),\n    },\n    {\n      label: 'Recap.propertyWork',\n      value: toMoney(Math.round(p.propertyWork)),\n      hide: !p.propertyWork,\n      spacing: true,\n    },\n    {\n      label: 'Recap.propAndWork',\n      value: toMoney(Math.round(p.propAndWork)),\n      hide: !p.propertyWork,\n    },\n    {\n      label: 'general.notaryFees',\n      value: toMoney(Math.round(p.property * constants.notaryFees)),\n    },\n    {\n      label: 'general.insuranceFees',\n      value: toMoney(Math.round(p.lppFees)),\n      hide: !p.insuranceFortuneUsed,\n    },\n    {\n      label: 'Recap.totalCost',\n      labelStyle: {\n        fontWeight: 400,\n      },\n      value: (\n        <span className=\"bold sum\">\n          {toMoney(Math.round(p.property * (1 + constants.notaryFees) +\n                p.propertyWork +\n                p.lppFees))}\n        </span>\n      ),\n      spacingTop: true,\n      spacing: p.fortuneUsed,\n    },\n    {\n      label: 'general.ownFunds',\n      value: toMoney(Math.round(p.fortuneUsed)),\n      hide: !p.fortuneUsed || p.insuranceFortuneUsed,\n    },\n    {\n      label: 'Recap.ownFundsCash',\n      value: toMoney(p.fortuneUsed),\n      hide: !p.fortuneUsed || !p.insuranceFortuneUsed,\n    },\n    {\n      label: 'Recap.ownFundsInsurance',\n      value: toMoney(p.insuranceFortuneUsed),\n      hide: !p.fortuneUsed || !p.insuranceFortuneUsed,\n    },\n    {\n      label: 'Recap.ownFundsTotal',\n      value: (\n        <span className=\"sum\">\n          {toMoney(Math.round(p.fortuneUsed + p.insuranceFortuneUsed))}\n        </span>\n      ),\n      spacingTop: true,\n      hide: !p.fortuneUsed || !p.insuranceFortuneUsed,\n      bold: true,\n    },\n    {\n      label: 'general.mortgageLoan',\n      value: toMoney(Math.round(p.loanWanted)),\n      hide: !p.loanWanted,\n      spacing: !p.loanWanted,\n    },\n    {\n      label: 'Recap.monthlyCost',\n      value: (\n        <span>\n          {toMoney(Math.round(p.monthlyReal))} <small>/mois</small>\n        </span>\n      ),\n      hide: !p.fortuneUsed,\n    },\n    {\n      title: true,\n      label: 'Recap.finmaRules',\n      hide: !p.fortuneUsed,\n    },\n    {\n      label: p.propertyWork ? 'Recap.borrowRatio2' : 'Recap.borrowRatio1',\n      value: (\n        <span>\n          <IntlNumber value={p.borrow} format=\"percentage\" />{' '}\n          <span\n            className={\n              p.borrow <= constants.maxLoan(p.usageType) + 0.001 // add 0.1% to avoid rounding errors\n                ? 'fa fa-check success'\n                : 'fa fa-times error'\n            }\n          />\n        </span>\n      ),\n      hide: !p.fortuneUsed,\n    },\n    {\n      label: 'Recap.incomeRatio',\n      value: (\n        <span>\n          <IntlNumber value={p.ratio} format=\"percentage\" />{' '}\n          <span\n            className={\n              p.ratio <= 1 / 3\n                ? 'fa fa-check success'\n                : p.ratio <= 0.38\n                  ? 'fa fa-exclamation warning'\n                  : 'fa fa-times error'\n            }\n          />\n        </span>\n      ),\n      hide: !p.fortuneUsed,\n    },\n    {\n      title: true,\n      label: 'Recap.fortune',\n      hide: !(p.fortune || p.realEstate || p.insuranceFortune),\n    },\n    {\n      label: 'Recap.bankFortune',\n      value: toMoney(Math.round(p.fortune)),\n      hide: !p.fortune,\n    },\n\n    {\n      label: 'Recap.insuranceFortune',\n      value: toMoney(Math.round(p.insuranceFortuneDisplayed)),\n      hide: !p.insuranceFortuneDisplayed,\n    },\n    {\n      label: 'Recap.availableFunds',\n      value: (\n        <span className=\"sum\">\n          {toMoney(Math.round(p.fortune + p.insuranceFortuneDisplayed))}\n        </span>\n      ),\n      hide: !p.insuranceFortuneDisplayed,\n      spacingTop: true,\n      bold: true,\n    },\n    {\n      label: 'Recap.realEstate',\n      value: toMoney(Math.round(p.realEstateValue)),\n      hide: !p.realEstate,\n      spacingTop: true,\n    },\n    {\n      label: 'Recap.realEstateLoans',\n      value: `- ${toMoney(Math.round(p.realEstateDebt))}`,\n      hide: !p.realEstate,\n    },\n\n    {\n      label: 'Recap.netFortune',\n      value: (\n        <span className=\"sum\">\n          {toMoney(Math.round(p.fortune + p.insuranceFortuneDisplayed + p.realEstate))}\n        </span>\n      ),\n      spacingTop: true,\n      hide: !p.realEstate,\n      bold: true,\n    },\n    {\n      title: true,\n      label: 'general.income',\n      hide: !(\n        p.salary ||\n        p.bonus ||\n        p.otherIncome ||\n        p.expenses ||\n        p.propertyRent\n      ),\n    },\n    {\n      label: 'Recap.receivedRent',\n      value: toMoney(Math.round(p.propertyRent * 12)),\n      hide: p.usageType !== 'investment',\n    },\n    {\n      label: 'general.salary',\n      value: toMoney(Math.round(p.salary)),\n      hide: !p.salary,\n    },\n    {\n      label: 'Recap.consideredBonus',\n      value: toMoney(Math.round(p.bonus)),\n      hide: !p.bonus,\n    },\n    {\n      label: 'Recap.otherIncome',\n      value: toMoney(Math.round(p.otherIncome)),\n      hide: !p.otherIncome,\n    },\n    {\n      label: 'Recap.expenses',\n      value: `- ${toMoney(Math.round(p.expenses))}`,\n      hide: !p.expenses,\n    },\n    {\n      label: 'Recap.consideredIncome',\n      value: (\n        <span className=\"sum\">\n          {toMoney(Math.round(p.income - p.expenses))}\n        </span>\n      ),\n      hide: !(p.salary || p.bonus || p.otherIncome || p.expenses),\n      spacingTop: true,\n      bold: true,\n    },\n    {\n      title: true,\n      label: 'e-Potek',\n    },\n    {\n      label: 'Recap.interestedLenders',\n      value: p.lenderCount,\n      spacing: true,\n    },\n  ];\n};\n\nconst getBorrowerArray = (props) => {\n  const b = [props.borrower];\n\n  const expenses = getExpenses({ borrowers: b });\n  const bonusIncome = getBonusIncome({ borrowers: b });\n  const otherIncome = getOtherIncome({ borrowers: b });\n  const realEstateFortune = getRealEstateFortune({ borrowers: b });\n  const realEstateValue = getRealEstateValue({ borrowers: b });\n  const realEstateDebt = getRealEstateDebt({ borrowers: b });\n  const fortune = getFortune({ borrowers: b });\n  const insuranceFortune = getInsuranceFortune({ borrowers: b });\n  const totalFortune = getTotalFortune({ borrowers: b });\n  const salary = getBorrowerSalary({ borrowers: b });\n  const income = getBorrowerIncome({ borrowers: b });\n\n  return [\n    {\n      title: true,\n      label: 'Recap.fortune',\n      hide: !(realEstateFortune && insuranceFortune),\n    },\n    {\n      label: 'Recap.bankFortune',\n      value: toMoney(fortune),\n    },\n\n    {\n      label: 'Recap.insuranceFortune',\n      value: toMoney(insuranceFortune),\n      hide: !insuranceFortune,\n    },\n    {\n      label: 'Recap.availableFunds',\n      value: <span className=\"sum\">{toMoney(totalFortune)}</span>,\n      hide: !realEstateFortune,\n      spacingTop: true,\n      bold: true,\n    },\n    {\n      label: 'Recap.realEstate',\n      value: toMoney(realEstateValue),\n      hide: !realEstateFortune,\n      spacingTop: true,\n    },\n    {\n      label: 'Recap.realEstateLoans',\n      value: `- ${toMoney(realEstateDebt)}`,\n      hide: !realEstateFortune,\n    },\n    {\n      label: 'Recap.netFortune',\n      value: (\n        <span className=\"sum\">{toMoney(totalFortune + realEstateFortune)}</span>\n      ),\n      spacingTop: true,\n      hide: !realEstateFortune,\n    },\n    {\n      title: true,\n      label: 'general.income',\n    },\n    {\n      label: 'general.salary',\n      value: toMoney(salary),\n    },\n    {\n      label: 'Recap.consideredBonus',\n      value: toMoney(bonusIncome),\n      hide: !bonusIncome,\n    },\n    {\n      label: 'Recap.otherIncome',\n      value: toMoney(otherIncome),\n      hide: !otherIncome,\n    },\n    {\n      label: 'Recap.expenses',\n      value: `- ${toMoney(expenses)}`,\n      hide: !expenses,\n    },\n    {\n      label: 'Recap.consideredIncome',\n      value: <span className=\"sum\">{toMoney(income)}</span>,\n      spacingTop: true,\n      bold: true,\n    },\n  ];\n};\n\nconst getStructureArray = (props) => {\n  const r = props.loan;\n  const b = props.borrowers;\n  const p = props.property;\n\n  const project = getProjectValue(props);\n  const loanValue = getLoanValue(props);\n  const monthly = getMonthlyPayment(props).total;\n  const totalUsed = getTotalUsed(props);\n  const propAndWork = getPropAndWork(props);\n  const lenderCount = getLenderCount(props);\n  const incomeRatio = getIncomeRatio(props);\n  const borrowRatio = getBorrowRatio(props);\n\n  return [\n    {\n      title: true,\n      label: 'Recap.title',\n      props: {\n        style: {\n          marginTop: 0,\n        },\n      },\n    },\n    {\n      label: 'Recap.propAndWork',\n      value: toMoney(Math.round(propAndWork)),\n      hide: !r.general.propertyWork,\n    },\n    {\n      label: 'general.notaryFees',\n      value: toMoney(Math.round(p.value * constants.notaryFees)),\n    },\n    {\n      label: 'general.insuranceFees',\n      value: toMoney(Math.round(r.general.insuranceFortuneUsed * constants.lppFees)),\n      hide: !r.general.insuranceFortuneUsed,\n    },\n    {\n      label: 'Recap.totalCost',\n      labelStyle: {\n        fontWeight: 400,\n      },\n      value: <span className=\"sum\">{toMoney(project)}</span>,\n      spacingTop: true,\n      spacing: true,\n      bold: true,\n    },\n    {\n      label: 'general.mortgageLoan',\n      value: toMoney(loanValue),\n    },\n    {\n      label: 'Recap.ownFundsTotal',\n      value: toMoney(totalUsed),\n      spacing: true,\n    },\n    {\n      label: 'Recap.monthlyCost',\n      value: (\n        <span>\n          {toMoney(monthly)} <small>/mois</small>\n        </span>\n      ),\n    },\n    {\n      title: true,\n      label: 'Recap.finmaRules',\n    },\n    {\n      label: r.general.propertyWork\n        ? 'Recap.borrowRatio2'\n        : 'Recap.borrowRatio1',\n      value: (\n        <span>\n          <IntlNumber value={borrowRatio} format=\"percentage\" />{' '}\n          <span\n            className={\n              borrowRatio <= constants.maxLoan(r.general.usageType) + 0.001 // add 0.1% to avoid rounding errors\n                ? 'fa fa-check success'\n                : 'fa fa-times error'\n            }\n          />\n        </span>\n      ),\n    },\n    {\n      label: 'Recap.incomeRatio',\n      value: (\n        <span>\n          <IntlNumber value={incomeRatio} format=\"percentage\" />{' '}\n          <span\n            className={\n              incomeRatio <= 1 / 3\n                ? 'fa fa-check success'\n                : incomeRatio <= 0.38\n                  ? 'fa fa-exclamation warning'\n                  : 'fa fa-times error'\n            }\n          />\n        </span>\n      ),\n      spacing: true,\n    },\n    {\n      label: 'Recap.interestedLenders',\n      value: lenderCount,\n      spacing: true,\n    },\n  ];\n};\n\nconst arraySwitch = (props) => {\n  switch (props.arrayName) {\n  case 'start1':\n    return null;\n  case 'start2':\n    return getStart2Array(props);\n  case 'dashboard':\n    return getDashboardArray(props);\n  case 'dashboard-small':\n    return getSmallDashboardArray(props);\n  case 'borrower':\n    return getBorrowerArray(props);\n  case 'structure':\n    return getStructureArray(props);\n  default:\n    throw new Meteor.Error('Not a valid recap array');\n  }\n};\n\nconst Recap = (props) => {\n  const array = props.array || arraySwitch(props);\n  return (\n    <article className=\"validator\">\n      <div className=\"result animated fadeIn\">\n        {array.map((item) => {\n          if (item.hide) {\n            return null;\n          } else if (item.title) {\n            return (\n              <label\n                className=\"text-center\"\n                {...item.props}\n                key={item.label}\n                style={item.labelStyle}\n              >\n                <T id={item.label} />\n              </label>\n            );\n          }\n          return (\n            <div\n              className={classnames({\n                'fixed-size': true,\n                'no-scale': props.noScale,\n                bold: item.bold,\n              })}\n              style={{\n                marginBottom: item.spacing && 16,\n                marginTop: item.spacingTop && 16,\n              }}\n              key={item.label}\n            >\n              <h4 className=\"secondary\">\n                <T id={item.label} tooltipPlacement=\"bottom\" />\n              </h4>\n              <h3 {...item.props}>{item.value}</h3>\n            </div>\n          );\n        })}\n      </div>\n    </article>\n  );\n};\n\nRecap.propTypes = {\n  loan: PropTypes.objectOf(PropTypes.any),\n  borrowers: PropTypes.arrayOf(PropTypes.object),\n  borrower: PropTypes.objectOf(PropTypes.any),\n  array: PropTypes.arrayOf(PropTypes.object),\n  noScale: PropTypes.bool,\n};\n\nRecap.defaultProps = {\n  loan: {},\n  borrowers: [{}],\n  borrower: {},\n  array: undefined,\n  noScale: false,\n};\n\nexport default Recap;\n"]},"hash":"ac510c6ed30b6bb8909d877e24dc5960a9c66ba8"}
