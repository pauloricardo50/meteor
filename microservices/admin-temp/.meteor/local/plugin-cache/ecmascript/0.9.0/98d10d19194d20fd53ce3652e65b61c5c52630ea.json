{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"../../../core/components/Table","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Table"}]},{"source":"./TasksStatusDropdown","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TasksStatusDropdown"}]},{"source":"./TasksUsersWithData","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TasksUserWithData"}]},{"source":"../../../core/components/Translation","imported":["T"],"specifiers":[{"kind":"named","imported":"T","local":"T"}]}],"exports":{"exported":["TasksTable"],"specifiers":[{"kind":"local","local":"TasksTable","exported":"default"}]}}},"options":{"filename":"imports/ui/pages/TasksPage/TasksTable.jsx","filenameRelative":"imports/ui/pages/TasksPage/TasksTable.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/TasksPage/TasksTable.jsx.map","sourceFileName":"imports/ui/pages/TasksPage/TasksTable.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TasksTable"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n  default: function _default() {\n    return TasksTable;\n  }\n});\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  default: function _default(v) {\n    PropTypes = v;\n  }\n}, 0);\n\nvar React = void 0,\n    _Component = void 0;\n\nmodule.watch(require(\"react\"), {\n  default: function _default(v) {\n    React = v;\n  },\n  Component: function Component(v) {\n    _Component = v;\n  }\n}, 1);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function Roles(v) {\n    _Roles = v;\n  }\n}, 2);\nvar moment = void 0;\nmodule.watch(require(\"moment\"), {\n  default: function _default(v) {\n    moment = v;\n  }\n}, 3);\nvar Table = void 0;\nmodule.watch(require(\"../../../core/components/Table\"), {\n  default: function _default(v) {\n    Table = v;\n  }\n}, 4);\nvar TasksStatusDropdown = void 0;\nmodule.watch(require(\"./TasksStatusDropdown\"), {\n  default: function _default(v) {\n    TasksStatusDropdown = v;\n  }\n}, 5);\nvar TasksUserWithData = void 0;\nmodule.watch(require(\"./TasksUsersWithData\"), {\n  default: function _default(v) {\n    TasksUserWithData = v;\n  }\n}, 6);\n\nvar _T = void 0;\n\nmodule.watch(require(\"../../../core/components/Translation\"), {\n  T: function T(v) {\n    _T = v;\n  }\n}, 7);\nvar styles = {\n  dropdownButtons: {\n    display: 'inline',\n    width: '50%'\n  }\n};\n\nvar TasksTable = function (_Component2) {\n  (0, _inherits3.default)(TasksTable, _Component2);\n\n  function TasksTable(props) {\n    (0, _classCallCheck3.default)(this, TasksTable);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (TasksTable.__proto__ || Object.getPrototypeOf(TasksTable)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.state = {\n      rows: _this.setupRows(_this.props),\n      columnOptions: _this.getColumnOptions(_this.props)\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(TasksTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var newRows = this.setupRows(nextProps);\n      this.setState({\n        rows: newRows,\n        columnOptions: this.getColumnOptions(nextProps)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.props.isLoading;\n      var _state = this.state,\n          columnOptions = _state.columnOptions,\n          rows = _state.rows;\n\n      if (!isLoading) {\n        return React.createElement(Table, {\n          columnOptions: columnOptions,\n          rows: rows,\n          noIntl: true\n        });\n      }\n\n      return null;\n    }\n  }]);\n  return TasksTable;\n}(_Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.getColumnOptions = function (_ref) {\n    var showAssignee = _ref.showAssignee;\n    var columnOptions = [{\n      id: '#',\n      style: {\n        width: 32,\n        textAlign: 'left'\n      }\n    }, {\n      id: React.createElement(_T, {\n        id: \"TasksTable.status\"\n      })\n    }, {\n      id: React.createElement(_T, {\n        id: \"TasksTable.createdAt\"\n      })\n    }, {\n      id: React.createElement(_T, {\n        id: \"TasksTable.updatedAt\"\n      })\n    }, {\n      id: React.createElement(_T, {\n        id: \"TasksTable.dueAt\"\n      })\n    }, {\n      id: React.createElement(_T, {\n        id: \"TasksTable.completedAt\"\n      })\n    }];\n\n    if (showAssignee) {\n      columnOptions.push({\n        id: React.createElement(_T, {\n          id: \"TasksTable.asignedTo\"\n        })\n      });\n    }\n\n    columnOptions.push({\n      id: React.createElement(_T, {\n        id: \"TasksTable.actions\"\n      })\n    });\n    return columnOptions;\n  };\n\n  this.getColumns = function (_ref2) {\n    var props = _ref2.props,\n        index = _ref2.index,\n        task = _ref2.task;\n    var columns = [index + 1, React.createElement(_T, {\n      id: \"TasksStatusDropdown.\" + task.status\n    }), moment(task.createdAt).format('D MMM YY à HH:mm:ss'), moment(task.updatedAt).format('D MMM YY à HH:mm:ss'), moment(task.dueAt).format('D MMM YY à HH:mm:ss'), moment(task.completedAt).format('D MMM YY à HH:mm:ss')];\n\n    if (props.showAssignee) {\n      columns.push(task.assignedUser && (task.assignedUser.username || task.assignedUser.emails[0].address.toString()) || '');\n    }\n\n    columns.push(React.createElement(\n      \"div\",\n      null,\n      React.createElement(TasksStatusDropdown, (0, _extends3.default)({}, props, {\n        currentUser: Meteor.user(),\n        taskId: task._id,\n        taskStatus: task.status,\n        styles: styles.dropdownButtons\n      })),\n      React.createElement(TasksUserWithData, (0, _extends3.default)({}, props, {\n        taskId: task._id,\n        taskUser: task.user,\n        styles: styles.dropdownButtons\n      }))\n    ));\n    return columns;\n  };\n\n  this.setupRows = function (props) {\n    var tasks = props.data;\n    _this2.rows = tasks.map(function (task, index) {\n      return {\n        id: task._id,\n        columns: _this2.getColumns({\n          props: props,\n          index: index,\n          task: task\n        })\n      };\n    });\n    return _this2.rows;\n  };\n};\n\nTasksTable.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired\n};","map":{"version":3,"sources":["imports/ui/pages/TasksPage/TasksTable.jsx"],"names":["module","export","default","TasksTable","PropTypes","watch","require","v","React","Component","Roles","moment","Table","TasksStatusDropdown","TasksUserWithData","T","styles","dropdownButtons","display","width","props","state","rows","setupRows","columnOptions","getColumnOptions","nextProps","newRows","setState","isLoading","showAssignee","id","style","textAlign","push","getColumns","index","task","columns","status","createdAt","format","updatedAt","dueAt","completedAt","assignedUser","username","emails","address","toString","Meteor","user","_id","tasks","data","map","propTypes","history","objectOf","any","isRequired"],"mappings":"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","file":"imports/ui/pages/TasksPage/TasksTable.jsx.map","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Roles } from 'meteor/alanning:roles';\nimport moment from 'moment';\nimport Table from 'core/components/Table';\nimport TasksStatusDropdown from './TasksStatusDropdown';\nimport TasksUserWithData from './TasksUsersWithData';\nimport { T } from 'core/components/Translation/';\n\nconst styles = {\n  dropdownButtons: { display: 'inline', width: '50%' },\n};\n\nexport default class TasksTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: this.setupRows(this.props),\n      columnOptions: this.getColumnOptions(this.props),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const newRows = this.setupRows(nextProps);\n    this.setState({\n      rows: newRows,\n      columnOptions: this.getColumnOptions(nextProps),\n    });\n  }\n\n  getColumnOptions = ({ showAssignee }) => {\n    const columnOptions = [\n      { id: '#', style: { width: 32, textAlign: 'left' } },\n      {\n        id: <T id=\"TasksTable.status\" />,\n      },\n      {\n        id: <T id=\"TasksTable.createdAt\" />,\n      },\n      {\n        id: <T id=\"TasksTable.updatedAt\" />,\n      },\n      {\n        id: <T id=\"TasksTable.dueAt\" />,\n      },\n      {\n        id: <T id=\"TasksTable.completedAt\" />,\n      },\n    ];\n    if (showAssignee) {\n      columnOptions.push({\n        id: <T id=\"TasksTable.asignedTo\" />,\n      });\n    }\n    columnOptions.push({\n      id: <T id=\"TasksTable.actions\" />,\n    });\n    return columnOptions;\n  };\n\n  getColumns = ({ props, index, task }) => {\n    const columns = [\n      index + 1,\n      <T id={`TasksStatusDropdown.${task.status}`} />,\n      moment(task.createdAt).format('D MMM YY à HH:mm:ss'),\n      moment(task.updatedAt).format('D MMM YY à HH:mm:ss'),\n      moment(task.dueAt).format('D MMM YY à HH:mm:ss'),\n      moment(task.completedAt).format('D MMM YY à HH:mm:ss'),\n    ];\n    if (props.showAssignee) {\n      columns.push((task.assignedUser &&\n          (task.assignedUser.username ||\n            task.assignedUser.emails[0].address.toString())) ||\n          '');\n    }\n    columns.push(<div>\n      <TasksStatusDropdown\n        {...props}\n        currentUser={Meteor.user()}\n        taskId={task._id}\n        taskStatus={task.status}\n        styles={styles.dropdownButtons}\n      />\n      <TasksUserWithData\n        {...props}\n        taskId={task._id}\n        taskUser={task.user}\n        styles={styles.dropdownButtons}\n      />\n    </div>);\n\n    return columns;\n  };\n\n  setupRows = (props) => {\n    const tasks = props.data;\n\n    this.rows = tasks.map((task, index) => ({\n      id: task._id,\n      columns: this.getColumns({\n        props,\n        index,\n        task,\n      }),\n    }));\n\n    return this.rows;\n  };\n\n  render() {\n    const { isLoading } = this.props;\n    const { columnOptions, rows } = this.state;\n\n    if (!isLoading) {\n      return <Table columnOptions={columnOptions} rows={rows} noIntl />;\n    }\n    return null;\n  }\n}\n\nTasksTable.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n"]},"hash":"98d10d19194d20fd53ce3652e65b61c5c52630ea"}
