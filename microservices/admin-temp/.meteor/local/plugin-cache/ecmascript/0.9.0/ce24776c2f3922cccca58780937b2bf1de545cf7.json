{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]},{"source":"../../loans/loans","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Loans"}]},{"source":"../../borrowers/borrowers","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Borrowers"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/methods/server/compoundMethods.js","filenameRelative":"imports/core/api/methods/server/compoundMethods.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/methods/server/compoundMethods.js.map","sourceFileName":"imports/core/api/methods/server/compoundMethods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"compoundMethods"},"ignored":false,"code":"\"use strict\";\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function Meteor(v) {\n    _Meteor = v;\n  }\n}, 0);\n\nvar _check = void 0;\n\nmodule.watch(require(\"meteor/check\"), {\n  check: function check(v) {\n    _check = v;\n  }\n}, 1);\nvar Loans = void 0;\nmodule.watch(require(\"../../loans/loans\"), {\n  default: function _default(v) {\n    Loans = v;\n  }\n}, 2);\nvar Borrowers = void 0;\nmodule.watch(require(\"../../borrowers/borrowers\"), {\n  default: function _default(v) {\n    Borrowers = v;\n  }\n}, 3);\n\n_Meteor.methods({\n  setUserToLoan: function setUserToLoan(_ref) {\n    var loanId = _ref.loanId;\n\n    _check(loanId, String);\n\n    if (!_Meteor.userId()) {\n      throw new _Meteor.Error('not authorized');\n    }\n\n    var loan = Loans.findOne(loanId);\n    var borrowers = loan.borrowers;\n    Loans.update(loanId, {\n      $set: {\n        userId: _Meteor.userId()\n      }\n    });\n    borrowers.forEach(function (borrowerId) {\n      Borrowers.update(borrowerId, {\n        $set: {\n          userId: _Meteor.userId()\n        }\n      });\n    });\n    return true;\n  },\n  addBorrower: function addBorrower(_ref2) {\n    var loanId = _ref2.loanId;\n    // TODO: Secure this\n    var loan = Loans.findOne(loanId); // A loan can't have more than 2 borrowers at the moment\n\n    if (loan.borrowerIds.length >= 2) {\n      return false;\n    }\n\n    var newBorrowerId = Borrowers.insert({\n      userId: _Meteor.userId()\n    });\n    return Loans.update(loanId, {\n      $push: {\n        borrowerIds: newBorrowerId\n      }\n    });\n  },\n  removeBorrower: function removeBorrower(_ref3) {\n    var loanId = _ref3.loanId,\n        borrowerId = _ref3.borrowerId;\n    // TODO: Secure this\n    var loan = Loans.findOne(loanId); // A loan has to have at least 1 borrower\n\n    if (loan.borrowerIds.length <= 1) {\n      return false;\n    }\n\n    Borrowers.remove(borrowerId);\n    return Loans.update(loanId, {\n      $pull: {\n        borrowerIds: borrowerId\n      }\n    });\n  }\n});","map":{"version":3,"sources":["imports/core/api/methods/server/compoundMethods.js"],"names":["Meteor","module","watch","require","v","check","Loans","default","Borrowers","methods","setUserToLoan","loanId","String","userId","Error","loan","findOne","borrowers","update","$set","forEach","borrowerId","addBorrower","borrowerIds","length","newBorrowerId","insert","$push","removeBorrower","remove","$pull"],"mappings":";;AAAA,IAAIA,gBAAJ;;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,QAAD,kBAAQI,CAAR,EAAU;AAACJ,cAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;;AAA+D,IAAIC,eAAJ;;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,OAAD,iBAAOD,CAAP,EAAS;AAACC,aAAMD,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIE,cAAJ;AAAUL,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACI,SAAD,oBAASH,CAAT,EAAW;AAACE,YAAMF,CAAN;AAAQ;AAApB,CAA1C,EAAgE,CAAhE;AAAmE,IAAII,kBAAJ;AAAcP,OAAOC,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACI,SAAD,oBAASH,CAAT,EAAW;AAACI,gBAAUJ,CAAV;AAAY;AAAxB,CAAlD,EAA4E,CAA5E;;AAM3OJ,QAAOS,OAAP,CAAe;AACbC,iBAAe,6BAAgB;AAAA,QAAbC,MAAa,QAAbA,MAAa;;AAC7BN,WAAMM,MAAN,EAAcC,MAAd;;AAEA,QAAI,CAACZ,QAAOa,MAAP,EAAL,EAAsB;AACpB,YAAM,IAAIb,QAAOc,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAED,QAAMC,OAAOT,MAAMU,OAAN,CAAcL,MAAd,CAAb;AAP6B,QAQrBM,SARqB,GAQPF,IARO,CAQrBE,SARqB;AAU7BX,UAAMY,MAAN,CAAaP,MAAb,EAAqB;AAAEQ,YAAM;AAAEN,gBAAQb,QAAOa,MAAP;AAAV;AAAR,KAArB;AACAI,cAAUG,OAAV,CAAkB,UAACC,UAAD,EAAgB;AAChCb,gBAAUU,MAAV,CAAiBG,UAAjB,EAA6B;AAAEF,cAAM;AAAEN,kBAAQb,QAAOa,MAAP;AAAV;AAAR,OAA7B;AACD,KAFD;AAIA,WAAO,IAAP;AACD,GAjBY;AAkBbS,aAlBa,8BAkBW;AAAA,QAAVX,MAAU,SAAVA,MAAU;AACtB;AACA,QAAMI,OAAOT,MAAMU,OAAN,CAAcL,MAAd,CAAb,CAFsB,CAItB;;AACA,QAAII,KAAKQ,WAAL,CAAiBC,MAAjB,IAA2B,CAA/B,EAAkC;AAChC,aAAO,KAAP;AACD;;AAED,QAAMC,gBAAgBjB,UAAUkB,MAAV,CAAiB;AAAEb,cAAQb,QAAOa,MAAP;AAAV,KAAjB,CAAtB;AAEA,WAAOP,MAAMY,MAAN,CAAaP,MAAb,EAAqB;AAC1BgB,aAAO;AAAEJ,qBAAaE;AAAf;AADmB,KAArB,CAAP;AAGD,GAhCY;AAiCbG,gBAjCa,iCAiC0B;AAAA,QAAtBjB,MAAsB,SAAtBA,MAAsB;AAAA,QAAdU,UAAc,SAAdA,UAAc;AACrC;AACA,QAAMN,OAAOT,MAAMU,OAAN,CAAcL,MAAd,CAAb,CAFqC,CAIrC;;AACA,QAAII,KAAKQ,WAAL,CAAiBC,MAAjB,IAA2B,CAA/B,EAAkC;AAChC,aAAO,KAAP;AACD;;AAEDhB,cAAUqB,MAAV,CAAiBR,UAAjB;AACA,WAAOf,MAAMY,MAAN,CAAaP,MAAb,EAAqB;AAC1BmB,aAAO;AAAEP,qBAAaF;AAAf;AADmB,KAArB,CAAP;AAGD;AA9CY,CAAf","file":"imports/core/api/methods/server/compoundMethods.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport Loans from '../../loans/loans';\nimport Borrowers from '../../borrowers/borrowers';\n\nMeteor.methods({\n  setUserToLoan: ({ loanId }) => {\n    check(loanId, String);\n\n    if (!Meteor.userId()) {\n      throw new Meteor.Error('not authorized');\n    }\n\n    const loan = Loans.findOne(loanId);\n    const { borrowers } = loan;\n\n    Loans.update(loanId, { $set: { userId: Meteor.userId() } });\n    borrowers.forEach((borrowerId) => {\n      Borrowers.update(borrowerId, { $set: { userId: Meteor.userId() } });\n    });\n\n    return true;\n  },\n  addBorrower({ loanId }) {\n    // TODO: Secure this\n    const loan = Loans.findOne(loanId);\n\n    // A loan can't have more than 2 borrowers at the moment\n    if (loan.borrowerIds.length >= 2) {\n      return false;\n    }\n\n    const newBorrowerId = Borrowers.insert({ userId: Meteor.userId() });\n\n    return Loans.update(loanId, {\n      $push: { borrowerIds: newBorrowerId },\n    });\n  },\n  removeBorrower({ loanId, borrowerId }) {\n    // TODO: Secure this\n    const loan = Loans.findOne(loanId);\n\n    // A loan has to have at least 1 borrower\n    if (loan.borrowerIds.length <= 1) {\n      return false;\n    }\n\n    Borrowers.remove(borrowerId);\n    return Loans.update(loanId, {\n      $pull: { borrowerIds: borrowerId },\n    });\n  },\n});\n"]},"hash":"ce24776c2f3922cccca58780937b2bf1de545cf7"}
