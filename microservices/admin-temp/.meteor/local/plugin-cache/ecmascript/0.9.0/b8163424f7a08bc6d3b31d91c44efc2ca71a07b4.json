{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"simpl-schema","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SimpleSchema"}]},{"source":"../files/files","imported":["getFileSchema"],"specifiers":[{"kind":"named","imported":"getFileSchema","local":"getFileSchema"}]},{"source":"./additionalSchemas","imported":["GeneralSchema","PropertySchema","LogicSchema"],"specifiers":[{"kind":"named","imported":"GeneralSchema","local":"GeneralSchema"},{"kind":"named","imported":"PropertySchema","local":"PropertySchema"},{"kind":"named","imported":"LogicSchema","local":"LogicSchema"}]},{"source":"./loanConstants","imported":["LOAN_STATUS"],"specifiers":[{"kind":"named","imported":"LOAN_STATUS","local":"LOAN_STATUS"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/loans/loans.js","filenameRelative":"imports/core/api/loans/loans.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/loans/loans.js.map","sourceFileName":"imports/core/api/loans/loans.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"loans"},"ignored":false,"code":"\"use strict\";\n\nvar _Mongo = void 0;\n\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function () {\n    function Mongo(v) {\n      _Mongo = v;\n    }\n\n    return Mongo;\n  }()\n}, 0);\nvar SimpleSchema = void 0;\nmodule.watch(require(\"simpl-schema\"), {\n  \"default\": function () {\n    function _default(v) {\n      SimpleSchema = v;\n    }\n\n    return _default;\n  }()\n}, 1);\n\nvar _getFileSchema = void 0;\n\nmodule.watch(require(\"../files/files\"), {\n  getFileSchema: function () {\n    function getFileSchema(v) {\n      _getFileSchema = v;\n    }\n\n    return getFileSchema;\n  }()\n}, 2);\n\nvar _GeneralSchema = void 0,\n    _PropertySchema = void 0,\n    _LogicSchema = void 0;\n\nmodule.watch(require(\"./additionalSchemas\"), {\n  GeneralSchema: function () {\n    function GeneralSchema(v) {\n      _GeneralSchema = v;\n    }\n\n    return GeneralSchema;\n  }(),\n  PropertySchema: function () {\n    function PropertySchema(v) {\n      _PropertySchema = v;\n    }\n\n    return PropertySchema;\n  }(),\n  LogicSchema: function () {\n    function LogicSchema(v) {\n      _LogicSchema = v;\n    }\n\n    return LogicSchema;\n  }()\n}, 3);\n\nvar _LOAN_STATUS = void 0;\n\nmodule.watch(require(\"./loanConstants\"), {\n  LOAN_STATUS: function () {\n    function LOAN_STATUS(v) {\n      _LOAN_STATUS = v;\n    }\n\n    return LOAN_STATUS;\n  }()\n}, 4);\nvar Loans = new _Mongo.Collection('loans');\nvar LoanFilesSchema = new SimpleSchema(_getFileSchema('loan')); // Prevent all client side modifications of mongoDB\n\nLoans.deny({\n  insert: function () {\n    function insert() {\n      return true;\n    }\n\n    return insert;\n  }(),\n  update: function () {\n    function update() {\n      return true;\n    }\n\n    return update;\n  }(),\n  remove: function () {\n    function remove() {\n      return true;\n    }\n\n    return remove;\n  }()\n});\nLoans.allow({\n  insert: function () {\n    function insert() {\n      return true;\n    }\n\n    return insert;\n  }(),\n  update: function () {\n    function update() {\n      return false;\n    }\n\n    return update;\n  }(),\n  remove: function () {\n    function remove() {\n      return false;\n    }\n\n    return remove;\n  }()\n}); // Documentation is in the google drive dev/MongoDB Schemas\n\nvar LoanSchema = new SimpleSchema({\n  userId: {\n    type: String,\n    index: true,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      function autoValue() {\n        if (this.isInsert) {\n          return new Date();\n        }\n      }\n\n      return autoValue;\n    }()\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function () {\n      function autoValue() {\n        // Verify the update is from the user owning this doc, ignoring admin/partner updates\n        var doc = Loans.findOne({\n          _id: this.docId\n        }, {\n          fields: {\n            userId: 1\n          }\n        });\n\n        if (this.isInsert) {\n          return new Date();\n        } else if (this.isUpdate && doc && this.userId === doc.userId) {\n          return new Date();\n        }\n      }\n\n      return autoValue;\n    }()\n  },\n  status: {\n    type: String,\n    defaultValue: _LOAN_STATUS.ACTIVE,\n    allowedValues: Object.values(_LOAN_STATUS)\n  },\n  name: {\n    type: String,\n    optional: true,\n    defaultValue: ''\n  },\n  general: {\n    type: _GeneralSchema,\n    defaultValue: {}\n  },\n  borrowerIds: {\n    type: Array,\n    defaultValue: []\n  },\n  'borrowerIds.$': String,\n  // property: PropertySchema,\n  propertyId: String,\n  files: {\n    type: LoanFilesSchema,\n    defaultValue: {}\n  },\n  logic: {\n    type: _LogicSchema,\n    defaultValue: {}\n  },\n  adminValidation: {\n    type: Object,\n    defaultValue: {},\n    blackbox: true\n  },\n  emails: {\n    type: Array,\n    defaultValue: []\n  },\n  'emails.$': Object,\n  'emails.$._id': String,\n  'emails.$.emailId': String,\n  'emails.$.status': String,\n  'emails.$.updatedAt': Date,\n  'emails.$.scheduledAt': {\n    type: Date,\n    optional: true\n  }\n}); // Finally, attach schema to the Mongo collection and export\n\nLoans.attachSchema(LoanSchema);\nmodule.exportDefault(Loans);","map":{"version":3,"sources":["imports/core/api/loans/loans.js"],"names":["Mongo","module","watch","require","v","SimpleSchema","getFileSchema","GeneralSchema","PropertySchema","LogicSchema","LOAN_STATUS","Loans","Collection","LoanFilesSchema","deny","insert","update","remove","allow","LoanSchema","userId","type","String","index","optional","createdAt","Date","autoValue","isInsert","updatedAt","doc","findOne","_id","docId","fields","isUpdate","status","defaultValue","ACTIVE","allowedValues","Object","values","name","general","borrowerIds","Array","propertyId","files","logic","adminValidation","blackbox","emails","attachSchema","exportDefault"],"mappings":"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","file":"imports/core/api/loans/loans.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\nimport { getFileSchema } from '../files/files';\nimport {\n  GeneralSchema,\n  PropertySchema,\n  LogicSchema,\n} from './additionalSchemas';\nimport { LOAN_STATUS } from './loanConstants';\n\nconst Loans = new Mongo.Collection('loans');\n\nconst LoanFilesSchema = new SimpleSchema(getFileSchema('loan'));\n\n// Prevent all client side modifications of mongoDB\nLoans.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\nLoans.allow({\n  insert: () => true,\n  update: () => false,\n  remove: () => false,\n});\n\n// Documentation is in the google drive dev/MongoDB Schemas\nconst LoanSchema = new SimpleSchema({\n  userId: {\n    type: String,\n    index: true,\n    optional: true,\n  },\n  createdAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      }\n    },\n  },\n  updatedAt: {\n    type: Date,\n    autoValue() {\n      // Verify the update is from the user owning this doc, ignoring admin/partner updates\n      const doc = Loans.findOne({ _id: this.docId }, { fields: { userId: 1 } });\n\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpdate && doc && this.userId === doc.userId) {\n        return new Date();\n      }\n    },\n  },\n  status: {\n    type: String,\n    defaultValue: LOAN_STATUS.ACTIVE,\n    allowedValues: Object.values(LOAN_STATUS),\n  },\n  name: { type: String, optional: true, defaultValue: '' },\n  general: { type: GeneralSchema, defaultValue: {} },\n  borrowerIds: { type: Array, defaultValue: [] },\n  'borrowerIds.$': String,\n  // property: PropertySchema,\n  propertyId: String,\n  files: { type: LoanFilesSchema, defaultValue: {} },\n  logic: { type: LogicSchema, defaultValue: {} },\n  adminValidation: { type: Object, defaultValue: {}, blackbox: true },\n  emails: { type: Array, defaultValue: [] },\n  'emails.$': Object,\n  'emails.$._id': String,\n  'emails.$.emailId': String,\n  'emails.$.status': String,\n  'emails.$.updatedAt': Date,\n  'emails.$.scheduledAt': { type: Date, optional: true },\n});\n\n// Finally, attach schema to the Mongo collection and export\nLoans.attachSchema(LoanSchema);\nexport default Loans;\n"]},"hash":"b8163424f7a08bc6d3b31d91c44efc2ca71a07b4"}
