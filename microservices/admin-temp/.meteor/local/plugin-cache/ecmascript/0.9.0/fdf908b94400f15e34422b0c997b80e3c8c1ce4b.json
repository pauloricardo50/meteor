{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"prop-types","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"PropTypes"}]},{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"../../../core/components/Table","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Table"}]},{"source":"../../../core/components/Translation","imported":["T"],"specifiers":[{"kind":"named","imported":"T","local":"T"}]},{"source":"../../../core/api/tasks/tasksConstants","imported":["TASK_STATUS","TASK_TYPE"],"specifiers":[{"kind":"named","imported":"TASK_STATUS","local":"TASK_STATUS"},{"kind":"named","imported":"TASK_TYPE","local":"TASK_TYPE"}]},{"source":"./TasksStatusDropdown","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TasksStatusDropdown"}]},{"source":"./TasksUsersWithData","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TasksUserWithData"}]}],"exports":{"exported":["TasksTable"],"specifiers":[{"kind":"local","local":"TasksTable","exported":"default"}]}}},"options":{"filename":"imports/ui/pages/TasksPage/TasksTable.jsx","filenameRelative":"imports/ui/pages/TasksPage/TasksTable.jsx","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/ui/pages/TasksPage/TasksTable.jsx.map","sourceFileName":"imports/ui/pages/TasksPage/TasksTable.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"TasksTable"},"ignored":false,"code":"\"use strict\";\n\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  \"default\": function () {\n    function _default() {\n      return TasksTable;\n    }\n\n    return _default;\n  }()\n});\n\nvar _Meteor = void 0;\n\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function () {\n    function Meteor(v) {\n      _Meteor = v;\n    }\n\n    return Meteor;\n  }()\n}, 0);\nvar PropTypes = void 0;\nmodule.watch(require(\"prop-types\"), {\n  \"default\": function () {\n    function _default(v) {\n      PropTypes = v;\n    }\n\n    return _default;\n  }()\n}, 1);\n\nvar React = void 0,\n    _Component = void 0;\n\nmodule.watch(require(\"react\"), {\n  \"default\": function () {\n    function _default(v) {\n      React = v;\n    }\n\n    return _default;\n  }(),\n  Component: function () {\n    function Component(v) {\n      _Component = v;\n    }\n\n    return Component;\n  }()\n}, 2);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function () {\n    function Roles(v) {\n      _Roles = v;\n    }\n\n    return Roles;\n  }()\n}, 3);\nvar moment = void 0;\nmodule.watch(require(\"moment\"), {\n  \"default\": function () {\n    function _default(v) {\n      moment = v;\n    }\n\n    return _default;\n  }()\n}, 4);\nvar Table = void 0;\nmodule.watch(require(\"../../../core/components/Table\"), {\n  \"default\": function () {\n    function _default(v) {\n      Table = v;\n    }\n\n    return _default;\n  }()\n}, 5);\n\nvar _T = void 0;\n\nmodule.watch(require(\"../../../core/components/Translation\"), {\n  T: function () {\n    function T(v) {\n      _T = v;\n    }\n\n    return T;\n  }()\n}, 6);\n\nvar _TASK_STATUS = void 0,\n    _TASK_TYPE = void 0;\n\nmodule.watch(require(\"../../../core/api/tasks/tasksConstants\"), {\n  TASK_STATUS: function () {\n    function TASK_STATUS(v) {\n      _TASK_STATUS = v;\n    }\n\n    return TASK_STATUS;\n  }(),\n  TASK_TYPE: function () {\n    function TASK_TYPE(v) {\n      _TASK_TYPE = v;\n    }\n\n    return TASK_TYPE;\n  }()\n}, 7);\nvar TasksStatusDropdown = void 0;\nmodule.watch(require(\"./TasksStatusDropdown\"), {\n  \"default\": function () {\n    function _default(v) {\n      TasksStatusDropdown = v;\n    }\n\n    return _default;\n  }()\n}, 8);\nvar TasksUserWithData = void 0;\nmodule.watch(require(\"./TasksUsersWithData\"), {\n  \"default\": function () {\n    function _default(v) {\n      TasksUserWithData = v;\n    }\n\n    return _default;\n  }()\n}, 9);\nvar styles = {\n  dropdownButtons: {\n    display: 'inline',\n    width: '50%'\n  }\n};\n\nvar TasksTable = function (_Component2) {\n  (0, _inherits3.default)(TasksTable, _Component2);\n\n  function TasksTable(props) {\n    (0, _classCallCheck3.default)(this, TasksTable);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (TasksTable.__proto__ || Object.getPrototypeOf(TasksTable)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.state = {\n      rows: _this.setupRows(_this.props),\n      columnOptions: _this.getColumnOptions(_this.props)\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(TasksTable, [{\n    key: \"componentWillReceiveProps\",\n    value: function () {\n      function componentWillReceiveProps(nextProps) {\n        var newRows = this.setupRows(nextProps);\n        this.setState({\n          rows: newRows,\n          columnOptions: this.getColumnOptions(nextProps)\n        });\n      }\n\n      return componentWillReceiveProps;\n    }()\n  }, {\n    key: \"render\",\n    value: function () {\n      function render() {\n        var isLoading = this.props.isLoading;\n        var _state = this.state,\n            columnOptions = _state.columnOptions,\n            rows = _state.rows;\n\n        if (!isLoading) {\n          return React.createElement(Table, {\n            columnOptions: columnOptions,\n            rows: rows,\n            noIntl: true\n          });\n        }\n\n        return null;\n      }\n\n      return render;\n    }()\n  }]);\n  return TasksTable;\n}(_Component);\n\nvar _initialiseProps = function () {\n  function _initialiseProps() {\n    var _this2 = this;\n\n    this.getColumnOptions = function (_ref) {\n      var showAssignee = _ref.showAssignee;\n      var columnOptions = [{\n        id: '#',\n        style: {\n          width: 32,\n          textAlign: 'left'\n        }\n      }, {\n        id: React.createElement(_T, {\n          id: \"TasksTable.type\"\n        })\n      }, {\n        id: React.createElement(_T, {\n          id: \"TasksTable.status\"\n        })\n      }, {\n        id: React.createElement(_T, {\n          id: \"TasksTable.createdAt\"\n        })\n      }, {\n        id: React.createElement(_T, {\n          id: \"TasksTable.updatedAt\"\n        })\n      }, {\n        id: React.createElement(_T, {\n          id: \"TasksTable.dueAt\"\n        })\n      }, {\n        id: React.createElement(_T, {\n          id: \"TasksTable.completedAt\"\n        })\n      }, {\n        id: React.createElement(_T, {\n          id: \"TasksTable.relatedTo\"\n        })\n      }];\n\n      if (showAssignee) {\n        columnOptions.push({\n          id: React.createElement(_T, {\n            id: \"TasksTable.asignedTo\"\n          })\n        });\n      }\n\n      columnOptions.push({\n        id: React.createElement(_T, {\n          id: \"TasksTable.actions\"\n        })\n      });\n      return columnOptions;\n    };\n\n    this.getColumns = function (_ref2) {\n      var props = _ref2.props,\n          index = _ref2.index,\n          task = _ref2.task;\n      var columns = [index + 1, React.createElement(_T, {\n        id: \"TasksStatusDropdown.\" + task.type\n      }), React.createElement(_T, {\n        id: \"TasksStatusDropdown.\" + task.status\n      }), moment(task.createdAt).format('D MMM YY à HH:mm:ss'), moment(task.updatedAt).format('D MMM YY à HH:mm:ss'), moment(task.dueAt).format('D MMM YY à HH:mm:ss'), moment(task.completedAt).format('D MMM YY à HH:mm:ss'), task.user && (task.user.username || task.user.emails[0].address.toString()) || ''];\n\n      if (props.showAssignee) {\n        columns.push(task.assignedUser && (task.assignedUser.username || task.assignedUser.emails[0].address.toString()) || '');\n      }\n\n      columns.push(React.createElement(\n        \"div\",\n        null,\n        React.createElement(TasksStatusDropdown, (0, _extends3.default)({}, props, {\n          currentUser: _Meteor.user(),\n          taskId: task._id,\n          taskStatus: task.status,\n          styles: styles.dropdownButtons\n        })),\n        React.createElement(TasksUserWithData, (0, _extends3.default)({}, props, {\n          taskId: task._id,\n          taskAssignedTo: task.assignedUser,\n          styles: styles.dropdownButtons,\n          taskUserId: task.userId,\n          initialAssignment: task.type === _TASK_TYPE.ADD_ASSIGNED_TO && task.status === _TASK_STATUS.ACTIVE\n        }))\n      ));\n      return columns;\n    };\n\n    this.setupRows = function (props) {\n      var tasks = props.data;\n      _this2.rows = tasks.map(function (task, index) {\n        return {\n          id: task._id,\n          columns: _this2.getColumns({\n            props: props,\n            index: index,\n            task: task\n          })\n        };\n      });\n      return _this2.rows;\n    };\n  }\n\n  return _initialiseProps;\n}();\n\nTasksTable.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired\n};","map":{"version":3,"sources":["imports/ui/pages/TasksPage/TasksTable.jsx"],"names":["module","export","TasksTable","Meteor","watch","require","v","PropTypes","React","Component","Roles","moment","Table","T","TASK_STATUS","TASK_TYPE","TasksStatusDropdown","TasksUserWithData","styles","dropdownButtons","display","width","props","state","rows","setupRows","columnOptions","getColumnOptions","nextProps","newRows","setState","isLoading","showAssignee","id","style","textAlign","push","getColumns","index","task","columns","type","status","createdAt","format","updatedAt","dueAt","completedAt","user","username","emails","address","toString","assignedUser","_id","userId","ADD_ASSIGNED_TO","ACTIVE","tasks","data","map","propTypes","history","objectOf","any","isRequired"],"mappings":"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","file":"imports/ui/pages/TasksPage/TasksTable.jsx.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Roles } from 'meteor/alanning:roles';\nimport moment from 'moment';\nimport Table from 'core/components/Table';\nimport { T } from 'core/components/Translation/';\nimport { TASK_STATUS, TASK_TYPE } from 'core/api/tasks/tasksConstants';\nimport TasksStatusDropdown from './TasksStatusDropdown';\nimport TasksUserWithData from './TasksUsersWithData';\n\n\nconst styles = {\n  dropdownButtons: { display: 'inline', width: '50%' },\n};\n\nexport default class TasksTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: this.setupRows(this.props),\n      columnOptions: this.getColumnOptions(this.props),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const newRows = this.setupRows(nextProps);\n    this.setState({\n      rows: newRows,\n      columnOptions: this.getColumnOptions(nextProps),\n    });\n  }\n\n  getColumnOptions = ({ showAssignee }) => {\n    const columnOptions = [\n      { id: '#', style: { width: 32, textAlign: 'left' } },\n      {\n        id: <T id=\"TasksTable.type\" />,\n      },\n      {\n        id: <T id=\"TasksTable.status\" />,\n      },\n      {\n        id: <T id=\"TasksTable.createdAt\" />,\n      },\n      {\n        id: <T id=\"TasksTable.updatedAt\" />,\n      },\n      {\n        id: <T id=\"TasksTable.dueAt\" />,\n      },\n      {\n        id: <T id=\"TasksTable.completedAt\" />,\n      },\n      {\n        id: <T id=\"TasksTable.relatedTo\" />,\n      },\n    ];\n    if (showAssignee) {\n      columnOptions.push({\n        id: <T id=\"TasksTable.asignedTo\" />,\n      });\n    }\n    columnOptions.push({\n      id: <T id=\"TasksTable.actions\" />,\n    });\n    return columnOptions;\n  };\n\n  getColumns = ({ props, index, task }) => {\n    const columns = [\n      index + 1,\n      <T id={`TasksStatusDropdown.${task.type}`} />,\n      <T id={`TasksStatusDropdown.${task.status}`} />,\n      moment(task.createdAt).format('D MMM YY à HH:mm:ss'),\n      moment(task.updatedAt).format('D MMM YY à HH:mm:ss'),\n      moment(task.dueAt).format('D MMM YY à HH:mm:ss'),\n      moment(task.completedAt).format('D MMM YY à HH:mm:ss'),\n      (task.user && (task.user.username || task.user.emails[0].address.toString()))\n      || '',\n      // TODO: also check& add other related docs\n    ];\n    if (props.showAssignee) {\n      columns.push((task.assignedUser &&\n          (task.assignedUser.username ||\n            task.assignedUser.emails[0].address.toString())) ||\n          '');\n    }\n\n    columns.push(<div>\n      <TasksStatusDropdown\n        {...props}\n        currentUser={Meteor.user()}\n        taskId={task._id}\n        taskStatus={task.status}\n        styles={styles.dropdownButtons}\n      />\n      <TasksUserWithData\n        {...props}\n        taskId={task._id}\n        taskAssignedTo={task.assignedUser}\n        styles={styles.dropdownButtons}\n        taskUserId={task.userId}\n        initialAssignment={task.type === TASK_TYPE.ADD_ASSIGNED_TO && task.status === TASK_STATUS.ACTIVE}\n      />\n    </div>);\n\n    return columns;\n  };\n\n  setupRows = (props) => {\n    const tasks = props.data;\n\n    this.rows = tasks.map((task, index) => ({\n      id: task._id,\n      columns: this.getColumns({\n        props,\n        index,\n        task,\n      }),\n    }));\n\n    return this.rows;\n  };\n\n  render() {\n    const { isLoading } = this.props;\n    const { columnOptions, rows } = this.state;\n\n    if (!isLoading) {\n      return <Table columnOptions={columnOptions} rows={rows} noIntl />;\n    }\n    return null;\n  }\n}\n\nTasksTable.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n"]},"hash":"fdf908b94400f15e34422b0c997b80e3c8c1ce4b"}
