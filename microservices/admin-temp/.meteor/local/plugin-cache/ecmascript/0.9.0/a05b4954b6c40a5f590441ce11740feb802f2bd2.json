{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","filenameRelative":"packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js.map","sourceFileName":"packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"smartArguments"},"ignored":false,"code":"module.exportDefault(new class {\n    getIds(what, options) {\n        if (_.isArray(what)) {\n            return _.map(what, subWhat => {\n                return this.getId(subWhat, options);\n            });\n        } else {\n            return [this.getId(what, options)];\n        }\n\n        throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n    }\n\n    getId(what, options) {\n        if (typeof what === 'string') {\n            return what;\n        }\n\n        if (typeof what === 'object') {\n            if (!what._id && options.saveToDatabase) {\n                what._id = options.collection.insert(what);\n            }\n\n            return what._id;\n        }\n    }\n\n}());","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js"],"names":["module","exportDefault","getIds","what","options","_","isArray","map","subWhat","getId","Meteor","Error","_id","saveToDatabase","collection","insert"],"mappings":"AAAAA,OAAOC,aAAP,CAKe,IAAI,MAAM;AACrBC,WAAOC,IAAP,EAAaC,OAAb,EAAsB;AAClB,YAAIC,EAAEC,OAAF,CAAUH,IAAV,CAAJ,EAAqB;AACjB,mBAAOE,EAAEE,GAAF,CAAMJ,IAAN,EAAaK,OAAD,IAAa;AAC5B,uBAAO,KAAKC,KAAL,CAAWD,OAAX,EAAoBJ,OAApB,CAAP;AACH,aAFM,CAAP;AAGH,SAJD,MAIO;AACH,mBAAO,CAAC,KAAKK,KAAL,CAAWN,IAAX,EAAiBC,OAAjB,CAAD,CAAP;AACH;;AAED,cAAM,IAAIM,OAAOC,KAAX,CAAiB,cAAjB,EAAkC,sBAAqB,OAAOR,IAAK,qBAAnE,CAAN;AACH;;AAEDM,UAAMN,IAAN,EAAYC,OAAZ,EAAqB;AACjB,YAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1B,mBAAOA,IAAP;AACH;;AAED,YAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B,gBAAI,CAACA,KAAKS,GAAN,IAAaR,QAAQS,cAAzB,EAAyC;AACrCV,qBAAKS,GAAL,GAAWR,QAAQU,UAAR,CAAmBC,MAAnB,CAA0BZ,IAA1B,CAAX;AACH;;AAED,mBAAOA,KAAKS,GAAZ;AACH;AACJ;;AAzBoB,CAAV,EALf","file":"packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js.map","sourcesContent":["/**\n * When you work with add/remove set/unset\n * You have the ability to pass strings, array of strings, objects, array of objects\n * If you are adding something and you want to save them in db, you can pass objects without ids.\n */\nexport default new class {\n    getIds(what, options) {\n        if (_.isArray(what)) {\n            return _.map(what, (subWhat) => {\n                return this.getId(subWhat, options)\n            })\n        } else {\n            return [this.getId(what, options)];\n        }\n\n        throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n    }\n\n    getId(what, options) {\n        if (typeof what === 'string') {\n            return what;\n        }\n\n        if (typeof what === 'object') {\n            if (!what._id && options.saveToDatabase) {\n                what._id = options.collection.insert(what);\n            }\n\n            return what._id\n        }\n    }\n}"]},"hash":"a05b4954b6c40a5f590441ce11740feb802f2bd2"}
