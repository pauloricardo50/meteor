{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"simpl-schema","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SimpleSchema"}]},{"source":"../constants","imported":["FILE_STATUS","PURCHASE_TYPE","USAGE_TYPE"],"specifiers":[{"kind":"named","imported":"FILE_STATUS","local":"FILE_STATUS"},{"kind":"named","imported":"PURCHASE_TYPE","local":"PURCHASE_TYPE"},{"kind":"named","imported":"USAGE_TYPE","local":"USAGE_TYPE"}]}],"exports":{"exported":["borrowerFiles","loanFiles","propertyFiles","getFileIDs","FileSchema","getFileSchema","fakeFile","getFileCount"],"specifiers":[{"kind":"local","local":"borrowerFiles","exported":"borrowerFiles"},{"kind":"local","local":"loanFiles","exported":"loanFiles"},{"kind":"local","local":"propertyFiles","exported":"propertyFiles"},{"kind":"local","local":"getFileIDs","exported":"getFileIDs"},{"kind":"local","local":"FileSchema","exported":"FileSchema"},{"kind":"local","local":"getFileSchema","exported":"getFileSchema"},{"kind":"local","local":"fakeFile","exported":"fakeFile"},{"kind":"local","local":"getFileCount","exported":"getFileCount"}]}}},"options":{"filename":"imports/core/api/files/files.js","filenameRelative":"imports/core/api/files/files.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/files/files.js.map","sourceFileName":"imports/core/api/files/files.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"files"},"ignored":false,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.export({\n  borrowerFiles: function () {\n    function borrowerFiles() {\n      return _borrowerFiles;\n    }\n\n    return borrowerFiles;\n  }(),\n  loanFiles: function () {\n    function loanFiles() {\n      return _loanFiles;\n    }\n\n    return loanFiles;\n  }(),\n  propertyFiles: function () {\n    function propertyFiles() {\n      return _propertyFiles;\n    }\n\n    return propertyFiles;\n  }(),\n  getFileIDs: function () {\n    function getFileIDs() {\n      return _getFileIDs;\n    }\n\n    return getFileIDs;\n  }(),\n  FileSchema: function () {\n    function FileSchema() {\n      return _FileSchema;\n    }\n\n    return FileSchema;\n  }(),\n  getFileSchema: function () {\n    function getFileSchema() {\n      return _getFileSchema;\n    }\n\n    return getFileSchema;\n  }(),\n  fakeFile: function () {\n    function fakeFile() {\n      return _fakeFile;\n    }\n\n    return fakeFile;\n  }(),\n  getFileCount: function () {\n    function getFileCount() {\n      return _getFileCount;\n    }\n\n    return getFileCount;\n  }()\n});\nvar SimpleSchema = void 0;\nmodule.watch(require(\"simpl-schema\"), {\n  \"default\": function () {\n    function _default(v) {\n      SimpleSchema = v;\n    }\n\n    return _default;\n  }()\n}, 0);\nexports.borrowerFiles = _borrowerFiles;\n\nvar _FILE_STATUS = void 0,\n    _PURCHASE_TYPE = void 0,\n    _USAGE_TYPE = void 0;\n\nmodule.watch(require(\"../constants\"), {\n  FILE_STATUS: function () {\n    function FILE_STATUS(v) {\n      _FILE_STATUS = v;\n    }\n\n    return FILE_STATUS;\n  }(),\n  PURCHASE_TYPE: function () {\n    function PURCHASE_TYPE(v) {\n      _PURCHASE_TYPE = v;\n    }\n\n    return PURCHASE_TYPE;\n  }(),\n  USAGE_TYPE: function () {\n    function USAGE_TYPE(v) {\n      _USAGE_TYPE = v;\n    }\n\n    return USAGE_TYPE;\n  }()\n}, 1);\n\nvar _borrowerFiles = function () {\n  function _borrowerFiles() {\n    var b = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      auction: [{\n        id: 'identity'\n      }, {\n        id: 'residencyPermit',\n        condition: !b.isSwiss\n      }, {\n        id: 'taxes' // condition: true, //TODO: implement married couple logic\n\n      }, {\n        id: 'salaryCertificate'\n      }, {\n        id: 'bonus',\n        condition: !!b.bonus && Object.keys(b.bonus).length > 0\n      }, {\n        id: 'otherIncome',\n        condition: b.otherIncome && !!(b.otherIncome.length > 0)\n      }, {\n        id: 'ownCompanyFinancialStatements',\n        condition: !!b.worksForOwnCompany\n      }, {\n        id: 'divorceJudgment',\n        condition: !b.civilStatus === 'divorced',\n        noTooltips: true\n      }, {\n        id: 'expenses',\n        condition: !!b.otherIncome && !!(b.otherIncome.length > 0)\n      }],\n      contract: [{\n        id: 'nonPursuitExtract',\n        doubleTooltip: true\n      }, {\n        id: 'lastSalaries',\n        noTooltips: true\n      }, {\n        id: 'currentMortgages',\n        condition: !!b.realEstate && !!b.realEstate.length > 0\n      }, {\n        id: 'bankAssetsChange',\n        condition: b.fortuneChange\n      }, {\n        id: 'pensionFundYearlyStatement',\n        condition: b.insuranceSecondPillar > 0,\n        doubleTooltip: true\n      }, {\n        id: 'retirementInsurancePlan',\n        condition: b.insuranceThirdPillar > 0,\n        // TODO, separate from insurance and other below\n        doubleTooltip: true\n      }, {\n        id: 'retirementPlanOther',\n        // condition: true, TODO\n        condition: false,\n        doubleTooltip: true\n      }],\n      closing: [],\n      all: function () {\n        function all() {\n          return [].concat(_toConsumableArray(this.auction), _toConsumableArray(this.contract), _toConsumableArray(this.closing));\n        }\n\n        return all;\n      }()\n    };\n  }\n\n  return _borrowerFiles;\n}();\n\nvar _loanFiles = function () {\n  function _loanFiles() {\n    var r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      auction: [// {\n        //   id: 'plans',\n        // },\n        // {\n        //   id: 'cubage',\n        //   doubleTooltip: true,\n        //   condition: r.propertyId && r.propertyId.style === 'villa',\n        // },\n        // {\n        //   id: 'pictures',\n        // },\n        // {\n        //   id: 'marketingBrochure',\n        //   condition: !!r.general && r.general.purchaseType === 'acquisition',\n        //   required: false,\n        // },\n      ],\n      contract: [{\n        id: 'buyersContract',\n        tooltipSuffix: !!r.general && r.general.purchaseType === 'refinancing' ? 'a' : 'b'\n      }, {\n        id: 'reimbursementStatement',\n        condition: !!r.general && r.general.purchaseType === 'refinancing'\n      }, {\n        id: 'rent',\n        condition: !!r.general && r.general.usageType === 'investment',\n        doubleTooltip: true\n      }, {\n        id: 'coownershipAllocationAgreement',\n        condition: !!r.propertyId && !!r.propertyId.isCoproperty,\n        doubleTooltip: true\n      }, {\n        id: 'coownershipAgreement',\n        condition: !!r.propertyId && !!r.propertyId.isCoproperty,\n        doubleTooltip: true\n      }, {\n        id: 'fireAndWaterInsurance',\n        condition: !!(r.propertyId && r.propertyId.isNew)\n      }],\n      closing: [],\n      // closing: [\n      //   {\n      //     id: 'retirementWithdrawalStatement',\n      //     label: 'Attestation LPP - après retrait',\n      //     help1: 'Certificat émis sur votre demande par votre caisse de pension démontrant votre situation LPP après retrait',\n      //     help2: 'Vous pouvez obtenir ce document, sur demande, auprès de votre caisse de pension',\n      //     condition: !!r.logic && r.insuranceUsePreset === 'withdrawal',\n      //   },\n      // ],\n      other: [{\n        id: 'upload0'\n      }, {\n        id: 'upload1'\n      }, {\n        id: 'upload2'\n      }, {\n        id: 'upload3'\n      }, {\n        id: 'upload4'\n      }],\n      admin: [{\n        id: 'contract'\n      }, {\n        id: 'signedContract'\n      }],\n      all: function () {\n        function all() {\n          return [].concat(_toConsumableArray(this.auction), _toConsumableArray(this.contract), _toConsumableArray(this.closing), _toConsumableArray(this.admin), _toConsumableArray(this.other));\n        }\n\n        return all;\n      }()\n    };\n  }\n\n  return _loanFiles;\n}();\n\nvar _propertyFiles = function () {\n  function _propertyFiles() {\n    var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var loan = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return {\n      auction: [{\n        id: 'plans'\n      }, {\n        id: 'cubage',\n        doubleTooltip: true,\n        condition: property.style === 'villa'\n      }, {\n        id: 'pictures'\n      }, {\n        id: 'marketingBrochure',\n        condition: !!(loan && loan.general && loan.general.purchaseType === _PURCHASE_TYPE.ACQUISITION),\n        required: false\n      }],\n      contract: [{\n        id: 'rent',\n        condition: !!loan.general && loan.general.usageType === _USAGE_TYPE.INVESTMENT,\n        doubleTooltip: true\n      }, {\n        id: 'landRegisterExtract',\n        doubleTooltip: true\n      }],\n      all: function () {\n        function all() {\n          return [].concat(_toConsumableArray(this.auction), _toConsumableArray(this.contract));\n        }\n\n        return all;\n      }()\n    };\n  }\n\n  return _propertyFiles;\n}();\n\nvar _getFileIDs = function () {\n  function _getFileIDs(list) {\n    var files = void 0;\n    var ids = [];\n\n    switch (list) {\n      case 'borrower':\n        files = _borrowerFiles();\n        break;\n\n      case 'loan':\n        files = _loanFiles();\n        break;\n\n      case 'property':\n        files = _propertyFiles();\n        break;\n\n      default:\n        throw new Error('invalid file list');\n    }\n\n    files.all().forEach(function (f) {\n      return ids.push(f.id);\n    });\n    return ids;\n  }\n\n  return _getFileIDs;\n}();\n\nvar _FileSchema = new SimpleSchema({\n  name: String,\n  initialName: String,\n  size: Number,\n  type: String,\n  url: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url\n  },\n  key: String,\n  fileCount: Number,\n  status: {\n    type: String,\n    allowedValues: Object.values(_FILE_STATUS)\n  },\n  error: {\n    optional: true,\n    type: String\n  }\n});\n\nvar _getFileSchema = function () {\n  function _getFileSchema(list) {\n    var schema = {};\n\n    var arr = _getFileIDs(list);\n\n    arr.forEach(function (id) {\n      schema[id] = {\n        type: Array,\n        optional: true,\n        maxCount: 100\n      };\n      schema[id + \".$\"] = _FileSchema;\n    });\n    return schema;\n  }\n\n  return _getFileSchema;\n}();\n\nvar _fakeFile = {\n  name: 'fakeFile.pdf',\n  initialName: 'fakeFile.pdf',\n  size: 10000,\n  type: 'application/pdf',\n  url: 'https://www.fake-url.com',\n  key: 'asdf/fakeKey/fakeFile.pdf',\n  fileCount: 0,\n  status: _FILE_STATUS.VALID,\n  error: ''\n};\n\nvar _getFileCount = function () {\n  function _getFileCount(currentValue) {\n    var fileCountString = '00';\n    var fileCount = 0;\n\n    if (currentValue && currentValue.length > 0) {\n      // If something goes wrong, minimum should be -1 + 1 = 0\n      fileCount = Math.max.apply(Math, _toConsumableArray(currentValue.map(function (f) {\n        return f.fileCount;\n      })).concat([-1])) + 1;\n      fileCountString = fileCount < 10 ? \"0\" + fileCount : \"\" + fileCount;\n    }\n\n    return {\n      fileCount: fileCount,\n      fileCountString: fileCountString\n    };\n  }\n\n  return _getFileCount;\n}();","map":{"version":3,"sources":["imports/core/api/files/files.js"],"names":["module","export","borrowerFiles","loanFiles","propertyFiles","getFileIDs","FileSchema","getFileSchema","fakeFile","getFileCount","SimpleSchema","watch","require","v","FILE_STATUS","PURCHASE_TYPE","USAGE_TYPE","b","auction","id","condition","isSwiss","bonus","Object","keys","length","otherIncome","worksForOwnCompany","civilStatus","noTooltips","contract","doubleTooltip","realEstate","fortuneChange","insuranceSecondPillar","insuranceThirdPillar","closing","all","r","tooltipSuffix","general","purchaseType","usageType","propertyId","isCoproperty","isNew","other","admin","property","loan","style","ACQUISITION","required","INVESTMENT","list","files","ids","Error","forEach","push","f","name","String","initialName","size","Number","type","url","regEx","RegEx","Url","key","fileCount","status","allowedValues","values","error","optional","schema","arr","Array","maxCount","VALID","currentValue","fileCountString","Math","max","map"],"mappings":";;;;;;;;AAAAA,OAAOC,MAAP,CAAc;AAACC;AAAc;AAAA,aAAIA,cAAJ;AAAA;;AAAd;AAAA,KAAD;AAAiCC;AAAU;AAAA,aAAIA,UAAJ;AAAA;;AAAV;AAAA,KAAjC;AAAyDC;AAAc;AAAA,aAAIA,cAAJ;AAAA;;AAAd;AAAA,KAAzD;AAAyFC;AAAW;AAAA,aAAIA,WAAJ;AAAA;;AAAX;AAAA,KAAzF;AAAmHC;AAAW;AAAA,aAAIA,WAAJ;AAAA;;AAAX;AAAA,KAAnH;AAA6IC;AAAc;AAAA,aAAIA,cAAJ;AAAA;;AAAd;AAAA,KAA7I;AAA6KC;AAAS;AAAA,aAAIA,SAAJ;AAAA;;AAAT;AAAA,KAA7K;AAAmMC;AAAa;AAAA,aAAIA,aAAJ;AAAA;;AAAb;AAAA;AAAnM,CAAd;AAAiP,IAAIC,qBAAJ;AAAiBV,OAAOW,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACH,qBAAaG,CAAb;AAAe;;AAA3B;AAAA;AAAA,CAArC,EAAkE,CAAlE;;;AAAqE,IAAIC,qBAAJ;AAAA,IAAgBC,uBAAhB;AAAA,IAA8BC,oBAA9B;;AAAyChB,OAAOW,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACE,aAAD;AAAA,yBAAaD,CAAb,EAAe;AAACC,qBAAYD,CAAZ;AAAc;;AAA9B;AAAA;AAA+BE,eAA/B;AAAA,2BAA6CF,CAA7C,EAA+C;AAACE,uBAAcF,CAAd;AAAgB;;AAAhE;AAAA;AAAiEG,YAAjE;AAAA,wBAA4EH,CAA5E,EAA8E;AAACG,oBAAWH,CAAX;AAAa;;AAA5F;AAAA;AAAA,CAArC,EAAmI,CAAnI;;AAGzW,IAAMX;AAAgB,WAAhBA,cAAgB;AAAA,QAACe,CAAD,uEAAK,EAAL;AAAA,WAAa;AACxCC,eAAS,CACP;AACEC,YAAI;AADN,OADO,EAIP;AACEA,YAAI,iBADN;AAEEC,mBAAW,CAACH,EAAEI;AAFhB,OAJO,EAQP;AACEF,YAAI,OADN,CAEE;;AAFF,OARO,EAYP;AACEA,YAAI;AADN,OAZO,EAeP;AACEA,YAAI,OADN;AAEEC,mBAAW,CAAC,CAACH,EAAEK,KAAJ,IAAaC,OAAOC,IAAP,CAAYP,EAAEK,KAAd,EAAqBG,MAArB,GAA8B;AAFxD,OAfO,EAmBP;AACEN,YAAI,aADN;AAEEC,mBAAWH,EAAES,WAAF,IAAiB,CAAC,EAAET,EAAES,WAAF,CAAcD,MAAd,GAAuB,CAAzB;AAF/B,OAnBO,EAuBP;AACEN,YAAI,+BADN;AAEEC,mBAAW,CAAC,CAACH,EAAEU;AAFjB,OAvBO,EA2BP;AACER,YAAI,iBADN;AAEEC,mBAAW,CAACH,EAAEW,WAAH,KAAmB,UAFhC;AAGEC,oBAAY;AAHd,OA3BO,EAgCP;AACEV,YAAI,UADN;AAEEC,mBAAW,CAAC,CAACH,EAAES,WAAJ,IAAmB,CAAC,EAAET,EAAES,WAAF,CAAcD,MAAd,GAAuB,CAAzB;AAFjC,OAhCO,CAD+B;AAsCxCK,gBAAU,CACR;AACEX,YAAI,mBADN;AAEEY,uBAAe;AAFjB,OADQ,EAKR;AACEZ,YAAI,cADN;AAEEU,oBAAY;AAFd,OALQ,EASR;AACEV,YAAI,kBADN;AAEEC,mBAAW,CAAC,CAACH,EAAEe,UAAJ,IAAkB,CAAC,CAACf,EAAEe,UAAF,CAAaP,MAAf,GAAwB;AAFvD,OATQ,EAaR;AACEN,YAAI,kBADN;AAEEC,mBAAWH,EAAEgB;AAFf,OAbQ,EAiBR;AACEd,YAAI,4BADN;AAEEC,mBAAWH,EAAEiB,qBAAF,GAA0B,CAFvC;AAGEH,uBAAe;AAHjB,OAjBQ,EAsBR;AACEZ,YAAI,yBADN;AAEEC,mBAAWH,EAAEkB,oBAAF,GAAyB,CAFtC;AAEyC;AACvCJ,uBAAe;AAHjB,OAtBQ,EA2BR;AACEZ,YAAI,qBADN;AAEE;AACAC,mBAAW,KAHb;AAIEW,uBAAe;AAJjB,OA3BQ,CAtC8B;AAwExCK,eAAS,EAxE+B;AAyExCC,SAzEwC;AAAA,uBAyElC;AACJ,8CAAW,KAAKnB,OAAhB,sBAA4B,KAAKY,QAAjC,sBAA8C,KAAKM,OAAnD;AACD;;AA3EuC;AAAA;AAAA,KAAb;AAAA;;AAAhB;AAAA,GAAN;;AA8EA,IAAMjC;AAAY,WAAZA,UAAY;AAAA,QAACmC,CAAD,uEAAK,EAAL;AAAA,WAAa;AACpCpB,eAAS,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBO,OAD2B;AAmBpCY,gBAAU,CACR;AACEX,YAAI,gBADN;AAEEoB,uBACE,CAAC,CAACD,EAAEE,OAAJ,IAAeF,EAAEE,OAAF,CAAUC,YAAV,KAA2B,aAA1C,GAA0D,GAA1D,GAAgE;AAHpE,OADQ,EAMR;AACEtB,YAAI,wBADN;AAEEC,mBAAW,CAAC,CAACkB,EAAEE,OAAJ,IAAeF,EAAEE,OAAF,CAAUC,YAAV,KAA2B;AAFvD,OANQ,EAUR;AACEtB,YAAI,MADN;AAEEC,mBAAW,CAAC,CAACkB,EAAEE,OAAJ,IAAeF,EAAEE,OAAF,CAAUE,SAAV,KAAwB,YAFpD;AAGEX,uBAAe;AAHjB,OAVQ,EAeR;AACEZ,YAAI,gCADN;AAEEC,mBAAW,CAAC,CAACkB,EAAEK,UAAJ,IAAkB,CAAC,CAACL,EAAEK,UAAF,CAAaC,YAF9C;AAGEb,uBAAe;AAHjB,OAfQ,EAoBR;AACEZ,YAAI,sBADN;AAEEC,mBAAW,CAAC,CAACkB,EAAEK,UAAJ,IAAkB,CAAC,CAACL,EAAEK,UAAF,CAAaC,YAF9C;AAGEb,uBAAe;AAHjB,OApBQ,EAyBR;AACEZ,YAAI,uBADN;AAEEC,mBAAW,CAAC,EAAEkB,EAAEK,UAAF,IAAgBL,EAAEK,UAAF,CAAaE,KAA/B;AAFd,OAzBQ,CAnB0B;AAiDpCT,eAAS,EAjD2B;AAkDpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAU,aAAO,CACL;AAAE3B,YAAI;AAAN,OADK,EAEL;AAAEA,YAAI;AAAN,OAFK,EAGL;AAAEA,YAAI;AAAN,OAHK,EAIL;AAAEA,YAAI;AAAN,OAJK,EAKL;AAAEA,YAAI;AAAN,OALK,CA3D6B;AAkEpC4B,aAAO,CAAC;AAAE5B,YAAI;AAAN,OAAD,EAAqB;AAAEA,YAAI;AAAN,OAArB,CAlE6B;AAmEpCkB,SAnEoC;AAAA,uBAmE9B;AACJ,8CACK,KAAKnB,OADV,sBAEK,KAAKY,QAFV,sBAGK,KAAKM,OAHV,sBAIK,KAAKW,KAJV,sBAKK,KAAKD,KALV;AAOD;;AA3EmC;AAAA;AAAA,KAAb;AAAA;;AAAZ;AAAA,GAAN;;AA8EA,IAAM1C;AAAgB,WAAhBA,cAAgB;AAAA,QAAC4C,QAAD,uEAAY,EAAZ;AAAA,QAAgBC,IAAhB,uEAAuB,EAAvB;AAAA,WAA+B;AAC1D/B,eAAS,CACP;AACEC,YAAI;AADN,OADO,EAIP;AACEA,YAAI,QADN;AAEEY,uBAAe,IAFjB;AAGEX,mBAAW4B,SAASE,KAAT,KAAmB;AAHhC,OAJO,EASP;AACE/B,YAAI;AADN,OATO,EAYP;AACEA,YAAI,mBADN;AAEEC,mBAAW,CAAC,EACV6B,QACAA,KAAKT,OADL,IAEAS,KAAKT,OAAL,CAAaC,YAAb,KAA8B1B,eAAcoC,WAHlC,CAFd;AAOEC,kBAAU;AAPZ,OAZO,CADiD;AAuB1DtB,gBAAU,CACR;AACEX,YAAI,MADN;AAEEC,mBACE,CAAC,CAAC6B,KAAKT,OAAP,IAAkBS,KAAKT,OAAL,CAAaE,SAAb,KAA2B1B,YAAWqC,UAH5D;AAIEtB,uBAAe;AAJjB,OADQ,EAOR;AACEZ,YAAI,qBADN;AAEEY,uBAAe;AAFjB,OAPQ,CAvBgD;AAmC1DM,SAnC0D;AAAA,uBAmCpD;AACJ,8CAAW,KAAKnB,OAAhB,sBAA4B,KAAKY,QAAjC;AACD;;AArCyD;AAAA;AAAA,KAA/B;AAAA;;AAAhB;AAAA,GAAN;;AAwCA,IAAMzB;AAAa,WAAbA,WAAa,CAACiD,IAAD,EAAU;AAClC,QAAIC,cAAJ;AACA,QAAMC,MAAM,EAAZ;;AACA,YAAQF,IAAR;AACA,WAAK,UAAL;AACEC,gBAAQrD,gBAAR;AACA;;AACF,WAAK,MAAL;AACEqD,gBAAQpD,YAAR;AACA;;AACF,WAAK,UAAL;AACEoD,gBAAQnD,gBAAR;AACA;;AACF;AACE,cAAM,IAAIqD,KAAJ,CAAU,mBAAV,CAAN;AAXF;;AAcAF,UAAMlB,GAAN,GAAYqB,OAAZ,CAAoB;AAAA,aAAKF,IAAIG,IAAJ,CAASC,EAAEzC,EAAX,CAAL;AAAA,KAApB;AAEA,WAAOqC,GAAP;AACD;;AApBY;AAAA,GAAN;;AAuBA,IAAMlD,cAAa,IAAII,YAAJ,CAAiB;AACzCmD,QAAMC,MADmC;AAEzCC,eAAaD,MAF4B;AAGzCE,QAAMC,MAHmC;AAIzCC,QAAMJ,MAJmC;AAKzCK,OAAK;AACHD,UAAMJ,MADH;AAEHM,WAAO1D,aAAa2D,KAAb,CAAmBC;AAFvB,GALoC;AASzCC,OAAKT,MAToC;AAUzCU,aAAWP,MAV8B;AAWzCQ,UAAQ;AACNP,UAAMJ,MADA;AAENY,mBAAenD,OAAOoD,MAAP,CAAc7D,YAAd;AAFT,GAXiC;AAezC8D,SAAO;AAAEC,cAAU,IAAZ;AAAkBX,UAAMJ;AAAxB;AAfkC,CAAjB,CAAnB;;AAmBA,IAAMvD;AAAgB,WAAhBA,cAAgB,CAAC+C,IAAD,EAAU;AACrC,QAAMwB,SAAS,EAAf;;AAEA,QAAMC,MAAM1E,YAAWiD,IAAX,CAAZ;;AAEAyB,QAAIrB,OAAJ,CAAY,UAACvC,EAAD,EAAQ;AAClB2D,aAAO3D,EAAP,IAAa;AACX+C,cAAMc,KADK;AAEXH,kBAAU,IAFC;AAGXI,kBAAU;AAHC,OAAb;AAKAH,aAAU3D,EAAV,WAAoBb,WAApB;AACD,KAPD;AASA,WAAOwE,MAAP;AACD;;AAfY;AAAA,GAAN;;AAiBA,IAAMtE,YAAW;AACtBqD,QAAM,cADgB;AAEtBE,eAAa,cAFS;AAGtBC,QAAM,KAHgB;AAItBE,QAAM,iBAJgB;AAKtBC,OAAK,0BALiB;AAMtBI,OAAK,2BANiB;AAOtBC,aAAW,CAPW;AAQtBC,UAAQ3D,aAAYoE,KARE;AAStBN,SAAO;AATe,CAAjB;;AAYA,IAAMnE;AAAe,WAAfA,aAAe,CAAC0E,YAAD,EAAkB;AAC5C,QAAIC,kBAAkB,IAAtB;AACA,QAAIZ,YAAY,CAAhB;;AACA,QAAIW,gBAAgBA,aAAa1D,MAAb,GAAsB,CAA1C,EAA6C;AAC3C;AACA+C,kBAAYa,KAAKC,GAAL,gCAAYH,aAAaI,GAAb,CAAiB;AAAA,eAAK3B,EAAEY,SAAP;AAAA,OAAjB,CAAZ,UAAgD,CAAC,CAAjD,MAAsD,CAAlE;AACAY,wBAAkBZ,YAAY,EAAZ,SAAqBA,SAArB,QAAsCA,SAAxD;AACD;;AACD,WAAO;AAAEA,0BAAF;AAAaY;AAAb,KAAP;AACD;;AATY;AAAA,GAAN","file":"imports/core/api/files/files.js.map","sourcesContent":["import SimpleSchema from 'simpl-schema';\nimport { FILE_STATUS, PURCHASE_TYPE, USAGE_TYPE } from '../constants';\n\nexport const borrowerFiles = (b = {}) => ({\n  auction: [\n    {\n      id: 'identity',\n    },\n    {\n      id: 'residencyPermit',\n      condition: !b.isSwiss,\n    },\n    {\n      id: 'taxes',\n      // condition: true, //TODO: implement married couple logic\n    },\n    {\n      id: 'salaryCertificate',\n    },\n    {\n      id: 'bonus',\n      condition: !!b.bonus && Object.keys(b.bonus).length > 0,\n    },\n    {\n      id: 'otherIncome',\n      condition: b.otherIncome && !!(b.otherIncome.length > 0),\n    },\n    {\n      id: 'ownCompanyFinancialStatements',\n      condition: !!b.worksForOwnCompany,\n    },\n    {\n      id: 'divorceJudgment',\n      condition: !b.civilStatus === 'divorced',\n      noTooltips: true,\n    },\n    {\n      id: 'expenses',\n      condition: !!b.otherIncome && !!(b.otherIncome.length > 0),\n    },\n  ],\n  contract: [\n    {\n      id: 'nonPursuitExtract',\n      doubleTooltip: true,\n    },\n    {\n      id: 'lastSalaries',\n      noTooltips: true,\n    },\n    {\n      id: 'currentMortgages',\n      condition: !!b.realEstate && !!b.realEstate.length > 0,\n    },\n    {\n      id: 'bankAssetsChange',\n      condition: b.fortuneChange,\n    },\n    {\n      id: 'pensionFundYearlyStatement',\n      condition: b.insuranceSecondPillar > 0,\n      doubleTooltip: true,\n    },\n    {\n      id: 'retirementInsurancePlan',\n      condition: b.insuranceThirdPillar > 0, // TODO, separate from insurance and other below\n      doubleTooltip: true,\n    },\n    {\n      id: 'retirementPlanOther',\n      // condition: true, TODO\n      condition: false,\n      doubleTooltip: true,\n    },\n  ],\n  closing: [],\n  all() {\n    return [...this.auction, ...this.contract, ...this.closing];\n  },\n});\n\nexport const loanFiles = (r = {}) => ({\n  auction: [\n    // {\n    //   id: 'plans',\n    // },\n    // {\n    //   id: 'cubage',\n    //   doubleTooltip: true,\n    //   condition: r.propertyId && r.propertyId.style === 'villa',\n    // },\n    // {\n    //   id: 'pictures',\n    // },\n    // {\n    //   id: 'marketingBrochure',\n    //   condition: !!r.general && r.general.purchaseType === 'acquisition',\n    //   required: false,\n    // },\n  ],\n  contract: [\n    {\n      id: 'buyersContract',\n      tooltipSuffix:\n        !!r.general && r.general.purchaseType === 'refinancing' ? 'a' : 'b',\n    },\n    {\n      id: 'reimbursementStatement',\n      condition: !!r.general && r.general.purchaseType === 'refinancing',\n    },\n    {\n      id: 'rent',\n      condition: !!r.general && r.general.usageType === 'investment',\n      doubleTooltip: true,\n    },\n    {\n      id: 'coownershipAllocationAgreement',\n      condition: !!r.propertyId && !!r.propertyId.isCoproperty,\n      doubleTooltip: true,\n    },\n    {\n      id: 'coownershipAgreement',\n      condition: !!r.propertyId && !!r.propertyId.isCoproperty,\n      doubleTooltip: true,\n    },\n    {\n      id: 'fireAndWaterInsurance',\n      condition: !!(r.propertyId && r.propertyId.isNew),\n    },\n  ],\n  closing: [],\n  // closing: [\n  //   {\n  //     id: 'retirementWithdrawalStatement',\n  //     label: 'Attestation LPP - après retrait',\n  //     help1: 'Certificat émis sur votre demande par votre caisse de pension démontrant votre situation LPP après retrait',\n  //     help2: 'Vous pouvez obtenir ce document, sur demande, auprès de votre caisse de pension',\n  //     condition: !!r.logic && r.insuranceUsePreset === 'withdrawal',\n  //   },\n  // ],\n  other: [\n    { id: 'upload0' },\n    { id: 'upload1' },\n    { id: 'upload2' },\n    { id: 'upload3' },\n    { id: 'upload4' },\n  ],\n  admin: [{ id: 'contract' }, { id: 'signedContract' }],\n  all() {\n    return [\n      ...this.auction,\n      ...this.contract,\n      ...this.closing,\n      ...this.admin,\n      ...this.other,\n    ];\n  },\n});\n\nexport const propertyFiles = (property = {}, loan = {}) => ({\n  auction: [\n    {\n      id: 'plans',\n    },\n    {\n      id: 'cubage',\n      doubleTooltip: true,\n      condition: property.style === 'villa',\n    },\n    {\n      id: 'pictures',\n    },\n    {\n      id: 'marketingBrochure',\n      condition: !!(\n        loan &&\n        loan.general &&\n        loan.general.purchaseType === PURCHASE_TYPE.ACQUISITION\n      ),\n      required: false,\n    },\n  ],\n  contract: [\n    {\n      id: 'rent',\n      condition:\n        !!loan.general && loan.general.usageType === USAGE_TYPE.INVESTMENT,\n      doubleTooltip: true,\n    },\n    {\n      id: 'landRegisterExtract',\n      doubleTooltip: true,\n    },\n  ],\n  all() {\n    return [...this.auction, ...this.contract];\n  },\n});\n\nexport const getFileIDs = (list) => {\n  let files;\n  const ids = [];\n  switch (list) {\n  case 'borrower':\n    files = borrowerFiles();\n    break;\n  case 'loan':\n    files = loanFiles();\n    break;\n  case 'property':\n    files = propertyFiles();\n    break;\n  default:\n    throw new Error('invalid file list');\n  }\n\n  files.all().forEach(f => ids.push(f.id));\n\n  return ids;\n};\n\n// Schema used for every file\nexport const FileSchema = new SimpleSchema({\n  name: String,\n  initialName: String,\n  size: Number,\n  type: String,\n  url: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n  },\n  key: String,\n  fileCount: Number,\n  status: {\n    type: String,\n    allowedValues: Object.values(FILE_STATUS),\n  },\n  error: { optional: true, type: String },\n});\n\n// Generates a schema given a list name (loan, or borrowers)\nexport const getFileSchema = (list) => {\n  const schema = {};\n\n  const arr = getFileIDs(list);\n\n  arr.forEach((id) => {\n    schema[id] = {\n      type: Array,\n      optional: true,\n      maxCount: 100,\n    };\n    schema[`${id}.$`] = FileSchema;\n  });\n\n  return schema;\n};\n\nexport const fakeFile = {\n  name: 'fakeFile.pdf',\n  initialName: 'fakeFile.pdf',\n  size: 10000,\n  type: 'application/pdf',\n  url: 'https://www.fake-url.com',\n  key: 'asdf/fakeKey/fakeFile.pdf',\n  fileCount: 0,\n  status: FILE_STATUS.VALID,\n  error: '',\n};\n\nexport const getFileCount = (currentValue) => {\n  let fileCountString = '00';\n  let fileCount = 0;\n  if (currentValue && currentValue.length > 0) {\n    // If something goes wrong, minimum should be -1 + 1 = 0\n    fileCount = Math.max(...currentValue.map(f => f.fileCount), -1) + 1;\n    fileCountString = fileCount < 10 ? `0${fileCount}` : `${fileCount}`;\n  }\n  return { fileCount, fileCountString };\n};\n"]},"hash":"fcf53ee8342d9d12d3b063bbf43a2fd7fb6f7fd3"}
