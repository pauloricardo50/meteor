{"metadata":{"usedHelpers":["classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/accounts-base","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"../users","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Users"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"imports/core/api/users/UserService.js","filenameRelative":"imports/core/api/users/UserService.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"spec":false,"loose":false}],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"imports/core/api/users/UserService.js.map","sourceFileName":"imports/core/api/users/UserService.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"UserService"},"ignored":false,"code":"\"use strict\";\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _Accounts = void 0;\n\nmodule.watch(require(\"meteor/accounts-base\"), {\n  Accounts: function () {\n    function Accounts(v) {\n      _Accounts = v;\n    }\n\n    return Accounts;\n  }()\n}, 0);\n\nvar _Roles = void 0;\n\nmodule.watch(require(\"meteor/alanning:roles\"), {\n  Roles: function () {\n    function Roles(v) {\n      _Roles = v;\n    }\n\n    return Roles;\n  }()\n}, 1);\nvar Users = void 0;\nmodule.watch(require(\"../users\"), {\n  \"default\": function () {\n    function _default(v) {\n      Users = v;\n    }\n\n    return _default;\n  }()\n}, 2);\n\nvar UserService = function () {\n  function UserService() {\n    (0, _classCallCheck3.default)(this, UserService);\n  }\n\n  return UserService;\n}();\n\nUserService.createUser = function (_ref) {\n  var options = _ref.options,\n      role = _ref.role;\n\n  var newUserId = _Accounts.createUser(options, function (err) {\n    if (err) console.log(err);else {\n      _Roles.addUsersToRoles(newUserId, role);\n\n      return newUserId;\n    }\n    return null;\n  });\n};\n\nUserService.remove = function (_ref2) {\n  var userId = _ref2.userId;\n  Users.remove(userId);\n};\n\nUserService.update = function (_ref3) {\n  var userId = _ref3.userId,\n      user = _ref3.user;\n  Users.update(userId, {\n    $set: user\n  });\n};\n\nUserService.getAdmins = function () {\n  return Users.find({\n    roles: {\n      $in: ['admin']\n    }\n  }).fetch();\n};\n\nmodule.exportDefault(UserService);","map":{"version":3,"sources":["imports/core/api/users/UserService.js"],"names":["Accounts","module","watch","require","v","Roles","Users","UserService","createUser","options","role","newUserId","err","console","log","addUsersToRoles","remove","userId","update","user","$set","getAdmins","find","roles","$in","fetch","exportDefault"],"mappings":";;;;;;;;AAAA,IAAIA,kBAAJ;;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,EAA6C;AAACH,UAAD;AAAA,sBAAUI,CAAV,EAAY;AAACJ,kBAASI,CAAT;AAAW;;AAAxB;AAAA;AAAA,CAA7C,EAAuE,CAAvE;;AAA0E,IAAIC,eAAJ;;AAAUJ,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACE,OAAD;AAAA,mBAAOD,CAAP,EAAS;AAACC,eAAMD,CAAN;AAAQ;;AAAlB;AAAA;AAAA,CAA9C,EAAkE,CAAlE;AAAqE,IAAIE,cAAJ;AAAUL,OAAOC,KAAP,CAAaC,QAAQ,UAAR,CAAb,EAAiC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACE,cAAMF,CAAN;AAAQ;;AAApB;AAAA;AAAA,CAAjC,EAAuD,CAAvD;;IAI1KG,W;;;;;;;;AAAAA,W,CACGC,U,GAAa,gBAAuB;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACzC,MAAMC,YAAYX,UAASQ,UAAT,CAAoBC,OAApB,EAA6B,UAACG,GAAD,EAAS;AACtD,QAAIA,GAAJ,EAASC,QAAQC,GAAR,CAAYF,GAAZ,EAAT,KACK;AACHP,aAAMU,eAAN,CAAsBJ,SAAtB,EAAiCD,IAAjC;;AACA,aAAOC,SAAP;AACD;AACD,WAAO,IAAP;AACD,GAPiB,CAAlB;AAQD,C;;AAVGJ,W,CAYGS,M,GAAS,iBAAgB;AAAA,MAAbC,MAAa,SAAbA,MAAa;AAC9BX,QAAMU,MAAN,CAAaC,MAAb;AACD,C;;AAdGV,W,CAgBGW,M,GAAS,iBAAsB;AAAA,MAAnBD,MAAmB,SAAnBA,MAAmB;AAAA,MAAXE,IAAW,SAAXA,IAAW;AACpCb,QAAMY,MAAN,CAAaD,MAAb,EAAqB;AAAEG,UAAMD;AAAR,GAArB;AACD,C;;AAlBGZ,W,CAoBGc,S,GAAY;AAAA,SAAMf,MAAMgB,IAAN,CAAW;AAAEC,WAAO;AAAEC,WAAK,CAAC,OAAD;AAAP;AAAT,GAAX,EAA0CC,KAA1C,EAAN;AAAA,C;;AAxBrBxB,OAAOyB,aAAP,CA2BenB,WA3Bf","file":"imports/core/api/users/UserService.js.map","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\nimport { Roles } from 'meteor/alanning:roles';\nimport Users from '../users';\n\nclass UserService {\n  static createUser = ({ options, role }) => {\n    const newUserId = Accounts.createUser(options, (err) => {\n      if (err) console.log(err);\n      else {\n        Roles.addUsersToRoles(newUserId, role);\n        return newUserId;\n      }\n      return null;\n    });\n  };\n\n  static remove = ({ userId }) => {\n    Users.remove(userId);\n  };\n\n  static update = ({ userId, user }) => {\n    Users.update(userId, { $set: user });\n  };\n\n  static getAdmins = () => Users.find({ roles: { $in: ['admin'] } }).fetch();\n}\n\nexport default UserService;\n"]},"hash":"899eebcf8cc52147a9cfcbbc701ac593d03e672a"}
