{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar bind = function (fn, me) {\n  return function () {\n    return fn.apply(me, arguments);\n  };\n},\n    extend = function (child, parent) {\n  for (var key in meteorBabelHelpers.sanitizeForInObject(parent)) {\n    if (hasProp.call(parent, key)) child[key] = parent[key];\n  }\n\n  function ctor() {\n    this.constructor = child;\n  }\n\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  child.__super__ = parent.prototype;\n  return child;\n},\n    hasProp = {}.hasOwnProperty;\n\nif (Meteor.isClient) {\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      var aArgs, fBound, fNOP, fToBind;\n\n      if (typeof this !== \"function\") {\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n      }\n\n      aArgs = Array.prototype.slice.call(arguments, 1);\n      fToBind = this;\n\n      fNOP = function () {};\n\n      fBound = function () {\n        var func;\n        func = this instanceof fNOP && oThis ? this : oThis;\n        return fToBind.apply(func, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n      return fBound;\n    };\n  }\n\n  JobCollection = function (superClass) {\n    extend(JobCollection, superClass);\n\n    function JobCollection(root, options) {\n      if (root == null) {\n        root = 'queue';\n      }\n\n      if (options == null) {\n        options = {};\n      }\n\n      this._toLog = bind(this._toLog, this);\n\n      if (!(this instanceof JobCollection)) {\n        return new JobCollection(root, options);\n      }\n\n      JobCollection.__super__.constructor.call(this, root, options);\n\n      this.logConsole = false;\n      this.isSimulation = true;\n\n      if (options.connection == null) {\n        Meteor.methods(this._generateMethods());\n      } else {\n        options.connection.methods(this._generateMethods());\n      }\n    }\n\n    JobCollection.prototype._toLog = function (userId, method, message) {\n      if (this.logConsole) {\n        return console.log(new Date() + \", \" + userId + \", \" + method + \", \" + message + \"\\n\");\n      }\n    };\n\n    return JobCollection;\n  }(share.JobCollectionBase);\n}","sourceMap":{"version":3,"sources":["/packages/vsivsi_job-collection/src/client.coffee","/src/client.coffee"],"names":["bind","fn","me","apply","arguments","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","Meteor","isClient","Function","oThis","aArgs","fBound","fNOP","fToBind","TypeError","Array","slice","func","concat","JobCollection","superClass","root","options","_toLog","logConsole","isSimulation","connection","methods","_generateMethods","userId","method","message","console","log","Date","share","JobCollectionBase"],"mappings":"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","file":"packages/vsivsi:job-collection/src/client.coffee.map","sourcesContent":["############################################################################\n#     Copyright (C) 2014-2017 by Vaughn Iverson\n#     job-collection is free software released under the MIT/X11 license.\n#     See included LICENSE file for details.\n############################################################################\n\nif Meteor.isClient\n\n  # This is a polyfill for bind(), added to make phantomjs 1.9.7 work\n  unless Function.prototype.bind\n    Function.prototype.bind = (oThis) ->\n       if typeof this isnt \"function\"\n          # closest thing possible to the ECMAScript 5 internal IsCallable function\n          throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\")\n\n       aArgs = Array.prototype.slice.call arguments, 1\n       fToBind = this\n       fNOP = () ->\n       fBound = () ->\n          func = if (this instanceof fNOP and oThis) then this else oThis\n          return fToBind.apply(func, aArgs.concat(Array.prototype.slice.call(arguments)))\n\n       fNOP.prototype = this.prototype\n       fBound.prototype = new fNOP()\n       return fBound\n\n  ################################################################\n  ## job-collection client class\n\n  class JobCollection extends share.JobCollectionBase\n\n    constructor: (root = 'queue', options = {}) ->\n      unless @ instanceof JobCollection\n        return new JobCollection(root, options)\n\n      # Call super's constructor\n      super root, options\n\n      @logConsole = false\n      @isSimulation = true\n\n      unless options.connection?\n        Meteor.methods @_generateMethods()\n      else\n        options.connection.methods @_generateMethods()\n\n    _toLog: (userId, method, message) =>\n      if @logConsole\n        console.log \"#{new Date()}, #{userId}, #{method}, #{message}\\n\"\n","var               \n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nif (Meteor.isClient) {\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function(oThis) {\n      var aArgs, fBound, fNOP, fToBind;\n      if (typeof this !== \"function\") {\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n      }\n      aArgs = Array.prototype.slice.call(arguments, 1);\n      fToBind = this;\n      fNOP = function() {};\n      fBound = function() {\n        var func;\n        func = (this instanceof fNOP && oThis) ? this : oThis;\n        return fToBind.apply(func, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n      return fBound;\n    };\n  }\n  JobCollection = (function(superClass) {\n    extend(JobCollection, superClass);\n\n    function JobCollection(root, options) {\n      if (root == null) {\n        root = 'queue';\n      }\n      if (options == null) {\n        options = {};\n      }\n      this._toLog = bind(this._toLog, this);\n      if (!(this instanceof JobCollection)) {\n        return new JobCollection(root, options);\n      }\n      JobCollection.__super__.constructor.call(this, root, options);\n      this.logConsole = false;\n      this.isSimulation = true;\n      if (options.connection == null) {\n        Meteor.methods(this._generateMethods());\n      } else {\n        options.connection.methods(this._generateMethods());\n      }\n    }\n\n    JobCollection.prototype._toLog = function(userId, method, message) {\n      if (this.logConsole) {\n        return console.log((new Date()) + \", \" + userId + \", \" + method + \", \" + message + \"\\n\");\n      }\n    };\n\n    return JobCollection;\n\n  })(share.JobCollectionBase);\n}\n"]}}