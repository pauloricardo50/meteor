{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/vsivsi:job-collection/src/shared.coffee","filenameRelative":"packages/vsivsi:job-collection/src/shared.coffee","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/vsivsi:job-collection/src/shared.coffee.map","sourceFileName":"packages/vsivsi:job-collection/src/shared.coffee","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"shared"},"ignored":false,"code":"var JobCollectionBase,\n    _validId,\n    _validIntGTEOne,\n    _validIntGTEZero,\n    _validJobDoc,\n    _validLaterJSObj,\n    _validLog,\n    _validLogLevel,\n    _validNumGTEOne,\n    _validNumGTEZero,\n    _validNumGTZero,\n    _validProgress,\n    _validRetryBackoff,\n    _validStatus,\n    indexOf = [].indexOf || function (item) {\n  for (var i = 0, l = this.length; i < l; i++) {\n    if (i in this && this[i] === item) return i;\n  }\n\n  return -1;\n},\n    extend = function (child, parent) {\n  for (var key in meteorBabelHelpers.sanitizeForInObject(parent)) {\n    if (hasProp.call(parent, key)) child[key] = parent[key];\n  }\n\n  function ctor() {\n    this.constructor = child;\n  }\n\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  child.__super__ = parent.prototype;\n  return child;\n},\n    hasProp = {}.hasOwnProperty,\n    slice = [].slice;\n\n_validNumGTEZero = function (v) {\n  return Match.test(v, Number) && v >= 0.0;\n};\n\n_validNumGTZero = function (v) {\n  return Match.test(v, Number) && v > 0.0;\n};\n\n_validNumGTEOne = function (v) {\n  return Match.test(v, Number) && v >= 1.0;\n};\n\n_validIntGTEZero = function (v) {\n  return _validNumGTEZero(v) && Math.floor(v) === v;\n};\n\n_validIntGTEOne = function (v) {\n  return _validNumGTEOne(v) && Math.floor(v) === v;\n};\n\n_validStatus = function (v) {\n  return Match.test(v, String) && indexOf.call(Job.jobStatuses, v) >= 0;\n};\n\n_validLogLevel = function (v) {\n  return Match.test(v, String) && indexOf.call(Job.jobLogLevels, v) >= 0;\n};\n\n_validRetryBackoff = function (v) {\n  return Match.test(v, String) && indexOf.call(Job.jobRetryBackoffMethods, v) >= 0;\n};\n\n_validId = function (v) {\n  return Match.test(v, Match.OneOf(String, Mongo.Collection.ObjectID));\n};\n\n_validLog = function () {\n  return [{\n    time: Date,\n    runId: Match.OneOf(Match.Where(_validId), null),\n    level: Match.Where(_validLogLevel),\n    message: String,\n    data: Match.Optional(Object)\n  }];\n};\n\n_validProgress = function () {\n  return {\n    completed: Match.Where(_validNumGTEZero),\n    total: Match.Where(_validNumGTEZero),\n    percent: Match.Where(_validNumGTEZero)\n  };\n};\n\n_validLaterJSObj = function () {\n  return {\n    schedules: [Object],\n    exceptions: Match.Optional([Object])\n  };\n};\n\n_validJobDoc = function () {\n  return {\n    _id: Match.Optional(Match.OneOf(Match.Where(_validId), null)),\n    runId: Match.OneOf(Match.Where(_validId), null),\n    type: String,\n    status: Match.Where(_validStatus),\n    data: Object,\n    result: Match.Optional(Object),\n    failures: Match.Optional([Object]),\n    priority: Match.Integer,\n    depends: [Match.Where(_validId)],\n    resolved: [Match.Where(_validId)],\n    after: Date,\n    updated: Date,\n    workTimeout: Match.Optional(Match.Where(_validIntGTEOne)),\n    expiresAfter: Match.Optional(Date),\n    log: Match.Optional(_validLog()),\n    progress: _validProgress(),\n    retries: Match.Where(_validIntGTEZero),\n    retried: Match.Where(_validIntGTEZero),\n    repeatRetries: Match.Optional(Match.Where(_validIntGTEZero)),\n    retryUntil: Date,\n    retryWait: Match.Where(_validIntGTEZero),\n    retryBackoff: Match.Where(_validRetryBackoff),\n    repeats: Match.Where(_validIntGTEZero),\n    repeated: Match.Where(_validIntGTEZero),\n    repeatUntil: Date,\n    repeatWait: Match.OneOf(Match.Where(_validIntGTEZero), Match.Where(_validLaterJSObj)),\n    created: Date\n  };\n};\n\nJobCollectionBase = function (superClass) {\n  extend(JobCollectionBase, superClass);\n\n  function JobCollectionBase(root, options) {\n    var collectionName;\n    this.root = root != null ? root : 'queue';\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (!(this instanceof JobCollectionBase)) {\n      return new JobCollectionBase(this.root, options);\n    }\n\n    if (!(this instanceof Mongo.Collection)) {\n      throw new Meteor.Error('The global definition of Mongo.Collection has changed since the job-collection package was loaded. Please ensure that any packages that redefine Mongo.Collection are loaded before job-collection.');\n    }\n\n    if (Mongo.Collection !== Mongo.Collection.prototype.constructor) {\n      throw new Meteor.Error('The global definition of Mongo.Collection has been patched by another package, and the prototype constructor has been left in an inconsistent state. Please see this link for a workaround: https://github.com/vsivsi/meteor-file-sample-app/issues/2#issuecomment-120780592');\n    }\n\n    this.later = later;\n\n    if (options.noCollectionSuffix == null) {\n      options.noCollectionSuffix = false;\n    }\n\n    collectionName = this.root;\n\n    if (!options.noCollectionSuffix) {\n      collectionName += '.jobs';\n    }\n\n    delete options.noCollectionSuffix;\n    Job.setDDP(options.connection, this.root);\n\n    this._createLogEntry = function (message, runId, level, time, data) {\n      var l;\n\n      if (message == null) {\n        message = '';\n      }\n\n      if (runId == null) {\n        runId = null;\n      }\n\n      if (level == null) {\n        level = 'info';\n      }\n\n      if (time == null) {\n        time = new Date();\n      }\n\n      if (data == null) {\n        data = null;\n      }\n\n      l = {\n        time: time,\n        runId: runId,\n        message: message,\n        level: level\n      };\n      return l;\n    };\n\n    this._logMessage = {\n      'readied': function () {\n        return this._createLogEntry(\"Promoted to ready\");\n      }.bind(this),\n      'forced': function (id) {\n        return this._createLogEntry(\"Dependencies force resolved\", null, 'warning');\n      }.bind(this),\n      'rerun': function (id, runId) {\n        return this._createLogEntry(\"Rerunning job\", null, 'info', new Date(), {\n          previousJob: {\n            id: id,\n            runId: runId\n          }\n        });\n      }.bind(this),\n      'running': function (runId) {\n        return this._createLogEntry(\"Job Running\", runId);\n      }.bind(this),\n      'paused': function () {\n        return this._createLogEntry(\"Job Paused\");\n      }.bind(this),\n      'resumed': function () {\n        return this._createLogEntry(\"Job Resumed\");\n      }.bind(this),\n      'cancelled': function () {\n        return this._createLogEntry(\"Job Cancelled\", null, 'warning');\n      }.bind(this),\n      'restarted': function () {\n        return this._createLogEntry(\"Job Restarted\");\n      }.bind(this),\n      'resubmitted': function () {\n        return this._createLogEntry(\"Job Resubmitted\");\n      }.bind(this),\n      'submitted': function () {\n        return this._createLogEntry(\"Job Submitted\");\n      }.bind(this),\n      'completed': function (runId) {\n        return this._createLogEntry(\"Job Completed\", runId, 'success');\n      }.bind(this),\n      'resolved': function (id, runId) {\n        return this._createLogEntry(\"Dependency resolved\", null, 'info', new Date(), {\n          dependency: {\n            id: id,\n            runId: runId\n          }\n        });\n      }.bind(this),\n      'failed': function (runId, fatal, err) {\n        var level, msg, value;\n        value = err.value;\n        msg = \"Job Failed with\" + (fatal ? ' Fatal' : '') + \" Error\" + (value != null && typeof value === 'string' ? ': ' + value : '') + \".\";\n        level = fatal ? 'danger' : 'warning';\n        return this._createLogEntry(msg, runId, level);\n      }.bind(this)\n    };\n\n    JobCollectionBase.__super__.constructor.call(this, collectionName, options);\n  }\n\n  JobCollectionBase.prototype._validNumGTEZero = _validNumGTEZero;\n  JobCollectionBase.prototype._validNumGTZero = _validNumGTZero;\n  JobCollectionBase.prototype._validNumGTEOne = _validNumGTEOne;\n  JobCollectionBase.prototype._validIntGTEZero = _validIntGTEZero;\n  JobCollectionBase.prototype._validIntGTEOne = _validIntGTEOne;\n  JobCollectionBase.prototype._validStatus = _validStatus;\n  JobCollectionBase.prototype._validLogLevel = _validLogLevel;\n  JobCollectionBase.prototype._validRetryBackoff = _validRetryBackoff;\n  JobCollectionBase.prototype._validId = _validId;\n  JobCollectionBase.prototype._validLog = _validLog;\n  JobCollectionBase.prototype._validProgress = _validProgress;\n  JobCollectionBase.prototype._validJobDoc = _validJobDoc;\n  JobCollectionBase.prototype.jobLogLevels = Job.jobLogLevels;\n  JobCollectionBase.prototype.jobPriorities = Job.jobPriorities;\n  JobCollectionBase.prototype.jobStatuses = Job.jobStatuses;\n  JobCollectionBase.prototype.jobStatusCancellable = Job.jobStatusCancellable;\n  JobCollectionBase.prototype.jobStatusPausable = Job.jobStatusPausable;\n  JobCollectionBase.prototype.jobStatusRemovable = Job.jobStatusRemovable;\n  JobCollectionBase.prototype.jobStatusRestartable = Job.jobStatusRestartable;\n  JobCollectionBase.prototype.forever = Job.forever;\n  JobCollectionBase.prototype.foreverDate = Job.foreverDate;\n  JobCollectionBase.prototype.ddpMethods = Job.ddpMethods;\n  JobCollectionBase.prototype.ddpPermissionLevels = Job.ddpPermissionLevels;\n  JobCollectionBase.prototype.ddpMethodPermissions = Job.ddpMethodPermissions;\n\n  JobCollectionBase.prototype.processJobs = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Job.processJobs, [this.root].concat(slice.call(params)), function () {});\n  };\n\n  JobCollectionBase.prototype.getJob = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.getJob.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.getWork = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.getWork.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.getJobs = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.getJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.readyJobs = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.readyJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.cancelJobs = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.cancelJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.pauseJobs = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.pauseJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.resumeJobs = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.resumeJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.restartJobs = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.restartJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.removeJobs = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.removeJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.setDDP = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.setDDP.apply(Job, params);\n  };\n\n  JobCollectionBase.prototype.startJobServer = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.startJobServer.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.shutdownJobServer = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.shutdownJobServer.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.startJobs = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.startJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.stopJobs = function () {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.stopJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.jobDocPattern = _validJobDoc();\n\n  JobCollectionBase.prototype.allow = function () {\n    throw new Error(\"Server-only function jc.allow() invoked on client.\");\n  };\n\n  JobCollectionBase.prototype.deny = function () {\n    throw new Error(\"Server-only function jc.deny() invoked on client.\");\n  };\n\n  JobCollectionBase.prototype.promote = function () {\n    throw new Error(\"Server-only function jc.promote() invoked on client.\");\n  };\n\n  JobCollectionBase.prototype.setLogStream = function () {\n    throw new Error(\"Server-only function jc.setLogStream() invoked on client.\");\n  };\n\n  JobCollectionBase.prototype.logConsole = function () {\n    throw new Error(\"Client-only function jc.logConsole() invoked on server.\");\n  };\n\n  JobCollectionBase.prototype.makeJob = function () {\n    var dep;\n    dep = false;\n    return function () {\n      var params;\n      params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n\n      if (!dep) {\n        dep = true;\n        console.warn(\"WARNING: jc.makeJob() has been deprecated. Use new Job(jc, doc) instead.\");\n      }\n\n      return function (func, args, ctor) {\n        ctor.prototype = func.prototype;\n        var child = new ctor(),\n            result = func.apply(child, args);\n        return Object(result) === result ? result : child;\n      }(Job, [this.root].concat(slice.call(params)), function () {});\n    };\n  }();\n\n  JobCollectionBase.prototype.createJob = function () {\n    var dep;\n    dep = false;\n    return function () {\n      var params;\n      params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n\n      if (!dep) {\n        dep = true;\n        console.warn(\"WARNING: jc.createJob() has been deprecated. Use new Job(jc, type, data) instead.\");\n      }\n\n      return function (func, args, ctor) {\n        ctor.prototype = func.prototype;\n        var child = new ctor(),\n            result = func.apply(child, args);\n        return Object(result) === result ? result : child;\n      }(Job, [this.root].concat(slice.call(params)), function () {});\n    };\n  }();\n\n  JobCollectionBase.prototype._methodWrapper = function (method, func) {\n    var ref, toLog, unblockDDPMethods;\n    toLog = this._toLog;\n    unblockDDPMethods = (ref = this._unblockDDPMethods) != null ? ref : false;\n    return function () {\n      var params, ref1, retval, user;\n      params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      user = (ref1 = this.userId) != null ? ref1 : \"[UNAUTHENTICATED]\";\n      toLog(user, method, \"params: \" + JSON.stringify(params));\n\n      if (unblockDDPMethods) {\n        this.unblock();\n      }\n\n      retval = func.apply(null, params);\n      toLog(user, method, \"returned: \" + JSON.stringify(retval));\n      return retval;\n    };\n  };\n\n  JobCollectionBase.prototype._generateMethods = function () {\n    var baseMethodName, methodFunc, methodName, methodPrefix, methodsOut, ref;\n    methodsOut = {};\n    methodPrefix = '_DDPMethod_';\n    ref = this;\n\n    for (methodName in meteorBabelHelpers.sanitizeForInObject(ref)) {\n      methodFunc = ref[methodName];\n\n      if (!(methodName.slice(0, methodPrefix.length) === methodPrefix)) {\n        continue;\n      }\n\n      baseMethodName = methodName.slice(methodPrefix.length);\n      methodsOut[this.root + \"_\" + baseMethodName] = this._methodWrapper(baseMethodName, methodFunc.bind(this));\n    }\n\n    return methodsOut;\n  };\n\n  JobCollectionBase.prototype._idsOfDeps = function (ids, antecedents, dependents, jobStatuses) {\n    var antsArray, dependsIds, dependsQuery;\n    dependsQuery = [];\n    dependsIds = [];\n\n    if (dependents) {\n      dependsQuery.push({\n        depends: {\n          $elemMatch: {\n            $in: ids\n          }\n        }\n      });\n    }\n\n    if (antecedents) {\n      antsArray = [];\n      this.find({\n        _id: {\n          $in: ids\n        }\n      }, {\n        fields: {\n          depends: 1\n        },\n        transform: null\n      }).forEach(function (d) {\n        var i, k, len, ref, results;\n\n        if (indexOf.call(antsArray, i) < 0) {\n          ref = d.depends;\n          results = [];\n\n          for (k = 0, len = ref.length; k < len; k++) {\n            i = ref[k];\n            results.push(antsArray.push(i));\n          }\n\n          return results;\n        }\n      });\n\n      if (antsArray.length > 0) {\n        dependsQuery.push({\n          _id: {\n            $in: antsArray\n          }\n        });\n      }\n    }\n\n    if (dependsQuery.length > 0) {\n      this.find({\n        status: {\n          $in: jobStatuses\n        },\n        $or: dependsQuery\n      }, {\n        fields: {\n          _id: 1\n        },\n        transform: null\n      }).forEach(function (d) {\n        var ref;\n\n        if (ref = d._id, indexOf.call(dependsIds, ref) < 0) {\n          return dependsIds.push(d._id);\n        }\n      });\n    }\n\n    return dependsIds;\n  };\n\n  JobCollectionBase.prototype._rerun_job = function (doc, repeats, wait, repeatUntil) {\n    var id, jobId, logObj, runId, time;\n\n    if (repeats == null) {\n      repeats = doc.repeats - 1;\n    }\n\n    if (wait == null) {\n      wait = doc.repeatWait;\n    }\n\n    if (repeatUntil == null) {\n      repeatUntil = doc.repeatUntil;\n    }\n\n    id = doc._id;\n    runId = doc.runId;\n    time = new Date();\n    delete doc._id;\n    delete doc.result;\n    delete doc.failures;\n    delete doc.expiresAfter;\n    delete doc.workTimeout;\n    doc.runId = null;\n    doc.status = \"waiting\";\n    doc.repeatRetries = doc.repeatRetries != null ? doc.repeatRetries : doc.retries + doc.retried;\n    doc.retries = doc.repeatRetries;\n\n    if (doc.retries > this.forever) {\n      doc.retries = this.forever;\n    }\n\n    doc.retryUntil = repeatUntil;\n    doc.retried = 0;\n    doc.repeats = repeats;\n\n    if (doc.repeats > this.forever) {\n      doc.repeats = this.forever;\n    }\n\n    doc.repeatUntil = repeatUntil;\n    doc.repeated = doc.repeated + 1;\n    doc.updated = time;\n    doc.created = time;\n    doc.progress = {\n      completed: 0,\n      total: 1,\n      percent: 0\n    };\n\n    if (logObj = this._logMessage.rerun(id, runId)) {\n      doc.log = [logObj];\n    } else {\n      doc.log = [];\n    }\n\n    doc.after = new Date(time.valueOf() + wait);\n\n    if (jobId = this.insert(doc)) {\n      this._DDPMethod_jobReady(jobId);\n\n      return jobId;\n    } else {\n      console.warn(\"Job rerun/repeat failed to reschedule!\", id, runId);\n    }\n\n    return null;\n  };\n\n  JobCollectionBase.prototype._checkDeps = function (job, dryRun) {\n    var cancel, cancelled, depJob, deps, failed, foundIds, j, k, len, len1, log, m, mods, n, ref, ref1, removed, resolved;\n\n    if (dryRun == null) {\n      dryRun = true;\n    }\n\n    cancel = false;\n    resolved = [];\n    failed = [];\n    cancelled = [];\n    removed = [];\n    log = [];\n\n    if (job.depends.length > 0) {\n      deps = this.find({\n        _id: {\n          $in: job.depends\n        }\n      }, {\n        fields: {\n          _id: 1,\n          runId: 1,\n          status: 1\n        }\n      }).fetch();\n\n      if (deps.length !== job.depends.length) {\n        foundIds = deps.map(function (d) {\n          return d._id;\n        });\n        ref = job.depends;\n\n        for (k = 0, len = ref.length; k < len; k++) {\n          j = ref[k];\n\n          if (!!(indexOf.call(foundIds, j) >= 0)) {\n            continue;\n          }\n\n          if (!dryRun) {\n            this._DDPMethod_jobLog(job._id, null, \"Antecedent job \" + j + \" missing at save\");\n          }\n\n          removed.push(j);\n        }\n\n        cancel = true;\n      }\n\n      for (m = 0, len1 = deps.length; m < len1; m++) {\n        depJob = deps[m];\n\n        if (ref1 = depJob.status, indexOf.call(this.jobStatusCancellable, ref1) < 0) {\n          switch (depJob.status) {\n            case \"completed\":\n              resolved.push(depJob._id);\n              log.push(this._logMessage.resolved(depJob._id, depJob.runId));\n              break;\n\n            case \"failed\":\n              cancel = true;\n              failed.push(depJob._id);\n\n              if (!dryRun) {\n                this._DDPMethod_jobLog(job._id, null, \"Antecedent job failed before save\");\n              }\n\n              break;\n\n            case \"cancelled\":\n              cancel = true;\n              cancelled.push(depJob._id);\n\n              if (!dryRun) {\n                this._DDPMethod_jobLog(job._id, null, \"Antecedent job cancelled before save\");\n              }\n\n              break;\n\n            default:\n              throw new Meteor.Error(\"Unknown status in jobSave Dependency check\");\n          }\n        }\n      }\n\n      if (!(resolved.length === 0 || dryRun)) {\n        mods = {\n          $pull: {\n            depends: {\n              $in: resolved\n            }\n          },\n          $push: {\n            resolved: {\n              $each: resolved\n            },\n            log: {\n              $each: log\n            }\n          }\n        };\n        n = this.update({\n          _id: job._id,\n          status: 'waiting'\n        }, mods);\n\n        if (!n) {\n          console.warn(\"Update for job \" + job._id + \" during dependency check failed.\");\n        }\n      }\n\n      if (cancel && !dryRun) {\n        this._DDPMethod_jobCancel(job._id);\n\n        return false;\n      }\n    }\n\n    if (dryRun) {\n      if (cancel || resolved.length > 0) {\n        return {\n          jobId: job._id,\n          resolved: resolved,\n          failed: failed,\n          cancelled: cancelled,\n          removed: removed\n        };\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  };\n\n  JobCollectionBase.prototype._DDPMethod_startJobServer = function (options) {\n    check(options, Match.Optional({}));\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (!this.isSimulation) {\n      if (this.stopped && this.stopped !== true) {\n        Meteor.clearTimeout(this.stopped);\n      }\n\n      this.stopped = false;\n    }\n\n    return true;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_startJobs = function () {\n    var depFlag;\n    depFlag = false;\n    return function (options) {\n      if (!depFlag) {\n        depFlag = true;\n        console.warn(\"Deprecation Warning: jc.startJobs() has been renamed to jc.startJobServer()\");\n      }\n\n      return this._DDPMethod_startJobServer(options);\n    };\n  }();\n\n  JobCollectionBase.prototype._DDPMethod_shutdownJobServer = function (options) {\n    check(options, Match.Optional({\n      timeout: Match.Optional(Match.Where(_validIntGTEOne))\n    }));\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (options.timeout == null) {\n      options.timeout = 60 * 1000;\n    }\n\n    if (!this.isSimulation) {\n      if (this.stopped && this.stopped !== true) {\n        Meteor.clearTimeout(this.stopped);\n      }\n\n      this.stopped = Meteor.setTimeout(function (_this) {\n        return function () {\n          var cursor, failedJobs;\n          cursor = _this.find({\n            status: 'running'\n          }, {\n            transform: null\n          });\n          failedJobs = cursor.count();\n\n          if (failedJobs !== 0) {\n            console.warn(\"Failing \" + failedJobs + \" jobs on queue stop.\");\n          }\n\n          cursor.forEach(function (d) {\n            return _this._DDPMethod_jobFail(d._id, d.runId, \"Running at Job Server shutdown.\");\n          });\n\n          if (_this.logStream != null) {\n            _this.logStream.end();\n\n            return _this.logStream = null;\n          }\n        };\n      }(this), options.timeout);\n    }\n\n    return true;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_stopJobs = function () {\n    var depFlag;\n    depFlag = false;\n    return function (options) {\n      if (!depFlag) {\n        depFlag = true;\n        console.warn(\"Deprecation Warning: jc.stopJobs() has been renamed to jc.shutdownJobServer()\");\n      }\n\n      return this._DDPMethod_shutdownJobServer(options);\n    };\n  }();\n\n  JobCollectionBase.prototype._DDPMethod_getJob = function (ids, options) {\n    var d, docs, fields, single;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({\n      getLog: Match.Optional(Boolean),\n      getFailures: Match.Optional(Boolean)\n    }));\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (options.getLog == null) {\n      options.getLog = false;\n    }\n\n    if (options.getFailures == null) {\n      options.getFailures = false;\n    }\n\n    single = false;\n\n    if (_validId(ids)) {\n      ids = [ids];\n      single = true;\n    }\n\n    if (ids.length === 0) {\n      return null;\n    }\n\n    fields = {\n      _private: 0\n    };\n\n    if (!options.getLog) {\n      fields.log = 0;\n    }\n\n    if (!options.getFailures) {\n      fields.failures = 0;\n    }\n\n    docs = this.find({\n      _id: {\n        $in: ids\n      }\n    }, {\n      fields: fields,\n      transform: null\n    }).fetch();\n\n    if (docs != null ? docs.length : void 0) {\n      if (this.scrub != null) {\n        docs = function () {\n          var k, len, results;\n          results = [];\n\n          for (k = 0, len = docs.length; k < len; k++) {\n            d = docs[k];\n            results.push(this.scrub(d));\n          }\n\n          return results;\n        }.call(this);\n      }\n\n      check(docs, [_validJobDoc()]);\n\n      if (single) {\n        return docs[0];\n      } else {\n        return docs;\n      }\n    }\n\n    return null;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_getWork = function (type, options) {\n    var d, docs, foundDocs, ids, logObj, mods, num, runId, time;\n    check(type, Match.OneOf(String, [String]));\n    check(options, Match.Optional({\n      maxJobs: Match.Optional(Match.Where(_validIntGTEOne)),\n      workTimeout: Match.Optional(Match.Where(_validIntGTEOne))\n    }));\n\n    if (this.isSimulation) {\n      return;\n    }\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (options.maxJobs == null) {\n      options.maxJobs = 1;\n    }\n\n    if (this.stopped) {\n      return [];\n    }\n\n    if (typeof type === 'string') {\n      type = [type];\n    }\n\n    time = new Date();\n    docs = [];\n    runId = this._makeNewID();\n\n    while (docs.length < options.maxJobs) {\n      ids = this.find({\n        type: {\n          $in: type\n        },\n        status: 'ready',\n        runId: null\n      }, {\n        sort: {\n          priority: 1,\n          retryUntil: 1,\n          after: 1\n        },\n        limit: options.maxJobs - docs.length,\n        fields: {\n          _id: 1\n        },\n        transform: null\n      }).map(function (d) {\n        return d._id;\n      });\n\n      if (!((ids != null ? ids.length : void 0) > 0)) {\n        break;\n      }\n\n      mods = {\n        $set: {\n          status: 'running',\n          runId: runId,\n          updated: time\n        },\n        $inc: {\n          retries: -1,\n          retried: 1\n        }\n      };\n\n      if (logObj = this._logMessage.running(runId)) {\n        mods.$push = {\n          log: logObj\n        };\n      }\n\n      if (options.workTimeout != null) {\n        mods.$set.workTimeout = options.workTimeout;\n        mods.$set.expiresAfter = new Date(time.valueOf() + options.workTimeout);\n      } else {\n        if (mods.$unset == null) {\n          mods.$unset = {};\n        }\n\n        mods.$unset.workTimeout = \"\";\n        mods.$unset.expiresAfter = \"\";\n      }\n\n      num = this.update({\n        _id: {\n          $in: ids\n        },\n        status: 'ready',\n        runId: null\n      }, mods, {\n        multi: true\n      });\n\n      if (num > 0) {\n        foundDocs = this.find({\n          _id: {\n            $in: ids\n          },\n          runId: runId\n        }, {\n          fields: {\n            log: 0,\n            failures: 0,\n            _private: 0\n          },\n          transform: null\n        }).fetch();\n\n        if ((foundDocs != null ? foundDocs.length : void 0) > 0) {\n          if (this.scrub != null) {\n            foundDocs = function () {\n              var k, len, results;\n              results = [];\n\n              for (k = 0, len = foundDocs.length; k < len; k++) {\n                d = foundDocs[k];\n                results.push(this.scrub(d));\n              }\n\n              return results;\n            }.call(this);\n          }\n\n          check(docs, [_validJobDoc()]);\n          docs = docs.concat(foundDocs);\n        }\n      }\n    }\n\n    return docs;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobRemove = function (ids, options) {\n    var num;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({}));\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (_validId(ids)) {\n      ids = [ids];\n    }\n\n    if (ids.length === 0) {\n      return false;\n    }\n\n    num = this.remove({\n      _id: {\n        $in: ids\n      },\n      status: {\n        $in: this.jobStatusRemovable\n      }\n    });\n\n    if (num > 0) {\n      return true;\n    } else {\n      console.warn(\"jobRemove failed\");\n    }\n\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobPause = function (ids, options) {\n    var logObj, mods, num, time;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({}));\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (_validId(ids)) {\n      ids = [ids];\n    }\n\n    if (ids.length === 0) {\n      return false;\n    }\n\n    time = new Date();\n    mods = {\n      $set: {\n        status: \"paused\",\n        updated: time\n      }\n    };\n\n    if (logObj = this._logMessage.paused()) {\n      mods.$push = {\n        log: logObj\n      };\n    }\n\n    num = this.update({\n      _id: {\n        $in: ids\n      },\n      status: {\n        $in: this.jobStatusPausable\n      }\n    }, mods, {\n      multi: true\n    });\n\n    if (num > 0) {\n      return true;\n    } else {\n      console.warn(\"jobPause failed\");\n    }\n\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobResume = function (ids, options) {\n    var logObj, mods, num, time;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({}));\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (_validId(ids)) {\n      ids = [ids];\n    }\n\n    if (ids.length === 0) {\n      return false;\n    }\n\n    time = new Date();\n    mods = {\n      $set: {\n        status: \"waiting\",\n        updated: time\n      }\n    };\n\n    if (logObj = this._logMessage.resumed()) {\n      mods.$push = {\n        log: logObj\n      };\n    }\n\n    num = this.update({\n      _id: {\n        $in: ids\n      },\n      status: \"paused\",\n      updated: {\n        $ne: time\n      }\n    }, mods, {\n      multi: true\n    });\n\n    if (num > 0) {\n      this._DDPMethod_jobReady(ids);\n\n      return true;\n    } else {\n      console.warn(\"jobResume failed\");\n    }\n\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobReady = function (ids, options) {\n    var l, logObj, mods, now, num, query;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({\n      force: Match.Optional(Boolean),\n      time: Match.Optional(Date)\n    }));\n\n    if (this.isSimulation) {\n      return;\n    }\n\n    now = new Date();\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (options.force == null) {\n      options.force = false;\n    }\n\n    if (options.time == null) {\n      options.time = now;\n    }\n\n    if (_validId(ids)) {\n      ids = [ids];\n    }\n\n    query = {\n      status: \"waiting\",\n      after: {\n        $lte: options.time\n      }\n    };\n    mods = {\n      $set: {\n        status: \"ready\",\n        updated: now\n      }\n    };\n\n    if (ids.length > 0) {\n      query._id = {\n        $in: ids\n      };\n      mods.$set.after = now;\n    }\n\n    logObj = [];\n\n    if (options.force) {\n      mods.$set.depends = [];\n      l = this._logMessage.forced();\n\n      if (l) {\n        logObj.push(l);\n      }\n    } else {\n      query.depends = {\n        $size: 0\n      };\n    }\n\n    l = this._logMessage.readied();\n\n    if (l) {\n      logObj.push(l);\n    }\n\n    if (logObj.length > 0) {\n      mods.$push = {\n        log: {\n          $each: logObj\n        }\n      };\n    }\n\n    num = this.update(query, mods, {\n      multi: true\n    });\n\n    if (num > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobCancel = function (ids, options) {\n    var cancelIds, depsCancelled, logObj, mods, num, time;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({\n      antecedents: Match.Optional(Boolean),\n      dependents: Match.Optional(Boolean)\n    }));\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (options.antecedents == null) {\n      options.antecedents = false;\n    }\n\n    if (options.dependents == null) {\n      options.dependents = true;\n    }\n\n    if (_validId(ids)) {\n      ids = [ids];\n    }\n\n    if (ids.length === 0) {\n      return false;\n    }\n\n    time = new Date();\n    mods = {\n      $set: {\n        status: \"cancelled\",\n        runId: null,\n        progress: {\n          completed: 0,\n          total: 1,\n          percent: 0\n        },\n        updated: time\n      }\n    };\n\n    if (logObj = this._logMessage.cancelled()) {\n      mods.$push = {\n        log: logObj\n      };\n    }\n\n    num = this.update({\n      _id: {\n        $in: ids\n      },\n      status: {\n        $in: this.jobStatusCancellable\n      }\n    }, mods, {\n      multi: true\n    });\n    cancelIds = this._idsOfDeps(ids, options.antecedents, options.dependents, this.jobStatusCancellable);\n    depsCancelled = false;\n\n    if (cancelIds.length > 0) {\n      depsCancelled = this._DDPMethod_jobCancel(cancelIds, options);\n    }\n\n    if (num > 0 || depsCancelled) {\n      return true;\n    } else {\n      console.warn(\"jobCancel failed\");\n    }\n\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobRestart = function (ids, options) {\n    var depsRestarted, logObj, mods, num, query, restartIds, time;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({\n      retries: Match.Optional(Match.Where(_validIntGTEZero)),\n      until: Match.Optional(Date),\n      antecedents: Match.Optional(Boolean),\n      dependents: Match.Optional(Boolean)\n    }));\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (options.retries == null) {\n      options.retries = 1;\n    }\n\n    if (options.retries > this.forever) {\n      options.retries = this.forever;\n    }\n\n    if (options.dependents == null) {\n      options.dependents = false;\n    }\n\n    if (options.antecedents == null) {\n      options.antecedents = true;\n    }\n\n    if (_validId(ids)) {\n      ids = [ids];\n    }\n\n    if (ids.length === 0) {\n      return false;\n    }\n\n    time = new Date();\n    query = {\n      _id: {\n        $in: ids\n      },\n      status: {\n        $in: this.jobStatusRestartable\n      }\n    };\n    mods = {\n      $set: {\n        status: \"waiting\",\n        progress: {\n          completed: 0,\n          total: 1,\n          percent: 0\n        },\n        updated: time\n      },\n      $inc: {\n        retries: options.retries\n      }\n    };\n\n    if (logObj = this._logMessage.restarted()) {\n      mods.$push = {\n        log: logObj\n      };\n    }\n\n    if (options.until != null) {\n      mods.$set.retryUntil = options.until;\n    }\n\n    num = this.update(query, mods, {\n      multi: true\n    });\n    restartIds = this._idsOfDeps(ids, options.antecedents, options.dependents, this.jobStatusRestartable);\n    depsRestarted = false;\n\n    if (restartIds.length > 0) {\n      depsRestarted = this._DDPMethod_jobRestart(restartIds, options);\n    }\n\n    if (num > 0 || depsRestarted) {\n      this._DDPMethod_jobReady(ids);\n\n      return true;\n    } else {\n      console.warn(\"jobRestart failed\");\n    }\n\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobSave = function (doc, options) {\n    var logObj, mods, next, nextDate, num, ref, schedule, time;\n    check(doc, _validJobDoc());\n    check(options, Match.Optional({\n      cancelRepeats: Match.Optional(Boolean)\n    }));\n    check(doc.status, Match.Where(function (v) {\n      return Match.test(v, String) && (v === 'waiting' || v === 'paused');\n    }));\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (options.cancelRepeats == null) {\n      options.cancelRepeats = false;\n    }\n\n    if (doc.repeats > this.forever) {\n      doc.repeats = this.forever;\n    }\n\n    if (doc.retries > this.forever) {\n      doc.retries = this.forever;\n    }\n\n    time = new Date();\n\n    if (doc.after < time) {\n      doc.after = time;\n    }\n\n    if (doc.retryUntil < time) {\n      doc.retryUntil = time;\n    }\n\n    if (doc.repeatUntil < time) {\n      doc.repeatUntil = time;\n    }\n\n    if (this.later != null && typeof doc.repeatWait !== 'number') {\n      schedule = (ref = this.later) != null ? ref.schedule(doc.repeatWait) : void 0;\n\n      if (!(schedule && (next = schedule.next(2, schedule.prev(1, doc.after))[1]))) {\n        console.warn(\"No valid available later.js times in schedule after \" + doc.after);\n        return null;\n      }\n\n      nextDate = new Date(next);\n\n      if (!(nextDate <= doc.repeatUntil)) {\n        console.warn(\"No valid available later.js times in schedule before \" + doc.repeatUntil);\n        return null;\n      }\n\n      doc.after = nextDate;\n    } else if (this.later == null && doc.repeatWait !== 'number') {\n      console.warn(\"Later.js not loaded...\");\n      return null;\n    }\n\n    if (doc._id) {\n      mods = {\n        $set: {\n          status: 'waiting',\n          data: doc.data,\n          retries: doc.retries,\n          repeatRetries: doc.repeatRetries != null ? doc.repeatRetries : doc.retries + doc.retried,\n          retryUntil: doc.retryUntil,\n          retryWait: doc.retryWait,\n          retryBackoff: doc.retryBackoff,\n          repeats: doc.repeats,\n          repeatUntil: doc.repeatUntil,\n          repeatWait: doc.repeatWait,\n          depends: doc.depends,\n          priority: doc.priority,\n          after: doc.after,\n          updated: time\n        }\n      };\n\n      if (logObj = this._logMessage.resubmitted()) {\n        mods.$push = {\n          log: logObj\n        };\n      }\n\n      num = this.update({\n        _id: doc._id,\n        status: 'paused',\n        runId: null\n      }, mods);\n\n      if (num && this._checkDeps(doc, false)) {\n        this._DDPMethod_jobReady(doc._id);\n\n        return doc._id;\n      } else {\n        return null;\n      }\n    } else {\n      if (doc.repeats === this.forever && options.cancelRepeats) {\n        this.find({\n          type: doc.type,\n          status: {\n            $in: this.jobStatusCancellable\n          }\n        }, {\n          transform: null\n        }).forEach(function (_this) {\n          return function (d) {\n            return _this._DDPMethod_jobCancel(d._id, {});\n          };\n        }(this));\n      }\n\n      doc.created = time;\n      doc.log.push(this._logMessage.submitted());\n      doc._id = this.insert(doc);\n\n      if (doc._id && this._checkDeps(doc, false)) {\n        this._DDPMethod_jobReady(doc._id);\n\n        return doc._id;\n      } else {\n        return null;\n      }\n    }\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobProgress = function (id, runId, completed, total, options) {\n    var job, mods, num, progress, time;\n    check(id, Match.Where(_validId));\n    check(runId, Match.Where(_validId));\n    check(completed, Match.Where(_validNumGTEZero));\n    check(total, Match.Where(_validNumGTZero));\n    check(options, Match.Optional({}));\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (this.stopped) {\n      return null;\n    }\n\n    progress = {\n      completed: completed,\n      total: total,\n      percent: 100 * completed / total\n    };\n    check(progress, Match.Where(function (v) {\n      var ref;\n      return v.total >= v.completed && 0 <= (ref = v.percent) && ref <= 100;\n    }));\n    time = new Date();\n    job = this.findOne({\n      _id: id\n    }, {\n      fields: {\n        workTimeout: 1\n      }\n    });\n    mods = {\n      $set: {\n        progress: progress,\n        updated: time\n      }\n    };\n\n    if ((job != null ? job.workTimeout : void 0) != null) {\n      mods.$set.expiresAfter = new Date(time.valueOf() + job.workTimeout);\n    }\n\n    num = this.update({\n      _id: id,\n      runId: runId,\n      status: \"running\"\n    }, mods);\n\n    if (num === 1) {\n      return true;\n    } else {\n      console.warn(\"jobProgress failed\");\n    }\n\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobLog = function (id, runId, message, options) {\n    var job, logObj, mods, num, ref, time;\n    check(id, Match.Where(_validId));\n    check(runId, Match.OneOf(Match.Where(_validId), null));\n    check(message, String);\n    check(options, Match.Optional({\n      level: Match.Optional(Match.Where(_validLogLevel)),\n      data: Match.Optional(Object)\n    }));\n\n    if (options == null) {\n      options = {};\n    }\n\n    time = new Date();\n    logObj = {\n      time: time,\n      runId: runId,\n      level: (ref = options.level) != null ? ref : 'info',\n      message: message\n    };\n\n    if (options.data != null) {\n      logObj.data = options.data;\n    }\n\n    job = this.findOne({\n      _id: id\n    }, {\n      fields: {\n        status: 1,\n        workTimeout: 1\n      }\n    });\n    mods = {\n      $push: {\n        log: logObj\n      },\n      $set: {\n        updated: time\n      }\n    };\n\n    if ((job != null ? job.workTimeout : void 0) != null && job.status === 'running') {\n      mods.$set.expiresAfter = new Date(time.valueOf() + job.workTimeout);\n    }\n\n    num = this.update({\n      _id: id\n    }, mods);\n\n    if (num === 1) {\n      return true;\n    } else {\n      console.warn(\"jobLog failed\");\n    }\n\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobRerun = function (id, options) {\n    var doc;\n    check(id, Match.Where(_validId));\n    check(options, Match.Optional({\n      repeats: Match.Optional(Match.Where(_validIntGTEZero)),\n      until: Match.Optional(Date),\n      wait: Match.OneOf(Match.Where(_validIntGTEZero), Match.Where(_validLaterJSObj))\n    }));\n    doc = this.findOne({\n      _id: id,\n      status: \"completed\"\n    }, {\n      fields: {\n        result: 0,\n        failures: 0,\n        log: 0,\n        progress: 0,\n        updated: 0,\n        after: 0,\n        status: 0\n      },\n      transform: null\n    });\n\n    if (doc != null) {\n      if (options == null) {\n        options = {};\n      }\n\n      if (options.repeats == null) {\n        options.repeats = 0;\n      }\n\n      if (options.repeats > this.forever) {\n        options.repeats = this.forever;\n      }\n\n      if (options.until == null) {\n        options.until = doc.repeatUntil;\n      }\n\n      if (options.wait == null) {\n        options.wait = 0;\n      }\n\n      return this._rerun_job(doc, options.repeats, options.wait, options.until);\n    }\n\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobDone = function (id, runId, result, options) {\n    var after, d, doc, ids, jobId, logObj, mods, n, next, num, ref, time, wait;\n    check(id, Match.Where(_validId));\n    check(runId, Match.Where(_validId));\n    check(result, Object);\n    check(options, Match.Optional({\n      repeatId: Match.Optional(Boolean),\n      delayDeps: Match.Optional(Match.Where(_validIntGTEZero))\n    }));\n\n    if (options == null) {\n      options = {\n        repeatId: false\n      };\n    }\n\n    time = new Date();\n    doc = this.findOne({\n      _id: id,\n      runId: runId,\n      status: \"running\"\n    }, {\n      fields: {\n        log: 0,\n        failures: 0,\n        updated: 0,\n        after: 0,\n        status: 0\n      },\n      transform: null\n    });\n\n    if (doc == null) {\n      if (!this.isSimulation) {\n        console.warn(\"Running job not found\", id, runId);\n      }\n\n      return false;\n    }\n\n    mods = {\n      $set: {\n        status: \"completed\",\n        result: result,\n        progress: {\n          completed: doc.progress.total || 1,\n          total: doc.progress.total || 1,\n          percent: 100\n        },\n        updated: time\n      }\n    };\n\n    if (logObj = this._logMessage.completed(runId)) {\n      mods.$push = {\n        log: logObj\n      };\n    }\n\n    num = this.update({\n      _id: id,\n      runId: runId,\n      status: \"running\"\n    }, mods);\n\n    if (num === 1) {\n      if (doc.repeats > 0) {\n        if (typeof doc.repeatWait === 'number') {\n          if (doc.repeatUntil - doc.repeatWait >= time) {\n            jobId = this._rerun_job(doc);\n          }\n        } else {\n          next = (ref = this.later) != null ? ref.schedule(doc.repeatWait).next(2) : void 0;\n\n          if (next && next.length > 0) {\n            d = new Date(next[0]);\n\n            if (d - time > 500 || next.length > 1) {\n              if (d - time <= 500) {\n                d = new Date(next[1]);\n              }\n\n              wait = d - time;\n\n              if (doc.repeatUntil - wait >= time) {\n                jobId = this._rerun_job(doc, doc.repeats - 1, wait);\n              }\n            }\n          }\n        }\n      }\n\n      ids = this.find({\n        depends: {\n          $all: [id]\n        }\n      }, {\n        transform: null,\n        fields: {\n          _id: 1\n        }\n      }).fetch().map(function (_this) {\n        return function (d) {\n          return d._id;\n        };\n      }(this));\n\n      if (ids.length > 0) {\n        mods = {\n          $pull: {\n            depends: id\n          },\n          $push: {\n            resolved: id\n          }\n        };\n\n        if (options.delayDeps != null) {\n          after = new Date(time.valueOf() + options.delayDeps);\n          mods.$max = {\n            after: after\n          };\n        }\n\n        if (logObj = this._logMessage.resolved(id, runId)) {\n          mods.$push.log = logObj;\n        }\n\n        n = this.update({\n          _id: {\n            $in: ids\n          }\n        }, mods, {\n          multi: true\n        });\n\n        if (n !== ids.length) {\n          console.warn(\"Not all dependent jobs were resolved \" + ids.length + \" > \" + n);\n        }\n\n        this._DDPMethod_jobReady(ids);\n      }\n\n      if (options.repeatId && jobId != null) {\n        return jobId;\n      } else {\n        return true;\n      }\n    } else {\n      console.warn(\"jobDone failed\");\n    }\n\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobFail = function (id, runId, err, options) {\n    var after, doc, logObj, mods, newStatus, num, time;\n    check(id, Match.Where(_validId));\n    check(runId, Match.Where(_validId));\n    check(err, Object);\n    check(options, Match.Optional({\n      fatal: Match.Optional(Boolean)\n    }));\n\n    if (options == null) {\n      options = {};\n    }\n\n    if (options.fatal == null) {\n      options.fatal = false;\n    }\n\n    time = new Date();\n    doc = this.findOne({\n      _id: id,\n      runId: runId,\n      status: \"running\"\n    }, {\n      fields: {\n        log: 0,\n        failures: 0,\n        progress: 0,\n        updated: 0,\n        after: 0,\n        runId: 0,\n        status: 0\n      },\n      transform: null\n    });\n\n    if (doc == null) {\n      if (!this.isSimulation) {\n        console.warn(\"Running job not found\", id, runId);\n      }\n\n      return false;\n    }\n\n    after = function () {\n      switch (doc.retryBackoff) {\n        case 'exponential':\n          return new Date(time.valueOf() + doc.retryWait * Math.pow(2, doc.retried - 1));\n\n        default:\n          return new Date(time.valueOf() + doc.retryWait);\n      }\n    }();\n\n    newStatus = !options.fatal && doc.retries > 0 && doc.retryUntil >= after ? \"waiting\" : \"failed\";\n    err.runId = runId;\n    mods = {\n      $set: {\n        status: newStatus,\n        runId: null,\n        after: after,\n        updated: time\n      },\n      $push: {\n        failures: err\n      }\n    };\n\n    if (logObj = this._logMessage.failed(runId, newStatus === 'failed', err)) {\n      mods.$push.log = logObj;\n    }\n\n    num = this.update({\n      _id: id,\n      runId: runId,\n      status: \"running\"\n    }, mods);\n\n    if (newStatus === \"failed\" && num === 1) {\n      this.find({\n        depends: {\n          $all: [id]\n        }\n      }, {\n        transform: null\n      }).forEach(function (_this) {\n        return function (d) {\n          return _this._DDPMethod_jobCancel(d._id);\n        };\n      }(this));\n    }\n\n    if (num === 1) {\n      return true;\n    } else {\n      console.warn(\"jobFail failed\");\n    }\n\n    return false;\n  };\n\n  return JobCollectionBase;\n}(Mongo.Collection);\n\nshare.JobCollectionBase = JobCollectionBase;","map":{"version":3,"sources":["packages/vsivsi:job-collection/src/shared.coffee"],"names":["JobCollectionBase","_validId","_validIntGTEOne","_validIntGTEZero","_validJobDoc","_validLaterJSObj","_validLog","_validLogLevel","_validNumGTEOne","_validNumGTEZero","_validNumGTZero","_validProgress","_validRetryBackoff","_validStatus","indexOf","item","i","l","length","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","slice","v","Match","test","Number","Math","floor","String","Job","jobStatuses","jobLogLevels","jobRetryBackoffMethods","OneOf","Mongo","Collection","ObjectID","time","Date","runId","Where","level","message","data","Optional","Object","completed","total","percent","schedules","exceptions","_id","type","status","result","failures","priority","Integer","depends","resolved","after","updated","workTimeout","expiresAfter","log","progress","retries","retried","repeatRetries","retryUntil","retryWait","retryBackoff","repeats","repeated","repeatUntil","repeatWait","created","superClass","root","options","collectionName","Meteor","Error","later","noCollectionSuffix","setDDP","connection","_createLogEntry","_logMessage","bind","id","previousJob","dependency","fatal","err","msg","value","jobPriorities","jobStatusCancellable","jobStatusPausable","jobStatusRemovable","jobStatusRestartable","forever","foreverDate","ddpMethods","ddpPermissionLevels","ddpMethodPermissions","processJobs","params","arguments","func","args","apply","concat","getJob","getWork","getJobs","readyJobs","cancelJobs","pauseJobs","resumeJobs","restartJobs","removeJobs","startJobServer","shutdownJobServer","startJobs","stopJobs","jobDocPattern","allow","deny","promote","setLogStream","logConsole","makeJob","dep","console","warn","createJob","_methodWrapper","method","ref","toLog","unblockDDPMethods","_toLog","_unblockDDPMethods","ref1","retval","user","userId","JSON","stringify","unblock","_generateMethods","baseMethodName","methodFunc","methodName","methodPrefix","methodsOut","_idsOfDeps","ids","antecedents","dependents","antsArray","dependsIds","dependsQuery","push","$elemMatch","$in","find","fields","transform","forEach","d","k","len","results","$or","_rerun_job","doc","wait","jobId","logObj","rerun","valueOf","insert","_DDPMethod_jobReady","_checkDeps","job","dryRun","cancel","cancelled","depJob","deps","failed","foundIds","j","len1","m","mods","n","removed","fetch","map","_DDPMethod_jobLog","$pull","$push","$each","update","_DDPMethod_jobCancel","_DDPMethod_startJobServer","check","isSimulation","stopped","clearTimeout","_DDPMethod_startJobs","depFlag","_DDPMethod_shutdownJobServer","timeout","setTimeout","_this","cursor","failedJobs","count","_DDPMethod_jobFail","logStream","end","_DDPMethod_stopJobs","_DDPMethod_getJob","docs","single","getLog","Boolean","getFailures","_private","scrub","_DDPMethod_getWork","foundDocs","num","maxJobs","_makeNewID","sort","limit","$set","$inc","running","$unset","multi","_DDPMethod_jobRemove","remove","_DDPMethod_jobPause","paused","_DDPMethod_jobResume","resumed","$ne","now","query","force","$lte","forced","$size","readied","cancelIds","depsCancelled","_DDPMethod_jobRestart","depsRestarted","restartIds","until","restarted","_DDPMethod_jobSave","next","nextDate","schedule","cancelRepeats","prev","resubmitted","submitted","_DDPMethod_jobProgress","findOne","_DDPMethod_jobRerun","_DDPMethod_jobDone","repeatId","delayDeps","$all","$max","newStatus","pow","share"],"mappings":"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","file":"packages/vsivsi:job-collection/src/shared.coffee.map","sourcesContent":["var JobCollectionBase, _validId, _validIntGTEOne, _validIntGTEZero, _validJobDoc, _validLaterJSObj, _validLog, _validLogLevel, _validNumGTEOne, _validNumGTEZero, _validNumGTZero, _validProgress, _validRetryBackoff, _validStatus,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty,\n  slice = [].slice;\n\n_validNumGTEZero = function(v) {\n  return Match.test(v, Number) && v >= 0.0;\n};\n\n_validNumGTZero = function(v) {\n  return Match.test(v, Number) && v > 0.0;\n};\n\n_validNumGTEOne = function(v) {\n  return Match.test(v, Number) && v >= 1.0;\n};\n\n_validIntGTEZero = function(v) {\n  return _validNumGTEZero(v) && Math.floor(v) === v;\n};\n\n_validIntGTEOne = function(v) {\n  return _validNumGTEOne(v) && Math.floor(v) === v;\n};\n\n_validStatus = function(v) {\n  return Match.test(v, String) && indexOf.call(Job.jobStatuses, v) >= 0;\n};\n\n_validLogLevel = function(v) {\n  return Match.test(v, String) && indexOf.call(Job.jobLogLevels, v) >= 0;\n};\n\n_validRetryBackoff = function(v) {\n  return Match.test(v, String) && indexOf.call(Job.jobRetryBackoffMethods, v) >= 0;\n};\n\n_validId = function(v) {\n  return Match.test(v, Match.OneOf(String, Mongo.Collection.ObjectID));\n};\n\n_validLog = function() {\n  return [\n    {\n      time: Date,\n      runId: Match.OneOf(Match.Where(_validId), null),\n      level: Match.Where(_validLogLevel),\n      message: String,\n      data: Match.Optional(Object)\n    }\n  ];\n};\n\n_validProgress = function() {\n  return {\n    completed: Match.Where(_validNumGTEZero),\n    total: Match.Where(_validNumGTEZero),\n    percent: Match.Where(_validNumGTEZero)\n  };\n};\n\n_validLaterJSObj = function() {\n  return {\n    schedules: [Object],\n    exceptions: Match.Optional([Object])\n  };\n};\n\n_validJobDoc = function() {\n  return {\n    _id: Match.Optional(Match.OneOf(Match.Where(_validId), null)),\n    runId: Match.OneOf(Match.Where(_validId), null),\n    type: String,\n    status: Match.Where(_validStatus),\n    data: Object,\n    result: Match.Optional(Object),\n    failures: Match.Optional([Object]),\n    priority: Match.Integer,\n    depends: [Match.Where(_validId)],\n    resolved: [Match.Where(_validId)],\n    after: Date,\n    updated: Date,\n    workTimeout: Match.Optional(Match.Where(_validIntGTEOne)),\n    expiresAfter: Match.Optional(Date),\n    log: Match.Optional(_validLog()),\n    progress: _validProgress(),\n    retries: Match.Where(_validIntGTEZero),\n    retried: Match.Where(_validIntGTEZero),\n    repeatRetries: Match.Optional(Match.Where(_validIntGTEZero)),\n    retryUntil: Date,\n    retryWait: Match.Where(_validIntGTEZero),\n    retryBackoff: Match.Where(_validRetryBackoff),\n    repeats: Match.Where(_validIntGTEZero),\n    repeated: Match.Where(_validIntGTEZero),\n    repeatUntil: Date,\n    repeatWait: Match.OneOf(Match.Where(_validIntGTEZero), Match.Where(_validLaterJSObj)),\n    created: Date\n  };\n};\n\nJobCollectionBase = (function(superClass) {\n  extend(JobCollectionBase, superClass);\n\n  function JobCollectionBase(root, options) {\n    var collectionName;\n    this.root = root != null ? root : 'queue';\n    if (options == null) {\n      options = {};\n    }\n    if (!(this instanceof JobCollectionBase)) {\n      return new JobCollectionBase(this.root, options);\n    }\n    if (!(this instanceof Mongo.Collection)) {\n      throw new Meteor.Error('The global definition of Mongo.Collection has changed since the job-collection package was loaded. Please ensure that any packages that redefine Mongo.Collection are loaded before job-collection.');\n    }\n    if (Mongo.Collection !== Mongo.Collection.prototype.constructor) {\n      throw new Meteor.Error('The global definition of Mongo.Collection has been patched by another package, and the prototype constructor has been left in an inconsistent state. Please see this link for a workaround: https://github.com/vsivsi/meteor-file-sample-app/issues/2#issuecomment-120780592');\n    }\n    this.later = later;\n    if (options.noCollectionSuffix == null) {\n      options.noCollectionSuffix = false;\n    }\n    collectionName = this.root;\n    if (!options.noCollectionSuffix) {\n      collectionName += '.jobs';\n    }\n    delete options.noCollectionSuffix;\n    Job.setDDP(options.connection, this.root);\n    this._createLogEntry = function(message, runId, level, time, data) {\n      var l;\n      if (message == null) {\n        message = '';\n      }\n      if (runId == null) {\n        runId = null;\n      }\n      if (level == null) {\n        level = 'info';\n      }\n      if (time == null) {\n        time = new Date();\n      }\n      if (data == null) {\n        data = null;\n      }\n      l = {\n        time: time,\n        runId: runId,\n        message: message,\n        level: level\n      };\n      return l;\n    };\n    this._logMessage = {\n      'readied': (function() {\n        return this._createLogEntry(\"Promoted to ready\");\n      }).bind(this),\n      'forced': (function(id) {\n        return this._createLogEntry(\"Dependencies force resolved\", null, 'warning');\n      }).bind(this),\n      'rerun': (function(id, runId) {\n        return this._createLogEntry(\"Rerunning job\", null, 'info', new Date(), {\n          previousJob: {\n            id: id,\n            runId: runId\n          }\n        });\n      }).bind(this),\n      'running': (function(runId) {\n        return this._createLogEntry(\"Job Running\", runId);\n      }).bind(this),\n      'paused': (function() {\n        return this._createLogEntry(\"Job Paused\");\n      }).bind(this),\n      'resumed': (function() {\n        return this._createLogEntry(\"Job Resumed\");\n      }).bind(this),\n      'cancelled': (function() {\n        return this._createLogEntry(\"Job Cancelled\", null, 'warning');\n      }).bind(this),\n      'restarted': (function() {\n        return this._createLogEntry(\"Job Restarted\");\n      }).bind(this),\n      'resubmitted': (function() {\n        return this._createLogEntry(\"Job Resubmitted\");\n      }).bind(this),\n      'submitted': (function() {\n        return this._createLogEntry(\"Job Submitted\");\n      }).bind(this),\n      'completed': (function(runId) {\n        return this._createLogEntry(\"Job Completed\", runId, 'success');\n      }).bind(this),\n      'resolved': (function(id, runId) {\n        return this._createLogEntry(\"Dependency resolved\", null, 'info', new Date(), {\n          dependency: {\n            id: id,\n            runId: runId\n          }\n        });\n      }).bind(this),\n      'failed': (function(runId, fatal, err) {\n        var level, msg, value;\n        value = err.value;\n        msg = \"Job Failed with\" + (fatal ? ' Fatal' : '') + \" Error\" + ((value != null) && typeof value === 'string' ? ': ' + value : '') + \".\";\n        level = fatal ? 'danger' : 'warning';\n        return this._createLogEntry(msg, runId, level);\n      }).bind(this)\n    };\n    JobCollectionBase.__super__.constructor.call(this, collectionName, options);\n  }\n\n  JobCollectionBase.prototype._validNumGTEZero = _validNumGTEZero;\n\n  JobCollectionBase.prototype._validNumGTZero = _validNumGTZero;\n\n  JobCollectionBase.prototype._validNumGTEOne = _validNumGTEOne;\n\n  JobCollectionBase.prototype._validIntGTEZero = _validIntGTEZero;\n\n  JobCollectionBase.prototype._validIntGTEOne = _validIntGTEOne;\n\n  JobCollectionBase.prototype._validStatus = _validStatus;\n\n  JobCollectionBase.prototype._validLogLevel = _validLogLevel;\n\n  JobCollectionBase.prototype._validRetryBackoff = _validRetryBackoff;\n\n  JobCollectionBase.prototype._validId = _validId;\n\n  JobCollectionBase.prototype._validLog = _validLog;\n\n  JobCollectionBase.prototype._validProgress = _validProgress;\n\n  JobCollectionBase.prototype._validJobDoc = _validJobDoc;\n\n  JobCollectionBase.prototype.jobLogLevels = Job.jobLogLevels;\n\n  JobCollectionBase.prototype.jobPriorities = Job.jobPriorities;\n\n  JobCollectionBase.prototype.jobStatuses = Job.jobStatuses;\n\n  JobCollectionBase.prototype.jobStatusCancellable = Job.jobStatusCancellable;\n\n  JobCollectionBase.prototype.jobStatusPausable = Job.jobStatusPausable;\n\n  JobCollectionBase.prototype.jobStatusRemovable = Job.jobStatusRemovable;\n\n  JobCollectionBase.prototype.jobStatusRestartable = Job.jobStatusRestartable;\n\n  JobCollectionBase.prototype.forever = Job.forever;\n\n  JobCollectionBase.prototype.foreverDate = Job.foreverDate;\n\n  JobCollectionBase.prototype.ddpMethods = Job.ddpMethods;\n\n  JobCollectionBase.prototype.ddpPermissionLevels = Job.ddpPermissionLevels;\n\n  JobCollectionBase.prototype.ddpMethodPermissions = Job.ddpMethodPermissions;\n\n  JobCollectionBase.prototype.processJobs = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Job.processJobs, [this.root].concat(slice.call(params)), function(){});\n  };\n\n  JobCollectionBase.prototype.getJob = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.getJob.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.getWork = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.getWork.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.getJobs = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.getJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.readyJobs = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.readyJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.cancelJobs = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.cancelJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.pauseJobs = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.pauseJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.resumeJobs = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.resumeJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.restartJobs = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.restartJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.removeJobs = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.removeJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.setDDP = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.setDDP.apply(Job, params);\n  };\n\n  JobCollectionBase.prototype.startJobServer = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.startJobServer.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.shutdownJobServer = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.shutdownJobServer.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.startJobs = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.startJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.stopJobs = function() {\n    var params;\n    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return Job.stopJobs.apply(Job, [this.root].concat(slice.call(params)));\n  };\n\n  JobCollectionBase.prototype.jobDocPattern = _validJobDoc();\n\n  JobCollectionBase.prototype.allow = function() {\n    throw new Error(\"Server-only function jc.allow() invoked on client.\");\n  };\n\n  JobCollectionBase.prototype.deny = function() {\n    throw new Error(\"Server-only function jc.deny() invoked on client.\");\n  };\n\n  JobCollectionBase.prototype.promote = function() {\n    throw new Error(\"Server-only function jc.promote() invoked on client.\");\n  };\n\n  JobCollectionBase.prototype.setLogStream = function() {\n    throw new Error(\"Server-only function jc.setLogStream() invoked on client.\");\n  };\n\n  JobCollectionBase.prototype.logConsole = function() {\n    throw new Error(\"Client-only function jc.logConsole() invoked on server.\");\n  };\n\n  JobCollectionBase.prototype.makeJob = (function() {\n    var dep;\n    dep = false;\n    return function() {\n      var params;\n      params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      if (!dep) {\n        dep = true;\n        console.warn(\"WARNING: jc.makeJob() has been deprecated. Use new Job(jc, doc) instead.\");\n      }\n      return (function(func, args, ctor) {\n        ctor.prototype = func.prototype;\n        var child = new ctor, result = func.apply(child, args);\n        return Object(result) === result ? result : child;\n      })(Job, [this.root].concat(slice.call(params)), function(){});\n    };\n  })();\n\n  JobCollectionBase.prototype.createJob = (function() {\n    var dep;\n    dep = false;\n    return function() {\n      var params;\n      params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      if (!dep) {\n        dep = true;\n        console.warn(\"WARNING: jc.createJob() has been deprecated. Use new Job(jc, type, data) instead.\");\n      }\n      return (function(func, args, ctor) {\n        ctor.prototype = func.prototype;\n        var child = new ctor, result = func.apply(child, args);\n        return Object(result) === result ? result : child;\n      })(Job, [this.root].concat(slice.call(params)), function(){});\n    };\n  })();\n\n  JobCollectionBase.prototype._methodWrapper = function(method, func) {\n    var ref, toLog, unblockDDPMethods;\n    toLog = this._toLog;\n    unblockDDPMethods = (ref = this._unblockDDPMethods) != null ? ref : false;\n    return function() {\n      var params, ref1, retval, user;\n      params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n      user = (ref1 = this.userId) != null ? ref1 : \"[UNAUTHENTICATED]\";\n      toLog(user, method, \"params: \" + JSON.stringify(params));\n      if (unblockDDPMethods) {\n        this.unblock();\n      }\n      retval = func.apply(null, params);\n      toLog(user, method, \"returned: \" + JSON.stringify(retval));\n      return retval;\n    };\n  };\n\n  JobCollectionBase.prototype._generateMethods = function() {\n    var baseMethodName, methodFunc, methodName, methodPrefix, methodsOut, ref;\n    methodsOut = {};\n    methodPrefix = '_DDPMethod_';\n    ref = this;\n    for (methodName in ref) {\n      methodFunc = ref[methodName];\n      if (!(methodName.slice(0, methodPrefix.length) === methodPrefix)) {\n        continue;\n      }\n      baseMethodName = methodName.slice(methodPrefix.length);\n      methodsOut[this.root + \"_\" + baseMethodName] = this._methodWrapper(baseMethodName, methodFunc.bind(this));\n    }\n    return methodsOut;\n  };\n\n  JobCollectionBase.prototype._idsOfDeps = function(ids, antecedents, dependents, jobStatuses) {\n    var antsArray, dependsIds, dependsQuery;\n    dependsQuery = [];\n    dependsIds = [];\n    if (dependents) {\n      dependsQuery.push({\n        depends: {\n          $elemMatch: {\n            $in: ids\n          }\n        }\n      });\n    }\n    if (antecedents) {\n      antsArray = [];\n      this.find({\n        _id: {\n          $in: ids\n        }\n      }, {\n        fields: {\n          depends: 1\n        },\n        transform: null\n      }).forEach(function(d) {\n        var i, k, len, ref, results;\n        if (indexOf.call(antsArray, i) < 0) {\n          ref = d.depends;\n          results = [];\n          for (k = 0, len = ref.length; k < len; k++) {\n            i = ref[k];\n            results.push(antsArray.push(i));\n          }\n          return results;\n        }\n      });\n      if (antsArray.length > 0) {\n        dependsQuery.push({\n          _id: {\n            $in: antsArray\n          }\n        });\n      }\n    }\n    if (dependsQuery.length > 0) {\n      this.find({\n        status: {\n          $in: jobStatuses\n        },\n        $or: dependsQuery\n      }, {\n        fields: {\n          _id: 1\n        },\n        transform: null\n      }).forEach(function(d) {\n        var ref;\n        if (ref = d._id, indexOf.call(dependsIds, ref) < 0) {\n          return dependsIds.push(d._id);\n        }\n      });\n    }\n    return dependsIds;\n  };\n\n  JobCollectionBase.prototype._rerun_job = function(doc, repeats, wait, repeatUntil) {\n    var id, jobId, logObj, runId, time;\n    if (repeats == null) {\n      repeats = doc.repeats - 1;\n    }\n    if (wait == null) {\n      wait = doc.repeatWait;\n    }\n    if (repeatUntil == null) {\n      repeatUntil = doc.repeatUntil;\n    }\n    id = doc._id;\n    runId = doc.runId;\n    time = new Date();\n    delete doc._id;\n    delete doc.result;\n    delete doc.failures;\n    delete doc.expiresAfter;\n    delete doc.workTimeout;\n    doc.runId = null;\n    doc.status = \"waiting\";\n    doc.repeatRetries = doc.repeatRetries != null ? doc.repeatRetries : doc.retries + doc.retried;\n    doc.retries = doc.repeatRetries;\n    if (doc.retries > this.forever) {\n      doc.retries = this.forever;\n    }\n    doc.retryUntil = repeatUntil;\n    doc.retried = 0;\n    doc.repeats = repeats;\n    if (doc.repeats > this.forever) {\n      doc.repeats = this.forever;\n    }\n    doc.repeatUntil = repeatUntil;\n    doc.repeated = doc.repeated + 1;\n    doc.updated = time;\n    doc.created = time;\n    doc.progress = {\n      completed: 0,\n      total: 1,\n      percent: 0\n    };\n    if (logObj = this._logMessage.rerun(id, runId)) {\n      doc.log = [logObj];\n    } else {\n      doc.log = [];\n    }\n    doc.after = new Date(time.valueOf() + wait);\n    if (jobId = this.insert(doc)) {\n      this._DDPMethod_jobReady(jobId);\n      return jobId;\n    } else {\n      console.warn(\"Job rerun/repeat failed to reschedule!\", id, runId);\n    }\n    return null;\n  };\n\n  JobCollectionBase.prototype._checkDeps = function(job, dryRun) {\n    var cancel, cancelled, depJob, deps, failed, foundIds, j, k, len, len1, log, m, mods, n, ref, ref1, removed, resolved;\n    if (dryRun == null) {\n      dryRun = true;\n    }\n    cancel = false;\n    resolved = [];\n    failed = [];\n    cancelled = [];\n    removed = [];\n    log = [];\n    if (job.depends.length > 0) {\n      deps = this.find({\n        _id: {\n          $in: job.depends\n        }\n      }, {\n        fields: {\n          _id: 1,\n          runId: 1,\n          status: 1\n        }\n      }).fetch();\n      if (deps.length !== job.depends.length) {\n        foundIds = deps.map(function(d) {\n          return d._id;\n        });\n        ref = job.depends;\n        for (k = 0, len = ref.length; k < len; k++) {\n          j = ref[k];\n          if (!(!(indexOf.call(foundIds, j) >= 0))) {\n            continue;\n          }\n          if (!dryRun) {\n            this._DDPMethod_jobLog(job._id, null, \"Antecedent job \" + j + \" missing at save\");\n          }\n          removed.push(j);\n        }\n        cancel = true;\n      }\n      for (m = 0, len1 = deps.length; m < len1; m++) {\n        depJob = deps[m];\n        if (ref1 = depJob.status, indexOf.call(this.jobStatusCancellable, ref1) < 0) {\n          switch (depJob.status) {\n            case \"completed\":\n              resolved.push(depJob._id);\n              log.push(this._logMessage.resolved(depJob._id, depJob.runId));\n              break;\n            case \"failed\":\n              cancel = true;\n              failed.push(depJob._id);\n              if (!dryRun) {\n                this._DDPMethod_jobLog(job._id, null, \"Antecedent job failed before save\");\n              }\n              break;\n            case \"cancelled\":\n              cancel = true;\n              cancelled.push(depJob._id);\n              if (!dryRun) {\n                this._DDPMethod_jobLog(job._id, null, \"Antecedent job cancelled before save\");\n              }\n              break;\n            default:\n              throw new Meteor.Error(\"Unknown status in jobSave Dependency check\");\n          }\n        }\n      }\n      if (!(resolved.length === 0 || dryRun)) {\n        mods = {\n          $pull: {\n            depends: {\n              $in: resolved\n            }\n          },\n          $push: {\n            resolved: {\n              $each: resolved\n            },\n            log: {\n              $each: log\n            }\n          }\n        };\n        n = this.update({\n          _id: job._id,\n          status: 'waiting'\n        }, mods);\n        if (!n) {\n          console.warn(\"Update for job \" + job._id + \" during dependency check failed.\");\n        }\n      }\n      if (cancel && !dryRun) {\n        this._DDPMethod_jobCancel(job._id);\n        return false;\n      }\n    }\n    if (dryRun) {\n      if (cancel || resolved.length > 0) {\n        return {\n          jobId: job._id,\n          resolved: resolved,\n          failed: failed,\n          cancelled: cancelled,\n          removed: removed\n        };\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  };\n\n  JobCollectionBase.prototype._DDPMethod_startJobServer = function(options) {\n    check(options, Match.Optional({}));\n    if (options == null) {\n      options = {};\n    }\n    if (!this.isSimulation) {\n      if (this.stopped && this.stopped !== true) {\n        Meteor.clearTimeout(this.stopped);\n      }\n      this.stopped = false;\n    }\n    return true;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_startJobs = (function() {\n    var depFlag;\n    depFlag = false;\n    return function(options) {\n      if (!depFlag) {\n        depFlag = true;\n        console.warn(\"Deprecation Warning: jc.startJobs() has been renamed to jc.startJobServer()\");\n      }\n      return this._DDPMethod_startJobServer(options);\n    };\n  })();\n\n  JobCollectionBase.prototype._DDPMethod_shutdownJobServer = function(options) {\n    check(options, Match.Optional({\n      timeout: Match.Optional(Match.Where(_validIntGTEOne))\n    }));\n    if (options == null) {\n      options = {};\n    }\n    if (options.timeout == null) {\n      options.timeout = 60 * 1000;\n    }\n    if (!this.isSimulation) {\n      if (this.stopped && this.stopped !== true) {\n        Meteor.clearTimeout(this.stopped);\n      }\n      this.stopped = Meteor.setTimeout((function(_this) {\n        return function() {\n          var cursor, failedJobs;\n          cursor = _this.find({\n            status: 'running'\n          }, {\n            transform: null\n          });\n          failedJobs = cursor.count();\n          if (failedJobs !== 0) {\n            console.warn(\"Failing \" + failedJobs + \" jobs on queue stop.\");\n          }\n          cursor.forEach(function(d) {\n            return _this._DDPMethod_jobFail(d._id, d.runId, \"Running at Job Server shutdown.\");\n          });\n          if (_this.logStream != null) {\n            _this.logStream.end();\n            return _this.logStream = null;\n          }\n        };\n      })(this), options.timeout);\n    }\n    return true;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_stopJobs = (function() {\n    var depFlag;\n    depFlag = false;\n    return function(options) {\n      if (!depFlag) {\n        depFlag = true;\n        console.warn(\"Deprecation Warning: jc.stopJobs() has been renamed to jc.shutdownJobServer()\");\n      }\n      return this._DDPMethod_shutdownJobServer(options);\n    };\n  })();\n\n  JobCollectionBase.prototype._DDPMethod_getJob = function(ids, options) {\n    var d, docs, fields, single;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({\n      getLog: Match.Optional(Boolean),\n      getFailures: Match.Optional(Boolean)\n    }));\n    if (options == null) {\n      options = {};\n    }\n    if (options.getLog == null) {\n      options.getLog = false;\n    }\n    if (options.getFailures == null) {\n      options.getFailures = false;\n    }\n    single = false;\n    if (_validId(ids)) {\n      ids = [ids];\n      single = true;\n    }\n    if (ids.length === 0) {\n      return null;\n    }\n    fields = {\n      _private: 0\n    };\n    if (!options.getLog) {\n      fields.log = 0;\n    }\n    if (!options.getFailures) {\n      fields.failures = 0;\n    }\n    docs = this.find({\n      _id: {\n        $in: ids\n      }\n    }, {\n      fields: fields,\n      transform: null\n    }).fetch();\n    if (docs != null ? docs.length : void 0) {\n      if (this.scrub != null) {\n        docs = (function() {\n          var k, len, results;\n          results = [];\n          for (k = 0, len = docs.length; k < len; k++) {\n            d = docs[k];\n            results.push(this.scrub(d));\n          }\n          return results;\n        }).call(this);\n      }\n      check(docs, [_validJobDoc()]);\n      if (single) {\n        return docs[0];\n      } else {\n        return docs;\n      }\n    }\n    return null;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_getWork = function(type, options) {\n    var d, docs, foundDocs, ids, logObj, mods, num, runId, time;\n    check(type, Match.OneOf(String, [String]));\n    check(options, Match.Optional({\n      maxJobs: Match.Optional(Match.Where(_validIntGTEOne)),\n      workTimeout: Match.Optional(Match.Where(_validIntGTEOne))\n    }));\n    if (this.isSimulation) {\n      return;\n    }\n    if (options == null) {\n      options = {};\n    }\n    if (options.maxJobs == null) {\n      options.maxJobs = 1;\n    }\n    if (this.stopped) {\n      return [];\n    }\n    if (typeof type === 'string') {\n      type = [type];\n    }\n    time = new Date();\n    docs = [];\n    runId = this._makeNewID();\n    while (docs.length < options.maxJobs) {\n      ids = this.find({\n        type: {\n          $in: type\n        },\n        status: 'ready',\n        runId: null\n      }, {\n        sort: {\n          priority: 1,\n          retryUntil: 1,\n          after: 1\n        },\n        limit: options.maxJobs - docs.length,\n        fields: {\n          _id: 1\n        },\n        transform: null\n      }).map(function(d) {\n        return d._id;\n      });\n      if (!((ids != null ? ids.length : void 0) > 0)) {\n        break;\n      }\n      mods = {\n        $set: {\n          status: 'running',\n          runId: runId,\n          updated: time\n        },\n        $inc: {\n          retries: -1,\n          retried: 1\n        }\n      };\n      if (logObj = this._logMessage.running(runId)) {\n        mods.$push = {\n          log: logObj\n        };\n      }\n      if (options.workTimeout != null) {\n        mods.$set.workTimeout = options.workTimeout;\n        mods.$set.expiresAfter = new Date(time.valueOf() + options.workTimeout);\n      } else {\n        if (mods.$unset == null) {\n          mods.$unset = {};\n        }\n        mods.$unset.workTimeout = \"\";\n        mods.$unset.expiresAfter = \"\";\n      }\n      num = this.update({\n        _id: {\n          $in: ids\n        },\n        status: 'ready',\n        runId: null\n      }, mods, {\n        multi: true\n      });\n      if (num > 0) {\n        foundDocs = this.find({\n          _id: {\n            $in: ids\n          },\n          runId: runId\n        }, {\n          fields: {\n            log: 0,\n            failures: 0,\n            _private: 0\n          },\n          transform: null\n        }).fetch();\n        if ((foundDocs != null ? foundDocs.length : void 0) > 0) {\n          if (this.scrub != null) {\n            foundDocs = (function() {\n              var k, len, results;\n              results = [];\n              for (k = 0, len = foundDocs.length; k < len; k++) {\n                d = foundDocs[k];\n                results.push(this.scrub(d));\n              }\n              return results;\n            }).call(this);\n          }\n          check(docs, [_validJobDoc()]);\n          docs = docs.concat(foundDocs);\n        }\n      }\n    }\n    return docs;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobRemove = function(ids, options) {\n    var num;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({}));\n    if (options == null) {\n      options = {};\n    }\n    if (_validId(ids)) {\n      ids = [ids];\n    }\n    if (ids.length === 0) {\n      return false;\n    }\n    num = this.remove({\n      _id: {\n        $in: ids\n      },\n      status: {\n        $in: this.jobStatusRemovable\n      }\n    });\n    if (num > 0) {\n      return true;\n    } else {\n      console.warn(\"jobRemove failed\");\n    }\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobPause = function(ids, options) {\n    var logObj, mods, num, time;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({}));\n    if (options == null) {\n      options = {};\n    }\n    if (_validId(ids)) {\n      ids = [ids];\n    }\n    if (ids.length === 0) {\n      return false;\n    }\n    time = new Date();\n    mods = {\n      $set: {\n        status: \"paused\",\n        updated: time\n      }\n    };\n    if (logObj = this._logMessage.paused()) {\n      mods.$push = {\n        log: logObj\n      };\n    }\n    num = this.update({\n      _id: {\n        $in: ids\n      },\n      status: {\n        $in: this.jobStatusPausable\n      }\n    }, mods, {\n      multi: true\n    });\n    if (num > 0) {\n      return true;\n    } else {\n      console.warn(\"jobPause failed\");\n    }\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobResume = function(ids, options) {\n    var logObj, mods, num, time;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({}));\n    if (options == null) {\n      options = {};\n    }\n    if (_validId(ids)) {\n      ids = [ids];\n    }\n    if (ids.length === 0) {\n      return false;\n    }\n    time = new Date();\n    mods = {\n      $set: {\n        status: \"waiting\",\n        updated: time\n      }\n    };\n    if (logObj = this._logMessage.resumed()) {\n      mods.$push = {\n        log: logObj\n      };\n    }\n    num = this.update({\n      _id: {\n        $in: ids\n      },\n      status: \"paused\",\n      updated: {\n        $ne: time\n      }\n    }, mods, {\n      multi: true\n    });\n    if (num > 0) {\n      this._DDPMethod_jobReady(ids);\n      return true;\n    } else {\n      console.warn(\"jobResume failed\");\n    }\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobReady = function(ids, options) {\n    var l, logObj, mods, now, num, query;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({\n      force: Match.Optional(Boolean),\n      time: Match.Optional(Date)\n    }));\n    if (this.isSimulation) {\n      return;\n    }\n    now = new Date();\n    if (options == null) {\n      options = {};\n    }\n    if (options.force == null) {\n      options.force = false;\n    }\n    if (options.time == null) {\n      options.time = now;\n    }\n    if (_validId(ids)) {\n      ids = [ids];\n    }\n    query = {\n      status: \"waiting\",\n      after: {\n        $lte: options.time\n      }\n    };\n    mods = {\n      $set: {\n        status: \"ready\",\n        updated: now\n      }\n    };\n    if (ids.length > 0) {\n      query._id = {\n        $in: ids\n      };\n      mods.$set.after = now;\n    }\n    logObj = [];\n    if (options.force) {\n      mods.$set.depends = [];\n      l = this._logMessage.forced();\n      if (l) {\n        logObj.push(l);\n      }\n    } else {\n      query.depends = {\n        $size: 0\n      };\n    }\n    l = this._logMessage.readied();\n    if (l) {\n      logObj.push(l);\n    }\n    if (logObj.length > 0) {\n      mods.$push = {\n        log: {\n          $each: logObj\n        }\n      };\n    }\n    num = this.update(query, mods, {\n      multi: true\n    });\n    if (num > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobCancel = function(ids, options) {\n    var cancelIds, depsCancelled, logObj, mods, num, time;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({\n      antecedents: Match.Optional(Boolean),\n      dependents: Match.Optional(Boolean)\n    }));\n    if (options == null) {\n      options = {};\n    }\n    if (options.antecedents == null) {\n      options.antecedents = false;\n    }\n    if (options.dependents == null) {\n      options.dependents = true;\n    }\n    if (_validId(ids)) {\n      ids = [ids];\n    }\n    if (ids.length === 0) {\n      return false;\n    }\n    time = new Date();\n    mods = {\n      $set: {\n        status: \"cancelled\",\n        runId: null,\n        progress: {\n          completed: 0,\n          total: 1,\n          percent: 0\n        },\n        updated: time\n      }\n    };\n    if (logObj = this._logMessage.cancelled()) {\n      mods.$push = {\n        log: logObj\n      };\n    }\n    num = this.update({\n      _id: {\n        $in: ids\n      },\n      status: {\n        $in: this.jobStatusCancellable\n      }\n    }, mods, {\n      multi: true\n    });\n    cancelIds = this._idsOfDeps(ids, options.antecedents, options.dependents, this.jobStatusCancellable);\n    depsCancelled = false;\n    if (cancelIds.length > 0) {\n      depsCancelled = this._DDPMethod_jobCancel(cancelIds, options);\n    }\n    if (num > 0 || depsCancelled) {\n      return true;\n    } else {\n      console.warn(\"jobCancel failed\");\n    }\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobRestart = function(ids, options) {\n    var depsRestarted, logObj, mods, num, query, restartIds, time;\n    check(ids, Match.OneOf(Match.Where(_validId), [Match.Where(_validId)]));\n    check(options, Match.Optional({\n      retries: Match.Optional(Match.Where(_validIntGTEZero)),\n      until: Match.Optional(Date),\n      antecedents: Match.Optional(Boolean),\n      dependents: Match.Optional(Boolean)\n    }));\n    if (options == null) {\n      options = {};\n    }\n    if (options.retries == null) {\n      options.retries = 1;\n    }\n    if (options.retries > this.forever) {\n      options.retries = this.forever;\n    }\n    if (options.dependents == null) {\n      options.dependents = false;\n    }\n    if (options.antecedents == null) {\n      options.antecedents = true;\n    }\n    if (_validId(ids)) {\n      ids = [ids];\n    }\n    if (ids.length === 0) {\n      return false;\n    }\n    time = new Date();\n    query = {\n      _id: {\n        $in: ids\n      },\n      status: {\n        $in: this.jobStatusRestartable\n      }\n    };\n    mods = {\n      $set: {\n        status: \"waiting\",\n        progress: {\n          completed: 0,\n          total: 1,\n          percent: 0\n        },\n        updated: time\n      },\n      $inc: {\n        retries: options.retries\n      }\n    };\n    if (logObj = this._logMessage.restarted()) {\n      mods.$push = {\n        log: logObj\n      };\n    }\n    if (options.until != null) {\n      mods.$set.retryUntil = options.until;\n    }\n    num = this.update(query, mods, {\n      multi: true\n    });\n    restartIds = this._idsOfDeps(ids, options.antecedents, options.dependents, this.jobStatusRestartable);\n    depsRestarted = false;\n    if (restartIds.length > 0) {\n      depsRestarted = this._DDPMethod_jobRestart(restartIds, options);\n    }\n    if (num > 0 || depsRestarted) {\n      this._DDPMethod_jobReady(ids);\n      return true;\n    } else {\n      console.warn(\"jobRestart failed\");\n    }\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobSave = function(doc, options) {\n    var logObj, mods, next, nextDate, num, ref, schedule, time;\n    check(doc, _validJobDoc());\n    check(options, Match.Optional({\n      cancelRepeats: Match.Optional(Boolean)\n    }));\n    check(doc.status, Match.Where(function(v) {\n      return Match.test(v, String) && (v === 'waiting' || v === 'paused');\n    }));\n    if (options == null) {\n      options = {};\n    }\n    if (options.cancelRepeats == null) {\n      options.cancelRepeats = false;\n    }\n    if (doc.repeats > this.forever) {\n      doc.repeats = this.forever;\n    }\n    if (doc.retries > this.forever) {\n      doc.retries = this.forever;\n    }\n    time = new Date();\n    if (doc.after < time) {\n      doc.after = time;\n    }\n    if (doc.retryUntil < time) {\n      doc.retryUntil = time;\n    }\n    if (doc.repeatUntil < time) {\n      doc.repeatUntil = time;\n    }\n    if ((this.later != null) && typeof doc.repeatWait !== 'number') {\n      schedule = (ref = this.later) != null ? ref.schedule(doc.repeatWait) : void 0;\n      if (!(schedule && (next = schedule.next(2, schedule.prev(1, doc.after))[1]))) {\n        console.warn(\"No valid available later.js times in schedule after \" + doc.after);\n        return null;\n      }\n      nextDate = new Date(next);\n      if (!(nextDate <= doc.repeatUntil)) {\n        console.warn(\"No valid available later.js times in schedule before \" + doc.repeatUntil);\n        return null;\n      }\n      doc.after = nextDate;\n    } else if ((this.later == null) && doc.repeatWait !== 'number') {\n      console.warn(\"Later.js not loaded...\");\n      return null;\n    }\n    if (doc._id) {\n      mods = {\n        $set: {\n          status: 'waiting',\n          data: doc.data,\n          retries: doc.retries,\n          repeatRetries: doc.repeatRetries != null ? doc.repeatRetries : doc.retries + doc.retried,\n          retryUntil: doc.retryUntil,\n          retryWait: doc.retryWait,\n          retryBackoff: doc.retryBackoff,\n          repeats: doc.repeats,\n          repeatUntil: doc.repeatUntil,\n          repeatWait: doc.repeatWait,\n          depends: doc.depends,\n          priority: doc.priority,\n          after: doc.after,\n          updated: time\n        }\n      };\n      if (logObj = this._logMessage.resubmitted()) {\n        mods.$push = {\n          log: logObj\n        };\n      }\n      num = this.update({\n        _id: doc._id,\n        status: 'paused',\n        runId: null\n      }, mods);\n      if (num && this._checkDeps(doc, false)) {\n        this._DDPMethod_jobReady(doc._id);\n        return doc._id;\n      } else {\n        return null;\n      }\n    } else {\n      if (doc.repeats === this.forever && options.cancelRepeats) {\n        this.find({\n          type: doc.type,\n          status: {\n            $in: this.jobStatusCancellable\n          }\n        }, {\n          transform: null\n        }).forEach((function(_this) {\n          return function(d) {\n            return _this._DDPMethod_jobCancel(d._id, {});\n          };\n        })(this));\n      }\n      doc.created = time;\n      doc.log.push(this._logMessage.submitted());\n      doc._id = this.insert(doc);\n      if (doc._id && this._checkDeps(doc, false)) {\n        this._DDPMethod_jobReady(doc._id);\n        return doc._id;\n      } else {\n        return null;\n      }\n    }\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobProgress = function(id, runId, completed, total, options) {\n    var job, mods, num, progress, time;\n    check(id, Match.Where(_validId));\n    check(runId, Match.Where(_validId));\n    check(completed, Match.Where(_validNumGTEZero));\n    check(total, Match.Where(_validNumGTZero));\n    check(options, Match.Optional({}));\n    if (options == null) {\n      options = {};\n    }\n    if (this.stopped) {\n      return null;\n    }\n    progress = {\n      completed: completed,\n      total: total,\n      percent: 100 * completed / total\n    };\n    check(progress, Match.Where(function(v) {\n      var ref;\n      return v.total >= v.completed && (0 <= (ref = v.percent) && ref <= 100);\n    }));\n    time = new Date();\n    job = this.findOne({\n      _id: id\n    }, {\n      fields: {\n        workTimeout: 1\n      }\n    });\n    mods = {\n      $set: {\n        progress: progress,\n        updated: time\n      }\n    };\n    if ((job != null ? job.workTimeout : void 0) != null) {\n      mods.$set.expiresAfter = new Date(time.valueOf() + job.workTimeout);\n    }\n    num = this.update({\n      _id: id,\n      runId: runId,\n      status: \"running\"\n    }, mods);\n    if (num === 1) {\n      return true;\n    } else {\n      console.warn(\"jobProgress failed\");\n    }\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobLog = function(id, runId, message, options) {\n    var job, logObj, mods, num, ref, time;\n    check(id, Match.Where(_validId));\n    check(runId, Match.OneOf(Match.Where(_validId), null));\n    check(message, String);\n    check(options, Match.Optional({\n      level: Match.Optional(Match.Where(_validLogLevel)),\n      data: Match.Optional(Object)\n    }));\n    if (options == null) {\n      options = {};\n    }\n    time = new Date();\n    logObj = {\n      time: time,\n      runId: runId,\n      level: (ref = options.level) != null ? ref : 'info',\n      message: message\n    };\n    if (options.data != null) {\n      logObj.data = options.data;\n    }\n    job = this.findOne({\n      _id: id\n    }, {\n      fields: {\n        status: 1,\n        workTimeout: 1\n      }\n    });\n    mods = {\n      $push: {\n        log: logObj\n      },\n      $set: {\n        updated: time\n      }\n    };\n    if (((job != null ? job.workTimeout : void 0) != null) && job.status === 'running') {\n      mods.$set.expiresAfter = new Date(time.valueOf() + job.workTimeout);\n    }\n    num = this.update({\n      _id: id\n    }, mods);\n    if (num === 1) {\n      return true;\n    } else {\n      console.warn(\"jobLog failed\");\n    }\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobRerun = function(id, options) {\n    var doc;\n    check(id, Match.Where(_validId));\n    check(options, Match.Optional({\n      repeats: Match.Optional(Match.Where(_validIntGTEZero)),\n      until: Match.Optional(Date),\n      wait: Match.OneOf(Match.Where(_validIntGTEZero), Match.Where(_validLaterJSObj))\n    }));\n    doc = this.findOne({\n      _id: id,\n      status: \"completed\"\n    }, {\n      fields: {\n        result: 0,\n        failures: 0,\n        log: 0,\n        progress: 0,\n        updated: 0,\n        after: 0,\n        status: 0\n      },\n      transform: null\n    });\n    if (doc != null) {\n      if (options == null) {\n        options = {};\n      }\n      if (options.repeats == null) {\n        options.repeats = 0;\n      }\n      if (options.repeats > this.forever) {\n        options.repeats = this.forever;\n      }\n      if (options.until == null) {\n        options.until = doc.repeatUntil;\n      }\n      if (options.wait == null) {\n        options.wait = 0;\n      }\n      return this._rerun_job(doc, options.repeats, options.wait, options.until);\n    }\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobDone = function(id, runId, result, options) {\n    var after, d, doc, ids, jobId, logObj, mods, n, next, num, ref, time, wait;\n    check(id, Match.Where(_validId));\n    check(runId, Match.Where(_validId));\n    check(result, Object);\n    check(options, Match.Optional({\n      repeatId: Match.Optional(Boolean),\n      delayDeps: Match.Optional(Match.Where(_validIntGTEZero))\n    }));\n    if (options == null) {\n      options = {\n        repeatId: false\n      };\n    }\n    time = new Date();\n    doc = this.findOne({\n      _id: id,\n      runId: runId,\n      status: \"running\"\n    }, {\n      fields: {\n        log: 0,\n        failures: 0,\n        updated: 0,\n        after: 0,\n        status: 0\n      },\n      transform: null\n    });\n    if (doc == null) {\n      if (!this.isSimulation) {\n        console.warn(\"Running job not found\", id, runId);\n      }\n      return false;\n    }\n    mods = {\n      $set: {\n        status: \"completed\",\n        result: result,\n        progress: {\n          completed: doc.progress.total || 1,\n          total: doc.progress.total || 1,\n          percent: 100\n        },\n        updated: time\n      }\n    };\n    if (logObj = this._logMessage.completed(runId)) {\n      mods.$push = {\n        log: logObj\n      };\n    }\n    num = this.update({\n      _id: id,\n      runId: runId,\n      status: \"running\"\n    }, mods);\n    if (num === 1) {\n      if (doc.repeats > 0) {\n        if (typeof doc.repeatWait === 'number') {\n          if (doc.repeatUntil - doc.repeatWait >= time) {\n            jobId = this._rerun_job(doc);\n          }\n        } else {\n          next = (ref = this.later) != null ? ref.schedule(doc.repeatWait).next(2) : void 0;\n          if (next && next.length > 0) {\n            d = new Date(next[0]);\n            if ((d - time > 500) || (next.length > 1)) {\n              if (d - time <= 500) {\n                d = new Date(next[1]);\n              }\n              wait = d - time;\n              if (doc.repeatUntil - wait >= time) {\n                jobId = this._rerun_job(doc, doc.repeats - 1, wait);\n              }\n            }\n          }\n        }\n      }\n      ids = this.find({\n        depends: {\n          $all: [id]\n        }\n      }, {\n        transform: null,\n        fields: {\n          _id: 1\n        }\n      }).fetch().map((function(_this) {\n        return function(d) {\n          return d._id;\n        };\n      })(this));\n      if (ids.length > 0) {\n        mods = {\n          $pull: {\n            depends: id\n          },\n          $push: {\n            resolved: id\n          }\n        };\n        if (options.delayDeps != null) {\n          after = new Date(time.valueOf() + options.delayDeps);\n          mods.$max = {\n            after: after\n          };\n        }\n        if (logObj = this._logMessage.resolved(id, runId)) {\n          mods.$push.log = logObj;\n        }\n        n = this.update({\n          _id: {\n            $in: ids\n          }\n        }, mods, {\n          multi: true\n        });\n        if (n !== ids.length) {\n          console.warn(\"Not all dependent jobs were resolved \" + ids.length + \" > \" + n);\n        }\n        this._DDPMethod_jobReady(ids);\n      }\n      if (options.repeatId && (jobId != null)) {\n        return jobId;\n      } else {\n        return true;\n      }\n    } else {\n      console.warn(\"jobDone failed\");\n    }\n    return false;\n  };\n\n  JobCollectionBase.prototype._DDPMethod_jobFail = function(id, runId, err, options) {\n    var after, doc, logObj, mods, newStatus, num, time;\n    check(id, Match.Where(_validId));\n    check(runId, Match.Where(_validId));\n    check(err, Object);\n    check(options, Match.Optional({\n      fatal: Match.Optional(Boolean)\n    }));\n    if (options == null) {\n      options = {};\n    }\n    if (options.fatal == null) {\n      options.fatal = false;\n    }\n    time = new Date();\n    doc = this.findOne({\n      _id: id,\n      runId: runId,\n      status: \"running\"\n    }, {\n      fields: {\n        log: 0,\n        failures: 0,\n        progress: 0,\n        updated: 0,\n        after: 0,\n        runId: 0,\n        status: 0\n      },\n      transform: null\n    });\n    if (doc == null) {\n      if (!this.isSimulation) {\n        console.warn(\"Running job not found\", id, runId);\n      }\n      return false;\n    }\n    after = (function() {\n      switch (doc.retryBackoff) {\n        case 'exponential':\n          return new Date(time.valueOf() + doc.retryWait * Math.pow(2, doc.retried - 1));\n        default:\n          return new Date(time.valueOf() + doc.retryWait);\n      }\n    })();\n    newStatus = (!options.fatal && doc.retries > 0 && doc.retryUntil >= after) ? \"waiting\" : \"failed\";\n    err.runId = runId;\n    mods = {\n      $set: {\n        status: newStatus,\n        runId: null,\n        after: after,\n        updated: time\n      },\n      $push: {\n        failures: err\n      }\n    };\n    if (logObj = this._logMessage.failed(runId, newStatus === 'failed', err)) {\n      mods.$push.log = logObj;\n    }\n    num = this.update({\n      _id: id,\n      runId: runId,\n      status: \"running\"\n    }, mods);\n    if (newStatus === \"failed\" && num === 1) {\n      this.find({\n        depends: {\n          $all: [id]\n        }\n      }, {\n        transform: null\n      }).forEach((function(_this) {\n        return function(d) {\n          return _this._DDPMethod_jobCancel(d._id);\n        };\n      })(this));\n    }\n    if (num === 1) {\n      return true;\n    } else {\n      console.warn(\"jobFail failed\");\n    }\n    return false;\n  };\n\n  return JobCollectionBase;\n\n})(Mongo.Collection);\n\nshare.JobCollectionBase = JobCollectionBase;\n"]},"hash":"44bc97585a1082e0103821efe3edb2e6798b5f66"}
