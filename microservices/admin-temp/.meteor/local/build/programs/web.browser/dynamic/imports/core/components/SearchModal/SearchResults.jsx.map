{"version":3,"sources":["meteor://ðŸ’»app/imports/core/components/SearchModal/SearchResults.jsx"],"names":["React","Component","module","watch","require","v","PropTypes","JsSearch","injectIntl","List","ListItem","ListItemText","T","generalTooltips","Button","styles","list","width","maxWidth","selected","SearchResults","props","setupSearch","search","Search","addIndex","addDocuments","getTooltips","f","intl","formatMessage","intlValues","verticalSpace","Object","keys","map","match","tooltipId","tooltip","id","tooltipMatch","tooltipValue1","tooltipValue2","state","showId","nextProps","setState","results","length","selectedResult","filter","result","paddingTop","slice","propTypes","string","isRequired","object","exportDefault"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,cAAJ;AAAA,IAAUC,mBAAV;;AAAoBC,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACL,cAAMK,CAAN;AAAQ;;AAApB;AAAA;AAAqBJ,WAArB;AAAA,uBAA+BI,CAA/B,EAAiC;AAACJ,mBAAUI,CAAV;AAAY;;AAA9C;AAAA;AAAA,CAA9B,EAA8E,CAA9E;AAAiF,IAAIC,kBAAJ;AAAcJ,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACC,kBAAUD,CAAV;AAAY;;AAAxB;AAAA;AAAA,CAAnC,EAA6D,CAA7D;AAAgE,IAAIE,iBAAJ;AAAaL,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACE,iBAASF,CAAT;AAAW;;AAAvB;AAAA;AAAA,CAAlC,EAA2D,CAA3D;;AAA8D,IAAIG,oBAAJ;;AAAeN,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACI,YAAD;AAAA,wBAAYH,CAAZ,EAAc;AAACG,oBAAWH,CAAX;AAAa;;AAA5B;AAAA;AAAA,CAAnC,EAAiE,CAAjE;;AAAoE,IAAII,aAAJ;AAAA,IAASC,kBAAT;AAAA,IAAkBC,sBAAlB;;AAA+BT,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACI,aAAKJ,CAAL;AAAO;;AAAnB;AAAA;AAAoBK,UAApB;AAAA,sBAA6BL,CAA7B,EAA+B;AAACK,kBAASL,CAAT;AAAW;;AAA3C;AAAA;AAA4CM,cAA5C;AAAA,0BAAyDN,CAAzD,EAA2D;AAACM,sBAAaN,CAAb;AAAe;;AAA3E;AAAA;AAAA,CAAzC,EAAsH,CAAtH;;AAAyH,IAAIO,WAAJ;;AAAMV,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACQ,GAAD;AAAA,eAAGP,CAAH,EAAK;AAACO,WAAEP,CAAF;AAAI;;AAAV;AAAA;AAAA,CAAvC,EAAmD,CAAnD;;AAAsD,IAAIQ,yBAAJ;;AAAoBX,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACS,iBAAD;AAAA,6BAAiBR,CAAjB,EAAmB;AAACQ,yBAAgBR,CAAhB;AAAkB;;AAAtC;AAAA;AAAA,CAA9C,EAAsF,CAAtF;AAAyF,IAAIS,eAAJ;AAAWZ,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAAA;AAAA,sBAASC,CAAT,EAAW;AAACS,eAAOT,CAAP;AAAS;;AAArB;AAAA;AAAA,CAAlC,EAAyD,CAAzD;AAW7pB,IAAMU,SAAS;AACbC,QAAM;AACJC,WAAO,MADH;AAEJC,cAAU;AAFN,GADO;AAKbC,YAAU;AACRF,WAAO,MADC;AAERC,cAAU;AAFF;AALG,CAAf;;IAWME,a;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4IACXA,KADW;;AAAA,UAcnBC,WAdmB,GAcL,YAAM;AAClB,YAAKC,MAAL,GAAc,IAAIhB,SAASiB,MAAb,CAAoB,IAApB,CAAd;;AACA,YAAKD,MAAL,CAAYE,QAAZ,CAAqB,cAArB;;AACA,YAAKF,MAAL,CAAYE,QAAZ,CAAqB,eAArB;;AACA,YAAKF,MAAL,CAAYE,QAAZ,CAAqB,eAArB;;AACA,YAAKF,MAAL,CAAYG,YAAZ,CAAyB,MAAKC,WAAL,EAAzB;AACD,KApBkB;;AAAA,UAsBnBA,WAtBmB,GAsBL,YAAM;AAClB,UAAMC,IAAI,MAAKP,KAAL,CAAWQ,IAAX,CAAgBC,aAA1B;AACA,UAAMC,aAAa;AACjBC,uBAAe;AADE,OAAnB;AAIA,aAAOC,OAAOC,IAAP,CAAYrB,gBAAZ,EAA6BsB,GAA7B,CAAiC,UAACC,KAAD,EAAW;AACjD,YAAMC,YAAYxB,iBAAgBuB,KAAhB,CAAlB;AACA,YAAME,UAAU;AACdC,cAAIF,SADU;AAEdG,wBAAcJ,KAFA;AAGdK,yBAAeb,EAAE;AAAEW,6BAAeF;AAAjB,WAAF,EAAkCN,UAAlC;AAHD,SAAhB;;AAKA,YAAI,OAAOlB,iBAAgBuB,KAAhB,CAAP,KAAkC,QAAtC,EAAgD;AAC9CE,kBAAQI,aAAR,GAAwBd,EAAE;AAAEW,8BAAgBF;AAAlB,WAAF,EAAmCN,UAAnC,CAAxB;AACD;;AAED,eAAOO,OAAP;AACD,OAZM,CAAP;AAaD,KAzCkB;;AAGjB,UAAKK,KAAL,GAAa;AAAEC,cAAQ;AAAV,KAAb;;AACA,UAAKtB,WAAL;;AAJiB;AAKlB;;;;;yCAEyBuB,S,EAAW;AACnC;AACA,YAAIA,UAAUtB,MAAV,KAAqB,KAAKF,KAAL,CAAWE,MAAhC,IAA0C,KAAKoB,KAAL,CAAWC,MAAzD,EAAiE;AAC/D,eAAKE,QAAL,CAAc;AAAEF,oBAAQ;AAAV,WAAd;AACD;AACF;;;;;;;wBA+BQ;AAAA;;AAAA,YACCrB,MADD,GACY,KAAKF,KADjB,CACCE,MADD;AAAA,YAECqB,MAFD,GAEY,KAAKD,KAFjB,CAECC,MAFD;AAGP,YAAMG,UAAU,KAAKxB,MAAL,CAAYA,MAAZ,CAAmBA,MAAnB,CAAhB;;AAEA,YAAIA,UAAUwB,QAAQC,MAAR,KAAmB,CAAjC,EAAoC;AAClC,iBACE;AAAA;AAAA;AAAK,yBAAU;AAAf;AACE;AAAA;AAAA;AACE,kCAAC,EAAD;AAAG,oBAAG;AAAN;AADF;AADF,WADF;AAOD;;AAED,YAAIJ,MAAJ,EAAY;AACV,cAAMK,iBAAiBF,QAAQG,MAAR,CAAe;AAAA,mBAAUC,OAAOZ,EAAP,KAAcK,MAAxB;AAAA,WAAf,EAA+C,CAA/C,CAAvB;AACA,iBACE;AAAA;AAAA;AAAK,yBAAU,UAAf;AAA0B,qBAAO7B,OAAOI;AAAxC;AACE;AAAA;AAAA;AAAK8B,6BAAeT;AAApB,aADF;AAEE;AAAA;AAAA;AAAIS,6BAAeR;AAAnB,aAFF;AAGE,2CAHF;AAIE;AAAA;AAAA;AAAIQ,6BAAeP;AAAnB,aAJF;AAKE;AAAA;AAAA;AAAK,2BAAU,aAAf;AAA6B,uBAAO;AAAEU,8BAAY;AAAd;AAApC;AACE,kCAAC,MAAD;AACE,6BADF;AAEE,uBAAO,oBAAC,EAAD;AAAG,sBAAG;AAAN,kBAFT;AAGE;AAAS;AAAA,2BAAM,OAAKN,QAAL,CAAc;AAAEF,8BAAQ;AAAV,qBAAd,CAAN;AAAA;;AAAT;AAAA;AAHF;AADF;AALF,WADF;AAeD;;AAED,eACE;AAAC,cAAD;AAAA;AAAM,mBAAO7B,OAAOC;AAApB;AACG+B,kBAAQM,KAAR,CAAc,CAAd,EAAiB,CAAjB,EAAoBlB,GAApB,CAAwB;AAAA,mBACvB;AAAC,uBAAD;AAAA;AACE,4BADF;AAEE,6BAFF;AAGE;AAAS;AAAA,2BAAM,OAAKW,QAAL,CAAc;AAAEF,8BAAQO,OAAOZ;AAAjB,qBAAd,CAAN;AAAA;;AAAT;AAAA,mBAHF;AAIE,qBAAKY,OAAOZ;AAJd;AAME,kCAAC,aAAD;AACE,yBAASY,OAAOX,YADlB;AAEE,2BAAWW,OAAOV;AAFpB;AANF,aADuB;AAAA,WAAxB;AADH,SADF;AAiBD;;;;;;EA/FyBxC,U;;AAkG5BmB,cAAckC,SAAd,GAA0B;AACxB/B,UAAQjB,UAAUiD,MAAV,CAAiBC,UADD;AAExB3B,QAAMvB,UAAUmD,MAAV,CAAiBD;AAFC,CAA1B;AAxHAtD,OAAOwD,aAAP,CA6HelD,YAAWY,aAAX,CA7Hf,4E","file":"dynamic/imports/core/components/SearchModal/SearchResults.jsx","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport JsSearch from 'js-search';\nimport { injectIntl } from 'react-intl';\n\nimport List, { ListItem, ListItemText } from 'material-ui/List';\n\nimport { T } from 'core/components/Translation';\nimport { generalTooltips } from 'core/arrays/tooltips';\nimport Button from 'core/components/Button';\n\nconst styles = {\n  list: {\n    width: '100%',\n    maxWidth: 800,\n  },\n  selected: {\n    width: '100%',\n    maxWidth: 800,\n  },\n};\n\nclass SearchResults extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { showId: '' };\n    this.setupSearch();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Cancel viewing results if something new is typed/deleted\n    if (nextProps.search !== this.props.search && this.state.showId) {\n      this.setState({ showId: '' });\n    }\n  }\n\n  setupSearch = () => {\n    this.search = new JsSearch.Search('id');\n    this.search.addIndex('tooltipMatch');\n    this.search.addIndex('tooltipValue1');\n    this.search.addIndex('tooltipValue2');\n    this.search.addDocuments(this.getTooltips());\n  };\n\n  getTooltips = () => {\n    const f = this.props.intl.formatMessage;\n    const intlValues = {\n      verticalSpace: ' ',\n    };\n\n    return Object.keys(generalTooltips).map((match) => {\n      const tooltipId = generalTooltips[match];\n      const tooltip = {\n        id: tooltipId,\n        tooltipMatch: match,\n        tooltipValue1: f({ id: `tooltip.${tooltipId}` }, intlValues),\n      };\n      if (typeof generalTooltips[match] !== 'string') {\n        tooltip.tooltipValue2 = f({ id: `tooltip2.${tooltipId}` }, intlValues);\n      }\n\n      return tooltip;\n    });\n  };\n\n  render() {\n    const { search } = this.props;\n    const { showId } = this.state;\n    const results = this.search.search(search);\n\n    if (search && results.length === 0) {\n      return (\n        <div className=\"description\">\n          <p>\n            <T id=\"SearchResults.none\" />\n          </p>\n        </div>\n      );\n    }\n\n    if (showId) {\n      const selectedResult = results.filter(result => result.id === showId)[0];\n      return (\n        <div className=\"flex-col\" style={styles.selected}>\n          <h3>{selectedResult.tooltipMatch}</h3>\n          <p>{selectedResult.tooltipValue1}</p>\n          <br />\n          <p>{selectedResult.tooltipValue2}</p>\n          <div className=\"text-center\" style={{ paddingTop: 16 }}>\n            <Button\n              primary\n              label={<T id=\"general.ok\" />}\n              onClick={() => this.setState({ showId: '' })}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <List style={styles.list}>\n        {results.slice(0, 5).map(result => (\n          <ListItem\n            button\n            divider\n            onClick={() => this.setState({ showId: result.id })}\n            key={result.id}\n          >\n            <ListItemText\n              primary={result.tooltipMatch}\n              secondary={result.tooltipValue1}\n            />\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n}\n\nSearchResults.propTypes = {\n  search: PropTypes.string.isRequired,\n  intl: PropTypes.object.isRequired,\n};\n\nexport default injectIntl(SearchResults);\n"]}