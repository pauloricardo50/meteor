{"version":3,"sources":["meteor://ðŸ’»app/packages/std:accounts-ui/check-npm.js","meteor://ðŸ’»app/packages/std:accounts-ui/main_client.js","meteor://ðŸ’»app/packages/std:accounts-ui/imports/accounts_ui.js","meteor://ðŸ’»app/packages/std:accounts-ui/imports/helpers.js","meteor://ðŸ’»app/packages/std:accounts-ui/imports/login_session.js","meteor://ðŸ’»app/packages/std:accounts-ui/imports/api/client/loginWithoutPassword.js","meteor://ðŸ’»app/packages/std:accounts-ui/imports/ui/components/Button.jsx","meteor://ðŸ’»app/packages/std:accounts-ui/imports/ui/components/Buttons.jsx","meteor://ðŸ’»app/packages/std:accounts-ui/imports/ui/components/Field.jsx","meteor://ðŸ’»app/packages/std:accounts-ui/imports/ui/components/Fields.jsx","meteor://ðŸ’»app/packages/std:accounts-ui/imports/ui/components/Form.jsx","meteor://ðŸ’»app/packages/std:accounts-ui/imports/ui/components/FormMessage.jsx","meteor://ðŸ’»app/packages/std:accounts-ui/imports/ui/components/FormMessages.jsx","meteor://ðŸ’»app/packages/std:accounts-ui/imports/ui/components/LoginForm.jsx","meteor://ðŸ’»app/packages/std:accounts-ui/imports/ui/components/PasswordOrService.jsx","meteor://ðŸ’»app/packages/std:accounts-ui/imports/ui/components/SocialButtons.jsx"],"names":["module","export","LoginForm","Accounts","STATES","watch","require","v","redirect","validatePassword","validateEmail","validateUsername","ui","_options","requestPermissions","requestOfflineToken","forceApprovalPrompt","requireEmailVerification","passwordSignupFields","minimumPasswordLength","loginPath","signUpPath","resetPasswordPath","profilePath","changePasswordPath","homeRoutePath","onSubmitHook","onPreSignUpHook","Promise","resolve","onPostSignUpHook","onEnrollAccountHook","onResetPasswordHook","onVerifyEmailHook","onSignedInHook","onSignedOutHook","emailPattern","RegExp","config","options","VALID_KEYS","Object","keys","forEach","key","includes","Error","score","service","scope","Array","value","hook","path","exportDefault","loginButtonsSession","getLoginServices","hasPasswordService","loginResultCallback","capitalize","browserHistory","e","_loginButtonsSession","SIGN_IN","Symbol","SIGN_UP","PROFILE","PASSWORD_CHANGE","PASSWORD_RESET","ENROLL_ACCOUNT","services","Package","oauth","serviceNames","sort","map","name","err","LoginCancelledError","ServiceConfiguration","ConfigError","Meteor","isClient","window","location","href","email","showMessage","clearMessage","test","length","password","errMsg","username","formState","fieldName","history","setTimeout","FlowRouter","go","push","pushState","string","replace","split","word","charAt","toUpperCase","slice","join","validateKey","KEY_PREFIX","set","_set","Session","get","onPageLoadLogin","attemptInfo","type","error","doneCallback","onResetPasswordLink","token","done","onEnrollmentLink","onEmailVerificationLink","verifyEmail","loginWithoutPassword","callback","connection","call","Button","React","PropTypes","Link","render","props","label","disabled","className","onClick","Component","propTypes","func","Buttons","buttons","id","i","Field","state","mount","triggerUpdate","onChange","input","target","componentDidMount","componentDidUpdate","prevProps","setState","hint","required","defaultValue","message","ref","trim","Fields","fields","Form","ReactDOM","form","addEventListener","preventDefault","oauthServices","messages","translate","ready","object","isRequired","bool","FormMessage","isObject","obj","style","deprecated","console","warn","FormMessages","filter","createContainer","T9n","indexBy","array","result","waiting","user","bind","changeState","getDefaultFieldValues","componentWillReceiveProps","nextProps","nextContext","prevState","text","validateField","field","getUsernameOrEmailField","handleChange","getMessageForField","getUsernameField","getEmailField","getPasswordField","getSetPasswordField","getNewPasswordField","evt","setDefaultFieldValues","loginFields","assign","showPasswordChangeForm","showEnrollAccountForm","loginButtons","signOut","showCreateAccountLink","switchToSignUp","switchToSignIn","showForgotPasswordLink","switchToPasswordReset","switchToChangePassword","signUp","showSignInLink","signIn","passwordReset","passwordChange","switchToSignOut","cancelResetPassword","a","b","undefined","forbidClientAccountCreation","defaults","localStorage","setItem","JSON","stringify","defaultFieldValues","parse","getItem","clearDefaultFieldValues","removeItem","event","clearMessages","logout","usernameOrEmail","loginSelector","loginWithPassword","reason","oauthButtons","oauthSignIn","serviceName","capitalService","loginWithService","self","uuid","SignUp","createUser","promise","then","forgotPassword","newPassword","resetPassword","changePassword","clearTimeout","hideMessageTimout","find","componentWillMount","container","document","createElement","getElementsByClassName","componentWillUnmount","symbol","defaultProps","subscribe","PasswordOrService","labels","SocialButtons"],"mappings":"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","file":"/packages/std_accounts-ui.js","sourcesContent":["// import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\n//\n// checkNpmVersions({\n//   \"react\": \">=0.14.7 || ^15.0.0-rc.2\",\n//   \"react-dom\": \">=0.14.7 || ^15.0.0-rc.2\",\n// });\n","import { Accounts } from 'meteor/accounts-base';\nimport './imports/accounts_ui.js';\nimport './imports/login_session.js';\nimport { STATES }Â from './imports/helpers.js';\nimport './imports/api/client/loginWithoutPassword.js';\nimport LoginForm from './imports/ui/components/LoginForm.jsx';\n\nexport {\n  LoginForm as default,\n  Accounts,\n  STATES,\n};\n","import { Accounts } from 'meteor/accounts-base';\nimport {\n  redirect,\n  validatePassword,\n  validateEmail,\n  validateUsername,\n} from './helpers.js';\n\n/**\n * @summary Accounts UI\n * @namespace\n * @memberOf Accounts\n */\nAccounts.ui = {};\n\nAccounts.ui._options = {\n  requestPermissions: [],\n  requestOfflineToken: {},\n  forceApprovalPrompt: {},\n  requireEmailVerification: false,\n  passwordSignupFields: 'EMAIL_ONLY_NO_PASSWORD',\n  minimumPasswordLength: 7,\n  loginPath: '/',\n  signUpPath: null,\n  resetPasswordPath: null,\n  profilePath: '/',\n  changePasswordPath: null,\n  homeRoutePath: '/',\n  onSubmitHook: () => {},\n  onPreSignUpHook: () => new Promise(resolve => resolve()),\n  onPostSignUpHook: () => {},\n  onEnrollAccountHook: () => redirect(`${Accounts.ui._options.loginPath}`),\n  onResetPasswordHook: () => redirect(`${Accounts.ui._options.loginPath}`),\n  onVerifyEmailHook: () => redirect(`${Accounts.ui._options.profilePath}`),\n  onSignedInHook: () => redirect(`${Accounts.ui._options.homeRoutePath}`),\n  onSignedOutHook: () => redirect(`${Accounts.ui._options.homeRoutePath}`),\n  emailPattern: new RegExp('[^@]+@[^@\\.]{2,}\\.[^\\.@]+'),\n};\n\n/**\n * @summary Configure the behavior of [`<Accounts.ui.LoginForm />`](#react-accounts-ui).\n * @anywhere\n * @param {Object} options\n * @param {Object} options.requestPermissions Which [permissions](#requestpermissions) to request from the user for each external service.\n * @param {Object} options.requestOfflineToken To ask the user for permission to act on their behalf when offline, map the relevant external service to `true`. Currently only supported with Google. See [Meteor.loginWithExternalService](#meteor_loginwithexternalservice) for more details.\n * @param {Object} options.forceApprovalPrompt If true, forces the user to approve the app's permissions, even if previously approved. Currently only supported with Google.\n * @param {String} options.passwordSignupFields Which fields to display in the user creation form. One of '`USERNAME_AND_EMAIL`', '`USERNAME_AND_OPTIONAL_EMAIL`', '`USERNAME_ONLY`', '`EMAIL_ONLY`', or '`NO_PASSWORD`' (default).\n */\nAccounts.ui.config = function(options) {\n  // validate options keys\n  const VALID_KEYS = [\n    'passwordSignupFields',\n    'requestPermissions',\n    'requestOfflineToken',\n    'forbidClientAccountCreation',\n    'requireEmailVerification',\n    'minimumPasswordLength',\n    'loginPath',\n    'signUpPath',\n    'resetPasswordPath',\n    'profilePath',\n    'changePasswordPath',\n    'homeRoutePath',\n    'onSubmitHook',\n    'onPreSignUpHook',\n    'onPostSignUpHook',\n    'onEnrollAccountHook',\n    'onResetPasswordHook',\n    'onVerifyEmailHook',\n    'onSignedInHook',\n    'onSignedOutHook',\n    'validateField',\n    'emailPattern',\n  ];\n\n  Object.keys(options).forEach(function (key) {\n    if (!VALID_KEYS.includes(key))\n      throw new Error(\"Accounts.ui.config: Invalid key: \" + key);\n  });\n\n  // Deal with `passwordSignupFields`\n  if (options.passwordSignupFields) {\n    if ([\n      \"USERNAME_AND_EMAIL\",\n      \"USERNAME_AND_OPTIONAL_EMAIL\",\n      \"USERNAME_ONLY\",\n      \"EMAIL_ONLY\",\n      \"EMAIL_ONLY_NO_PASSWORD\",\n      \"USERNAME_AND_EMAIL_NO_PASSWORD\"\n    ].includes(options.passwordSignupFields)) {\n      Accounts.ui._options.passwordSignupFields = options.passwordSignupFields;\n    }\n    else {\n      throw new Error(\"Accounts.ui.config: Invalid option for `passwordSignupFields`: \" + options.passwordSignupFields);\n    }\n  }\n\n  // Deal with `requestPermissions`\n  if (options.requestPermissions) {\n    Object.keys(options.requestPermissions).forEach(service => {\n      const score = options.requestPermissions[service];\n      if (Accounts.ui._options.requestPermissions[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `requestPermissions` more than once for \" + service);\n      }\n      else if (!(scope instanceof Array)) {\n        throw new Error(\"Accounts.ui.config: Value for `requestPermissions` must be an array\");\n      }\n      else {\n        Accounts.ui._options.requestPermissions[service] = scope;\n      }\n    });\n  }\n\n  // Deal with `requestOfflineToken`\n  if (options.requestOfflineToken) {\n    Object.keys(options.requestOfflineToken).forEach(service => {\n      const value = options.requestOfflineToken[service];\n      if (service !== 'google')\n        throw new Error(\"Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.\");\n\n      if (Accounts.ui._options.requestOfflineToken[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \" + service);\n      }\n      else {\n        Accounts.ui._options.requestOfflineToken[service] = value;\n      }\n    });\n  }\n\n  // Deal with `forceApprovalPrompt`\n  if (options.forceApprovalPrompt) {\n    Object.keys(options.forceApprovalPrompt).forEach(service => {\n      const value = options.forceApprovalPrompt[service];\n      if (service !== 'google')\n        throw new Error(\"Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.\");\n\n      if (Accounts.ui._options.forceApprovalPrompt[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `forceApprovalPrompt` more than once for \" + service);\n      }\n      else {\n        Accounts.ui._options.forceApprovalPrompt[service] = value;\n      }\n    });\n  }\n\n  // Deal with `requireEmailVerification`\n  if (options.requireEmailVerification) {\n    if (typeof options.requireEmailVerification != 'boolean') {\n      throw new Error(`Accounts.ui.config: \"requireEmailVerification\" not a boolean`);\n    }\n    else {\n      Accounts.ui._options.requireEmailVerification = options.requireEmailVerification;\n    }\n  }\n\n  // Deal with `minimumPasswordLength`\n  if (options.minimumPasswordLength) {\n    if (typeof options.minimumPasswordLength != 'number') {\n      throw new Error(`Accounts.ui.config: \"minimumPasswordLength\" not a number`);\n    }\n    else {\n      Accounts.ui._options.minimumPasswordLength = options.minimumPasswordLength;\n    }\n  }\n\n  // Deal with the hooks.\n  for (let hook of [\n    'onSubmitHook',\n    'onPreSignUpHook',\n    'onPostSignUpHook',\n  ]) {\n    if (options[hook]) {\n      if (typeof options[hook] != 'function') {\n        throw new Error(`Accounts.ui.config: \"${hook}\" not a function`);\n      }\n      else {\n        Accounts.ui._options[hook] = options[hook];\n      }\n    }\n  }\n\n  // Deal with pattern.\n  for (let hook of [\n    'emailPattern',\n  ]) {\n    if (options[hook]) {\n      if (!(options[hook] instanceof RegExp)) {\n        throw new Error(`Accounts.ui.config: \"${hook}\" not a Regular Expression`);\n      }\n      else {\n        Accounts.ui._options[hook] = options[hook];\n      }\n    }\n  }\n\n  // deal with the paths.\n  for (let path of [\n    'loginPath',\n    'signUpPath',\n    'resetPasswordPath',\n    'profilePath',\n    'changePasswordPath',\n    'homeRoutePath'\n  ]) {\n    if (typeof options[path] !== 'undefined') {\n      if (options[path] !== null && typeof options[path] !== 'string') {\n        throw new Error(`Accounts.ui.config: ${path} is not a string or null`);\n      }\n      else {\n        Accounts.ui._options[path] = options[path];\n      }\n    }\n  }\n\n  // deal with redirect hooks.\n  for (let hook of [\n      'onEnrollAccountHook',\n      'onResetPasswordHook',\n      'onVerifyEmailHook',\n      'onSignedInHook',\n      'onSignedOutHook']) {\n    if (options[hook]) {\n      if (typeof options[hook] == 'function') {\n        Accounts.ui._options[hook] = options[hook];\n      }\n      else if (typeof options[hook] == 'string') {\n        Accounts.ui._options[hook] = () => redirect(options[hook]);\n      }\n      else {\n        throw new Error(`Accounts.ui.config: \"${hook}\" not a function or an absolute or relative path`);\n      }\n    }\n  }\n};\n\nexport default Accounts;\n","let browserHistory\ntry { browserHistory = require('react-router').browserHistory } catch(e) {}\nexport const loginButtonsSession = Accounts._loginButtonsSession;\nexport const STATES = {\n  SIGN_IN: Symbol('SIGN_IN'),\n  SIGN_UP: Symbol('SIGN_UP'),\n  PROFILE: Symbol('PROFILE'),\n  PASSWORD_CHANGE: Symbol('PASSWORD_CHANGE'),\n  PASSWORD_RESET: Symbol('PASSWORD_RESET'),\n  ENROLL_ACCOUNT: Symbol('ENROLL_ACCOUNT')\n};\n\nexport function getLoginServices() {\n  // First look for OAuth services.\n  const services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : [];\n\n  // Be equally kind to all login services. This also preserves\n  // backwards-compatibility.\n  services.sort();\n\n  return services.map(function(name){\n    return {name: name};\n  });\n};\n// Export getLoginServices using old style globals for accounts-base which\n// requires it.\nthis.getLoginServices = getLoginServices;\n\nexport function hasPasswordService() {\n  // First look for OAuth services.\n  return !!Package['accounts-password'];\n};\n\nexport function loginResultCallback(service, err) {\n  if (!err) {\n\n  } else if (err instanceof Accounts.LoginCancelledError) {\n    // do nothing\n  } else if (err instanceof ServiceConfiguration.ConfigError) {\n\n  } else {\n    //loginButtonsSession.errorMessage(err.reason || \"Unknown error\");\n  }\n\n  if (Meteor.isClient) {\n    if (typeof redirect === 'string'){\n      window.location.href = '/';\n    }\n\n    if (typeof service === 'function'){\n      service();\n    }\n  }\n};\n\nexport function passwordSignupFields() {\n  return Accounts.ui._options.passwordSignupFields || \"EMAIL_ONLY_NO_PASSWORD\";\n};\n\nexport function validateEmail(email, showMessage, clearMessage) {\n  if (passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\" && email === '') {\n    return true;\n  }\n  if (Accounts.ui._options.emailPattern.test(email)) {\n    return true;\n  } else if (!email || email.length === 0) {\n    showMessage(\"error.emailRequired\", 'warning', false, 'email');\n    return false;\n  } else {\n    showMessage(\"error.accounts.Invalid email\", 'warning', false, 'email');\n    return false;\n  }\n}\n\nexport function validatePassword(password = '', showMessage, clearMessage){\n  if (password.length >= Accounts.ui._options.minimumPasswordLength) {\n    return true;\n  } else {\n    // const errMsg = T9n.get(\"error.minChar\").replace(/7/, Accounts.ui._options.minimumPasswordLength);\n    const errMsg = \"error.minChar\"\n    showMessage(errMsg, 'warning', false, 'password');\n    return false;\n  }\n};\n\nexport function validateUsername(username, showMessage, clearMessage, formState) {\n  if ( username ) {\n    return true;\n  } else {\n    const fieldName = (passwordSignupFields() === 'USERNAME_ONLY' || formState === STATES.SIGN_UP) ? 'username' : 'usernameOrEmail';\n    showMessage(\"error.usernameRequired\", 'warning', false, fieldName);\n    return false;\n  }\n}\n\nexport function redirect(redirect) {\n  if (Meteor.isClient) {\n    if (window.history) {\n      // Run after all app specific redirects, i.e. to the login screen.\n      Meteor.setTimeout(() => {\n        if (Package['kadira:flow-router']) {\n          Package['kadira:flow-router'].FlowRouter.go(redirect);\n        } else if (Package['kadira:flow-router-ssr']) {\n          Package['kadira:flow-router-ssr'].FlowRouter.go(redirect);\n        } else if (browserHistory) {\n          browserHistory.push(redirect);\n        } else {\n          window.history.pushState( {} , 'redirect', redirect );\n        }\n      }, 100);\n    }\n  }\n}\n\nexport function capitalize(string) {\n  return string.replace(/\\-/, ' ').split(' ').map(word => {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }).join(' ');\n}\n","import {Accounts} from 'meteor/accounts-base';\nimport {\n  STATES,\n  loginResultCallback,\n  getLoginServices\n} from './helpers.js';\n\nconst VALID_KEYS = [\n  'dropdownVisible',\n\n  // XXX consider replacing these with one key that has an enum for values.\n  'inSignupFlow',\n  'inForgotPasswordFlow',\n  'inChangePasswordFlow',\n  'inMessageOnlyFlow',\n\n  'errorMessage',\n  'infoMessage',\n\n  // dialogs with messages (info and error)\n  'resetPasswordToken',\n  'enrollAccountToken',\n  'justVerifiedEmail',\n  'justResetPassword',\n\n  'configureLoginServiceDialogVisible',\n  'configureLoginServiceDialogServiceName',\n  'configureLoginServiceDialogSaveDisabled',\n  'configureOnDesktopVisible'\n];\n\nexport const validateKey = function (key) {\n  if (!VALID_KEYS.includes(key))\n    throw new Error(\"Invalid key in loginButtonsSession: \" + key);\n};\n\nexport const KEY_PREFIX = \"Meteor.loginButtons.\";\n\n// XXX This should probably be package scope rather than exported\n// (there was even a comment to that effect here from before we had\n// namespacing) but accounts-ui-viewer uses it, so leave it as is for\n// now\nAccounts._loginButtonsSession = {\n  set: function(key, value) {\n    validateKey(key);\n    if (['errorMessage', 'infoMessage'].includes(key))\n      throw new Error(\"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\");\n\n    this._set(key, value);\n  },\n\n  _set: function(key, value) {\n    Session.set(KEY_PREFIX + key, value);\n  },\n\n  get: function(key) {\n    validateKey(key);\n    return Session.get(KEY_PREFIX + key);\n  }\n};\n\nif (Meteor.isClient){\n  // In the login redirect flow, we'll have the result of the login\n  // attempt at page load time when we're redirected back to the\n  // application.  Register a callback to update the UI (i.e. to close\n  // the dialog on a successful login or display the error on a failed\n  // login).\n  //\n  Accounts.onPageLoadLogin(function (attemptInfo) {\n    // Ignore if we have a left over login attempt for a service that is no longer registered.\n    if (getLoginServices().map(({ name }) => name).includes(attemptInfo.type))\n      loginResultCallback(attemptInfo.type, attemptInfo.error);\n  });\n\n  let doneCallback;\n\n  Accounts.onResetPasswordLink(function (token, done) {\n    Accounts._loginButtonsSession.set('resetPasswordToken', token);\n    Session.set(KEY_PREFIX + 'state', 'resetPasswordToken');\n    doneCallback = done;\n\n    Accounts.ui._options.onResetPasswordHook();\n  });\n\n  Accounts.onEnrollmentLink(function (token, done) {\n    Accounts._loginButtonsSession.set('enrollAccountToken', token);\n    Session.set(KEY_PREFIX + 'state', 'enrollAccountToken');\n    doneCallback = done;\n\n    Accounts.ui._options.onEnrollAccountHook();\n  });\n\n  Accounts.onEmailVerificationLink(function (token, done) {\n    Accounts.verifyEmail(token, function (error) {\n      if (! error) {\n        Accounts._loginButtonsSession.set('justVerifiedEmail', true);\n        Session.set(KEY_PREFIX + 'state', 'justVerifiedEmail');\n        Accounts.ui._options.onSignedInHook();\n      }\n      else {\n        Accounts.ui._options.onVerifyEmailHook();\n      }\n\n      done();\n    });\n  });\n}\n","/**\n * @summary Request a forgot password email.\n * @locus Client\n * @param {Object} options\n * @param {String} options.email The email address to send a password reset link.\n * @param {Function} [callback] Optional callback. Called with no arguments on success, or with a single `Error` argument on failure.\n */\nAccounts.loginWithoutPassword = function(options, callback) {\n  if (!options.email)\n    throw new Error(\"Must pass options.email\");\n  Accounts.connection.call(\"loginWithoutPassword\", options, callback);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accounts } from 'meteor/accounts-base';\n\nlet Link;\ntry { Link = require('react-router').Link; } catch(e) {}\n\nexport class Button extends React.Component {\n  render () {\n    const {\n      label,\n      href = null,\n      type,\n      disabled = false,\n      className,\n      onClick\n    } = this.props;\n    if (type == 'link') {\n      // Support React Router.\n      if (Link && href) {\n        return <Link to={ href }Â className={ className }>{ label }</Link>;\n      } else {\n        return <aÂ href={ href }Â className={ className } onClick={ onClick }>{ label }</a>;\n      }\n    }\n    return <button className={ className }\n                   type={ type }Â \n                   disabled={ disabled }\n                   onClick={ onClick }>{ label }</button>;\n  }\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func\n};\n\nAccounts.ui.Button = Button;\n","import React from 'react';\nimport './Button.jsx';\nimport { Accounts } from 'meteor/accounts-base';\n\nexport class Buttons extends React.Component {\n  render () {\n    let { buttons = {}, className = \"buttons\" } = this.props;\n    return (\n      <div className={ className }>\n        {Object.keys(buttons).map((id, i) =>\n          <Accounts.ui.Button {...buttons[id]} key={i} />\n        )}\n      </div>\n    );\n  }\n};\n\nAccounts.ui.Buttons = Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accounts } from 'meteor/accounts-base';\n\nexport class Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mount: true\n    };\n  }\n\n  triggerUpdate() {\n    // Trigger an onChange on inital load, to support browser prefilled values.\n    const { onChange } = this.props;\n    if (this.input && onChange) {\n      onChange({ target: { value: this.input.value } });\n    }\n  }\n\n  componentDidMount() {\n    this.triggerUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Re-mount component so that we don't expose browser prefilled passwords if the component was\n    // a password before and now something else.\n    if (prevProps.id !== this.props.id) {\n      this.setState({mount: false});\n    }\n    else if (!this.state.mount) {\n      this.setState({mount: true});\n      this.triggerUpdate();\n    }\n  }\n\n  render() {\n    const {\n      id,\n      hint,\n      label,\n      type = 'text',\n      onChange,\n      required = false,\n      className = \"field\",\n      defaultValue = \"\",\n      message,\n    } = this.props;\n    const { mount = true } = this.state;\n    if (type == 'notice') {\n      return <div className={ className }>{ label }</div>;\n    }\n    return mount ? (\n      <div className={ className }>\n        <label htmlFor={ id }>{ label }</label>\n        <input\n          id={ id }\n          ref={ (ref) => this.input = ref }\n          type={ type }\n          onChange={ onChange }\n          placeholder={ hint }\n          defaultValue={ defaultValue }\n        />\n        {message && (\n          <span className={['message', message.type].join(' ').trim()}>\n            {message.message}</span>\n        )}\n      </div>\n    ) : null;\n  }\n}\n\nField.propTypes = {\n  onChange: PropTypes.func\n};\n\nAccounts.ui.Field = Field;\n","import React from 'react';\nimport { Accounts } from 'meteor/accounts-base';\nimport './Field.jsx';\n\nexport class Fields extends React.Component {\n  render () {\n    let { fields = {}, className = \"fields\" } = this.props;\n    return (\n      <div className={ className }>\n        {Object.keys(fields).map((id, i) =>\n          <Accounts.ui.Field {...fields[id]} key={i} />\n        )}\n      </div>\n    );\n  }\n}\n\nAccounts.ui.Fields = Fields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport './Fields.jsx';\nimport './Buttons.jsx';\nimport './FormMessage.jsx';\nimport './PasswordOrService.jsx';\nimport './SocialButtons.jsx';\nimport './FormMessages.jsx';\n\nexport class Form extends React.Component {\n  componentDidMount() {\n    let form = this.form;\n    if (form) {\n      form.addEventListener('submit', (e) => {\n        e.preventDefault();\n      });\n    }\n  }\n\n  render() {\n    const {\n      hasPasswordService,\n      oauthServices,\n      fields,\n      buttons,\n      error,\n      messages,\n      translate,\n      ready = true,\n      className\n    } = this.props;\n    return (\n      <form\n        ref={(ref) => this.form = ref}\n        className={[className, ready ? \"ready\" : null].join(' ')}\n        className=\"accounts-ui\"\n        noValidate\n      >\n        <Accounts.ui.Fields fields={ fields } />\n        <Accounts.ui.Buttons buttons={ buttons } />\n        <Accounts.ui.PasswordOrService oauthServices={ oauthServices } translate={ translate } />\n        <Accounts.ui.SocialButtons oauthServices={ oauthServices } />\n        <Accounts.ui.FormMessages messages={messages} />\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  oauthServices: PropTypes.object,\n  fields: PropTypes.object.isRequired,\n  buttons: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  ready: PropTypes.bool\n};\n\nAccounts.ui.Form = Form;\n","import React from 'react';\nimport { Accounts } from 'meteor/accounts-base';\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\nexport class FormMessage extends React.Component {\n  render () {\n    let { message, type, className = \"message\", style = {}, deprecated } = this.props;\n    // XXX Check for deprecations.\n    if (deprecated) {\n      // Found backwords compatibility issue.\n      console.warn('You are overriding Accounts.ui.Form and using FormMessage, the use of FormMessage in Form has been depreacted in v1.2.11, update your implementation to use FormMessages: https://github.com/studiointeract/accounts-ui/#deprecations');\n    }\n    message = isObject(message) ? message.message : message; // If message is object, then try to get message from it\n    return message ? (\n      <div style={ style }Â \n           className={[ className, type ].join(' ')}>{ message }</div>\n    ) : null;\n  }\n}\n\nAccounts.ui.FormMessage = FormMessage;\n","import React, {Â Component } from 'react';\nimport { Accounts } from 'meteor/accounts-base';\n\nexport class FormMessages extends Component {\n  render () {\n    const { messages = [], className = \"messages\", style = {} } = this.props;\n    return messages.length > 0 && (\n      <div className=\"messages\">\n        {messages\n          .filter(message => !('field' in message))\n          .map(({Â message, type }, i) =>\n          <Accounts.ui.FormMessage\n            message={message}\n            type={type}\n            key={i}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nAccounts.ui.FormMessages = FormMessages;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { Accounts } from 'meteor/accounts-base';\nimport { T9n } from 'meteor/softwarerero:accounts-t9n';\nimport {Â KEY_PREFIX } from '../../login_session.js';\nimport './Form.jsx';\n\nimport {\n  STATES,\n  passwordSignupFields,\n  validateEmail,\n  validatePassword,\n  validateUsername,\n  loginResultCallback,\n  getLoginServices,\n  hasPasswordService,\n  capitalize\n} from '../../helpers.js';\n\nfunction indexBy(array, key) {\n  const result = {};\n  array.forEach(function(obj) {\n    result[obj[key]] = obj;\n  });\n  return result;\n}\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    let {\n      formState,\n      loginPath,\n      signUpPath,\n      resetPasswordPath,\n      profilePath,\n      changePasswordPath\n    } = props;\n\n    if (formState === STATES.SIGN_IN && Package['accounts-password']) {\n      console.warn('Do not force the state to SIGN_IN on Accounts.ui.LoginForm, it will make it impossible to reset password in your app, this state is also the default state if logged out, so no need to force it.');\n    }\n\n    // Set inital state.\n    this.state = {\n      messages: [],\n      waiting: true,\n      formState: formState ? formState : Accounts.user() ? STATES.PROFILE : STATES.SIGN_IN,\n      onSubmitHook: props.onSubmitHook || Accounts.ui._options.onSubmitHook,\n      onSignedInHook: props.onSignedInHook || Accounts.ui._options.onSignedInHook,\n      onSignedOutHook: props.onSignedOutHook || Accounts.ui._options.onSignedOutHook,\n      onPreSignUpHook: props.onPreSignUpHook || Accounts.ui._options.onPreSignUpHook,\n      onPostSignUpHook: props.onPostSignUpHook || Accounts.ui._options.onPostSignUpHook,\n    };\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(prevState => ({ waiting: false, ready: true }));\n    let changeState = Session.get(KEY_PREFIX + 'state');\n    switch (changeState) {\n      case 'enrollAccountToken':\n        this.setState(prevState => ({\n          formState: STATES.ENROLL_ACCOUNT\n        }));\n        Session.set(KEY_PREFIX + 'state', null);\n        break;\n      case 'resetPasswordToken':\n        this.setState(prevState => ({\n          formState: STATES.PASSWORD_CHANGE\n        }));\n        Session.set(KEY_PREFIX + 'state', null);\n        break;\n\n      case 'justVerifiedEmail':\n        this.setState(prevState => ({\n          formState: STATES.PROFILE\n        }));\n        Session.set(KEY_PREFIX + 'state', null);\n        break;\n    }\n\n    // Add default field values once the form did mount on the client\n    this.setState(prevState => ({\n      ...this.getDefaultFieldValues(),\n    }));\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.formState && nextProps.formState !== this.state.formState) {\n      this.setState({\n        formState: nextProps.formState,\n        ...this.getDefaultFieldValues(),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!prevProps.user !== !this.props.user) {\n      this.setState({\n        formState: this.props.user ? STATES.PROFILE : STATES.SIGN_IN\n      });\n    }\n  }\n\n  translate(text) {\n    // if (this.props.t) {\n    //   return this.props.t(text);\n    // }\n    return T9n.get(text);\n  }\n\n  validateField(field, value) {\n    const { formState } = this.state;\n    switch(field) {\n      case 'email':\n        return validateEmail(value,\n          this.showMessage.bind(this),\n          this.clearMessage.bind(this),\n        );\n      case 'password':\n        return validatePassword(value,\n          this.showMessage.bind(this),\n          this.clearMessage.bind(this),\n        );\n      case 'username':\n        return validateUsername(value,\n          this.showMessage.bind(this),\n          this.clearMessage.bind(this),\n          formState,\n        );\n    }\n  }\n\n  getUsernameOrEmailField() {\n    return {\n      id: 'usernameOrEmail',\n      hint: this.translate('enterUsernameOrEmail'),\n      label: this.translate('usernameOrEmail'),\n      required: true,\n      defaultValue: this.state.username || \"\",\n      onChange: this.handleChange.bind(this, 'usernameOrEmail'),\n      message: this.getMessageForField('usernameOrEmail'),\n    };\n  }\n\n  getUsernameField() {\n    return {\n      id: 'username',\n      hint: this.translate('enterUsername'),\n      label: this.translate('username'),\n      required: true,\n      defaultValue: this.state.username || \"\",\n      onChange: this.handleChange.bind(this, 'username'),\n      message: this.getMessageForField('username'),\n    };\n  }\n\n  getEmailField() {\n    return {\n      id: 'email',\n      hint: this.translate('enterEmail'),\n      label: this.translate('email'),\n      type: 'email',\n      required: true,\n      defaultValue: this.state.email || \"\",\n      onChange: this.handleChange.bind(this, 'email'),\n      message: this.getMessageForField('email'),\n    };\n  }\n\n  getPasswordField() {\n    return {\n      id: 'password',\n      hint: this.translate('enterPassword'),\n      label: this.translate('password'),\n      type: 'password',\n      required: true,\n      defaultValue: this.state.password || \"\",\n      onChange: this.handleChange.bind(this, 'password'),\n      message: this.getMessageForField('password'),\n    };\n  }\n\n  getSetPasswordField() {\n    return {\n      id: 'newPassword',\n      hint: this.translate('enterPassword'),\n      label: this.translate('choosePassword'),\n      type: 'password',\n      required: true,\n      onChange: this.handleChange.bind(this, 'newPassword')\n    };\n  }\n\n  getNewPasswordField() {\n    return {\n      id: 'newPassword',\n      hint: this.translate('enterNewPassword'),\n      label: this.translate('newPassword'),\n      type: 'password',\n      required: true,\n      onChange: this.handleChange.bind(this, 'newPassword'),\n      message: this.getMessageForField('newPassword'),\n    };\n  }\n\n  handleChange(field, evt) {\n    let value = evt.target.value;\n    switch (field) {\n      case 'password': break;\n      default:\n        value = value.trim();\n        break;\n    }\n    this.setState({ [field]: value });\n    this.setDefaultFieldValues({Â [field]: value });\n  }\n\n  fields() {\n    const loginFields = [];\n    const { formState } = this.state;\n\n    if (!hasPasswordService() && getLoginServices().length == 0) {\n      loginFields.push({\n        label: 'No login service added, i.e. accounts-password',\n        type: 'notice'\n      });\n    }\n\n    if (hasPasswordService() && formState == STATES.SIGN_IN) {\n      if ([\n        \"USERNAME_AND_EMAIL\",\n        \"USERNAME_AND_OPTIONAL_EMAIL\",\n        \"USERNAME_AND_EMAIL_NO_PASSWORD\"\n      ].includes(passwordSignupFields())) {\n        loginFields.push(this.getUsernameOrEmailField());\n      }\n\n      if (passwordSignupFields() === \"USERNAME_ONLY\") {\n        loginFields.push(this.getUsernameField());\n      }\n\n      if ([\n        \"EMAIL_ONLY\",\n        \"EMAIL_ONLY_NO_PASSWORD\"\n      ].includes(passwordSignupFields())) {\n        loginFields.push(this.getEmailField());\n      }\n\n      if (![\n        \"EMAIL_ONLY_NO_PASSWORD\",\n        \"USERNAME_AND_EMAIL_NO_PASSWORD\"\n      ].includes(passwordSignupFields())) {\n        loginFields.push(this.getPasswordField());\n      }\n    }\n\n    if (hasPasswordService() && formState == STATES.SIGN_UP) {\n      if ([\n        \"USERNAME_AND_EMAIL\",\n        \"USERNAME_AND_OPTIONAL_EMAIL\",\n        \"USERNAME_ONLY\",\n        \"USERNAME_AND_EMAIL_NO_PASSWORD\"\n      ].includes(passwordSignupFields())) {\n        loginFields.push(this.getUsernameField());\n      }\n\n      if ([\n        \"USERNAME_AND_EMAIL\",\n        \"EMAIL_ONLY\",\n        \"EMAIL_ONLY_NO_PASSWORD\",\n        \"USERNAME_AND_EMAIL_NO_PASSWORD\"\n      ].includes(passwordSignupFields())) {\n        loginFields.push(this.getEmailField());\n      }\n\n      if ([\"USERNAME_AND_OPTIONAL_EMAIL\"].includes(passwordSignupFields())) {\n        loginFields.push(Object.assign(this.getEmailField(), {required: false}));\n      }\n\n      if (![\n        \"EMAIL_ONLY_NO_PASSWORD\",\n        \"USERNAME_AND_EMAIL_NO_PASSWORD\"\n      ].includes(passwordSignupFields())) {\n        loginFields.push(this.getPasswordField());\n      }\n    }\n\n    if (formState == STATES.PASSWORD_RESET) {\n      loginFields.push(this.getEmailField());\n    }\n\n    if (this.showPasswordChangeForm()) {\n      if (Meteor.isClient && !Accounts._loginButtonsSession.get('resetPasswordToken')) {\n        loginFields.push(this.getPasswordField());\n      }\n      loginFields.push(this.getNewPasswordField());\n    }\n\n    if (this.showEnrollAccountForm()) {\n      loginFields.push(this.getSetPasswordField());\n    }\n    return indexBy(loginFields, 'id');\n  }\n\n  buttons() {\n    const {\n      loginPath = Accounts.ui._options.loginPath,\n      signUpPath = Accounts.ui._options.signUpPath,\n      resetPasswordPath = Accounts.ui._options.resetPasswordPath,\n      changePasswordPath = Accounts.ui._options.changePasswordPath,\n      profilePath = Accounts.ui._options.profilePath,\n    } = this.props;\n    const { user } = this.props;\n    const { formState, waiting } = this.state;\n    let loginButtons = [];\n\n    if (user && formState == STATES.PROFILE) {\n      loginButtons.push({\n        id: 'signOut',\n        label: this.translate('signOut'),\n        disabled: waiting,\n        onClick: this.signOut.bind(this)\n      });\n    }\n\n    if (this.showCreateAccountLink()) {\n      loginButtons.push({\n        id: 'switchToSignUp',\n        label: this.translate('signUp'),\n        type: 'link',\n        href: signUpPath,\n        onClick: this.switchToSignUp.bind(this)\n      });\n    }\n\n    if (formState == STATES.SIGN_UP || formState == STATES.PASSWORD_RESET) {\n      loginButtons.push({\n        id: 'switchToSignIn',\n        label: this.translate('signIn'),\n        type: 'link',\n        href: loginPath,\n        onClick: this.switchToSignIn.bind(this)\n      });\n    }\n\n    if (this.showForgotPasswordLink()) {\n      loginButtons.push({\n        id: 'switchToPasswordReset',\n        label: this.translate('forgotPassword'),\n        type: 'link',\n        href: resetPasswordPath,\n        onClick: this.switchToPasswordReset.bind(this)\n      });\n    }\n\n    if (user && ![\n        \"EMAIL_ONLY_NO_PASSWORD\",\n        \"USERNAME_AND_EMAIL_NO_PASSWORD\"\n      ].includes(passwordSignupFields())\n      && formState == STATES.PROFILE\n      && (user.services && 'password' in user.services)) {\n      loginButtons.push({\n        id: 'switchToChangePassword',\n        label: this.translate('changePassword'),\n        type: 'link',\n        href: changePasswordPath,\n        onClick: this.switchToChangePassword.bind(this)\n      });\n    }\n\n    if (formState == STATES.SIGN_UP) {\n      loginButtons.push({\n        id: 'signUp',\n        label: this.translate('signUp'),\n        type: hasPasswordService() ? 'submit' : 'link',\n        className: 'active',\n        disabled: waiting,\n        onClick: hasPasswordService() ? this.signUp.bind(this, {}) : null\n      });\n    }\n\n    if (this.showSignInLink()) {\n      loginButtons.push({\n        id: 'signIn',\n        label: this.translate('signIn'),\n        type: hasPasswordService() ? 'submit' : 'link',\n        className: 'active',\n        disabled: waiting,\n        onClick: hasPasswordService() ? this.signIn.bind(this) : null\n      });\n    }\n\n    if (formState == STATES.PASSWORD_RESET) {\n      loginButtons.push({\n        id: 'emailResetLink',\n        label: this.translate('resetYourPassword'),\n        type: 'submit',\n        disabled: waiting,\n        onClick: this.passwordReset.bind(this)\n      });\n    }\n\n    if (this.showPasswordChangeForm() || this.showEnrollAccountForm()) {\n      loginButtons.push({\n        id: 'changePassword',\n        label: (this.showPasswordChangeForm() ? this.translate('changePassword') : this.translate('setPassword')),\n        type: 'submit',\n        disabled: waiting,\n        onClick: this.passwordChange.bind(this)\n      });\n\n      if (Accounts.user()) {\n        loginButtons.push({\n          id: 'switchToSignOut',\n          label: this.translate('cancel'),\n          type: 'link',\n          href: profilePath,\n          onClick: this.switchToSignOut.bind(this)\n        });\n      } else {\n        loginButtons.push({\n          id: 'cancelResetPassword',\n          label: this.translate('cancel'),\n          type: 'link',\n          onClick: this.cancelResetPassword.bind(this),\n        });\n      }\n    }\n\n    // Sort the button array so that the submit button always comes first, and\n    // buttons should also come before links.\n    loginButtons.sort((a, b) => {\n      return (\n        b.type == 'submit' &&\n        a.type != undefined) - (\n          a.type == 'submit' &&\n          b.type != undefined);\n    });\n\n    return indexBy(loginButtons, 'id');\n  }\n\n  showSignInLink(){\n    return this.state.formState == STATES.SIGN_IN && Package['accounts-password'];\n  }\n\n  showPasswordChangeForm() {\n    return(Package['accounts-password']\n      && this.state.formState == STATES.PASSWORD_CHANGE);\n  }\n\n  showEnrollAccountForm() {\n    return(Package['accounts-password']\n      && this.state.formState == STATES.ENROLL_ACCOUNT);\n  }\n\n  showCreateAccountLink() {\n    return this.state.formState == STATES.SIGN_IN && !Accounts._options.forbidClientAccountCreation && Package['accounts-password'];\n  }\n\n  showForgotPasswordLink() {\n    return !this.props.user\n      && this.state.formState == STATES.SIGN_IN\n      && [\"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"EMAIL_ONLY\"].includes(passwordSignupFields());\n  }\n\n  /**\n   * Helper to store field values while using the form.\n   */\n  setDefaultFieldValues(defaults) {\n    if (typeof defaults !== 'object') {\n      throw new Error('Argument to setDefaultFieldValues is not of type object');\n    } else if (typeof localStorage !== 'undefined' && localStorage) {\n      localStorage.setItem('accounts_ui', JSON.stringify({\n        passwordSignupFields: passwordSignupFields(),\n        ...this.getDefaultFieldValues(),\n        ...defaults,\n      }));\n    }\n  }\n\n  /**\n   * Helper to get field values when switching states in the form.\n   */\n  getDefaultFieldValues() {\n    if (typeof localStorage !== 'undefined' && localStorage) {\n      const defaultFieldValues = JSON.parse(localStorage.getItem('accounts_ui') || null);\n      if (defaultFieldValues\n        && defaultFieldValues.passwordSignupFields === passwordSignupFields()) {\n        return defaultFieldValues;\n      }\n    }\n  }\n\n  /**\n   * Helper to clear field values when signing in, up or out.\n   */\n  clearDefaultFieldValues() {\n    if (typeof localStorage !== 'undefined' && localStorage) {\n      localStorage.removeItem('accounts_ui');\n    }\n  }\n\n  switchToSignUp(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.SIGN_UP,\n      ...this.getDefaultFieldValues(),\n    });\n    this.clearMessages();\n  }\n\n  switchToSignIn(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.SIGN_IN,\n      ...this.getDefaultFieldValues(),\n    });\n    this.clearMessages();\n  }\n\n  switchToPasswordReset(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.PASSWORD_RESET,\n      ...this.getDefaultFieldValues(),\n    });\n    this.clearMessages();\n  }\n\n  switchToChangePassword(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.PASSWORD_CHANGE,\n      ...this.getDefaultFieldValues(),\n    });\n    this.clearMessages();\n  }\n\n  switchToSignOut(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.PROFILE,\n    });\n    this.clearMessages();\n  }\n\n  cancelResetPassword(event) {\n    event.preventDefault();\n    Accounts._loginButtonsSession.set('resetPasswordToken', null);\n    this.setState({\n      formState: STATES.SIGN_IN,\n      messages: [],\n    });\n  }\n\n  signOut() {\n    Meteor.logout(() => {\n      this.setState({\n        formState: STATES.SIGN_IN,\n        password: null,\n      });\n      this.state.onSignedOutHook();\n      this.clearMessages();\n      this.clearDefaultFieldValues();\n    });\n  }\n\n  signIn() {\n    const {\n      username = null,\n      email = null,\n      usernameOrEmail = null,\n      password,\n      formState,\n      onSubmitHook\n    }Â = this.state;\n    let error = false;\n    let loginSelector;\n    this.clearMessages();\n\n    if (usernameOrEmail !== null) {\n      if (!this.validateField('username', usernameOrEmail)) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook(\"error.accounts.usernameRequired\", this.state.formState);\n        }\n        error = true;\n      }\n      else {\n        if ([\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(passwordSignupFields())) {\n          this.loginWithoutPassword();\n          return;\n        } else {\n          loginSelector = usernameOrEmail;\n        }\n      }\n    } else if (username !== null) {\n      if (!this.validateField('username', username)) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook(\"error.accounts.usernameRequired\", this.state.formState);\n        }\n        error = true;\n      }\n      else {\n        loginSelector = { username: username };\n      }\n    }\n    else if (usernameOrEmail == null) {\n      if (!this.validateField('email', email)) {\n        error = true;\n      }\n      else {\n        if ([\"EMAIL_ONLY_NO_PASSWORD\"].includes(passwordSignupFields())) {\n          this.loginWithoutPassword();\n          error = true;\n        } else {\n          loginSelector = { email };\n        }\n      }\n    }\n    if (![\"EMAIL_ONLY_NO_PASSWORD\"].includes(passwordSignupFields())\n      && !this.validateField('password', password)) {\n      error = true;\n    }\n\n    if (!error) {\n      Meteor.loginWithPassword(loginSelector, password, (error, result) => {\n        onSubmitHook(error,formState);\n        if (error) {\n          this.showMessage(`error.accounts.${error.reason}` || \"unknown_error\", 'error');\n        }\n        else {\n          loginResultCallback(() => this.state.onSignedInHook());\n          this.setState({\n            formState: STATES.PROFILE,\n            password: null,\n          });\n          this.clearDefaultFieldValues();\n        }\n      });\n    }\n  }\n\n  oauthButtons() {\n    const { formState, waiting } = this.state;\n    let oauthButtons = [];\n    if (formState == STATES.SIGN_IN || formState == STATES.SIGN_UP ) {\n      if(Accounts.oauth) {\n        Accounts.oauth.serviceNames().map((service) => {\n          oauthButtons.push({\n            id: service,\n            label: capitalize(service),\n            disabled: waiting,\n            type: 'button',\n            className: `btn-${service} ${service}`,\n            onClick: this.oauthSignIn.bind(this, service)\n          });\n        });\n      }\n    }\n    return indexBy(oauthButtons, 'id');\n  }\n\n  oauthSignIn(serviceName) {\n    const { user } = this.props;\n    const { formState, waiting, onSubmitHook } = this.state;\n    //Thanks Josh Owens for this one.\n    function capitalService() {\n      return serviceName.charAt(0).toUpperCase() + serviceName.slice(1);\n    }\n\n    if(serviceName === 'meteor-developer'){\n      serviceName = 'meteorDeveloperAccount';\n    }\n\n    const loginWithService = Meteor[\"loginWith\" + capitalService()];\n\n    let options = {}; // use default scope unless specified\n    if (Accounts.ui._options.requestPermissions[serviceName])\n      options.requestPermissions = Accounts.ui._options.requestPermissions[serviceName];\n    if (Accounts.ui._options.requestOfflineToken[serviceName])\n      options.requestOfflineToken = Accounts.ui._options.requestOfflineToken[serviceName];\n    if (Accounts.ui._options.forceApprovalPrompt[serviceName])\n      options.forceApprovalPrompt = Accounts.ui._options.forceApprovalPrompt[serviceName];\n\n    this.clearMessages();\n    const self = this\n    loginWithService(options, (error) => {\n      onSubmitHook(error,formState);\n      if (error) {\n        this.showMessage(`error.accounts.${error.reason}` || \"unknown_error\");\n      } else {\n        this.setState({ formState: STATES.PROFILE });\n        this.clearDefaultFieldValues();\n        loginResultCallback(() => {\n          Meteor.setTimeout(() => this.state.onSignedInHook(), 100);\n        });\n      }\n    });\n\n  }\n\n  signUp(options = {}) {\n    const {\n      username = null,\n      email = null,\n      usernameOrEmail = null,\n      password,\n      formState,\n      onSubmitHook\n    }Â = this.state;\n    let error = false;\n    this.clearMessages();\n\n    if (username !== null) {\n      if ( !this.validateField('username', username) ) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook(\"error.accounts.usernameRequired\", this.state.formState);\n        }\n        error = true;\n      } else {\n        options.username = username;\n      }\n    } else {\n      if ([\n        \"USERNAME_AND_EMAIL\",\n        \"USERNAME_AND_EMAIL_NO_PASSWORD\"\n      ].includes(passwordSignupFields()) && !this.validateField('username', username) ) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook(\"error.accounts.usernameRequired\", this.state.formState);\n        }\n        error = true;\n      }\n    }\n\n    if (!this.validateField('email', email)){\n      error = true;\n    } else {\n      options.email = email;\n    }\n\n    if ([\n      \"EMAIL_ONLY_NO_PASSWORD\",\n      \"USERNAME_AND_EMAIL_NO_PASSWORD\"\n    ].includes(passwordSignupFields())) {\n      // Generate a random password.\n      options.password = Meteor.uuid();\n    } else if (!this.validateField('password', password)) {\n      onSubmitHook(\"Invalid password\", formState);\n      error = true;\n    } else {\n      options.password = password;\n    }\n\n    const SignUp = function(_options) {\n      Accounts.createUser(_options, (error) => {\n        if (error) {\n          this.showMessage(`error.accounts.${error.reason}` || \"unknown_error\", 'error');\n          if (this.translate(`error.accounts.${error.reason}`)) {\n            onSubmitHook(`error.accounts.${error.reason}`, formState);\n          }\n          else {\n            onSubmitHook(\"unknown_error\", formState);\n          }\n        }\n        else {\n          onSubmitHook(null, formState);\n          this.setState({ formState: STATES.PROFILE, password: null });\n          let user = Accounts.user();\n          loginResultCallback(this.state.onPostSignUpHook.bind(this, _options, user));\n          this.clearDefaultFieldValues();\n        }\n\n        this.setState({ waiting: false });\n      });\n    };\n\n    if (!error) {\n      this.setState({ waiting: true });\n      // Allow for Promises to return.\n      let promise = this.state.onPreSignUpHook(options);\n      if (promise instanceof Promise) {\n        promise.then(SignUp.bind(this, options));\n      }\n      else {\n        SignUp(options);\n      }\n    }\n  }\n\n  loginWithoutPassword(){\n    const {\n      email = '',\n      usernameOrEmail = '',\n      waiting,\n      formState,\n      onSubmitHook\n    }Â = this.state;\n\n    if (waiting) {\n      return;\n    }\n\n    if (this.validateField('email', email)) {\n      this.setState({ waiting: true });\n\n      Accounts.loginWithoutPassword({ email: email }, (error) => {\n        if (error) {\n          this.showMessage(`error.accounts.${error.reason}` || \"unknown_error\", 'error');\n        }\n        else {\n          this.showMessage(this.translate(\"info.emailSent\"), 'success', 5000);\n          this.clearDefaultFieldValues();\n        }\n        onSubmitHook(error, formState);\n        this.setState({ waiting: false });\n      });\n    } else if (this.validateField('username', usernameOrEmail)) {\n      this.setState({ waiting: true });\n\n      Accounts.loginWithoutPassword({ email: usernameOrEmail, username: usernameOrEmail }, (error) => {\n        if (error) {\n          this.showMessage(`error.accounts.${error.reason}` || \"unknown_error\", 'error');\n        }\n        else {\n          this.showMessage(this.translate(\"info.emailSent\"), 'success', 5000);\n          this.clearDefaultFieldValues();\n        }\n        onSubmitHook(error, formState);\n        this.setState({ waiting: false });\n      });\n    } else {\n      let errMsg = null;\n      if ([\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(passwordSignupFields())) {\n        errMsg = this.translate(\"error.accounts.invalid_email\");\n      }\n      else {\n        errMsg = this.translate(\"error.accounts.invalid_email\");\n      }\n      this.showMessage(errMsg,'warning');\n      onSubmitHook(errMsg, formState);\n    }\n  }\n\n  passwordReset() {\n    const {\n      email = '',\n      waiting,\n      formState,\n      onSubmitHook\n    }Â = this.state;\n\n    if (waiting) {\n      return;\n    }\n\n    this.clearMessages();\n    if (this.validateField('email', email)) {\n      this.setState({ waiting: true });\n\n      Accounts.forgotPassword({ email: email }, (error) => {\n        if (error) {\n          this.showMessage(`error.accounts.${error.reason}` || \"unknown_error\", 'error');\n        }\n        else {\n          this.showMessage(this.translate(\"info.emailSent\"), 'success', 5000);\n          this.clearDefaultFieldValues();\n        }\n        onSubmitHook(error, formState);\n        this.setState({ waiting: false });\n      });\n    }\n  }\n\n  passwordChange() {\n    const {\n      password,\n      newPassword,\n      formState,\n      onSubmitHook,\n      onSignedInHook,\n    }Â = this.state;\n\n    if (!this.validateField('password', newPassword)){\n      onSubmitHook('err.minChar',formState);\n      return;\n    }\n\n    let token = Accounts._loginButtonsSession.get('resetPasswordToken');\n    if (!token) {\n      token = Accounts._loginButtonsSession.get('enrollAccountToken');\n    }\n    if (token) {\n      Accounts.resetPassword(token, newPassword, (error) => {\n        if (error) {\n          this.showMessage(`error.accounts.${error.reason}` || \"unknown_error\", 'error');\n          onSubmitHook(error, formState);\n        }\n        else {\n          this.showMessage(this.translate('info.passwordChanged'), 'success', 5000);\n          onSubmitHook(null, formState);\n          this.setState({ formState: STATES.PROFILE });\n          Accounts._loginButtonsSession.set('resetPasswordToken', null);\n          Accounts._loginButtonsSession.set('enrollAccountToken', null);\n          onSignedInHook();\n        }\n      });\n    }\n    else {\n      Accounts.changePassword(password, newPassword, (error) => {\n        if (error) {\n          this.showMessage(`error.accounts.${error.reason}` || \"unknown_error\", 'error');\n          onSubmitHook(error, formState);\n        }\n        else {\n          this.showMessage('info.passwordChanged', 'success', 5000);\n          onSubmitHook(null, formState);\n          this.setState({ formState: STATES.PROFILE });\n          this.clearDefaultFieldValues();\n        }\n      });\n    }\n  }\n\n  showMessage(message, type, clearTimeout, field){\n    message = this.translate(message).trim();\n    if (message) {\n      this.setState(({Â messages = [] }) => {\n        messages.push({\n          message,\n          type,\n          ...(field && {Â fieldÂ }),\n        });\n        return  {Â messages };\n      });\n      if (clearTimeout) {\n        this.hideMessageTimout = setTimeout(() => {\n          // Filter out the message that timed out.\n          this.clearMessage(message);\n        }, clearTimeout);\n      }\n    }\n  }\n\n  getMessageForField(field) {\n    const {Â messages = [] } = this.state;\n    return messages.find(({Â field:key }) => key === field);\n  }\n\n  clearMessage(message) {\n    if (message) {\n      this.setState(({Â messages = []Â }) => ({\n        messages: messages.filter(({Â message:a }) => a !== message),\n      }));\n    }\n  }\n\n  clearMessages() {\n    if (this.hideMessageTimout) {\n      clearTimeout(this.hideMessageTimout);\n    }\n    this.setState({ messages: [] });\n  }\n\n  componentWillMount() {\n    // XXX Check for backwards compatibility.\n    if (Meteor.isClient) {\n      const container = document.createElement('div');\n      ReactDOM.render(<Accounts.ui.Field message=\"test\" />, container);\n      if (container.getElementsByClassName('message').length == 0) {\n        // Found backwards compatibility issue with 1.3.x\n        console.warn(`Implementations of Accounts.ui.Field must render message in v1.2.11.\n          https://github.com/studiointeract/accounts-ui/#deprecations`);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.hideMessageTimout) {\n      clearTimeout(this.hideMessageTimout);\n    }\n  }\n\n  render() {\n    this.oauthButtons();\n    // Backwords compatibility with v1.2.x.\n    const {Â messages = [] }Â = this.state;\n    const message = {\n      deprecated: true,\n      message: messages.map(({Â message }) => message).join(', '),\n    };\n    return (\n      <Accounts.ui.Form\n        oauthServices={this.oauthButtons()}\n        fields={this.fields()}Â \n        buttons={this.buttons()}\n        {...this.state}\n        message={message}\n        translate={text => this.translate(text)}\n      />\n    );\n  }\n}\nLoginForm.propTypes = {\n  formState: PropTypes.symbol,\n  loginPath: PropTypes.string,\n  signUpPath: PropTypes.string,\n  resetPasswordPath: PropTypes.string,\n  profilePath: PropTypes.string,\n  changePasswordPath: PropTypes.string,\n};\nLoginForm.defaultProps = {\n  formState: null,\n  loginPath: null,\n  signUpPath: null,\n  resetPasswordPath: null,\n  profilePath: null,\n  changePasswordPath: null,\n};\n\nAccounts.ui.LoginForm = LoginForm;\n\nexport default createContainer(() => {\n  // Listen for the user to login/logout and the services list to the user.\n  Meteor.subscribe('servicesList');\n  return ({\n    user: Accounts.user(),\n  });\n}, LoginForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accounts } from 'meteor/accounts-base';\nimport { T9n } from 'meteor/softwarerero:accounts-t9n';\nimport { hasPasswordService } from '../../helpers.js';\n\nexport class PasswordOrService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasPasswordService: hasPasswordService(),\n      services: Object.keys(props.oauthServices).map(service => {\n        return props.oauthServices[service].label\n      })\n    };\n  }\n\n  translate(text) {\n    if (this.props.translate) {\n      return this.props.translate(text);\n    }\n    return T9n.get(text);\n  }\n\n  render () {\n    let { className = \"password-or-service\", style = {} } = this.props;\n    let { hasPasswordService, services } = this.state;\n    labels = services;\n    if (services.length > 2) {\n      labels = [];\n    }\n\n    if (hasPasswordService && services.length > 0) {\n      return (\n        <div style={ style }Â className={ className }>\n          { `${this.translate('orUse')} ${ labels.join(' / ') }` }\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nPasswordOrService.propTypes = {\n  oauthServices: PropTypes.object\n};\n\nAccounts.ui.PasswordOrService = PasswordOrService;\n","import React from 'react';\nimport './Button.jsx';\nimport {Accounts} from 'meteor/accounts-base';\n\n\nexport class SocialButtons extends React.Component {\n  render() {\n    let { oauthServices = {}, className = \"social-buttons\" } = this.props;\n    return(\n      <div className={ className }>\n        {Object.keys(oauthServices).map((id, i) => {\n          return <Accounts.ui.Button {...oauthServices[id]} key={i} />;\n        })}\n      </div>\n    );\n  }\n}\n\nAccounts.ui.SocialButtons = SocialButtons;\n"]}