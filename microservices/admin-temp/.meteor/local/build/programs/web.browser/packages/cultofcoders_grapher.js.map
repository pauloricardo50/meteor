{"version":3,"sources":["meteor://ðŸ’»app/packages/cultofcoders:grapher/main.client.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/compose.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/createQuery.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/extension.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/config.schema.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/constants.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/extension.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linker.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linkTypes/base.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linkTypes/linkManyMeta.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linkTypes/linkOneMeta.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/store.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/query.base.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/query.client.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/query.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/query.server.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/counts/collection.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/counts/constants.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/counts/countSubscription.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/counts/createFauxSubscription.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/assembleAggregateResults.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/assembler.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/constants.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/storeHypernovaResults.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/applyProps.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/callWithPromise.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/createGraph.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/dotize.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/intersectDeep.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/prepareForDelivery.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/lib/recursiveFetch.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/nodes/collectionNode.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/nodes/fieldNode.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/reducers/extension.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js","meteor://ðŸ’»app/packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js"],"names":["module","watch","require","v","exports","createQuery","prepareForProcess","Query","NamedQuery","compose","deepExtend","exportDefault","args","NamedQueryStore","name","body","options","_","isFunction","createNamedQuery","entryPointName","first","keys","collection","Mongo","Collection","get","Meteor","Error","isDevelopment","console","warn","params","createNormalQuery","namedQuery","query","add","clone","extend","prototype","export","DenormalizeSchema","LinkConfigDefaults","LinkConfigSchema","Match","field","String","Object","bypassSchema","Maybe","Boolean","type","OneOf","Where","isObject","_collection","metadata","inversedBy","index","unique","autoremove","denormalize","ObjectIncluding","LINK_STORAGE","Linker","addLinks","data","each","linkConfig","linkName","_name","linker","getLinks","getLinker","hasLink","getLink","objectOrId","linkData","object","isVirtual","findOne","fields","linkStorageField","_id","createLink","LinkMany","LinkManyMeta","LinkOne","LinkOneMeta","smartArguments","dot","check","mainCollection","assign","_validateAndClean","_initAutoremove","_initDenormalization","_handleReferenceRemovalForVirtualLinks","_initIndex","getLinkedCollection","isMany","isSingle","isMeta","relatedLinker","contains","oneTypes","isOneResult","helperClass","_getHelperClass","collectionName","_prepareVirtual","_generateFieldName","startup","_setupVirtualConfig","virtualLinkConfig","strategy","cleanedCollectionName","replace","defaultFieldPrefix","after","remove","userId","doc","accessor","fetch","link","linkedObj","unset","isServer","_ensureIndex","$in","getIds","ids","find","map","item","packageExists","Package","cacheConfig","referenceFieldSuffix","inversedLink","referenceField","cacheField","cache","isDenormalized","isSubBodyDenormalized","cacheBody","cacheBodyFields","bodyFields","omit","difference","length","createSearchFilters","createOne","createOneVirtual","createOneMeta","createOneMetaVirtual","createMany","createManyVirtual","createManyMeta","createManyMetaVirtual","sift","fieldStorage","metaFilters","value","undefined","filters","key","pluck","$elemMatch","Link","SmartArgs","linkedCollection","config","$metaFilters","$meta","searchFilters","appliedFilters","default","others","result","clean","identifyId","what","saveToDatabase","getId","identifyIds","_validateIds","isArray","validIds","join","_virtualAction","action","reversedLink","element","elementId","insert","set","_ids","union","modifier","$addToSet","$each","update","filter","$pullAll","metadatas","localMetadata","push","extendMetadata","existingMetadata","subfield","subfieldUpdate","$set","$pull","subWhat","NamedQueryBase","deepClone","isNamedQuery","queryName","resolver","subscriptionHandle","isExposed","setParams","doValidateParams","validateParams","_validate","validationError","error","newParams","constructor","isResolver","cacher","exposeConfig","validator","call","CountSubscription","createGraph","recursiveFetch","callWithPromise","Base","subscribe","callback","subscribeCount","_counter","unsubscribe","stop","unsubscribeCount","fetchSync","fetchOneSync","callbackOrOptions","_fetchStatic","_fetchReactive","fetchOne","err","res","getCountSync","getCount","$body","intersectDeep","allowSkip","$options","skip","NamedQueryClient","NamedQueryServer","MemoryResultCacher","context","_performSecurityChecks","_fetchResolverData","doEmbodimentIfItApplies","cacheId","generateQueryId","countCursor","getCursorForCounting","count","$filters","cacheResults","resolve","fn","self","_callFirewall","storage","getAll","BaseResultCacher","EJSON","stringify","fetchData","cloneDeep","DEFAULT_TTL","store","cacheData","storeData","ttl","setTimeout","QueryBase","isGlobalQuery","QueryClient","QueryServer","hypernova","node","COUNTS_COLLECTION_CLIENT","ReactiveVar","Tracker","Counts","createFauxSubscription","accessToken","fauxHandle","arg","equals","lastArgs","token","_markedForUnsubscribe","disconnectComputation","autorun","handleDisconnect","id","status","connected","_markedForResume","isSubscribed","countManager","ready","AggregateFilters","collectionNode","create","uniq","parentObjects","eligibleObjects","storages","arrayOfIds","isValid","parent","results","cleanObjectForMetaFilters","childCollectionNode","aggregateResults","allResults","metaFiltersTest","parentResult","eligibleAggregateResults","aggregateResult","datas","limit","assembleData","filterAssembledData","slice","containsDottedFields","pipeline","firewall","$match","sort","$sort","dataPush","indexOf","safeField","$group","$push","$slice","$project","SAFE_DOTTED_FIELD_REPLACEMENT","hypernovaInit","applyProps","prepareForDelivery","storeHypernovaResults","collectionNodes","bypassFirewalls","userIdToPass","assemble","assembleAggregateResults","buildAggregatePipeline","snapBackDottedFields","aggregateFilters","filteredOptions","aggregate","explains","aggregationResult","forEach","document","restrictOptions","props","applyFields","method","myParameters","Promise","reject","reason","createNodes","addFieldNode","CollectionNode","FieldNode","ReducerNode","dotize","createReducers","specialFields","root","fieldName","addProp","handleDenormalized","subroot","reducer","getReducer","reducerNode","fieldNodes","dotted","convert","fieldNode","snapCache","obj","prefix","Array","newObj","recurse","o","p","isArrayItem","f","isEmptyArray","getFieldName","isEmptyObj","isNumber","isNaN","parseInt","prop","hasOwnProperty","allowedBody","clientBody","allowedBodyDot","clientBodyDot","intersection","build","intersectedField","applyPostFilters","applyPostOptions","removeLinkStorages","storeOneResults","assembleMetadata","applyReducers","cleanReducerLeftovers","Minimongo","snapBackCaches","cloneMetaChildren","applyPostFilter","postFilters","$postFilters","$postOptions","sorter","Sorter","getComparator","start","end","$postFilter","sameLevelResults","removeStorageField","shouldCleanStorage","parentResults","childResult","storeMetadata","parentElement","$metadata","storageItem","isEmpty","snapCaches","snapCachesSingles","shoudStoreLinkStorage","defaultFilterFunction","applyFilterRecursive","isRoot","$filter","Function","applyPagination","_params","_body","parentObject","nodes","scheduledForDeletion","reducers","_shouldCleanStorage","_node","hasAddedAnyField","n","has","split","hasField","getField","hasCollectionNode","hasReducerNode","reducerNodes","getReducerNode","getCollectionNode","getName","subLinkName","reduce","reduceFunction","compute","addReducers","reducerConfig","reducerName","cleanNestedFields","parts","shift","handleAddElement","handleAddReducer","handleAddLink","handleAddField","embedReducerWithLink","dots","reducerBody"],"mappings":"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","file":"/packages/cultofcoders_grapher.js","sourcesContent":["import './lib/extension.js';\nimport './lib/links/extension.js';\nimport './lib/query/reducers/extension.js';\n\nexport {\n    default as createQuery\n} from './lib/createQuery.js';\n\nexport {\n    default as prepareForProcess\n} from './lib/query/lib/prepareForProcess';\n\nexport {\n    default as Query\n} from './lib/query/query.client';\n\nexport {\n    default as NamedQuery\n} from './lib/namedQuery/namedQuery.client';\n\nexport {\n    default as compose\n} from './lib/compose';\n","import deepExtend from 'deep-extend';\n\nexport default function (...args) {\n    return deepExtend({}, ...args);\n}","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n/**\n * This is a polymorphic function, it allows you to create a query as an object\n * or it also allows you to re-use an existing query if it's a named one\n *\n * @param args\n * @returns {*}\n */\nexport default (...args) => {\n    if (typeof args[0] === 'string') {\n        let [name, body, options] = args;\n        options = options || {};\n\n        // It's a resolver query\n        if (_.isFunction(body)) {\n            return createNamedQuery(name, null, body, options);\n        }\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            throw new Meteor.Error('invalid-name', `We could not find any collection with the name \"${entryPointName}\". Make sure it is imported prior to using this`)\n        }\n\n        return createNamedQuery(name, collection, body[entryPointName], options);\n    } else {\n        // Query Creation, it can have an endpoint as collection or as a NamedQuery\n        let [body, options] = args;\n        options = options || {};\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\n                console.warn(`You are creating a query with the entry point \"${entryPointName}\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.`)\n            }\n\n            return createNamedQuery(entryPointName, null, {}, {params: body[entryPointName]});\n        } else {\n            return createNormalQuery(collection, body[entryPointName], options);\n        }\n    }\n}\n\nfunction createNamedQuery(name, collection, body, options = {}) {\n    // if it exists already, we re-use it\n    const namedQuery = NamedQueryStore.get(name);\n    let query;\n\n    if (!namedQuery) {\n        query = new NamedQuery(name, collection, body, options);\n        NamedQueryStore.add(name, query);\n    } else {\n        query = namedQuery.clone(options.params);\n    }\n\n    return query;\n}\n\nfunction createNormalQuery(collection, body, options)  {\n    return new Query(collection, body, options);\n}\n","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n_.extend(Mongo.Collection.prototype, {\n    createQuery(...args) {\n        if (typeof args[0] === 'string') {\n            //NamedQuery\n            const [name, body, options] = args;\n            const query = new NamedQuery(name, this, body, options);\n            NamedQueryStore.add(name, query);\n\n            return query;\n        } else {\n            const [body, options] = args;\n\n            return new Query(this, body, options);\n        }\n    }\n});","import {Match} from 'meteor/check';\nimport {Mongo} from 'meteor/mongo';\n\nexport const DenormalizeSchema = {\n    field: String,\n    body: Object,\n    bypassSchema: Match.Maybe(Boolean)\n};\n\nexport const LinkConfigDefaults = {\n    type: 'one',\n};\n\nexport const LinkConfigSchema = {\n    type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\n    collection: Match.Maybe(\n        Match.Where(collection => {\n            // We do like this so it works with other types of collections \n            // like FS.Collection\n            return _.isObject(collection) && (\n                collection instanceof Mongo.Collection\n                || \n                !!collection._collection\n            );\n        })\n    ),\n    field: Match.Maybe(String),\n    metadata: Match.Maybe(Boolean),\n    inversedBy: Match.Maybe(String),\n    index: Match.Maybe(Boolean),\n    unique: Match.Maybe(Boolean),\n    autoremove: Match.Maybe(Boolean),\n    denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema)),\n};","export const LINK_STORAGE = '__links';\n","import { Mongo } from 'meteor/mongo';\nimport {LINK_STORAGE} from './constants.js';\nimport Linker from './linker.js';\n\n_.extend(Mongo.Collection.prototype, {\n    /**\n     * The data we add should be valid for config.schema.js\n     */\n    addLinks(data) {\n        if (!this[LINK_STORAGE]) {\n            this[LINK_STORAGE] = {};\n        }\n\n        _.each(data, (linkConfig, linkName) => {\n            if (this[LINK_STORAGE][linkName]) {\n                throw new Meteor.Error(`You cannot add the link with name: ${linkName} because it was already added to ${this._name} collection`)\n            }\n\n            const linker = new Linker(this, linkName, linkConfig);\n\n            _.extend(this[LINK_STORAGE], {\n                [linkName]: linker\n            });\n        });\n    },\n    \n    getLinks() {\n        return this[LINK_STORAGE];\n    },\n\n    getLinker(name) {\n        if (this[LINK_STORAGE]) {\n            return this[LINK_STORAGE][name];\n        }\n    },\n\n    hasLink(name) {\n        if (!this[LINK_STORAGE]) {\n            return false;\n        }\n\n        return !!this[LINK_STORAGE][name];\n    },\n\n    getLink(objectOrId, name) {\n        let linkData = this[LINK_STORAGE];\n\n        if (!linkData) {\n            throw new Meteor.Error(`There are no links defined for collection: ${this._name}`);\n        }\n\n        if (!linkData[name]) {\n            throw new Meteor.Error(`There is no link ${name} for collection: ${this._name}`);\n        }\n\n        const linker = linkData[name];\n        let object = objectOrId;\n        if (typeof(objectOrId) == 'string') {\n            if (!linker.isVirtual()) {\n                object = this.findOne(objectOrId, {\n                    fields: {\n                        [linker.linkStorageField]: 1\n                    }\n                });\n            } else {\n                object = {_id: objectOrId};\n            }\n\n            if (!object) {\n                throw new Meteor.Error(`We could not find any object with _id: \"${objectOrId}\" within the collection: ${this._name}`);\n            }\n        }\n\n        return linkData[name].createLink(object);\n    }\n});\n\n","import LinkMany from './linkTypes/linkMany.js';\nimport LinkManyMeta from './linkTypes/linkManyMeta.js';\nimport LinkOne from './linkTypes/linkOne.js';\nimport LinkOneMeta from './linkTypes/linkOneMeta.js';\nimport {LinkConfigSchema, LinkConfigDefaults} from './config.schema.js';\nimport smartArguments from './linkTypes/lib/smartArguments';\nimport dot from 'dot-object';\nimport {check} from 'meteor/check';\nimport {_} from 'meteor/underscore';\n\nexport default class Linker {\n    /**\n     * @param mainCollection\n     * @param linkName\n     * @param linkConfig\n     */\n    constructor(mainCollection, linkName, linkConfig) {\n        this.mainCollection = mainCollection;\n        this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n        this.linkName = linkName;\n\n        // check linkName must not exist in schema\n        this._validateAndClean();\n\n        // initialize cascade removal hooks.\n        this._initAutoremove();\n        this._initDenormalization();\n\n        if (this.isVirtual()) {\n            // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n            if (!linkConfig.autoremove) {\n                this._handleReferenceRemovalForVirtualLinks();\n            }\n        } else {\n            this._initIndex();\n        }\n    }\n\n    /**\n     * Values which represent for the relation a single link\n     * @returns {string[]}\n     */\n    get oneTypes() {\n        return ['one', '1'];\n    }\n\n    /**\n     * Returns the strategies: one, many, one-meta, many-meta\n     * @returns {string}\n     */\n    get strategy() {\n        let strategy = this.isMany() ? 'many' : 'one';\n        if (this.linkConfig.metadata) {\n            strategy += '-meta';\n        }\n\n        return strategy;\n    }\n\n    /**\n     * Returns the field name in the document where the actual relationships are stored.\n     * @returns string\n     */\n    get linkStorageField() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.linkStorageField;\n        }\n\n        return this.linkConfig.field;\n    }\n\n    /**\n     * The collection that is linked with the current collection\n     * @returns Mongo.Collection\n     */\n    getLinkedCollection() {\n        return this.linkConfig.collection;\n    }\n\n    /**\n     * If the relationship for this link is of \"many\" type.\n     */\n    isMany() {\n        return !this.isSingle();\n    }\n\n    /**\n     * If the relationship for this link contains metadata\n     */\n    isMeta() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isMeta();\n        }\n\n        return !!this.linkConfig.metadata;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isSingle() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isSingle();\n        }\n\n        return _.contains(this.oneTypes, this.linkConfig.type);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isVirtual() {\n        return !!this.linkConfig.inversedBy;\n    }\n\n    /**\n     * Should return a single result.\n     */\n    isOneResult() {\n        return (\n            (this.isVirtual() && this.linkConfig.relatedLinker.linkConfig.unique)\n            || (!this.isVirtual() && this.isSingle())\n        );\n    }\n\n    /**\n     * @param object\n     * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n     *\n     * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n     */\n    createLink(object, collection = null) {\n        let helperClass = this._getHelperClass();\n\n        return new helperClass(this, object, collection);\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _validateAndClean() {\n        if (!this.linkConfig.collection) {\n            throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you did not provide a collection.`)\n        }\n\n        if (typeof(this.linkConfig.collection) === 'string') {\n            const collectionName = this.linkConfig.collection;\n            this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n            if (!this.linkConfig.collection) {\n                throw new Meteor.Error('invalid-collection', `Could not find a collection with the name: ${collectionName}`);\n            }\n        }\n\n        if (this.isVirtual()) {\n            return this._prepareVirtual();\n        } else {\n            if (!this.linkConfig.type) {\n                this.linkConfig.type = 'one';\n            }\n\n            if (!this.linkConfig.field) {\n                this.linkConfig.field = this._generateFieldName();\n            } else {\n                if (this.linkConfig.field == this.linkName) {\n                    throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you must not use the same name for the field, otherwise it will cause conflicts when fetching data`);\n                }\n            }\n        }\n\n        check(this.linkConfig, LinkConfigSchema);\n    }\n\n    /**\n     * We need to apply same type of rules in this case.\n     * @private\n     */\n    _prepareVirtual() {\n        const {collection, inversedBy} = this.linkConfig;\n        let linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n            // it is possible that the collection doesn't have a linker created yet.\n            // so we will create it on startup after all links have been defined\n            Meteor.startup(() => {\n                linker = collection.getLinker(inversedBy);\n                if (!linker) {\n                    throw new Meteor.Error(`You tried setting up an inversed link in \"${this.mainCollection._name}\" pointing to collection: \"${collection._name}\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`)\n                } else {\n                    this._setupVirtualConfig(linker);\n                }\n            })\n        } else {\n            this._setupVirtualConfig(linker);\n        }\n    }\n\n    /**\n     * @param linker\n     * @private\n     */\n    _setupVirtualConfig(linker) {\n        const virtualLinkConfig = linker.linkConfig;\n\n        if (!virtualLinkConfig) {\n            throw new Meteor.Error(`There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`)\n        }\n\n        _.extend(this.linkConfig, {\n            metadata: virtualLinkConfig.metadata,\n            relatedLinker: linker\n        });\n    }\n\n    /**\n     * Depending on the strategy, we create the proper helper class\n     * @private\n     */\n    _getHelperClass() {\n        switch (this.strategy) {\n            case 'many-meta':\n                return LinkManyMeta;\n            case 'many':\n                return LinkMany;\n            case 'one-meta':\n                return LinkOneMeta;\n            case 'one':\n                return LinkOne;\n        }\n\n        throw new Meteor.Error('invalid-strategy', `${this.strategy} is not a valid strategy`);\n    }\n\n    /**\n     * If field name not present, we generate it.\n     * @private\n     */\n    _generateFieldName() {\n        let cleanedCollectionName = this.linkConfig.collection._name.replace(/\\./g, '_');\n        let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n        switch (this.strategy) {\n            case 'many-meta':\n                return `${defaultFieldPrefix}_metas`;\n            case 'many':\n                return `${defaultFieldPrefix}_ids`;\n            case 'one-meta':\n                return `${defaultFieldPrefix}_meta`;\n            case 'one':\n                return `${defaultFieldPrefix}_id`;\n        }\n    }\n\n    /**\n     * When a link that is declared virtual is removed, the reference will be removed from every other link.\n     * @private\n     */\n    _handleReferenceRemovalForVirtualLinks() {\n        this.mainCollection.after.remove((userId, doc) => {\n            // this problem may occur when you do a .remove() before Meteor.startup()\n            if (!this.linkConfig.relatedLinker) {\n                console.warn(`There was an error finding the link for removal for collection: \"${this.mainCollection._name}\" with link: \"${this.linkName}\". This may occur when you do a .remove() before Meteor.startup()`);\n                return;\n            }\n\n            let accessor = this.createLink(doc);\n\n            _.each(accessor.fetch(), linkedObj => {\n                const {relatedLinker} = this.linkConfig;\n                // We do this check, to avoid self-referencing hell when defining virtual links\n                // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n                // if a removal happens before Meteor.startup this may fail\n                if (relatedLinker) {\n                    let link = relatedLinker.createLink(linkedObj);\n\n                    if (relatedLinker.isSingle()) {\n                        link.unset();\n                    } else {\n                        link.remove(doc);\n                    }\n                }\n            });\n        })\n    }\n\n    _initIndex() {\n        if (Meteor.isServer) {\n            let field = this.linkConfig.field;\n            if (this.linkConfig.metadata) {\n                field = field + '._id';\n            }\n\n            if (this.linkConfig.index) {\n                if (this.isVirtual()) {\n                    throw new Meteor.Error('You cannot set index on an inversed link.');\n                }\n\n                let options;\n                if (this.linkConfig.unique) {\n                    if (this.isMany()) {\n                        throw new Meteor.Error('You cannot set unique property on a multi field.');\n                    }\n\n                    options = {unique: true}\n                }\n\n                this.mainCollection._ensureIndex({[field]: 1}, options);\n            } else {\n                if (this.linkConfig.unique) {\n                    if (this.isVirtual()) {\n                        throw new Meteor.Error('You cannot set unique property on an inversed link.');\n                    }\n\n                    if (this.isMany()) {\n                        throw new Meteor.Error('You cannot set unique property on a multi field.');\n                    }\n\n                    this.mainCollection._ensureIndex({\n                        [field]: 1\n                    }, {unique: true})\n                }\n            }\n        }\n    }\n\n    _initAutoremove() {\n        if (!this.linkConfig.autoremove) {\n            return;\n        }\n\n        if (!this.isVirtual()) {\n            this.mainCollection.after.remove((userId, doc) => {\n                this.getLinkedCollection().remove({\n                    _id: {\n                        $in: smartArguments.getIds(doc[this.linkStorageField])\n                    }\n                })\n            })\n        } else {\n            this.mainCollection.after.remove((userId, doc) => {\n                const linker = this.mainCollection.getLink(doc, this.linkName);\n                const ids = linker.find({}, {fields: {_id: 1}}).fetch().map(item => item._id);\n\n                this.getLinkedCollection().remove({\n                    _id: {$in: ids}\n                })\n            })\n        }\n    }\n\n    /**\n     * Initializes denormalization using herteby:denormalize\n     * @private\n     */\n    _initDenormalization() {\n        if (!this.linkConfig.denormalize || !Meteor.isServer) {\n            return;\n        }\n\n        const packageExists = !!Package['herteby:denormalize'];\n        if (!packageExists) {\n            throw new Meteor.Error('missing-package', `Please add the herteby:denormalize package to your Meteor application in order to make caching work`)\n        }\n\n        const {field, body, bypassSchema} = this.linkConfig.denormalize;\n        let cacheConfig;\n\n        let referenceFieldSuffix = '';\n        if (this.isMeta()) {\n            referenceFieldSuffix = (this.isSingle() ? '._id' : ':_id');\n        }\n\n        if (this.isVirtual()) {\n            let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n\n            let type = inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n\n            cacheConfig = {\n                type: type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: inversedLink.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema\n            };\n        } else {\n            cacheConfig = {\n                type: this.linkConfig.type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: this.linkConfig.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema\n            };\n        }\n\n        if (this.isVirtual()) {\n            Meteor.startup(() => {\n                this.mainCollection.cache(cacheConfig);\n            })\n        } else {\n            this.mainCollection.cache(cacheConfig);\n        }\n    }\n\n    /**\n     * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    isDenormalized() {\n        return !!this.linkConfig.denormalize;\n    }\n\n    /**\n     * Verifies if the body of the linked element does not contain fields outside the cache body\n     *\n     * @param body\n     * @returns {boolean}\n     * @private\n     */\n    isSubBodyDenormalized(body) {\n        const cacheBody = this.linkConfig.denormalize.body;\n\n        const cacheBodyFields = _.keys(dot.dot(cacheBody));\n        const bodyFields = _.keys(\n            dot.dot(\n                _.omit(body, '_id')\n            )\n        );\n\n        return _.difference(bodyFields, cacheBodyFields).length === 0;\n    }\n}","import sift from 'sift';\n\nexport default function createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n    if (!isVirtual) {\n        switch (strategy) {\n            case 'one': return createOne(object, fieldStorage);\n            case 'one-meta': return createOneMeta(object, fieldStorage, metaFilters);\n            case 'many': return createMany(object, fieldStorage);\n            case 'many-meta': return createManyMeta(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    } else {\n        switch (strategy) {\n            case 'one': return createOneVirtual(object, fieldStorage);\n            case 'one-meta': return createOneMetaVirtual(object, fieldStorage, metaFilters);\n            case 'many': return createManyVirtual(object, fieldStorage);\n            case 'many-meta': return createManyMetaVirtual(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    }\n}\n\nexport function createOne(object, fieldStorage) {\n    return {\n        _id: object[fieldStorage]\n    };\n}\n\nexport function createOneVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createOneMeta(object, fieldStorage, metaFilters) {\n    const value = object[fieldStorage];\n\n    if (metaFilters) {\n        if (!sift(metaFilters)(value)) {\n            return {_id: undefined};\n        }\n    }\n\n    return {\n        _id: value ? value._id : value\n    };\n}\n\nexport function createOneMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[fieldStorage + '.' + key] = value;\n        })\n    }\n\n    filters[fieldStorage + '._id'] = object._id;\n\n    return filters;\n}\n\nexport function createMany(object, fieldStorage) {\n    return {\n        _id: {\n            $in: object[fieldStorage] || []\n        }\n    };\n}\n\nexport function createManyVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createManyMeta(object, fieldStorage, metaFilters) {\n    let value = object[fieldStorage];\n\n    if (metaFilters) {\n        value = sift(metaFilters, value)\n    }\n\n    return {\n        _id: {\n            $in: _.pluck(value, '_id') || []\n        }\n    };\n}\n\nexport function createManyMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[key] = value;\n        })\n    }\n\n    filters._id = object._id;\n\n    return {\n        [fieldStorage]: {$elemMatch: filters}\n    };\n}","import SmartArgs from './lib/smartArguments.js';\nimport createSearchFilters from '../lib/createSearchFilters';\n\nexport default class Link {\n    get config() { return this.linker.linkConfig; }\n\n    get isVirtual() { return this.linker.isVirtual() }\n\n    constructor(linker, object, collection) {\n        this.linker = linker;\n        this.object = object;\n        this.linkedCollection = (collection) ? collection : linker.getLinkedCollection();\n\n        if (this.linker.isVirtual()) {\n            this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n        } else {\n            this.linkStorageField = this.config.field;\n        }\n    }\n\n    /**\n     * Gets the stored link information value\n     * @returns {*}\n     */\n    value() {\n        if (this.isVirtual) {\n            throw new Meteor.Error('You can only take the value from the main link.');\n        }\n\n        return this.object[this.linkStorageField];\n    }\n\n    /**\n     * Finds linked data.\n     *\n     * @param filters\n     * @param options\n     * @returns {*}\n     * @param userId\n     */\n    find(filters = {}, options = {}, userId = undefined) {\n        let linker = this.linker;\n        const linkedCollection = this.linkedCollection;\n\n        let $metaFilters;\n        if (filters.$meta) {\n            $metaFilters = filters.$meta;\n            delete filters.$meta;\n        }\n\n        const searchFilters = createSearchFilters(\n            this.object,\n            this.linkStorageField,\n            linker.strategy,\n            linker.isVirtual(),\n            $metaFilters\n        );\n\n        let appliedFilters = _.extend({}, filters, searchFilters);\n\n        // see https://github.com/cult-of-coders/grapher/issues/134\n        // happens due to recursive importing of modules\n        // TODO: find another way to do this\n        if (linkedCollection.find) {\n            return linkedCollection.find(appliedFilters, options, userId)\n        } else {\n            return linkedCollection.default.find(appliedFilters, options, userId);\n        }\n    }\n\n    /**\n     * @param filters\n     * @param options\n     * @param others\n     * @returns {*|{content}|any}\n     */\n    fetch(filters, options, ...others) {\n        let result = this.find(filters, options, ...others).fetch();\n\n        if (this.linker.isOneResult()) {\n            return _.first(result);\n        }\n\n        return result;\n    }\n\n    /**\n     * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n     * We use clean to make it an empty array by default.\n     */\n    clean() {}\n\n    /**\n     * Extracts a single id\n     */\n    identifyId(what, saveToDatabase) {\n        return SmartArgs.getId(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Extracts the ids of object(s) or strings and returns an array.\n     */\n    identifyIds(what, saveToDatabase) {\n        return SmartArgs.getIds(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Checks when linking data, if the ids are valid with the linked collection.\n     * @throws Meteor.Error\n     * @param ids\n     *\n     * @protected\n     */\n    _validateIds(ids) {\n        if (!_.isArray(ids)) {\n            ids = [ids];\n        }\n\n        const validIds = this.linkedCollection.find({\n            _id: {$in: ids}\n        }, {fields: {_id: 1}}).fetch().map(doc => doc._id);\n\n        if (validIds.length != ids.length) {\n            throw new Meteor.Error('not-found', `You tried to create links with non-existing id(s) inside \"${this.linkedCollection._name}\": ${_.difference(ids, validIds).join(', ')}`)\n        }\n    }\n\n    /**\n     * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n     *\n     * @param action\n     * @param what\n     * @param metadata\n     *\n     * @protected\n     */\n    _virtualAction(action, what, metadata) {\n        const linker = this.linker.linkConfig.relatedLinker;\n\n        // its an unset operation most likely.\n        if (what === undefined) {\n            const reversedLink = linker.createLink(this.fetch());\n            reversedLink.unset();\n\n            return;\n        }\n\n        if (!_.isArray(what)) {\n            what = [what];\n        }\n\n        what = _.map(what, element => {\n            if (!_.isObject(element)) {\n                return linker.mainCollection.findOne(element);\n            } else {\n                if (!element._id) {\n                    const elementId = linker.mainCollection.insert(element);\n                    _.extend(element, linker.mainCollection.findOne(elementId));\n                }\n\n                return element;\n            }\n        });\n\n        return _.map(what, element => {\n            const reversedLink = linker.createLink(element);\n\n            if (action == 'metadata') {\n                if (linker.isSingle()) {\n                    return reversedLink.metadata(metadata);\n                } else {\n                    return reversedLink.metadata(this.object, metadata);\n                }\n            } else if (action == 'add' || action == 'set') {\n                if (linker.isSingle()) {\n                    reversedLink.set(this.object, metadata);\n                } else {\n                    reversedLink.add(this.object, metadata);\n                }\n            } else {\n                if (linker.isSingle()) {\n                    reversedLink.unset();\n                } else {\n                    reversedLink.remove(this.object);\n                }\n            }\n        });\n    }\n}\n","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkMany extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * Ads the _ids to the object.\n     * @param what\n     */\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n        this.clean();\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        const field = this.linkStorageField;\n\n        // update the field\n        this.object[field] = _.union(this.object[field], _ids);\n\n        // update the db\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: _ids}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     */\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n\n        this.clean();\n        const field = this.linkStorageField;\n\n        const _ids = this.identifyIds(what);\n\n        // update the field\n        this.object[field] = _.filter(this.object[field], _id => !_.contains(_ids, _id));\n\n        // update the db\n        let modifier = {\n            $pullAll: {\n                [field]: _ids\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkManyMeta extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * @param what\n     * @param metadata\n     */\n    add(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        let field = this.linkStorageField;\n\n        this.object[field] = this.object[field] || [];\n        let metadatas = [];\n\n        _.each(_ids, _id => {\n            let localMetadata = _.clone(metadata);\n            localMetadata._id = _id;\n\n            this.object[field].push(localMetadata);\n            metadatas.push(localMetadata);\n        });\n\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: metadatas}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     * @param extendMetadata\n     */\n    metadata(what, extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', what, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (what === undefined) {\n            return this.object[field];\n        }\n\n        if (_.isArray(what)) {\n            throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\n        }\n\n        const _id = this.identifyId(what);\n\n        let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\n        if (extendMetadata === undefined) {\n            return existingMetadata;\n        } else {\n            _.extend(existingMetadata, extendMetadata);\n            let subfield = field + '._id';\n            let subfieldUpdate = field + '.$';\n\n            this.linker.mainCollection.update({\n                _id: this.object._id,\n                [subfield]: _id\n            }, {\n               $set: {\n                   [subfieldUpdate]: existingMetadata\n               }\n            });\n        }\n\n        return this;\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what);\n        let field = this.linkStorageField;\n\n        this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\n\n        let modifier = {\n            $pull: {\n                [field]: {\n                    $elemMatch: {\n                        _id: {\n                            $in: _ids\n                        }\n                    }\n                }\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOne extends Link {\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        const _id = this.identifyId(what, true);\n        this._validateIds([_id]);\n\n        this.object[field] = _id;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: _id\n            }\n        });\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = null;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: null\n            }\n        });\n\n        return this;\n    }\n\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOneMeta extends Link {\n    set(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        metadata._id = this.identifyId(what, true);\n        this._validateIds([metadata._id]);\n\n        this.object[field] = metadata;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: metadata\n            }\n        });\n\n        return this;\n    }\n\n    metadata(extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', undefined, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (!extendMetadata) {\n            return this.object[field];\n        } else {\n            _.extend(this.object[field], extendMetadata);\n\n            this.linker.mainCollection.update(this.object._id, {\n                $set: {\n                    [field]: this.object[field]\n                }\n            });\n        }\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset');\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = {};\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: {}\n            }\n        });\n\n        return this;\n    }\n\n    add(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","/**\n * When you work with add/remove set/unset\n * You have the ability to pass strings, array of strings, objects, array of objects\n * If you are adding something and you want to save them in db, you can pass objects without ids.\n */\nexport default new class {\n    getIds(what, options) {\n        if (_.isArray(what)) {\n            return _.map(what, (subWhat) => {\n                return this.getId(subWhat, options)\n            })\n        } else {\n            return [this.getId(what, options)];\n        }\n\n        throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n    }\n\n    getId(what, options) {\n        if (typeof what === 'string') {\n            return what;\n        }\n\n        if (typeof what === 'object') {\n            if (!what._id && options.saveToDatabase) {\n                what._id = options.collection.insert(what);\n            }\n\n            return what._id\n        }\n    }\n}","import deepClone from 'lodash.clonedeep';\n\nexport default class NamedQueryBase {\n    isNamedQuery = true;\n\n    constructor(name, collection, body, options = {}) {\n        this.queryName = name;\n\n        if (_.isFunction(body)) {\n            this.resolver = body;\n        } else {\n            this.body = deepClone(body);\n        }\n\n        this.subscriptionHandle = null;\n        this.params = options.params || {};\n        this.options = options;\n        this.collection = collection;\n        this.isExposed = false;\n    }\n\n    get name() {\n        return `named_query_${this.queryName}`;\n    }\n\n    get isResolver() {\n        return !!this.resolver;\n    }\n\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams(params) {\n        params = params || this.params;\n\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        try {\n            this._validate(validateParams, params);\n        } catch (validationError) {\n            console.error(`Invalid parameters supplied to the query \"${this.queryName}\"\\n`, validationError);\n            throw validationError; // rethrow\n        }\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        let clone = new this.constructor(\n            this.queryName,\n            this.collection,\n            this.isResolver ? this.resolver : deepClone(this.body),\n            {\n                ...this.options,\n                params,\n            }\n        );\n\n        clone.cacher = this.cacher;\n        if (this.exposeConfig) {\n            clone.exposeConfig = this.exposeConfig;\n        }\n\n        return clone;\n    }\n\n    /**\n     * @param {function|object} validator\n     * @param {object} params\n     * @private\n     */\n    _validate(validator, params) {\n        if (_.isFunction(validator)) {\n            validator.call(null, params)\n        } else {\n            check(params, validator)\n        }\n    }\n}","import CountSubscription from '../query/counts/countSubscription';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveFetch from '../query/lib/recursiveFetch.js';\nimport prepareForProcess from '../query/lib/prepareForProcess.js';\nimport { _ } from 'meteor/underscore';\nimport callWithPromise from '../query/lib/callWithPromise';\nimport Base from './namedQuery.base';\n\nexport default class extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            this.params,\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(this.params, callback);\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(this.name + '.count', this.params, callback);\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, this.params, callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = this.body;\n        if (this.params.$body) {\n            body = intersectDeep(body, this.params.$body);\n        }\n\n        body = prepareForProcess(body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body)\n        );\n    }\n}\n","import NamedQueryClient from './namedQuery.client';\nimport NamedQueryServer from './namedQuery.server';\n\nlet NamedQuery;\n\nif (Meteor.isServer) {\n    NamedQuery = NamedQueryServer;\n} else {\n    NamedQuery = NamedQueryClient;\n}\n\nexport default NamedQuery;","import prepareForProcess from '../query/lib/prepareForProcess.js';\nimport Base from './namedQuery.base';\nimport deepClone from 'lodash.clonedeep';\nimport MemoryResultCacher from './cache/MemoryResultCacher';\nimport intersectDeep from '../query/lib/intersectDeep';\n\nexport default class extends Base {\n    /**\n     * Retrieves the data.\n     * @returns {*}\n     */\n    fetch(context) {\n        this._performSecurityChecks(context, this.params);\n\n        if (this.isResolver) {\n            return this._fetchResolverData(context);\n        } else {\n            body = deepClone(this.body);\n            if (this.params.$body) {\n                body = intersectDeep(body, this.params.$body);\n            }\n            \n            // we must apply emobdyment here\n            this.doEmbodimentIfItApplies(body);\n\n            const query = this.collection.createQuery(\n                deepClone(body),\n                {\n                    params: deepClone(this.params)\n                }\n            );\n\n            if (this.cacher) {\n                const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n                return this.cacher.fetch(cacheId, {query});\n            }\n\n            return query.fetch();\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     *\n     * @returns {any}\n     */\n    getCount(context) {\n        this._performSecurityChecks(context, this.params);\n\n        const countCursor = this.getCursorForCounting();\n\n        if (this.cacher) {\n            const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n\n            return this.cacher.fetch(cacheId, {countCursor});\n        }\n\n        return countCursor.count();\n    }\n\n    /**\n     * Returns the cursor for counting\n     * This is most likely used for counts cursor\n     */\n    getCursorForCounting() {\n        let body = deepClone(this.body);\n        this.doEmbodimentIfItApplies(body);\n        body = prepareForProcess(body, this.params);\n\n        return this.collection.find(body.$filters || {}, {fields: {_id: 1}});\n    }\n\n    /**\n     * @param cacher\n     */\n    cacheResults(cacher) {\n        if (!cacher) {\n            cacher = new MemoryResultCacher();\n        }\n\n        this.cacher = cacher;\n    }\n\n    /**\n     * Configure resolve. This doesn't actually call the resolver, it just sets it\n     * @param fn\n     */\n    resolve(fn) {\n        if (!this.isResolver) {\n            throw new Meteor.Error('invalid-call', `You cannot use resolve() on a non resolver NamedQuery`);\n        }\n\n        this.resolver = fn;\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _fetchResolverData(context) {\n        const resolver = this.resolver;\n        const self = this;\n        const query = {\n            fetch() {\n                return resolver.call(context, self.params);\n            }\n        };\n\n        if (this.cacher) {\n            const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n            return this.cacher.fetch(cacheId, {query});\n        }\n\n        return query.fetch();\n    }\n\n    /**\n     * @param context Meteor method/publish context\n     * @param params\n     *\n     * @private\n     */\n    _performSecurityChecks(context, params) {\n        if (context && this.exposeConfig) {\n            this._callFirewall(context, context.userId, params);\n        }\n\n        this.doValidateParams(params);\n    }\n}","export default new class {\n    constructor() {\n        this.storage = {};\n    }\n\n    add(key, value) {\n        if (this.storage[key]) {\n            throw new Meteor.Error('invalid-name', `You have previously defined another namedQuery with the same name: \"${key}\". Named Query names should be unique.`);\n        }\n\n        this.storage[key] = value;\n    }\n\n    get(key) {\n        return this.storage[key];\n    }\n\n    getAll() {\n        return this.storage;\n    }\n}","import {EJSON} from 'meteor/ejson';\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class BaseResultCacher {\n    constructor(config = {}) {\n        this.config = config;\n    }\n\n    /**\n     * @param queryName\n     * @param params\n     * @returns {string}\n     */\n    generateQueryId(queryName, params) {\n        return `${queryName}::${EJSON.stringify(params)}`;\n    }\n\n    /**\n     * Dummy function\n     */\n    fetch(cacheId, {query, countCursor}) {\n        throw 'Not implemented';\n    }\n\n    /**\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    static fetchData({query, countCursor}) {\n        if (query) {\n            return query.fetch();\n        } else {\n            return countCursor.count();\n        }\n    }\n}\n","import {Meteor} from 'meteor/meteor';\nimport cloneDeep from 'lodash.clonedeep';\nimport BaseResultCacher from './BaseResultCacher';\n\nconst DEFAULT_TTL = 60000;\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class MemoryResultCacher extends BaseResultCacher {\n    constructor(config = {}) {\n        super(config);\n        this.store = {};\n    }\n\n    /**\n     * @param cacheId\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    fetch(cacheId, {query, countCursor}) {\n        const cacheData = this.store[cacheId];\n        if (cacheData !== undefined) {\n            return cloneDeep(cacheData);\n        }\n\n        const data = BaseResultCacher.fetchData({query, countCursor});\n        this.storeData(cacheId, data);\n\n        return data;\n    }\n\n\n    /**\n     * @param cacheId\n     * @param data\n     */\n    storeData(cacheId, data) {\n        const ttl = this.config.ttl || DEFAULT_TTL;\n        this.store[cacheId] = cloneDeep(data);\n\n        Meteor.setTimeout(() => {\n            delete this.store[cacheId];\n        }, ttl)\n    }\n}\n","import deepClone from 'lodash.clonedeep';\nimport {check} from 'meteor/check';\n\nexport default class QueryBase {\n    isGlobalQuery = true;\n\n    constructor(collection, body, options = {}) {\n        this.collection = collection;\n\n        this.body = deepClone(body);\n\n        this.params = options.params || {};\n        this.options = options;\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        return new this.constructor(\n            this.collection,\n            deepClone(this.body),\n            {\n                params,\n                ...this.options\n            }\n        );\n    }\n\n    get name() {\n        return `exposure_${this.collection._name}`;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams() {\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        if (_.isFunction(validateParams)) {\n            validateParams.call(null, this.params)\n        } else {\n            check(this.params)\n        }\n    }\n\n    /**\n     * Merges the params with previous params.\n     *\n     * @param params\n     * @returns {Query}\n     */\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n}","import { _ } from 'meteor/underscore';\nimport CountSubscription from './counts/countSubscription';\nimport createGraph from './lib/createGraph.js';\nimport recursiveFetch from './lib/recursiveFetch.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport callWithPromise from './lib/callWithPromise';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback {Function} optional\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        this.doValidateParams();\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        this.doValidateParams();\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        this.doValidateParams();\n\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        this.doValidateParams();\n\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(\n                    this.name + '.count',\n                    prepareForProcess(this.body, this.params),\n                    callback\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = prepareForProcess(this.body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            this.params\n        );\n    }\n}\n","import QueryClient from './query.client';\nimport QueryServer from './query.server';\n\nlet Query;\n\nif (Meteor.isServer) {\n    Query = QueryServer;\n} else {\n    Query = QueryClient;\n}\n\nexport default Query;","import createGraph from './lib/createGraph.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport hypernova from './hypernova/hypernova.js';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Retrieves the data.\n     * @param context\n     * @returns {*}\n     */\n    fetch(context = {}) {\n        const node = createGraph(\n            this.collection,\n            prepareForProcess(this.body, this.params)\n        );\n\n        return hypernova(node, context.userId, {params: this.params});\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @returns {integer}\n     */\n    getCount() {\n        return this.collection.find(this.body.$filters || {}, {}).count();\n    }\n}","import { Mongo } from 'meteor/mongo';\nimport { COUNTS_COLLECTION_CLIENT } from './constants';\n\n/**\n * Internal collection used to store counts on the client.\n */\nexport default new Mongo.Collection(COUNTS_COLLECTION_CLIENT);\n","export const COUNTS_COLLECTION_CLIENT = 'grapher_counts';\n","import { EJSON } from 'meteor/ejson';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport Counts from './collection';\nimport createFauxSubscription from './createFauxSubscription';\nimport prepareForProcess from '../lib/prepareForProcess.js';\nimport NamedQueryBase from '../../namedQuery/namedQuery.base';\n\nexport default class CountSubscription {\n    /**\n     * @param {*} query - The query to use when fetching counts\n     */\n    constructor(query) {\n        this.accessToken = new ReactiveVar(null);\n        this.fauxHandle = null;\n        this.query = query;\n    }\n\n    /**\n     * Starts a subscription request for reactive counts.\n     *\n     * @param {*} arg - The argument to pass to {name}.count.subscribe\n     * @param {*} callback\n     */\n    subscribe(arg, callback) {\n        // Don't try to resubscribe if arg hasn't changed\n        if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\n            return this.fauxHandle;\n        }\n\n        this.accessToken.set(null);\n        this.lastArgs = arg;\n\n        Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\n            if (!this._markedForUnsubscribe) {\n                this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\n                this.accessToken.set(token);\n\n                this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\n            }\n\n            this._markedForUnsubscribe = false;\n        });\n\n        this.fauxHandle = createFauxSubscription(this);\n        return this.fauxHandle;\n    }\n\n    /**\n     * Unsubscribes from the count endpoint, if there is such a subscription.\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.disconnectComputation.stop();\n            this.subscriptionHandle.stop();\n        } else {\n            // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\n            // so set a flag to stop the subscription from being created\n            this._markedForUnsubscribe = true;\n        }\n\n        this.accessToken.set(null);\n        this.fauxHandle = null;\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Reactively fetch current document count. Returns null if the subscription is not ready yet.\n     *\n     * @returns {Number|null} - Current document count\n     */\n    getCount() {\n        const id = this.accessToken.get();\n        if (id === null) return null;\n\n        const doc = Counts.findOne(id);\n        return doc.count;\n    }\n\n    /**\n     * All session info gets deleted when the server goes down, so when the client attempts to\n     * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\n     *\n     * This function prevents that by manually stopping and restarting the subscription when the\n     * connection to the server is lost.\n     */\n    handleDisconnect() {\n        const status = Meteor.status();\n        if (!status.connected) {\n            this._markedForResume = true;\n            this.fauxHandle = null;\n            this.subscriptionHandle.stop();\n        }\n\n        if (status.connected && this._markedForResume) {\n            this._markedForResume = false;\n            this.subscribe(this.lastArgs);\n        }\n    }\n\n    /**\n     * Returns whether or not a subscription request has been made.\n     */\n    isSubscribed() {\n        return this.accessToken.get() !== null;\n    }\n}\n","/**\n * This method creates a \"fake\" subscription handle so that users of CountSubscription#subscribe\n * have an interface consistent with normal subscriptions.\n *\n * @param {CountSubscription} countManager\n */\nexport default (countManager) => ({\n    ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\n    stop: () => countManager.unsubscribe(),\n});\n","import sift from 'sift';\n\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\nexport default class AggregateFilters {\n    constructor(collectionNode, metaFilters) {\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    get parentObjects() {\n        return this.collectionNode.parent.results;\n    }\n\n    create() {\n        switch (this.linker.strategy) {\n            case 'one':\n                return this.createOne();\n            case 'one-meta':\n                return this.createOneMeta();\n            case 'many':\n                return this.createMany();\n            case 'many-meta':\n                return this.createManyMeta();\n            default:\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n        }\n    }\n\n    createOne() {\n        if (!this.isVirtual) {\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, this.linkStorageField)\n                    )\n                }\n            };\n        } else {\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, '_id')\n                    )\n                }\n            };\n        }\n    }\n\n    createOneMeta() {\n        if (!this.isVirtual) {\n            let eligibleObjects = this.parentObjects;\n\n            if (this.metaFilters) {\n                eligibleObjects = _.filter(this.parentObjects, object => {\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\n                });\n            }\n\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\n            let ids = [];\n            _.each(storages, storage => {\n                if (storage) {\n                    ids.push(storage._id);\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[this.linkStorageField + '.' + key] = value;\n                })\n            }\n\n            filters[this.linkStorageField + '._id'] = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return filters;\n        }\n    }\n\n    createMany() {\n        if (!this.isVirtual) {\n            const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        } else {\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        }\n    }\n\n    createManyMeta() {\n        if (!this.isVirtual) {\n            let ids = [];\n\n            _.each(this.parentObjects, object => {\n                if (object[this.linkStorageField]) {\n                    if (this.metaFilters) {\n                        const isValid = sift(this.metaFilters);\n                        _.each(object[this.linkStorageField], object => {\n                            if (isValid(object)) {\n                                ids.push(object._id);\n                            }\n                        });\n                    } else {\n                        _.each(object[this.linkStorageField], object => {\n                            ids.push(object._id);\n                        });\n                    }\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[key] = value;\n                })\n            }\n\n            filters._id = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return {\n                [this.linkStorageField]: {\n                    $elemMatch: filters\n                }\n            };\n        }\n    }\n}","import sift from 'sift';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\n\n/**\n * This only applies to inversed links. It will assemble the data in a correct manner.\n */\nexport default function (childCollectionNode, aggregateResults, metaFilters) {\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const linkName = childCollectionNode.linkName;\n    const isMeta = linker.isMeta();\n\n    let allResults = [];\n\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(childCollectionNode.parent.results, parentResult => {\n            cleanObjectForMetaFilters(parentResult, linkStorageField, metaFiltersTest);\n        })\n    }\n\n    if (isMeta && linker.isMany()) {\n        // This case is treated differently because we get an array response from the pipeline.\n\n        _.each(childCollectionNode.parent.results, parentResult => {\n            parentResult[linkName] = parentResult[linkName] || [];\n\n            const eligibleAggregateResults = _.filter(aggregateResults, aggregateResult => {\n                return _.contains(aggregateResult._id, parentResult._id)\n            });\n\n            if (eligibleAggregateResults.length) {\n                const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\n\n                _.each(datas, data => {\n                    _.each(data, item => {\n                        parentResult[linkName].push(item)\n                    })\n                });\n            }\n        });\n\n        _.each(aggregateResults, aggregateResult => {\n            _.each(aggregateResult.data, item => allResults.push(item))\n        });\n    } else {\n        _.each(aggregateResults, aggregateResult => {\n            let parentResult = _.find(childCollectionNode.parent.results, (result) => {\n                return result._id == aggregateResult._id;\n            });\n\n            if (parentResult) {\n                parentResult[childCollectionNode.linkName] = aggregateResult.data;\n            }\n\n            _.each(aggregateResult.data, item => {\n                allResults.push(item)\n            });\n        });\n    }\n\n    childCollectionNode.results = allResults;\n}","import createSearchFilters from '../../links/lib/createSearchFilters';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\nimport sift from 'sift';\n\nexport default (childCollectionNode, {limit, skip, metaFilters}) => {\n    const parent = childCollectionNode.parent;\n    const linker = childCollectionNode.linker;\n\n    const strategy = linker.strategy;\n    const isSingle = linker.isSingle();\n    const isMeta = linker.isMeta();\n    const fieldStorage = linker.linkStorageField;\n\n    // cleaning the parent results from a child\n    // this may be the wrong approach but it works for now\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(parent.results, parentResult => {\n            cleanObjectForMetaFilters(parentResult, fieldStorage, metaFiltersTest);\n        })\n    }\n\n    _.each(parent.results, result => {\n        let data = assembleData(childCollectionNode, result, {\n            fieldStorage, strategy, isSingle\n        });\n\n        result[childCollectionNode.linkName] = filterAssembledData(data, {limit, skip})\n    });\n}\n\nfunction filterAssembledData(data, {limit, skip}) {\n    if (limit) {\n        return data.slice(skip, limit);\n    }\n\n    return data;\n}\n\nfunction assembleData(childCollectionNode, result, {fieldStorage, strategy}) {\n    const filters = createSearchFilters(result, fieldStorage, strategy, false);\n\n    return sift(filters, childCollectionNode.results);\n}\n","import { _ } from 'meteor/underscore';\n\nexport default function (childCollectionNode, filters, options, userId) {\n    let containsDottedFields = false;\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const collection = childCollectionNode.collection;\n\n    let pipeline = [];\n\n    if (collection.firewall) {\n        collection.firewall(filters, options, userId);\n    }\n\n    pipeline.push({$match: filters});\n\n    if (options.sort && _.keys(options.sort).length > 0) {\n        pipeline.push({$sort: options.sort})\n    }\n\n    let _id = linkStorageField;\n    if (linker.isMeta()) {\n        _id += '._id';\n    }\n\n    let dataPush = {\n        _id: '$_id'\n    };\n\n    _.each(options.fields, (value, field) => {\n        if (field.indexOf('.') >= 0) {\n            containsDottedFields = true;\n        }\n        const safeField = field.replace('.', '___');\n        dataPush[safeField] = '$' + field\n    });\n\n    if (linker.isMeta()) {\n        dataPush[linkStorageField] = '$' + linkStorageField;\n    }\n\n    pipeline.push({\n        $group: {\n            _id: \"$\" + _id,\n            data: {\n                $push: dataPush\n            }\n        }\n    });\n\n    if (options.limit || options.skip) {\n        let $slice = [\"$data\"];\n        if (options.skip) $slice.push(options.skip);\n        if (options.limit) $slice.push(options.limit);\n\n        pipeline.push({\n            $project: {\n                _id: 1,\n                data: {$slice}\n            }\n        })\n    }\n\n    return {pipeline, containsDottedFields};\n}","export const SAFE_DOTTED_FIELD_REPLACEMENT = '___';","import applyProps from '../lib/applyProps.js';\nimport prepareForDelivery from '../lib/prepareForDelivery.js';\nimport storeHypernovaResults from './storeHypernovaResults.js';\n\nfunction hypernova(collectionNode, userId) {\n    _.each(collectionNode.collectionNodes, childCollectionNode => {\n        let {filters, options} = applyProps(childCollectionNode);\n\n        storeHypernovaResults(childCollectionNode, userId);\n        hypernova(childCollectionNode, userId);\n    });\n}\n\nexport default function hypernovaInit(collectionNode, userId, config = {}) {\n    const bypassFirewalls = config.bypassFirewalls || false;\n    const params = config.params || {};\n\n    let {filters, options} = applyProps(collectionNode);\n\n    const collection = collectionNode.collection;\n\n    collectionNode.results = collection.find(filters, options, userId).fetch();\n\n    const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\n    hypernova(collectionNode, userIdToPass);\n\n    prepareForDelivery(collectionNode, params);\n\n    return collectionNode.results;\n}\n","import applyProps from '../lib/applyProps.js';\nimport AggregateFilters from './aggregateSearchFilters.js';\nimport assemble from './assembler.js';\nimport assembleAggregateResults from './assembleAggregateResults.js';\nimport buildAggregatePipeline from './buildAggregatePipeline.js';\nimport snapBackDottedFields from './lib/snapBackDottedFields';\n\nexport default function storeHypernovaResults(childCollectionNode, userId) {\n    if (childCollectionNode.parent.results.length === 0) {\n        return childCollectionNode.results = [];\n    }\n\n    let {filters, options} = applyProps(childCollectionNode);\n\n    const metaFilters = filters.$meta;\n    const aggregateFilters = new AggregateFilters(childCollectionNode, metaFilters);\n    delete filters.$meta;\n\n    const linker = childCollectionNode.linker;\n    const isVirtual = linker.isVirtual();\n    const collection = childCollectionNode.collection;\n\n    _.extend(filters, aggregateFilters.create());\n\n    // if it's not virtual then we retrieve them and assemble them here.\n    if (!isVirtual) {\n        const filteredOptions = _.omit(options, 'limit');\n\n        childCollectionNode.results = collection.find(filters, filteredOptions, userId).fetch();\n\n        assemble(childCollectionNode, {\n            ...options,\n            metaFilters\n        });\n    } else {\n        // virtuals arrive here\n        let {pipeline, containsDottedFields} = buildAggregatePipeline(childCollectionNode, filters, options, userId);\n\n        let aggregateResults = collection.aggregate(pipeline, {explains: true});\n\n        /**\n         * If in aggregation it contains '.', we replace it with a custom string '___'\n         * And then after aggregation is complete we need to snap-it back to how it was.\n         */\n        if (containsDottedFields) {\n            snapBackDottedFields(aggregateResults);\n        }\n\n        assembleAggregateResults(childCollectionNode, aggregateResults, metaFilters);\n    }\n}\n","export default function (object, field, metaFiltersTest) {\n    if (object[field]) {\n        if (_.isArray(object[field])) {\n            object[field] = object[field].filter(metaFiltersTest)\n        } else {\n            if (!metaFiltersTest(object[field])) {\n                object[field] = null;\n            }\n        }\n    }\n}","import {SAFE_DOTTED_FIELD_REPLACEMENT} from '../constants';\nimport dot from 'dot-object';\n\nexport default function (aggregationResult) {\n    aggregationResult.forEach(result => {\n        result.data = result.data.map(document => {\n            _.each(document, (value, key) => {\n                if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n                    document[key.replace(SAFE_DOTTED_FIELD_REPLACEMENT, '.')] = value;\n                    delete document[key];\n                }\n            });\n\n            return dot.object(document);\n        })\n    })\n}","const restrictOptions = [\n    'disableOplog',\n    'pollingIntervalMs',\n    'pollingThrottleMs'\n];\n\nexport default function applyProps(node) {\n    let filters = _.extend({}, node.props.$filters);\n    let options = _.extend({}, node.props.$options);\n\n    options = _.omit(options, ...restrictOptions);\n    options.fields = options.fields || {};\n\n    node.applyFields(filters, options);\n\n    return {filters, options};\n}\n","export default (method, myParameters) => {\n    return new Promise((resolve, reject) => {\n        Meteor.call(method, myParameters, (err, res) => {\n            if (err) reject(err.reason || 'Something went wrong.');\n\n            resolve(res);\n        });\n    });\n};","import CollectionNode from '../nodes/collectionNode.js';\nimport FieldNode from '../nodes/fieldNode.js';\nimport ReducerNode from '../nodes/reducerNode.js';\nimport dotize from './dotize.js';\nimport createReducers from '../reducers/lib/createReducers';\n\nconst specialFields = [\n    '$filters',\n    '$options',\n    '$postFilters',\n    '$postOptions',\n    '$postFilter'\n];\n\n/**\n * Creates node objects from the body. The root is always a collection node.\n *\n * @param root\n */\nexport function createNodes(root) {\n    // this is a fix for phantomjs tests (don't really understand it.)\n    if (!_.isObject(root.body)) {\n        return;\n    }\n\n    _.each(root.body, (body, fieldName) => {\n        if (!body) {\n            return;\n        }\n\n        // if it's a prop\n        if (_.contains(specialFields, fieldName)) {\n            root.addProp(fieldName, body);\n\n            return;\n        }\n\n        // workaround, see https://github.com/cult-of-coders/grapher/issues/134\n        // TODO: find another way to do this\n        if (root.collection.default) {\n          root.collection = root.collection.default;\n        }\n\n        // checking if it is a link.\n        let linker = root.collection.getLinker(fieldName);\n\n        if (linker) {\n            // check if it is a cached link\n            // if yes, then we need to explicitly define this at collection level\n            // so when we transform the data for delivery, we move it to the link name\n            if (linker.isDenormalized()) {\n                if (linker.isSubBodyDenormalized(body)) {\n                    handleDenormalized(root, linker, body, fieldName);\n                    return;\n                }\n            }\n\n            let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n            root.add(subroot, linker);\n\n            createNodes(subroot);\n            return;\n        }\n\n        // checking if it's a reducer\n        const reducer = root.collection.getReducer(fieldName);\n\n        if (reducer) {\n            let reducerNode = new ReducerNode(fieldName, reducer);\n            root.add(reducerNode);\n        }\n\n        // it's most likely a field then\n        addFieldNode(body, fieldName, root);\n    });\n\n    createReducers(root);\n\n    if (root.fieldNodes.length === 0) {\n        root.add(new FieldNode('_id', 1));\n    }\n}\n\n/**\n * @param body\n * @param fieldName\n * @param root\n */\nexport function addFieldNode(body, fieldName, root) {\n    // it's not a link and not a special variable => we assume it's a field\n    if (_.isObject(body)) {\n        let dotted = dotize.convert({[fieldName]: body});\n        _.each(dotted, (value, key) => {\n            root.add(new FieldNode(key, value));\n        });\n    } else {\n        let fieldNode = new FieldNode(fieldName, body);\n        root.add(fieldNode);\n    }\n}\n\n/**\n * @param collection\n * @param body\n * @returns {CollectionNode}\n */\nexport default function (collection, body) {\n    let root = new CollectionNode(collection, body);\n    createNodes(root);\n\n    return root;\n};\n\n/**\n * Ads denormalization config properly, including _id\n *\n * @param root\n * @param linker\n * @param body\n * @param fieldName\n */\nfunction handleDenormalized(root, linker, body, fieldName) {\n    Object.assign(body, {_id: 1});\n\n    const cacheField = linker.linkConfig.denormalize.field;\n    root.snapCache(cacheField, fieldName);\n\n    // if it's one and direct also include the link storage\n    if (!linker.isMany() && !linker.isVirtual()) {\n        addFieldNode(1, linker.linkStorageField, root);\n    }\n\n    addFieldNode(body, cacheField, root);\n}","// https://github.com/vardars/dotize\nexport default dotize = {};\n\ndotize.convert = function(obj, prefix) {\n    if ((!obj || typeof obj != \"object\") && !Array.isArray(obj)) {\n        if (prefix) {\n            var newObj = {};\n            newObj[prefix] = obj;\n            return newObj;\n        } else {\n            return obj;\n        }\n    }\n\n    var newObj = {};\n\n    function recurse(o, p, isArrayItem) {\n        for (var f in o) {\n            if (o[f] && typeof o[f] === \"object\") {\n                if (Array.isArray(o[f])) {\n                    if (isEmptyArray(o[f])) {\n                        newObj[getFieldName(f, p, true)] = o[f]; // empty array\n                    } else {\n                        newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\n                    }\n                } else {\n                    if (isArrayItem) {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p, true)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\n                        }\n                    } else {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p)); // object\n                        }\n                    }\n                }\n            } else {\n                if (isArrayItem || isNumber(f)) {\n                    newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\n                } else {\n                    newObj[getFieldName(f, p)] = o[f]; // primitive\n                }\n            }\n        }\n\n        if (isEmptyObj(newObj))\n            return obj;\n\n        return newObj;\n    }\n\n    function isNumber(f) {\n        return !isNaN(parseInt(f));\n    }\n\n    function isEmptyObj(obj) {\n        for (var prop in obj) {\n            if (Object.hasOwnProperty.call(obj, prop))\n                return false;\n        }\n\n        return true;\n    }\n\n    function isEmptyArray(o) {\n        if (Array.isArray(o) && o.length == 0)\n            return true;\n        return false;\n    }\n\n    function getFieldName(field, prefix, isArrayItem, isArray) {\n        if (isArray)\n            return (prefix ? prefix : \"\") + (isNumber(field) ? \"[\" + field + \"]\" : \".\" + field);\n        else if (isArrayItem)\n            return (prefix ? prefix : \"\") + \"[\" + field + \"]\";\n        else\n            return (prefix ? prefix + \".\" : \"\") + field;\n    }\n\n    return recurse(obj, prefix, Array.isArray(obj));\n};","import dot from 'dot-object';\nimport {_} from 'meteor/underscore';\n\n/**\n * Given a named query that has a specific body, you can query its subbody\n * This performs an intersection of the bodies allowed in each\n *\n * @param allowedBody\n * @param clientBody\n */\nexport default function (allowedBody, clientBody) {\n    const allowedBodyDot = _.keys(dot.dot(allowedBody));\n    const clientBodyDot = _.keys(dot.dot(clientBody));\n\n    const intersection = _.intersection(allowedBodyDot, clientBodyDot);\n\n    const build = {};\n    intersection.forEach(intersectedField => {\n        build[intersectedField] = 1;\n    });\n\n    return dot.object(build);\n}","// 1. Clone children with meta relationships\n// 2. Apply $metadata to children\n// 3. Removes link storage (if not specified)\n// 4. Stores oneResult links as a single object instead of array\nimport applyReducers from '../reducers/lib/applyReducers';\nimport cleanReducerLeftovers from '../reducers/lib/cleanReducerLeftovers';\nimport sift from 'sift';\nimport {Minimongo} from 'meteor/minimongo';\n\nexport default (node, params) => {\n    snapBackCaches(node);\n    applyReducers(node, params);\n    cleanReducerLeftovers(node);\n\n    _.each(node.collectionNodes, collectionNode => {\n        cloneMetaChildren(collectionNode, node.results)\n    });\n\n    _.each(node.collectionNodes, collectionNode => {\n        assembleMetadata(collectionNode, node.results)\n    });\n\n    removeLinkStorages(node, node.results);\n    storeOneResults(node, node.results);\n    applyPostFilters(node);\n    applyPostOptions(node);\n    applyPostFilter(node, params);\n}\n\nexport function applyPostFilters(node) {\n    const postFilters = node.props.$postFilters;\n    if (postFilters) {\n        node.results = sift(postFilters, node.results);\n    }\n}\n\nexport function applyPostOptions(node) {\n    const options = node.props.$postOptions;\n    if (options) {\n        if (options.sort) {\n            const sorter = new Minimongo.Sorter(options.sort);\n            node.results.sort(sorter.getComparator());\n        }\n        if (options.limit || options.skip) {\n            const start = options.skip || 0;\n            const end = options.limit ? options.limit + start : node.results.length;\n            node.results = node.results.slice(start, end);\n        }\n    }\n}\n\n\n/**\n * Optionally applies a post filtering option\n */\nfunction applyPostFilter(node, params) {\n    if (node.props.$postFilter) {\n        const filter = node.props.$postFilter;\n\n        if (_.isArray(filter)) {\n            filter.forEach(f => {\n                node.results = f(node.results, params);\n            })\n        } else {\n            node.results = filter(node.results, params);\n        }\n    }\n}\n\nexport function removeLinkStorages(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    _.each(node.collectionNodes, collectionNode => {\n        const removeStorageField = collectionNode.shouldCleanStorage;\n        _.each(sameLevelResults, result => {\n            if (removeStorageField) {\n                delete result[collectionNode.linkStorageField];\n            }\n\n            removeLinkStorages(collectionNode, result[collectionNode.linkName]);\n        })\n    })\n}\n\nexport function storeOneResults(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(sameLevelResults, result => {\n            storeOneResults(collectionNode, result[collectionNode.linkName]);\n        });\n\n        if (collectionNode.isOneResult) {\n            sameLevelResults.forEach(result => {\n                if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\n                    result[collectionNode.linkName] = result[collectionNode.linkName]\n                        ? _.first(result[collectionNode.linkName])\n                        : undefined;\n                }\n            })\n        }\n    })\n}\n\nfunction cloneMetaChildren(node, parentResults) {\n    if (!parentResults) {\n        return;\n    }\n\n    const linkName = node.linkName;\n    const isMeta = node.isMeta;\n\n    parentResults.forEach(parentResult => {\n        if (isMeta && parentResult[linkName]) {\n            parentResult[linkName] = parentResult[linkName].map(object => {\n                return Object.assign({}, object);\n            });\n        }\n\n        node.collectionNodes.forEach(collectionNode => {\n            cloneMetaChildren(collectionNode, parentResult[linkName]);\n        });\n    });\n}\n\nexport function assembleMetadata(node, parentResults) {\n    // assembling metadata is depth first\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(parentResults, result => {\n            assembleMetadata(collectionNode, result[node.linkName])\n        });\n    });\n\n    if (node.isMeta) {\n        if (node.isVirtual) {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n\n                _.each(childResult, object => {\n                    const storage = object[node.linkStorageField];\n\n                    storeMetadata(object, parentResult, storage, true);\n                });\n            })\n        } else {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n                const storage = parentResult[node.linkStorageField];\n\n                _.each(childResult, object => {\n                    storeMetadata(object, parentResult, storage, false);\n                });\n            })\n        }\n    }\n}\n\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\n    if (isVirtual) {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id')\n    } else {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == element._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id');\n    }\n}\n\nfunction snapBackCaches(node) {\n    node.collectionNodes.forEach(collectionNode => {\n        snapBackCaches(collectionNode);\n    });\n\n    if (!_.isEmpty(node.snapCaches)) {\n        // process stuff\n        _.each(node.snapCaches, (linkName, cacheField) => {\n            const isSingle = _.contains(node.snapCachesSingles, cacheField);\n            const linker = node.collection.getLinker(linkName);\n            // we do this because for one direct and one meta direct, id is not stored\n            const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\n\n            node.results.forEach(result => {\n                if (result[cacheField]) {\n                    if (shoudStoreLinkStorage) {\n                        Object.assign(result[cacheField], {\n                            _id: linker.isMeta()\n                                ? result[linker.linkStorageField]._id\n                                : result[linker.linkStorageField]\n                        });\n                    }\n\n                    if (isSingle && _.isArray(result[cacheField])) {\n                        result[linkName] = _.first(result[cacheField]);\n                    } else {\n                        result[linkName] = result[cacheField];\n                    }\n\n                    delete result[cacheField];\n                }\n            })\n        })\n    }\n}\n","import {check, Match} from 'meteor/check';\nimport deepClone from 'lodash.clonedeep';\n\nfunction defaultFilterFunction({\n    filters,\n    options,\n    params\n}) {\n    if (params.filters) {\n        Object.assign(filters, params.filters);\n    }\n    if (params.options) {\n        Object.assign(options, params.options);\n    }\n}\n\nfunction applyFilterRecursive(data, params = {}, isRoot = false) {\n    if (isRoot && !_.isFunction(data.$filter)) {\n        data.$filter = defaultFilterFunction;\n    }\n\n    if (data.$filter) {\n        check(data.$filter, Match.OneOf(Function, [Function]));\n\n        data.$filters = data.$filters || {};\n        data.$options = data.$options || {};\n\n        if (_.isArray(data.$filter)) {\n            data.$filter.forEach(filter => {\n                filter.call(null, {\n                    filters: data.$filters,\n                    options: data.$options,\n                    params: params\n                })\n            });\n        } else {\n            data.$filter({\n                filters: data.$filters,\n                options: data.$options,\n                params: params\n            });\n        }\n\n        data.$filter = null;\n        delete(data.$filter);\n    }\n\n    _.each(data, (value, key) => {\n        if (_.isObject(value)) {\n            return applyFilterRecursive(value, params);\n        }\n    })\n}\n\nfunction applyPagination(body, _params) {\n    if (body['$paginate'] && _params) {\n        if (!body.$options) {\n            body.$options = {};\n        }\n\n        if (_params.limit) {\n            _.extend(body.$options, {\n                limit: _params.limit\n            })\n        }\n\n        if (_params.skip) {\n            _.extend(body.$options, {\n                skip: _params.skip\n            })\n        }\n\n        delete body['$paginate'];\n    }\n}\n\nexport default (_body, _params = {}) => {\n    let body = deepClone(_body);\n    let params = deepClone(_params);\n\n    applyPagination(body, params);\n    applyFilterRecursive(body, params, true);\n\n    return body;\n}\n","import applyProps from './applyProps.js';\nimport { assembleMetadata, removeLinkStorages, storeOneResults } from './prepareForDelivery';\nimport prepareForDelivery from './prepareForDelivery';\n\n/**\n * This is always run client side to build the data graph out of client-side collections.\n *\n * @param node\n * @param parentObject\n * @returns {*}\n */\nfunction fetch(node, parentObject) {\n    let {filters, options} = applyProps(node);\n\n    let results = [];\n\n    if (parentObject) {\n        let accessor = node.linker.createLink(parentObject, node.collection);\n\n        if (node.isVirtual) {\n            options.fields = options.fields || {};\n            _.extend(options.fields, {\n                [node.linkStorageField]: 1\n            });\n        }\n\n        results = accessor.find(filters, options).fetch();\n    } else {\n        results = node.collection.find(filters, options).fetch();\n    }\n\n    _.each(node.collectionNodes, collectionNode => {\n        _.each(results, result => {\n            result[collectionNode.linkName] = fetch(collectionNode, result);\n            //delete result[node.linker.linkStorageField];\n        })\n    });\n\n    return results;\n}\n\nexport default (node, params) => {\n    node.results = fetch(node);\n\n    prepareForDelivery(node, params);\n\n    return node.results;\n}\n","import FieldNode from './fieldNode.js';\nimport ReducerNode from './reducerNode.js';\nimport deepClone from 'lodash.clonedeep';\nimport {check, Match} from 'meteor/check';\n\nexport default class CollectionNode {\n    constructor(collection, body = {}, linkName = null) {\n        if (collection && !_.isObject(body)) {\n            throw new Meteor.Error('invalid-body', 'Every collection link should have its body defined as an object.');\n        }\n\n        this.body = deepClone(body);\n        this.linkName = linkName;\n        this.collection = collection;\n\n        this.nodes = [];\n        this.props = {};\n        this.parent = null;\n        this.linker = null;\n        this.linkStorageField = null;\n        this.scheduledForDeletion = false;\n        this.reducers = [];\n        this.results = [];\n        this.snapCaches = {}; // {cacheField: linkName}\n        this.snapCachesSingles = []; // [cacheField1, cacheField2]\n    }\n\n    get collectionNodes() {\n        return _.filter(this.nodes, n => n instanceof CollectionNode)\n    }\n\n    get fieldNodes() {\n        return _.filter(this.nodes, n => n instanceof FieldNode);\n    }\n\n    get reducerNodes() {\n        return _.filter(this.nodes, n => n instanceof ReducerNode);\n    }\n\n    /**\n     * Adds children to itself\n     *\n     * @param node\n     * @param linker\n     */\n    add(node, linker) {\n        node.parent = this;\n\n        if (linker) {\n            node.linker = linker;\n            node.linkStorageField = linker.linkStorageField;\n            node.isMeta = linker.isMeta();\n            node.isVirtual = linker.isVirtual();\n            node.isOneResult = linker.isOneResult();\n            node.shouldCleanStorage = this._shouldCleanStorage(node);\n        }\n\n        this.nodes.push(node);\n    }\n\n    /**\n     * @param prop\n     * @param value\n     */\n    addProp(prop, value) {\n        if (prop === '$postFilter') {\n            check(value, Match.OneOf(Function, [Function]))\n        }\n\n        _.extend(this.props, {\n            [prop]: value\n        });\n    }\n\n    /**\n     * @param _node\n     */\n    remove(_node) {\n        this.nodes = _.filter(this.nodes, node => _node !== node);\n    }\n\n    /**\n     * @param filters\n     * @param options\n     */\n    applyFields(filters, options) {\n        let hasAddedAnyField = false;\n\n        _.each(this.fieldNodes, n => {\n            hasAddedAnyField = true;\n            n.applyFields(options.fields)\n        });\n\n        // it will only get here if it has collectionNodes children\n        _.each(this.collectionNodes, (collectionNode) => {\n            let linker = collectionNode.linker;\n\n            if (linker && !linker.isVirtual()) {\n                options.fields[linker.linkStorageField] = 1;\n                hasAddedAnyField = true;\n            }\n        });\n\n        // if he selected filters, we should automatically add those fields\n        _.each(filters, (value, field) => {\n            // special handling for the $meta filter and conditional operators\n            if (!_.contains(['$or', '$nor', '$not', '$and', '$meta'], field)) {\n                // if the field or the parent of the field already exists, don't add it\n                if (!_.has(options.fields, field.split('.')[0])){\n                    hasAddedAnyField = true;\n                    options.fields[field] = 1;\n                }\n            }\n        });\n\n        if (!hasAddedAnyField) {\n            options.fields = {_id: 1};\n        }\n    }\n\n    /**\n     * @param fieldName\n     * @returns {boolean}\n     */\n    hasField(fieldName) {\n        return !!_.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName\n        })\n    }\n\n    /**\n     * @param fieldName\n     * @returns {FieldNode}\n     */\n    getField(fieldName) {\n        return _.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasCollectionNode(name) {\n        return !!_.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasReducerNode(name) {\n        return !!_.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {ReducerNode}\n     */\n    getReducerNode(name) {\n        return _.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {CollectionNode}\n     */\n    getCollectionNode(name) {\n        return _.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @returns {*}\n     */\n    getName() {\n        return this.linkName\n            ? this.linkName\n            : (this.collection ? this.collection._name : 'N/A');\n    }\n\n    /**\n     * This is used for caching links\n     *\n     * @param cacheField\n     * @param subLinkName\n     */\n    snapCache(cacheField, subLinkName) {\n        this.snapCaches[cacheField] = subLinkName;\n\n        if (this.collection.getLinker(subLinkName).isOneResult()) {\n            this.snapCachesSingles.push(cacheField);\n        }\n    }\n\n    /**\n     * This method verifies whether to remove the linkStorageField form the results\n     * unless you specify it in your query.\n     *\n     * @param node\n     * @returns {boolean}\n     * @private\n     */\n    _shouldCleanStorage(node) {\n        if (node.linkStorageField === '_id') {\n            return false;\n        } else {\n            if (node.isVirtual) {\n                return !node.hasField(node.linkStorageField);\n            } else {\n                return !this.hasField(node.linkStorageField);\n            }\n        }\n    }\n}\n","export default class FieldNode {\n    constructor(name, body) {\n        this.name = name;\n        this.body = _.isObject(body) ? 1 : body;\n        this.scheduledForDeletion = false;\n    }\n\n    applyFields(fields) {\n        fields[this.name] = this.body;\n    }\n}","export default class ReducerNode {\n    constructor(name, {body, reduce}) {\n        this.name = name;\n        this.body = body;\n        this.reduceFunction = reduce;\n    }\n\n    /**\n     * When computing we also pass the parameters\n     * \n     * @param {*} object \n     * @param {*} args \n     */\n    compute(object, ...args) {\n        object[this.name] = this.reduce.call(this, object, ...args);\n    }\n\n    reduce(object, ...args) {\n        return this.reduceFunction.call(this, object, ...args);\n    }\n}","import {check} from 'meteor/check';\n\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * @param data\n     */\n    addReducers(data) {\n        if (!this[storage]) {\n            this[storage] = {};\n        }\n\n        _.each(data, (reducerConfig, reducerName) => {\n            if (!this[reducerConfig]) {\n                this[reducerConfig] = {};\n            }\n\n            if (this.getLinker(reducerName)) {\n                throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${this._name} collection`)\n            }\n\n            if (this[reducerConfig][reducerName]) {\n                throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it was already added to ${this._name} collection`)\n            }\n\n            check(reducerConfig, {\n                body: Object,\n                reduce: Function\n            });\n\n            _.extend(this[storage], {\n                [reducerName]: reducerConfig\n            });\n        });\n    },\n\n    /**\n     * @param name\n     * @returns {*}\n     */\n    getReducer(name) {\n        if (this[storage]) {\n            return this[storage][name];\n        }\n    }\n});","export default function applyReducers(root, params) {\n    _.each(root.collectionNodes, node => {\n        applyReducers(node, params);\n    });\n\n    _.each(root.reducerNodes, reducerNode => {\n        root.results.forEach(result => {\n            reducerNode.compute(result, params);\n        });\n    });\n}","/**\n * @param root\n */\nexport default function cleanReducerLeftovers(root) {\n    _.each(root.collectionNodes, node => {\n        if (node.scheduledForDeletion) {\n            root.results.forEach(result => {\n                delete result[node.linkName];\n            })\n        }\n    });\n\n    _.each(root.collectionNodes, node => {\n        cleanReducerLeftovers(node);\n    });\n\n    _.each(root.fieldNodes, node => {\n        if (node.scheduledForDeletion) {\n            cleanNestedFields(node.name.split('.'), root.results);\n        }\n    });\n\n    _.each(root.reducerNodes, node => {\n        if (node.scheduledForDeletion) {\n            root.results.forEach(result => {\n                delete result[node.name];\n            })\n        }\n    });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n *\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results) {\n    const fieldName = parts[0];\n    if (parts.length === 1) {\n\n        results.forEach(result => {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        });\n\n        return;\n    }\n\n    parts.shift();\n    cleanNestedFields(parts, results.map(result => result[fieldName]));\n\n    results.forEach(result => {\n        if (_.keys(result[fieldName]).length === 0) {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        }\n    })\n}\n","import dot from 'dot-object';\nimport { createNodes } from '../../lib/createGraph';\nimport CollectionNode from '../../nodes/collectionNode';\nimport FieldNode from '../../nodes/fieldNode';\nimport ReducerNode from '../../nodes/reducerNode';\nimport embedReducerWithLink from './embedReducerWithLink';\n\nexport default function addReducers(root) {\n    // we add reducers last, after we have added all the fields.\n    root.reducerNodes.forEach(reducer => {\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(root, fieldName, body);\n        })\n    });\n}\n\n/**\n * @param root\n * @param fieldName\n * @param body\n */\nexport function handleAddElement(root, fieldName, body) {\n    // if it's a link\n    const collection = root.collection;\n    const linker = collection.getLinker(fieldName);\n    if (linker) {\n        return handleAddLink(fieldName, body, root, linker);\n    }\n\n    const reducer = collection.getReducer(fieldName);\n    if (reducer) {\n        return handleAddReducer(fieldName, reducer, root);\n    }\n\n    // we assume it's a field in this case\n    return handleAddField(fieldName, body, root);\n}\n\n/**\n * @param fieldName\n * @param reducer\n * @param root\n */\nexport function handleAddReducer(fieldName, reducer, root) {\n    if (!root.hasReducerNode(fieldName)) {\n        let reducerNode = new ReducerNode(fieldName, reducer);\n        root.add(reducerNode);\n        reducerNode.scheduledForDeletion = true;\n\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(root, fieldName, body);\n        })\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n * @param linker\n */\nexport function handleAddLink(fieldName, body, root, linker) {\n    if (root.hasCollectionNode(fieldName)) {\n        const collectionNode = root.getCollectionNode(fieldName);\n\n        embedReducerWithLink(body, collectionNode);\n    } else {\n        // add\n        let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n        collectionNode.scheduledForDeletion = true;\n        root.add(collectionNode, linker);\n\n        createNodes(collectionNode);\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n */\nexport function handleAddField(fieldName, body, root) {\n    if (_.isObject(body)) {\n        // if reducer specifies a nested field\n        const dots = dot.dot({\n            [fieldName]: body\n        });\n\n        _.each(dots, (value, key) => {\n            if (!root.hasField(key)) {\n                let fieldNode = new FieldNode(key, value);\n                fieldNode.scheduledForDeletion = true;\n\n                root.add(fieldNode);\n            }\n        });\n    } else {\n        // if reducer does not specify a nested field, and the field does not exist.\n        if (!root.hasField(fieldName)) {\n            let fieldNode = new FieldNode(fieldName, body);\n            fieldNode.scheduledForDeletion = true;\n\n            root.add(fieldNode);\n        }\n    }\n}\n","import {handleAddField, handleAddElement, handleAddReducer} from './createReducers';\n\n/**\n * Embeds the reducer body with a collection body\n * @param reducerBody\n * @param collectionNode\n */\nexport default function embedReducerWithLink(reducerBody, collectionNode) {\n    _.each(reducerBody, (value, key) => {\n        const collection = collectionNode.collection;\n\n        if (_.isObject(value)) {\n            // nested field or link\n            if (collectionNode.body[key]) {\n                // if it exists\n                const linker = collection.getLinker(key);\n\n                // if it's a link\n                if (linker) {\n                    embedReducerWithLink(value, collectionNode.getCollectionNode(key));\n                    return;\n                }\n\n                handleAddField(key, value, collectionNode);\n            } else {\n                // does not exist, so it may be a link/reducer/field\n                handleAddElement(root, key, value);\n            }\n        } else {\n            // if this field or other reducer exists within the collection\n\n            if (!collectionNode.body[key]) {\n                // can only be field or another reducer for this.\n                const reducer = collection.getReducer(key);\n                if (reducer) {\n                    // if it's another reducer\n                    return handleAddReducer(key, reducer, collectionNode);\n                }\n\n                return handleAddField(key, value, collectionNode);\n            }\n        }\n    })\n}"]}