{"version":3,"sources":["meteor://ðŸ’»app/packages/okgrow:analytics/client/main.js"],"names":["module","export","analytics","OKGAnalytics","trackEventWhenReady","identifyWhenReady","watch","require","v","Meteor","Mongo","Tracker","AnalyticsUsers","Collection","SETTINGS","settings","public","analyticsSettings","getUserEmail","userEmailAddress","userId","user","findOne","_id","fields","emails","address","services","facebook","email","github","google","initialized","trackLogins","startup","Package","autorun","userEmail"],"mappings":"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","file":"/packages/okgrow_analytics.js","sourcesContent":["import OKGAnalytics, { analytics, trackEventWhenReady, identifyWhenReady } from '@okgrow/auto-analytics';\n\n/* eslint-disable import/no-extraneous-dependencies, import/extensions */\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\n/* eslint-enable */\n\nconst AnalyticsUsers = new Mongo.Collection('AnalyticsUsers');\n\nconst SETTINGS = (Meteor.settings\n                  && Meteor.settings.public\n                  && Meteor.settings.public.analyticsSettings)\n                || false;\n\nOKGAnalytics(SETTINGS);\n\nconst getUserEmail = function getUserEmail() {\n  let userEmailAddress = null;\n\n  if (Meteor.userId()) {\n    const user = AnalyticsUsers.findOne({ _id: Meteor.userId() }, {\n      fields: {\n        emails: 1,\n        'services.facebook.email': 1,\n        'services.google.email': 1,\n        'services.github.email': 1,\n      },\n    });\n\n    if (user && user.emails && user.emails[0]) {\n      userEmailAddress = user.emails[0].address;\n    } else if (user && user.services) {\n      const services = user.services;\n\n      if (services.facebook) {\n        userEmailAddress = services.facebook.email;\n      } else if (services.github) {\n        userEmailAddress = services.github.email;\n      } else if (services.google) {\n        userEmailAddress = services.google.email;\n      }\n    }\n  }\n\n  return userEmailAddress;\n};\n\n// Track and report Meteor's login & logout events to analytics.\n// TODO: Add support for sign up event.\n// TODO: Refactor to remove initialized.\nlet initialized = false;\n\nconst trackLogins = function trackLogins() {\n  // Don't run on first time. We need to access Meteor.userId() for reactivity.\n  Meteor.userId();\n\n  if (initialized) {\n    // When Meteor.userId() changes this will run.\n    if (Meteor.userId()) {\n      // TODO: I think it's not guaranteed that userEmail has been set because the\n      // 'AnalyticsUsers' publication might not be ready yet.\n      identifyWhenReady(Meteor.userId(), { email: getUserEmail() });\n      trackEventWhenReady('Signed in');\n    } else {\n      trackEventWhenReady('Signed out');\n    }\n  }\n\n  initialized = true;\n};\n\nMeteor.startup(() => {\n  if (Package['accounts-base']) {\n    Tracker.autorun(() => {\n      userEmail = getUserEmail();\n    });\n\n    Tracker.autorun(trackLogins);\n  }\n});\n\nexport { analytics }; // eslint-disable-line import/prefer-default-export\n"]}