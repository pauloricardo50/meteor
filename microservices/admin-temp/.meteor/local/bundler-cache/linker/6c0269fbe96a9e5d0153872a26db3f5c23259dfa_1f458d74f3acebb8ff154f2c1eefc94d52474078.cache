[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\n/* Package-scope variables */\nvar npmLoadScript, DocHead;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"kadira:dochead\":{\"main.js\":function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/kadira_dochead/main.js                                                                           //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nnpmLoadScript = require('load-script');                                                                      // 1\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"both.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/kadira_dochead/lib/both.js                                                                       //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar FlowRouter = null;                                                                                       // 1\n                                                                                                             //\nif (Package['kadira:flow-router-ssr']) {                                                                     // 2\n  FlowRouter = Package['kadira:flow-router-ssr'].FlowRouter;                                                 // 3\n}                                                                                                            // 4\n                                                                                                             //\nif (Meteor.isClient) {                                                                                       // 6\n  var titleDependency = new Tracker.Dependency();                                                            // 7\n}                                                                                                            // 8\n                                                                                                             //\nDocHead = {                                                                                                  // 10\n  currentTitle: null,                                                                                        // 11\n  setTitle: function (title) {                                                                               // 12\n    if (Meteor.isClient) {                                                                                   // 13\n      titleDependency.changed();                                                                             // 14\n      document.title = title;                                                                                // 15\n    } else {                                                                                                 // 16\n      this.currentTitle = title;                                                                             // 17\n      var titleHtml = \"<title>\" + title + \"</title>\";                                                        // 18\n                                                                                                             //\n      this._addToHead(titleHtml);                                                                            // 19\n    }                                                                                                        // 20\n  },                                                                                                         // 21\n  addMeta: function (info) {                                                                                 // 22\n    this._addTag(info, 'meta');                                                                              // 23\n  },                                                                                                         // 24\n  addLink: function (info) {                                                                                 // 25\n    this._addTag(info, 'link');                                                                              // 26\n  },                                                                                                         // 27\n  getTitle: function () {                                                                                    // 28\n    if (Meteor.isClient) {                                                                                   // 29\n      titleDependency.depend();                                                                              // 30\n      return document.title;                                                                                 // 31\n    }                                                                                                        // 32\n                                                                                                             //\n    return this.currentTitle;                                                                                // 33\n  },                                                                                                         // 34\n  addLdJsonScript: function (jsonObj) {                                                                      // 35\n    var strObj = JSON.stringify(jsonObj);                                                                    // 36\n                                                                                                             //\n    this._addLdJsonScript(strObj);                                                                           // 37\n  },                                                                                                         // 38\n  loadScript: function (url, options, callback) {                                                            // 39\n    if (Meteor.isClient) {                                                                                   // 40\n      npmLoadScript(url, options, callback);                                                                 // 41\n    }                                                                                                        // 42\n  },                                                                                                         // 43\n  _addTag: function (info, tag) {                                                                            // 44\n    var meta = this._buildTag(info, tag);                                                                    // 45\n                                                                                                             //\n    if (Meteor.isClient) {                                                                                   // 46\n      document.getElementsByTagName('head')[0].insertAdjacentHTML('beforeend', meta);                        // 47\n    } else {                                                                                                 // 48\n      this._addToHead(meta);                                                                                 // 49\n    }                                                                                                        // 50\n  },                                                                                                         // 51\n  _addToHead: function (html) {                                                                              // 52\n    // only work there is kadira:flow-router-ssr                                                             // 53\n    if (!FlowRouter) {                                                                                       // 54\n      return;                                                                                                // 55\n    }                                                                                                        // 56\n                                                                                                             //\n    var ssrContext = FlowRouter.ssrContext.get();                                                            // 57\n                                                                                                             //\n    if (ssrContext) {                                                                                        // 58\n      ssrContext.addToHead(html);                                                                            // 59\n    }                                                                                                        // 60\n  },                                                                                                         // 61\n  _buildTag: function (metaInfo, type) {                                                                     // 62\n    var props = \"\";                                                                                          // 63\n                                                                                                             //\n    for (var key in meteorBabelHelpers.sanitizeForInObject(metaInfo)) {                                      // 64\n      props += key + \"=\\\"\" + metaInfo[key] + \"\\\" \";                                                          // 65\n    }                                                                                                        // 66\n                                                                                                             //\n    props += 'dochead=\"1\"';                                                                                  // 67\n    var meta = \"<\" + type + \" \" + props + \"/>\";                                                              // 68\n    return meta;                                                                                             // 69\n  },                                                                                                         // 70\n  _addLdJsonScript: function (stringifiedObject) {                                                           // 71\n    var scriptTag = \"<script type=\\\"application/ld+json\\\" dochead=\\\"1\\\">\" + stringifiedObject + \"</script>\";\n                                                                                                             //\n    if (Meteor.isClient) {                                                                                   // 73\n      document.getElementsByTagName('head')[0].insertAdjacentHTML('beforeend', scriptTag);                   // 74\n    } else {                                                                                                 // 75\n      this._addToHead(scriptTag);                                                                            // 76\n    }                                                                                                        // 77\n  },                                                                                                         // 78\n  removeDocHeadAddedTags: function () {                                                                      // 79\n    if (Meteor.isClient) {                                                                                   // 80\n      var elements = document.querySelectorAll('[dochead=\"1\"]'); // We use for-of here to loop only over iterable objects\n                                                                                                             //\n      for (var _iterator = elements, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;                                                                                            // 83\n                                                                                                             //\n        if (_isArray) {                                                                                      // 83\n          if (_i >= _iterator.length) break;                                                                 // 83\n          _ref = _iterator[_i++];                                                                            // 83\n        } else {                                                                                             // 83\n          _i = _iterator.next();                                                                             // 83\n          if (_i.done) break;                                                                                // 83\n          _ref = _i.value;                                                                                   // 83\n        }                                                                                                    // 83\n                                                                                                             //\n        var element = _ref;                                                                                  // 83\n        element.parentNode.removeChild(element);                                                             // 84\n      }                                                                                                      // 85\n    }                                                                                                        // 86\n  }                                                                                                          // 87\n};                                                                                                           // 10\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"flow_router.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/kadira_dochead/lib/flow_router.js                                                                //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nif (Package['kadira:flow-router-ssr']) {                                                                     // 1\n  var FlowRouter = Package['kadira:flow-router-ssr'].FlowRouter; // remove added tags when changing routes   // 2\n                                                                                                             //\n  FlowRouter.triggers.enter(function () {                                                                    // 4\n    Meteor.startup(DocHead.removeDocHeadAddedTags);                                                          // 5\n  });                                                                                                        // 6\n}                                                                                                            // 7\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"node_modules\":{\"load-script\":{\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// node_modules/meteor/kadira_dochead/node_modules/load-script/index.js                                      //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n                                                                                                             // 1\nmodule.exports = function load (src, opts, cb) {                                                             // 2\n  var head = document.head || document.getElementsByTagName('head')[0]                                       // 3\n  var script = document.createElement('script')                                                              // 4\n                                                                                                             // 5\n  if (typeof opts === 'function') {                                                                          // 6\n    cb = opts                                                                                                // 7\n    opts = {}                                                                                                // 8\n  }                                                                                                          // 9\n                                                                                                             // 10\n  opts = opts || {}                                                                                          // 11\n  cb = cb || function() {}                                                                                   // 12\n                                                                                                             // 13\n  script.type = opts.type || 'text/javascript'                                                               // 14\n  script.charset = opts.charset || 'utf8';                                                                   // 15\n  script.async = 'async' in opts ? !!opts.async : true                                                       // 16\n  script.src = src                                                                                           // 17\n                                                                                                             // 18\n  if (opts.attrs) {                                                                                          // 19\n    setAttributes(script, opts.attrs)                                                                        // 20\n  }                                                                                                          // 21\n                                                                                                             // 22\n  if (opts.text) {                                                                                           // 23\n    script.text = '' + opts.text                                                                             // 24\n  }                                                                                                          // 25\n                                                                                                             // 26\n  var onend = 'onload' in script ? stdOnEnd : ieOnEnd                                                        // 27\n  onend(script, cb)                                                                                          // 28\n                                                                                                             // 29\n  // some good legacy browsers (firefox) fail the 'in' detection above                                       // 30\n  // so as a fallback we always set onload                                                                   // 31\n  // old IE will ignore this and new IE will set onload                                                      // 32\n  if (!script.onload) {                                                                                      // 33\n    stdOnEnd(script, cb);                                                                                    // 34\n  }                                                                                                          // 35\n                                                                                                             // 36\n  head.appendChild(script)                                                                                   // 37\n}                                                                                                            // 38\n                                                                                                             // 39\nfunction setAttributes(script, attrs) {                                                                      // 40\n  for (var attr in attrs) {                                                                                  // 41\n    script.setAttribute(attr, attrs[attr]);                                                                  // 42\n  }                                                                                                          // 43\n}                                                                                                            // 44\n                                                                                                             // 45\nfunction stdOnEnd (script, cb) {                                                                             // 46\n  script.onload = function () {                                                                              // 47\n    this.onerror = this.onload = null                                                                        // 48\n    cb(null, script)                                                                                         // 49\n  }                                                                                                          // 50\n  script.onerror = function () {                                                                             // 51\n    // this.onload = null here is necessary                                                                  // 52\n    // because even IE9 works not like others                                                                // 53\n    this.onerror = this.onload = null                                                                        // 54\n    cb(new Error('Failed to load ' + this.src), script)                                                      // 55\n  }                                                                                                          // 56\n}                                                                                                            // 57\n                                                                                                             // 58\nfunction ieOnEnd (script, cb) {                                                                              // 59\n  script.onreadystatechange = function () {                                                                  // 60\n    if (this.readyState != 'complete' && this.readyState != 'loaded') return                                 // 61\n    this.onreadystatechange = null                                                                           // 62\n    cb(null, script) // there is no way to catch loading errors in IE8                                       // 63\n  }                                                                                                          // 64\n}                                                                                                            // 65\n                                                                                                             // 66\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nrequire(\"./node_modules/meteor/kadira:dochead/main.js\");\nrequire(\"./node_modules/meteor/kadira:dochead/lib/both.js\");\nrequire(\"./node_modules/meteor/kadira:dochead/lib/flow_router.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['kadira:dochead'] = {}, {\n  DocHead: DocHead\n});\n\n})();\n","servePath":"/packages/kadira_dochead.js","sourceMap":{"version":3,"sources":["packages/kadira:dochead/main.js","packages/kadira:dochead/lib/both.js","packages/kadira:dochead/lib/flow_router.js"],"names":["npmLoadScript","require","FlowRouter","Package","Meteor","isClient","titleDependency","Tracker","Dependency","DocHead","currentTitle","setTitle","title","changed","document","titleHtml","_addToHead","addMeta","info","_addTag","addLink","getTitle","depend","addLdJsonScript","jsonObj","strObj","JSON","stringify","_addLdJsonScript","loadScript","url","options","callback","tag","meta","_buildTag","getElementsByTagName","insertAdjacentHTML","html","ssrContext","get","addToHead","metaInfo","type","props","key","stringifiedObject","scriptTag","removeDocHeadAddedTags","elements","querySelectorAll","element","parentNode","removeChild","triggers","enter","startup"],"mappings":"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","file":"/packages/kadira_dochead.js","sourcesContent":["npmLoadScript = require('load-script');\n","var FlowRouter = null;\nif (Package['kadira:flow-router-ssr']) {\n  FlowRouter = Package['kadira:flow-router-ssr'].FlowRouter;\n}\n\nif (Meteor.isClient) {\n  var titleDependency = new Tracker.Dependency();\n}\n\nDocHead = {\n  currentTitle: null,\n  setTitle(title) {\n    if (Meteor.isClient) {\n      titleDependency.changed();\n      document.title = title;\n    } else {\n      this.currentTitle = title;\n      const titleHtml = `<title>${title}</title>`;\n      this._addToHead(titleHtml);\n    }\n  },\n  addMeta(info) {\n    this._addTag(info, 'meta');\n  },\n  addLink(info) {\n    this._addTag(info, 'link');\n  },\n  getTitle() {\n    if (Meteor.isClient) {\n      titleDependency.depend();\n      return document.title;\n    }\n    return this.currentTitle;\n  },\n  addLdJsonScript(jsonObj) {\n    const strObj = JSON.stringify(jsonObj);\n    this._addLdJsonScript(strObj);\n  },\n  loadScript(url, options, callback) {\n    if (Meteor.isClient) {\n      npmLoadScript(url, options, callback);\n    }\n  },\n  _addTag(info, tag) {\n    const meta = this._buildTag(info, tag);\n    if (Meteor.isClient) {\n      document.getElementsByTagName('head')[0].insertAdjacentHTML('beforeend', meta);\n    } else {\n      this._addToHead(meta);\n    }\n  },\n  _addToHead(html) {\n    // only work there is kadira:flow-router-ssr\n    if (!FlowRouter) {\n      return;\n    }\n    let ssrContext = FlowRouter.ssrContext.get();\n    if (ssrContext) {\n      ssrContext.addToHead(html);\n    }\n  },\n  _buildTag(metaInfo, type) {\n    let props = \"\";\n    for (let key in metaInfo) {\n      props += `${key}=\"${metaInfo[key]}\" `;\n    }\n    props += 'dochead=\"1\"';\n    var meta = `<${type} ${props}/>`;\n    return meta;\n  },\n  _addLdJsonScript(stringifiedObject) {\n    const scriptTag = `<script type=\"application/ld+json\" dochead=\"1\">${stringifiedObject}</script>`;\n    if (Meteor.isClient) {\n      document.getElementsByTagName('head')[0].insertAdjacentHTML('beforeend', scriptTag);\n    } else {\n      this._addToHead(scriptTag);\n    }\n  },\n  removeDocHeadAddedTags() {\n    if (Meteor.isClient) {\n      const elements = document.querySelectorAll('[dochead=\"1\"]');\n      // We use for-of here to loop only over iterable objects\n      for (let element of elements) {\n        element.parentNode.removeChild(element);\n      }\n    }\n  }\n};\n","if(Package['kadira:flow-router-ssr']) {\n  var FlowRouter = Package['kadira:flow-router-ssr'].FlowRouter;\n  // remove added tags when changing routes\n  FlowRouter.triggers.enter(function() {\n    Meteor.startup(DocHead.removeDocHeadAddedTags);\n  });\n}\n"]}}]