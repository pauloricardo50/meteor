[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar _ = Package.underscore._;\nvar Promise = Package.promise.Promise;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nvar enableDebugLogging = Package['reywood:publish-composite'].enableDebugLogging;\nvar publishComposite = Package['reywood:publish-composite'].publishComposite;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\n\n/* Package-scope variables */\nvar ids, what, params, body, cacher, dotize;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"cultofcoders:grapher\":{\"main.server.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/main.server.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    NamedQueryStore: () => NamedQueryStore,\n    LinkConstants: () => LinkConstants\n});\nmodule.watch(require(\"./lib/createQuery.js\"), {\n    default(v) {\n        exports.createQuery = v;\n    }\n\n}, 2);\nmodule.watch(require(\"./lib/exposure/exposure.js\"), {\n    default(v) {\n        exports.Exposure = v;\n    }\n\n}, 3);\nmodule.watch(require(\"./lib/namedQuery/cache/MemoryResultCacher\"), {\n    default(v) {\n        exports.MemoryResultCacher = v;\n    }\n\n}, 4);\nmodule.watch(require(\"./lib/namedQuery/cache/BaseResultCacher\"), {\n    default(v) {\n        exports.BaseResultCacher = v;\n    }\n\n}, 5);\nmodule.watch(require(\"./lib/compose\"), {\n    default(v) {\n        exports.compose = v;\n    }\n\n}, 6);\nmodule.watch(require(\"./lib/extension.js\"));\nmodule.watch(require(\"./lib/aggregate\"));\nmodule.watch(require(\"./lib/exposure/extension.js\"));\nmodule.watch(require(\"./lib/links/extension.js\"));\nmodule.watch(require(\"./lib/query/reducers/extension.js\"));\nmodule.watch(require(\"./lib/namedQuery/expose/extension.js\"));\nlet NamedQueryStore;\nmodule.watch(require(\"./lib/namedQuery/store\"), {\n    default(v) {\n        NamedQueryStore = v;\n    }\n\n}, 0);\nlet LinkConstants;\nmodule.watch(require(\"./lib/links/constants\"), {\n    default(v) {\n        LinkConstants = v;\n    }\n\n}, 1);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"aggregate.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/aggregate.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nMongo.Collection.prototype.aggregate = function (pipelines, options) {\n    const coll = this.rawCollection();\n    return Meteor.wrapAsync(coll.aggregate, coll)(pipelines, options);\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"compose.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/compose.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet deepExtend;\nmodule.watch(require(\"deep-extend\"), {\n    default(v) {\n        deepExtend = v;\n    }\n\n}, 0);\nmodule.exportDefault(function (...args) {\n    return deepExtend({}, ...args);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createQuery.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/createQuery.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Query;\nmodule.watch(require(\"./query/query.js\"), {\n    default(v) {\n        Query = v;\n    }\n\n}, 0);\nlet NamedQuery;\nmodule.watch(require(\"./namedQuery/namedQuery.js\"), {\n    default(v) {\n        NamedQuery = v;\n    }\n\n}, 1);\nlet NamedQueryStore;\nmodule.watch(require(\"./namedQuery/store.js\"), {\n    default(v) {\n        NamedQueryStore = v;\n    }\n\n}, 2);\nmodule.exportDefault((...args) => {\n    if (typeof args[0] === 'string') {\n        let [name, body, options] = args;\n        options = options || {}; // It's a resolver query\n\n        if (_.isFunction(body)) {\n            return createNamedQuery(name, null, body, options);\n        }\n\n        const entryPointName = _.first(_.keys(body));\n\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            throw new Meteor.Error('invalid-name', `We could not find any collection with the name \"${entryPointName}\". Make sure it is imported prior to using this`);\n        }\n\n        return createNamedQuery(name, collection, body[entryPointName], options);\n    } else {\n        // Query Creation, it can have an endpoint as collection or as a NamedQuery\n        let [body, options] = args;\n        options = options || {};\n\n        const entryPointName = _.first(_.keys(body));\n\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\n                console.warn(`You are creating a query with the entry point \"${entryPointName}\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.`);\n            }\n\n            return createNamedQuery(entryPointName, null, {}, {\n                params: body[entryPointName]\n            });\n        } else {\n            return createNormalQuery(collection, body[entryPointName], options);\n        }\n    }\n});\n\nfunction createNamedQuery(name, collection, body, options = {}) {\n    // if it exists already, we re-use it\n    const namedQuery = NamedQueryStore.get(name);\n    let query;\n\n    if (!namedQuery) {\n        query = new NamedQuery(name, collection, body, options);\n        NamedQueryStore.add(name, query);\n    } else {\n        query = namedQuery.clone(options.params);\n    }\n\n    return query;\n}\n\nfunction createNormalQuery(collection, body, options) {\n    return new Query(collection, body, options);\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/extension.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Query;\nmodule.watch(require(\"./query/query.js\"), {\n    default(v) {\n        Query = v;\n    }\n\n}, 0);\nlet NamedQuery;\nmodule.watch(require(\"./namedQuery/namedQuery.js\"), {\n    default(v) {\n        NamedQuery = v;\n    }\n\n}, 1);\nlet NamedQueryStore;\nmodule.watch(require(\"./namedQuery/store.js\"), {\n    default(v) {\n        NamedQueryStore = v;\n    }\n\n}, 2);\n\n_.extend(Mongo.Collection.prototype, {\n    createQuery(...args) {\n        if (typeof args[0] === 'string') {\n            //NamedQuery\n            const [name, body, options] = args;\n            const query = new NamedQuery(name, this, body, options);\n            NamedQueryStore.add(name, query);\n            return query;\n        } else {\n            const [body, options] = args;\n            return new Query(this, body, options);\n        }\n    }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposure\":{\"exposure.config.schema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/exposure/exposure.config.schema.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    ExposureDefaults: () => ExposureDefaults,\n    ExposureSchema: () => ExposureSchema,\n    validateBody: () => validateBody\n});\nlet createGraph;\nmodule.watch(require(\"../query/lib/createGraph.js\"), {\n    default(v) {\n        createGraph = v;\n    }\n\n}, 0);\nlet Match;\nmodule.watch(require(\"meteor/check\"), {\n    Match(v) {\n        Match = v;\n    }\n\n}, 1);\nconst ExposureDefaults = {\n    blocking: false,\n    method: true,\n    publication: true\n};\nconst ExposureSchema = {\n    firewall: Match.Maybe(Match.OneOf(Function, [Function])),\n    maxLimit: Match.Maybe(Match.Integer),\n    maxDepth: Match.Maybe(Match.Integer),\n    publication: Match.Maybe(Boolean),\n    method: Match.Maybe(Boolean),\n    blocking: Match.Maybe(Boolean),\n    body: Match.Maybe(Object),\n    restrictedFields: Match.Maybe([String]),\n    restrictLinks: Match.Maybe(Match.OneOf(Function, [String]))\n};\n\nfunction validateBody(collection, body) {\n    try {\n        createGraph(collection, body);\n    } catch (e) {\n        throw new Meteor.Error('invalid-body', 'We could not build a valid graph when trying to create your exposure: ' + e.toString());\n    }\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposure.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/exposure/exposure.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => Exposure\n});\nlet genCountEndpoint;\nmodule.watch(require(\"../query/counts/genEndpoint.server.js\"), {\n    default(v) {\n        genCountEndpoint = v;\n    }\n\n}, 0);\nlet createGraph;\nmodule.watch(require(\"../query/lib/createGraph.js\"), {\n    default(v) {\n        createGraph = v;\n    }\n\n}, 1);\nlet recursiveCompose;\nmodule.watch(require(\"../query/lib/recursiveCompose.js\"), {\n    default(v) {\n        recursiveCompose = v;\n    }\n\n}, 2);\nlet hypernova;\nmodule.watch(require(\"../query/hypernova/hypernova.js\"), {\n    default(v) {\n        hypernova = v;\n    }\n\n}, 3);\nlet ExposureSchema, ExposureDefaults, validateBody;\nmodule.watch(require(\"./exposure.config.schema.js\"), {\n    ExposureSchema(v) {\n        ExposureSchema = v;\n    },\n\n    ExposureDefaults(v) {\n        ExposureDefaults = v;\n    },\n\n    validateBody(v) {\n        validateBody = v;\n    }\n\n}, 4);\nlet enforceMaxDepth;\nmodule.watch(require(\"./lib/enforceMaxDepth.js\"), {\n    default(v) {\n        enforceMaxDepth = v;\n    }\n\n}, 5);\nlet enforceMaxLimit;\nmodule.watch(require(\"./lib/enforceMaxLimit.js\"), {\n    default(v) {\n        enforceMaxLimit = v;\n    }\n\n}, 6);\nlet cleanBody;\nmodule.watch(require(\"./lib/cleanBody.js\"), {\n    default(v) {\n        cleanBody = v;\n    }\n\n}, 7);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n    default(v) {\n        deepClone = v;\n    }\n\n}, 8);\nlet restrictFieldsFn;\nmodule.watch(require(\"./lib/restrictFields.js\"), {\n    default(v) {\n        restrictFieldsFn = v;\n    }\n\n}, 9);\nlet restrictLinks;\nmodule.watch(require(\"./lib/restrictLinks.js\"), {\n    default(v) {\n        restrictLinks = v;\n    }\n\n}, 10);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n    check(v) {\n        check = v;\n    }\n\n}, 11);\nlet globalConfig = {};\n\nclass Exposure {\n    static setConfig(config) {\n        Object.assign(globalConfig, config);\n    }\n\n    static getConfig() {\n        return globalConfig;\n    }\n\n    static restrictFields(...args) {\n        return restrictFieldsFn(...args);\n    }\n\n    constructor(collection, config = {}) {\n        collection.__isExposedForGrapher = true;\n        collection.__exposure = this;\n        this.collection = collection;\n        this.name = `exposure_${collection._name}`;\n        this.config = config;\n\n        this._validateAndClean();\n\n        this.initSecurity();\n\n        if (this.config.publication) {\n            this.initPublication();\n        }\n\n        if (this.config.method) {\n            this.initMethod();\n        }\n\n        if (!this.config.method && !this.config.publication) {\n            throw new Meteor.Error('weird', 'If you want to expose your collection you need to specify at least one of [\"method\", \"publication\"] options to true');\n        }\n\n        this.initCountMethod();\n        this.initCountPublication();\n    }\n\n    _validateAndClean() {\n        if (typeof this.config === 'function') {\n            const firewall = this.config;\n            this.config = {\n                firewall\n            };\n        }\n\n        this.config = Object.assign({}, ExposureDefaults, Exposure.getConfig(), this.config);\n        check(this.config, ExposureSchema);\n\n        if (this.config.body) {\n            validateBody(this.collection, this.config.body);\n        }\n    } /**\n       * Takes the body and intersects it with the exposure body, if it exists.\n       *\n       * @param body\n       * @param userId\n       * @returns {*}\n       */\n\n    getTransformedBody(body, userId) {\n        if (!this.config.body) {\n            return body;\n        }\n\n        const processedBody = this.getBody(userId);\n\n        if (processedBody === true) {\n            return;\n        }\n\n        return cleanBody(processedBody, body);\n    } /**\n       * Gets the exposure body\n       */\n\n    getBody(userId) {\n        if (!this.config.body) {\n            throw new Meteor.Error('missing-body', 'Cannot get exposure body because it was not defined.');\n        }\n\n        let body;\n\n        if (_.isFunction(this.config.body)) {\n            body = this.config.body.call(this, userId);\n        } else {\n            body = this.config.body;\n        } // it means we allow everything, no need for cloning.\n\n\n        if (body === true) {\n            return true;\n        }\n\n        return deepClone(body, userId);\n    } /**\n       * Initializing the publication for reactive query fetching\n       */\n\n    initPublication() {\n        const collection = this.collection;\n        const config = this.config;\n        const getTransformedBody = this.getTransformedBody.bind(this);\n        Meteor.publishComposite(this.name, function (body) {\n            let transformedBody = getTransformedBody(body);\n            const rootNode = createGraph(collection, transformedBody);\n            enforceMaxDepth(rootNode, config.maxDepth);\n            restrictLinks(rootNode, this.userId);\n            return recursiveCompose(rootNode, this.userId, {\n                bypassFirewalls: !!config.body\n            });\n        });\n    } /**\n       * Initializez the method to retrieve the data via Meteor.call\n       */\n\n    initMethod() {\n        const collection = this.collection;\n        const config = this.config;\n        const getTransformedBody = this.getTransformedBody.bind(this);\n\n        const methodBody = function (body) {\n            if (!config.blocking) {\n                this.unblock();\n            }\n\n            let transformedBody = getTransformedBody(body);\n            const rootNode = createGraph(collection, transformedBody);\n            enforceMaxDepth(rootNode, config.maxDepth);\n            restrictLinks(rootNode, this.userId); // if there is no exposure body defined, then we need to apply firewalls\n\n            return hypernova(rootNode, this.userId, {\n                bypassFirewalls: !!config.body\n            });\n        };\n\n        Meteor.methods({\n            [this.name]: methodBody\n        });\n    } /**\n       * Initializes the method to retrieve the count of the data via Meteor.call\n       * @returns {*}\n       */\n\n    initCountMethod() {\n        const collection = this.collection;\n        Meteor.methods({\n            [this.name + '.count'](body) {\n                this.unblock();\n                return collection.find(body.$filters || {}, {}, this.userId).count();\n            }\n\n        });\n    } /**\n       * Initializes the reactive endpoint to retrieve the count of the data.\n       */\n\n    initCountPublication() {\n        const collection = this.collection;\n        genCountEndpoint(this.name, {\n            getCursor(session) {\n                return collection.find(session.filters, {\n                    fields: {\n                        _id: 1\n                    }\n                }, this.userId);\n            },\n\n            getSession(body) {\n                return {\n                    filters: body.$filters || {}\n                };\n            }\n\n        });\n    } /**\n       * Initializes security enforcement\n       * THINK: Maybe instead of overriding .find, I could store this data of security inside the collection object.\n       */\n\n    initSecurity() {\n        const collection = this.collection;\n        const {\n            firewall,\n            maxLimit,\n            restrictedFields\n        } = this.config;\n        const find = collection.find.bind(collection);\n        const findOne = collection.findOne.bind(collection);\n\n        collection.firewall = (filters, options, userId) => {\n            if (userId !== undefined) {\n                this._callFirewall({\n                    collection: collection\n                }, filters, options, userId);\n\n                enforceMaxLimit(options, maxLimit);\n\n                if (restrictedFields) {\n                    Exposure.restrictFields(filters, options, restrictedFields);\n                }\n            }\n        };\n\n        collection.find = function (filters, options = {}, userId = undefined) {\n            if (arguments.length == 0) {\n                filters = {};\n            } // If filters is undefined it should return an empty item\n\n\n            if (arguments.length > 0 && filters === undefined) {\n                return find(undefined, options);\n            }\n\n            collection.firewall(filters, options, userId);\n            return find(filters, options);\n        };\n\n        collection.findOne = function (filters, options = {}, userId = undefined) {\n            // If filters is undefined it should return an empty item\n            if (arguments.length > 0 && filters === undefined) {\n                return null;\n            }\n\n            if (typeof filters === 'string') {\n                filters = {\n                    _id: filters\n                };\n            }\n\n            collection.firewall(filters, options, userId);\n            return findOne(filters, options);\n        };\n    } /**\n       * @private\n       */\n\n    _callFirewall(...args) {\n        const {\n            firewall\n        } = this.config;\n\n        if (!firewall) {\n            return;\n        }\n\n        if (_.isArray(firewall)) {\n            firewall.forEach(fire => {\n                fire.call(...args);\n            });\n        } else {\n            firewall.call(...args);\n        }\n    }\n\n}\n\n;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/exposure/extension.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Exposure;\nmodule.watch(require(\"./exposure.js\"), {\n    default(v) {\n        Exposure = v;\n    }\n\n}, 0);\n\n_.extend(Mongo.Collection.prototype, {\n    expose(config) {\n        if (!Meteor.isServer) {\n            throw new Meteor.Error('not-allowed', `You can only expose a collection server side. ${this._name}`);\n        }\n\n        new Exposure(this, config);\n    }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"cleanBody.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/exposure/lib/cleanBody.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => cleanBody\n});\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n    default(v) {\n        deepClone = v;\n    }\n\n}, 0);\nlet cleanFilters, cleanOptions;\nmodule.watch(require(\"./cleanSelectors\"), {\n    cleanFilters(v) {\n        cleanFilters = v;\n    },\n\n    cleanOptions(v) {\n        cleanOptions = v;\n    }\n\n}, 1);\nlet dotize;\nmodule.watch(require(\"../../query/lib/dotize\"), {\n    default(v) {\n        dotize = v;\n    }\n\n}, 2);\n\nfunction cleanBody(main, second, ...args) {\n    let object = {};\n\n    if (second.$filters || second.$options) {\n        const fields = getFields(main);\n        cleanFilters(second.$filters, fields);\n        cleanOptions(second.$options, fields);\n    }\n\n    _.each(second, (secondValue, key) => {\n        if (key === '$filters' || key === '$options') {\n            object[key] = secondValue;\n            return;\n        }\n\n        let value = main[key];\n\n        if (value === undefined) {\n            return;\n        } // if the main value is a function, we run it.\n\n\n        if (_.isFunction(value)) {\n            value = value.call(null, ...args);\n        } // if the main value is undefined or false, we skip the merge\n\n\n        if (value === undefined || value === false) {\n            return;\n        } // we treat this specially, if the value is true\n\n\n        if (value === true) {\n            object[key] = _.isObject(secondValue) ? deepClone(secondValue) : value;\n            return;\n        } // if the main value is an object\n\n\n        if (_.isObject(value)) {\n            if (_.isObject(secondValue)) {\n                // if the second one is an object as well we run recursively run the intersection\n                object[key] = cleanBody(value, secondValue, ...args);\n            } // if it is not, then we will ignore it, because it won't make sense.\n            // to merge {a: 1} with 1.\n\n\n            return;\n        } // if the main value is not an object, it should be a truthy value like 1\n\n\n        if (_.isObject(secondValue)) {\n            // if the second value is an object, then we will keep it.\n            // this won't cause problem with deep nesting because\n            // when you specify links you will have the main value as an object, otherwise it will fail\n            // this is used for things like when you have a hash object like profile with multiple nesting fields, you can allow the client to specify only what he needs\n            object[key] = deepClone(secondValue);\n        } else {\n            // if the second value is not an object, we just store the first value\n            object[key] = value;\n        }\n    });\n\n    return object;\n}\n\nfunction getFields(body) {\n    return _.keys(dotize.convert(body));\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cleanSelectors.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/exposure/lib/cleanSelectors.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    cleanOptions: () => cleanOptions,\n    cleanFilters: () => cleanFilters,\n    fieldExists: () => fieldExists\n});\n\nfunction cleanOptions(options, ensureFields) {\n    if (!options) {\n        return;\n    }\n\n    if (options.fields) {\n        options.fields = _.pick(options.fields, ...ensureFields);\n    }\n\n    if (options.sort) {\n        options.sort = _.pick(options.sort, ...ensureFields);\n    }\n}\n\nconst deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\nconst special = [...deepFilterFieldsArray, ...deepFilterFieldsObject];\n\nfunction cleanFilters(filters, ensureFields) {\n    if (!filters) {\n        return;\n    }\n\n    _.each(filters, (value, key) => {\n        if (!_.contains(special, key)) {\n            if (!fieldExists(ensureFields, key)) {\n                delete filters[key];\n            }\n        }\n    });\n\n    deepFilterFieldsArray.forEach(field => {\n        if (filters[field]) {\n            filters[field].forEach(element => cleanFilters(element, ensureFields));\n        }\n    });\n    deepFilterFieldsObject.forEach(field => {\n        if (filters[field]) {\n            cleanFilters(filters[field], ensureFields);\n        }\n    });\n}\n\nfunction fieldExists(fields, key) {\n    for (let i = 0; i < fields.length; i++) {\n        if (fields[i] === key || key.indexOf(fields[i] + '.') === 0) {\n            return true;\n        }\n    }\n\n    return false;\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"enforceMaxDepth.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/exposure/lib/enforceMaxDepth.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    getDepth: () => getDepth\n});\nmodule.exportDefault(function (node, maxDepth) {\n    if (maxDepth === undefined) {\n        return node;\n    }\n\n    const depth = getDepth(node);\n\n    if (depth > maxDepth) {\n        throw new Meteor.Error('too-deep', 'Your graph request is too deep and it is not allowed.');\n    }\n\n    return node;\n});\n\nfunction getDepth(node) {\n    if (node.collectionNodes.length === 0) {\n        return 1;\n    }\n\n    return 1 + _.max(_.map(node.collectionNodes, getDepth));\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"enforceMaxLimit.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/exposure/lib/enforceMaxLimit.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exportDefault(function (options, maxLimit) {\n    if (maxLimit === undefined) {\n        return;\n    }\n\n    if (options.limit) {\n        if (options.limit > maxLimit) {\n            options.limit = maxLimit;\n        }\n    } else {\n        options.limit = maxLimit;\n    }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"restrictFields.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/exposure/lib/restrictFields.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => restrictFields\n});\nconst deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not']; /**\n                                          * This is used to restrict some fields to some users, by passing the fields as array in the exposure object\n                                          * For example in an user exposure: restrictFields(options, ['services', 'createdAt'])\n                                          *\n                                          * @param filters Object\n                                          * @param options Object\n                                          * @param restrictedFields Array\n                                          */\n\nfunction restrictFields(filters, options, restrictedFields) {\n    if (!_.isArray(restrictedFields)) {\n        throw new Meteor.Error('invalid-parameters', 'Please specify an array of restricted fields.');\n    }\n\n    cleanFilters(filters, restrictedFields);\n    cleanOptions(options, restrictedFields);\n}\n\n/**\n * Deep cleans filters\n *\n * @param filters\n * @param restrictedFields\n */function cleanFilters(filters, restrictedFields) {\n    if (filters) {\n        cleanObject(filters, restrictedFields);\n    }\n\n    deepFilterFieldsArray.forEach(field => {\n        if (filters[field]) {\n            filters[field].forEach(element => cleanFilters(element, restrictedFields));\n        }\n    });\n    deepFilterFieldsObject.forEach(field => {\n        if (filters[field]) {\n            cleanFilters(filters[field], restrictedFields);\n        }\n    });\n} /**\n   * Deeply cleans options\n   *\n   * @param options\n   * @param restrictedFields\n   */\n\nfunction cleanOptions(options, restrictedFields) {\n    if (options.fields) {\n        cleanObject(options.fields, restrictedFields);\n\n        if (_.keys(options.fields).length === 0) {\n            _.extend(options.fields, {\n                _id: 1\n            });\n        }\n    } else {\n        options.fields = {\n            _id: 1\n        };\n    }\n\n    if (options.sort) {\n        cleanObject(options.sort, restrictedFields);\n    }\n} /**\n   * Cleans the object (not deeply)\n   *\n   * @param object\n   * @param restrictedFields\n   */\n\nfunction cleanObject(object, restrictedFields) {\n    _.each(object, (value, key) => {\n        restrictedFields.forEach(restrictedField => {\n            if (matching(restrictedField, key)) {\n                delete object[key];\n            }\n        });\n    });\n} /**\n   * Returns true if field == subfield or if `${field}.` INCLUDED in subfield\n   * Example: \"profile\" and \"profile.firstName\" will be a matching field\n   * @param field\n   * @param subfield\n   * @returns {boolean}\n   */\n\nfunction matching(field, subfield) {\n    if (field === subfield) {\n        return true;\n    }\n\n    return subfield.slice(0, field.length + 1) === field + '.';\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"restrictLinks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/exposure/lib/restrictLinks.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => restrictLinks,\n    getLinks: () => getLinks\n});\n\nfunction restrictLinks(parentNode, ...args) {\n    const restrictedLinks = getLinks(parentNode, ...args);\n\n    if (!restrictedLinks || restrictedLinks.length) {\n        return;\n    }\n\n    _.each(parentNode.collectionNodes, collectionNode => {\n        if (_.contains(restrictedLinks, collectionNode.linkName)) {\n            parentNode.remove(collectionNode);\n        }\n    });\n}\n\nfunction getLinks(node, ...args) {\n    if (node.collection && node.collection.__exposure) {\n        const exposure = node.collection.__exposure;\n\n        if (exposure.config.restrictLinks) {\n            const configRestrictLinks = exposure.config.restrictLinks;\n\n            if (_.isArray(configRestrictLinks)) {\n                return configRestrictLinks;\n            }\n\n            return configRestrictLinks(...args);\n        }\n    }\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"links\":{\"config.schema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/links/config.schema.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    DenormalizeSchema: () => DenormalizeSchema,\n    LinkConfigDefaults: () => LinkConfigDefaults,\n    LinkConfigSchema: () => LinkConfigSchema\n});\nlet Match;\nmodule.watch(require(\"meteor/check\"), {\n    Match(v) {\n        Match = v;\n    }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo(v) {\n        Mongo = v;\n    }\n\n}, 1);\nconst DenormalizeSchema = {\n    field: String,\n    body: Object,\n    bypassSchema: Match.Maybe(Boolean)\n};\nconst LinkConfigDefaults = {\n    type: 'one'\n};\nconst LinkConfigSchema = {\n    type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\n    collection: Match.Maybe(Match.Where(collection => {\n        // We do like this so it works with other types of collections \n        // like FS.Collection\n        return _.isObject(collection) && (collection instanceof Mongo.Collection || !!collection._collection);\n    })),\n    field: Match.Maybe(String),\n    metadata: Match.Maybe(Boolean),\n    inversedBy: Match.Maybe(String),\n    index: Match.Maybe(Boolean),\n    unique: Match.Maybe(Boolean),\n    autoremove: Match.Maybe(Boolean),\n    denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema))\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/links/constants.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  LINK_STORAGE: () => LINK_STORAGE\n});\nconst LINK_STORAGE = '__links';\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/links/extension.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo(v) {\n        Mongo = v;\n    }\n\n}, 0);\nlet LINK_STORAGE;\nmodule.watch(require(\"./constants.js\"), {\n    LINK_STORAGE(v) {\n        LINK_STORAGE = v;\n    }\n\n}, 1);\nlet Linker;\nmodule.watch(require(\"./linker.js\"), {\n    default(v) {\n        Linker = v;\n    }\n\n}, 2);\n\n_.extend(Mongo.Collection.prototype, {\n    /**\n     * The data we add should be valid for config.schema.js\n     */addLinks(data) {\n        if (!this[LINK_STORAGE]) {\n            this[LINK_STORAGE] = {};\n        }\n\n        _.each(data, (linkConfig, linkName) => {\n            if (this[LINK_STORAGE][linkName]) {\n                throw new Meteor.Error(`You cannot add the link with name: ${linkName} because it was already added to ${this._name} collection`);\n            }\n\n            const linker = new Linker(this, linkName, linkConfig);\n\n            _.extend(this[LINK_STORAGE], {\n                [linkName]: linker\n            });\n        });\n    },\n\n    getLinks() {\n        return this[LINK_STORAGE];\n    },\n\n    getLinker(name) {\n        if (this[LINK_STORAGE]) {\n            return this[LINK_STORAGE][name];\n        }\n    },\n\n    hasLink(name) {\n        if (!this[LINK_STORAGE]) {\n            return false;\n        }\n\n        return !!this[LINK_STORAGE][name];\n    },\n\n    getLink(objectOrId, name) {\n        let linkData = this[LINK_STORAGE];\n\n        if (!linkData) {\n            throw new Meteor.Error(`There are no links defined for collection: ${this._name}`);\n        }\n\n        if (!linkData[name]) {\n            throw new Meteor.Error(`There is no link ${name} for collection: ${this._name}`);\n        }\n\n        const linker = linkData[name];\n        let object = objectOrId;\n\n        if (typeof objectOrId == 'string') {\n            if (!linker.isVirtual()) {\n                object = this.findOne(objectOrId, {\n                    fields: {\n                        [linker.linkStorageField]: 1\n                    }\n                });\n            } else {\n                object = {\n                    _id: objectOrId\n                };\n            }\n\n            if (!object) {\n                throw new Meteor.Error(`We could not find any object with _id: \"${objectOrId}\" within the collection: ${this._name}`);\n            }\n        }\n\n        return linkData[name].createLink(object);\n    }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linker.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/links/linker.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => Linker\n});\nlet LinkMany;\nmodule.watch(require(\"./linkTypes/linkMany.js\"), {\n    default(v) {\n        LinkMany = v;\n    }\n\n}, 0);\nlet LinkManyMeta;\nmodule.watch(require(\"./linkTypes/linkManyMeta.js\"), {\n    default(v) {\n        LinkManyMeta = v;\n    }\n\n}, 1);\nlet LinkOne;\nmodule.watch(require(\"./linkTypes/linkOne.js\"), {\n    default(v) {\n        LinkOne = v;\n    }\n\n}, 2);\nlet LinkOneMeta;\nmodule.watch(require(\"./linkTypes/linkOneMeta.js\"), {\n    default(v) {\n        LinkOneMeta = v;\n    }\n\n}, 3);\nlet LinkConfigSchema, LinkConfigDefaults;\nmodule.watch(require(\"./config.schema.js\"), {\n    LinkConfigSchema(v) {\n        LinkConfigSchema = v;\n    },\n\n    LinkConfigDefaults(v) {\n        LinkConfigDefaults = v;\n    }\n\n}, 4);\nlet smartArguments;\nmodule.watch(require(\"./linkTypes/lib/smartArguments\"), {\n    default(v) {\n        smartArguments = v;\n    }\n\n}, 5);\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n    default(v) {\n        dot = v;\n    }\n\n}, 6);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n    check(v) {\n        check = v;\n    }\n\n}, 7);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n    _(v) {\n        _ = v;\n    }\n\n}, 8);\n\nclass Linker {\n    /**\n     * @param mainCollection\n     * @param linkName\n     * @param linkConfig\n     */constructor(mainCollection, linkName, linkConfig) {\n        this.mainCollection = mainCollection;\n        this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n        this.linkName = linkName; // check linkName must not exist in schema\n\n        this._validateAndClean(); // initialize cascade removal hooks.\n\n\n        this._initAutoremove();\n\n        this._initDenormalization();\n\n        if (this.isVirtual()) {\n            // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n            if (!linkConfig.autoremove) {\n                this._handleReferenceRemovalForVirtualLinks();\n            }\n        } else {\n            this._initIndex();\n        }\n    } /**\n       * Values which represent for the relation a single link\n       * @returns {string[]}\n       */\n\n    get oneTypes() {\n        return ['one', '1'];\n    } /**\n       * Returns the strategies: one, many, one-meta, many-meta\n       * @returns {string}\n       */\n\n    get strategy() {\n        let strategy = this.isMany() ? 'many' : 'one';\n\n        if (this.linkConfig.metadata) {\n            strategy += '-meta';\n        }\n\n        return strategy;\n    } /**\n       * Returns the field name in the document where the actual relationships are stored.\n       * @returns string\n       */\n\n    get linkStorageField() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.linkStorageField;\n        }\n\n        return this.linkConfig.field;\n    } /**\n       * The collection that is linked with the current collection\n       * @returns Mongo.Collection\n       */\n\n    getLinkedCollection() {\n        return this.linkConfig.collection;\n    } /**\n       * If the relationship for this link is of \"many\" type.\n       */\n\n    isMany() {\n        return !this.isSingle();\n    } /**\n       * If the relationship for this link contains metadata\n       */\n\n    isMeta() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isMeta();\n        }\n\n        return !!this.linkConfig.metadata;\n    } /**\n       * @returns {boolean}\n       */\n\n    isSingle() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isSingle();\n        }\n\n        return _.contains(this.oneTypes, this.linkConfig.type);\n    } /**\n       * @returns {boolean}\n       */\n\n    isVirtual() {\n        return !!this.linkConfig.inversedBy;\n    } /**\n       * Should return a single result.\n       */\n\n    isOneResult() {\n        return this.isVirtual() && this.linkConfig.relatedLinker.linkConfig.unique || !this.isVirtual() && this.isSingle();\n    } /**\n       * @param object\n       * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n       *\n       * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n       */\n\n    createLink(object, collection = null) {\n        let helperClass = this._getHelperClass();\n\n        return new helperClass(this, object, collection);\n    } /**\n       * @returns {*}\n       * @private\n       */\n\n    _validateAndClean() {\n        if (!this.linkConfig.collection) {\n            throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you did not provide a collection.`);\n        }\n\n        if (typeof this.linkConfig.collection === 'string') {\n            const collectionName = this.linkConfig.collection;\n            this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n            if (!this.linkConfig.collection) {\n                throw new Meteor.Error('invalid-collection', `Could not find a collection with the name: ${collectionName}`);\n            }\n        }\n\n        if (this.isVirtual()) {\n            return this._prepareVirtual();\n        } else {\n            if (!this.linkConfig.type) {\n                this.linkConfig.type = 'one';\n            }\n\n            if (!this.linkConfig.field) {\n                this.linkConfig.field = this._generateFieldName();\n            } else {\n                if (this.linkConfig.field == this.linkName) {\n                    throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you must not use the same name for the field, otherwise it will cause conflicts when fetching data`);\n                }\n            }\n        }\n\n        check(this.linkConfig, LinkConfigSchema);\n    } /**\n       * We need to apply same type of rules in this case.\n       * @private\n       */\n\n    _prepareVirtual() {\n        const {\n            collection,\n            inversedBy\n        } = this.linkConfig;\n        let linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n            // it is possible that the collection doesn't have a linker created yet.\n            // so we will create it on startup after all links have been defined\n            Meteor.startup(() => {\n                linker = collection.getLinker(inversedBy);\n\n                if (!linker) {\n                    throw new Meteor.Error(`You tried setting up an inversed link in \"${this.mainCollection._name}\" pointing to collection: \"${collection._name}\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`);\n                } else {\n                    this._setupVirtualConfig(linker);\n                }\n            });\n        } else {\n            this._setupVirtualConfig(linker);\n        }\n    } /**\n       * @param linker\n       * @private\n       */\n\n    _setupVirtualConfig(linker) {\n        const virtualLinkConfig = linker.linkConfig;\n\n        if (!virtualLinkConfig) {\n            throw new Meteor.Error(`There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`);\n        }\n\n        _.extend(this.linkConfig, {\n            metadata: virtualLinkConfig.metadata,\n            relatedLinker: linker\n        });\n    } /**\n       * Depending on the strategy, we create the proper helper class\n       * @private\n       */\n\n    _getHelperClass() {\n        switch (this.strategy) {\n            case 'many-meta':\n                return LinkManyMeta;\n\n            case 'many':\n                return LinkMany;\n\n            case 'one-meta':\n                return LinkOneMeta;\n\n            case 'one':\n                return LinkOne;\n        }\n\n        throw new Meteor.Error('invalid-strategy', `${this.strategy} is not a valid strategy`);\n    } /**\n       * If field name not present, we generate it.\n       * @private\n       */\n\n    _generateFieldName() {\n        let cleanedCollectionName = this.linkConfig.collection._name.replace(/\\./g, '_');\n\n        let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n        switch (this.strategy) {\n            case 'many-meta':\n                return `${defaultFieldPrefix}_metas`;\n\n            case 'many':\n                return `${defaultFieldPrefix}_ids`;\n\n            case 'one-meta':\n                return `${defaultFieldPrefix}_meta`;\n\n            case 'one':\n                return `${defaultFieldPrefix}_id`;\n        }\n    } /**\n       * When a link that is declared virtual is removed, the reference will be removed from every other link.\n       * @private\n       */\n\n    _handleReferenceRemovalForVirtualLinks() {\n        this.mainCollection.after.remove((userId, doc) => {\n            // this problem may occur when you do a .remove() before Meteor.startup()\n            if (!this.linkConfig.relatedLinker) {\n                console.warn(`There was an error finding the link for removal for collection: \"${this.mainCollection._name}\" with link: \"${this.linkName}\". This may occur when you do a .remove() before Meteor.startup()`);\n                return;\n            }\n\n            let accessor = this.createLink(doc);\n\n            _.each(accessor.fetch(), linkedObj => {\n                const {\n                    relatedLinker\n                } = this.linkConfig; // We do this check, to avoid self-referencing hell when defining virtual links\n                // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n                // if a removal happens before Meteor.startup this may fail\n\n                if (relatedLinker) {\n                    let link = relatedLinker.createLink(linkedObj);\n\n                    if (relatedLinker.isSingle()) {\n                        link.unset();\n                    } else {\n                        link.remove(doc);\n                    }\n                }\n            });\n        });\n    }\n\n    _initIndex() {\n        if (Meteor.isServer) {\n            let field = this.linkConfig.field;\n\n            if (this.linkConfig.metadata) {\n                field = field + '._id';\n            }\n\n            if (this.linkConfig.index) {\n                if (this.isVirtual()) {\n                    throw new Meteor.Error('You cannot set index on an inversed link.');\n                }\n\n                let options;\n\n                if (this.linkConfig.unique) {\n                    if (this.isMany()) {\n                        throw new Meteor.Error('You cannot set unique property on a multi field.');\n                    }\n\n                    options = {\n                        unique: true\n                    };\n                }\n\n                this.mainCollection._ensureIndex({\n                    [field]: 1\n                }, options);\n            } else {\n                if (this.linkConfig.unique) {\n                    if (this.isVirtual()) {\n                        throw new Meteor.Error('You cannot set unique property on an inversed link.');\n                    }\n\n                    if (this.isMany()) {\n                        throw new Meteor.Error('You cannot set unique property on a multi field.');\n                    }\n\n                    this.mainCollection._ensureIndex({\n                        [field]: 1\n                    }, {\n                        unique: true\n                    });\n                }\n            }\n        }\n    }\n\n    _initAutoremove() {\n        if (!this.linkConfig.autoremove) {\n            return;\n        }\n\n        if (!this.isVirtual()) {\n            this.mainCollection.after.remove((userId, doc) => {\n                this.getLinkedCollection().remove({\n                    _id: {\n                        $in: smartArguments.getIds(doc[this.linkStorageField])\n                    }\n                });\n            });\n        } else {\n            this.mainCollection.after.remove((userId, doc) => {\n                const linker = this.mainCollection.getLink(doc, this.linkName);\n                const ids = linker.find({}, {\n                    fields: {\n                        _id: 1\n                    }\n                }).fetch().map(item => item._id);\n                this.getLinkedCollection().remove({\n                    _id: {\n                        $in: ids\n                    }\n                });\n            });\n        }\n    } /**\n       * Initializes denormalization using herteby:denormalize\n       * @private\n       */\n\n    _initDenormalization() {\n        if (!this.linkConfig.denormalize || !Meteor.isServer) {\n            return;\n        }\n\n        const packageExists = !!Package['herteby:denormalize'];\n\n        if (!packageExists) {\n            throw new Meteor.Error('missing-package', `Please add the herteby:denormalize package to your Meteor application in order to make caching work`);\n        }\n\n        const {\n            field,\n            body,\n            bypassSchema\n        } = this.linkConfig.denormalize;\n        let cacheConfig;\n        let referenceFieldSuffix = '';\n\n        if (this.isMeta()) {\n            referenceFieldSuffix = this.isSingle() ? '._id' : ':_id';\n        }\n\n        if (this.isVirtual()) {\n            let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n            let type = inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n            cacheConfig = {\n                type: type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: inversedLink.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema\n            };\n        } else {\n            cacheConfig = {\n                type: this.linkConfig.type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: this.linkConfig.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema\n            };\n        }\n\n        if (this.isVirtual()) {\n            Meteor.startup(() => {\n                this.mainCollection.cache(cacheConfig);\n            });\n        } else {\n            this.mainCollection.cache(cacheConfig);\n        }\n    } /**\n       * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n       *\n       * @returns {boolean}\n       * @private\n       */\n\n    isDenormalized() {\n        return !!this.linkConfig.denormalize;\n    } /**\n       * Verifies if the body of the linked element does not contain fields outside the cache body\n       *\n       * @param body\n       * @returns {boolean}\n       * @private\n       */\n\n    isSubBodyDenormalized(body) {\n        const cacheBody = this.linkConfig.denormalize.body;\n\n        const cacheBodyFields = _.keys(dot.dot(cacheBody));\n\n        const bodyFields = _.keys(dot.dot(_.omit(body, '_id')));\n\n        return _.difference(bodyFields, cacheBodyFields).length === 0;\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"createSearchFilters.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/links/lib/createSearchFilters.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => createSearchFilters,\n    createOne: () => createOne,\n    createOneVirtual: () => createOneVirtual,\n    createOneMeta: () => createOneMeta,\n    createOneMetaVirtual: () => createOneMetaVirtual,\n    createMany: () => createMany,\n    createManyVirtual: () => createManyVirtual,\n    createManyMeta: () => createManyMeta,\n    createManyMetaVirtual: () => createManyMetaVirtual\n});\nlet sift;\nmodule.watch(require(\"sift\"), {\n    default(v) {\n        sift = v;\n    }\n\n}, 0);\n\nfunction createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n    if (!isVirtual) {\n        switch (strategy) {\n            case 'one':\n                return createOne(object, fieldStorage);\n\n            case 'one-meta':\n                return createOneMeta(object, fieldStorage, metaFilters);\n\n            case 'many':\n                return createMany(object, fieldStorage);\n\n            case 'many-meta':\n                return createManyMeta(object, fieldStorage, metaFilters);\n\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`);\n        }\n    } else {\n        switch (strategy) {\n            case 'one':\n                return createOneVirtual(object, fieldStorage);\n\n            case 'one-meta':\n                return createOneMetaVirtual(object, fieldStorage, metaFilters);\n\n            case 'many':\n                return createManyVirtual(object, fieldStorage);\n\n            case 'many-meta':\n                return createManyMetaVirtual(object, fieldStorage, metaFilters);\n\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`);\n        }\n    }\n}\n\nfunction createOne(object, fieldStorage) {\n    return {\n        _id: object[fieldStorage]\n    };\n}\n\nfunction createOneVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nfunction createOneMeta(object, fieldStorage, metaFilters) {\n    const value = object[fieldStorage];\n\n    if (metaFilters) {\n        if (!sift(metaFilters)(value)) {\n            return {\n                _id: undefined\n            };\n        }\n    }\n\n    return {\n        _id: value ? value._id : value\n    };\n}\n\nfunction createOneMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[fieldStorage + '.' + key] = value;\n        });\n    }\n\n    filters[fieldStorage + '._id'] = object._id;\n    return filters;\n}\n\nfunction createMany(object, fieldStorage) {\n    return {\n        _id: {\n            $in: object[fieldStorage] || []\n        }\n    };\n}\n\nfunction createManyVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nfunction createManyMeta(object, fieldStorage, metaFilters) {\n    let value = object[fieldStorage];\n\n    if (metaFilters) {\n        value = sift(metaFilters, value);\n    }\n\n    return {\n        _id: {\n            $in: _.pluck(value, '_id') || []\n        }\n    };\n}\n\nfunction createManyMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[key] = value;\n        });\n    }\n\n    filters._id = object._id;\n    return {\n        [fieldStorage]: {\n            $elemMatch: filters\n        }\n    };\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"linkTypes\":{\"base.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/links/linkTypes/base.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => Link\n});\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n    default(v) {\n        SmartArgs = v;\n    }\n\n}, 0);\nlet createSearchFilters;\nmodule.watch(require(\"../lib/createSearchFilters\"), {\n    default(v) {\n        createSearchFilters = v;\n    }\n\n}, 1);\n\nclass Link {\n    get config() {\n        return this.linker.linkConfig;\n    }\n\n    get isVirtual() {\n        return this.linker.isVirtual();\n    }\n\n    constructor(linker, object, collection) {\n        this.linker = linker;\n        this.object = object;\n        this.linkedCollection = collection ? collection : linker.getLinkedCollection();\n\n        if (this.linker.isVirtual()) {\n            this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n        } else {\n            this.linkStorageField = this.config.field;\n        }\n    } /**\n       * Gets the stored link information value\n       * @returns {*}\n       */\n\n    value() {\n        if (this.isVirtual) {\n            throw new Meteor.Error('You can only take the value from the main link.');\n        }\n\n        return this.object[this.linkStorageField];\n    } /**\n       * Finds linked data.\n       *\n       * @param filters\n       * @param options\n       * @returns {*}\n       * @param userId\n       */\n\n    find(filters = {}, options = {}, userId = undefined) {\n        let linker = this.linker;\n        const linkedCollection = this.linkedCollection;\n        let $metaFilters;\n\n        if (filters.$meta) {\n            $metaFilters = filters.$meta;\n            delete filters.$meta;\n        }\n\n        const searchFilters = createSearchFilters(this.object, this.linkStorageField, linker.strategy, linker.isVirtual(), $metaFilters);\n\n        let appliedFilters = _.extend({}, filters, searchFilters); // see https://github.com/cult-of-coders/grapher/issues/134\n        // happens due to recursive importing of modules\n        // TODO: find another way to do this\n\n\n        if (linkedCollection.find) {\n            return linkedCollection.find(appliedFilters, options, userId);\n        } else {\n            return linkedCollection.default.find(appliedFilters, options, userId);\n        }\n    } /**\n       * @param filters\n       * @param options\n       * @param others\n       * @returns {*|{content}|any}\n       */\n\n    fetch(filters, options, ...others) {\n        let result = this.find(filters, options, ...others).fetch();\n\n        if (this.linker.isOneResult()) {\n            return _.first(result);\n        }\n\n        return result;\n    } /**\n       * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n       * We use clean to make it an empty array by default.\n       */\n\n    clean() {} /**\n                * Extracts a single id\n                */\n\n    identifyId(what, saveToDatabase) {\n        return SmartArgs.getId(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    } /**\n       * Extracts the ids of object(s) or strings and returns an array.\n       */\n\n    identifyIds(what, saveToDatabase) {\n        return SmartArgs.getIds(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    } /**\n       * Checks when linking data, if the ids are valid with the linked collection.\n       * @throws Meteor.Error\n       * @param ids\n       *\n       * @protected\n       */\n\n    _validateIds(ids) {\n        if (!_.isArray(ids)) {\n            ids = [ids];\n        }\n\n        const validIds = this.linkedCollection.find({\n            _id: {\n                $in: ids\n            }\n        }, {\n            fields: {\n                _id: 1\n            }\n        }).fetch().map(doc => doc._id);\n\n        if (validIds.length != ids.length) {\n            throw new Meteor.Error('not-found', `You tried to create links with non-existing id(s) inside \"${this.linkedCollection._name}\": ${_.difference(ids, validIds).join(', ')}`);\n        }\n    } /**\n       * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n       *\n       * @param action\n       * @param what\n       * @param metadata\n       *\n       * @protected\n       */\n\n    _virtualAction(action, what, metadata) {\n        const linker = this.linker.linkConfig.relatedLinker; // its an unset operation most likely.\n\n        if (what === undefined) {\n            const reversedLink = linker.createLink(this.fetch());\n            reversedLink.unset();\n            return;\n        }\n\n        if (!_.isArray(what)) {\n            what = [what];\n        }\n\n        what = _.map(what, element => {\n            if (!_.isObject(element)) {\n                return linker.mainCollection.findOne(element);\n            } else {\n                if (!element._id) {\n                    const elementId = linker.mainCollection.insert(element);\n\n                    _.extend(element, linker.mainCollection.findOne(elementId));\n                }\n\n                return element;\n            }\n        });\n        return _.map(what, element => {\n            const reversedLink = linker.createLink(element);\n\n            if (action == 'metadata') {\n                if (linker.isSingle()) {\n                    return reversedLink.metadata(metadata);\n                } else {\n                    return reversedLink.metadata(this.object, metadata);\n                }\n            } else if (action == 'add' || action == 'set') {\n                if (linker.isSingle()) {\n                    reversedLink.set(this.object, metadata);\n                } else {\n                    reversedLink.add(this.object, metadata);\n                }\n            } else {\n                if (linker.isSingle()) {\n                    reversedLink.unset();\n                } else {\n                    reversedLink.remove(this.object);\n                }\n            }\n        });\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkMany.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkMany.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => LinkMany\n});\nlet Link;\nmodule.watch(require(\"./base.js\"), {\n    default(v) {\n        Link = v;\n    }\n\n}, 0);\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n    default(v) {\n        SmartArgs = v;\n    }\n\n}, 1);\n\nclass LinkMany extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    } /**\n       * Ads the _ids to the object.\n       * @param what\n       */\n\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n\n            return this;\n        } //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n\n        this.clean();\n\n        const _ids = this.identifyIds(what, true);\n\n        this._validateIds(_ids);\n\n        const field = this.linkStorageField; // update the field\n\n        this.object[field] = _.union(this.object[field], _ids); // update the db\n\n        let modifier = {\n            $addToSet: {\n                [field]: {\n                    $each: _ids\n                }\n            }\n        };\n        this.linker.mainCollection.update(this.object._id, modifier);\n        return this;\n    } /**\n       * @param what\n       */\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n\n            return this;\n        }\n\n        if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n        this.clean();\n        const field = this.linkStorageField;\n\n        const _ids = this.identifyIds(what); // update the field\n\n\n        this.object[field] = _.filter(this.object[field], _id => !_.contains(_ids, _id)); // update the db\n\n        let modifier = {\n            $pullAll: {\n                [field]: _ids\n            }\n        };\n        this.linker.mainCollection.update(this.object._id, modifier);\n        return this;\n    }\n\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkManyMeta.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkManyMeta.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => LinkManyMeta\n});\nlet Link;\nmodule.watch(require(\"./base.js\"), {\n    default(v) {\n        Link = v;\n    }\n\n}, 0);\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n    default(v) {\n        SmartArgs = v;\n    }\n\n}, 1);\n\nclass LinkManyMeta extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    } /**\n       * @param what\n       * @param metadata\n       */\n\n    add(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n\n            return this;\n        }\n\n        const _ids = this.identifyIds(what, true);\n\n        this._validateIds(_ids);\n\n        let field = this.linkStorageField;\n        this.object[field] = this.object[field] || [];\n        let metadatas = [];\n\n        _.each(_ids, _id => {\n            let localMetadata = _.clone(metadata);\n\n            localMetadata._id = _id;\n            this.object[field].push(localMetadata);\n            metadatas.push(localMetadata);\n        });\n\n        let modifier = {\n            $addToSet: {\n                [field]: {\n                    $each: metadatas\n                }\n            }\n        };\n        this.linker.mainCollection.update(this.object._id, modifier);\n        return this;\n    } /**\n       * @param what\n       * @param extendMetadata\n       */\n\n    metadata(what, extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', what, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (what === undefined) {\n            return this.object[field];\n        }\n\n        if (_.isArray(what)) {\n            throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\n        }\n\n        const _id = this.identifyId(what);\n\n        let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\n\n        if (extendMetadata === undefined) {\n            return existingMetadata;\n        } else {\n            _.extend(existingMetadata, extendMetadata);\n\n            let subfield = field + '._id';\n            let subfieldUpdate = field + '.$';\n            this.linker.mainCollection.update({\n                _id: this.object._id,\n                [subfield]: _id\n            }, {\n                $set: {\n                    [subfieldUpdate]: existingMetadata\n                }\n            });\n        }\n\n        return this;\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n\n            return this;\n        }\n\n        const _ids = this.identifyIds(what);\n\n        let field = this.linkStorageField;\n        this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\n        let modifier = {\n            $pull: {\n                [field]: {\n                    $elemMatch: {\n                        _id: {\n                            $in: _ids\n                        }\n                    }\n                }\n            }\n        };\n        this.linker.mainCollection.update(this.object._id, modifier);\n        return this;\n    }\n\n    set(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what, metadata);\n\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkOne.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkOne.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => LinkOne\n});\nlet Link;\nmodule.watch(require(\"./base.js\"), {\n    default(v) {\n        Link = v;\n    }\n\n}, 0);\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n    default(v) {\n        SmartArgs = v;\n    }\n\n}, 1);\n\nclass LinkOne extends Link {\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        const _id = this.identifyId(what, true);\n\n        this._validateIds([_id]);\n\n        this.object[field] = _id;\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: _id\n            }\n        });\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = null;\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: null\n            }\n        });\n        return this;\n    }\n\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkOneMeta.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkOneMeta.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => LinkOneMeta\n});\nlet Link;\nmodule.watch(require(\"./base.js\"), {\n    default(v) {\n        Link = v;\n    }\n\n}, 0);\nlet SmartArgs;\nmodule.watch(require(\"./lib/smartArguments.js\"), {\n    default(v) {\n        SmartArgs = v;\n    }\n\n}, 1);\n\nclass LinkOneMeta extends Link {\n    set(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        metadata._id = this.identifyId(what, true);\n\n        this._validateIds([metadata._id]);\n\n        this.object[field] = metadata;\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: metadata\n            }\n        });\n        return this;\n    }\n\n    metadata(extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', undefined, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (!extendMetadata) {\n            return this.object[field];\n        } else {\n            _.extend(this.object[field], extendMetadata);\n\n            this.linker.mainCollection.update(this.object._id, {\n                $set: {\n                    [field]: this.object[field]\n                }\n            });\n        }\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset');\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = {};\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: {}\n            }\n        });\n        return this;\n    }\n\n    add(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"smartArguments.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/links/linkTypes/lib/smartArguments.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exportDefault(new class {\n    getIds(what, options) {\n        if (_.isArray(what)) {\n            return _.map(what, subWhat => {\n                return this.getId(subWhat, options);\n            });\n        } else {\n            return [this.getId(what, options)];\n        }\n\n        throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n    }\n\n    getId(what, options) {\n        if (typeof what === 'string') {\n            return what;\n        }\n\n        if (typeof what === 'object') {\n            if (!what._id && options.saveToDatabase) {\n                what._id = options.collection.insert(what);\n            }\n\n            return what._id;\n        }\n    }\n\n}());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"namedQuery\":{\"namedQuery.base.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.base.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n    default: () => NamedQueryBase\n});\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n    default(v) {\n        deepClone = v;\n    }\n\n}, 0);\n\nclass NamedQueryBase {\n    constructor(name, collection, body, options = {}) {\n        this.isNamedQuery = true;\n        this.queryName = name;\n\n        if (_.isFunction(body)) {\n            this.resolver = body;\n        } else {\n            this.body = deepClone(body);\n        }\n\n        this.subscriptionHandle = null;\n        this.params = options.params || {};\n        this.options = options;\n        this.collection = collection;\n        this.isExposed = false;\n    }\n\n    get name() {\n        return `named_query_${this.queryName}`;\n    }\n\n    get isResolver() {\n        return !!this.resolver;\n    }\n\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n        return this;\n    } /**\n       * Validates the parameters\n       */\n\n    doValidateParams(params) {\n        params = params || this.params;\n        const {\n            validateParams\n        } = this.options;\n        if (!validateParams) return;\n\n        try {\n            this._validate(validateParams, params);\n        } catch (validationError) {\n            console.error(`Invalid parameters supplied to the query \"${this.queryName}\"\\n`, validationError);\n            throw validationError; // rethrow\n        }\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        let clone = new this.constructor(this.queryName, this.collection, this.isResolver ? this.resolver : deepClone(this.body), (0, _extends3.default)({}, this.options, {\n            params\n        }));\n        clone.cacher = this.cacher;\n\n        if (this.exposeConfig) {\n            clone.exposeConfig = this.exposeConfig;\n        }\n\n        return clone;\n    } /**\n       * @param {function|object} validator\n       * @param {object} params\n       * @private\n       */\n\n    _validate(validator, params) {\n        if (_.isFunction(validator)) {\n            validator.call(null, params);\n        } else {\n            check(params, validator);\n        }\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.client.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.client.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet CountSubscription;\nmodule.watch(require(\"../query/counts/countSubscription\"), {\n    default(v) {\n        CountSubscription = v;\n    }\n\n}, 0);\nlet createGraph;\nmodule.watch(require(\"../query/lib/createGraph.js\"), {\n    default(v) {\n        createGraph = v;\n    }\n\n}, 1);\nlet recursiveFetch;\nmodule.watch(require(\"../query/lib/recursiveFetch.js\"), {\n    default(v) {\n        recursiveFetch = v;\n    }\n\n}, 2);\nlet prepareForProcess;\nmodule.watch(require(\"../query/lib/prepareForProcess.js\"), {\n    default(v) {\n        prepareForProcess = v;\n    }\n\n}, 3);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n    _(v) {\n        _ = v;\n    }\n\n}, 4);\nlet callWithPromise;\nmodule.watch(require(\"../query/lib/callWithPromise\"), {\n    default(v) {\n        callWithPromise = v;\n    }\n\n}, 5);\nlet Base;\nmodule.watch(require(\"./namedQuery.base\"), {\n    default(v) {\n        Base = v;\n    }\n\n}, 6);\nmodule.exportDefault(class extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback\n     * @returns {null|any|*}\n     */subscribe(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        this.subscriptionHandle = Meteor.subscribe(this.name, this.params, callback);\n        return this.subscriptionHandle;\n    } /**\n       * Subscribe to the counts for this query\n       *\n       * @param callback\n       * @returns {Object}\n       */\n\n    subscribeCount(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(this.params, callback);\n    } /**\n       * Unsubscribe if an existing subscription exists\n       */\n\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    } /**\n       * Unsubscribe to the counts if a subscription exists.\n       */\n\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n\n            this._counter = null;\n        }\n    } /**\n       * Fetches elements in sync using promises\n       * @return {*}\n       */\n\n    fetchSync() {\n        return Promise.asyncApply(() => {\n            if (this.subscriptionHandle) {\n                throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n            }\n\n            return Promise.await(callWithPromise(this.name, prepareForProcess(this.body, this.params)));\n        });\n    } /**\n       * Fetches one element in sync\n       * @return {*}\n       */\n\n    fetchOneSync() {\n        return Promise.asyncApply(() => {\n            return _.first(Promise.await(this.fetchSync()));\n        });\n    } /**\n       * Retrieves the data.\n       * @param callbackOrOptions\n       * @returns {*}\n       */\n\n    fetch(callbackOrOptions) {\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions);\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    } /**\n       * @param args\n       * @returns {*}\n       */\n\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            });\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    } /**\n       * Gets the count of matching elements in sync.\n       * @returns {any}\n       */\n\n    getCountSync() {\n        return Promise.asyncApply(() => {\n            if (this._counter) {\n                throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n            }\n\n            return Promise.await(callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params)));\n        });\n    } /**\n       * Gets the count of matching elements.\n       * @param callback\n       * @returns {any}\n       */\n\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(this.name + '.count', this.params, callback);\n            }\n        }\n    } /**\n       * Fetching non-reactive queries\n       * @param callback\n       * @private\n       */\n\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, this.params, callback);\n    } /**\n       * Fetching when we've got an active publication\n       *\n       * @param options\n       * @returns {*}\n       * @private\n       */\n\n    _fetchReactive(options = {}) {\n        let body = this.body;\n\n        if (this.params.$body) {\n            body = intersectDeep(body, this.params.$body);\n        }\n\n        body = prepareForProcess(body, this.params);\n\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(createGraph(this.collection, body));\n    }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet NamedQueryClient;\nmodule.watch(require(\"./namedQuery.client\"), {\n    default(v) {\n        NamedQueryClient = v;\n    }\n\n}, 0);\nlet NamedQueryServer;\nmodule.watch(require(\"./namedQuery.server\"), {\n    default(v) {\n        NamedQueryServer = v;\n    }\n\n}, 1);\nlet NamedQuery;\n\nif (Meteor.isServer) {\n    NamedQuery = NamedQueryServer;\n} else {\n    NamedQuery = NamedQueryClient;\n}\n\nmodule.exportDefault(NamedQuery);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.server.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.server.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet prepareForProcess;\nmodule.watch(require(\"../query/lib/prepareForProcess.js\"), {\n    default(v) {\n        prepareForProcess = v;\n    }\n\n}, 0);\nlet Base;\nmodule.watch(require(\"./namedQuery.base\"), {\n    default(v) {\n        Base = v;\n    }\n\n}, 1);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n    default(v) {\n        deepClone = v;\n    }\n\n}, 2);\nlet MemoryResultCacher;\nmodule.watch(require(\"./cache/MemoryResultCacher\"), {\n    default(v) {\n        MemoryResultCacher = v;\n    }\n\n}, 3);\nlet intersectDeep;\nmodule.watch(require(\"../query/lib/intersectDeep\"), {\n    default(v) {\n        intersectDeep = v;\n    }\n\n}, 4);\nmodule.exportDefault(class extends Base {\n    /**\n     * Retrieves the data.\n     * @returns {*}\n     */fetch(context) {\n        this._performSecurityChecks(context, this.params);\n\n        if (this.isResolver) {\n            return this._fetchResolverData(context);\n        } else {\n            body = deepClone(this.body);\n\n            if (this.params.$body) {\n                body = intersectDeep(body, this.params.$body);\n            } // we must apply emobdyment here\n\n\n            this.doEmbodimentIfItApplies(body);\n            const query = this.collection.createQuery(deepClone(body), {\n                params: deepClone(this.params)\n            });\n\n            if (this.cacher) {\n                const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n                return this.cacher.fetch(cacheId, {\n                    query\n                });\n            }\n\n            return query.fetch();\n        }\n    } /**\n       * @param args\n       * @returns {*}\n       */\n\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    } /**\n       * Gets the count of matching elements.\n       *\n       * @returns {any}\n       */\n\n    getCount(context) {\n        this._performSecurityChecks(context, this.params);\n\n        const countCursor = this.getCursorForCounting();\n\n        if (this.cacher) {\n            const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n            return this.cacher.fetch(cacheId, {\n                countCursor\n            });\n        }\n\n        return countCursor.count();\n    } /**\n       * Returns the cursor for counting\n       * This is most likely used for counts cursor\n       */\n\n    getCursorForCounting() {\n        let body = deepClone(this.body);\n        this.doEmbodimentIfItApplies(body);\n        body = prepareForProcess(body, this.params);\n        return this.collection.find(body.$filters || {}, {\n            fields: {\n                _id: 1\n            }\n        });\n    } /**\n       * @param cacher\n       */\n\n    cacheResults(cacher) {\n        if (!cacher) {\n            cacher = new MemoryResultCacher();\n        }\n\n        this.cacher = cacher;\n    } /**\n       * Configure resolve. This doesn't actually call the resolver, it just sets it\n       * @param fn\n       */\n\n    resolve(fn) {\n        if (!this.isResolver) {\n            throw new Meteor.Error('invalid-call', `You cannot use resolve() on a non resolver NamedQuery`);\n        }\n\n        this.resolver = fn;\n    } /**\n       * @returns {*}\n       * @private\n       */\n\n    _fetchResolverData(context) {\n        const resolver = this.resolver;\n        const self = this;\n        const query = {\n            fetch() {\n                return resolver.call(context, self.params);\n            }\n\n        };\n\n        if (this.cacher) {\n            const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n            return this.cacher.fetch(cacheId, {\n                query\n            });\n        }\n\n        return query.fetch();\n    } /**\n       * @param context Meteor method/publish context\n       * @param params\n       *\n       * @private\n       */\n\n    _performSecurityChecks(context, params) {\n        if (context && this.exposeConfig) {\n            this._callFirewall(context, context.userId, params);\n        }\n\n        this.doValidateParams(params);\n    }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"store.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/namedQuery/store.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exportDefault(new class {\n    constructor() {\n        this.storage = {};\n    }\n\n    add(key, value) {\n        if (this.storage[key]) {\n            throw new Meteor.Error('invalid-name', `You have previously defined another namedQuery with the same name: \"${key}\". Named Query names should be unique.`);\n        }\n\n        this.storage[key] = value;\n    }\n\n    get(key) {\n        return this.storage[key];\n    }\n\n    getAll() {\n        return this.storage;\n    }\n\n}());\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cache\":{\"BaseResultCacher.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/namedQuery/cache/BaseResultCacher.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => BaseResultCacher\n});\nlet EJSON;\nmodule.watch(require(\"meteor/ejson\"), {\n    EJSON(v) {\n        EJSON = v;\n    }\n\n}, 0);\n\nclass BaseResultCacher {\n    constructor(config = {}) {\n        this.config = config;\n    } /**\n       * @param queryName\n       * @param params\n       * @returns {string}\n       */\n\n    generateQueryId(queryName, params) {\n        return `${queryName}::${EJSON.stringify(params)}`;\n    } /**\n       * Dummy function\n       */\n\n    fetch(cacheId, {\n        query,\n        countCursor\n    }) {\n        throw 'Not implemented';\n    } /**\n       * @param query\n       * @param countCursor\n       * @returns {*}\n       */\n\n    static fetchData({\n        query,\n        countCursor\n    }) {\n        if (query) {\n            return query.fetch();\n        } else {\n            return countCursor.count();\n        }\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"MemoryResultCacher.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/namedQuery/cache/MemoryResultCacher.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => MemoryResultCacher\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor(v) {\n        Meteor = v;\n    }\n\n}, 0);\nlet cloneDeep;\nmodule.watch(require(\"lodash.clonedeep\"), {\n    default(v) {\n        cloneDeep = v;\n    }\n\n}, 1);\nlet BaseResultCacher;\nmodule.watch(require(\"./BaseResultCacher\"), {\n    default(v) {\n        BaseResultCacher = v;\n    }\n\n}, 2);\nconst DEFAULT_TTL = 60000; /**\n                            * This is a very basic in-memory result caching functionality\n                            */\n\nclass MemoryResultCacher extends BaseResultCacher {\n    constructor(config = {}) {\n        super(config);\n        this.store = {};\n    } /**\n       * @param cacheId\n       * @param query\n       * @param countCursor\n       * @returns {*}\n       */\n\n    fetch(cacheId, {\n        query,\n        countCursor\n    }) {\n        const cacheData = this.store[cacheId];\n\n        if (cacheData !== undefined) {\n            return cloneDeep(cacheData);\n        }\n\n        const data = BaseResultCacher.fetchData({\n            query,\n            countCursor\n        });\n        this.storeData(cacheId, data);\n        return data;\n    } /**\n       * @param cacheId\n       * @param data\n       */\n\n    storeData(cacheId, data) {\n        const ttl = this.config.ttl || DEFAULT_TTL;\n        this.store[cacheId] = cloneDeep(data);\n        Meteor.setTimeout(() => {\n            delete this.store[cacheId];\n        }, ttl);\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"expose\":{\"extension.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/namedQuery/expose/extension.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet NamedQuery;\nmodule.watch(require(\"../namedQuery.js\"), {\n    default(v) {\n        NamedQuery = v;\n    }\n\n}, 0);\nlet ExposeSchema, ExposeDefaults;\nmodule.watch(require(\"./schema.js\"), {\n    ExposeSchema(v) {\n        ExposeSchema = v;\n    },\n\n    ExposeDefaults(v) {\n        ExposeDefaults = v;\n    }\n\n}, 1);\nlet mergeDeep;\nmodule.watch(require(\"./lib/mergeDeep.js\"), {\n    default(v) {\n        mergeDeep = v;\n    }\n\n}, 2);\nlet createGraph;\nmodule.watch(require(\"../../query/lib/createGraph.js\"), {\n    default(v) {\n        createGraph = v;\n    }\n\n}, 3);\nlet recursiveCompose;\nmodule.watch(require(\"../../query/lib/recursiveCompose.js\"), {\n    default(v) {\n        recursiveCompose = v;\n    }\n\n}, 4);\nlet prepareForProcess;\nmodule.watch(require(\"../../query/lib/prepareForProcess.js\"), {\n    default(v) {\n        prepareForProcess = v;\n    }\n\n}, 5);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n    default(v) {\n        deepClone = v;\n    }\n\n}, 6);\nlet intersectDeep;\nmodule.watch(require(\"../../query/lib/intersectDeep\"), {\n    default(v) {\n        intersectDeep = v;\n    }\n\n}, 7);\nlet genCountEndpoint;\nmodule.watch(require(\"../../query/counts/genEndpoint.server\"), {\n    default(v) {\n        genCountEndpoint = v;\n    }\n\n}, 8);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n    check(v) {\n        check = v;\n    }\n\n}, 9);\n\n_.extend(NamedQuery.prototype, {\n    /**\n     * @param config\n     */expose(config = {}) {\n        if (!Meteor.isServer) {\n            throw new Meteor.Error('invalid-environment', `You must run this in server-side code`);\n        }\n\n        if (this.isExposed) {\n            throw new Meteor.Error('query-already-exposed', `You have already exposed: \"${this.name}\" named query`);\n        }\n\n        this.exposeConfig = Object.assign({}, ExposeDefaults, config);\n        check(this.exposeConfig, ExposeSchema);\n\n        if (this.exposeConfig.validateParams) {\n            this.options.validateParams = this.exposeConfig.validateParams;\n        }\n\n        if (!this.isResolver) {\n            this._initNormalQuery();\n        } else {\n            this._initMethod();\n        }\n\n        this.isExposed = true;\n    },\n\n    /**\n     * Initializes a normal NamedQuery (normal == not a resolver)\n     * @private\n     */_initNormalQuery() {\n        const config = this.exposeConfig;\n\n        if (config.method) {\n            this._initMethod();\n        }\n\n        if (config.publication) {\n            this._initPublication();\n        }\n\n        if (!config.method && !config.publication) {\n            throw new Meteor.Error('weird', 'If you want to expose your named query you need to specify at least one of [\"method\", \"publication\"] options to true');\n        }\n\n        this._initCountMethod();\n\n        this._initCountPublication();\n    },\n\n    /**\n     * Returns the embodied body of the request\n     * @param {*} _embody \n     * @param {*} body \n     */doEmbodimentIfItApplies(body) {\n        // query is not exposed yet, so it doesn't have embodiment logic\n        if (!this.exposeConfig) {\n            return;\n        }\n\n        const {\n            embody\n        } = this.exposeConfig;\n\n        if (!embody) {\n            return;\n        }\n\n        if (_.isFunction(embody)) {\n            embody.call(this, body, this.params);\n        } else {\n            mergeDeep(body, embody);\n        }\n    },\n\n    /**\n     * @private\n     */_initMethod() {\n        const self = this;\n        Meteor.methods({\n            [this.name](newParams) {\n                self._unblockIfNecessary(this); // security is done in the fetching because we provide a context\n\n\n                return self.clone(newParams).fetch(this);\n            }\n\n        });\n    },\n\n    /**\n     * @returns {void}\n     * @private\n     */_initCountMethod() {\n        const self = this;\n        Meteor.methods({\n            [this.name + '.count'](newParams) {\n                self._unblockIfNecessary(this); // security is done in the fetching because we provide a context\n\n\n                return self.clone(newParams).getCount(this);\n            }\n\n        });\n    },\n\n    /**\n     * @returns {*}\n     * @private\n     */_initCountPublication() {\n        const self = this;\n        genCountEndpoint(self.name, {\n            getCursor(session) {\n                const query = self.clone(session.params);\n                return query.getCursorForCounting();\n            },\n\n            getSession(newParams) {\n                self.doValidateParams(newParams);\n\n                self._callFirewall(this, this.userId, params);\n\n                return {\n                    params: newParams\n                };\n            }\n\n        });\n    },\n\n    /**\n     * @private\n     */_initPublication() {\n        const self = this;\n        Meteor.publishComposite(this.name, function (params = {}) {\n            self._unblockIfNecessary(this);\n\n            self.doValidateParams(params);\n\n            self._callFirewall(this, this.userId, params);\n\n            let body = deepClone(self.body);\n\n            if (params.$body) {\n                body = intersectDeep(body, params.$body);\n            }\n\n            self.doEmbodimentIfItApplies(body);\n            body = prepareForProcess(body, params);\n            const rootNode = createGraph(self.collection, body);\n            return recursiveCompose(rootNode);\n        });\n    },\n\n    /**\n     * @param context\n     * @param userId\n     * @param params\n     * @private\n     */_callFirewall(context, userId, params) {\n        const {\n            firewall\n        } = this.exposeConfig;\n\n        if (!firewall) {\n            return;\n        }\n\n        if (_.isArray(firewall)) {\n            firewall.forEach(fire => {\n                fire.call(context, userId, params);\n            });\n        } else {\n            firewall.call(context, userId, params);\n        }\n    },\n\n    /**\n     * @param context\n     * @private\n     */_unblockIfNecessary(context) {\n        if (this.exposeConfig.unblock) {\n            if (context.unblock) {\n                context.unblock();\n            }\n        }\n    }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"schema.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/namedQuery/expose/schema.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    ExposeDefaults: () => ExposeDefaults,\n    ExposeSchema: () => ExposeSchema\n});\nlet Match;\nmodule.watch(require(\"meteor/check\"), {\n    Match(v) {\n        Match = v;\n    }\n\n}, 0);\nconst ExposeDefaults = {\n    publication: true,\n    method: true,\n    unblock: true\n};\nconst ExposeSchema = {\n    firewall: Match.Maybe(Match.OneOf(Function, [Function])),\n    publication: Match.Maybe(Boolean),\n    unblock: Match.Maybe(Boolean),\n    method: Match.Maybe(Boolean),\n    embody: Match.Maybe(Match.OneOf(Object, Function)),\n    validateParams: Match.Maybe(Match.OneOf(Object, Function))\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"mergeDeep.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/namedQuery/expose/lib/mergeDeep.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => mergeDeep\n});\n\nfunction mergeDeep(target, source) {\n    if (_.isObject(target) && _.isObject(source)) {\n        _.each(source, (value, key) => {\n            if (_.isFunction(source[key])) {\n                target[key] = source[key];\n            } else if (_.isObject(source[key])) {\n                if (!target[key]) Object.assign(target, {\n                    [key]: {}\n                });\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, {\n                    [key]: source[key]\n                });\n            }\n        });\n    }\n\n    return target;\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"query\":{\"query.base.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/query.base.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n    default: () => QueryBase\n});\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n    default(v) {\n        deepClone = v;\n    }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n    check(v) {\n        check = v;\n    }\n\n}, 1);\n\nclass QueryBase {\n    constructor(collection, body, options = {}) {\n        this.isGlobalQuery = true;\n        this.collection = collection;\n        this.body = deepClone(body);\n        this.params = options.params || {};\n        this.options = options;\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        return new this.constructor(this.collection, deepClone(this.body), (0, _extends3.default)({\n            params\n        }, this.options));\n    }\n\n    get name() {\n        return `exposure_${this.collection._name}`;\n    } /**\n       * Validates the parameters\n       */\n\n    doValidateParams() {\n        const {\n            validateParams\n        } = this.options;\n        if (!validateParams) return;\n\n        if (_.isFunction(validateParams)) {\n            validateParams.call(null, this.params);\n        } else {\n            check(this.params);\n        }\n    } /**\n       * Merges the params with previous params.\n       *\n       * @param params\n       * @returns {Query}\n       */\n\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n        return this;\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.client.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/query.client.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => Query\n});\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n    _(v) {\n        _ = v;\n    }\n\n}, 0);\nlet CountSubscription;\nmodule.watch(require(\"./counts/countSubscription\"), {\n    default(v) {\n        CountSubscription = v;\n    }\n\n}, 1);\nlet createGraph;\nmodule.watch(require(\"./lib/createGraph.js\"), {\n    default(v) {\n        createGraph = v;\n    }\n\n}, 2);\nlet recursiveFetch;\nmodule.watch(require(\"./lib/recursiveFetch.js\"), {\n    default(v) {\n        recursiveFetch = v;\n    }\n\n}, 3);\nlet prepareForProcess;\nmodule.watch(require(\"./lib/prepareForProcess.js\"), {\n    default(v) {\n        prepareForProcess = v;\n    }\n\n}, 4);\nlet callWithPromise;\nmodule.watch(require(\"./lib/callWithPromise\"), {\n    default(v) {\n        callWithPromise = v;\n    }\n\n}, 5);\nlet Base;\nmodule.watch(require(\"./query.base\"), {\n    default(v) {\n        Base = v;\n    }\n\n}, 6);\n\nclass Query extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback {Function} optional\n     * @returns {null|any|*}\n     */subscribe(callback) {\n        this.doValidateParams();\n        this.subscriptionHandle = Meteor.subscribe(this.name, prepareForProcess(this.body, this.params), callback);\n        return this.subscriptionHandle;\n    } /**\n       * Subscribe to the counts for this query\n       *\n       * @param callback\n       * @returns {Object}\n       */\n\n    subscribeCount(callback) {\n        this.doValidateParams();\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(prepareForProcess(this.body, this.params), callback);\n    } /**\n       * Unsubscribe if an existing subscription exists\n       */\n\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    } /**\n       * Unsubscribe to the counts if a subscription exists.\n       */\n\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n\n            this._counter = null;\n        }\n    } /**\n       * Fetches elements in sync using promises\n       * @return {*}\n       */\n\n    fetchSync() {\n        return Promise.asyncApply(() => {\n            this.doValidateParams();\n\n            if (this.subscriptionHandle) {\n                throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n            }\n\n            return Promise.await(callWithPromise(this.name, prepareForProcess(this.body, this.params)));\n        });\n    } /**\n       * Fetches one element in sync\n       * @return {*}\n       */\n\n    fetchOneSync() {\n        return Promise.asyncApply(() => {\n            return _.first(Promise.await(this.fetchSync()));\n        });\n    } /**\n       * Retrieves the data.\n       * @param callbackOrOptions\n       * @returns {*}\n       */\n\n    fetch(callbackOrOptions) {\n        this.doValidateParams();\n\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions);\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    } /**\n       * @param args\n       * @returns {*}\n       */\n\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            });\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    } /**\n       * Gets the count of matching elements in sync.\n       * @returns {any}\n       */\n\n    getCountSync() {\n        return Promise.asyncApply(() => {\n            if (this._counter) {\n                throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n            }\n\n            return Promise.await(callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params)));\n        });\n    } /**\n       * Gets the count of matching elements.\n       * @param callback\n       * @returns {any}\n       */\n\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(this.name + '.count', prepareForProcess(this.body, this.params), callback);\n            }\n        }\n    } /**\n       * Fetching non-reactive queries\n       * @param callback\n       * @private\n       */\n\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n    } /**\n       * Fetching when we've got an active publication\n       *\n       * @param options\n       * @returns {*}\n       * @private\n       */\n\n    _fetchReactive(options = {}) {\n        let body = prepareForProcess(this.body, this.params);\n\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(createGraph(this.collection, body), this.params);\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/query.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet QueryClient;\nmodule.watch(require(\"./query.client\"), {\n    default(v) {\n        QueryClient = v;\n    }\n\n}, 0);\nlet QueryServer;\nmodule.watch(require(\"./query.server\"), {\n    default(v) {\n        QueryServer = v;\n    }\n\n}, 1);\nlet Query;\n\nif (Meteor.isServer) {\n    Query = QueryServer;\n} else {\n    Query = QueryClient;\n}\n\nmodule.exportDefault(Query);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.server.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/query.server.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => Query\n});\nlet createGraph;\nmodule.watch(require(\"./lib/createGraph.js\"), {\n    default(v) {\n        createGraph = v;\n    }\n\n}, 0);\nlet prepareForProcess;\nmodule.watch(require(\"./lib/prepareForProcess.js\"), {\n    default(v) {\n        prepareForProcess = v;\n    }\n\n}, 1);\nlet hypernova;\nmodule.watch(require(\"./hypernova/hypernova.js\"), {\n    default(v) {\n        hypernova = v;\n    }\n\n}, 2);\nlet Base;\nmodule.watch(require(\"./query.base\"), {\n    default(v) {\n        Base = v;\n    }\n\n}, 3);\n\nclass Query extends Base {\n    /**\n     * Retrieves the data.\n     * @param context\n     * @returns {*}\n     */fetch(context = {}) {\n        const node = createGraph(this.collection, prepareForProcess(this.body, this.params));\n        return hypernova(node, context.userId, {\n            params: this.params\n        });\n    } /**\n       * @param args\n       * @returns {*}\n       */\n\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    } /**\n       * Gets the count of matching elements.\n       * @returns {integer}\n       */\n\n    getCount() {\n        return this.collection.find(this.body.$filters || {}, {}).count();\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"counts\":{\"collection.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/counts/collection.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet COUNTS_COLLECTION_CLIENT;\nmodule.watch(require(\"./constants\"), {\n  COUNTS_COLLECTION_CLIENT(v) {\n    COUNTS_COLLECTION_CLIENT = v;\n  }\n\n}, 1);\nmodule.exportDefault(new Mongo.Collection(COUNTS_COLLECTION_CLIENT));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/counts/constants.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  COUNTS_COLLECTION_CLIENT: () => COUNTS_COLLECTION_CLIENT\n});\nconst COUNTS_COLLECTION_CLIENT = 'grapher_counts';\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"countSubscription.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/counts/countSubscription.js                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => CountSubscription\n});\nlet EJSON;\nmodule.watch(require(\"meteor/ejson\"), {\n    EJSON(v) {\n        EJSON = v;\n    }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor(v) {\n        Meteor = v;\n    }\n\n}, 1);\nlet ReactiveVar;\nmodule.watch(require(\"meteor/reactive-var\"), {\n    ReactiveVar(v) {\n        ReactiveVar = v;\n    }\n\n}, 2);\nlet Tracker;\nmodule.watch(require(\"meteor/tracker\"), {\n    Tracker(v) {\n        Tracker = v;\n    }\n\n}, 3);\nlet Counts;\nmodule.watch(require(\"./collection\"), {\n    default(v) {\n        Counts = v;\n    }\n\n}, 4);\nlet createFauxSubscription;\nmodule.watch(require(\"./createFauxSubscription\"), {\n    default(v) {\n        createFauxSubscription = v;\n    }\n\n}, 5);\nlet prepareForProcess;\nmodule.watch(require(\"../lib/prepareForProcess.js\"), {\n    default(v) {\n        prepareForProcess = v;\n    }\n\n}, 6);\nlet NamedQueryBase;\nmodule.watch(require(\"../../namedQuery/namedQuery.base\"), {\n    default(v) {\n        NamedQueryBase = v;\n    }\n\n}, 7);\n\nclass CountSubscription {\n    /**\n     * @param {*} query - The query to use when fetching counts\n     */constructor(query) {\n        this.accessToken = new ReactiveVar(null);\n        this.fauxHandle = null;\n        this.query = query;\n    } /**\n       * Starts a subscription request for reactive counts.\n       *\n       * @param {*} arg - The argument to pass to {name}.count.subscribe\n       * @param {*} callback\n       */\n\n    subscribe(arg, callback) {\n        // Don't try to resubscribe if arg hasn't changed\n        if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\n            return this.fauxHandle;\n        }\n\n        this.accessToken.set(null);\n        this.lastArgs = arg;\n        Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\n            if (!this._markedForUnsubscribe) {\n                this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\n                this.accessToken.set(token);\n                this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\n            }\n\n            this._markedForUnsubscribe = false;\n        });\n        this.fauxHandle = createFauxSubscription(this);\n        return this.fauxHandle;\n    } /**\n       * Unsubscribes from the count endpoint, if there is such a subscription.\n       */\n\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.disconnectComputation.stop();\n            this.subscriptionHandle.stop();\n        } else {\n            // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\n            // so set a flag to stop the subscription from being created\n            this._markedForUnsubscribe = true;\n        }\n\n        this.accessToken.set(null);\n        this.fauxHandle = null;\n        this.subscriptionHandle = null;\n    } /**\n       * Reactively fetch current document count. Returns null if the subscription is not ready yet.\n       *\n       * @returns {Number|null} - Current document count\n       */\n\n    getCount() {\n        const id = this.accessToken.get();\n        if (id === null) return null;\n        const doc = Counts.findOne(id);\n        return doc.count;\n    } /**\n       * All session info gets deleted when the server goes down, so when the client attempts to\n       * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\n       *\n       * This function prevents that by manually stopping and restarting the subscription when the\n       * connection to the server is lost.\n       */\n\n    handleDisconnect() {\n        const status = Meteor.status();\n\n        if (!status.connected) {\n            this._markedForResume = true;\n            this.fauxHandle = null;\n            this.subscriptionHandle.stop();\n        }\n\n        if (status.connected && this._markedForResume) {\n            this._markedForResume = false;\n            this.subscribe(this.lastArgs);\n        }\n    } /**\n       * Returns whether or not a subscription request has been made.\n       */\n\n    isSubscribed() {\n        return this.accessToken.get() !== null;\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createFauxSubscription.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/counts/createFauxSubscription.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exportDefault(countManager => ({\n  ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\n  stop: () => countManager.unsubscribe()\n}));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"genEndpoint.server.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/counts/genEndpoint.server.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n    check(v) {\n        check = v;\n    }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor(v) {\n        Meteor = v;\n    }\n\n}, 1);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n    Mongo(v) {\n        Mongo = v;\n    }\n\n}, 2);\nlet COUNTS_COLLECTION_CLIENT;\nmodule.watch(require(\"./constants\"), {\n    COUNTS_COLLECTION_CLIENT(v) {\n        COUNTS_COLLECTION_CLIENT = v;\n    }\n\n}, 3);\n// XXX: Should this persist between server restarts?\nconst collection = new Mongo.Collection(null); /**\n                                                * This method generates a reactive count endpoint (a method and publication) for a collection or named query.\n                                                *\n                                                * @param {String} name - Name of the query or collection\n                                                * @param {Function} getCursor - Takes in the user's session document as an argument, and turns that into a Mongo cursor.\n                                                * @param {Function} getSession - Takes the subscribe method's argument as its parameter. Should enforce any necessary security constraints. The return value of this function is stored in the session document.\n                                                */\nmodule.exportDefault((name, {\n    getCursor,\n    getSession\n}) => {\n    Meteor.methods({\n        [name + '.count.subscribe'](paramsOrBody) {\n            const session = getSession.call(this, paramsOrBody);\n            const existingSession = collection.findOne((0, _extends3.default)({}, session, {\n                userId: this.userId\n            })); // Try to reuse sessions if the user subscribes multiple times with the same data\n\n            if (existingSession) {\n                return existingSession._id;\n            }\n\n            const token = collection.insert((0, _extends3.default)({}, session, {\n                query: name,\n                userId: this.userId\n            }));\n            return token;\n        }\n\n    });\n    Meteor.publish(name + '.count', function (token) {\n        check(token, String);\n        const self = this;\n        const request = collection.findOne({\n            _id: token,\n            userId: self.userId\n        });\n\n        if (!request) {\n            throw new Error('no-request', `You must acquire a request token via the \"${name}.count.subscribe\" method first.`);\n        }\n\n        const cursor = getCursor.call(this, request); // Start counting\n\n        let count = 0;\n        self.added(COUNTS_COLLECTION_CLIENT, token, {\n            count\n        });\n        const handle = cursor.observeChanges({\n            added(id) {\n                count++;\n                self.changed(COUNTS_COLLECTION_CLIENT, token, {\n                    count\n                });\n            },\n\n            removed(id) {\n                count--;\n                self.changed(COUNTS_COLLECTION_CLIENT, token, {\n                    count\n                });\n            }\n\n        });\n        self.onStop(() => {\n            handle.stop();\n            collection.remove(token);\n        });\n        self.ready();\n    });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hypernova\":{\"aggregateSearchFilters.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/hypernova/aggregateSearchFilters.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => AggregateFilters\n});\nlet sift;\nmodule.watch(require(\"sift\"), {\n    default(v) {\n        sift = v;\n    }\n\n}, 0);\n\nclass AggregateFilters {\n    constructor(collectionNode, metaFilters) {\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    get parentObjects() {\n        return this.collectionNode.parent.results;\n    }\n\n    create() {\n        switch (this.linker.strategy) {\n            case 'one':\n                return this.createOne();\n\n            case 'one-meta':\n                return this.createOneMeta();\n\n            case 'many':\n                return this.createMany();\n\n            case 'many-meta':\n                return this.createManyMeta();\n\n            default:\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n        }\n    }\n\n    createOne() {\n        if (!this.isVirtual) {\n            return {\n                _id: {\n                    $in: _.uniq(_.pluck(this.parentObjects, this.linkStorageField))\n                }\n            };\n        } else {\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n                }\n            };\n        }\n    }\n\n    createOneMeta() {\n        if (!this.isVirtual) {\n            let eligibleObjects = this.parentObjects;\n\n            if (this.metaFilters) {\n                eligibleObjects = _.filter(this.parentObjects, object => {\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\n                });\n            }\n\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\n\n            let ids = [];\n\n            _.each(storages, storage => {\n                if (storage) {\n                    ids.push(storage._id);\n                }\n            });\n\n            return {\n                _id: {\n                    $in: _.uniq(ids)\n                }\n            };\n        } else {\n            let filters = {};\n\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[this.linkStorageField + '.' + key] = value;\n                });\n            }\n\n            filters[this.linkStorageField + '._id'] = {\n                $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n            };\n            return filters;\n        }\n    }\n\n    createMany() {\n        if (!this.isVirtual) {\n            const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n\n            return {\n                _id: {\n                    $in: _.uniq(_.union(...arrayOfIds))\n                }\n            };\n        } else {\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\n\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(_.union(...arrayOfIds))\n                }\n            };\n        }\n    }\n\n    createManyMeta() {\n        if (!this.isVirtual) {\n            let ids = [];\n\n            _.each(this.parentObjects, object => {\n                if (object[this.linkStorageField]) {\n                    if (this.metaFilters) {\n                        const isValid = sift(this.metaFilters);\n\n                        _.each(object[this.linkStorageField], object => {\n                            if (isValid(object)) {\n                                ids.push(object._id);\n                            }\n                        });\n                    } else {\n                        _.each(object[this.linkStorageField], object => {\n                            ids.push(object._id);\n                        });\n                    }\n                }\n            });\n\n            return {\n                _id: {\n                    $in: _.uniq(ids)\n                }\n            };\n        } else {\n            let filters = {};\n\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[key] = value;\n                });\n            }\n\n            filters._id = {\n                $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n            };\n            return {\n                [this.linkStorageField]: {\n                    $elemMatch: filters\n                }\n            };\n        }\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assembleAggregateResults.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/hypernova/assembleAggregateResults.js                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet sift;\nmodule.watch(require(\"sift\"), {\n    default(v) {\n        sift = v;\n    }\n\n}, 0);\nlet cleanObjectForMetaFilters;\nmodule.watch(require(\"./lib/cleanObjectForMetaFilters\"), {\n    default(v) {\n        cleanObjectForMetaFilters = v;\n    }\n\n}, 1);\nmodule.exportDefault(function (childCollectionNode, aggregateResults, metaFilters) {\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const linkName = childCollectionNode.linkName;\n    const isMeta = linker.isMeta();\n    let allResults = [];\n\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n\n        _.each(childCollectionNode.parent.results, parentResult => {\n            cleanObjectForMetaFilters(parentResult, linkStorageField, metaFiltersTest);\n        });\n    }\n\n    if (isMeta && linker.isMany()) {\n        // This case is treated differently because we get an array response from the pipeline.\n        _.each(childCollectionNode.parent.results, parentResult => {\n            parentResult[linkName] = parentResult[linkName] || [];\n\n            const eligibleAggregateResults = _.filter(aggregateResults, aggregateResult => {\n                return _.contains(aggregateResult._id, parentResult._id);\n            });\n\n            if (eligibleAggregateResults.length) {\n                const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\n\n\n                _.each(datas, data => {\n                    _.each(data, item => {\n                        parentResult[linkName].push(item);\n                    });\n                });\n            }\n        });\n\n        _.each(aggregateResults, aggregateResult => {\n            _.each(aggregateResult.data, item => allResults.push(item));\n        });\n    } else {\n        _.each(aggregateResults, aggregateResult => {\n            let parentResult = _.find(childCollectionNode.parent.results, result => {\n                return result._id == aggregateResult._id;\n            });\n\n            if (parentResult) {\n                parentResult[childCollectionNode.linkName] = aggregateResult.data;\n            }\n\n            _.each(aggregateResult.data, item => {\n                allResults.push(item);\n            });\n        });\n    }\n\n    childCollectionNode.results = allResults;\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assembler.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/hypernova/assembler.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet createSearchFilters;\nmodule.watch(require(\"../../links/lib/createSearchFilters\"), {\n    default(v) {\n        createSearchFilters = v;\n    }\n\n}, 0);\nlet cleanObjectForMetaFilters;\nmodule.watch(require(\"./lib/cleanObjectForMetaFilters\"), {\n    default(v) {\n        cleanObjectForMetaFilters = v;\n    }\n\n}, 1);\nlet sift;\nmodule.watch(require(\"sift\"), {\n    default(v) {\n        sift = v;\n    }\n\n}, 2);\nmodule.exportDefault((childCollectionNode, {\n    limit,\n    skip,\n    metaFilters\n}) => {\n    const parent = childCollectionNode.parent;\n    const linker = childCollectionNode.linker;\n    const strategy = linker.strategy;\n    const isSingle = linker.isSingle();\n    const isMeta = linker.isMeta();\n    const fieldStorage = linker.linkStorageField; // cleaning the parent results from a child\n    // this may be the wrong approach but it works for now\n\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n\n        _.each(parent.results, parentResult => {\n            cleanObjectForMetaFilters(parentResult, fieldStorage, metaFiltersTest);\n        });\n    }\n\n    _.each(parent.results, result => {\n        let data = assembleData(childCollectionNode, result, {\n            fieldStorage,\n            strategy,\n            isSingle\n        });\n        result[childCollectionNode.linkName] = filterAssembledData(data, {\n            limit,\n            skip\n        });\n    });\n});\n\nfunction filterAssembledData(data, {\n    limit,\n    skip\n}) {\n    if (limit) {\n        return data.slice(skip, limit);\n    }\n\n    return data;\n}\n\nfunction assembleData(childCollectionNode, result, {\n    fieldStorage,\n    strategy\n}) {\n    const filters = createSearchFilters(result, fieldStorage, strategy, false);\n    return sift(filters, childCollectionNode.results);\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"buildAggregatePipeline.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/hypernova/buildAggregatePipeline.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n    _(v) {\n        _ = v;\n    }\n\n}, 0);\nmodule.exportDefault(function (childCollectionNode, filters, options, userId) {\n    let containsDottedFields = false;\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const collection = childCollectionNode.collection;\n    let pipeline = [];\n\n    if (collection.firewall) {\n        collection.firewall(filters, options, userId);\n    }\n\n    pipeline.push({\n        $match: filters\n    });\n\n    if (options.sort && _.keys(options.sort).length > 0) {\n        pipeline.push({\n            $sort: options.sort\n        });\n    }\n\n    let _id = linkStorageField;\n\n    if (linker.isMeta()) {\n        _id += '._id';\n    }\n\n    let dataPush = {\n        _id: '$_id'\n    };\n\n    _.each(options.fields, (value, field) => {\n        if (field.indexOf('.') >= 0) {\n            containsDottedFields = true;\n        }\n\n        const safeField = field.replace('.', '___');\n        dataPush[safeField] = '$' + field;\n    });\n\n    if (linker.isMeta()) {\n        dataPush[linkStorageField] = '$' + linkStorageField;\n    }\n\n    pipeline.push({\n        $group: {\n            _id: \"$\" + _id,\n            data: {\n                $push: dataPush\n            }\n        }\n    });\n\n    if (options.limit || options.skip) {\n        let $slice = [\"$data\"];\n        if (options.skip) $slice.push(options.skip);\n        if (options.limit) $slice.push(options.limit);\n        pipeline.push({\n            $project: {\n                _id: 1,\n                data: {\n                    $slice\n                }\n            }\n        });\n    }\n\n    return {\n        pipeline,\n        containsDottedFields\n    };\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/hypernova/constants.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  SAFE_DOTTED_FIELD_REPLACEMENT: () => SAFE_DOTTED_FIELD_REPLACEMENT\n});\nconst SAFE_DOTTED_FIELD_REPLACEMENT = '___';\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hypernova.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/hypernova/hypernova.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => hypernovaInit\n});\nlet applyProps;\nmodule.watch(require(\"../lib/applyProps.js\"), {\n    default(v) {\n        applyProps = v;\n    }\n\n}, 0);\nlet prepareForDelivery;\nmodule.watch(require(\"../lib/prepareForDelivery.js\"), {\n    default(v) {\n        prepareForDelivery = v;\n    }\n\n}, 1);\nlet storeHypernovaResults;\nmodule.watch(require(\"./storeHypernovaResults.js\"), {\n    default(v) {\n        storeHypernovaResults = v;\n    }\n\n}, 2);\n\nfunction hypernova(collectionNode, userId) {\n    _.each(collectionNode.collectionNodes, childCollectionNode => {\n        let {\n            filters,\n            options\n        } = applyProps(childCollectionNode);\n        storeHypernovaResults(childCollectionNode, userId);\n        hypernova(childCollectionNode, userId);\n    });\n}\n\nfunction hypernovaInit(collectionNode, userId, config = {}) {\n    const bypassFirewalls = config.bypassFirewalls || false;\n    const params = config.params || {};\n    let {\n        filters,\n        options\n    } = applyProps(collectionNode);\n    const collection = collectionNode.collection;\n    collectionNode.results = collection.find(filters, options, userId).fetch();\n    const userIdToPass = config.bypassFirewalls ? undefined : userId;\n    hypernova(collectionNode, userIdToPass);\n    prepareForDelivery(collectionNode, params);\n    return collectionNode.results;\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"storeHypernovaResults.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/hypernova/storeHypernovaResults.js                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.export({\n    default: () => storeHypernovaResults\n});\nlet applyProps;\nmodule.watch(require(\"../lib/applyProps.js\"), {\n    default(v) {\n        applyProps = v;\n    }\n\n}, 0);\nlet AggregateFilters;\nmodule.watch(require(\"./aggregateSearchFilters.js\"), {\n    default(v) {\n        AggregateFilters = v;\n    }\n\n}, 1);\nlet assemble;\nmodule.watch(require(\"./assembler.js\"), {\n    default(v) {\n        assemble = v;\n    }\n\n}, 2);\nlet assembleAggregateResults;\nmodule.watch(require(\"./assembleAggregateResults.js\"), {\n    default(v) {\n        assembleAggregateResults = v;\n    }\n\n}, 3);\nlet buildAggregatePipeline;\nmodule.watch(require(\"./buildAggregatePipeline.js\"), {\n    default(v) {\n        buildAggregatePipeline = v;\n    }\n\n}, 4);\nlet snapBackDottedFields;\nmodule.watch(require(\"./lib/snapBackDottedFields\"), {\n    default(v) {\n        snapBackDottedFields = v;\n    }\n\n}, 5);\n\nfunction storeHypernovaResults(childCollectionNode, userId) {\n    if (childCollectionNode.parent.results.length === 0) {\n        return childCollectionNode.results = [];\n    }\n\n    let {\n        filters,\n        options\n    } = applyProps(childCollectionNode);\n    const metaFilters = filters.$meta;\n    const aggregateFilters = new AggregateFilters(childCollectionNode, metaFilters);\n    delete filters.$meta;\n    const linker = childCollectionNode.linker;\n    const isVirtual = linker.isVirtual();\n    const collection = childCollectionNode.collection;\n\n    _.extend(filters, aggregateFilters.create()); // if it's not virtual then we retrieve them and assemble them here.\n\n\n    if (!isVirtual) {\n        const filteredOptions = _.omit(options, 'limit');\n\n        childCollectionNode.results = collection.find(filters, filteredOptions, userId).fetch();\n        assemble(childCollectionNode, (0, _extends3.default)({}, options, {\n            metaFilters\n        }));\n    } else {\n        // virtuals arrive here\n        let {\n            pipeline,\n            containsDottedFields\n        } = buildAggregatePipeline(childCollectionNode, filters, options, userId);\n        let aggregateResults = collection.aggregate(pipeline, {\n            explains: true\n        }); /**\n             * If in aggregation it contains '.', we replace it with a custom string '___'\n             * And then after aggregation is complete we need to snap-it back to how it was.\n             */\n\n        if (containsDottedFields) {\n            snapBackDottedFields(aggregateResults);\n        }\n\n        assembleAggregateResults(childCollectionNode, aggregateResults, metaFilters);\n    }\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"cleanObjectForMetaFilters.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exportDefault(function (object, field, metaFiltersTest) {\n    if (object[field]) {\n        if (_.isArray(object[field])) {\n            object[field] = object[field].filter(metaFiltersTest);\n        } else {\n            if (!metaFiltersTest(object[field])) {\n                object[field] = null;\n            }\n        }\n    }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"snapBackDottedFields.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/hypernova/lib/snapBackDottedFields.js                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet SAFE_DOTTED_FIELD_REPLACEMENT;\nmodule.watch(require(\"../constants\"), {\n    SAFE_DOTTED_FIELD_REPLACEMENT(v) {\n        SAFE_DOTTED_FIELD_REPLACEMENT = v;\n    }\n\n}, 0);\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n    default(v) {\n        dot = v;\n    }\n\n}, 1);\nmodule.exportDefault(function (aggregationResult) {\n    aggregationResult.forEach(result => {\n        result.data = result.data.map(document => {\n            _.each(document, (value, key) => {\n                if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n                    document[key.replace(SAFE_DOTTED_FIELD_REPLACEMENT, '.')] = value;\n                    delete document[key];\n                }\n            });\n\n            return dot.object(document);\n        });\n    });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"lib\":{\"applyProps.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/lib/applyProps.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => applyProps\n});\nconst restrictOptions = ['disableOplog', 'pollingIntervalMs', 'pollingThrottleMs'];\n\nfunction applyProps(node) {\n    let filters = _.extend({}, node.props.$filters);\n\n    let options = _.extend({}, node.props.$options);\n\n    options = _.omit(options, ...restrictOptions);\n    options.fields = options.fields || {};\n    node.applyFields(filters, options);\n    return {\n        filters,\n        options\n    };\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"callWithPromise.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/lib/callWithPromise.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exportDefault((method, myParameters) => {\n    return new Promise((resolve, reject) => {\n        Meteor.call(method, myParameters, (err, res) => {\n            if (err) reject(err.reason || 'Something went wrong.');\n            resolve(res);\n        });\n    });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createGraph.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/lib/createGraph.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    createNodes: () => createNodes,\n    addFieldNode: () => addFieldNode\n});\nlet CollectionNode;\nmodule.watch(require(\"../nodes/collectionNode.js\"), {\n    default(v) {\n        CollectionNode = v;\n    }\n\n}, 0);\nlet FieldNode;\nmodule.watch(require(\"../nodes/fieldNode.js\"), {\n    default(v) {\n        FieldNode = v;\n    }\n\n}, 1);\nlet ReducerNode;\nmodule.watch(require(\"../nodes/reducerNode.js\"), {\n    default(v) {\n        ReducerNode = v;\n    }\n\n}, 2);\nlet dotize;\nmodule.watch(require(\"./dotize.js\"), {\n    default(v) {\n        dotize = v;\n    }\n\n}, 3);\nlet createReducers;\nmodule.watch(require(\"../reducers/lib/createReducers\"), {\n    default(v) {\n        createReducers = v;\n    }\n\n}, 4);\nconst specialFields = ['$filters', '$options', '$postFilters', '$postOptions', '$postFilter']; /**\n                                                                                                * Creates node objects from the body. The root is always a collection node.\n                                                                                                *\n                                                                                                * @param root\n                                                                                                */\n\nfunction createNodes(root) {\n    // this is a fix for phantomjs tests (don't really understand it.)\n    if (!_.isObject(root.body)) {\n        return;\n    }\n\n    _.each(root.body, (body, fieldName) => {\n        if (!body) {\n            return;\n        } // if it's a prop\n\n\n        if (_.contains(specialFields, fieldName)) {\n            root.addProp(fieldName, body);\n            return;\n        } // workaround, see https://github.com/cult-of-coders/grapher/issues/134\n        // TODO: find another way to do this\n\n\n        if (root.collection.default) {\n            root.collection = root.collection.default;\n        } // checking if it is a link.\n\n\n        let linker = root.collection.getLinker(fieldName);\n\n        if (linker) {\n            // check if it is a cached link\n            // if yes, then we need to explicitly define this at collection level\n            // so when we transform the data for delivery, we move it to the link name\n            if (linker.isDenormalized()) {\n                if (linker.isSubBodyDenormalized(body)) {\n                    handleDenormalized(root, linker, body, fieldName);\n                    return;\n                }\n            }\n\n            let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n            root.add(subroot, linker);\n            createNodes(subroot);\n            return;\n        } // checking if it's a reducer\n\n\n        const reducer = root.collection.getReducer(fieldName);\n\n        if (reducer) {\n            let reducerNode = new ReducerNode(fieldName, reducer);\n            root.add(reducerNode);\n        } // it's most likely a field then\n\n\n        addFieldNode(body, fieldName, root);\n    });\n\n    createReducers(root);\n\n    if (root.fieldNodes.length === 0) {\n        root.add(new FieldNode('_id', 1));\n    }\n}\n\nfunction addFieldNode(body, fieldName, root) {\n    // it's not a link and not a special variable => we assume it's a field\n    if (_.isObject(body)) {\n        let dotted = dotize.convert({\n            [fieldName]: body\n        });\n\n        _.each(dotted, (value, key) => {\n            root.add(new FieldNode(key, value));\n        });\n    } else {\n        let fieldNode = new FieldNode(fieldName, body);\n        root.add(fieldNode);\n    }\n}\n\nmodule.exportDefault(function (collection, body) {\n    let root = new CollectionNode(collection, body);\n    createNodes(root);\n    return root;\n});\n; /**\n   * Ads denormalization config properly, including _id\n   *\n   * @param root\n   * @param linker\n   * @param body\n   * @param fieldName\n   */\n\nfunction handleDenormalized(root, linker, body, fieldName) {\n    Object.assign(body, {\n        _id: 1\n    });\n    const cacheField = linker.linkConfig.denormalize.field;\n    root.snapCache(cacheField, fieldName); // if it's one and direct also include the link storage\n\n    if (!linker.isMany() && !linker.isVirtual()) {\n        addFieldNode(1, linker.linkStorageField, root);\n    }\n\n    addFieldNode(body, cacheField, root);\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"dotize.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/lib/dotize.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exportDefault(dotize = {});\n\ndotize.convert = function (obj, prefix) {\n    if ((!obj || typeof obj != \"object\") && !Array.isArray(obj)) {\n        if (prefix) {\n            var newObj = {};\n            newObj[prefix] = obj;\n            return newObj;\n        } else {\n            return obj;\n        }\n    }\n\n    var newObj = {};\n\n    function recurse(o, p, isArrayItem) {\n        for (var f in o) {\n            if (o[f] && typeof o[f] === \"object\") {\n                if (Array.isArray(o[f])) {\n                    if (isEmptyArray(o[f])) {\n                        newObj[getFieldName(f, p, true)] = o[f]; // empty array\n                    } else {\n                        newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\n                    }\n                } else {\n                    if (isArrayItem) {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p, true)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\n                        }\n                    } else {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p)); // object\n                        }\n                    }\n                }\n            } else {\n                if (isArrayItem || isNumber(f)) {\n                    newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\n                } else {\n                    newObj[getFieldName(f, p)] = o[f]; // primitive\n                }\n            }\n        }\n\n        if (isEmptyObj(newObj)) return obj;\n        return newObj;\n    }\n\n    function isNumber(f) {\n        return !isNaN(parseInt(f));\n    }\n\n    function isEmptyObj(obj) {\n        for (var prop in obj) {\n            if (Object.hasOwnProperty.call(obj, prop)) return false;\n        }\n\n        return true;\n    }\n\n    function isEmptyArray(o) {\n        if (Array.isArray(o) && o.length == 0) return true;\n        return false;\n    }\n\n    function getFieldName(field, prefix, isArrayItem, isArray) {\n        if (isArray) return (prefix ? prefix : \"\") + (isNumber(field) ? \"[\" + field + \"]\" : \".\" + field);else if (isArrayItem) return (prefix ? prefix : \"\") + \"[\" + field + \"]\";else return (prefix ? prefix + \".\" : \"\") + field;\n    }\n\n    return recurse(obj, prefix, Array.isArray(obj));\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"intersectDeep.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/lib/intersectDeep.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n    default(v) {\n        dot = v;\n    }\n\n}, 0);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n    _(v) {\n        _ = v;\n    }\n\n}, 1);\nmodule.exportDefault(function (allowedBody, clientBody) {\n    const allowedBodyDot = _.keys(dot.dot(allowedBody));\n\n    const clientBodyDot = _.keys(dot.dot(clientBody));\n\n    const intersection = _.intersection(allowedBodyDot, clientBodyDot);\n\n    const build = {};\n    intersection.forEach(intersectedField => {\n        build[intersectedField] = 1;\n    });\n    return dot.object(build);\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"prepareForDelivery.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/lib/prepareForDelivery.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    applyPostFilters: () => applyPostFilters,\n    applyPostOptions: () => applyPostOptions,\n    removeLinkStorages: () => removeLinkStorages,\n    storeOneResults: () => storeOneResults,\n    assembleMetadata: () => assembleMetadata\n});\nlet applyReducers;\nmodule.watch(require(\"../reducers/lib/applyReducers\"), {\n    default(v) {\n        applyReducers = v;\n    }\n\n}, 0);\nlet cleanReducerLeftovers;\nmodule.watch(require(\"../reducers/lib/cleanReducerLeftovers\"), {\n    default(v) {\n        cleanReducerLeftovers = v;\n    }\n\n}, 1);\nlet sift;\nmodule.watch(require(\"sift\"), {\n    default(v) {\n        sift = v;\n    }\n\n}, 2);\nlet Minimongo;\nmodule.watch(require(\"meteor/minimongo\"), {\n    Minimongo(v) {\n        Minimongo = v;\n    }\n\n}, 3);\nmodule.exportDefault((node, params) => {\n    snapBackCaches(node);\n    applyReducers(node, params);\n    cleanReducerLeftovers(node);\n\n    _.each(node.collectionNodes, collectionNode => {\n        cloneMetaChildren(collectionNode, node.results);\n    });\n\n    _.each(node.collectionNodes, collectionNode => {\n        assembleMetadata(collectionNode, node.results);\n    });\n\n    removeLinkStorages(node, node.results);\n    storeOneResults(node, node.results);\n    applyPostFilters(node);\n    applyPostOptions(node);\n    applyPostFilter(node, params);\n});\n\nfunction applyPostFilters(node) {\n    const postFilters = node.props.$postFilters;\n\n    if (postFilters) {\n        node.results = sift(postFilters, node.results);\n    }\n}\n\nfunction applyPostOptions(node) {\n    const options = node.props.$postOptions;\n\n    if (options) {\n        if (options.sort) {\n            const sorter = new Minimongo.Sorter(options.sort);\n            node.results.sort(sorter.getComparator());\n        }\n\n        if (options.limit || options.skip) {\n            const start = options.skip || 0;\n            const end = options.limit ? options.limit + start : node.results.length;\n            node.results = node.results.slice(start, end);\n        }\n    }\n}\n\n/**\n * Optionally applies a post filtering option\n */function applyPostFilter(node, params) {\n    if (node.props.$postFilter) {\n        const filter = node.props.$postFilter;\n\n        if (_.isArray(filter)) {\n            filter.forEach(f => {\n                node.results = f(node.results, params);\n            });\n        } else {\n            node.results = filter(node.results, params);\n        }\n    }\n}\n\nfunction removeLinkStorages(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    _.each(node.collectionNodes, collectionNode => {\n        const removeStorageField = collectionNode.shouldCleanStorage;\n\n        _.each(sameLevelResults, result => {\n            if (removeStorageField) {\n                delete result[collectionNode.linkStorageField];\n            }\n\n            removeLinkStorages(collectionNode, result[collectionNode.linkName]);\n        });\n    });\n}\n\nfunction storeOneResults(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(sameLevelResults, result => {\n            storeOneResults(collectionNode, result[collectionNode.linkName]);\n        });\n\n        if (collectionNode.isOneResult) {\n            sameLevelResults.forEach(result => {\n                if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\n                    result[collectionNode.linkName] = result[collectionNode.linkName] ? _.first(result[collectionNode.linkName]) : undefined;\n                }\n            });\n        }\n    });\n}\n\nfunction cloneMetaChildren(node, parentResults) {\n    if (!parentResults) {\n        return;\n    }\n\n    const linkName = node.linkName;\n    const isMeta = node.isMeta;\n    parentResults.forEach(parentResult => {\n        if (isMeta && parentResult[linkName]) {\n            parentResult[linkName] = parentResult[linkName].map(object => {\n                return Object.assign({}, object);\n            });\n        }\n\n        node.collectionNodes.forEach(collectionNode => {\n            cloneMetaChildren(collectionNode, parentResult[linkName]);\n        });\n    });\n}\n\nfunction assembleMetadata(node, parentResults) {\n    // assembling metadata is depth first\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(parentResults, result => {\n            assembleMetadata(collectionNode, result[node.linkName]);\n        });\n    });\n\n    if (node.isMeta) {\n        if (node.isVirtual) {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n\n                _.each(childResult, object => {\n                    const storage = object[node.linkStorageField];\n                    storeMetadata(object, parentResult, storage, true);\n                });\n            });\n        } else {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n                const storage = parentResult[node.linkStorageField];\n\n                _.each(childResult, object => {\n                    storeMetadata(object, parentResult, storage, false);\n                });\n            });\n        }\n    }\n}\n\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\n    if (isVirtual) {\n        let $metadata;\n\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id');\n    } else {\n        let $metadata;\n\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == element._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id');\n    }\n}\n\nfunction snapBackCaches(node) {\n    node.collectionNodes.forEach(collectionNode => {\n        snapBackCaches(collectionNode);\n    });\n\n    if (!_.isEmpty(node.snapCaches)) {\n        // process stuff\n        _.each(node.snapCaches, (linkName, cacheField) => {\n            const isSingle = _.contains(node.snapCachesSingles, cacheField);\n\n            const linker = node.collection.getLinker(linkName); // we do this because for one direct and one meta direct, id is not stored\n\n            const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\n            node.results.forEach(result => {\n                if (result[cacheField]) {\n                    if (shoudStoreLinkStorage) {\n                        Object.assign(result[cacheField], {\n                            _id: linker.isMeta() ? result[linker.linkStorageField]._id : result[linker.linkStorageField]\n                        });\n                    }\n\n                    if (isSingle && _.isArray(result[cacheField])) {\n                        result[linkName] = _.first(result[cacheField]);\n                    } else {\n                        result[linkName] = result[cacheField];\n                    }\n\n                    delete result[cacheField];\n                }\n            });\n        });\n    }\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"prepareForProcess.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/lib/prepareForProcess.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n    check(v) {\n        check = v;\n    },\n\n    Match(v) {\n        Match = v;\n    }\n\n}, 0);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n    default(v) {\n        deepClone = v;\n    }\n\n}, 1);\n\nfunction defaultFilterFunction({\n    filters,\n    options,\n    params\n}) {\n    if (params.filters) {\n        Object.assign(filters, params.filters);\n    }\n\n    if (params.options) {\n        Object.assign(options, params.options);\n    }\n}\n\nfunction applyFilterRecursive(data, params = {}, isRoot = false) {\n    if (isRoot && !_.isFunction(data.$filter)) {\n        data.$filter = defaultFilterFunction;\n    }\n\n    if (data.$filter) {\n        check(data.$filter, Match.OneOf(Function, [Function]));\n        data.$filters = data.$filters || {};\n        data.$options = data.$options || {};\n\n        if (_.isArray(data.$filter)) {\n            data.$filter.forEach(filter => {\n                filter.call(null, {\n                    filters: data.$filters,\n                    options: data.$options,\n                    params: params\n                });\n            });\n        } else {\n            data.$filter({\n                filters: data.$filters,\n                options: data.$options,\n                params: params\n            });\n        }\n\n        data.$filter = null;\n        delete data.$filter;\n    }\n\n    _.each(data, (value, key) => {\n        if (_.isObject(value)) {\n            return applyFilterRecursive(value, params);\n        }\n    });\n}\n\nfunction applyPagination(body, _params) {\n    if (body['$paginate'] && _params) {\n        if (!body.$options) {\n            body.$options = {};\n        }\n\n        if (_params.limit) {\n            _.extend(body.$options, {\n                limit: _params.limit\n            });\n        }\n\n        if (_params.skip) {\n            _.extend(body.$options, {\n                skip: _params.skip\n            });\n        }\n\n        delete body['$paginate'];\n    }\n}\n\nmodule.exportDefault((_body, _params = {}) => {\n    let body = deepClone(_body);\n    let params = deepClone(_params);\n    applyPagination(body, params);\n    applyFilterRecursive(body, params, true);\n    return body;\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"recursiveCompose.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/lib/recursiveCompose.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet applyProps;\nmodule.watch(require(\"./applyProps.js\"), {\n    default(v) {\n        applyProps = v;\n    }\n\n}, 0);\n\nfunction compose(node, userId) {\n    return {\n        find(parent) {\n            if (parent) {\n                let {\n                    filters,\n                    options\n                } = applyProps(node); // composition\n\n                let linker = node.linker;\n                let accessor = linker.createLink(parent); // the rule is this, if a child I want to fetch is virtual, then I want to fetch the link storage of those fields\n\n                if (linker.isVirtual()) {\n                    options.fields = options.fields || {};\n\n                    _.extend(options.fields, {\n                        [linker.linkStorageField]: 1\n                    });\n                }\n\n                return accessor.find(filters, options, userId);\n            }\n        },\n\n        children: _.map(node.collectionNodes, n => compose(n, userId))\n    };\n}\n\nmodule.exportDefault((node, userId, config = {\n    bypassFirewalls: false\n}) => {\n    return {\n        find() {\n            let {\n                filters,\n                options\n            } = applyProps(node);\n            return node.collection.find(filters, options, userId);\n        },\n\n        children: _.map(node.collectionNodes, n => {\n            const userIdToPass = config.bypassFirewalls ? undefined : userId;\n            return compose(n, userIdToPass);\n        })\n    };\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"recursiveFetch.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/lib/recursiveFetch.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet applyProps;\nmodule.watch(require(\"./applyProps.js\"), {\n    default(v) {\n        applyProps = v;\n    }\n\n}, 0);\nlet assembleMetadata, removeLinkStorages, storeOneResults;\nmodule.watch(require(\"./prepareForDelivery\"), {\n    assembleMetadata(v) {\n        assembleMetadata = v;\n    },\n\n    removeLinkStorages(v) {\n        removeLinkStorages = v;\n    },\n\n    storeOneResults(v) {\n        storeOneResults = v;\n    }\n\n}, 1);\nlet prepareForDelivery;\nmodule.watch(require(\"./prepareForDelivery\"), {\n    default(v) {\n        prepareForDelivery = v;\n    }\n\n}, 2);\n\n/**\n * This is always run client side to build the data graph out of client-side collections.\n *\n * @param node\n * @param parentObject\n * @returns {*}\n */function fetch(node, parentObject) {\n    let {\n        filters,\n        options\n    } = applyProps(node);\n    let results = [];\n\n    if (parentObject) {\n        let accessor = node.linker.createLink(parentObject, node.collection);\n\n        if (node.isVirtual) {\n            options.fields = options.fields || {};\n\n            _.extend(options.fields, {\n                [node.linkStorageField]: 1\n            });\n        }\n\n        results = accessor.find(filters, options).fetch();\n    } else {\n        results = node.collection.find(filters, options).fetch();\n    }\n\n    _.each(node.collectionNodes, collectionNode => {\n        _.each(results, result => {\n            result[collectionNode.linkName] = fetch(collectionNode, result); //delete result[node.linker.linkStorageField];\n        });\n    });\n\n    return results;\n}\n\nmodule.exportDefault((node, params) => {\n    node.results = fetch(node);\n    prepareForDelivery(node, params);\n    return node.results;\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"nodes\":{\"collectionNode.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/nodes/collectionNode.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => CollectionNode\n});\nlet FieldNode;\nmodule.watch(require(\"./fieldNode.js\"), {\n    default(v) {\n        FieldNode = v;\n    }\n\n}, 0);\nlet ReducerNode;\nmodule.watch(require(\"./reducerNode.js\"), {\n    default(v) {\n        ReducerNode = v;\n    }\n\n}, 1);\nlet deepClone;\nmodule.watch(require(\"lodash.clonedeep\"), {\n    default(v) {\n        deepClone = v;\n    }\n\n}, 2);\nlet check, Match;\nmodule.watch(require(\"meteor/check\"), {\n    check(v) {\n        check = v;\n    },\n\n    Match(v) {\n        Match = v;\n    }\n\n}, 3);\n\nclass CollectionNode {\n    constructor(collection, body = {}, linkName = null) {\n        if (collection && !_.isObject(body)) {\n            throw new Meteor.Error('invalid-body', 'Every collection link should have its body defined as an object.');\n        }\n\n        this.body = deepClone(body);\n        this.linkName = linkName;\n        this.collection = collection;\n        this.nodes = [];\n        this.props = {};\n        this.parent = null;\n        this.linker = null;\n        this.linkStorageField = null;\n        this.scheduledForDeletion = false;\n        this.reducers = [];\n        this.results = [];\n        this.snapCaches = {}; // {cacheField: linkName}\n\n        this.snapCachesSingles = []; // [cacheField1, cacheField2]\n    }\n\n    get collectionNodes() {\n        return _.filter(this.nodes, n => n instanceof CollectionNode);\n    }\n\n    get fieldNodes() {\n        return _.filter(this.nodes, n => n instanceof FieldNode);\n    }\n\n    get reducerNodes() {\n        return _.filter(this.nodes, n => n instanceof ReducerNode);\n    } /**\n       * Adds children to itself\n       *\n       * @param node\n       * @param linker\n       */\n\n    add(node, linker) {\n        node.parent = this;\n\n        if (linker) {\n            node.linker = linker;\n            node.linkStorageField = linker.linkStorageField;\n            node.isMeta = linker.isMeta();\n            node.isVirtual = linker.isVirtual();\n            node.isOneResult = linker.isOneResult();\n            node.shouldCleanStorage = this._shouldCleanStorage(node);\n        }\n\n        this.nodes.push(node);\n    } /**\n       * @param prop\n       * @param value\n       */\n\n    addProp(prop, value) {\n        if (prop === '$postFilter') {\n            check(value, Match.OneOf(Function, [Function]));\n        }\n\n        _.extend(this.props, {\n            [prop]: value\n        });\n    } /**\n       * @param _node\n       */\n\n    remove(_node) {\n        this.nodes = _.filter(this.nodes, node => _node !== node);\n    } /**\n       * @param filters\n       * @param options\n       */\n\n    applyFields(filters, options) {\n        let hasAddedAnyField = false;\n\n        _.each(this.fieldNodes, n => {\n            hasAddedAnyField = true;\n            n.applyFields(options.fields);\n        }); // it will only get here if it has collectionNodes children\n\n\n        _.each(this.collectionNodes, collectionNode => {\n            let linker = collectionNode.linker;\n\n            if (linker && !linker.isVirtual()) {\n                options.fields[linker.linkStorageField] = 1;\n                hasAddedAnyField = true;\n            }\n        }); // if he selected filters, we should automatically add those fields\n\n\n        _.each(filters, (value, field) => {\n            // special handling for the $meta filter and conditional operators\n            if (!_.contains(['$or', '$nor', '$not', '$and', '$meta'], field)) {\n                // if the field or the parent of the field already exists, don't add it\n                if (!_.has(options.fields, field.split('.')[0])) {\n                    hasAddedAnyField = true;\n                    options.fields[field] = 1;\n                }\n            }\n        });\n\n        if (!hasAddedAnyField) {\n            options.fields = {\n                _id: 1\n            };\n        }\n    } /**\n       * @param fieldName\n       * @returns {boolean}\n       */\n\n    hasField(fieldName) {\n        return !!_.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName;\n        });\n    } /**\n       * @param fieldName\n       * @returns {FieldNode}\n       */\n\n    getField(fieldName) {\n        return _.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName;\n        });\n    } /**\n       * @param name\n       * @returns {boolean}\n       */\n\n    hasCollectionNode(name) {\n        return !!_.find(this.collectionNodes, node => {\n            return node.linkName == name;\n        });\n    } /**\n       * @param name\n       * @returns {boolean}\n       */\n\n    hasReducerNode(name) {\n        return !!_.find(this.reducerNodes, node => {\n            return node.name == name;\n        });\n    } /**\n       * @param name\n       * @returns {ReducerNode}\n       */\n\n    getReducerNode(name) {\n        return _.find(this.reducerNodes, node => {\n            return node.name == name;\n        });\n    } /**\n       * @param name\n       * @returns {CollectionNode}\n       */\n\n    getCollectionNode(name) {\n        return _.find(this.collectionNodes, node => {\n            return node.linkName == name;\n        });\n    } /**\n       * @returns {*}\n       */\n\n    getName() {\n        return this.linkName ? this.linkName : this.collection ? this.collection._name : 'N/A';\n    } /**\n       * This is used for caching links\n       *\n       * @param cacheField\n       * @param subLinkName\n       */\n\n    snapCache(cacheField, subLinkName) {\n        this.snapCaches[cacheField] = subLinkName;\n\n        if (this.collection.getLinker(subLinkName).isOneResult()) {\n            this.snapCachesSingles.push(cacheField);\n        }\n    } /**\n       * This method verifies whether to remove the linkStorageField form the results\n       * unless you specify it in your query.\n       *\n       * @param node\n       * @returns {boolean}\n       * @private\n       */\n\n    _shouldCleanStorage(node) {\n        if (node.linkStorageField === '_id') {\n            return false;\n        } else {\n            if (node.isVirtual) {\n                return !node.hasField(node.linkStorageField);\n            } else {\n                return !this.hasField(node.linkStorageField);\n            }\n        }\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fieldNode.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/nodes/fieldNode.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => FieldNode\n});\n\nclass FieldNode {\n    constructor(name, body) {\n        this.name = name;\n        this.body = _.isObject(body) ? 1 : body;\n        this.scheduledForDeletion = false;\n    }\n\n    applyFields(fields) {\n        fields[this.name] = this.body;\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducerNode.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/nodes/reducerNode.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => ReducerNode\n});\n\nclass ReducerNode {\n    constructor(name, {\n        body,\n        reduce\n    }) {\n        this.name = name;\n        this.body = body;\n        this.reduceFunction = reduce;\n    } /**\n       * When computing we also pass the parameters\n       * \n       * @param {*} object \n       * @param {*} args \n       */\n\n    compute(object, ...args) {\n        object[this.name] = this.reduce.call(this, object, ...args);\n    }\n\n    reduce(object, ...args) {\n        return this.reduceFunction.call(this, object, ...args);\n    }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"reducers\":{\"extension.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/reducers/extension.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n    check(v) {\n        check = v;\n    }\n\n}, 0);\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * @param data\n     */addReducers(data) {\n        if (!this[storage]) {\n            this[storage] = {};\n        }\n\n        _.each(data, (reducerConfig, reducerName) => {\n            if (!this[reducerConfig]) {\n                this[reducerConfig] = {};\n            }\n\n            if (this.getLinker(reducerName)) {\n                throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${this._name} collection`);\n            }\n\n            if (this[reducerConfig][reducerName]) {\n                throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it was already added to ${this._name} collection`);\n            }\n\n            check(reducerConfig, {\n                body: Object,\n                reduce: Function\n            });\n\n            _.extend(this[storage], {\n                [reducerName]: reducerConfig\n            });\n        });\n    },\n\n    /**\n     * @param name\n     * @returns {*}\n     */getReducer(name) {\n        if (this[storage]) {\n            return this[storage][name];\n        }\n    }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"applyReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/applyReducers.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => applyReducers\n});\n\nfunction applyReducers(root, params) {\n    _.each(root.collectionNodes, node => {\n        applyReducers(node, params);\n    });\n\n    _.each(root.reducerNodes, reducerNode => {\n        root.results.forEach(result => {\n            reducerNode.compute(result, params);\n        });\n    });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cleanReducerLeftovers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/cleanReducerLeftovers.js                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => cleanReducerLeftovers\n});\n\nfunction cleanReducerLeftovers(root) {\n    _.each(root.collectionNodes, node => {\n        if (node.scheduledForDeletion) {\n            root.results.forEach(result => {\n                delete result[node.linkName];\n            });\n        }\n    });\n\n    _.each(root.collectionNodes, node => {\n        cleanReducerLeftovers(node);\n    });\n\n    _.each(root.fieldNodes, node => {\n        if (node.scheduledForDeletion) {\n            cleanNestedFields(node.name.split('.'), root.results);\n        }\n    });\n\n    _.each(root.reducerNodes, node => {\n        if (node.scheduledForDeletion) {\n            root.results.forEach(result => {\n                delete result[node.name];\n            });\n        }\n    });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n/**\n *\n * @param parts\n * @param results\n */function cleanNestedFields(parts, results) {\n    const fieldName = parts[0];\n\n    if (parts.length === 1) {\n        results.forEach(result => {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        });\n        return;\n    }\n\n    parts.shift();\n    cleanNestedFields(parts, results.map(result => result[fieldName]));\n    results.forEach(result => {\n        if (_.keys(result[fieldName]).length === 0) {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        }\n    });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createReducers.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/createReducers.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => addReducers,\n    handleAddElement: () => handleAddElement,\n    handleAddReducer: () => handleAddReducer,\n    handleAddLink: () => handleAddLink,\n    handleAddField: () => handleAddField\n});\nlet dot;\nmodule.watch(require(\"dot-object\"), {\n    default(v) {\n        dot = v;\n    }\n\n}, 0);\nlet createNodes;\nmodule.watch(require(\"../../lib/createGraph\"), {\n    createNodes(v) {\n        createNodes = v;\n    }\n\n}, 1);\nlet CollectionNode;\nmodule.watch(require(\"../../nodes/collectionNode\"), {\n    default(v) {\n        CollectionNode = v;\n    }\n\n}, 2);\nlet FieldNode;\nmodule.watch(require(\"../../nodes/fieldNode\"), {\n    default(v) {\n        FieldNode = v;\n    }\n\n}, 3);\nlet ReducerNode;\nmodule.watch(require(\"../../nodes/reducerNode\"), {\n    default(v) {\n        ReducerNode = v;\n    }\n\n}, 4);\nlet embedReducerWithLink;\nmodule.watch(require(\"./embedReducerWithLink\"), {\n    default(v) {\n        embedReducerWithLink = v;\n    }\n\n}, 5);\n\nfunction addReducers(root) {\n    // we add reducers last, after we have added all the fields.\n    root.reducerNodes.forEach(reducer => {\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(root, fieldName, body);\n        });\n    });\n}\n\nfunction handleAddElement(root, fieldName, body) {\n    // if it's a link\n    const collection = root.collection;\n    const linker = collection.getLinker(fieldName);\n\n    if (linker) {\n        return handleAddLink(fieldName, body, root, linker);\n    }\n\n    const reducer = collection.getReducer(fieldName);\n\n    if (reducer) {\n        return handleAddReducer(fieldName, reducer, root);\n    } // we assume it's a field in this case\n\n\n    return handleAddField(fieldName, body, root);\n}\n\nfunction handleAddReducer(fieldName, reducer, root) {\n    if (!root.hasReducerNode(fieldName)) {\n        let reducerNode = new ReducerNode(fieldName, reducer);\n        root.add(reducerNode);\n        reducerNode.scheduledForDeletion = true;\n\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(root, fieldName, body);\n        });\n    }\n}\n\nfunction handleAddLink(fieldName, body, root, linker) {\n    if (root.hasCollectionNode(fieldName)) {\n        const collectionNode = root.getCollectionNode(fieldName);\n        embedReducerWithLink(body, collectionNode);\n    } else {\n        // add\n        let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n        collectionNode.scheduledForDeletion = true;\n        root.add(collectionNode, linker);\n        createNodes(collectionNode);\n    }\n}\n\nfunction handleAddField(fieldName, body, root) {\n    if (_.isObject(body)) {\n        // if reducer specifies a nested field\n        const dots = dot.dot({\n            [fieldName]: body\n        });\n\n        _.each(dots, (value, key) => {\n            if (!root.hasField(key)) {\n                let fieldNode = new FieldNode(key, value);\n                fieldNode.scheduledForDeletion = true;\n                root.add(fieldNode);\n            }\n        });\n    } else {\n        // if reducer does not specify a nested field, and the field does not exist.\n        if (!root.hasField(fieldName)) {\n            let fieldNode = new FieldNode(fieldName, body);\n            fieldNode.scheduledForDeletion = true;\n            root.add(fieldNode);\n        }\n    }\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"embedReducerWithLink.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/embedReducerWithLink.js                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n    default: () => embedReducerWithLink\n});\nlet handleAddField, handleAddElement, handleAddReducer;\nmodule.watch(require(\"./createReducers\"), {\n    handleAddField(v) {\n        handleAddField = v;\n    },\n\n    handleAddElement(v) {\n        handleAddElement = v;\n    },\n\n    handleAddReducer(v) {\n        handleAddReducer = v;\n    }\n\n}, 0);\n\nfunction embedReducerWithLink(reducerBody, collectionNode) {\n    _.each(reducerBody, (value, key) => {\n        const collection = collectionNode.collection;\n\n        if (_.isObject(value)) {\n            // nested field or link\n            if (collectionNode.body[key]) {\n                // if it exists\n                const linker = collection.getLinker(key); // if it's a link\n\n                if (linker) {\n                    embedReducerWithLink(value, collectionNode.getCollectionNode(key));\n                    return;\n                }\n\n                handleAddField(key, value, collectionNode);\n            } else {\n                // does not exist, so it may be a link/reducer/field\n                handleAddElement(root, key, value);\n            }\n        } else {\n            // if this field or other reducer exists within the collection\n            if (!collectionNode.body[key]) {\n                // can only be field or another reducer for this.\n                const reducer = collection.getReducer(key);\n\n                if (reducer) {\n                    // if it's another reducer\n                    return handleAddReducer(key, reducer, collectionNode);\n                }\n\n                return handleAddField(key, value, collectionNode);\n            }\n        }\n    });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},\"node_modules\":{\"lodash.clonedeep\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/cultofcoders_grapher/node_modules/lodash.clonedeep/index.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = \"__lodash_hash_undefined__\";\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = \"[object Arguments]\",\n    arrayTag = \"[object Array]\",\n    boolTag = \"[object Boolean]\",\n    dateTag = \"[object Date]\",\n    errorTag = \"[object Error]\",\n    funcTag = \"[object Function]\",\n    genTag = \"[object GeneratorFunction]\",\n    mapTag = \"[object Map]\",\n    numberTag = \"[object Number]\",\n    objectTag = \"[object Object]\",\n    promiseTag = \"[object Promise]\",\n    regexpTag = \"[object RegExp]\",\n    setTag = \"[object Set]\",\n    stringTag = \"[object String]\",\n    symbolTag = \"[object Symbol]\",\n    weakMapTag = \"[object WeakMap]\";\n\nvar arrayBufferTag = \"[object ArrayBuffer]\",\n    dataViewTag = \"[object DataView]\",\n    float32Tag = \"[object Float32Array]\",\n    float64Tag = \"[object Float64Array]\",\n    int8Tag = \"[object Int8Array]\",\n    int16Tag = \"[object Int16Array]\",\n    int32Tag = \"[object Int32Array]\",\n    uint8Tag = \"[object Uint8Array]\",\n    uint8ClampedTag = \"[object Uint8ClampedArray]\",\n    uint16Tag = \"[object Uint16Array]\",\n    uint32Tag = \"[object Uint32Array]\";\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[\n    arrayBufferTag\n] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[\n    dateTag\n] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[\n    int8Tag\n] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[\n    mapTag\n] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[\n    regexpTag\n] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[\n    symbolTag\n] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[\n    uint16Tag\n] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[\n    weakMapTag\n] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal =\n    typeof global == \"object\" && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf =\n    typeof self == \"object\" && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function(\"return this\")();\n\n/** Detect free variable `exports`. */\nvar freeExports =\n    typeof exports == \"object\" && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule =\n    freeExports &&\n    typeof module == \"object\" &&\n    module &&\n    !module.nodeType &&\n    module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n            break;\n        }\n    }\n    return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n        array[offset + index] = values[index];\n    }\n    return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n        accumulator = array[++index];\n    }\n    while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n        result[index] = iteratee(index);\n    }\n    return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n    return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != \"function\") {\n        try {\n            result = !!(value + \"\");\n        } catch (e) {}\n    }\n    return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n        result[++index] = [key, value];\n    });\n    return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n    return function(arg) {\n        return func(transform(arg));\n    };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n        result[++index] = value;\n    });\n    return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root[\"__core-js_shared__\"];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n    var uid = /[^.]+$/.exec(\n        (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || \"\"\n    );\n    return uid ? \"Symbol(src)_1.\" + uid : \"\";\n})();\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp(\n    \"^\" +\n        funcToString\n            .call(hasOwnProperty)\n            .replace(reRegExpChar, \"\\\\$&\")\n            .replace(\n                /hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\n                \"$1.*?\"\n            ) +\n        \"$\"\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, \"DataView\"),\n    Map = getNative(root, \"Map\"),\n    Promise = getNative(root, \"Promise\"),\n    Set = getNative(root, \"Set\"),\n    WeakMap = getNative(root, \"WeakMap\"),\n    nativeCreate = getNative(Object, \"create\");\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n    var index = -1,\n        length = entries ? entries.length : 0;\n\n    this.clear();\n    while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n    }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n    this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n    return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n    var data = this.__data__;\n    if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n    }\n    return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n    var data = this.__data__;\n    return nativeCreate\n        ? data[key] !== undefined\n        : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n    var data = this.__data__;\n    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n    return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype[\"delete\"] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n    var index = -1,\n        length = entries ? entries.length : 0;\n\n    this.clear();\n    while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n    }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n    this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n    var data = this.__data__,\n        index = assocIndexOf(data, key);\n\n    if (index < 0) {\n        return false;\n    }\n    var lastIndex = data.length - 1;\n    if (index == lastIndex) {\n        data.pop();\n    } else {\n        splice.call(data, index, 1);\n    }\n    return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n    var data = this.__data__,\n        index = assocIndexOf(data, key);\n\n    return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n    return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n    var data = this.__data__,\n        index = assocIndexOf(data, key);\n\n    if (index < 0) {\n        data.push([key, value]);\n    } else {\n        data[index][1] = value;\n    }\n    return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype[\"delete\"] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n    var index = -1,\n        length = entries ? entries.length : 0;\n\n    this.clear();\n    while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n    }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n    this.__data__ = {\n        hash: new Hash(),\n        map: new (Map || ListCache)(),\n        string: new Hash()\n    };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n    return getMapData(this, key)[\"delete\"](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n    return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n    return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n    getMapData(this, key).set(key, value);\n    return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype[\"delete\"] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n    this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n    this.__data__ = new ListCache();\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n    return this.__data__[\"delete\"](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n    return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n    return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n    var cache = this.__data__;\n    if (cache instanceof ListCache) {\n        var pairs = cache.__data__;\n        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n            pairs.push([key, value]);\n            return this;\n        }\n        cache = this.__data__ = new MapCache(pairs);\n    }\n    cache.set(key, value);\n    return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype[\"delete\"] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n    // Safari 9 makes `arguments.length` enumerable in strict mode.\n    var result =\n        isArray(value) || isArguments(value)\n            ? baseTimes(value.length, String)\n            : [];\n\n    var length = result.length,\n        skipIndexes = !!length;\n\n    for (var key in value) {\n        if (\n            (inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (key == \"length\" || isIndex(key, length)))\n        ) {\n            result.push(key);\n        }\n    }\n    return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n    var objValue = object[key];\n    if (\n        !(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))\n    ) {\n        object[key] = value;\n    }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n    var length = array.length;\n    while (length--) {\n        if (eq(array[length][0], key)) {\n            return length;\n        }\n    }\n    return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n    return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n    var result;\n    if (customizer) {\n        result = object\n            ? customizer(value, key, object, stack)\n            : customizer(value);\n    }\n    if (result !== undefined) {\n        return result;\n    }\n    if (!isObject(value)) {\n        return value;\n    }\n    var isArr = isArray(value);\n    if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n            return copyArray(value, result);\n        }\n    } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n            return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n            if (isHostObject(value)) {\n                return object ? value : {};\n            }\n            result = initCloneObject(isFunc ? {} : value);\n            if (!isDeep) {\n                return copySymbols(value, baseAssign(result, value));\n            }\n        } else {\n            if (!cloneableTags[tag]) {\n                return object ? value : {};\n            }\n            result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n    }\n    // Check for circular references and return its corresponding clone.\n    stack || (stack = new Stack());\n    var stacked = stack.get(value);\n    if (stacked) {\n        return stacked;\n    }\n    stack.set(value, result);\n\n    if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n    }\n    arrayEach(props || value, function(subValue, key) {\n        if (props) {\n            key = subValue;\n            subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(\n            result,\n            key,\n            baseClone(subValue, isDeep, isFull, customizer, key, value, stack)\n        );\n    });\n    return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n    return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n    var result = keysFunc(object);\n    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n    return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n    if (!isObject(value) || isMasked(value)) {\n        return false;\n    }\n    var pattern =\n        isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;\n    return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n    if (!isPrototype(object)) {\n        return nativeKeys(object);\n    }\n    var result = [];\n    for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != \"constructor\") {\n            result.push(key);\n        }\n    }\n    return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n    if (isDeep) {\n        return buffer.slice();\n    }\n    var result = new buffer.constructor(buffer.length);\n    buffer.copy(result);\n    return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n    new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n    return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n    return new dataView.constructor(\n        buffer,\n        dataView.byteOffset,\n        dataView.byteLength\n    );\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n    var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n    return arrayReduce(array, addMapEntry, new map.constructor());\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n    result.lastIndex = regexp.lastIndex;\n    return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n    var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n    return arrayReduce(array, addSetEntry, new set.constructor());\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n    var buffer = isDeep\n        ? cloneArrayBuffer(typedArray.buffer)\n        : typedArray.buffer;\n    return new typedArray.constructor(\n        buffer,\n        typedArray.byteOffset,\n        typedArray.length\n    );\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n    var index = -1,\n        length = source.length;\n\n    array || (array = Array(length));\n    while (++index < length) {\n        array[index] = source[index];\n    }\n    return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n            ? customizer(object[key], source[key], key, object, source)\n            : undefined;\n\n        assignValue(\n            object,\n            key,\n            newValue === undefined ? source[key] : newValue\n        );\n    }\n    return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n    return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n    return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n    var data = map.__data__;\n    return isKeyable(key)\n        ? data[typeof key == \"string\" ? \"string\" : \"hash\"]\n        : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n    var value = getValue(object, key);\n    return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols\n    ? overArg(nativeGetSymbols, Object)\n    : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif (\n    (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map()) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set()) != setTag) ||\n    (WeakMap && getTag(new WeakMap()) != weakMapTag)\n) {\n    getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n            switch (ctorString) {\n                case dataViewCtorString:\n                    return dataViewTag;\n                case mapCtorString:\n                    return mapTag;\n                case promiseCtorString:\n                    return promiseTag;\n                case setCtorString:\n                    return setTag;\n                case weakMapCtorString:\n                    return weakMapTag;\n            }\n        }\n        return result;\n    };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n    var length = array.length,\n        result = array.constructor(length);\n\n    // Add properties assigned by `RegExp#exec`.\n    if (\n        length &&\n        typeof array[0] == \"string\" &&\n        hasOwnProperty.call(array, \"index\")\n    ) {\n        result.index = array.index;\n        result.input = array.input;\n    }\n    return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n    return typeof object.constructor == \"function\" && !isPrototype(object)\n        ? baseCreate(getPrototype(object))\n        : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n    var Ctor = object.constructor;\n    switch (tag) {\n        case arrayBufferTag:\n            return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n            return new Ctor(+object);\n\n        case dataViewTag:\n            return cloneDataView(object, isDeep);\n\n        case float32Tag:\n        case float64Tag:\n        case int8Tag:\n        case int16Tag:\n        case int32Tag:\n        case uint8Tag:\n        case uint8ClampedTag:\n        case uint16Tag:\n        case uint32Tag:\n            return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n            return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n            return new Ctor(object);\n\n        case regexpTag:\n            return cloneRegExp(object);\n\n        case setTag:\n            return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n            return cloneSymbol(object);\n    }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n    length = length == null ? MAX_SAFE_INTEGER : length;\n    return (\n        !!length &&\n        (typeof value == \"number\" || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length)\n    );\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n    var type = typeof value;\n    return type == \"string\" ||\n        type == \"number\" ||\n        type == \"symbol\" ||\n        type == \"boolean\"\n        ? value !== \"__proto__\"\n        : value === null;\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n    return !!maskSrcKey && maskSrcKey in func;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n    var Ctor = value && value.constructor,\n        proto = (typeof Ctor == \"function\" && Ctor.prototype) || objectProto;\n\n    return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n    if (func != null) {\n        try {\n            return funcToString.call(func);\n        } catch (e) {}\n        try {\n            return func + \"\";\n        } catch (e) {}\n    }\n    return \"\";\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n    return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n    return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n    return (\n        isArrayLikeObject(value) &&\n        hasOwnProperty.call(value, \"callee\") &&\n        (!propertyIsEnumerable.call(value, \"callee\") ||\n            objectToString.call(value) == argsTag)\n    );\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n    return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 8-9 which returns 'object' for typed array and other constructors.\n    var tag = isObject(value) ? objectToString.call(value) : \"\";\n    return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n    return (\n        typeof value == \"number\" &&\n        value > -1 &&\n        value % 1 == 0 &&\n        value <= MAX_SAFE_INTEGER\n    );\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n    var type = typeof value;\n    return !!value && (type == \"object\" || type == \"function\");\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n    return !!value && typeof value == \"object\";\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n    return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n    return false;\n}\n\nmodule.exports = cloneDeep;\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"dot-object\":{\"package.json\":function(require,exports){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// ../../.1.3.1.o1og0g.wvr4q++os+web.browser+web.cordova/npm/node_modules/dot-object/package.json                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nexports.name = \"dot-object\";\nexports.version = \"1.5.4\";\nexports.main = \"index\";\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/cultofcoders_grapher/node_modules/dot-object/index.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\"use strict\";\n\nfunction _process(v, mod) {\n    var i;\n    var r;\n\n    if (typeof mod === \"function\") {\n        r = mod(v);\n        if (r !== undefined) {\n            v = r;\n        }\n    } else if (Array.isArray(mod)) {\n        for (i = 0; i < mod.length; i++) {\n            r = mod[i](v);\n            if (r !== undefined) {\n                v = r;\n            }\n        }\n    }\n\n    return v;\n}\n\nfunction parseKey(key, val) {\n    // detect negative index notation\n    if (key[0] === \"-\" && Array.isArray(val) && /^-\\d+$/.test(key)) {\n        return val.length + parseInt(key, 10);\n    }\n    return key;\n}\n\nfunction isIndex(k) {\n    return /^\\d+/.test(k);\n}\n\nfunction parsePath(path, sep) {\n    if (path.indexOf(\"[\") >= 0) {\n        path = path.replace(/\\[/g, \".\").replace(/]/g, \"\");\n    }\n    return path.split(sep);\n}\n\nfunction DotObject(seperator, override, useArray) {\n    if (!(this instanceof DotObject)) {\n        return new DotObject(seperator, override, useArray);\n    }\n\n    if (typeof seperator === \"undefined\") seperator = \".\";\n    if (typeof override === \"undefined\") override = false;\n    if (typeof useArray === \"undefined\") useArray = true;\n    this.seperator = seperator;\n    this.override = override;\n    this.useArray = useArray;\n\n    // contains touched arrays\n    this.cleanup = [];\n}\n\nvar dotDefault = new DotObject(\".\", false, true);\nfunction wrap(method) {\n    return function() {\n        return dotDefault[method].apply(dotDefault, arguments);\n    };\n}\n\nDotObject.prototype._fill = function(a, obj, v, mod) {\n    var k = a.shift();\n\n    if (a.length > 0) {\n        obj[k] = obj[k] || (this.useArray && isIndex(a[0]) ? [] : {});\n\n        if (obj[k] !== Object(obj[k])) {\n            if (this.override) {\n                obj[k] = {};\n            } else {\n                throw new Error(\n                    \"Trying to redefine `\" + k + \"` which is a \" + typeof obj[k]\n                );\n            }\n        }\n\n        this._fill(a, obj[k], v, mod);\n    } else {\n        if (\n            !this.override &&\n            obj[k] === Object(obj[k]) &&\n            Object.keys(obj[k]).length\n        ) {\n            throw new Error(\"Trying to redefine non-empty obj['\" + k + \"']\");\n        }\n\n        obj[k] = _process(v, mod);\n    }\n};\n\n/**\n *\n * Converts an object with dotted-key/value pairs to it's expanded version\n *\n * Optionally transformed by a set of modifiers.\n *\n * Usage:\n *\n *   var row = {\n *     'nr': 200,\n *     'doc.name': '  My Document  '\n *   }\n *\n *   var mods = {\n *     'doc.name': [_s.trim, _s.underscored]\n *   }\n *\n *   dot.object(row, mods)\n *\n * @param {Object} obj\n * @param {Object} mods\n */\nDotObject.prototype.object = function(obj, mods) {\n    var self = this;\n\n    Object.keys(obj).forEach(function(k) {\n        var mod = mods === undefined ? null : mods[k];\n        // normalize array notation.\n        var ok = parsePath(k, self.seperator).join(self.seperator);\n\n        if (ok.indexOf(self.seperator) !== -1) {\n            self._fill(ok.split(self.seperator), obj, obj[k], mod);\n            delete obj[k];\n        } else if (self.override) {\n            obj[k] = _process(obj[k], mod);\n        }\n    });\n\n    return obj;\n};\n\n/**\n * @param {String} path dotted path\n * @param {String} v value to be set\n * @param {Object} obj object to be modified\n * @param {Function|Array} mod optional modifier\n */\nDotObject.prototype.str = function(path, v, obj, mod) {\n    if (path.indexOf(this.seperator) !== -1) {\n        this._fill(path.split(this.seperator), obj, v, mod);\n    } else if (!obj.hasOwnProperty(path) || this.override) {\n        obj[path] = _process(v, mod);\n    }\n\n    return obj;\n};\n\n/**\n *\n * Pick a value from an object using dot notation.\n *\n * Optionally remove the value\n *\n * @param {String} path\n * @param {Object} obj\n * @param {Boolean} remove\n */\nDotObject.prototype.pick = function(path, obj, remove) {\n    var i;\n    var keys;\n    var val;\n    var key;\n    var cp;\n\n    keys = parsePath(path, this.seperator);\n    for (i = 0; i < keys.length; i++) {\n        key = parseKey(keys[i], obj);\n        if (obj && typeof obj === \"object\" && key in obj) {\n            if (i === keys.length - 1) {\n                if (remove) {\n                    val = obj[key];\n                    delete obj[key];\n                    if (Array.isArray(obj)) {\n                        cp = keys.slice(0, -1).join(\".\");\n                        if (this.cleanup.indexOf(cp) === -1) {\n                            this.cleanup.push(cp);\n                        }\n                    }\n                    return val;\n                } else {\n                    return obj[key];\n                }\n            } else {\n                obj = obj[key];\n            }\n        } else {\n            return undefined;\n        }\n    }\n    if (remove && Array.isArray(obj)) {\n        obj = obj.filter(function(n) {\n            return n !== undefined;\n        });\n    }\n    return obj;\n};\n\n/**\n *\n * Remove value from an object using dot notation.\n *\n * @param {String} path\n * @param {Object} obj\n * @return {Mixed} The removed value\n */\nDotObject.prototype.remove = function(path, obj) {\n    var i;\n\n    this.cleanup = [];\n    if (Array.isArray(path)) {\n        for (i = 0; i < path.length; i++) {\n            this.pick(path[i], obj, true);\n        }\n        this._cleanup(obj);\n        return obj;\n    } else {\n        return this.pick(path, obj, true);\n    }\n};\n\nDotObject.prototype._cleanup = function(obj) {\n    var ret;\n    var i;\n    var keys;\n    var root;\n    if (this.cleanup.length) {\n        for (i = 0; i < this.cleanup.length; i++) {\n            keys = this.cleanup[i].split(\".\");\n            root = keys.splice(0, -1).join(\".\");\n            ret = root ? this.pick(root, obj) : obj;\n            ret = ret[keys[0]].filter(function(v) {\n                return v !== undefined;\n            });\n            this.set(this.cleanup[i], ret, obj);\n        }\n        this.cleanup = [];\n    }\n};\n\n// alias method\nDotObject.prototype.del = DotObject.prototype.remove;\n\n/**\n *\n * Move a property from one place to the other.\n *\n * If the source path does not exist (undefined)\n * the target property will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.move = function(source, target, obj, mods, merge) {\n    if (typeof mods === \"function\" || Array.isArray(mods)) {\n        this.set(\n            target,\n            _process(this.pick(source, obj, true), mods),\n            obj,\n            merge\n        );\n    } else {\n        merge = mods;\n        this.set(target, this.pick(source, obj, true), obj, merge);\n    }\n\n    return obj;\n};\n\n/**\n *\n * Transfer a property from one object to another object.\n *\n * If the source path does not exist (undefined)\n * the property on the other object will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj1\n * @param {Object} obj2\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.transfer = function(\n    source,\n    target,\n    obj1,\n    obj2,\n    mods,\n    merge\n) {\n    if (typeof mods === \"function\" || Array.isArray(mods)) {\n        this.set(\n            target,\n            _process(this.pick(source, obj1, true), mods),\n            obj2,\n            merge\n        );\n    } else {\n        merge = mods;\n        this.set(target, this.pick(source, obj1, true), obj2, merge);\n    }\n\n    return obj2;\n};\n\n/**\n *\n * Copy a property from one object to another object.\n *\n * If the source path does not exist (undefined)\n * the property on the other object will not be set.\n *\n * @param {String} source\n * @param {String} target\n * @param {Object} obj1\n * @param {Object} obj2\n * @param {Function|Array} mods\n * @param {Boolean} merge\n */\nDotObject.prototype.copy = function(source, target, obj1, obj2, mods, merge) {\n    if (typeof mods === \"function\" || Array.isArray(mods)) {\n        this.set(\n            target,\n            _process(\n                // clone what is picked\n                JSON.parse(JSON.stringify(this.pick(source, obj1, false))),\n                mods\n            ),\n            obj2,\n            merge\n        );\n    } else {\n        merge = mods;\n        this.set(target, this.pick(source, obj1, false), obj2, merge);\n    }\n\n    return obj2;\n};\n\nfunction isObject(val) {\n    return Object.prototype.toString.call(val) === \"[object Object]\";\n}\n\n/**\n *\n * Set a property on an object using dot notation.\n *\n * @param {String} path\n * @param {Mixed} val\n * @param {Object} obj\n * @param {Boolean} merge\n */\nDotObject.prototype.set = function(path, val, obj, merge) {\n    var i;\n    var k;\n    var keys;\n    var key;\n\n    // Do not operate if the value is undefined.\n    if (typeof val === \"undefined\") {\n        return obj;\n    }\n    keys = parsePath(path, this.seperator);\n\n    for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        if (i === keys.length - 1) {\n            if (merge && isObject(val) && isObject(obj[key])) {\n                for (k in val) {\n                    if (val.hasOwnProperty(k)) {\n                        obj[key][k] = val[k];\n                    }\n                }\n            } else if (merge && Array.isArray(obj[key]) && Array.isArray(val)) {\n                for (var j = 0; j < val.length; j++) {\n                    obj[keys[i]].push(val[j]);\n                }\n            } else {\n                obj[key] = val;\n            }\n        } else if (\n            // force the value to be an object\n            !obj.hasOwnProperty(key) ||\n            (!isObject(obj[key]) && !Array.isArray(obj[key]))\n        ) {\n            // initialize as array if next key is numeric\n            if (/^\\d+$/.test(keys[i + 1])) {\n                obj[key] = [];\n            } else {\n                obj[key] = {};\n            }\n        }\n        obj = obj[key];\n    }\n    return obj;\n};\n\n/**\n *\n * Transform an object\n *\n * Usage:\n *\n *   var obj = {\n *     \"id\": 1,\n *    \"some\": {\n *      \"thing\": \"else\"\n *    }\n *   }\n *\n *   var transform = {\n *     \"id\": \"nr\",\n *    \"some.thing\": \"name\"\n *   }\n *\n *   var tgt = dot.transform(transform, obj)\n *\n * @param {Object} recipe Transform recipe\n * @param {Object} obj Object to be transformed\n * @param {Array} mods modifiers for the target\n */\nDotObject.prototype.transform = function(recipe, obj, tgt) {\n    obj = obj || {};\n    tgt = tgt || {};\n    Object.keys(recipe).forEach(\n        function(key) {\n            this.set(recipe[key], this.pick(key, obj), tgt);\n        }.bind(this)\n    );\n    return tgt;\n};\n\n/**\n *\n * Convert object to dotted-key/value pair\n *\n * Usage:\n *\n *   var tgt = dot.dot(obj)\n *\n *   or\n *\n *   var tgt = {}\n *   dot.dot(obj, tgt)\n *\n * @param {Object} obj source object\n * @param {Object} tgt target object\n * @param {Array} path path array (internal)\n */\nDotObject.prototype.dot = function(obj, tgt, path) {\n    tgt = tgt || {};\n    path = path || [];\n    Object.keys(obj).forEach(\n        function(key) {\n            if (\n                (Object(obj[key]) === obj[key] &&\n                    Object.prototype.toString.call(obj[key]) ===\n                        \"[object Object]\") ||\n                Object.prototype.toString.call(obj[key]) === \"[object Array]\"\n            ) {\n                return this.dot(obj[key], tgt, path.concat(key));\n            } else {\n                tgt[path.concat(key).join(this.seperator)] = obj[key];\n            }\n        }.bind(this)\n    );\n    return tgt;\n};\n\nDotObject.pick = wrap(\"pick\");\nDotObject.move = wrap(\"move\");\nDotObject.transfer = wrap(\"transfer\");\nDotObject.transform = wrap(\"transform\");\nDotObject.copy = wrap(\"copy\");\nDotObject.object = wrap(\"object\");\nDotObject.str = wrap(\"str\");\nDotObject.set = wrap(\"set\");\nDotObject.del = DotObject.remove = wrap(\"remove\");\nDotObject.dot = wrap(\"dot\");\n[\"override\", \"overwrite\"].forEach(function(prop) {\n    Object.defineProperty(DotObject, prop, {\n        get: function() {\n            return dotDefault.override;\n        },\n        set: function(val) {\n            dotDefault.override = !!val;\n        }\n    });\n});\n\nObject.defineProperty(DotObject, \"useArray\", {\n    get: function() {\n        return dotDefault.useArray;\n    },\n    set: function(val) {\n        dotDefault.useArray = val;\n    }\n});\n\nDotObject._process = _process;\n\nmodule.exports = DotObject;\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"sift\":{\"package.json\":function(require,exports){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// ../../.1.3.1.o1og0g.wvr4q++os+web.browser+web.cordova/npm/node_modules/sift/package.json                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nexports.name = \"sift\";\nexports.version = \"3.2.6\";\nexports.main = \"./sift.js\";\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"sift.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/cultofcoders_grapher/node_modules/sift/sift.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*\n * Sift 3.x\n *\n * Copryright 2015, Craig Condon\n * Licensed under MIT\n *\n * Filter JavaScript objects with mongodb queries\n */\n\n(function() {\n    \"use strict\";\n\n    /**\n     */\n\n    function isFunction(value) {\n        return typeof value === \"function\";\n    }\n\n    /**\n     */\n\n    function isArray(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\";\n    }\n\n    /**\n     */\n\n    function comparable(value) {\n        if (value instanceof Date) {\n            return value.getTime();\n        } else if (value instanceof Array) {\n            return value.map(comparable);\n        } else {\n            return value;\n        }\n    }\n\n    function get(obj, key) {\n        if (obj.get) return obj.get(key);\n        return obj[key];\n    }\n\n    /**\n     */\n\n    function or(validator) {\n        return function(a, b) {\n            if (!isArray(b) || !b.length) return validator(a, b);\n            for (var i = 0, n = b.length; i < n; i++)\n                if (validator(a, get(b, i))) return true;\n            return false;\n        };\n    }\n\n    /**\n     */\n\n    function and(validator) {\n        return function(a, b) {\n            if (!isArray(b) || !b.length) return validator(a, b);\n            for (var i = 0, n = b.length; i < n; i++)\n                if (!validator(a, get(b, i))) return false;\n            return true;\n        };\n    }\n\n    function validate(validator, b) {\n        return validator.v(validator.a, b);\n    }\n\n    var operator = {\n        /**\n         */\n\n        $eq: or(function(a, b) {\n            return a(b);\n        }),\n\n        /**\n         */\n\n        $ne: and(function(a, b) {\n            return !a(b);\n        }),\n\n        /**\n         */\n\n        $or: function(a, b) {\n            for (var i = 0, n = a.length; i < n; i++)\n                if (validate(get(a, i), b)) return true;\n            return false;\n        },\n\n        /**\n         */\n\n        $gt: or(function(a, b) {\n            return sift.compare(comparable(b), a) > 0;\n        }),\n\n        /**\n         */\n\n        $gte: or(function(a, b) {\n            return sift.compare(comparable(b), a) >= 0;\n        }),\n\n        /**\n         */\n\n        $lt: or(function(a, b) {\n            return sift.compare(comparable(b), a) < 0;\n        }),\n\n        /**\n         */\n\n        $lte: or(function(a, b) {\n            return sift.compare(comparable(b), a) <= 0;\n        }),\n\n        /**\n         */\n\n        $mod: or(function(a, b) {\n            return b % a[0] == a[1];\n        }),\n\n        /**\n         */\n\n        $in: function(a, b) {\n            if (b instanceof Array) {\n                for (var i = b.length; i--; ) {\n                    if (~a.indexOf(comparable(get(b, i)))) return true;\n                }\n            } else {\n                return !!~a.indexOf(comparable(b));\n            }\n\n            return false;\n        },\n\n        /**\n         */\n\n        $nin: function(a, b) {\n            return !operator.$in(a, b);\n        },\n\n        /**\n         */\n\n        $not: function(a, b) {\n            return !validate(a, b);\n        },\n\n        /**\n         */\n\n        $type: function(a, b) {\n            return b != void 0 ? b instanceof a || b.constructor == a : false;\n        },\n\n        /**\n         */\n\n        $all: function(a, b) {\n            if (!b) b = [];\n            for (var i = a.length; i--; ) {\n                if (!~comparable(b).indexOf(get(a, i))) return false;\n            }\n            return true;\n        },\n\n        /**\n         */\n\n        $size: function(a, b) {\n            return b ? a === b.length : false;\n        },\n\n        /**\n         */\n\n        $nor: function(a, b) {\n            // todo - this suffice? return !operator.$in(a)\n            for (var i = 0, n = a.length; i < n; i++)\n                if (validate(get(a, i), b)) return false;\n            return true;\n        },\n\n        /**\n         */\n\n        $and: function(a, b) {\n            for (var i = 0, n = a.length; i < n; i++)\n                if (!validate(get(a, i), b)) return false;\n            return true;\n        },\n\n        /**\n         */\n\n        $regex: or(function(a, b) {\n            return typeof b === \"string\" && a.test(b);\n        }),\n\n        /**\n         */\n\n        $where: function(a, b) {\n            return a.call(b, b);\n        },\n\n        /**\n         */\n\n        $elemMatch: function(a, b) {\n            if (isArray(b)) return !!~search(b, a);\n            return validate(a, b);\n        },\n\n        /**\n         */\n\n        $exists: function(a, b) {\n            return (b != void 0) === a;\n        }\n    };\n\n    /**\n     */\n\n    var prepare = {\n        /**\n         */\n\n        $eq: function(a) {\n            if (a instanceof RegExp) {\n                return function(b) {\n                    return typeof b === \"string\" && a.test(b);\n                };\n            } else if (a instanceof Function) {\n                return a;\n            } else if (isArray(a) && !a.length) {\n                // Special case of a == []\n                return function(b) {\n                    return isArray(b) && !b.length;\n                };\n            } else if (a === null) {\n                return function(b) {\n                    //will match both null and undefined\n                    return b == null;\n                };\n            }\n\n            return function(b) {\n                return sift.compare(comparable(b), a) === 0;\n            };\n        },\n\n        /**\n         */\n\n        $ne: function(a) {\n            return prepare.$eq(a);\n        },\n\n        /**\n         */\n\n        $and: function(a) {\n            return a.map(parse);\n        },\n\n        /**\n         */\n\n        $or: function(a) {\n            return a.map(parse);\n        },\n\n        /**\n         */\n\n        $nor: function(a) {\n            return a.map(parse);\n        },\n\n        /**\n         */\n\n        $not: function(a) {\n            return parse(a);\n        },\n\n        /**\n         */\n\n        $regex: function(a, query) {\n            return new RegExp(a, query.$options);\n        },\n\n        /**\n         */\n\n        $where: function(a) {\n            return typeof a === \"string\"\n                ? new Function(\"obj\", \"return \" + a)\n                : a;\n        },\n\n        /**\n         */\n\n        $elemMatch: function(a) {\n            return parse(a);\n        },\n\n        /**\n         */\n\n        $exists: function(a) {\n            return !!a;\n        }\n    };\n\n    /**\n     */\n\n    function search(array, validator) {\n        for (var i = 0; i < array.length; i++) {\n            if (validate(validator, get(array, i))) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     */\n\n    function createValidator(a, validate) {\n        return { a: a, v: validate };\n    }\n\n    /**\n     */\n\n    function nestedValidator(a, b) {\n        var values = [];\n        findValues(b, a.k, 0, values);\n\n        if (values.length === 1) {\n            return validate(a.nv, values[0]);\n        }\n\n        return !!~search(values, a.nv);\n    }\n\n    /**\n     */\n\n    function findValues(current, keypath, index, values) {\n        if (index === keypath.length || current == void 0) {\n            values.push(current);\n            return;\n        }\n\n        var k = get(keypath, index);\n\n        // ensure that if current is an array, that the current key\n        // is NOT an array index. This sort of thing needs to work:\n        // sift({'foo.0':42}, [{foo: [42]}]);\n        if (isArray(current) && isNaN(Number(k))) {\n            for (var i = 0, n = current.length; i < n; i++) {\n                findValues(get(current, i), keypath, index, values);\n            }\n        } else {\n            findValues(get(current, k), keypath, index + 1, values);\n        }\n    }\n\n    /**\n     */\n\n    function createNestedValidator(keypath, a) {\n        return { a: { k: keypath, nv: a }, v: nestedValidator };\n    }\n\n    /**\n     * flatten the query\n     */\n\n    function parse(query) {\n        query = comparable(query);\n\n        if (\n            !query ||\n            (query.constructor.toString() !== \"Object\" &&\n                query.constructor\n                    .toString()\n                    .replace(/\\n/g, \"\")\n                    .replace(/ /g, \"\") !== \"functionObject(){[nativecode]}\")\n        ) {\n            // cross browser support\n            query = { $eq: query };\n        }\n\n        var validators = [];\n\n        for (var key in query) {\n            var a = query[key];\n\n            if (key === \"$options\") continue;\n\n            if (operator[key]) {\n                if (prepare[key]) a = prepare[key](a, query);\n                validators.push(createValidator(comparable(a), operator[key]));\n            } else {\n                if (key.charCodeAt(0) === 36) {\n                    throw new Error(\"Unknown operation \" + key);\n                }\n\n                validators.push(\n                    createNestedValidator(key.split(\".\"), parse(a))\n                );\n            }\n        }\n\n        return validators.length === 1\n            ? validators[0]\n            : createValidator(validators, operator.$and);\n    }\n\n    /**\n     */\n\n    function createRootValidator(query, getter) {\n        var validator = parse(query);\n        if (getter) {\n            validator = {\n                a: validator,\n                v: function(a, b) {\n                    return validate(a, getter(b));\n                }\n            };\n        }\n        return validator;\n    }\n\n    /**\n     */\n\n    function sift(query, array, getter) {\n        if (isFunction(array)) {\n            getter = array;\n            array = void 0;\n        }\n\n        var validator = createRootValidator(query, getter);\n\n        function filter(b) {\n            return validate(validator, b);\n        }\n\n        if (array) {\n            return array.filter(filter);\n        }\n\n        return filter;\n    }\n\n    /**\n     */\n\n    sift.use = function(plugin) {\n        if (isFunction(plugin)) return plugin(sift);\n        for (var key in plugin) {\n            if (key.charCodeAt(0) === 36) operator[key] = plugin[key];\n        }\n    };\n\n    /**\n     */\n\n    sift.indexOf = function(query, array, getter) {\n        return search(array, createRootValidator(query, getter));\n    };\n\n    /**\n     */\n\n    sift.compare = function(a, b) {\n        if (a === b) return 0;\n        if (typeof a === typeof b) {\n            if (a > b) return 1;\n            if (a < b) return -1;\n        }\n    };\n\n    /* istanbul ignore next */\n    if (\n        typeof module !== \"undefined\" &&\n        typeof module.exports !== \"undefined\"\n    ) {\n        module.exports = sift;\n    }\n\n    if (typeof window !== \"undefined\") {\n        window.sift = sift;\n    }\n})();\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"deep-extend\":{\"package.json\":function(require,exports){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// ../../.1.3.1.o1og0g.wvr4q++os+web.browser+web.cordova/npm/node_modules/deep-extend/package.json                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nexports.name = \"deep-extend\";\nexports.version = \"0.5.0\";\nexports.main = \"lib/deep-extend.js\";\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"deep-extend.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/cultofcoders_grapher/node_modules/deep-extend/lib/deep-extend.js                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*!\n * @description Recursive object extending\n * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n * @license MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2013-2015 Viacheslav Lotsmanov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n\"use strict\";\n\nfunction isSpecificValue(val) {\n    return val instanceof Buffer || val instanceof Date || val instanceof RegExp\n        ? true\n        : false;\n}\n\nfunction cloneSpecificValue(val) {\n    if (val instanceof Buffer) {\n        var x = new Buffer(val.length);\n        val.copy(x);\n        return x;\n    } else if (val instanceof Date) {\n        return new Date(val.getTime());\n    } else if (val instanceof RegExp) {\n        return new RegExp(val);\n    } else {\n        throw new Error(\"Unexpected situation\");\n    }\n}\n\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n    var clone = [];\n    arr.forEach(function(item, index) {\n        if (typeof item === \"object\" && item !== null) {\n            if (Array.isArray(item)) {\n                clone[index] = deepCloneArray(item);\n            } else if (isSpecificValue(item)) {\n                clone[index] = cloneSpecificValue(item);\n            } else {\n                clone[index] = deepExtend({}, item);\n            }\n        } else {\n            clone[index] = item;\n        }\n    });\n    return clone;\n}\n\n/**\n * Extening object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nvar deepExtend = (module.exports = function(/*obj_1, [obj_2], [obj_N]*/) {\n    if (arguments.length < 1 || typeof arguments[0] !== \"object\") {\n        return false;\n    }\n\n    if (arguments.length < 2) {\n        return arguments[0];\n    }\n\n    var target = arguments[0];\n\n    // convert arguments to array and cut off target object\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    var val, src, clone;\n\n    args.forEach(function(obj) {\n        // skip argument if isn't an object, is null, or is an array\n        if (typeof obj !== \"object\" || obj === null || Array.isArray(obj)) {\n            return;\n        }\n\n        Object.keys(obj).forEach(function(key) {\n            src = target[key]; // source value\n            val = obj[key]; // new value\n\n            // recursion prevention\n            if (val === target) {\n                return;\n\n                /**\n                 * if new value isn't object then just overwrite by new value\n                 * instead of extending.\n                 */\n            } else if (typeof val !== \"object\" || val === null) {\n                target[key] = val;\n                return;\n\n                // just clone arrays (and recursive clone objects inside)\n            } else if (Array.isArray(val)) {\n                target[key] = deepCloneArray(val);\n                return;\n\n                // custom cloning and overwrite for specific objects\n            } else if (isSpecificValue(val)) {\n                target[key] = cloneSpecificValue(val);\n                return;\n\n                // overwrite by new value if source isn't object or array\n            } else if (\n                typeof src !== \"object\" ||\n                src === null ||\n                Array.isArray(src)\n            ) {\n                target[key] = deepExtend({}, val);\n                return;\n\n                // source value and new value is objects both, extending...\n            } else {\n                target[key] = deepExtend(src, val);\n                return;\n            }\n        });\n    });\n\n    return target;\n});\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nvar exports = require(\"./node_modules/meteor/cultofcoders:grapher/main.server.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['cultofcoders:grapher'] = exports;\n\n})();\n","servePath":"/packages/cultofcoders_grapher.js","sourceMap":{"version":3,"sources":["packages/cultofcoders:grapher/main.server.js","packages/cultofcoders:grapher/lib/aggregate.js","packages/cultofcoders:grapher/lib/compose.js","packages/cultofcoders:grapher/lib/createQuery.js","packages/cultofcoders:grapher/lib/extension.js","packages/cultofcoders:grapher/lib/exposure/exposure.config.schema.js","packages/cultofcoders:grapher/lib/exposure/exposure.js","packages/cultofcoders:grapher/lib/exposure/extension.js","packages/cultofcoders:grapher/lib/exposure/lib/cleanBody.js","packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js","packages/cultofcoders:grapher/lib/exposure/lib/enforceMaxDepth.js","packages/cultofcoders:grapher/lib/exposure/lib/enforceMaxLimit.js","packages/cultofcoders:grapher/lib/exposure/lib/restrictFields.js","packages/cultofcoders:grapher/lib/exposure/lib/restrictLinks.js","packages/cultofcoders:grapher/lib/links/config.schema.js","packages/cultofcoders:grapher/lib/links/constants.js","packages/cultofcoders:grapher/lib/links/extension.js","packages/cultofcoders:grapher/lib/links/linker.js","packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","packages/cultofcoders:grapher/lib/links/linkTypes/base.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkManyMeta.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkOneMeta.js","packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js","packages/cultofcoders:grapher/lib/namedQuery/store.js","packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js","packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js","packages/cultofcoders:grapher/lib/namedQuery/expose/extension.js","packages/cultofcoders:grapher/lib/namedQuery/expose/schema.js","packages/cultofcoders:grapher/lib/namedQuery/expose/lib/mergeDeep.js","packages/cultofcoders:grapher/lib/query/query.base.js","packages/cultofcoders:grapher/lib/query/query.client.js","packages/cultofcoders:grapher/lib/query/query.js","packages/cultofcoders:grapher/lib/query/query.server.js","packages/cultofcoders:grapher/lib/query/counts/collection.js","packages/cultofcoders:grapher/lib/query/counts/constants.js","packages/cultofcoders:grapher/lib/query/counts/countSubscription.js","packages/cultofcoders:grapher/lib/query/counts/createFauxSubscription.js","packages/cultofcoders:grapher/lib/query/counts/genEndpoint.server.js","packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","packages/cultofcoders:grapher/lib/query/hypernova/assembleAggregateResults.js","packages/cultofcoders:grapher/lib/query/hypernova/assembler.js","packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","packages/cultofcoders:grapher/lib/query/hypernova/constants.js","packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js","packages/cultofcoders:grapher/lib/query/hypernova/storeHypernovaResults.js","packages/cultofcoders:grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js","packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js","packages/cultofcoders:grapher/lib/query/lib/applyProps.js","packages/cultofcoders:grapher/lib/query/lib/callWithPromise.js","packages/cultofcoders:grapher/lib/query/lib/createGraph.js","packages/cultofcoders:grapher/lib/query/lib/dotize.js","packages/cultofcoders:grapher/lib/query/lib/intersectDeep.js","packages/cultofcoders:grapher/lib/query/lib/prepareForDelivery.js","packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js","packages/cultofcoders:grapher/lib/query/lib/recursiveCompose.js","packages/cultofcoders:grapher/lib/query/lib/recursiveFetch.js","packages/cultofcoders:grapher/lib/query/nodes/collectionNode.js","packages/cultofcoders:grapher/lib/query/nodes/fieldNode.js","packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js","packages/cultofcoders:grapher/lib/query/reducers/extension.js","packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js"],"names":["module","export","NamedQueryStore","LinkConstants","watch","require","default","v","exports","createQuery","Exposure","MemoryResultCacher","BaseResultCacher","compose","Mongo","Collection","prototype","aggregate","pipelines","options","coll","rawCollection","Meteor","wrapAsync","deepExtend","exportDefault","args","Query","NamedQuery","name","body","_","isFunction","createNamedQuery","entryPointName","first","keys","collection","get","Error","isDevelopment","console","warn","params","createNormalQuery","namedQuery","query","add","clone","extend","ExposureDefaults","ExposureSchema","validateBody","createGraph","Match","blocking","method","publication","firewall","Maybe","OneOf","Function","maxLimit","Integer","maxDepth","Boolean","Object","restrictedFields","String","restrictLinks","e","toString","genCountEndpoint","recursiveCompose","hypernova","enforceMaxDepth","enforceMaxLimit","cleanBody","deepClone","restrictFieldsFn","check","globalConfig","setConfig","config","assign","getConfig","restrictFields","constructor","__isExposedForGrapher","__exposure","_name","_validateAndClean","initSecurity","initPublication","initMethod","initCountMethod","initCountPublication","getTransformedBody","userId","processedBody","getBody","call","bind","publishComposite","transformedBody","rootNode","bypassFirewalls","methodBody","unblock","methods","find","$filters","count","getCursor","session","filters","fields","_id","getSession","findOne","undefined","_callFirewall","arguments","length","isArray","forEach","fire","expose","isServer","cleanFilters","cleanOptions","dotize","main","second","object","$options","getFields","each","secondValue","key","value","isObject","convert","fieldExists","ensureFields","pick","sort","deepFilterFieldsArray","deepFilterFieldsObject","special","contains","field","element","i","indexOf","getDepth","node","depth","collectionNodes","max","map","limit","cleanObject","restrictedField","matching","subfield","slice","getLinks","parentNode","restrictedLinks","collectionNode","linkName","remove","exposure","configRestrictLinks","DenormalizeSchema","LinkConfigDefaults","LinkConfigSchema","bypassSchema","type","Where","_collection","metadata","inversedBy","index","unique","autoremove","denormalize","ObjectIncluding","LINK_STORAGE","Linker","addLinks","data","linkConfig","linker","getLinker","hasLink","getLink","objectOrId","linkData","isVirtual","linkStorageField","createLink","LinkMany","LinkManyMeta","LinkOne","LinkOneMeta","smartArguments","dot","mainCollection","_initAutoremove","_initDenormalization","_handleReferenceRemovalForVirtualLinks","_initIndex","oneTypes","strategy","isMany","relatedLinker","getLinkedCollection","isSingle","isMeta","isOneResult","helperClass","_getHelperClass","collectionName","_prepareVirtual","_generateFieldName","startup","_setupVirtualConfig","virtualLinkConfig","cleanedCollectionName","replace","defaultFieldPrefix","after","doc","accessor","fetch","linkedObj","link","unset","_ensureIndex","$in","getIds","ids","item","packageExists","Package","cacheConfig","referenceFieldSuffix","inversedLink","referenceField","cacheField","cache","isDenormalized","isSubBodyDenormalized","cacheBody","cacheBodyFields","bodyFields","omit","difference","createSearchFilters","createOne","createOneVirtual","createOneMeta","createOneMetaVirtual","createMany","createManyVirtual","createManyMeta","createManyMetaVirtual","sift","fieldStorage","metaFilters","pluck","$elemMatch","Link","SmartArgs","linkedCollection","$metaFilters","$meta","searchFilters","appliedFilters","others","result","clean","identifyId","what","saveToDatabase","getId","identifyIds","_validateIds","validIds","join","_virtualAction","action","reversedLink","elementId","insert","set","_ids","union","modifier","$addToSet","$each","update","filter","$pullAll","metadatas","localMetadata","push","extendMetadata","existingMetadata","subfieldUpdate","$set","$pull","subWhat","NamedQueryBase","isNamedQuery","queryName","resolver","subscriptionHandle","isExposed","isResolver","setParams","doValidateParams","validateParams","_validate","validationError","error","newParams","cacher","exposeConfig","validator","CountSubscription","recursiveFetch","prepareForProcess","callWithPromise","Base","subscribe","callback","subscribeCount","_counter","unsubscribe","stop","unsubscribeCount","fetchSync","fetchOneSync","callbackOrOptions","_fetchStatic","_fetchReactive","fetchOne","err","res","getCountSync","getCount","$body","intersectDeep","allowSkip","skip","NamedQueryClient","NamedQueryServer","context","_performSecurityChecks","_fetchResolverData","doEmbodimentIfItApplies","cacheId","generateQueryId","countCursor","getCursorForCounting","cacheResults","resolve","fn","self","storage","getAll","EJSON","stringify","fetchData","cloneDeep","DEFAULT_TTL","store","cacheData","storeData","ttl","setTimeout","ExposeSchema","ExposeDefaults","mergeDeep","_initNormalQuery","_initMethod","_initPublication","_initCountMethod","_initCountPublication","embody","_unblockIfNecessary","target","source","QueryBase","isGlobalQuery","QueryClient","QueryServer","COUNTS_COLLECTION_CLIENT","ReactiveVar","Tracker","Counts","createFauxSubscription","accessToken","fauxHandle","arg","equals","lastArgs","token","_markedForUnsubscribe","disconnectComputation","autorun","handleDisconnect","id","status","connected","_markedForResume","isSubscribed","countManager","ready","paramsOrBody","existingSession","publish","request","cursor","added","handle","observeChanges","changed","removed","onStop","AggregateFilters","parentObjects","parent","results","create","uniq","eligibleObjects","storages","arrayOfIds","isValid","cleanObjectForMetaFilters","childCollectionNode","aggregateResults","allResults","metaFiltersTest","parentResult","eligibleAggregateResults","aggregateResult","datas","assembleData","filterAssembledData","containsDottedFields","pipeline","$match","$sort","dataPush","safeField","$group","$push","$slice","$project","SAFE_DOTTED_FIELD_REPLACEMENT","hypernovaInit","applyProps","prepareForDelivery","storeHypernovaResults","userIdToPass","assemble","assembleAggregateResults","buildAggregatePipeline","snapBackDottedFields","aggregateFilters","filteredOptions","explains","aggregationResult","document","restrictOptions","props","applyFields","myParameters","Promise","reject","reason","createNodes","addFieldNode","CollectionNode","FieldNode","ReducerNode","createReducers","specialFields","root","fieldName","addProp","handleDenormalized","subroot","reducer","getReducer","reducerNode","fieldNodes","dotted","fieldNode","snapCache","obj","prefix","Array","newObj","recurse","o","p","isArrayItem","f","isEmptyArray","getFieldName","isEmptyObj","isNumber","isNaN","parseInt","prop","hasOwnProperty","allowedBody","clientBody","allowedBodyDot","clientBodyDot","intersection","build","intersectedField","applyPostFilters","applyPostOptions","removeLinkStorages","storeOneResults","assembleMetadata","applyReducers","cleanReducerLeftovers","Minimongo","snapBackCaches","cloneMetaChildren","applyPostFilter","postFilters","$postFilters","$postOptions","sorter","Sorter","getComparator","start","end","$postFilter","sameLevelResults","removeStorageField","shouldCleanStorage","parentResults","childResult","storeMetadata","parentElement","$metadata","storageItem","isEmpty","snapCaches","snapCachesSingles","shoudStoreLinkStorage","defaultFilterFunction","applyFilterRecursive","isRoot","$filter","applyPagination","_params","_body","children","n","parentObject","nodes","scheduledForDeletion","reducers","reducerNodes","_shouldCleanStorage","_node","hasAddedAnyField","has","split","hasField","getField","hasCollectionNode","hasReducerNode","getReducerNode","getCollectionNode","getName","subLinkName","reduce","reduceFunction","compute","addReducers","reducerConfig","reducerName","cleanNestedFields","parts","shift","handleAddElement","handleAddReducer","handleAddLink","handleAddField","embedReducerWithLink","dots","reducerBody"],"mappings":"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","file":"/packages/cultofcoders_grapher.js","sourcesContent":["import './lib/extension.js';\nimport './lib/aggregate';\nimport './lib/exposure/extension.js';\nimport './lib/links/extension.js';\nimport './lib/query/reducers/extension.js';\nimport './lib/namedQuery/expose/extension.js';\nimport NamedQueryStore from './lib/namedQuery/store';\nimport LinkConstants from './lib/links/constants';\n\nexport {\n    NamedQueryStore,\n    LinkConstants\n}\n\nexport {\n    default as createQuery\n} from './lib/createQuery.js';\n\nexport {\n    default as Exposure\n} from './lib/exposure/exposure.js';\n\nexport {\n    default as MemoryResultCacher\n} from './lib/namedQuery/cache/MemoryResultCacher';\n\nexport {\n    default as BaseResultCacher\n} from './lib/namedQuery/cache/BaseResultCacher';\n\nexport {\n    default as compose\n} from './lib/compose';","Mongo.Collection.prototype.aggregate = function(pipelines, options) {\n    const coll = this.rawCollection();\n\n    return Meteor.wrapAsync(coll.aggregate, coll)(pipelines, options);\n};\n","import deepExtend from 'deep-extend';\n\nexport default function (...args) {\n    return deepExtend({}, ...args);\n}","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n/**\n * This is a polymorphic function, it allows you to create a query as an object\n * or it also allows you to re-use an existing query if it's a named one\n *\n * @param args\n * @returns {*}\n */\nexport default (...args) => {\n    if (typeof args[0] === 'string') {\n        let [name, body, options] = args;\n        options = options || {};\n\n        // It's a resolver query\n        if (_.isFunction(body)) {\n            return createNamedQuery(name, null, body, options);\n        }\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            throw new Meteor.Error('invalid-name', `We could not find any collection with the name \"${entryPointName}\". Make sure it is imported prior to using this`)\n        }\n\n        return createNamedQuery(name, collection, body[entryPointName], options);\n    } else {\n        // Query Creation, it can have an endpoint as collection or as a NamedQuery\n        let [body, options] = args;\n        options = options || {};\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\n                console.warn(`You are creating a query with the entry point \"${entryPointName}\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.`)\n            }\n\n            return createNamedQuery(entryPointName, null, {}, {params: body[entryPointName]});\n        } else {\n            return createNormalQuery(collection, body[entryPointName], options);\n        }\n    }\n}\n\nfunction createNamedQuery(name, collection, body, options = {}) {\n    // if it exists already, we re-use it\n    const namedQuery = NamedQueryStore.get(name);\n    let query;\n\n    if (!namedQuery) {\n        query = new NamedQuery(name, collection, body, options);\n        NamedQueryStore.add(name, query);\n    } else {\n        query = namedQuery.clone(options.params);\n    }\n\n    return query;\n}\n\nfunction createNormalQuery(collection, body, options)  {\n    return new Query(collection, body, options);\n}\n","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n_.extend(Mongo.Collection.prototype, {\n    createQuery(...args) {\n        if (typeof args[0] === 'string') {\n            //NamedQuery\n            const [name, body, options] = args;\n            const query = new NamedQuery(name, this, body, options);\n            NamedQueryStore.add(name, query);\n\n            return query;\n        } else {\n            const [body, options] = args;\n\n            return new Query(this, body, options);\n        }\n    }\n});","import createGraph from '../query/lib/createGraph.js';\nimport {Match} from 'meteor/check';\n\nexport const ExposureDefaults = {\n    blocking: false,\n    method: true,\n    publication: true,\n};\n\nexport const ExposureSchema = {\n    firewall: Match.Maybe(\n        Match.OneOf(Function, [Function])\n    ),\n    maxLimit: Match.Maybe(Match.Integer),\n    maxDepth: Match.Maybe(Match.Integer),\n    publication: Match.Maybe(Boolean),\n    method: Match.Maybe(Boolean),\n    blocking: Match.Maybe(Boolean),\n    body: Match.Maybe(Object),\n    restrictedFields: Match.Maybe([String]),\n    restrictLinks: Match.Maybe(\n        Match.OneOf(Function, [String])\n    ),\n};\n\nexport function validateBody(collection, body) {\n    try {\n        createGraph(collection, body);\n    } catch (e) {\n        throw new Meteor.Error('invalid-body', 'We could not build a valid graph when trying to create your exposure: ' + e.toString())\n    }\n}","import genCountEndpoint from '../query/counts/genEndpoint.server.js';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveCompose from '../query/lib/recursiveCompose.js';\nimport hypernova from '../query/hypernova/hypernova.js';\nimport {ExposureSchema, ExposureDefaults, validateBody} from './exposure.config.schema.js';\nimport enforceMaxDepth from './lib/enforceMaxDepth.js';\nimport enforceMaxLimit from './lib/enforceMaxLimit.js';\nimport cleanBody from './lib/cleanBody.js';\nimport deepClone from 'lodash.clonedeep';\nimport restrictFieldsFn from './lib/restrictFields.js';\nimport restrictLinks from './lib/restrictLinks.js';\nimport {check} from 'meteor/check';\n\nlet globalConfig = {};\n\nexport default class Exposure {\n    static setConfig(config) {\n        Object.assign(globalConfig, config);\n    }\n\n    static getConfig() {\n        return globalConfig;\n    }\n\n    static restrictFields(...args) {\n        return restrictFieldsFn(...args);\n    }\n\n    constructor(collection, config = {}) {\n        collection.__isExposedForGrapher = true;\n        collection.__exposure = this;\n\n        this.collection = collection;\n        this.name = `exposure_${collection._name}`;\n\n        this.config = config;\n        this._validateAndClean();\n\n        this.initSecurity();\n\n        if (this.config.publication) {\n            this.initPublication();\n        }\n\n        if (this.config.method) {\n            this.initMethod();\n        }\n\n        if (!this.config.method && !this.config.publication) {\n            throw new Meteor.Error('weird', 'If you want to expose your collection you need to specify at least one of [\"method\", \"publication\"] options to true')\n        }\n\n        this.initCountMethod();\n        this.initCountPublication();\n    }\n\n    _validateAndClean() {\n        if (typeof(this.config) === 'function') {\n            const firewall = this.config;\n            this.config = {firewall};\n        }\n\n        this.config = Object.assign({}, ExposureDefaults, Exposure.getConfig(), this.config);\n        check(this.config, ExposureSchema);\n\n        if (this.config.body) {\n            validateBody(this.collection, this.config.body);\n        }\n    }\n\n    /**\n     * Takes the body and intersects it with the exposure body, if it exists.\n     *\n     * @param body\n     * @param userId\n     * @returns {*}\n     */\n    getTransformedBody(body, userId) {\n        if (!this.config.body) {\n            return body;\n        }\n\n        const processedBody = this.getBody(userId);\n\n        if (processedBody === true) {\n            return;\n        }\n\n        return cleanBody(processedBody, body);\n    }\n\n    /**\n     * Gets the exposure body\n     */\n    getBody(userId) {\n        if (!this.config.body) {\n            throw new Meteor.Error('missing-body', 'Cannot get exposure body because it was not defined.');\n        }\n\n        let body;\n        if (_.isFunction(this.config.body)) {\n            body = this.config.body.call(this, userId);\n        } else {\n            body = this.config.body;\n        }\n\n        // it means we allow everything, no need for cloning.\n        if (body === true) {\n            return true;\n        }\n\n        return deepClone(\n            body,\n            userId\n        );\n    }\n\n    /**\n     * Initializing the publication for reactive query fetching\n     */\n    initPublication() {\n        const collection = this.collection;\n        const config = this.config;\n        const getTransformedBody = this.getTransformedBody.bind(this);\n\n        Meteor.publishComposite(this.name, function (body) {\n            let transformedBody = getTransformedBody(body);\n\n            const rootNode = createGraph(collection, transformedBody);\n\n            enforceMaxDepth(rootNode, config.maxDepth);\n            restrictLinks(rootNode, this.userId);\n\n            return recursiveCompose(rootNode, this.userId, {\n                bypassFirewalls: !!config.body\n            });\n        });\n    }\n\n    /**\n     * Initializez the method to retrieve the data via Meteor.call\n     */\n    initMethod() {\n        const collection = this.collection;\n        const config = this.config;\n        const getTransformedBody = this.getTransformedBody.bind(this);\n\n        const methodBody = function(body) {\n            if (!config.blocking) {\n                this.unblock();\n            }\n\n            let transformedBody = getTransformedBody(body);\n\n            const rootNode = createGraph(collection, transformedBody);\n\n            enforceMaxDepth(rootNode, config.maxDepth);\n            restrictLinks(rootNode, this.userId);\n\n            // if there is no exposure body defined, then we need to apply firewalls\n            return hypernova(rootNode, this.userId, {\n                bypassFirewalls: !!config.body\n            });\n        };\n\n        Meteor.methods({\n            [this.name]: methodBody\n        });\n    }\n\n    /**\n     * Initializes the method to retrieve the count of the data via Meteor.call\n     * @returns {*}\n     */\n    initCountMethod() {\n        const collection = this.collection;\n\n        Meteor.methods({\n            [this.name + '.count'](body) {\n                this.unblock();\n\n                return collection.find(body.$filters || {}, {}, this.userId).count();\n            }\n        })\n    }\n\n    /**\n     * Initializes the reactive endpoint to retrieve the count of the data.\n     */\n    initCountPublication() {\n        const collection = this.collection;\n\n        genCountEndpoint(this.name, {\n            getCursor(session) {\n                return collection.find(session.filters, {\n                    fields: {_id: 1},\n                }, this.userId);\n            },\n\n            getSession(body) {\n                return { filters: body.$filters || {} };\n            },\n        });\n    }\n\n    /**\n     * Initializes security enforcement\n     * THINK: Maybe instead of overriding .find, I could store this data of security inside the collection object.\n     */\n    initSecurity() {\n        const collection = this.collection;\n        const {firewall, maxLimit, restrictedFields} = this.config;\n        const find = collection.find.bind(collection);\n        const findOne = collection.findOne.bind(collection);\n\n        collection.firewall = (filters, options, userId) => {\n            if (userId !== undefined) {\n                this._callFirewall({collection: collection}, filters, options, userId);\n\n                enforceMaxLimit(options, maxLimit);\n\n                if (restrictedFields) {\n                    Exposure.restrictFields(filters, options, restrictedFields);\n                }\n            }\n        };\n\n        collection.find = function (filters, options = {}, userId = undefined) {\n            if (arguments.length == 0) {\n                filters = {};\n            }\n\n            // If filters is undefined it should return an empty item\n            if (arguments.length > 0 && filters === undefined) {\n                return find(undefined, options);\n            }\n\n            collection.firewall(filters, options, userId);\n\n            return find(filters, options);\n        };\n\n        collection.findOne = function (filters, options = {}, userId = undefined) {\n            // If filters is undefined it should return an empty item\n            if (arguments.length > 0 && filters === undefined) {\n                return null;\n            }\n\n            if (typeof(filters) === 'string') {\n                filters = {_id: filters};\n            }\n\n            collection.firewall(filters, options, userId);\n\n            return findOne(filters, options);\n        }\n    }\n\n    /**\n     * @private\n     */\n    _callFirewall(...args) {\n        const {firewall} = this.config;\n        if (!firewall) {\n            return;\n        }\n\n        if (_.isArray(firewall)) {\n            firewall.forEach(fire => {\n                fire.call(...args);\n            })\n        } else {\n            firewall.call(...args);\n        }\n    }\n};\n","import Exposure from './exposure.js';\n\n_.extend(Mongo.Collection.prototype, {\n    expose(config) {\n        if (!Meteor.isServer) {\n            throw new Meteor.Error('not-allowed', `You can only expose a collection server side. ${this._name}`);\n        }\n\n        new Exposure(this, config);\n    }\n});","import deepClone from 'lodash.clonedeep';\nimport {cleanFilters, cleanOptions} from './cleanSelectors';\nimport dotize from '../../query/lib/dotize';\n\n/**\n * Deep Inter Computation\n */\nexport default function cleanBody(main, second, ...args) {\n    let object = {};\n\n    if (second.$filters || second.$options) {\n        const fields = getFields(main);\n\n        cleanFilters(second.$filters, fields);\n        cleanOptions(second.$options, fields);\n    }\n\n    _.each(second, (secondValue, key) => {\n        if (key === '$filters' || key === '$options') {\n            object[key] = secondValue;\n            return;\n        }\n\n        let value = main[key];\n\n        if (value === undefined) {\n            return;\n        }\n\n        // if the main value is a function, we run it.\n        if (_.isFunction(value)) {\n            value = value.call(null, ...args);\n        }\n\n        // if the main value is undefined or false, we skip the merge\n        if (value === undefined || value === false) {\n            return;\n        }\n\n        // we treat this specially, if the value is true\n        if (value === true) {\n            object[key] = _.isObject(secondValue) ? deepClone(secondValue) : value;\n            return;\n        }\n\n        // if the main value is an object\n        if (_.isObject(value)) {\n            if (_.isObject(secondValue)) {\n                // if the second one is an object as well we run recursively run the intersection\n                object[key] = cleanBody(value, secondValue, ...args);\n            }\n            // if it is not, then we will ignore it, because it won't make sense.\n            // to merge {a: 1} with 1.\n\n            return;\n        }\n\n        // if the main value is not an object, it should be a truthy value like 1\n        if (_.isObject(secondValue)) {\n            // if the second value is an object, then we will keep it.\n            // this won't cause problem with deep nesting because\n            // when you specify links you will have the main value as an object, otherwise it will fail\n            // this is used for things like when you have a hash object like profile with multiple nesting fields, you can allow the client to specify only what he needs\n\n            object[key] = deepClone(secondValue);\n        } else {\n            // if the second value is not an object, we just store the first value\n            object[key] = value;\n        }\n    });\n\n    return object;\n}\n\nfunction getFields(body) {\n    return _.keys(dotize.convert(body));\n}","export function cleanOptions(options, ensureFields) {\n    if (!options) {\n        return;\n    }\n\n    if (options.fields) {\n        options.fields = _.pick(options.fields, ...ensureFields);\n    }\n\n    if (options.sort) {\n        options.sort = _.pick(options.sort, ...ensureFields);\n    }\n}\n\nconst deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\nconst special = [...deepFilterFieldsArray, ...deepFilterFieldsObject];\n\nexport function cleanFilters(filters, ensureFields) {\n    if (!filters) {\n        return;\n    }\n\n    _.each(filters, (value, key) => {\n        if (!_.contains(special, key)) {\n            if (!fieldExists(ensureFields, key)) {\n                delete filters[key];\n            }\n        }\n    });\n\n    deepFilterFieldsArray.forEach(field => {\n        if (filters[field]) {\n            filters[field].forEach(element => cleanFilters(element, ensureFields));\n        }\n    });\n\n    deepFilterFieldsObject.forEach(field => {\n        if (filters[field]) {\n            cleanFilters(filters[field], ensureFields);\n        }\n    });\n}\n\n/**\n * This will check if a field exists in a set of fields\n * If fields contains [\"profile\"], then \"profile.something\" will return true\n *\n * @param fields\n * @param key\n * @returns {boolean}\n */\nexport function fieldExists(fields, key) {\n    for (let i = 0; i < fields.length; i++) {\n        if (fields[i] === key || key.indexOf(fields[i] + '.') === 0) {\n            return true;\n        }\n    }\n\n    return false;\n}\n","export default function (node, maxDepth) {\n    if (maxDepth === undefined) {\n        return node;\n    }\n\n    const depth = getDepth(node);\n\n    if (depth > maxDepth) {\n        throw new Meteor.Error('too-deep', 'Your graph request is too deep and it is not allowed.')\n    }\n\n    return node;\n}\n\nexport function getDepth(node) {\n    if (node.collectionNodes.length === 0) {\n        return 1;\n    }\n\n    return 1 + _.max(\n        _.map(node.collectionNodes, getDepth)\n    );\n}","export default function (options, maxLimit) {\n    if (maxLimit === undefined) {\n        return;\n    }\n\n    if (options.limit) {\n        if (options.limit > maxLimit) {\n            options.limit = maxLimit;\n        }\n    } else {\n        options.limit = maxLimit;\n    }\n}","const deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\n\n/**\n * This is used to restrict some fields to some users, by passing the fields as array in the exposure object\n * For example in an user exposure: restrictFields(options, ['services', 'createdAt'])\n *\n * @param filters Object\n * @param options Object\n * @param restrictedFields Array\n */\nexport default function restrictFields(filters, options, restrictedFields) {\n    if (!_.isArray(restrictedFields)) {\n        throw new Meteor.Error('invalid-parameters', 'Please specify an array of restricted fields.');\n    }\n\n    cleanFilters(filters, restrictedFields);\n    cleanOptions(options, restrictedFields)\n}\n\n/**\n * Deep cleans filters\n *\n * @param filters\n * @param restrictedFields\n */\nfunction cleanFilters(filters, restrictedFields) {\n    if (filters) {\n        cleanObject(filters, restrictedFields);\n    }\n\n    deepFilterFieldsArray.forEach(field => {\n        if (filters[field]) {\n            filters[field].forEach(element => cleanFilters(element, restrictedFields));\n        }\n    });\n\n    deepFilterFieldsObject.forEach(field => {\n        if (filters[field]) {\n            cleanFilters(filters[field], restrictedFields);\n        }\n    });\n}\n\n/**\n * Deeply cleans options\n *\n * @param options\n * @param restrictedFields\n */\nfunction cleanOptions(options, restrictedFields) {\n    if (options.fields) {\n        cleanObject(options.fields, restrictedFields);\n\n        if (_.keys(options.fields).length === 0) {\n            _.extend(options.fields, {_id: 1})\n        }\n    } else {\n        options.fields = {_id: 1};\n    }\n\n    if (options.sort) {\n        cleanObject(options.sort, restrictedFields);\n    }\n}\n\n/**\n * Cleans the object (not deeply)\n *\n * @param object\n * @param restrictedFields\n */\nfunction cleanObject(object, restrictedFields) {\n    _.each(object, (value, key) => {\n        restrictedFields.forEach((restrictedField) => {\n            if (matching(restrictedField, key)) {\n                delete object[key];\n            }\n        })\n    });\n}\n\n/**\n * Returns true if field == subfield or if `${field}.` INCLUDED in subfield\n * Example: \"profile\" and \"profile.firstName\" will be a matching field\n * @param field\n * @param subfield\n * @returns {boolean}\n */\nfunction matching(field, subfield) {\n    if (field === subfield) {\n        return true;\n    }\n\n    return subfield.slice(0, field.length + 1) === field + '.';\n}","export default function restrictLinks(parentNode, ...args) {\n    const restrictedLinks = getLinks(parentNode, ...args);\n\n    if (!restrictedLinks || restrictedLinks.length) {\n        return;\n    }\n\n    _.each(parentNode.collectionNodes, collectionNode => {\n        if (_.contains(restrictedLinks, collectionNode.linkName)) {\n            parentNode.remove(collectionNode);\n        }\n    });\n}\n\nexport function getLinks(node, ...args) {\n    if (node.collection && node.collection.__exposure) {\n        const exposure = node.collection.__exposure;\n\n        if (exposure.config.restrictLinks) {\n            const configRestrictLinks = exposure.config.restrictLinks;\n\n            if (_.isArray(configRestrictLinks)) {\n                return configRestrictLinks;\n            }\n\n            return configRestrictLinks(...args);\n        }\n    }\n}","import {Match} from 'meteor/check';\nimport {Mongo} from 'meteor/mongo';\n\nexport const DenormalizeSchema = {\n    field: String,\n    body: Object,\n    bypassSchema: Match.Maybe(Boolean)\n};\n\nexport const LinkConfigDefaults = {\n    type: 'one',\n};\n\nexport const LinkConfigSchema = {\n    type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\n    collection: Match.Maybe(\n        Match.Where(collection => {\n            // We do like this so it works with other types of collections \n            // like FS.Collection\n            return _.isObject(collection) && (\n                collection instanceof Mongo.Collection\n                || \n                !!collection._collection\n            );\n        })\n    ),\n    field: Match.Maybe(String),\n    metadata: Match.Maybe(Boolean),\n    inversedBy: Match.Maybe(String),\n    index: Match.Maybe(Boolean),\n    unique: Match.Maybe(Boolean),\n    autoremove: Match.Maybe(Boolean),\n    denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema)),\n};","export const LINK_STORAGE = '__links';\n","import { Mongo } from 'meteor/mongo';\nimport {LINK_STORAGE} from './constants.js';\nimport Linker from './linker.js';\n\n_.extend(Mongo.Collection.prototype, {\n    /**\n     * The data we add should be valid for config.schema.js\n     */\n    addLinks(data) {\n        if (!this[LINK_STORAGE]) {\n            this[LINK_STORAGE] = {};\n        }\n\n        _.each(data, (linkConfig, linkName) => {\n            if (this[LINK_STORAGE][linkName]) {\n                throw new Meteor.Error(`You cannot add the link with name: ${linkName} because it was already added to ${this._name} collection`)\n            }\n\n            const linker = new Linker(this, linkName, linkConfig);\n\n            _.extend(this[LINK_STORAGE], {\n                [linkName]: linker\n            });\n        });\n    },\n    \n    getLinks() {\n        return this[LINK_STORAGE];\n    },\n\n    getLinker(name) {\n        if (this[LINK_STORAGE]) {\n            return this[LINK_STORAGE][name];\n        }\n    },\n\n    hasLink(name) {\n        if (!this[LINK_STORAGE]) {\n            return false;\n        }\n\n        return !!this[LINK_STORAGE][name];\n    },\n\n    getLink(objectOrId, name) {\n        let linkData = this[LINK_STORAGE];\n\n        if (!linkData) {\n            throw new Meteor.Error(`There are no links defined for collection: ${this._name}`);\n        }\n\n        if (!linkData[name]) {\n            throw new Meteor.Error(`There is no link ${name} for collection: ${this._name}`);\n        }\n\n        const linker = linkData[name];\n        let object = objectOrId;\n        if (typeof(objectOrId) == 'string') {\n            if (!linker.isVirtual()) {\n                object = this.findOne(objectOrId, {\n                    fields: {\n                        [linker.linkStorageField]: 1\n                    }\n                });\n            } else {\n                object = {_id: objectOrId};\n            }\n\n            if (!object) {\n                throw new Meteor.Error(`We could not find any object with _id: \"${objectOrId}\" within the collection: ${this._name}`);\n            }\n        }\n\n        return linkData[name].createLink(object);\n    }\n});\n\n","import LinkMany from './linkTypes/linkMany.js';\nimport LinkManyMeta from './linkTypes/linkManyMeta.js';\nimport LinkOne from './linkTypes/linkOne.js';\nimport LinkOneMeta from './linkTypes/linkOneMeta.js';\nimport {LinkConfigSchema, LinkConfigDefaults} from './config.schema.js';\nimport smartArguments from './linkTypes/lib/smartArguments';\nimport dot from 'dot-object';\nimport {check} from 'meteor/check';\nimport {_} from 'meteor/underscore';\n\nexport default class Linker {\n    /**\n     * @param mainCollection\n     * @param linkName\n     * @param linkConfig\n     */\n    constructor(mainCollection, linkName, linkConfig) {\n        this.mainCollection = mainCollection;\n        this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n        this.linkName = linkName;\n\n        // check linkName must not exist in schema\n        this._validateAndClean();\n\n        // initialize cascade removal hooks.\n        this._initAutoremove();\n        this._initDenormalization();\n\n        if (this.isVirtual()) {\n            // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n            if (!linkConfig.autoremove) {\n                this._handleReferenceRemovalForVirtualLinks();\n            }\n        } else {\n            this._initIndex();\n        }\n    }\n\n    /**\n     * Values which represent for the relation a single link\n     * @returns {string[]}\n     */\n    get oneTypes() {\n        return ['one', '1'];\n    }\n\n    /**\n     * Returns the strategies: one, many, one-meta, many-meta\n     * @returns {string}\n     */\n    get strategy() {\n        let strategy = this.isMany() ? 'many' : 'one';\n        if (this.linkConfig.metadata) {\n            strategy += '-meta';\n        }\n\n        return strategy;\n    }\n\n    /**\n     * Returns the field name in the document where the actual relationships are stored.\n     * @returns string\n     */\n    get linkStorageField() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.linkStorageField;\n        }\n\n        return this.linkConfig.field;\n    }\n\n    /**\n     * The collection that is linked with the current collection\n     * @returns Mongo.Collection\n     */\n    getLinkedCollection() {\n        return this.linkConfig.collection;\n    }\n\n    /**\n     * If the relationship for this link is of \"many\" type.\n     */\n    isMany() {\n        return !this.isSingle();\n    }\n\n    /**\n     * If the relationship for this link contains metadata\n     */\n    isMeta() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isMeta();\n        }\n\n        return !!this.linkConfig.metadata;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isSingle() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isSingle();\n        }\n\n        return _.contains(this.oneTypes, this.linkConfig.type);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isVirtual() {\n        return !!this.linkConfig.inversedBy;\n    }\n\n    /**\n     * Should return a single result.\n     */\n    isOneResult() {\n        return (\n            (this.isVirtual() && this.linkConfig.relatedLinker.linkConfig.unique)\n            || (!this.isVirtual() && this.isSingle())\n        );\n    }\n\n    /**\n     * @param object\n     * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n     *\n     * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n     */\n    createLink(object, collection = null) {\n        let helperClass = this._getHelperClass();\n\n        return new helperClass(this, object, collection);\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _validateAndClean() {\n        if (!this.linkConfig.collection) {\n            throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you did not provide a collection.`)\n        }\n\n        if (typeof(this.linkConfig.collection) === 'string') {\n            const collectionName = this.linkConfig.collection;\n            this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n            if (!this.linkConfig.collection) {\n                throw new Meteor.Error('invalid-collection', `Could not find a collection with the name: ${collectionName}`);\n            }\n        }\n\n        if (this.isVirtual()) {\n            return this._prepareVirtual();\n        } else {\n            if (!this.linkConfig.type) {\n                this.linkConfig.type = 'one';\n            }\n\n            if (!this.linkConfig.field) {\n                this.linkConfig.field = this._generateFieldName();\n            } else {\n                if (this.linkConfig.field == this.linkName) {\n                    throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you must not use the same name for the field, otherwise it will cause conflicts when fetching data`);\n                }\n            }\n        }\n\n        check(this.linkConfig, LinkConfigSchema);\n    }\n\n    /**\n     * We need to apply same type of rules in this case.\n     * @private\n     */\n    _prepareVirtual() {\n        const {collection, inversedBy} = this.linkConfig;\n        let linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n            // it is possible that the collection doesn't have a linker created yet.\n            // so we will create it on startup after all links have been defined\n            Meteor.startup(() => {\n                linker = collection.getLinker(inversedBy);\n                if (!linker) {\n                    throw new Meteor.Error(`You tried setting up an inversed link in \"${this.mainCollection._name}\" pointing to collection: \"${collection._name}\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`)\n                } else {\n                    this._setupVirtualConfig(linker);\n                }\n            })\n        } else {\n            this._setupVirtualConfig(linker);\n        }\n    }\n\n    /**\n     * @param linker\n     * @private\n     */\n    _setupVirtualConfig(linker) {\n        const virtualLinkConfig = linker.linkConfig;\n\n        if (!virtualLinkConfig) {\n            throw new Meteor.Error(`There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`)\n        }\n\n        _.extend(this.linkConfig, {\n            metadata: virtualLinkConfig.metadata,\n            relatedLinker: linker\n        });\n    }\n\n    /**\n     * Depending on the strategy, we create the proper helper class\n     * @private\n     */\n    _getHelperClass() {\n        switch (this.strategy) {\n            case 'many-meta':\n                return LinkManyMeta;\n            case 'many':\n                return LinkMany;\n            case 'one-meta':\n                return LinkOneMeta;\n            case 'one':\n                return LinkOne;\n        }\n\n        throw new Meteor.Error('invalid-strategy', `${this.strategy} is not a valid strategy`);\n    }\n\n    /**\n     * If field name not present, we generate it.\n     * @private\n     */\n    _generateFieldName() {\n        let cleanedCollectionName = this.linkConfig.collection._name.replace(/\\./g, '_');\n        let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n        switch (this.strategy) {\n            case 'many-meta':\n                return `${defaultFieldPrefix}_metas`;\n            case 'many':\n                return `${defaultFieldPrefix}_ids`;\n            case 'one-meta':\n                return `${defaultFieldPrefix}_meta`;\n            case 'one':\n                return `${defaultFieldPrefix}_id`;\n        }\n    }\n\n    /**\n     * When a link that is declared virtual is removed, the reference will be removed from every other link.\n     * @private\n     */\n    _handleReferenceRemovalForVirtualLinks() {\n        this.mainCollection.after.remove((userId, doc) => {\n            // this problem may occur when you do a .remove() before Meteor.startup()\n            if (!this.linkConfig.relatedLinker) {\n                console.warn(`There was an error finding the link for removal for collection: \"${this.mainCollection._name}\" with link: \"${this.linkName}\". This may occur when you do a .remove() before Meteor.startup()`);\n                return;\n            }\n\n            let accessor = this.createLink(doc);\n\n            _.each(accessor.fetch(), linkedObj => {\n                const {relatedLinker} = this.linkConfig;\n                // We do this check, to avoid self-referencing hell when defining virtual links\n                // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n                // if a removal happens before Meteor.startup this may fail\n                if (relatedLinker) {\n                    let link = relatedLinker.createLink(linkedObj);\n\n                    if (relatedLinker.isSingle()) {\n                        link.unset();\n                    } else {\n                        link.remove(doc);\n                    }\n                }\n            });\n        })\n    }\n\n    _initIndex() {\n        if (Meteor.isServer) {\n            let field = this.linkConfig.field;\n            if (this.linkConfig.metadata) {\n                field = field + '._id';\n            }\n\n            if (this.linkConfig.index) {\n                if (this.isVirtual()) {\n                    throw new Meteor.Error('You cannot set index on an inversed link.');\n                }\n\n                let options;\n                if (this.linkConfig.unique) {\n                    if (this.isMany()) {\n                        throw new Meteor.Error('You cannot set unique property on a multi field.');\n                    }\n\n                    options = {unique: true}\n                }\n\n                this.mainCollection._ensureIndex({[field]: 1}, options);\n            } else {\n                if (this.linkConfig.unique) {\n                    if (this.isVirtual()) {\n                        throw new Meteor.Error('You cannot set unique property on an inversed link.');\n                    }\n\n                    if (this.isMany()) {\n                        throw new Meteor.Error('You cannot set unique property on a multi field.');\n                    }\n\n                    this.mainCollection._ensureIndex({\n                        [field]: 1\n                    }, {unique: true})\n                }\n            }\n        }\n    }\n\n    _initAutoremove() {\n        if (!this.linkConfig.autoremove) {\n            return;\n        }\n\n        if (!this.isVirtual()) {\n            this.mainCollection.after.remove((userId, doc) => {\n                this.getLinkedCollection().remove({\n                    _id: {\n                        $in: smartArguments.getIds(doc[this.linkStorageField])\n                    }\n                })\n            })\n        } else {\n            this.mainCollection.after.remove((userId, doc) => {\n                const linker = this.mainCollection.getLink(doc, this.linkName);\n                const ids = linker.find({}, {fields: {_id: 1}}).fetch().map(item => item._id);\n\n                this.getLinkedCollection().remove({\n                    _id: {$in: ids}\n                })\n            })\n        }\n    }\n\n    /**\n     * Initializes denormalization using herteby:denormalize\n     * @private\n     */\n    _initDenormalization() {\n        if (!this.linkConfig.denormalize || !Meteor.isServer) {\n            return;\n        }\n\n        const packageExists = !!Package['herteby:denormalize'];\n        if (!packageExists) {\n            throw new Meteor.Error('missing-package', `Please add the herteby:denormalize package to your Meteor application in order to make caching work`)\n        }\n\n        const {field, body, bypassSchema} = this.linkConfig.denormalize;\n        let cacheConfig;\n\n        let referenceFieldSuffix = '';\n        if (this.isMeta()) {\n            referenceFieldSuffix = (this.isSingle() ? '._id' : ':_id');\n        }\n\n        if (this.isVirtual()) {\n            let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n\n            let type = inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n\n            cacheConfig = {\n                type: type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: inversedLink.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema\n            };\n        } else {\n            cacheConfig = {\n                type: this.linkConfig.type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: this.linkConfig.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema\n            };\n        }\n\n        if (this.isVirtual()) {\n            Meteor.startup(() => {\n                this.mainCollection.cache(cacheConfig);\n            })\n        } else {\n            this.mainCollection.cache(cacheConfig);\n        }\n    }\n\n    /**\n     * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    isDenormalized() {\n        return !!this.linkConfig.denormalize;\n    }\n\n    /**\n     * Verifies if the body of the linked element does not contain fields outside the cache body\n     *\n     * @param body\n     * @returns {boolean}\n     * @private\n     */\n    isSubBodyDenormalized(body) {\n        const cacheBody = this.linkConfig.denormalize.body;\n\n        const cacheBodyFields = _.keys(dot.dot(cacheBody));\n        const bodyFields = _.keys(\n            dot.dot(\n                _.omit(body, '_id')\n            )\n        );\n\n        return _.difference(bodyFields, cacheBodyFields).length === 0;\n    }\n}","import sift from 'sift';\n\nexport default function createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n    if (!isVirtual) {\n        switch (strategy) {\n            case 'one': return createOne(object, fieldStorage);\n            case 'one-meta': return createOneMeta(object, fieldStorage, metaFilters);\n            case 'many': return createMany(object, fieldStorage);\n            case 'many-meta': return createManyMeta(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    } else {\n        switch (strategy) {\n            case 'one': return createOneVirtual(object, fieldStorage);\n            case 'one-meta': return createOneMetaVirtual(object, fieldStorage, metaFilters);\n            case 'many': return createManyVirtual(object, fieldStorage);\n            case 'many-meta': return createManyMetaVirtual(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    }\n}\n\nexport function createOne(object, fieldStorage) {\n    return {\n        _id: object[fieldStorage]\n    };\n}\n\nexport function createOneVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createOneMeta(object, fieldStorage, metaFilters) {\n    const value = object[fieldStorage];\n\n    if (metaFilters) {\n        if (!sift(metaFilters)(value)) {\n            return {_id: undefined};\n        }\n    }\n\n    return {\n        _id: value ? value._id : value\n    };\n}\n\nexport function createOneMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[fieldStorage + '.' + key] = value;\n        })\n    }\n\n    filters[fieldStorage + '._id'] = object._id;\n\n    return filters;\n}\n\nexport function createMany(object, fieldStorage) {\n    return {\n        _id: {\n            $in: object[fieldStorage] || []\n        }\n    };\n}\n\nexport function createManyVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createManyMeta(object, fieldStorage, metaFilters) {\n    let value = object[fieldStorage];\n\n    if (metaFilters) {\n        value = sift(metaFilters, value)\n    }\n\n    return {\n        _id: {\n            $in: _.pluck(value, '_id') || []\n        }\n    };\n}\n\nexport function createManyMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[key] = value;\n        })\n    }\n\n    filters._id = object._id;\n\n    return {\n        [fieldStorage]: {$elemMatch: filters}\n    };\n}","import SmartArgs from './lib/smartArguments.js';\nimport createSearchFilters from '../lib/createSearchFilters';\n\nexport default class Link {\n    get config() { return this.linker.linkConfig; }\n\n    get isVirtual() { return this.linker.isVirtual() }\n\n    constructor(linker, object, collection) {\n        this.linker = linker;\n        this.object = object;\n        this.linkedCollection = (collection) ? collection : linker.getLinkedCollection();\n\n        if (this.linker.isVirtual()) {\n            this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n        } else {\n            this.linkStorageField = this.config.field;\n        }\n    }\n\n    /**\n     * Gets the stored link information value\n     * @returns {*}\n     */\n    value() {\n        if (this.isVirtual) {\n            throw new Meteor.Error('You can only take the value from the main link.');\n        }\n\n        return this.object[this.linkStorageField];\n    }\n\n    /**\n     * Finds linked data.\n     *\n     * @param filters\n     * @param options\n     * @returns {*}\n     * @param userId\n     */\n    find(filters = {}, options = {}, userId = undefined) {\n        let linker = this.linker;\n        const linkedCollection = this.linkedCollection;\n\n        let $metaFilters;\n        if (filters.$meta) {\n            $metaFilters = filters.$meta;\n            delete filters.$meta;\n        }\n\n        const searchFilters = createSearchFilters(\n            this.object,\n            this.linkStorageField,\n            linker.strategy,\n            linker.isVirtual(),\n            $metaFilters\n        );\n\n        let appliedFilters = _.extend({}, filters, searchFilters);\n\n        // see https://github.com/cult-of-coders/grapher/issues/134\n        // happens due to recursive importing of modules\n        // TODO: find another way to do this\n        if (linkedCollection.find) {\n            return linkedCollection.find(appliedFilters, options, userId)\n        } else {\n            return linkedCollection.default.find(appliedFilters, options, userId);\n        }\n    }\n\n    /**\n     * @param filters\n     * @param options\n     * @param others\n     * @returns {*|{content}|any}\n     */\n    fetch(filters, options, ...others) {\n        let result = this.find(filters, options, ...others).fetch();\n\n        if (this.linker.isOneResult()) {\n            return _.first(result);\n        }\n\n        return result;\n    }\n\n    /**\n     * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n     * We use clean to make it an empty array by default.\n     */\n    clean() {}\n\n    /**\n     * Extracts a single id\n     */\n    identifyId(what, saveToDatabase) {\n        return SmartArgs.getId(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Extracts the ids of object(s) or strings and returns an array.\n     */\n    identifyIds(what, saveToDatabase) {\n        return SmartArgs.getIds(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Checks when linking data, if the ids are valid with the linked collection.\n     * @throws Meteor.Error\n     * @param ids\n     *\n     * @protected\n     */\n    _validateIds(ids) {\n        if (!_.isArray(ids)) {\n            ids = [ids];\n        }\n\n        const validIds = this.linkedCollection.find({\n            _id: {$in: ids}\n        }, {fields: {_id: 1}}).fetch().map(doc => doc._id);\n\n        if (validIds.length != ids.length) {\n            throw new Meteor.Error('not-found', `You tried to create links with non-existing id(s) inside \"${this.linkedCollection._name}\": ${_.difference(ids, validIds).join(', ')}`)\n        }\n    }\n\n    /**\n     * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n     *\n     * @param action\n     * @param what\n     * @param metadata\n     *\n     * @protected\n     */\n    _virtualAction(action, what, metadata) {\n        const linker = this.linker.linkConfig.relatedLinker;\n\n        // its an unset operation most likely.\n        if (what === undefined) {\n            const reversedLink = linker.createLink(this.fetch());\n            reversedLink.unset();\n\n            return;\n        }\n\n        if (!_.isArray(what)) {\n            what = [what];\n        }\n\n        what = _.map(what, element => {\n            if (!_.isObject(element)) {\n                return linker.mainCollection.findOne(element);\n            } else {\n                if (!element._id) {\n                    const elementId = linker.mainCollection.insert(element);\n                    _.extend(element, linker.mainCollection.findOne(elementId));\n                }\n\n                return element;\n            }\n        });\n\n        return _.map(what, element => {\n            const reversedLink = linker.createLink(element);\n\n            if (action == 'metadata') {\n                if (linker.isSingle()) {\n                    return reversedLink.metadata(metadata);\n                } else {\n                    return reversedLink.metadata(this.object, metadata);\n                }\n            } else if (action == 'add' || action == 'set') {\n                if (linker.isSingle()) {\n                    reversedLink.set(this.object, metadata);\n                } else {\n                    reversedLink.add(this.object, metadata);\n                }\n            } else {\n                if (linker.isSingle()) {\n                    reversedLink.unset();\n                } else {\n                    reversedLink.remove(this.object);\n                }\n            }\n        });\n    }\n}\n","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkMany extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * Ads the _ids to the object.\n     * @param what\n     */\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n        this.clean();\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        const field = this.linkStorageField;\n\n        // update the field\n        this.object[field] = _.union(this.object[field], _ids);\n\n        // update the db\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: _ids}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     */\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n\n        this.clean();\n        const field = this.linkStorageField;\n\n        const _ids = this.identifyIds(what);\n\n        // update the field\n        this.object[field] = _.filter(this.object[field], _id => !_.contains(_ids, _id));\n\n        // update the db\n        let modifier = {\n            $pullAll: {\n                [field]: _ids\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkManyMeta extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * @param what\n     * @param metadata\n     */\n    add(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        let field = this.linkStorageField;\n\n        this.object[field] = this.object[field] || [];\n        let metadatas = [];\n\n        _.each(_ids, _id => {\n            let localMetadata = _.clone(metadata);\n            localMetadata._id = _id;\n\n            this.object[field].push(localMetadata);\n            metadatas.push(localMetadata);\n        });\n\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: metadatas}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     * @param extendMetadata\n     */\n    metadata(what, extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', what, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (what === undefined) {\n            return this.object[field];\n        }\n\n        if (_.isArray(what)) {\n            throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\n        }\n\n        const _id = this.identifyId(what);\n\n        let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\n        if (extendMetadata === undefined) {\n            return existingMetadata;\n        } else {\n            _.extend(existingMetadata, extendMetadata);\n            let subfield = field + '._id';\n            let subfieldUpdate = field + '.$';\n\n            this.linker.mainCollection.update({\n                _id: this.object._id,\n                [subfield]: _id\n            }, {\n               $set: {\n                   [subfieldUpdate]: existingMetadata\n               }\n            });\n        }\n\n        return this;\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what);\n        let field = this.linkStorageField;\n\n        this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\n\n        let modifier = {\n            $pull: {\n                [field]: {\n                    $elemMatch: {\n                        _id: {\n                            $in: _ids\n                        }\n                    }\n                }\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOne extends Link {\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        const _id = this.identifyId(what, true);\n        this._validateIds([_id]);\n\n        this.object[field] = _id;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: _id\n            }\n        });\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = null;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: null\n            }\n        });\n\n        return this;\n    }\n\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOneMeta extends Link {\n    set(what, metadata = {}) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        metadata._id = this.identifyId(what, true);\n        this._validateIds([metadata._id]);\n\n        this.object[field] = metadata;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: metadata\n            }\n        });\n\n        return this;\n    }\n\n    metadata(extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', undefined, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (!extendMetadata) {\n            return this.object[field];\n        } else {\n            _.extend(this.object[field], extendMetadata);\n\n            this.linker.mainCollection.update(this.object._id, {\n                $set: {\n                    [field]: this.object[field]\n                }\n            });\n        }\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset');\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = {};\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: {}\n            }\n        });\n\n        return this;\n    }\n\n    add(what, metadata) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","/**\n * When you work with add/remove set/unset\n * You have the ability to pass strings, array of strings, objects, array of objects\n * If you are adding something and you want to save them in db, you can pass objects without ids.\n */\nexport default new class {\n    getIds(what, options) {\n        if (_.isArray(what)) {\n            return _.map(what, (subWhat) => {\n                return this.getId(subWhat, options)\n            })\n        } else {\n            return [this.getId(what, options)];\n        }\n\n        throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n    }\n\n    getId(what, options) {\n        if (typeof what === 'string') {\n            return what;\n        }\n\n        if (typeof what === 'object') {\n            if (!what._id && options.saveToDatabase) {\n                what._id = options.collection.insert(what);\n            }\n\n            return what._id\n        }\n    }\n}","import deepClone from 'lodash.clonedeep';\n\nexport default class NamedQueryBase {\n    isNamedQuery = true;\n\n    constructor(name, collection, body, options = {}) {\n        this.queryName = name;\n\n        if (_.isFunction(body)) {\n            this.resolver = body;\n        } else {\n            this.body = deepClone(body);\n        }\n\n        this.subscriptionHandle = null;\n        this.params = options.params || {};\n        this.options = options;\n        this.collection = collection;\n        this.isExposed = false;\n    }\n\n    get name() {\n        return `named_query_${this.queryName}`;\n    }\n\n    get isResolver() {\n        return !!this.resolver;\n    }\n\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams(params) {\n        params = params || this.params;\n\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        try {\n            this._validate(validateParams, params);\n        } catch (validationError) {\n            console.error(`Invalid parameters supplied to the query \"${this.queryName}\"\\n`, validationError);\n            throw validationError; // rethrow\n        }\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        let clone = new this.constructor(\n            this.queryName,\n            this.collection,\n            this.isResolver ? this.resolver : deepClone(this.body),\n            {\n                ...this.options,\n                params,\n            }\n        );\n\n        clone.cacher = this.cacher;\n        if (this.exposeConfig) {\n            clone.exposeConfig = this.exposeConfig;\n        }\n\n        return clone;\n    }\n\n    /**\n     * @param {function|object} validator\n     * @param {object} params\n     * @private\n     */\n    _validate(validator, params) {\n        if (_.isFunction(validator)) {\n            validator.call(null, params)\n        } else {\n            check(params, validator)\n        }\n    }\n}","import CountSubscription from '../query/counts/countSubscription';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveFetch from '../query/lib/recursiveFetch.js';\nimport prepareForProcess from '../query/lib/prepareForProcess.js';\nimport { _ } from 'meteor/underscore';\nimport callWithPromise from '../query/lib/callWithPromise';\nimport Base from './namedQuery.base';\n\nexport default class extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            this.params,\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(this.params, callback);\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(this.name + '.count', this.params, callback);\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, this.params, callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = this.body;\n        if (this.params.$body) {\n            body = intersectDeep(body, this.params.$body);\n        }\n\n        body = prepareForProcess(body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body)\n        );\n    }\n}\n","import NamedQueryClient from './namedQuery.client';\nimport NamedQueryServer from './namedQuery.server';\n\nlet NamedQuery;\n\nif (Meteor.isServer) {\n    NamedQuery = NamedQueryServer;\n} else {\n    NamedQuery = NamedQueryClient;\n}\n\nexport default NamedQuery;","import prepareForProcess from '../query/lib/prepareForProcess.js';\nimport Base from './namedQuery.base';\nimport deepClone from 'lodash.clonedeep';\nimport MemoryResultCacher from './cache/MemoryResultCacher';\nimport intersectDeep from '../query/lib/intersectDeep';\n\nexport default class extends Base {\n    /**\n     * Retrieves the data.\n     * @returns {*}\n     */\n    fetch(context) {\n        this._performSecurityChecks(context, this.params);\n\n        if (this.isResolver) {\n            return this._fetchResolverData(context);\n        } else {\n            body = deepClone(this.body);\n            if (this.params.$body) {\n                body = intersectDeep(body, this.params.$body);\n            }\n            \n            // we must apply emobdyment here\n            this.doEmbodimentIfItApplies(body);\n\n            const query = this.collection.createQuery(\n                deepClone(body),\n                {\n                    params: deepClone(this.params)\n                }\n            );\n\n            if (this.cacher) {\n                const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n                return this.cacher.fetch(cacheId, {query});\n            }\n\n            return query.fetch();\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     *\n     * @returns {any}\n     */\n    getCount(context) {\n        this._performSecurityChecks(context, this.params);\n\n        const countCursor = this.getCursorForCounting();\n\n        if (this.cacher) {\n            const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n\n            return this.cacher.fetch(cacheId, {countCursor});\n        }\n\n        return countCursor.count();\n    }\n\n    /**\n     * Returns the cursor for counting\n     * This is most likely used for counts cursor\n     */\n    getCursorForCounting() {\n        let body = deepClone(this.body);\n        this.doEmbodimentIfItApplies(body);\n        body = prepareForProcess(body, this.params);\n\n        return this.collection.find(body.$filters || {}, {fields: {_id: 1}});\n    }\n\n    /**\n     * @param cacher\n     */\n    cacheResults(cacher) {\n        if (!cacher) {\n            cacher = new MemoryResultCacher();\n        }\n\n        this.cacher = cacher;\n    }\n\n    /**\n     * Configure resolve. This doesn't actually call the resolver, it just sets it\n     * @param fn\n     */\n    resolve(fn) {\n        if (!this.isResolver) {\n            throw new Meteor.Error('invalid-call', `You cannot use resolve() on a non resolver NamedQuery`);\n        }\n\n        this.resolver = fn;\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _fetchResolverData(context) {\n        const resolver = this.resolver;\n        const self = this;\n        const query = {\n            fetch() {\n                return resolver.call(context, self.params);\n            }\n        };\n\n        if (this.cacher) {\n            const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n            return this.cacher.fetch(cacheId, {query});\n        }\n\n        return query.fetch();\n    }\n\n    /**\n     * @param context Meteor method/publish context\n     * @param params\n     *\n     * @private\n     */\n    _performSecurityChecks(context, params) {\n        if (context && this.exposeConfig) {\n            this._callFirewall(context, context.userId, params);\n        }\n\n        this.doValidateParams(params);\n    }\n}","export default new class {\n    constructor() {\n        this.storage = {};\n    }\n\n    add(key, value) {\n        if (this.storage[key]) {\n            throw new Meteor.Error('invalid-name', `You have previously defined another namedQuery with the same name: \"${key}\". Named Query names should be unique.`);\n        }\n\n        this.storage[key] = value;\n    }\n\n    get(key) {\n        return this.storage[key];\n    }\n\n    getAll() {\n        return this.storage;\n    }\n}","import {EJSON} from 'meteor/ejson';\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class BaseResultCacher {\n    constructor(config = {}) {\n        this.config = config;\n    }\n\n    /**\n     * @param queryName\n     * @param params\n     * @returns {string}\n     */\n    generateQueryId(queryName, params) {\n        return `${queryName}::${EJSON.stringify(params)}`;\n    }\n\n    /**\n     * Dummy function\n     */\n    fetch(cacheId, {query, countCursor}) {\n        throw 'Not implemented';\n    }\n\n    /**\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    static fetchData({query, countCursor}) {\n        if (query) {\n            return query.fetch();\n        } else {\n            return countCursor.count();\n        }\n    }\n}\n","import {Meteor} from 'meteor/meteor';\nimport cloneDeep from 'lodash.clonedeep';\nimport BaseResultCacher from './BaseResultCacher';\n\nconst DEFAULT_TTL = 60000;\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class MemoryResultCacher extends BaseResultCacher {\n    constructor(config = {}) {\n        super(config);\n        this.store = {};\n    }\n\n    /**\n     * @param cacheId\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    fetch(cacheId, {query, countCursor}) {\n        const cacheData = this.store[cacheId];\n        if (cacheData !== undefined) {\n            return cloneDeep(cacheData);\n        }\n\n        const data = BaseResultCacher.fetchData({query, countCursor});\n        this.storeData(cacheId, data);\n\n        return data;\n    }\n\n\n    /**\n     * @param cacheId\n     * @param data\n     */\n    storeData(cacheId, data) {\n        const ttl = this.config.ttl || DEFAULT_TTL;\n        this.store[cacheId] = cloneDeep(data);\n\n        Meteor.setTimeout(() => {\n            delete this.store[cacheId];\n        }, ttl)\n    }\n}\n","import NamedQuery from '../namedQuery.js';\nimport {ExposeSchema, ExposeDefaults} from './schema.js';\nimport mergeDeep from './lib/mergeDeep.js';\nimport createGraph from '../../query/lib/createGraph.js';\nimport recursiveCompose from '../../query/lib/recursiveCompose.js';\nimport prepareForProcess from '../../query/lib/prepareForProcess.js';\nimport deepClone from 'lodash.clonedeep';\nimport intersectDeep from '../../query/lib/intersectDeep';\nimport genCountEndpoint from '../../query/counts/genEndpoint.server';\nimport {check} from 'meteor/check';\n\n_.extend(NamedQuery.prototype, {\n    /**\n     * @param config\n     */\n    expose(config = {}) {\n        if (!Meteor.isServer) {\n            throw new Meteor.Error('invalid-environment', `You must run this in server-side code`);\n        }\n\n        if (this.isExposed) {\n            throw new Meteor.Error('query-already-exposed', `You have already exposed: \"${this.name}\" named query`);\n        }\n\n        this.exposeConfig = Object.assign({}, ExposeDefaults, config);\n        check(this.exposeConfig, ExposeSchema);\n\n        if (this.exposeConfig.validateParams) {\n            this.options.validateParams = this.exposeConfig.validateParams;\n        }\n\n        if (!this.isResolver) {\n            this._initNormalQuery();\n        } else {\n            this._initMethod();\n        }\n\n        this.isExposed = true;\n    },\n\n    /**\n     * Initializes a normal NamedQuery (normal == not a resolver)\n     * @private\n     */\n    _initNormalQuery() {\n        const config = this.exposeConfig;\n        if (config.method) {\n            this._initMethod();\n        }\n\n        if (config.publication) {\n            this._initPublication();\n        }\n\n        if (!config.method && !config.publication) {\n            throw new Meteor.Error('weird', 'If you want to expose your named query you need to specify at least one of [\"method\", \"publication\"] options to true')\n        }\n\n        this._initCountMethod();\n        this._initCountPublication();\n    },\n\n    /**\n     * Returns the embodied body of the request\n     * @param {*} _embody \n     * @param {*} body \n     */\n    doEmbodimentIfItApplies(body) {\n        // query is not exposed yet, so it doesn't have embodiment logic\n        if (!this.exposeConfig) {\n            return;\n        }\n\n        const {embody} = this.exposeConfig;\n\n        if (!embody) {\n            return;\n        }\n\n        if (_.isFunction(embody)) {\n            embody.call(this, body, this.params)\n        } else {\n            mergeDeep(\n                body,\n                embody\n            );\n        }\n    },\n\n    /**\n     * @private\n     */\n    _initMethod() {\n        const self = this;\n        Meteor.methods({\n            [this.name](newParams) {\n                self._unblockIfNecessary(this);\n\n                // security is done in the fetching because we provide a context\n                return self.clone(newParams).fetch(this);\n            }\n        })\n    },\n\n    /**\n     * @returns {void}\n     * @private\n     */\n    _initCountMethod() {\n        const self = this;\n\n        Meteor.methods({\n            [this.name + '.count'](newParams) {\n                self._unblockIfNecessary(this);\n\n                // security is done in the fetching because we provide a context\n                return self.clone(newParams).getCount(this);\n            }\n        });\n    },\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _initCountPublication() {\n        const self = this;\n\n        genCountEndpoint(self.name, {\n            getCursor(session) {\n                const query = self.clone(session.params);\n                return query.getCursorForCounting();\n            },\n\n            getSession(newParams) {\n                self.doValidateParams(newParams);\n                self._callFirewall(this, this.userId, params);\n\n                return { params: newParams };\n            },\n        });\n    },\n\n    /**\n     * @private\n     */\n    _initPublication() {\n        const self = this;\n\n        Meteor.publishComposite(this.name, function (params = {}) {\n            self._unblockIfNecessary(this);\n            self.doValidateParams(params);\n            self._callFirewall(this, this.userId, params);\n\n            let body = deepClone(self.body);\n            if (params.$body) {\n                body = intersectDeep(body, params.$body);\n            }\n\n            self.doEmbodimentIfItApplies(body);\n            body = prepareForProcess(body, params);\n\n            const rootNode = createGraph(self.collection, body);\n\n            return recursiveCompose(rootNode);\n        });\n    },\n\n    /**\n     * @param context\n     * @param userId\n     * @param params\n     * @private\n     */\n    _callFirewall(context, userId, params) {\n        const {firewall} = this.exposeConfig;\n        if (!firewall) {\n            return;\n        }\n\n        if (_.isArray(firewall)) {\n            firewall.forEach(fire => {\n                fire.call(context, userId, params);\n            })\n        } else {\n            firewall.call(context, userId, params);\n        }\n    },\n\n    /**\n     * @param context\n     * @private\n     */\n    _unblockIfNecessary(context) {\n        if (this.exposeConfig.unblock) {\n            if (context.unblock) {\n                context.unblock();\n            }\n        }\n    },\n});\n","import {Match} from 'meteor/check';\n\nexport const ExposeDefaults = {\n    publication: true,\n    method: true,\n    unblock: true,\n};\n\nexport const ExposeSchema = {\n    firewall: Match.Maybe(\n        Match.OneOf(Function, [Function])\n    ),\n    publication: Match.Maybe(Boolean),\n    unblock: Match.Maybe(Boolean),\n    method: Match.Maybe(Boolean),\n    embody: Match.Maybe(\n        Match.OneOf(Object, Function)\n    ),\n    validateParams: Match.Maybe(\n        Match.OneOf(Object, Function)\n    ),\n};\n","/**\n * Deep merge two objects.\n * @param target\n * @param source\n */\nexport default function mergeDeep(target, source) {\n    if (_.isObject(target) && _.isObject(source)) {\n        _.each(source, (value, key) => {\n            if (_.isFunction(source[key])) {\n                target[key] = source[key];\n            } else if (_.isObject(source[key])) {\n                if (!target[key]) Object.assign(target, { [key]: {} });\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        });\n    }\n\n    return target;\n}","import deepClone from 'lodash.clonedeep';\nimport {check} from 'meteor/check';\n\nexport default class QueryBase {\n    isGlobalQuery = true;\n\n    constructor(collection, body, options = {}) {\n        this.collection = collection;\n\n        this.body = deepClone(body);\n\n        this.params = options.params || {};\n        this.options = options;\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        return new this.constructor(\n            this.collection,\n            deepClone(this.body),\n            {\n                params,\n                ...this.options\n            }\n        );\n    }\n\n    get name() {\n        return `exposure_${this.collection._name}`;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams() {\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        if (_.isFunction(validateParams)) {\n            validateParams.call(null, this.params)\n        } else {\n            check(this.params)\n        }\n    }\n\n    /**\n     * Merges the params with previous params.\n     *\n     * @param params\n     * @returns {Query}\n     */\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n}","import { _ } from 'meteor/underscore';\nimport CountSubscription from './counts/countSubscription';\nimport createGraph from './lib/createGraph.js';\nimport recursiveFetch from './lib/recursiveFetch.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport callWithPromise from './lib/callWithPromise';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback {Function} optional\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        this.doValidateParams();\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        this.doValidateParams();\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        this.doValidateParams();\n\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        this.doValidateParams();\n\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(\n                    this.name + '.count',\n                    prepareForProcess(this.body, this.params),\n                    callback\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = prepareForProcess(this.body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            this.params\n        );\n    }\n}\n","import QueryClient from './query.client';\nimport QueryServer from './query.server';\n\nlet Query;\n\nif (Meteor.isServer) {\n    Query = QueryServer;\n} else {\n    Query = QueryClient;\n}\n\nexport default Query;","import createGraph from './lib/createGraph.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport hypernova from './hypernova/hypernova.js';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Retrieves the data.\n     * @param context\n     * @returns {*}\n     */\n    fetch(context = {}) {\n        const node = createGraph(\n            this.collection,\n            prepareForProcess(this.body, this.params)\n        );\n\n        return hypernova(node, context.userId, {params: this.params});\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @returns {integer}\n     */\n    getCount() {\n        return this.collection.find(this.body.$filters || {}, {}).count();\n    }\n}","import { Mongo } from 'meteor/mongo';\nimport { COUNTS_COLLECTION_CLIENT } from './constants';\n\n/**\n * Internal collection used to store counts on the client.\n */\nexport default new Mongo.Collection(COUNTS_COLLECTION_CLIENT);\n","export const COUNTS_COLLECTION_CLIENT = 'grapher_counts';\n","import { EJSON } from 'meteor/ejson';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport Counts from './collection';\nimport createFauxSubscription from './createFauxSubscription';\nimport prepareForProcess from '../lib/prepareForProcess.js';\nimport NamedQueryBase from '../../namedQuery/namedQuery.base';\n\nexport default class CountSubscription {\n    /**\n     * @param {*} query - The query to use when fetching counts\n     */\n    constructor(query) {\n        this.accessToken = new ReactiveVar(null);\n        this.fauxHandle = null;\n        this.query = query;\n    }\n\n    /**\n     * Starts a subscription request for reactive counts.\n     *\n     * @param {*} arg - The argument to pass to {name}.count.subscribe\n     * @param {*} callback\n     */\n    subscribe(arg, callback) {\n        // Don't try to resubscribe if arg hasn't changed\n        if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\n            return this.fauxHandle;\n        }\n\n        this.accessToken.set(null);\n        this.lastArgs = arg;\n\n        Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\n            if (!this._markedForUnsubscribe) {\n                this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\n                this.accessToken.set(token);\n\n                this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\n            }\n\n            this._markedForUnsubscribe = false;\n        });\n\n        this.fauxHandle = createFauxSubscription(this);\n        return this.fauxHandle;\n    }\n\n    /**\n     * Unsubscribes from the count endpoint, if there is such a subscription.\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.disconnectComputation.stop();\n            this.subscriptionHandle.stop();\n        } else {\n            // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\n            // so set a flag to stop the subscription from being created\n            this._markedForUnsubscribe = true;\n        }\n\n        this.accessToken.set(null);\n        this.fauxHandle = null;\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Reactively fetch current document count. Returns null if the subscription is not ready yet.\n     *\n     * @returns {Number|null} - Current document count\n     */\n    getCount() {\n        const id = this.accessToken.get();\n        if (id === null) return null;\n\n        const doc = Counts.findOne(id);\n        return doc.count;\n    }\n\n    /**\n     * All session info gets deleted when the server goes down, so when the client attempts to\n     * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\n     *\n     * This function prevents that by manually stopping and restarting the subscription when the\n     * connection to the server is lost.\n     */\n    handleDisconnect() {\n        const status = Meteor.status();\n        if (!status.connected) {\n            this._markedForResume = true;\n            this.fauxHandle = null;\n            this.subscriptionHandle.stop();\n        }\n\n        if (status.connected && this._markedForResume) {\n            this._markedForResume = false;\n            this.subscribe(this.lastArgs);\n        }\n    }\n\n    /**\n     * Returns whether or not a subscription request has been made.\n     */\n    isSubscribed() {\n        return this.accessToken.get() !== null;\n    }\n}\n","/**\n * This method creates a \"fake\" subscription handle so that users of CountSubscription#subscribe\n * have an interface consistent with normal subscriptions.\n *\n * @param {CountSubscription} countManager\n */\nexport default (countManager) => ({\n    ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\n    stop: () => countManager.unsubscribe(),\n});\n","import { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nimport { COUNTS_COLLECTION_CLIENT } from './constants';\n\n// XXX: Should this persist between server restarts?\nconst collection = new Mongo.Collection(null);\n\n/**\n * This method generates a reactive count endpoint (a method and publication) for a collection or named query.\n *\n * @param {String} name - Name of the query or collection\n * @param {Function} getCursor - Takes in the user's session document as an argument, and turns that into a Mongo cursor.\n * @param {Function} getSession - Takes the subscribe method's argument as its parameter. Should enforce any necessary security constraints. The return value of this function is stored in the session document.\n */\nexport default (name, { getCursor, getSession }) => {\n    Meteor.methods({\n        [name + '.count.subscribe'](paramsOrBody) {\n            const session = getSession.call(this, paramsOrBody);\n            const existingSession = collection.findOne({ ...session, userId: this.userId });\n\n            // Try to reuse sessions if the user subscribes multiple times with the same data\n            if (existingSession) {\n                return existingSession._id;\n            }\n\n            const token = collection.insert({\n                ...session,\n                query: name,\n                userId: this.userId,\n            });\n\n            return token;\n        },\n    });\n\n    Meteor.publish(name + '.count', function(token) {\n        check(token, String);\n        const self = this;\n        const request = collection.findOne({ _id: token, userId: self.userId });\n\n        if (!request) {\n            throw new Error('no-request', `You must acquire a request token via the \"${name}.count.subscribe\" method first.`);\n        }\n\n        const cursor = getCursor.call(this, request);\n\n        // Start counting\n        let count = 0;\n        self.added(COUNTS_COLLECTION_CLIENT, token, { count });\n        const handle = cursor.observeChanges({\n            added(id) {\n                count++;\n                self.changed(COUNTS_COLLECTION_CLIENT, token, { count });\n            },\n\n            removed(id) {\n                count--;\n                self.changed(COUNTS_COLLECTION_CLIENT, token, { count });\n            },\n        });\n\n        self.onStop(() => {\n            handle.stop();\n            collection.remove(token);\n        });\n        self.ready();\n    });\n};\n","import sift from 'sift';\n\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\nexport default class AggregateFilters {\n    constructor(collectionNode, metaFilters) {\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    get parentObjects() {\n        return this.collectionNode.parent.results;\n    }\n\n    create() {\n        switch (this.linker.strategy) {\n            case 'one':\n                return this.createOne();\n            case 'one-meta':\n                return this.createOneMeta();\n            case 'many':\n                return this.createMany();\n            case 'many-meta':\n                return this.createManyMeta();\n            default:\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n        }\n    }\n\n    createOne() {\n        if (!this.isVirtual) {\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, this.linkStorageField)\n                    )\n                }\n            };\n        } else {\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, '_id')\n                    )\n                }\n            };\n        }\n    }\n\n    createOneMeta() {\n        if (!this.isVirtual) {\n            let eligibleObjects = this.parentObjects;\n\n            if (this.metaFilters) {\n                eligibleObjects = _.filter(this.parentObjects, object => {\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\n                });\n            }\n\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\n            let ids = [];\n            _.each(storages, storage => {\n                if (storage) {\n                    ids.push(storage._id);\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[this.linkStorageField + '.' + key] = value;\n                })\n            }\n\n            filters[this.linkStorageField + '._id'] = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return filters;\n        }\n    }\n\n    createMany() {\n        if (!this.isVirtual) {\n            const arrayOfIds = _.pluck(this.parentObjects, this.linkStorageField);\n            return {\n                _id: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        } else {\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        }\n    }\n\n    createManyMeta() {\n        if (!this.isVirtual) {\n            let ids = [];\n\n            _.each(this.parentObjects, object => {\n                if (object[this.linkStorageField]) {\n                    if (this.metaFilters) {\n                        const isValid = sift(this.metaFilters);\n                        _.each(object[this.linkStorageField], object => {\n                            if (isValid(object)) {\n                                ids.push(object._id);\n                            }\n                        });\n                    } else {\n                        _.each(object[this.linkStorageField], object => {\n                            ids.push(object._id);\n                        });\n                    }\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[key] = value;\n                })\n            }\n\n            filters._id = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return {\n                [this.linkStorageField]: {\n                    $elemMatch: filters\n                }\n            };\n        }\n    }\n}","import sift from 'sift';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\n\n/**\n * This only applies to inversed links. It will assemble the data in a correct manner.\n */\nexport default function (childCollectionNode, aggregateResults, metaFilters) {\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const linkName = childCollectionNode.linkName;\n    const isMeta = linker.isMeta();\n\n    let allResults = [];\n\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(childCollectionNode.parent.results, parentResult => {\n            cleanObjectForMetaFilters(parentResult, linkStorageField, metaFiltersTest);\n        })\n    }\n\n    if (isMeta && linker.isMany()) {\n        // This case is treated differently because we get an array response from the pipeline.\n\n        _.each(childCollectionNode.parent.results, parentResult => {\n            parentResult[linkName] = parentResult[linkName] || [];\n\n            const eligibleAggregateResults = _.filter(aggregateResults, aggregateResult => {\n                return _.contains(aggregateResult._id, parentResult._id)\n            });\n\n            if (eligibleAggregateResults.length) {\n                const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\n\n                _.each(datas, data => {\n                    _.each(data, item => {\n                        parentResult[linkName].push(item)\n                    })\n                });\n            }\n        });\n\n        _.each(aggregateResults, aggregateResult => {\n            _.each(aggregateResult.data, item => allResults.push(item))\n        });\n    } else {\n        _.each(aggregateResults, aggregateResult => {\n            let parentResult = _.find(childCollectionNode.parent.results, (result) => {\n                return result._id == aggregateResult._id;\n            });\n\n            if (parentResult) {\n                parentResult[childCollectionNode.linkName] = aggregateResult.data;\n            }\n\n            _.each(aggregateResult.data, item => {\n                allResults.push(item)\n            });\n        });\n    }\n\n    childCollectionNode.results = allResults;\n}","import createSearchFilters from '../../links/lib/createSearchFilters';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\nimport sift from 'sift';\n\nexport default (childCollectionNode, {limit, skip, metaFilters}) => {\n    const parent = childCollectionNode.parent;\n    const linker = childCollectionNode.linker;\n\n    const strategy = linker.strategy;\n    const isSingle = linker.isSingle();\n    const isMeta = linker.isMeta();\n    const fieldStorage = linker.linkStorageField;\n\n    // cleaning the parent results from a child\n    // this may be the wrong approach but it works for now\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(parent.results, parentResult => {\n            cleanObjectForMetaFilters(parentResult, fieldStorage, metaFiltersTest);\n        })\n    }\n\n    _.each(parent.results, result => {\n        let data = assembleData(childCollectionNode, result, {\n            fieldStorage, strategy, isSingle\n        });\n\n        result[childCollectionNode.linkName] = filterAssembledData(data, {limit, skip})\n    });\n}\n\nfunction filterAssembledData(data, {limit, skip}) {\n    if (limit) {\n        return data.slice(skip, limit);\n    }\n\n    return data;\n}\n\nfunction assembleData(childCollectionNode, result, {fieldStorage, strategy}) {\n    const filters = createSearchFilters(result, fieldStorage, strategy, false);\n\n    return sift(filters, childCollectionNode.results);\n}\n","import { _ } from 'meteor/underscore';\n\nexport default function (childCollectionNode, filters, options, userId) {\n    let containsDottedFields = false;\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const collection = childCollectionNode.collection;\n\n    let pipeline = [];\n\n    if (collection.firewall) {\n        collection.firewall(filters, options, userId);\n    }\n\n    pipeline.push({$match: filters});\n\n    if (options.sort && _.keys(options.sort).length > 0) {\n        pipeline.push({$sort: options.sort})\n    }\n\n    let _id = linkStorageField;\n    if (linker.isMeta()) {\n        _id += '._id';\n    }\n\n    let dataPush = {\n        _id: '$_id'\n    };\n\n    _.each(options.fields, (value, field) => {\n        if (field.indexOf('.') >= 0) {\n            containsDottedFields = true;\n        }\n        const safeField = field.replace('.', '___');\n        dataPush[safeField] = '$' + field\n    });\n\n    if (linker.isMeta()) {\n        dataPush[linkStorageField] = '$' + linkStorageField;\n    }\n\n    pipeline.push({\n        $group: {\n            _id: \"$\" + _id,\n            data: {\n                $push: dataPush\n            }\n        }\n    });\n\n    if (options.limit || options.skip) {\n        let $slice = [\"$data\"];\n        if (options.skip) $slice.push(options.skip);\n        if (options.limit) $slice.push(options.limit);\n\n        pipeline.push({\n            $project: {\n                _id: 1,\n                data: {$slice}\n            }\n        })\n    }\n\n    return {pipeline, containsDottedFields};\n}","export const SAFE_DOTTED_FIELD_REPLACEMENT = '___';","import applyProps from '../lib/applyProps.js';\nimport prepareForDelivery from '../lib/prepareForDelivery.js';\nimport storeHypernovaResults from './storeHypernovaResults.js';\n\nfunction hypernova(collectionNode, userId) {\n    _.each(collectionNode.collectionNodes, childCollectionNode => {\n        let {filters, options} = applyProps(childCollectionNode);\n\n        storeHypernovaResults(childCollectionNode, userId);\n        hypernova(childCollectionNode, userId);\n    });\n}\n\nexport default function hypernovaInit(collectionNode, userId, config = {}) {\n    const bypassFirewalls = config.bypassFirewalls || false;\n    const params = config.params || {};\n\n    let {filters, options} = applyProps(collectionNode);\n\n    const collection = collectionNode.collection;\n\n    collectionNode.results = collection.find(filters, options, userId).fetch();\n\n    const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\n    hypernova(collectionNode, userIdToPass);\n\n    prepareForDelivery(collectionNode, params);\n\n    return collectionNode.results;\n}\n","import applyProps from '../lib/applyProps.js';\nimport AggregateFilters from './aggregateSearchFilters.js';\nimport assemble from './assembler.js';\nimport assembleAggregateResults from './assembleAggregateResults.js';\nimport buildAggregatePipeline from './buildAggregatePipeline.js';\nimport snapBackDottedFields from './lib/snapBackDottedFields';\n\nexport default function storeHypernovaResults(childCollectionNode, userId) {\n    if (childCollectionNode.parent.results.length === 0) {\n        return childCollectionNode.results = [];\n    }\n\n    let {filters, options} = applyProps(childCollectionNode);\n\n    const metaFilters = filters.$meta;\n    const aggregateFilters = new AggregateFilters(childCollectionNode, metaFilters);\n    delete filters.$meta;\n\n    const linker = childCollectionNode.linker;\n    const isVirtual = linker.isVirtual();\n    const collection = childCollectionNode.collection;\n\n    _.extend(filters, aggregateFilters.create());\n\n    // if it's not virtual then we retrieve them and assemble them here.\n    if (!isVirtual) {\n        const filteredOptions = _.omit(options, 'limit');\n\n        childCollectionNode.results = collection.find(filters, filteredOptions, userId).fetch();\n\n        assemble(childCollectionNode, {\n            ...options,\n            metaFilters\n        });\n    } else {\n        // virtuals arrive here\n        let {pipeline, containsDottedFields} = buildAggregatePipeline(childCollectionNode, filters, options, userId);\n\n        let aggregateResults = collection.aggregate(pipeline, {explains: true});\n\n        /**\n         * If in aggregation it contains '.', we replace it with a custom string '___'\n         * And then after aggregation is complete we need to snap-it back to how it was.\n         */\n        if (containsDottedFields) {\n            snapBackDottedFields(aggregateResults);\n        }\n\n        assembleAggregateResults(childCollectionNode, aggregateResults, metaFilters);\n    }\n}\n","export default function (object, field, metaFiltersTest) {\n    if (object[field]) {\n        if (_.isArray(object[field])) {\n            object[field] = object[field].filter(metaFiltersTest)\n        } else {\n            if (!metaFiltersTest(object[field])) {\n                object[field] = null;\n            }\n        }\n    }\n}","import {SAFE_DOTTED_FIELD_REPLACEMENT} from '../constants';\nimport dot from 'dot-object';\n\nexport default function (aggregationResult) {\n    aggregationResult.forEach(result => {\n        result.data = result.data.map(document => {\n            _.each(document, (value, key) => {\n                if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n                    document[key.replace(SAFE_DOTTED_FIELD_REPLACEMENT, '.')] = value;\n                    delete document[key];\n                }\n            });\n\n            return dot.object(document);\n        })\n    })\n}","const restrictOptions = [\n    'disableOplog',\n    'pollingIntervalMs',\n    'pollingThrottleMs'\n];\n\nexport default function applyProps(node) {\n    let filters = _.extend({}, node.props.$filters);\n    let options = _.extend({}, node.props.$options);\n\n    options = _.omit(options, ...restrictOptions);\n    options.fields = options.fields || {};\n\n    node.applyFields(filters, options);\n\n    return {filters, options};\n}\n","export default (method, myParameters) => {\n    return new Promise((resolve, reject) => {\n        Meteor.call(method, myParameters, (err, res) => {\n            if (err) reject(err.reason || 'Something went wrong.');\n\n            resolve(res);\n        });\n    });\n};","import CollectionNode from '../nodes/collectionNode.js';\nimport FieldNode from '../nodes/fieldNode.js';\nimport ReducerNode from '../nodes/reducerNode.js';\nimport dotize from './dotize.js';\nimport createReducers from '../reducers/lib/createReducers';\n\nconst specialFields = [\n    '$filters',\n    '$options',\n    '$postFilters',\n    '$postOptions',\n    '$postFilter'\n];\n\n/**\n * Creates node objects from the body. The root is always a collection node.\n *\n * @param root\n */\nexport function createNodes(root) {\n    // this is a fix for phantomjs tests (don't really understand it.)\n    if (!_.isObject(root.body)) {\n        return;\n    }\n\n    _.each(root.body, (body, fieldName) => {\n        if (!body) {\n            return;\n        }\n\n        // if it's a prop\n        if (_.contains(specialFields, fieldName)) {\n            root.addProp(fieldName, body);\n\n            return;\n        }\n\n        // workaround, see https://github.com/cult-of-coders/grapher/issues/134\n        // TODO: find another way to do this\n        if (root.collection.default) {\n          root.collection = root.collection.default;\n        }\n\n        // checking if it is a link.\n        let linker = root.collection.getLinker(fieldName);\n\n        if (linker) {\n            // check if it is a cached link\n            // if yes, then we need to explicitly define this at collection level\n            // so when we transform the data for delivery, we move it to the link name\n            if (linker.isDenormalized()) {\n                if (linker.isSubBodyDenormalized(body)) {\n                    handleDenormalized(root, linker, body, fieldName);\n                    return;\n                }\n            }\n\n            let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n            root.add(subroot, linker);\n\n            createNodes(subroot);\n            return;\n        }\n\n        // checking if it's a reducer\n        const reducer = root.collection.getReducer(fieldName);\n\n        if (reducer) {\n            let reducerNode = new ReducerNode(fieldName, reducer);\n            root.add(reducerNode);\n        }\n\n        // it's most likely a field then\n        addFieldNode(body, fieldName, root);\n    });\n\n    createReducers(root);\n\n    if (root.fieldNodes.length === 0) {\n        root.add(new FieldNode('_id', 1));\n    }\n}\n\n/**\n * @param body\n * @param fieldName\n * @param root\n */\nexport function addFieldNode(body, fieldName, root) {\n    // it's not a link and not a special variable => we assume it's a field\n    if (_.isObject(body)) {\n        let dotted = dotize.convert({[fieldName]: body});\n        _.each(dotted, (value, key) => {\n            root.add(new FieldNode(key, value));\n        });\n    } else {\n        let fieldNode = new FieldNode(fieldName, body);\n        root.add(fieldNode);\n    }\n}\n\n/**\n * @param collection\n * @param body\n * @returns {CollectionNode}\n */\nexport default function (collection, body) {\n    let root = new CollectionNode(collection, body);\n    createNodes(root);\n\n    return root;\n};\n\n/**\n * Ads denormalization config properly, including _id\n *\n * @param root\n * @param linker\n * @param body\n * @param fieldName\n */\nfunction handleDenormalized(root, linker, body, fieldName) {\n    Object.assign(body, {_id: 1});\n\n    const cacheField = linker.linkConfig.denormalize.field;\n    root.snapCache(cacheField, fieldName);\n\n    // if it's one and direct also include the link storage\n    if (!linker.isMany() && !linker.isVirtual()) {\n        addFieldNode(1, linker.linkStorageField, root);\n    }\n\n    addFieldNode(body, cacheField, root);\n}","// https://github.com/vardars/dotize\nexport default dotize = {};\n\ndotize.convert = function(obj, prefix) {\n    if ((!obj || typeof obj != \"object\") && !Array.isArray(obj)) {\n        if (prefix) {\n            var newObj = {};\n            newObj[prefix] = obj;\n            return newObj;\n        } else {\n            return obj;\n        }\n    }\n\n    var newObj = {};\n\n    function recurse(o, p, isArrayItem) {\n        for (var f in o) {\n            if (o[f] && typeof o[f] === \"object\") {\n                if (Array.isArray(o[f])) {\n                    if (isEmptyArray(o[f])) {\n                        newObj[getFieldName(f, p, true)] = o[f]; // empty array\n                    } else {\n                        newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\n                    }\n                } else {\n                    if (isArrayItem) {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p, true)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\n                        }\n                    } else {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p)); // object\n                        }\n                    }\n                }\n            } else {\n                if (isArrayItem || isNumber(f)) {\n                    newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\n                } else {\n                    newObj[getFieldName(f, p)] = o[f]; // primitive\n                }\n            }\n        }\n\n        if (isEmptyObj(newObj))\n            return obj;\n\n        return newObj;\n    }\n\n    function isNumber(f) {\n        return !isNaN(parseInt(f));\n    }\n\n    function isEmptyObj(obj) {\n        for (var prop in obj) {\n            if (Object.hasOwnProperty.call(obj, prop))\n                return false;\n        }\n\n        return true;\n    }\n\n    function isEmptyArray(o) {\n        if (Array.isArray(o) && o.length == 0)\n            return true;\n        return false;\n    }\n\n    function getFieldName(field, prefix, isArrayItem, isArray) {\n        if (isArray)\n            return (prefix ? prefix : \"\") + (isNumber(field) ? \"[\" + field + \"]\" : \".\" + field);\n        else if (isArrayItem)\n            return (prefix ? prefix : \"\") + \"[\" + field + \"]\";\n        else\n            return (prefix ? prefix + \".\" : \"\") + field;\n    }\n\n    return recurse(obj, prefix, Array.isArray(obj));\n};","import dot from 'dot-object';\nimport {_} from 'meteor/underscore';\n\n/**\n * Given a named query that has a specific body, you can query its subbody\n * This performs an intersection of the bodies allowed in each\n *\n * @param allowedBody\n * @param clientBody\n */\nexport default function (allowedBody, clientBody) {\n    const allowedBodyDot = _.keys(dot.dot(allowedBody));\n    const clientBodyDot = _.keys(dot.dot(clientBody));\n\n    const intersection = _.intersection(allowedBodyDot, clientBodyDot);\n\n    const build = {};\n    intersection.forEach(intersectedField => {\n        build[intersectedField] = 1;\n    });\n\n    return dot.object(build);\n}","// 1. Clone children with meta relationships\n// 2. Apply $metadata to children\n// 3. Removes link storage (if not specified)\n// 4. Stores oneResult links as a single object instead of array\nimport applyReducers from '../reducers/lib/applyReducers';\nimport cleanReducerLeftovers from '../reducers/lib/cleanReducerLeftovers';\nimport sift from 'sift';\nimport {Minimongo} from 'meteor/minimongo';\n\nexport default (node, params) => {\n    snapBackCaches(node);\n    applyReducers(node, params);\n    cleanReducerLeftovers(node);\n\n    _.each(node.collectionNodes, collectionNode => {\n        cloneMetaChildren(collectionNode, node.results)\n    });\n\n    _.each(node.collectionNodes, collectionNode => {\n        assembleMetadata(collectionNode, node.results)\n    });\n\n    removeLinkStorages(node, node.results);\n    storeOneResults(node, node.results);\n    applyPostFilters(node);\n    applyPostOptions(node);\n    applyPostFilter(node, params);\n}\n\nexport function applyPostFilters(node) {\n    const postFilters = node.props.$postFilters;\n    if (postFilters) {\n        node.results = sift(postFilters, node.results);\n    }\n}\n\nexport function applyPostOptions(node) {\n    const options = node.props.$postOptions;\n    if (options) {\n        if (options.sort) {\n            const sorter = new Minimongo.Sorter(options.sort);\n            node.results.sort(sorter.getComparator());\n        }\n        if (options.limit || options.skip) {\n            const start = options.skip || 0;\n            const end = options.limit ? options.limit + start : node.results.length;\n            node.results = node.results.slice(start, end);\n        }\n    }\n}\n\n\n/**\n * Optionally applies a post filtering option\n */\nfunction applyPostFilter(node, params) {\n    if (node.props.$postFilter) {\n        const filter = node.props.$postFilter;\n\n        if (_.isArray(filter)) {\n            filter.forEach(f => {\n                node.results = f(node.results, params);\n            })\n        } else {\n            node.results = filter(node.results, params);\n        }\n    }\n}\n\nexport function removeLinkStorages(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    _.each(node.collectionNodes, collectionNode => {\n        const removeStorageField = collectionNode.shouldCleanStorage;\n        _.each(sameLevelResults, result => {\n            if (removeStorageField) {\n                delete result[collectionNode.linkStorageField];\n            }\n\n            removeLinkStorages(collectionNode, result[collectionNode.linkName]);\n        })\n    })\n}\n\nexport function storeOneResults(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(sameLevelResults, result => {\n            storeOneResults(collectionNode, result[collectionNode.linkName]);\n        });\n\n        if (collectionNode.isOneResult) {\n            sameLevelResults.forEach(result => {\n                if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\n                    result[collectionNode.linkName] = result[collectionNode.linkName]\n                        ? _.first(result[collectionNode.linkName])\n                        : undefined;\n                }\n            })\n        }\n    })\n}\n\nfunction cloneMetaChildren(node, parentResults) {\n    if (!parentResults) {\n        return;\n    }\n\n    const linkName = node.linkName;\n    const isMeta = node.isMeta;\n\n    parentResults.forEach(parentResult => {\n        if (isMeta && parentResult[linkName]) {\n            parentResult[linkName] = parentResult[linkName].map(object => {\n                return Object.assign({}, object);\n            });\n        }\n\n        node.collectionNodes.forEach(collectionNode => {\n            cloneMetaChildren(collectionNode, parentResult[linkName]);\n        });\n    });\n}\n\nexport function assembleMetadata(node, parentResults) {\n    // assembling metadata is depth first\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(parentResults, result => {\n            assembleMetadata(collectionNode, result[node.linkName])\n        });\n    });\n\n    if (node.isMeta) {\n        if (node.isVirtual) {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n\n                _.each(childResult, object => {\n                    const storage = object[node.linkStorageField];\n\n                    storeMetadata(object, parentResult, storage, true);\n                });\n            })\n        } else {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n                const storage = parentResult[node.linkStorageField];\n\n                _.each(childResult, object => {\n                    storeMetadata(object, parentResult, storage, false);\n                });\n            })\n        }\n    }\n}\n\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\n    if (isVirtual) {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id')\n    } else {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == element._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id');\n    }\n}\n\nfunction snapBackCaches(node) {\n    node.collectionNodes.forEach(collectionNode => {\n        snapBackCaches(collectionNode);\n    });\n\n    if (!_.isEmpty(node.snapCaches)) {\n        // process stuff\n        _.each(node.snapCaches, (linkName, cacheField) => {\n            const isSingle = _.contains(node.snapCachesSingles, cacheField);\n            const linker = node.collection.getLinker(linkName);\n            // we do this because for one direct and one meta direct, id is not stored\n            const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\n\n            node.results.forEach(result => {\n                if (result[cacheField]) {\n                    if (shoudStoreLinkStorage) {\n                        Object.assign(result[cacheField], {\n                            _id: linker.isMeta()\n                                ? result[linker.linkStorageField]._id\n                                : result[linker.linkStorageField]\n                        });\n                    }\n\n                    if (isSingle && _.isArray(result[cacheField])) {\n                        result[linkName] = _.first(result[cacheField]);\n                    } else {\n                        result[linkName] = result[cacheField];\n                    }\n\n                    delete result[cacheField];\n                }\n            })\n        })\n    }\n}\n","import {check, Match} from 'meteor/check';\nimport deepClone from 'lodash.clonedeep';\n\nfunction defaultFilterFunction({\n    filters,\n    options,\n    params\n}) {\n    if (params.filters) {\n        Object.assign(filters, params.filters);\n    }\n    if (params.options) {\n        Object.assign(options, params.options);\n    }\n}\n\nfunction applyFilterRecursive(data, params = {}, isRoot = false) {\n    if (isRoot && !_.isFunction(data.$filter)) {\n        data.$filter = defaultFilterFunction;\n    }\n\n    if (data.$filter) {\n        check(data.$filter, Match.OneOf(Function, [Function]));\n\n        data.$filters = data.$filters || {};\n        data.$options = data.$options || {};\n\n        if (_.isArray(data.$filter)) {\n            data.$filter.forEach(filter => {\n                filter.call(null, {\n                    filters: data.$filters,\n                    options: data.$options,\n                    params: params\n                })\n            });\n        } else {\n            data.$filter({\n                filters: data.$filters,\n                options: data.$options,\n                params: params\n            });\n        }\n\n        data.$filter = null;\n        delete(data.$filter);\n    }\n\n    _.each(data, (value, key) => {\n        if (_.isObject(value)) {\n            return applyFilterRecursive(value, params);\n        }\n    })\n}\n\nfunction applyPagination(body, _params) {\n    if (body['$paginate'] && _params) {\n        if (!body.$options) {\n            body.$options = {};\n        }\n\n        if (_params.limit) {\n            _.extend(body.$options, {\n                limit: _params.limit\n            })\n        }\n\n        if (_params.skip) {\n            _.extend(body.$options, {\n                skip: _params.skip\n            })\n        }\n\n        delete body['$paginate'];\n    }\n}\n\nexport default (_body, _params = {}) => {\n    let body = deepClone(_body);\n    let params = deepClone(_params);\n\n    applyPagination(body, params);\n    applyFilterRecursive(body, params, true);\n\n    return body;\n}\n","import applyProps from './applyProps.js';\n\nfunction compose(node, userId) {\n    return {\n        find(parent) {\n            if (parent) {\n                let {filters, options} = applyProps(node);\n\n                // composition\n                let linker = node.linker;\n                let accessor = linker.createLink(parent);\n\n                // the rule is this, if a child I want to fetch is virtual, then I want to fetch the link storage of those fields\n                if (linker.isVirtual()) {\n                    options.fields = options.fields || {};\n                    _.extend(options.fields, {\n                        [linker.linkStorageField]: 1\n                    });\n                }\n\n                return accessor.find(filters, options, userId);\n            }\n        },\n\n        children: _.map(node.collectionNodes, n => compose(n, userId))\n    }\n}\n\nexport default (node, userId, config = {bypassFirewalls: false}) => {\n    return {\n        find() {\n            let {filters, options} = applyProps(node);\n\n            return node.collection.find(filters, options, userId);\n        },\n\n        children: _.map(node.collectionNodes, n => {\n            const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\n\n            return compose(n, userIdToPass);\n        })\n    }\n}","import applyProps from './applyProps.js';\nimport { assembleMetadata, removeLinkStorages, storeOneResults } from './prepareForDelivery';\nimport prepareForDelivery from './prepareForDelivery';\n\n/**\n * This is always run client side to build the data graph out of client-side collections.\n *\n * @param node\n * @param parentObject\n * @returns {*}\n */\nfunction fetch(node, parentObject) {\n    let {filters, options} = applyProps(node);\n\n    let results = [];\n\n    if (parentObject) {\n        let accessor = node.linker.createLink(parentObject, node.collection);\n\n        if (node.isVirtual) {\n            options.fields = options.fields || {};\n            _.extend(options.fields, {\n                [node.linkStorageField]: 1\n            });\n        }\n\n        results = accessor.find(filters, options).fetch();\n    } else {\n        results = node.collection.find(filters, options).fetch();\n    }\n\n    _.each(node.collectionNodes, collectionNode => {\n        _.each(results, result => {\n            result[collectionNode.linkName] = fetch(collectionNode, result);\n            //delete result[node.linker.linkStorageField];\n        })\n    });\n\n    return results;\n}\n\nexport default (node, params) => {\n    node.results = fetch(node);\n\n    prepareForDelivery(node, params);\n\n    return node.results;\n}\n","import FieldNode from './fieldNode.js';\nimport ReducerNode from './reducerNode.js';\nimport deepClone from 'lodash.clonedeep';\nimport {check, Match} from 'meteor/check';\n\nexport default class CollectionNode {\n    constructor(collection, body = {}, linkName = null) {\n        if (collection && !_.isObject(body)) {\n            throw new Meteor.Error('invalid-body', 'Every collection link should have its body defined as an object.');\n        }\n\n        this.body = deepClone(body);\n        this.linkName = linkName;\n        this.collection = collection;\n\n        this.nodes = [];\n        this.props = {};\n        this.parent = null;\n        this.linker = null;\n        this.linkStorageField = null;\n        this.scheduledForDeletion = false;\n        this.reducers = [];\n        this.results = [];\n        this.snapCaches = {}; // {cacheField: linkName}\n        this.snapCachesSingles = []; // [cacheField1, cacheField2]\n    }\n\n    get collectionNodes() {\n        return _.filter(this.nodes, n => n instanceof CollectionNode)\n    }\n\n    get fieldNodes() {\n        return _.filter(this.nodes, n => n instanceof FieldNode);\n    }\n\n    get reducerNodes() {\n        return _.filter(this.nodes, n => n instanceof ReducerNode);\n    }\n\n    /**\n     * Adds children to itself\n     *\n     * @param node\n     * @param linker\n     */\n    add(node, linker) {\n        node.parent = this;\n\n        if (linker) {\n            node.linker = linker;\n            node.linkStorageField = linker.linkStorageField;\n            node.isMeta = linker.isMeta();\n            node.isVirtual = linker.isVirtual();\n            node.isOneResult = linker.isOneResult();\n            node.shouldCleanStorage = this._shouldCleanStorage(node);\n        }\n\n        this.nodes.push(node);\n    }\n\n    /**\n     * @param prop\n     * @param value\n     */\n    addProp(prop, value) {\n        if (prop === '$postFilter') {\n            check(value, Match.OneOf(Function, [Function]))\n        }\n\n        _.extend(this.props, {\n            [prop]: value\n        });\n    }\n\n    /**\n     * @param _node\n     */\n    remove(_node) {\n        this.nodes = _.filter(this.nodes, node => _node !== node);\n    }\n\n    /**\n     * @param filters\n     * @param options\n     */\n    applyFields(filters, options) {\n        let hasAddedAnyField = false;\n\n        _.each(this.fieldNodes, n => {\n            hasAddedAnyField = true;\n            n.applyFields(options.fields)\n        });\n\n        // it will only get here if it has collectionNodes children\n        _.each(this.collectionNodes, (collectionNode) => {\n            let linker = collectionNode.linker;\n\n            if (linker && !linker.isVirtual()) {\n                options.fields[linker.linkStorageField] = 1;\n                hasAddedAnyField = true;\n            }\n        });\n\n        // if he selected filters, we should automatically add those fields\n        _.each(filters, (value, field) => {\n            // special handling for the $meta filter and conditional operators\n            if (!_.contains(['$or', '$nor', '$not', '$and', '$meta'], field)) {\n                // if the field or the parent of the field already exists, don't add it\n                if (!_.has(options.fields, field.split('.')[0])){\n                    hasAddedAnyField = true;\n                    options.fields[field] = 1;\n                }\n            }\n        });\n\n        if (!hasAddedAnyField) {\n            options.fields = {_id: 1};\n        }\n    }\n\n    /**\n     * @param fieldName\n     * @returns {boolean}\n     */\n    hasField(fieldName) {\n        return !!_.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName\n        })\n    }\n\n    /**\n     * @param fieldName\n     * @returns {FieldNode}\n     */\n    getField(fieldName) {\n        return _.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasCollectionNode(name) {\n        return !!_.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasReducerNode(name) {\n        return !!_.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {ReducerNode}\n     */\n    getReducerNode(name) {\n        return _.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {CollectionNode}\n     */\n    getCollectionNode(name) {\n        return _.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @returns {*}\n     */\n    getName() {\n        return this.linkName\n            ? this.linkName\n            : (this.collection ? this.collection._name : 'N/A');\n    }\n\n    /**\n     * This is used for caching links\n     *\n     * @param cacheField\n     * @param subLinkName\n     */\n    snapCache(cacheField, subLinkName) {\n        this.snapCaches[cacheField] = subLinkName;\n\n        if (this.collection.getLinker(subLinkName).isOneResult()) {\n            this.snapCachesSingles.push(cacheField);\n        }\n    }\n\n    /**\n     * This method verifies whether to remove the linkStorageField form the results\n     * unless you specify it in your query.\n     *\n     * @param node\n     * @returns {boolean}\n     * @private\n     */\n    _shouldCleanStorage(node) {\n        if (node.linkStorageField === '_id') {\n            return false;\n        } else {\n            if (node.isVirtual) {\n                return !node.hasField(node.linkStorageField);\n            } else {\n                return !this.hasField(node.linkStorageField);\n            }\n        }\n    }\n}\n","export default class FieldNode {\n    constructor(name, body) {\n        this.name = name;\n        this.body = _.isObject(body) ? 1 : body;\n        this.scheduledForDeletion = false;\n    }\n\n    applyFields(fields) {\n        fields[this.name] = this.body;\n    }\n}","export default class ReducerNode {\n    constructor(name, {body, reduce}) {\n        this.name = name;\n        this.body = body;\n        this.reduceFunction = reduce;\n    }\n\n    /**\n     * When computing we also pass the parameters\n     * \n     * @param {*} object \n     * @param {*} args \n     */\n    compute(object, ...args) {\n        object[this.name] = this.reduce.call(this, object, ...args);\n    }\n\n    reduce(object, ...args) {\n        return this.reduceFunction.call(this, object, ...args);\n    }\n}","import {check} from 'meteor/check';\n\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * @param data\n     */\n    addReducers(data) {\n        if (!this[storage]) {\n            this[storage] = {};\n        }\n\n        _.each(data, (reducerConfig, reducerName) => {\n            if (!this[reducerConfig]) {\n                this[reducerConfig] = {};\n            }\n\n            if (this.getLinker(reducerName)) {\n                throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${this._name} collection`)\n            }\n\n            if (this[reducerConfig][reducerName]) {\n                throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it was already added to ${this._name} collection`)\n            }\n\n            check(reducerConfig, {\n                body: Object,\n                reduce: Function\n            });\n\n            _.extend(this[storage], {\n                [reducerName]: reducerConfig\n            });\n        });\n    },\n\n    /**\n     * @param name\n     * @returns {*}\n     */\n    getReducer(name) {\n        if (this[storage]) {\n            return this[storage][name];\n        }\n    }\n});","export default function applyReducers(root, params) {\n    _.each(root.collectionNodes, node => {\n        applyReducers(node, params);\n    });\n\n    _.each(root.reducerNodes, reducerNode => {\n        root.results.forEach(result => {\n            reducerNode.compute(result, params);\n        });\n    });\n}","/**\n * @param root\n */\nexport default function cleanReducerLeftovers(root) {\n    _.each(root.collectionNodes, node => {\n        if (node.scheduledForDeletion) {\n            root.results.forEach(result => {\n                delete result[node.linkName];\n            })\n        }\n    });\n\n    _.each(root.collectionNodes, node => {\n        cleanReducerLeftovers(node);\n    });\n\n    _.each(root.fieldNodes, node => {\n        if (node.scheduledForDeletion) {\n            cleanNestedFields(node.name.split('.'), root.results);\n        }\n    });\n\n    _.each(root.reducerNodes, node => {\n        if (node.scheduledForDeletion) {\n            root.results.forEach(result => {\n                delete result[node.name];\n            })\n        }\n    });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n *\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results) {\n    const fieldName = parts[0];\n    if (parts.length === 1) {\n\n        results.forEach(result => {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        });\n\n        return;\n    }\n\n    parts.shift();\n    cleanNestedFields(parts, results.map(result => result[fieldName]));\n\n    results.forEach(result => {\n        if (_.keys(result[fieldName]).length === 0) {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        }\n    })\n}\n","import dot from 'dot-object';\nimport { createNodes } from '../../lib/createGraph';\nimport CollectionNode from '../../nodes/collectionNode';\nimport FieldNode from '../../nodes/fieldNode';\nimport ReducerNode from '../../nodes/reducerNode';\nimport embedReducerWithLink from './embedReducerWithLink';\n\nexport default function addReducers(root) {\n    // we add reducers last, after we have added all the fields.\n    root.reducerNodes.forEach(reducer => {\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(root, fieldName, body);\n        })\n    });\n}\n\n/**\n * @param root\n * @param fieldName\n * @param body\n */\nexport function handleAddElement(root, fieldName, body) {\n    // if it's a link\n    const collection = root.collection;\n    const linker = collection.getLinker(fieldName);\n    if (linker) {\n        return handleAddLink(fieldName, body, root, linker);\n    }\n\n    const reducer = collection.getReducer(fieldName);\n    if (reducer) {\n        return handleAddReducer(fieldName, reducer, root);\n    }\n\n    // we assume it's a field in this case\n    return handleAddField(fieldName, body, root);\n}\n\n/**\n * @param fieldName\n * @param reducer\n * @param root\n */\nexport function handleAddReducer(fieldName, reducer, root) {\n    if (!root.hasReducerNode(fieldName)) {\n        let reducerNode = new ReducerNode(fieldName, reducer);\n        root.add(reducerNode);\n        reducerNode.scheduledForDeletion = true;\n\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(root, fieldName, body);\n        })\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n * @param linker\n */\nexport function handleAddLink(fieldName, body, root, linker) {\n    if (root.hasCollectionNode(fieldName)) {\n        const collectionNode = root.getCollectionNode(fieldName);\n\n        embedReducerWithLink(body, collectionNode);\n    } else {\n        // add\n        let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n        collectionNode.scheduledForDeletion = true;\n        root.add(collectionNode, linker);\n\n        createNodes(collectionNode);\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n */\nexport function handleAddField(fieldName, body, root) {\n    if (_.isObject(body)) {\n        // if reducer specifies a nested field\n        const dots = dot.dot({\n            [fieldName]: body\n        });\n\n        _.each(dots, (value, key) => {\n            if (!root.hasField(key)) {\n                let fieldNode = new FieldNode(key, value);\n                fieldNode.scheduledForDeletion = true;\n\n                root.add(fieldNode);\n            }\n        });\n    } else {\n        // if reducer does not specify a nested field, and the field does not exist.\n        if (!root.hasField(fieldName)) {\n            let fieldNode = new FieldNode(fieldName, body);\n            fieldNode.scheduledForDeletion = true;\n\n            root.add(fieldNode);\n        }\n    }\n}\n","import {handleAddField, handleAddElement, handleAddReducer} from './createReducers';\n\n/**\n * Embeds the reducer body with a collection body\n * @param reducerBody\n * @param collectionNode\n */\nexport default function embedReducerWithLink(reducerBody, collectionNode) {\n    _.each(reducerBody, (value, key) => {\n        const collection = collectionNode.collection;\n\n        if (_.isObject(value)) {\n            // nested field or link\n            if (collectionNode.body[key]) {\n                // if it exists\n                const linker = collection.getLinker(key);\n\n                // if it's a link\n                if (linker) {\n                    embedReducerWithLink(value, collectionNode.getCollectionNode(key));\n                    return;\n                }\n\n                handleAddField(key, value, collectionNode);\n            } else {\n                // does not exist, so it may be a link/reducer/field\n                handleAddElement(root, key, value);\n            }\n        } else {\n            // if this field or other reducer exists within the collection\n\n            if (!collectionNode.body[key]) {\n                // can only be field or another reducer for this.\n                const reducer = collection.getReducer(key);\n                if (reducer) {\n                    // if it's another reducer\n                    return handleAddReducer(key, reducer, collectionNode);\n                }\n\n                return handleAddField(key, value, collectionNode);\n            }\n        }\n    })\n}"]}}]