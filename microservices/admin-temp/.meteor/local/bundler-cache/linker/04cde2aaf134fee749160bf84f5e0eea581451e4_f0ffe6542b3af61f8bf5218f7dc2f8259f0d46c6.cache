[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar analytics;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"okgrow:analytics\":{\"server\":{\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// packages/okgrow_analytics/server/main.js                                 //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nmodule.watch(require(\"./browser-policy\"));\nmodule.watch(require(\"./publications\"));\n//////////////////////////////////////////////////////////////////////////////\n\n},\"browser-policy.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// packages/okgrow_analytics/server/browser-policy.js                       //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\n/* global Package */if (Package['browser-policy-common']) {\n  const content = Package['browser-policy-common'].BrowserPolicy.content;\n\n  if (content) {\n    content.allowOriginForAll('https://www.google.com/analytics/');\n    content.allowOriginForAll('https://cdn.mxpnl.com');\n  }\n}\n//////////////////////////////////////////////////////////////////////////////\n\n},\"publications.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// packages/okgrow_analytics/server/publications.js                         //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\n// eslint-disable-line import/no-extraneous-dependencies, import/extensions\nMeteor.publish(null, function analyticsUsersPublish() {\n  if (this.userId) {\n    const self = this;\n    const query = Meteor.users.find({\n      _id: this.userId\n    }, {\n      fields: {\n        emails: 1,\n        'services.google.email': 1,\n        'services.github.email': 1,\n        'services.facebook.email': 1\n      }\n    });\n\n    Mongo.Collection._publishCursor(query, self, 'AnalyticsUsers');\n\n    return self.ready();\n  }\n\n  this.ready();\n});\n//////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nvar exports = require(\"./node_modules/meteor/okgrow:analytics/server/main.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['okgrow:analytics'] = exports, {\n  analytics: analytics\n});\n\n})();\n","servePath":"/packages/okgrow_analytics.js","sourceMap":{"version":3,"sources":["packages/okgrow:analytics/server/main.js","packages/okgrow:analytics/server/browser-policy.js","packages/okgrow:analytics/server/publications.js"],"names":["module","watch","require","Package","content","BrowserPolicy","allowOriginForAll","Meteor","v","Mongo","publish","analyticsUsersPublish","userId","self","query","users","find","_id","fields","emails","Collection","_publishCursor","ready"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb;AAA0CF,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,E;;;;;;;;;;;ACA1C,oBAEA,IAAIC,QAAQ,uBAAR,CAAJ,EAAsC;AACpC,QAAMC,UAAUD,QAAQ,uBAAR,EAAiCE,aAAjC,CAA+CD,OAA/D;;AACA,MAAIA,OAAJ,EAAa;AACXA,YAAQE,iBAAR,CAA0B,mCAA1B;AACAF,YAAQE,iBAAR,CAA0B,uBAA1B;AACD;AACF,C;;;;;;;;;;;ACRD,IAAIC,MAAJ;AAAWP,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACK,SAAOC,CAAP,EAAS;AAACD,aAAOC,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIC,KAAJ;AAAUT,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACO,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAC9C;AAEtCD,OAAOG,OAAP,CAAe,IAAf,EAAqB,SAASC,qBAAT,GAAiC;AACpD,MAAI,KAAKC,MAAT,EAAiB;AACf,UAAMC,OAAO,IAAb;AACA,UAAMC,QAAQP,OAAOQ,KAAP,CACXC,IADW,CACN;AACJC,WAAK,KAAKL;AADN,KADM,EAGT;AACDM,cAAQ;AACNC,gBAAQ,CADF;AAEN,iCAAyB,CAFnB;AAGN,iCAAyB,CAHnB;AAIN,mCAA2B;AAJrB;AADP,KAHS,CAAd;;AAWAV,UAAMW,UAAN,CAAiBC,cAAjB,CAAgCP,KAAhC,EAAuCD,IAAvC,EAA6C,gBAA7C;;AACA,WAAOA,KAAKS,KAAL,EAAP;AACD;;AAED,OAAKA,KAAL;AACD,CAnBD,E","file":"/packages/okgrow_analytics.js","sourcesContent":["import './browser-policy';\nimport './publications';\n","/* global Package */\n\nif (Package['browser-policy-common']) {\n  const content = Package['browser-policy-common'].BrowserPolicy.content;\n  if (content) {\n    content.allowOriginForAll('https://www.google.com/analytics/');\n    content.allowOriginForAll('https://cdn.mxpnl.com');\n  }\n}\n","import { Meteor } from 'meteor/meteor'; // eslint-disable-line import/no-extraneous-dependencies, import/extensions\nimport { Mongo } from 'meteor/mongo'; // eslint-disable-line import/no-extraneous-dependencies, import/extensions\n\nMeteor.publish(null, function analyticsUsersPublish() {\n  if (this.userId) {\n    const self = this;\n    const query = Meteor.users\n      .find({\n        _id: this.userId,\n      }, {\n        fields: {\n          emails: 1,\n          'services.google.email': 1,\n          'services.github.email': 1,\n          'services.facebook.email': 1,\n        },\n      });\n    Mongo.Collection._publishCursor(query, self, 'AnalyticsUsers');\n    return self.ready();\n  }\n\n  this.ready();\n});\n"]}}]