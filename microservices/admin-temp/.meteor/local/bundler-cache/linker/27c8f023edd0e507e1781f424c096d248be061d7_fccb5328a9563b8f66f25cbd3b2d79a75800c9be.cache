[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Mongo = Package.mongo.Mongo;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar LocalCollection = Package.minimongo.LocalCollection;\nvar Minimongo = Package.minimongo.Minimongo;\n\n/* Package-scope variables */\nvar CollectionExtensions;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/lai_collection-extensions/collection-extensions.js                                                   //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n// The collection extensions namespace                                                                           // 1\nCollectionExtensions = {};                                                                                       // 2\n                                                                                                                 // 3\n// Stores all the collection extensions                                                                          // 4\nCollectionExtensions._extensions = [];                                                                           // 5\n                                                                                                                 // 6\n// This is where you would add custom functionality to                                                           // 7\n// Mongo.Collection/Meteor.Collection                                                                            // 8\nCollectionExtensions.addExtension = function(customFunction) {                                                   // 9\n  if (typeof customFunction !== 'function') {                                                                    // 10\n    throw new Meteor.Error(                                                                                      // 11\n      'collection-extension-wrong-argument',                                                                     // 12\n      'You must pass a function \\\n       into CollectionExtensions.addExtension().');                                                              // 14\n  }                                                                                                              // 15\n  CollectionExtensions._extensions.push(customFunction);                                                         // 16\n  // If Meteor.users exists, apply the extension right away                                                      // 17\n  if (typeof Meteor.users !== 'undefined') {                                                                     // 18\n    customFunction.apply(Meteor.users, ['users']);                                                               // 19\n  }                                                                                                              // 20\n};                                                                                                               // 21\n                                                                                                                 // 22\n// Backwards compatibility                                                                                       // 23\nMeteor.addCollectionExtension = function() {                                                                     // 24\n  console.warn('`Meteor.addCollectionExtension` is deprecated, please use `CollectionExtensions.addExtension`');\n  CollectionExtensions.addExtension.apply(null, arguments);                                                      // 26\n};                                                                                                               // 27\n                                                                                                                 // 28\n// Utility function to add a prototype function to your                                                          // 29\n// Meteor/Mongo.Collection object                                                                                // 30\nCollectionExtensions.addPrototype = function(name, customFunction) {                                             // 31\n  if (typeof name !== 'string') {                                                                                // 32\n    throw new Meteor.Error(                                                                                      // 33\n      'collection-extension-wrong-argument',                                                                     // 34\n      'You must pass a string as the first argument \\\n       into CollectionExtensions.addPrototype().');                                                              // 36\n  }                                                                                                              // 37\n  if (typeof customFunction !== 'function') {                                                                    // 38\n    throw new Meteor.Error(                                                                                      // 39\n      'collection-extension-wrong-argument',                                                                     // 40\n      'You must pass a function as the second argument \\\n       into CollectionExtensions.addPrototype().');                                                              // 42\n  }                                                                                                              // 43\n  (typeof Mongo !== 'undefined' ?                                                                                // 44\n    Mongo.Collection :                                                                                           // 45\n    Meteor.Collection).prototype[name] = customFunction;                                                         // 46\n};                                                                                                               // 47\n                                                                                                                 // 48\n// Backwards compatibility                                                                                       // 49\nMeteor.addCollectionPrototype = function() {                                                                     // 50\n  console.warn('`Meteor.addCollectionPrototype` is deprecated, please use `CollectionExtensions.addPrototype`');\n  CollectionExtensions.addPrototype.apply(null, arguments);                                                      // 52\n};                                                                                                               // 53\n                                                                                                                 // 54\n// This is used to reassign the prototype of unfortunately                                                       // 55\n// and unstoppably already instantiated Mongo instances                                                          // 56\n// i.e. Meteor.users                                                                                             // 57\nfunction reassignCollectionPrototype(instance, constr) {                                                         // 58\n  var hasSetPrototypeOf = typeof Object.setPrototypeOf === 'function';                                           // 59\n                                                                                                                 // 60\n  if (!constr) constr = typeof Mongo !== 'undefined' ? Mongo.Collection : Meteor.Collection;                     // 61\n                                                                                                                 // 62\n  // __proto__ is not available in < IE11                                                                        // 63\n  // Note: Assigning a prototype dynamically has performance implications                                        // 64\n  if (hasSetPrototypeOf) {                                                                                       // 65\n    Object.setPrototypeOf(instance, constr.prototype);                                                           // 66\n  } else if (instance.__proto__) {                                                                               // 67\n    instance.__proto__ = constr.prototype;                                                                       // 68\n  }                                                                                                              // 69\n};                                                                                                               // 70\n                                                                                                                 // 71\n// This monkey-patches the Collection constructor                                                                // 72\n// This code is the same monkey-patching code                                                                    // 73\n// that matb33:collection-hooks uses, which works pretty nicely                                                  // 74\nfunction wrapCollection(ns, as) {                                                                                // 75\n  // Save the original prototype                                                                                 // 76\n  if (!as._CollectionPrototype) as._CollectionPrototype = new as.Collection(null);                               // 77\n                                                                                                                 // 78\n  var constructor = as.Collection;                                                                               // 79\n  var proto = as._CollectionPrototype;                                                                           // 80\n                                                                                                                 // 81\n  ns.Collection = function () {                                                                                  // 82\n    var ret = constructor.apply(this, arguments);                                                                // 83\n    // This is where all the collection extensions get processed                                                 // 84\n    processCollectionExtensions(this, arguments);                                                                // 85\n    return ret;                                                                                                  // 86\n  };                                                                                                             // 87\n                                                                                                                 // 88\n  ns.Collection.prototype = proto;                                                                               // 89\n  ns.Collection.prototype.constructor = ns.Collection;                                                           // 90\n                                                                                                                 // 91\n  for (var prop in constructor) {                                                                                // 92\n    if (constructor.hasOwnProperty(prop)) {                                                                      // 93\n      ns.Collection[prop] = constructor[prop];                                                                   // 94\n    }                                                                                                            // 95\n  }                                                                                                              // 96\n};                                                                                                               // 97\n                                                                                                                 // 98\nfunction processCollectionExtensions(self, args) {                                                               // 99\n  // Using old-school operations for better performance                                                          // 100\n  // Please don't judge me ;P                                                                                    // 101\n  var args = args ? [].slice.call(args, 0) : undefined;                                                          // 102\n  var extensions = CollectionExtensions._extensions;                                                             // 103\n  for (var i = 0, len = extensions.length; i < len; i++) {                                                       // 104\n    extensions[i].apply(self, args);                                                                             // 105\n  }                                                                                                              // 106\n};                                                                                                               // 107\n                                                                                                                 // 108\nif (typeof Mongo !== 'undefined') {                                                                              // 109\n  wrapCollection(Meteor, Mongo);                                                                                 // 110\n  wrapCollection(Mongo, Mongo);                                                                                  // 111\n} else {                                                                                                         // 112\n  wrapCollection(Meteor, Meteor);                                                                                // 113\n}                                                                                                                // 114\n                                                                                                                 // 115\nif (typeof Meteor.users !== 'undefined') {                                                                       // 116\n  // Ensures that Meteor.users instanceof Mongo.Collection                                                       // 117\n  reassignCollectionPrototype(Meteor.users);                                                                     // 118\n}                                                                                                                // 119\n                                                                                                                 // 120\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['lai:collection-extensions'] = {}, {\n  CollectionExtensions: CollectionExtensions\n});\n\n})();\n","servePath":"/packages/lai_collection-extensions.js"}]