{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$7","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$9","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/peerlibrary:subscription-scope/server.coffee","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/peerlibrary:subscription-scope/server.coffee","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/peerlibrary:subscription-scope/server.coffee","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/peerlibrary:subscription-scope/server.coffee","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/peerlibrary:subscription-scope/server.coffee"}},"code":"extendPublish(function (name, func, options) {\n  var newFunc;\n\n  newFunc = function (...args) {\n    var enabled, originalAdded, originalChanged, publish, scopeFieldName;\n    publish = this;\n    scopeFieldName = `_sub_${publish._subscriptionId}`;\n    enabled = false;\n\n    publish.enableScope = function () {\n      return enabled = true;\n    };\n\n    originalAdded = publish.added;\n\n    publish.added = function (collectionName, id, fields) {\n      // Add our scoping field.\n      if (enabled) {\n        fields = _.clone(fields);\n        fields[scopeFieldName] = 1;\n      }\n\n      return originalAdded.call(this, collectionName, id, fields);\n    };\n\n    originalChanged = publish.changed;\n\n    publish.changed = function (collectionName, id, fields) {\n      // We do not allow changes to our scoping field.\n      if (enabled && scopeFieldName in fields) {\n        fields = _.clone(fields);\n        delete fields[scopeFieldName];\n      }\n\n      return originalChanged.call(this, collectionName, id, fields);\n    };\n\n    return func.apply(publish, args);\n  };\n\n  return [name, newFunc, options];\n});","map":{"version":3,"sources":["packages/peerlibrary:subscription-scope/server.coffee"],"names":["extendPublish","name","func","options","newFunc","args","enabled","originalAdded","originalChanged","publish","scopeFieldName","_subscriptionId","enableScope","added","collectionName","id","fields","_","clone","call","changed","apply"],"mappings":"AAAAA,aAAa,CAAC,UAASC,IAAT,EAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAC1C,MAAIC,OAAJ;;AACAA,EAAAA,OAAO,GAAG,UAAS,GAAGC,IAAZ,EAAkB;AAC1B,QAAIC,OAAJ,EAAaC,aAAb,EAA4BC,eAA5B,EAA6CC,OAA7C,EAAsDC,cAAtD;AACAD,IAAAA,OAAO,GAAG,IAAV;AACAC,IAAAA,cAAc,GAAI,QAAOD,OAAO,CAACE,eAAgB,EAAjD;AACAL,IAAAA,OAAO,GAAG,KAAV;;AACAG,IAAAA,OAAO,CAACG,WAAR,GAAsB,YAAW;AAC/B,aAAON,OAAO,GAAG,IAAjB;AACD,KAFD;;AAGAC,IAAAA,aAAa,GAAGE,OAAO,CAACI,KAAxB;;AACAJ,IAAAA,OAAO,CAACI,KAAR,GAAgB,UAASC,cAAT,EAAyBC,EAAzB,EAA6BC,MAA7B,EAAqC;AACnD;AACA,UAAIV,OAAJ,EAAa;AACXU,QAAAA,MAAM,GAAGC,CAAC,CAACC,KAAF,CAAQF,MAAR,CAAT;AACAA,QAAAA,MAAM,CAACN,cAAD,CAAN,GAAyB,CAAzB;AACD;;AACD,aAAOH,aAAa,CAACY,IAAd,CAAmB,IAAnB,EAAyBL,cAAzB,EAAyCC,EAAzC,EAA6CC,MAA7C,CAAP;AACD,KAPD;;AAQAR,IAAAA,eAAe,GAAGC,OAAO,CAACW,OAA1B;;AACAX,IAAAA,OAAO,CAACW,OAAR,GAAkB,UAASN,cAAT,EAAyBC,EAAzB,EAA6BC,MAA7B,EAAqC;AACrD;AACA,UAAIV,OAAO,IAAII,cAAc,IAAIM,MAAjC,EAAyC;AACvCA,QAAAA,MAAM,GAAGC,CAAC,CAACC,KAAF,CAAQF,MAAR,CAAT;AACA,eAAOA,MAAM,CAACN,cAAD,CAAb;AACD;;AACD,aAAOF,eAAe,CAACW,IAAhB,CAAqB,IAArB,EAA2BL,cAA3B,EAA2CC,EAA3C,EAA+CC,MAA/C,CAAP;AACD,KAPD;;AAQA,WAAOd,IAAI,CAACmB,KAAL,CAAWZ,OAAX,EAAoBJ,IAApB,CAAP;AACD,GA3BD;;AA4BA,SAAO,CAACJ,IAAD,EAAOG,OAAP,EAAgBD,OAAhB,CAAP;AACD,CA/BY,CAAb","sourcesContent":["extendPublish(function(name, func, options) {\n  var newFunc;\n  newFunc = function(...args) {\n    var enabled, originalAdded, originalChanged, publish, scopeFieldName;\n    publish = this;\n    scopeFieldName = `_sub_${publish._subscriptionId}`;\n    enabled = false;\n    publish.enableScope = function() {\n      return enabled = true;\n    };\n    originalAdded = publish.added;\n    publish.added = function(collectionName, id, fields) {\n      // Add our scoping field.\n      if (enabled) {\n        fields = _.clone(fields);\n        fields[scopeFieldName] = 1;\n      }\n      return originalAdded.call(this, collectionName, id, fields);\n    };\n    originalChanged = publish.changed;\n    publish.changed = function(collectionName, id, fields) {\n      // We do not allow changes to our scoping field.\n      if (enabled && scopeFieldName in fields) {\n        fields = _.clone(fields);\n        delete fields[scopeFieldName];\n      }\n      return originalChanged.call(this, collectionName, id, fields);\n    };\n    return func.apply(publish, args);\n  };\n  return [name, newFunc, options];\n});\n"]},"sourceType":"script","hash":"ef0c31954d7c4d7ac72922da39a4281e1785308c"}
