{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/organisations/server/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/organisations/server/methods.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/organisations/server/methods.js","inputSourceMap":{"version":3,"sources":["imports/core/api/organisations/server/methods.js"],"names":["SecurityService","organisationInsert","organisationUpdate","organisationRemove","addContactToOrgnaisation","addUserToOrganisation","removeUserFromOrganisation","setCommissionRates","OrganisationService","setHandler","context","organisation","checkCurrentUserIsAdmin","insert","organisationId","object","_update","id","remove","contactId","metadata","addLink","linkName","linkId","userId","removeLink","params"],"mappings":"AAAA,OAAOA,eAAP;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,qBALF,EAMEC,0BANF,EAOEC,kBAPF;AASA,OAAOC,mBAAP;AAEAP,kBAAkB,CAACQ,UAAnB,CAA8B,CAACC,OAAD,EAAU;AAAEC,EAAAA;AAAF,CAAV,KAA+B;AAC3DX,EAAAA,eAAe,CAACY,uBAAhB;AACA,SAAOJ,mBAAmB,CAACK,MAApB,CAA2BF,YAA3B,CAAP;AACD,CAHD;AAKAT,kBAAkB,CAACO,UAAnB,CAA8B,CAACC,OAAD,EAAU;AAAEI,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAV,KAAyC;AACrEf,EAAAA,eAAe,CAACY,uBAAhB;AACA,SAAOJ,mBAAmB,CAACQ,OAApB,CAA4B;AAAEC,IAAAA,EAAE,EAAEH,cAAN;AAAsBC,IAAAA;AAAtB,GAA5B,CAAP;AACD,CAHD;AAKAZ,kBAAkB,CAACM,UAAnB,CAA8B,CAACC,OAAD,EAAU;AAAEI,EAAAA;AAAF,CAAV,KAAiC;AAC7Dd,EAAAA,eAAe,CAACY,uBAAhB;AACA,SAAOJ,mBAAmB,CAACU,MAApB,CAA2BJ,cAA3B,CAAP;AACD,CAHD;AAKAV,wBAAwB,CAACK,UAAzB,CAAoC,CAACC,OAAD,EAAU;AAAEI,EAAAA,cAAF;AAAkBK,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAV,KAAsD;AACxFpB,EAAAA,eAAe,CAACY,uBAAhB;AACA,SAAOJ,mBAAmB,CAACa,OAApB,CAA4B;AACjCJ,IAAAA,EAAE,EAAEH,cAD6B;AAEjCQ,IAAAA,QAAQ,EAAE,UAFuB;AAGjCC,IAAAA,MAAM,EAAEJ,SAHyB;AAIjCC,IAAAA;AAJiC,GAA5B,CAAP;AAMD,CARD;AAUAf,qBAAqB,CAACI,UAAtB,CAAiC,CAACC,OAAD,EAAU;AAAEI,EAAAA,cAAF;AAAkBU,EAAAA,MAAlB;AAA0BJ,EAAAA;AAA1B,CAAV,KAAmD;AAClFpB,EAAAA,eAAe,CAACY,uBAAhB;AACA,SAAOJ,mBAAmB,CAACa,OAApB,CAA4B;AACjCJ,IAAAA,EAAE,EAAEH,cAD6B;AAEjCQ,IAAAA,QAAQ,EAAE,OAFuB;AAGjCC,IAAAA,MAAM,EAAEC,MAHyB;AAIjCJ,IAAAA;AAJiC,GAA5B,CAAP;AAMD,CARD;AAUAd,0BAA0B,CAACG,UAA3B,CAAsC,CAACC,OAAD,EAAU;AAAEI,EAAAA,cAAF;AAAkBU,EAAAA;AAAlB,CAAV,KAAyC;AAC7ExB,EAAAA,eAAe,CAACY,uBAAhB;AACA,SAAOJ,mBAAmB,CAACiB,UAApB,CAA+B;AACpCR,IAAAA,EAAE,EAAEH,cADgC;AAEpCQ,IAAAA,QAAQ,EAAE,OAF0B;AAGpCC,IAAAA,MAAM,EAAEC;AAH4B,GAA/B,CAAP;AAKD,CAPD;AASAjB,kBAAkB,CAACE,UAAnB,CAA8B,CAACC,OAAD,EAAUgB,MAAV,KAAqB;AACjD1B,EAAAA,eAAe,CAACY,uBAAhB;AACA,SAAOJ,mBAAmB,CAACD,kBAApB,CAAuCmB,MAAvC,CAAP;AACD,CAHD","sourcesContent":["import SecurityService from '../../security';\nimport {\n  organisationInsert,\n  organisationUpdate,\n  organisationRemove,\n  addContactToOrgnaisation,\n  addUserToOrganisation,\n  removeUserFromOrganisation,\n  setCommissionRates,\n} from '../methodDefinitions';\nimport OrganisationService from './OrganisationService';\n\norganisationInsert.setHandler((context, { organisation }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.insert(organisation);\n});\n\norganisationUpdate.setHandler((context, { organisationId, object }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService._update({ id: organisationId, object });\n});\n\norganisationRemove.setHandler((context, { organisationId }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.remove(organisationId);\n});\n\naddContactToOrgnaisation.setHandler((context, { organisationId, contactId, metadata }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.addLink({\n    id: organisationId,\n    linkName: 'contacts',\n    linkId: contactId,\n    metadata,\n  });\n});\n\naddUserToOrganisation.setHandler((context, { organisationId, userId, metadata }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.addLink({\n    id: organisationId,\n    linkName: 'users',\n    linkId: userId,\n    metadata,\n  });\n});\n\nremoveUserFromOrganisation.setHandler((context, { organisationId, userId }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.removeLink({\n    id: organisationId,\n    linkName: 'users',\n    linkId: userId,\n  });\n});\n\nsetCommissionRates.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.setCommissionRates(params);\n});\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/organisations/server/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/organisations/server/methods.js"}},"code":"let SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet organisationInsert, organisationUpdate, organisationRemove, addContactToOrgnaisation, addUserToOrganisation, removeUserFromOrganisation, setCommissionRates;\nmodule.link(\"../methodDefinitions\", {\n  organisationInsert(v) {\n    organisationInsert = v;\n  },\n\n  organisationUpdate(v) {\n    organisationUpdate = v;\n  },\n\n  organisationRemove(v) {\n    organisationRemove = v;\n  },\n\n  addContactToOrgnaisation(v) {\n    addContactToOrgnaisation = v;\n  },\n\n  addUserToOrganisation(v) {\n    addUserToOrganisation = v;\n  },\n\n  removeUserFromOrganisation(v) {\n    removeUserFromOrganisation = v;\n  },\n\n  setCommissionRates(v) {\n    setCommissionRates = v;\n  }\n\n}, 1);\nlet OrganisationService;\nmodule.link(\"./OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 2);\norganisationInsert.setHandler((context, {\n  organisation\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.insert(organisation);\n});\norganisationUpdate.setHandler((context, {\n  organisationId,\n  object\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService._update({\n    id: organisationId,\n    object\n  });\n});\norganisationRemove.setHandler((context, {\n  organisationId\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.remove(organisationId);\n});\naddContactToOrgnaisation.setHandler((context, {\n  organisationId,\n  contactId,\n  metadata\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.addLink({\n    id: organisationId,\n    linkName: 'contacts',\n    linkId: contactId,\n    metadata\n  });\n});\naddUserToOrganisation.setHandler((context, {\n  organisationId,\n  userId,\n  metadata\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.addLink({\n    id: organisationId,\n    linkName: 'users',\n    linkId: userId,\n    metadata\n  });\n});\nremoveUserFromOrganisation.setHandler((context, {\n  organisationId,\n  userId\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.removeLink({\n    id: organisationId,\n    linkName: 'users',\n    linkId: userId\n  });\n});\nsetCommissionRates.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.setCommissionRates(params);\n});","map":{"version":3,"sources":["imports/core/api/organisations/server/methods.js"],"names":["organisationInsert","organisation","SecurityService","OrganisationService","organisationUpdate","object","id","organisationRemove","organisationId","addContactToOrgnaisation","metadata","linkName","linkId","addUserToOrganisation","removeUserFromOrganisation","userId","setCommissionRates"],"mappings":"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","sourcesContent":["import SecurityService from '../../security';\nimport {\n  organisationInsert,\n  organisationUpdate,\n  organisationRemove,\n  addContactToOrgnaisation,\n  addUserToOrganisation,\n  removeUserFromOrganisation,\n  setCommissionRates,\n} from '../methodDefinitions';\nimport OrganisationService from './OrganisationService';\n\norganisationInsert.setHandler((context, { organisation }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.insert(organisation);\n});\n\norganisationUpdate.setHandler((context, { organisationId, object }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService._update({ id: organisationId, object });\n});\n\norganisationRemove.setHandler((context, { organisationId }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.remove(organisationId);\n});\n\naddContactToOrgnaisation.setHandler((context, { organisationId, contactId, metadata }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.addLink({\n    id: organisationId,\n    linkName: 'contacts',\n    linkId: contactId,\n    metadata,\n  });\n});\n\naddUserToOrganisation.setHandler((context, { organisationId, userId, metadata }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.addLink({\n    id: organisationId,\n    linkName: 'users',\n    linkId: userId,\n    metadata,\n  });\n});\n\nremoveUserFromOrganisation.setHandler((context, { organisationId, userId }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.removeLink({\n    id: organisationId,\n    linkName: 'users',\n    linkId: userId,\n  });\n});\n\nsetCommissionRates.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return OrganisationService.setCommissionRates(params);\n});\n"]},"sourceType":"script","hash":"c01fe07d81bef35ea1bc91e4d4fc8b7b2fa28dd5"}
