{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/server/fixtureMethods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/fixtures/server/fixtureMethods.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/server/fixtureMethods.js","inputSourceMap":{"version":3,"sources":["imports/core/fixtures/server/fixtureMethods.js"],"names":["Meteor","check","range","LoanService","STEPS","STEP_ORDER","ROLES","PURCHASE_TYPE","APPLICATION_TYPES","ORGANISATION_TYPES","Borrowers","Contacts","Loans","Lots","Offers","Organisations","PromotionLots","PromotionOptions","Promotions","Properties","Tasks","Users","SecurityService","TaskService","USER_COUNT","UNOWNED_LOANS_COUNT","LOANS_PER_USER","createFakeLoan","addLoanWithData","createDevs","createAdmins","getFakeUsersIds","createUser","createFakeUsers","createFakeOffer","E2E_USER_EMAIL","createOrganisations","createFakeInterestRates","emptyFakeBorrower","completeFakeBorrower","fakeProperty","emptyLoan","loanStep1","loanStep2","isAuthorizedToRun","isProduction","isStaging","isDevEnvironment","getAdmins","admins","find","roles","$in","ADMIN","fetch","length","newAdmins","map","admin","_id","deleteUsersRelatedData","usersToDelete","remove","userId","deleteUsers","createFakeLoanFixture","step","completeFiles","twoBorrowers","loanId","createTestUserWithData","testUserId","USER","SOLVENCY","adminId","REQUEST","methods","generateTestData","currentUserEmail","devs","newUsers","forEach","index","Math","floor","random","loanStep","_","loanIndex","error","console","log","purgeDatabase","currentUserId","String","checkCurrentUserIsDev","Promise","all","rawCollection","$ne","purgeFakeData","fakeUsersIds","filter","item","purgePersonalData","insertLoanRelatedTask","insert","object","title","loanLink","number","addEmptyLoan","addOffers","isRefinancing","borrowers","properties","loan","purchaseType","REFINANCING","ACQUISITION","addLoanWithSomeData","addCompleteLoan","applicationType","FULL","customName","addAnonymousLoan","anonymous","addUserToOrg","orgId","org","findOne","name","type","REAL_ESTATE_BROKER","update","$set","userLinks"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport range from 'lodash/range';\n\nimport LoanService from 'core/api/loans/server/LoanService';\nimport {\n  STEPS,\n  STEP_ORDER,\n  ROLES,\n  PURCHASE_TYPE,\n  APPLICATION_TYPES,\n  ORGANISATION_TYPES,\n} from '../../api/constants';\nimport {\n  Borrowers,\n  Contacts,\n  Loans,\n  Lots,\n  Offers,\n  Organisations,\n  PromotionLots,\n  PromotionOptions,\n  Promotions,\n  Properties,\n  Tasks,\n  Users,\n} from '../../api';\nimport SecurityService from '../../api/security';\nimport TaskService from '../../api/tasks/server/TaskService';\nimport {\n  USER_COUNT,\n  UNOWNED_LOANS_COUNT,\n  LOANS_PER_USER,\n} from '../fixtureConfig';\nimport { createFakeLoan, addLoanWithData } from '../loanFixtures';\nimport {\n  createDevs,\n  createAdmins,\n  getFakeUsersIds,\n  createUser,\n  createFakeUsers,\n} from '../userFixtures';\nimport { createFakeOffer } from '../offerFixtures';\nimport { E2E_USER_EMAIL } from '../fixtureConstants';\nimport { createOrganisations } from '../organisationFixtures';\nimport { createFakeInterestRates } from '../interestRatesFixtures';\nimport {\n  emptyFakeBorrower,\n  completeFakeBorrower,\n} from '../../api/borrowers/fakes';\nimport { fakeProperty } from '../../api/properties/fakes';\nimport { emptyLoan, loanStep1, loanStep2 } from '../../api/loans/fakes';\n\nconst isAuthorizedToRun = () => !Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment;\n\nconst getAdmins = () => {\n  const admins = Users.find({ roles: { $in: [ROLES.ADMIN] } }).fetch();\n  if (admins.length <= 1) {\n    const newAdmins = createAdmins();\n    return newAdmins;\n  }\n  return admins.map(admin => admin._id);\n};\n\nconst deleteUsersRelatedData = (usersToDelete) => {\n  Borrowers.remove({ userId: { $in: usersToDelete } });\n  Properties.remove({ userId: { $in: usersToDelete } });\n  Offers.remove({ userId: { $in: usersToDelete } });\n  Loans.remove({ userId: { $in: usersToDelete } });\n};\n\nconst deleteUsers = usersToDelete =>\n  Users.remove({ _id: { $in: usersToDelete } });\n\nconst createFakeLoanFixture = ({\n  userId,\n  step,\n  completeFiles,\n  twoBorrowers,\n}) => {\n  const loanId = createFakeLoan({\n    userId,\n    step,\n    completeFiles,\n    twoBorrowers,\n  });\n  createFakeOffer(loanId);\n};\n\n// Create a test user used in app's e2e tests and all the fixtures it needs\nconst createTestUserWithData = () => {\n  const testUserId = createUser(E2E_USER_EMAIL, ROLES.USER);\n  const admins = getAdmins();\n\n  // Create 2 loans to check AppPage, which requires multiple loans to display\n  createFakeLoanFixture({\n    step: STEPS.SOLVENCY,\n    userId: testUserId,\n    adminId: admins[0]._id,\n    completeFiles: true,\n    twoBorrowers: true,\n  });\n  createFakeLoanFixture({\n    step: STEPS.REQUEST,\n    userId: testUserId,\n    adminId: admins[0]._id,\n    completeFiles: true,\n    twoBorrowers: true,\n  });\n};\n\nMeteor.methods({\n  generateTestData(currentUserEmail) {\n    try {\n      if (isAuthorizedToRun()) {\n        const devs = createDevs(currentUserEmail);\n        const admins = getAdmins();\n        const newUsers = createFakeUsers(USER_COUNT, ROLES.USER);\n        createOrganisations();\n\n        // for each regular fixture user, create a loan with a certain step\n        newUsers.forEach((userId, index) => {\n          const adminId = admins[Math.floor(Math.random() * admins.length)];\n\n          // based on index, always generate 0, 1 and 2 numbers\n          const loanStep = index % 3;\n\n          range(LOANS_PER_USER).forEach((_, loanIndex) => {\n            const step = LOANS_PER_USER < 3 ? loanStep : loanIndex % 3;\n            createFakeLoanFixture({\n              step: STEP_ORDER[step],\n              userId,\n              adminId,\n              twoBorrowers: true,\n            });\n          });\n        });\n\n        range(UNOWNED_LOANS_COUNT).forEach(() => {\n          createFakeLoan({});\n        });\n\n        createTestUserWithData();\n      }\n    } catch (error) {\n      // FIXME: If you throw an error here it does not appear without this\n      // try catch block\n      console.log('generateTestData error', error);\n    }\n  },\n\n  async purgeDatabase(currentUserId) {\n    check(currentUserId, String);\n    if (SecurityService.checkCurrentUserIsDev() && isAuthorizedToRun()) {\n      await Promise.all([\n        Borrowers.rawCollection().remove({}),\n        Contacts.rawCollection().remove({}),\n        Loans.rawCollection().remove({}),\n        Lots.remove({}),\n        Offers.rawCollection().remove({}),\n        Organisations.rawCollection().remove({}),\n        PromotionLots.rawCollection().remove({}),\n        PromotionOptions.rawCollection().remove({}),\n        Promotions.rawCollection().remove({}),\n        Properties.rawCollection().remove({}),\n        Tasks.rawCollection().remove({}),\n        Users.rawCollection().remove({ _id: { $ne: currentUserId } }),\n      ]);\n    }\n  },\n\n  purgeFakeData(currentUserId) {\n    check(currentUserId, String);\n    if (SecurityService.checkCurrentUserIsDev() && isAuthorizedToRun()) {\n      let fakeUsersIds = getFakeUsersIds();\n      deleteUsersRelatedData(fakeUsersIds);\n\n      fakeUsersIds = fakeUsersIds.filter(item => item !== currentUserId);\n      deleteUsers(fakeUsersIds);\n    }\n  },\n\n  purgePersonalData(currentUserId) {\n    SecurityService.checkCurrentUserIsDev();\n    return deleteUsersRelatedData([currentUserId]);\n  },\n\n  insertLoanRelatedTask() {\n    SecurityService.checkCurrentUserIsDev();\n    const loanId = LoanService.find({}).fetch()[0]._id;\n    if (loanId) {\n      return TaskService.insert({\n        object: { title: 'Random dev task', loanLink: { _id: loanId } },\n      });\n    }\n  },\n\n  createFakeOffer({ loanId }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return createFakeOffer(loanId);\n  },\n\n  createFakeInterestRates({ number }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return createFakeInterestRates({ number });\n  },\n\n  addEmptyLoan({ userId, twoBorrowers, addOffers, isRefinancing }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return addLoanWithData({\n      borrowers: twoBorrowers\n        ? [emptyFakeBorrower, emptyFakeBorrower]\n        : [emptyFakeBorrower],\n      properties: [],\n      loan: {\n        ...emptyLoan,\n        purchaseType: isRefinancing\n          ? PURCHASE_TYPE.REFINANCING\n          : PURCHASE_TYPE.ACQUISITION,\n      },\n      userId,\n      addOffers,\n    });\n  },\n\n  addLoanWithSomeData({ userId, twoBorrowers, addOffers, isRefinancing }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return addLoanWithData({\n      borrowers: twoBorrowers\n        ? [completeFakeBorrower, completeFakeBorrower]\n        : [completeFakeBorrower],\n      properties: [fakeProperty],\n      loan: {\n        ...loanStep1,\n        purchaseType: isRefinancing\n          ? PURCHASE_TYPE.REFINANCING\n          : PURCHASE_TYPE.ACQUISITION,\n      },\n      userId,\n      addOffers,\n    });\n  },\n\n  addCompleteLoan({ userId, twoBorrowers, isRefinancing }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return addLoanWithData({\n      borrowers: twoBorrowers\n        ? [completeFakeBorrower, completeFakeBorrower]\n        : [completeFakeBorrower],\n      properties: [fakeProperty],\n      loan: {\n        ...loanStep2,\n        purchaseType: isRefinancing\n          ? PURCHASE_TYPE.REFINANCING\n          : PURCHASE_TYPE.ACQUISITION,\n        applicationType: APPLICATION_TYPES.FULL,\n        customName: 'Ma maison à la plage',\n      },\n      userId,\n      addOffers: true,\n    });\n  },\n\n  addAnonymousLoan({ twoBorrowers, isRefinancing }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return addLoanWithData({\n      borrowers: twoBorrowers\n        ? [emptyFakeBorrower, emptyFakeBorrower]\n        : [emptyFakeBorrower],\n      properties: [],\n      loan: {\n        ...emptyLoan,\n        purchaseType: isRefinancing\n          ? PURCHASE_TYPE.REFINANCING\n          : PURCHASE_TYPE.ACQUISITION,\n        anonymous: true,\n      },\n    });\n  },\n\n  addUserToOrg() {\n    SecurityService.checkCurrentUserIsDev();\n\n    let orgId;\n    const org = Organisations.findOne({ name: 'Dev Org' });\n\n    if (org) {\n      orgId = org._id;\n    } else {\n      orgId = Organisations.insert({\n        name: 'Dev Org',\n        type: ORGANISATION_TYPES.REAL_ESTATE_BROKER,\n      });\n    }\n\n    Organisations.update(\n      { _id: orgId },\n      { $set: { userLinks: [{ _id: this.userId }] } },\n    );\n  },\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/server/fixtureMethods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/fixtures/server/fixtureMethods.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet range;\nmodule.link(\"lodash/range\", {\n  default(v) {\n    range = v;\n  }\n\n}, 2);\nlet LoanService;\nmodule.link(\"../../api/loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 3);\nlet STEPS, STEP_ORDER, ROLES, PURCHASE_TYPE, APPLICATION_TYPES, ORGANISATION_TYPES;\nmodule.link(\"../../api/constants\", {\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  STEP_ORDER(v) {\n    STEP_ORDER = v;\n  },\n\n  ROLES(v) {\n    ROLES = v;\n  },\n\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  },\n\n  APPLICATION_TYPES(v) {\n    APPLICATION_TYPES = v;\n  },\n\n  ORGANISATION_TYPES(v) {\n    ORGANISATION_TYPES = v;\n  }\n\n}, 4);\nlet Borrowers, Contacts, Loans, Lots, Offers, Organisations, PromotionLots, PromotionOptions, Promotions, Properties, Tasks, Users;\nmodule.link(\"../../api\", {\n  Borrowers(v) {\n    Borrowers = v;\n  },\n\n  Contacts(v) {\n    Contacts = v;\n  },\n\n  Loans(v) {\n    Loans = v;\n  },\n\n  Lots(v) {\n    Lots = v;\n  },\n\n  Offers(v) {\n    Offers = v;\n  },\n\n  Organisations(v) {\n    Organisations = v;\n  },\n\n  PromotionLots(v) {\n    PromotionLots = v;\n  },\n\n  PromotionOptions(v) {\n    PromotionOptions = v;\n  },\n\n  Promotions(v) {\n    Promotions = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Tasks(v) {\n    Tasks = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 5);\nlet SecurityService;\nmodule.link(\"../../api/security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 6);\nlet TaskService;\nmodule.link(\"../../api/tasks/server/TaskService\", {\n  default(v) {\n    TaskService = v;\n  }\n\n}, 7);\nlet USER_COUNT, UNOWNED_LOANS_COUNT, LOANS_PER_USER;\nmodule.link(\"../fixtureConfig\", {\n  USER_COUNT(v) {\n    USER_COUNT = v;\n  },\n\n  UNOWNED_LOANS_COUNT(v) {\n    UNOWNED_LOANS_COUNT = v;\n  },\n\n  LOANS_PER_USER(v) {\n    LOANS_PER_USER = v;\n  }\n\n}, 8);\nlet createFakeLoan, addLoanWithData;\nmodule.link(\"../loanFixtures\", {\n  createFakeLoan(v) {\n    createFakeLoan = v;\n  },\n\n  addLoanWithData(v) {\n    addLoanWithData = v;\n  }\n\n}, 9);\nlet createDevs, createAdmins, getFakeUsersIds, createUser, createFakeUsers;\nmodule.link(\"../userFixtures\", {\n  createDevs(v) {\n    createDevs = v;\n  },\n\n  createAdmins(v) {\n    createAdmins = v;\n  },\n\n  getFakeUsersIds(v) {\n    getFakeUsersIds = v;\n  },\n\n  createUser(v) {\n    createUser = v;\n  },\n\n  createFakeUsers(v) {\n    createFakeUsers = v;\n  }\n\n}, 10);\nlet createFakeOffer;\nmodule.link(\"../offerFixtures\", {\n  createFakeOffer(v) {\n    createFakeOffer = v;\n  }\n\n}, 11);\nlet E2E_USER_EMAIL;\nmodule.link(\"../fixtureConstants\", {\n  E2E_USER_EMAIL(v) {\n    E2E_USER_EMAIL = v;\n  }\n\n}, 12);\nlet createOrganisations;\nmodule.link(\"../organisationFixtures\", {\n  createOrganisations(v) {\n    createOrganisations = v;\n  }\n\n}, 13);\nlet createFakeInterestRates;\nmodule.link(\"../interestRatesFixtures\", {\n  createFakeInterestRates(v) {\n    createFakeInterestRates = v;\n  }\n\n}, 14);\nlet emptyFakeBorrower, completeFakeBorrower;\nmodule.link(\"../../api/borrowers/fakes\", {\n  emptyFakeBorrower(v) {\n    emptyFakeBorrower = v;\n  },\n\n  completeFakeBorrower(v) {\n    completeFakeBorrower = v;\n  }\n\n}, 15);\nlet fakeProperty;\nmodule.link(\"../../api/properties/fakes\", {\n  fakeProperty(v) {\n    fakeProperty = v;\n  }\n\n}, 16);\nlet emptyLoan, loanStep1, loanStep2;\nmodule.link(\"../../api/loans/fakes\", {\n  emptyLoan(v) {\n    emptyLoan = v;\n  },\n\n  loanStep1(v) {\n    loanStep1 = v;\n  },\n\n  loanStep2(v) {\n    loanStep2 = v;\n  }\n\n}, 17);\n\nconst isAuthorizedToRun = () => !Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment;\n\nconst getAdmins = () => {\n  const admins = Users.find({\n    roles: {\n      $in: [ROLES.ADMIN]\n    }\n  }).fetch();\n\n  if (admins.length <= 1) {\n    const newAdmins = createAdmins();\n    return newAdmins;\n  }\n\n  return admins.map(admin => admin._id);\n};\n\nconst deleteUsersRelatedData = usersToDelete => {\n  Borrowers.remove({\n    userId: {\n      $in: usersToDelete\n    }\n  });\n  Properties.remove({\n    userId: {\n      $in: usersToDelete\n    }\n  });\n  Offers.remove({\n    userId: {\n      $in: usersToDelete\n    }\n  });\n  Loans.remove({\n    userId: {\n      $in: usersToDelete\n    }\n  });\n};\n\nconst deleteUsers = usersToDelete => Users.remove({\n  _id: {\n    $in: usersToDelete\n  }\n});\n\nconst createFakeLoanFixture = ({\n  userId,\n  step,\n  completeFiles,\n  twoBorrowers\n}) => {\n  const loanId = createFakeLoan({\n    userId,\n    step,\n    completeFiles,\n    twoBorrowers\n  });\n  createFakeOffer(loanId);\n}; // Create a test user used in app's e2e tests and all the fixtures it needs\n\n\nconst createTestUserWithData = () => {\n  const testUserId = createUser(E2E_USER_EMAIL, ROLES.USER);\n  const admins = getAdmins(); // Create 2 loans to check AppPage, which requires multiple loans to display\n\n  createFakeLoanFixture({\n    step: STEPS.SOLVENCY,\n    userId: testUserId,\n    adminId: admins[0]._id,\n    completeFiles: true,\n    twoBorrowers: true\n  });\n  createFakeLoanFixture({\n    step: STEPS.REQUEST,\n    userId: testUserId,\n    adminId: admins[0]._id,\n    completeFiles: true,\n    twoBorrowers: true\n  });\n};\n\nMeteor.methods({\n  generateTestData(currentUserEmail) {\n    try {\n      if (isAuthorizedToRun()) {\n        const devs = createDevs(currentUserEmail);\n        const admins = getAdmins();\n        const newUsers = createFakeUsers(USER_COUNT, ROLES.USER);\n        createOrganisations(); // for each regular fixture user, create a loan with a certain step\n\n        newUsers.forEach((userId, index) => {\n          const adminId = admins[Math.floor(Math.random() * admins.length)]; // based on index, always generate 0, 1 and 2 numbers\n\n          const loanStep = index % 3;\n          range(LOANS_PER_USER).forEach((_, loanIndex) => {\n            const step = LOANS_PER_USER < 3 ? loanStep : loanIndex % 3;\n            createFakeLoanFixture({\n              step: STEP_ORDER[step],\n              userId,\n              adminId,\n              twoBorrowers: true\n            });\n          });\n        });\n        range(UNOWNED_LOANS_COUNT).forEach(() => {\n          createFakeLoan({});\n        });\n        createTestUserWithData();\n      }\n    } catch (error) {\n      // FIXME: If you throw an error here it does not appear without this\n      // try catch block\n      console.log('generateTestData error', error);\n    }\n  },\n\n  purgeDatabase(currentUserId) {\n    return Promise.asyncApply(() => {\n      check(currentUserId, String);\n\n      if (SecurityService.checkCurrentUserIsDev() && isAuthorizedToRun()) {\n        Promise.await(Promise.all([Borrowers.rawCollection().remove({}), Contacts.rawCollection().remove({}), Loans.rawCollection().remove({}), Lots.remove({}), Offers.rawCollection().remove({}), Organisations.rawCollection().remove({}), PromotionLots.rawCollection().remove({}), PromotionOptions.rawCollection().remove({}), Promotions.rawCollection().remove({}), Properties.rawCollection().remove({}), Tasks.rawCollection().remove({}), Users.rawCollection().remove({\n          _id: {\n            $ne: currentUserId\n          }\n        })]));\n      }\n    });\n  },\n\n  purgeFakeData(currentUserId) {\n    check(currentUserId, String);\n\n    if (SecurityService.checkCurrentUserIsDev() && isAuthorizedToRun()) {\n      let fakeUsersIds = getFakeUsersIds();\n      deleteUsersRelatedData(fakeUsersIds);\n      fakeUsersIds = fakeUsersIds.filter(item => item !== currentUserId);\n      deleteUsers(fakeUsersIds);\n    }\n  },\n\n  purgePersonalData(currentUserId) {\n    SecurityService.checkCurrentUserIsDev();\n    return deleteUsersRelatedData([currentUserId]);\n  },\n\n  insertLoanRelatedTask() {\n    SecurityService.checkCurrentUserIsDev();\n\n    const loanId = LoanService.find({}).fetch()[0]._id;\n\n    if (loanId) {\n      return TaskService.insert({\n        object: {\n          title: 'Random dev task',\n          loanLink: {\n            _id: loanId\n          }\n        }\n      });\n    }\n  },\n\n  createFakeOffer({\n    loanId\n  }) {\n    SecurityService.checkCurrentUserIsDev();\n    return createFakeOffer(loanId);\n  },\n\n  createFakeInterestRates({\n    number\n  }) {\n    SecurityService.checkCurrentUserIsDev();\n    return createFakeInterestRates({\n      number\n    });\n  },\n\n  addEmptyLoan({\n    userId,\n    twoBorrowers,\n    addOffers,\n    isRefinancing\n  }) {\n    SecurityService.checkCurrentUserIsDev();\n    return addLoanWithData({\n      borrowers: twoBorrowers ? [emptyFakeBorrower, emptyFakeBorrower] : [emptyFakeBorrower],\n      properties: [],\n      loan: (0, _objectSpread2.default)({}, emptyLoan, {\n        purchaseType: isRefinancing ? PURCHASE_TYPE.REFINANCING : PURCHASE_TYPE.ACQUISITION\n      }),\n      userId,\n      addOffers\n    });\n  },\n\n  addLoanWithSomeData({\n    userId,\n    twoBorrowers,\n    addOffers,\n    isRefinancing\n  }) {\n    SecurityService.checkCurrentUserIsDev();\n    return addLoanWithData({\n      borrowers: twoBorrowers ? [completeFakeBorrower, completeFakeBorrower] : [completeFakeBorrower],\n      properties: [fakeProperty],\n      loan: (0, _objectSpread2.default)({}, loanStep1, {\n        purchaseType: isRefinancing ? PURCHASE_TYPE.REFINANCING : PURCHASE_TYPE.ACQUISITION\n      }),\n      userId,\n      addOffers\n    });\n  },\n\n  addCompleteLoan({\n    userId,\n    twoBorrowers,\n    isRefinancing\n  }) {\n    SecurityService.checkCurrentUserIsDev();\n    return addLoanWithData({\n      borrowers: twoBorrowers ? [completeFakeBorrower, completeFakeBorrower] : [completeFakeBorrower],\n      properties: [fakeProperty],\n      loan: (0, _objectSpread2.default)({}, loanStep2, {\n        purchaseType: isRefinancing ? PURCHASE_TYPE.REFINANCING : PURCHASE_TYPE.ACQUISITION,\n        applicationType: APPLICATION_TYPES.FULL,\n        customName: 'Ma maison à la plage'\n      }),\n      userId,\n      addOffers: true\n    });\n  },\n\n  addAnonymousLoan({\n    twoBorrowers,\n    isRefinancing\n  }) {\n    SecurityService.checkCurrentUserIsDev();\n    return addLoanWithData({\n      borrowers: twoBorrowers ? [emptyFakeBorrower, emptyFakeBorrower] : [emptyFakeBorrower],\n      properties: [],\n      loan: (0, _objectSpread2.default)({}, emptyLoan, {\n        purchaseType: isRefinancing ? PURCHASE_TYPE.REFINANCING : PURCHASE_TYPE.ACQUISITION,\n        anonymous: true\n      })\n    });\n  },\n\n  addUserToOrg() {\n    SecurityService.checkCurrentUserIsDev();\n    let orgId;\n    const org = Organisations.findOne({\n      name: 'Dev Org'\n    });\n\n    if (org) {\n      orgId = org._id;\n    } else {\n      orgId = Organisations.insert({\n        name: 'Dev Org',\n        type: ORGANISATION_TYPES.REAL_ESTATE_BROKER\n      });\n    }\n\n    Organisations.update({\n      _id: orgId\n    }, {\n      $set: {\n        userLinks: [{\n          _id: this.userId\n        }]\n      }\n    });\n  }\n\n});","map":{"version":3,"sources":["imports/core/fixtures/server/fixtureMethods.js"],"names":["isAuthorizedToRun","Meteor","getAdmins","admins","roles","$in","ROLES","newAdmins","createAdmins","admin","deleteUsersRelatedData","usersToDelete","Borrowers","userId","Properties","Offers","Loans","deleteUsers","_id","createFakeLoanFixture","twoBorrowers","loanId","createFakeLoan","createFakeOffer","createTestUserWithData","testUserId","createUser","step","STEPS","adminId","completeFiles","generateTestData","devs","createDevs","newUsers","createFakeUsers","createOrganisations","Math","loanStep","index","range","LOANS_PER_USER","loanIndex","STEP_ORDER","console","check","SecurityService","Contacts","Lots","Organisations","PromotionLots","PromotionOptions","Promotions","Tasks","$ne","currentUserId","purgeFakeData","fakeUsersIds","getFakeUsersIds","item","purgePersonalData","insertLoanRelatedTask","LoanService","object","title","loanLink","createFakeInterestRates","number","addEmptyLoan","isRefinancing","addLoanWithData","borrowers","properties","loan","purchaseType","PURCHASE_TYPE","ACQUISITION","addOffers","addLoanWithSomeData","addCompleteLoan","applicationType","APPLICATION_TYPES","customName","addAnonymousLoan","anonymous","addUserToOrg","org","name","orgId","type","ORGANISATION_TYPES","REAL_ESTATE_BROKER","$set","userLinks"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport range from 'lodash/range';\n\nimport LoanService from 'core/api/loans/server/LoanService';\nimport {\n  STEPS,\n  STEP_ORDER,\n  ROLES,\n  PURCHASE_TYPE,\n  APPLICATION_TYPES,\n  ORGANISATION_TYPES,\n} from '../../api/constants';\nimport {\n  Borrowers,\n  Contacts,\n  Loans,\n  Lots,\n  Offers,\n  Organisations,\n  PromotionLots,\n  PromotionOptions,\n  Promotions,\n  Properties,\n  Tasks,\n  Users,\n} from '../../api';\nimport SecurityService from '../../api/security';\nimport TaskService from '../../api/tasks/server/TaskService';\nimport {\n  USER_COUNT,\n  UNOWNED_LOANS_COUNT,\n  LOANS_PER_USER,\n} from '../fixtureConfig';\nimport { createFakeLoan, addLoanWithData } from '../loanFixtures';\nimport {\n  createDevs,\n  createAdmins,\n  getFakeUsersIds,\n  createUser,\n  createFakeUsers,\n} from '../userFixtures';\nimport { createFakeOffer } from '../offerFixtures';\nimport { E2E_USER_EMAIL } from '../fixtureConstants';\nimport { createOrganisations } from '../organisationFixtures';\nimport { createFakeInterestRates } from '../interestRatesFixtures';\nimport {\n  emptyFakeBorrower,\n  completeFakeBorrower,\n} from '../../api/borrowers/fakes';\nimport { fakeProperty } from '../../api/properties/fakes';\nimport { emptyLoan, loanStep1, loanStep2 } from '../../api/loans/fakes';\n\nconst isAuthorizedToRun = () => !Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment;\n\nconst getAdmins = () => {\n  const admins = Users.find({ roles: { $in: [ROLES.ADMIN] } }).fetch();\n  if (admins.length <= 1) {\n    const newAdmins = createAdmins();\n    return newAdmins;\n  }\n  return admins.map(admin => admin._id);\n};\n\nconst deleteUsersRelatedData = (usersToDelete) => {\n  Borrowers.remove({ userId: { $in: usersToDelete } });\n  Properties.remove({ userId: { $in: usersToDelete } });\n  Offers.remove({ userId: { $in: usersToDelete } });\n  Loans.remove({ userId: { $in: usersToDelete } });\n};\n\nconst deleteUsers = usersToDelete =>\n  Users.remove({ _id: { $in: usersToDelete } });\n\nconst createFakeLoanFixture = ({\n  userId,\n  step,\n  completeFiles,\n  twoBorrowers,\n}) => {\n  const loanId = createFakeLoan({\n    userId,\n    step,\n    completeFiles,\n    twoBorrowers,\n  });\n  createFakeOffer(loanId);\n};\n\n// Create a test user used in app's e2e tests and all the fixtures it needs\nconst createTestUserWithData = () => {\n  const testUserId = createUser(E2E_USER_EMAIL, ROLES.USER);\n  const admins = getAdmins();\n\n  // Create 2 loans to check AppPage, which requires multiple loans to display\n  createFakeLoanFixture({\n    step: STEPS.SOLVENCY,\n    userId: testUserId,\n    adminId: admins[0]._id,\n    completeFiles: true,\n    twoBorrowers: true,\n  });\n  createFakeLoanFixture({\n    step: STEPS.REQUEST,\n    userId: testUserId,\n    adminId: admins[0]._id,\n    completeFiles: true,\n    twoBorrowers: true,\n  });\n};\n\nMeteor.methods({\n  generateTestData(currentUserEmail) {\n    try {\n      if (isAuthorizedToRun()) {\n        const devs = createDevs(currentUserEmail);\n        const admins = getAdmins();\n        const newUsers = createFakeUsers(USER_COUNT, ROLES.USER);\n        createOrganisations();\n\n        // for each regular fixture user, create a loan with a certain step\n        newUsers.forEach((userId, index) => {\n          const adminId = admins[Math.floor(Math.random() * admins.length)];\n\n          // based on index, always generate 0, 1 and 2 numbers\n          const loanStep = index % 3;\n\n          range(LOANS_PER_USER).forEach((_, loanIndex) => {\n            const step = LOANS_PER_USER < 3 ? loanStep : loanIndex % 3;\n            createFakeLoanFixture({\n              step: STEP_ORDER[step],\n              userId,\n              adminId,\n              twoBorrowers: true,\n            });\n          });\n        });\n\n        range(UNOWNED_LOANS_COUNT).forEach(() => {\n          createFakeLoan({});\n        });\n\n        createTestUserWithData();\n      }\n    } catch (error) {\n      // FIXME: If you throw an error here it does not appear without this\n      // try catch block\n      console.log('generateTestData error', error);\n    }\n  },\n\n  async purgeDatabase(currentUserId) {\n    check(currentUserId, String);\n    if (SecurityService.checkCurrentUserIsDev() && isAuthorizedToRun()) {\n      await Promise.all([\n        Borrowers.rawCollection().remove({}),\n        Contacts.rawCollection().remove({}),\n        Loans.rawCollection().remove({}),\n        Lots.remove({}),\n        Offers.rawCollection().remove({}),\n        Organisations.rawCollection().remove({}),\n        PromotionLots.rawCollection().remove({}),\n        PromotionOptions.rawCollection().remove({}),\n        Promotions.rawCollection().remove({}),\n        Properties.rawCollection().remove({}),\n        Tasks.rawCollection().remove({}),\n        Users.rawCollection().remove({ _id: { $ne: currentUserId } }),\n      ]);\n    }\n  },\n\n  purgeFakeData(currentUserId) {\n    check(currentUserId, String);\n    if (SecurityService.checkCurrentUserIsDev() && isAuthorizedToRun()) {\n      let fakeUsersIds = getFakeUsersIds();\n      deleteUsersRelatedData(fakeUsersIds);\n\n      fakeUsersIds = fakeUsersIds.filter(item => item !== currentUserId);\n      deleteUsers(fakeUsersIds);\n    }\n  },\n\n  purgePersonalData(currentUserId) {\n    SecurityService.checkCurrentUserIsDev();\n    return deleteUsersRelatedData([currentUserId]);\n  },\n\n  insertLoanRelatedTask() {\n    SecurityService.checkCurrentUserIsDev();\n    const loanId = LoanService.find({}).fetch()[0]._id;\n    if (loanId) {\n      return TaskService.insert({\n        object: { title: 'Random dev task', loanLink: { _id: loanId } },\n      });\n    }\n  },\n\n  createFakeOffer({ loanId }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return createFakeOffer(loanId);\n  },\n\n  createFakeInterestRates({ number }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return createFakeInterestRates({ number });\n  },\n\n  addEmptyLoan({ userId, twoBorrowers, addOffers, isRefinancing }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return addLoanWithData({\n      borrowers: twoBorrowers\n        ? [emptyFakeBorrower, emptyFakeBorrower]\n        : [emptyFakeBorrower],\n      properties: [],\n      loan: {\n        ...emptyLoan,\n        purchaseType: isRefinancing\n          ? PURCHASE_TYPE.REFINANCING\n          : PURCHASE_TYPE.ACQUISITION,\n      },\n      userId,\n      addOffers,\n    });\n  },\n\n  addLoanWithSomeData({ userId, twoBorrowers, addOffers, isRefinancing }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return addLoanWithData({\n      borrowers: twoBorrowers\n        ? [completeFakeBorrower, completeFakeBorrower]\n        : [completeFakeBorrower],\n      properties: [fakeProperty],\n      loan: {\n        ...loanStep1,\n        purchaseType: isRefinancing\n          ? PURCHASE_TYPE.REFINANCING\n          : PURCHASE_TYPE.ACQUISITION,\n      },\n      userId,\n      addOffers,\n    });\n  },\n\n  addCompleteLoan({ userId, twoBorrowers, isRefinancing }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return addLoanWithData({\n      borrowers: twoBorrowers\n        ? [completeFakeBorrower, completeFakeBorrower]\n        : [completeFakeBorrower],\n      properties: [fakeProperty],\n      loan: {\n        ...loanStep2,\n        purchaseType: isRefinancing\n          ? PURCHASE_TYPE.REFINANCING\n          : PURCHASE_TYPE.ACQUISITION,\n        applicationType: APPLICATION_TYPES.FULL,\n        customName: 'Ma maison à la plage',\n      },\n      userId,\n      addOffers: true,\n    });\n  },\n\n  addAnonymousLoan({ twoBorrowers, isRefinancing }) {\n    SecurityService.checkCurrentUserIsDev();\n\n    return addLoanWithData({\n      borrowers: twoBorrowers\n        ? [emptyFakeBorrower, emptyFakeBorrower]\n        : [emptyFakeBorrower],\n      properties: [],\n      loan: {\n        ...emptyLoan,\n        purchaseType: isRefinancing\n          ? PURCHASE_TYPE.REFINANCING\n          : PURCHASE_TYPE.ACQUISITION,\n        anonymous: true,\n      },\n    });\n  },\n\n  addUserToOrg() {\n    SecurityService.checkCurrentUserIsDev();\n\n    let orgId;\n    const org = Organisations.findOne({ name: 'Dev Org' });\n\n    if (org) {\n      orgId = org._id;\n    } else {\n      orgId = Organisations.insert({\n        name: 'Dev Org',\n        type: ORGANISATION_TYPES.REAL_ESTATE_BROKER,\n      });\n    }\n\n    Organisations.update(\n      { _id: orgId },\n      { $set: { userLinks: [{ _id: this.userId }] } },\n    );\n  },\n});\n"]},"sourceType":"script","hash":"10e74860259ef0708c00394b96b9f0d3ecbadb66"}
