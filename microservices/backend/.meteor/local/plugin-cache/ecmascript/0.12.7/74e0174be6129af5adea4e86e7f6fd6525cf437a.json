{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/security/Security.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/security/Security.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/security/Security.js","inputSourceMap":{"version":3,"sources":["imports/core/api/security/Security.js"],"names":["Meteor","Roles","get","flattenObject","ROLES","COLLECTIONS","DOCUMENT_USER_PERMISSIONS","SECURITY_ERROR","Security","hasRole","userId","role","userIsInRole","handleUnauthorized","message","Error","checkRole","checkLoggedIn","checkUserLoggedIn","checkLoggedOut","currentUserHasRole","isUserAdmin","ADMIN","DEV","isUserDev","isUserPro","PRO","currentUserIsAdmin","checkCurrentUserIsAdmin","checkUserIsAdmin","checkUserIsDev","checkUserIsPro","checkOwnership","doc","userIdIsValid","userLinksIsValid","userLinks","filter","_id","length","checkRequiredPermissions","requiredPermissions","userPermissions","Object","keys","every","permission","userPermission","requiredPermission","Array","isArray","required","includes","hasPermissionOnDoc","users","user","find","permissions","$metadata","checkCurrentUserIsDev","hasMinimumRole","allowedRoles","USER","isAllowed","some","allowedRole","minimumRole","undefined","isAllowedToModifyFiles","collection","docId","fileKey","keyId","split","error","PROMOTIONS_COLLECTION","promotions","isAllowedToManageDocuments","promotionId","PROPERTIES_COLLECTION","properties","isPromotionLot","isAllowedToManagePromotionLotDocuments","propertyId","isAllowedToUpdate","me","MODIFY"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Roles } from 'meteor/alanning:roles';\nimport get from 'lodash/get';\n\nimport { flattenObject } from '../helpers';\nimport { ROLES, COLLECTIONS } from '../constants';\nimport { DOCUMENT_USER_PERMISSIONS } from './constants';\n\nexport const SECURITY_ERROR = 'NOT_AUTHORIZED';\n\nexport default class Security {\n  static hasRole(userId, role) {\n    return Roles.userIsInRole(userId, role);\n  }\n\n  static handleUnauthorized(message) {\n    throw new Meteor.Error(SECURITY_ERROR, message);\n  }\n\n  static checkRole(userId, role) {\n    if (!this.hasRole(userId, role)) {\n      this.handleUnauthorized(`Checking role: ${role}`);\n    }\n  }\n\n  static checkLoggedIn() {\n    this.checkUserLoggedIn(Meteor.userId());\n  }\n\n  static checkUserLoggedIn(userId) {\n    if (!userId) {\n      this.handleUnauthorized('Checking if logged in, no user');\n    }\n\n    if (userId !== Meteor.userId()) {\n      this.handleUnauthorized('Checking if logged in, not the right user');\n    }\n  }\n\n  static checkLoggedOut() {\n    if (Meteor.userId()) {\n      this.handleUnauthorized('Checking if logged out');\n    }\n  }\n\n  static currentUserHasRole(role) {\n    return this.hasRole(Meteor.userId(), role);\n  }\n\n  static isUserAdmin(userId) {\n    return this.hasRole(userId, ROLES.ADMIN) || this.hasRole(userId, ROLES.DEV);\n  }\n\n  static isUserDev(userId) {\n    return this.hasRole(userId || Meteor.userId(), ROLES.DEV);\n  }\n\n  static isUserPro(userId) {\n    return (\n      this.hasRole(userId, ROLES.PRO)\n      || this.hasRole(userId, ROLES.ADMIN)\n      || this.hasRole(userId, ROLES.DEV)\n    );\n  }\n\n  static currentUserIsAdmin() {\n    const userId = Meteor.userId();\n    return this.hasRole(userId, ROLES.ADMIN) || this.hasRole(userId, ROLES.DEV);\n  }\n\n  static checkCurrentUserIsAdmin() {\n    if (!this.currentUserIsAdmin()) {\n      this.handleUnauthorized('Checking if current user is admin');\n    }\n  }\n\n  static checkUserIsAdmin(userId) {\n    if (!this.isUserAdmin(userId)) {\n      this.handleUnauthorized('Checking if user is admin');\n    }\n  }\n\n  static checkUserIsDev(userId) {\n    if (!this.isUserDev(userId)) {\n      this.handleUnauthorized('Checking if user is dev');\n    }\n  }\n\n  static checkUserIsPro(userId) {\n    if (!this.isUserPro(userId)) {\n      this.handleUnauthorized('Checking if user is pro');\n    }\n  }\n\n  static checkOwnership(doc, userId) {\n    userId = userId || Meteor.userId();\n    const userIdIsValid = doc && doc.userId === userId;\n    const userLinksIsValid = doc\n      && doc.userLinks\n      && doc.userLinks.filter(({ _id }) => userId === _id).length > 0;\n\n    if (!(userIdIsValid || userLinksIsValid)) {\n      this.handleUnauthorized('Checking ownership');\n    }\n  }\n\n  static checkRequiredPermissions({ requiredPermissions, userPermissions }) {\n    if (\n      !Object.keys(flattenObject(requiredPermissions)).every((permission) => {\n        const userPermission = get(userPermissions, permission);\n        const requiredPermission = get(requiredPermissions, permission);\n\n        if (!userPermission) {\n          return false;\n        }\n\n        if (Array.isArray(requiredPermission)) {\n          if (!Array.isArray(userPermission)) {\n            return false;\n          }\n          return requiredPermission.every(required =>\n            userPermission.includes(required));\n        }\n\n        return userPermission === requiredPermission;\n      })\n    ) {\n      this.handleUnauthorized('Checking permissions');\n    }\n  }\n\n  static hasPermissionOnDoc({\n    doc,\n    requiredPermissions,\n    userId = Meteor.userId(),\n  }) {\n    const { userLinks = [], users = [] } = doc;\n\n    const user = userLinks.find(({ _id }) => _id === userId)\n      || users.find(({ _id }) => _id === userId);\n\n    if (!user) {\n      this.handleUnauthorized('Checking permissions');\n    }\n\n    const userPermissions = user.permissions || user.$metadata.permissions;\n\n    this.checkRequiredPermissions({ requiredPermissions, userPermissions });\n  }\n\n  static checkCurrentUserIsDev() {\n    if (!this.currentUserHasRole(ROLES.DEV)) {\n      this.handleUnauthorized('unauthorized developer');\n    }\n\n    return true;\n  }\n\n  static hasMinimumRole({ role, userId }) {\n    let allowedRoles;\n\n    switch (role) {\n    case ROLES.DEV:\n      allowedRoles = [ROLES.DEV];\n      break;\n    case ROLES.ADMIN:\n      allowedRoles = [ROLES.DEV, ROLES.ADMIN];\n      break;\n    case ROLES.USER:\n      allowedRoles = [ROLES.DEV, ROLES.ADMIN, ROLES.USER];\n      break;\n    case ROLES.PRO:\n      allowedRoles = [ROLES.DEV, ROLES.ADMIN, ROLES.PRO];\n      break;\n\n    default:\n      throw new Meteor.Error(`Invalid role: ${role} at minimumRole`);\n    }\n\n    const isAllowed = allowedRoles.some(allowedRole =>\n      this.hasRole(userId, allowedRole));\n\n    if (!isAllowed) {\n      return false;\n    }\n\n    return true;\n  }\n\n  static minimumRole(role) {\n    return userId =>\n      (this.hasMinimumRole({ userId, role })\n        ? undefined\n        : this.handleUnauthorized('Unauthorized role'));\n  }\n\n  static canModifyDoc = (doc) => {\n    // Only for client side docs that replace userLinks with users\n    const { _id: userId } = Meteor.user();\n    if (this.minimumRole(ROLES.ADMIN)(userId)) {\n      return;\n    }\n\n    const me = doc.users.find(({ _id }) => _id === userId);\n\n    return (\n      me\n      && me.$metadata\n      && me.$metadata.permissions === DOCUMENT_USER_PERMISSIONS.MODIFY\n    );\n  };\n\n  static isAllowedToModifyFiles({ collection, docId, userId, fileKey }) {\n    const keyId = fileKey.split('/')[0];\n\n    if (keyId !== docId) {\n      this.handleUnauthorized('Invalid fileKey or docId');\n    }\n\n    try {\n      this.minimumRole(ROLES.ADMIN)(userId);\n      return;\n    } catch (error) {}\n\n    switch (collection) {\n    case COLLECTIONS.PROMOTIONS_COLLECTION: {\n      this.promotions.isAllowedToManageDocuments({\n        promotionId: docId,\n        userId,\n      });\n      break;\n    }\n    case COLLECTIONS.PROPERTIES_COLLECTION: {\n      if (this.properties.isPromotionLot(docId)) {\n        this.promotions.isAllowedToManagePromotionLotDocuments({\n          propertyId: docId,\n          userId,\n        });\n        break;\n      }\n\n      this.properties.isAllowedToUpdate(docId, userId);\n      break;\n    }\n    default:\n      this[collection].isAllowedToUpdate(docId);\n    }\n  }\n}\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/security/Security.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/security/Security.js"}},"code":"module.export({\n  SECURITY_ERROR: () => SECURITY_ERROR,\n  default: () => Security\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Roles;\nmodule.link(\"meteor/alanning:roles\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 1);\nlet get;\nmodule.link(\"lodash/get\", {\n  default(v) {\n    get = v;\n  }\n\n}, 2);\nlet flattenObject;\nmodule.link(\"../helpers\", {\n  flattenObject(v) {\n    flattenObject = v;\n  }\n\n}, 3);\nlet ROLES, COLLECTIONS;\nmodule.link(\"../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  },\n\n  COLLECTIONS(v) {\n    COLLECTIONS = v;\n  }\n\n}, 4);\nlet DOCUMENT_USER_PERMISSIONS;\nmodule.link(\"./constants\", {\n  DOCUMENT_USER_PERMISSIONS(v) {\n    DOCUMENT_USER_PERMISSIONS = v;\n  }\n\n}, 5);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst SECURITY_ERROR = 'NOT_AUTHORIZED';\n\nclass Security {\n  static hasRole(userId, role) {\n    return Roles.userIsInRole(userId, role);\n  }\n\n  static handleUnauthorized(message) {\n    throw new Meteor.Error(SECURITY_ERROR, message);\n  }\n\n  static checkRole(userId, role) {\n    if (!this.hasRole(userId, role)) {\n      this.handleUnauthorized(`Checking role: ${role}`);\n    }\n  }\n\n  static checkLoggedIn() {\n    this.checkUserLoggedIn(Meteor.userId());\n  }\n\n  static checkUserLoggedIn(userId) {\n    if (!userId) {\n      this.handleUnauthorized('Checking if logged in, no user');\n    }\n\n    if (userId !== Meteor.userId()) {\n      this.handleUnauthorized('Checking if logged in, not the right user');\n    }\n  }\n\n  static checkLoggedOut() {\n    if (Meteor.userId()) {\n      this.handleUnauthorized('Checking if logged out');\n    }\n  }\n\n  static currentUserHasRole(role) {\n    return this.hasRole(Meteor.userId(), role);\n  }\n\n  static isUserAdmin(userId) {\n    return this.hasRole(userId, ROLES.ADMIN) || this.hasRole(userId, ROLES.DEV);\n  }\n\n  static isUserDev(userId) {\n    return this.hasRole(userId || Meteor.userId(), ROLES.DEV);\n  }\n\n  static isUserPro(userId) {\n    return this.hasRole(userId, ROLES.PRO) || this.hasRole(userId, ROLES.ADMIN) || this.hasRole(userId, ROLES.DEV);\n  }\n\n  static currentUserIsAdmin() {\n    const userId = Meteor.userId();\n    return this.hasRole(userId, ROLES.ADMIN) || this.hasRole(userId, ROLES.DEV);\n  }\n\n  static checkCurrentUserIsAdmin() {\n    if (!this.currentUserIsAdmin()) {\n      this.handleUnauthorized('Checking if current user is admin');\n    }\n  }\n\n  static checkUserIsAdmin(userId) {\n    if (!this.isUserAdmin(userId)) {\n      this.handleUnauthorized('Checking if user is admin');\n    }\n  }\n\n  static checkUserIsDev(userId) {\n    if (!this.isUserDev(userId)) {\n      this.handleUnauthorized('Checking if user is dev');\n    }\n  }\n\n  static checkUserIsPro(userId) {\n    if (!this.isUserPro(userId)) {\n      this.handleUnauthorized('Checking if user is pro');\n    }\n  }\n\n  static checkOwnership(doc, userId) {\n    userId = userId || Meteor.userId();\n    const userIdIsValid = doc && doc.userId === userId;\n    const userLinksIsValid = doc && doc.userLinks && doc.userLinks.filter(({\n      _id\n    }) => userId === _id).length > 0;\n\n    if (!(userIdIsValid || userLinksIsValid)) {\n      this.handleUnauthorized('Checking ownership');\n    }\n  }\n\n  static checkRequiredPermissions({\n    requiredPermissions,\n    userPermissions\n  }) {\n    if (!Object.keys(flattenObject(requiredPermissions)).every(permission => {\n      const userPermission = get(userPermissions, permission);\n      const requiredPermission = get(requiredPermissions, permission);\n\n      if (!userPermission) {\n        return false;\n      }\n\n      if (Array.isArray(requiredPermission)) {\n        if (!Array.isArray(userPermission)) {\n          return false;\n        }\n\n        return requiredPermission.every(required => userPermission.includes(required));\n      }\n\n      return userPermission === requiredPermission;\n    })) {\n      this.handleUnauthorized('Checking permissions');\n    }\n  }\n\n  static hasPermissionOnDoc({\n    doc,\n    requiredPermissions,\n    userId = Meteor.userId()\n  }) {\n    const {\n      userLinks = [],\n      users = []\n    } = doc;\n    const user = userLinks.find(({\n      _id\n    }) => _id === userId) || users.find(({\n      _id\n    }) => _id === userId);\n\n    if (!user) {\n      this.handleUnauthorized('Checking permissions');\n    }\n\n    const userPermissions = user.permissions || user.$metadata.permissions;\n    this.checkRequiredPermissions({\n      requiredPermissions,\n      userPermissions\n    });\n  }\n\n  static checkCurrentUserIsDev() {\n    if (!this.currentUserHasRole(ROLES.DEV)) {\n      this.handleUnauthorized('unauthorized developer');\n    }\n\n    return true;\n  }\n\n  static hasMinimumRole({\n    role,\n    userId\n  }) {\n    let allowedRoles;\n\n    switch (role) {\n      case ROLES.DEV:\n        allowedRoles = [ROLES.DEV];\n        break;\n\n      case ROLES.ADMIN:\n        allowedRoles = [ROLES.DEV, ROLES.ADMIN];\n        break;\n\n      case ROLES.USER:\n        allowedRoles = [ROLES.DEV, ROLES.ADMIN, ROLES.USER];\n        break;\n\n      case ROLES.PRO:\n        allowedRoles = [ROLES.DEV, ROLES.ADMIN, ROLES.PRO];\n        break;\n\n      default:\n        throw new Meteor.Error(`Invalid role: ${role} at minimumRole`);\n    }\n\n    const isAllowed = allowedRoles.some(allowedRole => this.hasRole(userId, allowedRole));\n\n    if (!isAllowed) {\n      return false;\n    }\n\n    return true;\n  }\n\n  static minimumRole(role) {\n    return userId => this.hasMinimumRole({\n      userId,\n      role\n    }) ? undefined : this.handleUnauthorized('Unauthorized role');\n  }\n\n  static isAllowedToModifyFiles({\n    collection,\n    docId,\n    userId,\n    fileKey\n  }) {\n    const keyId = fileKey.split('/')[0];\n\n    if (keyId !== docId) {\n      this.handleUnauthorized('Invalid fileKey or docId');\n    }\n\n    try {\n      this.minimumRole(ROLES.ADMIN)(userId);\n      return;\n    } catch (error) {}\n\n    switch (collection) {\n      case COLLECTIONS.PROMOTIONS_COLLECTION:\n        {\n          this.promotions.isAllowedToManageDocuments({\n            promotionId: docId,\n            userId\n          });\n          break;\n        }\n\n      case COLLECTIONS.PROPERTIES_COLLECTION:\n        {\n          if (this.properties.isPromotionLot(docId)) {\n            this.promotions.isAllowedToManagePromotionLotDocuments({\n              propertyId: docId,\n              userId\n            });\n            break;\n          }\n\n          this.properties.isAllowedToUpdate(docId, userId);\n          break;\n        }\n\n      default:\n        this[collection].isAllowedToUpdate(docId);\n    }\n  }\n\n}\n\n_defineProperty(Security, \"canModifyDoc\", doc => {\n  // Only for client side docs that replace userLinks with users\n  const {\n    _id: userId\n  } = Meteor.user();\n\n  if (Security.minimumRole(ROLES.ADMIN)(userId)) {\n    return;\n  }\n\n  const me = doc.users.find(({\n    _id\n  }) => _id === userId);\n  return me && me.$metadata && me.$metadata.permissions === DOCUMENT_USER_PERMISSIONS.MODIFY;\n});","map":{"version":3,"sources":["imports/core/api/security/Security.js"],"names":["SECURITY_ERROR","Security","Roles","Meteor","role","userId","ROLES","userIdIsValid","doc","userLinksIsValid","_id","userPermissions","flattenObject","permission","userPermission","get","requiredPermission","Array","required","userLinks","users","user","allowedRoles","isAllowed","allowedRole","me","DOCUMENT_USER_PERMISSIONS","fileKey","keyId","COLLECTIONS","promotionId","propertyId"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Roles } from 'meteor/alanning:roles';\nimport get from 'lodash/get';\n\nimport { flattenObject } from '../helpers';\nimport { ROLES, COLLECTIONS } from '../constants';\nimport { DOCUMENT_USER_PERMISSIONS } from './constants';\n\nexport const SECURITY_ERROR = 'NOT_AUTHORIZED';\n\nexport default class Security {\n  static hasRole(userId, role) {\n    return Roles.userIsInRole(userId, role);\n  }\n\n  static handleUnauthorized(message) {\n    throw new Meteor.Error(SECURITY_ERROR, message);\n  }\n\n  static checkRole(userId, role) {\n    if (!this.hasRole(userId, role)) {\n      this.handleUnauthorized(`Checking role: ${role}`);\n    }\n  }\n\n  static checkLoggedIn() {\n    this.checkUserLoggedIn(Meteor.userId());\n  }\n\n  static checkUserLoggedIn(userId) {\n    if (!userId) {\n      this.handleUnauthorized('Checking if logged in, no user');\n    }\n\n    if (userId !== Meteor.userId()) {\n      this.handleUnauthorized('Checking if logged in, not the right user');\n    }\n  }\n\n  static checkLoggedOut() {\n    if (Meteor.userId()) {\n      this.handleUnauthorized('Checking if logged out');\n    }\n  }\n\n  static currentUserHasRole(role) {\n    return this.hasRole(Meteor.userId(), role);\n  }\n\n  static isUserAdmin(userId) {\n    return this.hasRole(userId, ROLES.ADMIN) || this.hasRole(userId, ROLES.DEV);\n  }\n\n  static isUserDev(userId) {\n    return this.hasRole(userId || Meteor.userId(), ROLES.DEV);\n  }\n\n  static isUserPro(userId) {\n    return (\n      this.hasRole(userId, ROLES.PRO)\n      || this.hasRole(userId, ROLES.ADMIN)\n      || this.hasRole(userId, ROLES.DEV)\n    );\n  }\n\n  static currentUserIsAdmin() {\n    const userId = Meteor.userId();\n    return this.hasRole(userId, ROLES.ADMIN) || this.hasRole(userId, ROLES.DEV);\n  }\n\n  static checkCurrentUserIsAdmin() {\n    if (!this.currentUserIsAdmin()) {\n      this.handleUnauthorized('Checking if current user is admin');\n    }\n  }\n\n  static checkUserIsAdmin(userId) {\n    if (!this.isUserAdmin(userId)) {\n      this.handleUnauthorized('Checking if user is admin');\n    }\n  }\n\n  static checkUserIsDev(userId) {\n    if (!this.isUserDev(userId)) {\n      this.handleUnauthorized('Checking if user is dev');\n    }\n  }\n\n  static checkUserIsPro(userId) {\n    if (!this.isUserPro(userId)) {\n      this.handleUnauthorized('Checking if user is pro');\n    }\n  }\n\n  static checkOwnership(doc, userId) {\n    userId = userId || Meteor.userId();\n    const userIdIsValid = doc && doc.userId === userId;\n    const userLinksIsValid = doc\n      && doc.userLinks\n      && doc.userLinks.filter(({ _id }) => userId === _id).length > 0;\n\n    if (!(userIdIsValid || userLinksIsValid)) {\n      this.handleUnauthorized('Checking ownership');\n    }\n  }\n\n  static checkRequiredPermissions({ requiredPermissions, userPermissions }) {\n    if (\n      !Object.keys(flattenObject(requiredPermissions)).every((permission) => {\n        const userPermission = get(userPermissions, permission);\n        const requiredPermission = get(requiredPermissions, permission);\n\n        if (!userPermission) {\n          return false;\n        }\n\n        if (Array.isArray(requiredPermission)) {\n          if (!Array.isArray(userPermission)) {\n            return false;\n          }\n          return requiredPermission.every(required =>\n            userPermission.includes(required));\n        }\n\n        return userPermission === requiredPermission;\n      })\n    ) {\n      this.handleUnauthorized('Checking permissions');\n    }\n  }\n\n  static hasPermissionOnDoc({\n    doc,\n    requiredPermissions,\n    userId = Meteor.userId(),\n  }) {\n    const { userLinks = [], users = [] } = doc;\n\n    const user = userLinks.find(({ _id }) => _id === userId)\n      || users.find(({ _id }) => _id === userId);\n\n    if (!user) {\n      this.handleUnauthorized('Checking permissions');\n    }\n\n    const userPermissions = user.permissions || user.$metadata.permissions;\n\n    this.checkRequiredPermissions({ requiredPermissions, userPermissions });\n  }\n\n  static checkCurrentUserIsDev() {\n    if (!this.currentUserHasRole(ROLES.DEV)) {\n      this.handleUnauthorized('unauthorized developer');\n    }\n\n    return true;\n  }\n\n  static hasMinimumRole({ role, userId }) {\n    let allowedRoles;\n\n    switch (role) {\n    case ROLES.DEV:\n      allowedRoles = [ROLES.DEV];\n      break;\n    case ROLES.ADMIN:\n      allowedRoles = [ROLES.DEV, ROLES.ADMIN];\n      break;\n    case ROLES.USER:\n      allowedRoles = [ROLES.DEV, ROLES.ADMIN, ROLES.USER];\n      break;\n    case ROLES.PRO:\n      allowedRoles = [ROLES.DEV, ROLES.ADMIN, ROLES.PRO];\n      break;\n\n    default:\n      throw new Meteor.Error(`Invalid role: ${role} at minimumRole`);\n    }\n\n    const isAllowed = allowedRoles.some(allowedRole =>\n      this.hasRole(userId, allowedRole));\n\n    if (!isAllowed) {\n      return false;\n    }\n\n    return true;\n  }\n\n  static minimumRole(role) {\n    return userId =>\n      (this.hasMinimumRole({ userId, role })\n        ? undefined\n        : this.handleUnauthorized('Unauthorized role'));\n  }\n\n  static canModifyDoc = (doc) => {\n    // Only for client side docs that replace userLinks with users\n    const { _id: userId } = Meteor.user();\n    if (this.minimumRole(ROLES.ADMIN)(userId)) {\n      return;\n    }\n\n    const me = doc.users.find(({ _id }) => _id === userId);\n\n    return (\n      me\n      && me.$metadata\n      && me.$metadata.permissions === DOCUMENT_USER_PERMISSIONS.MODIFY\n    );\n  };\n\n  static isAllowedToModifyFiles({ collection, docId, userId, fileKey }) {\n    const keyId = fileKey.split('/')[0];\n\n    if (keyId !== docId) {\n      this.handleUnauthorized('Invalid fileKey or docId');\n    }\n\n    try {\n      this.minimumRole(ROLES.ADMIN)(userId);\n      return;\n    } catch (error) {}\n\n    switch (collection) {\n    case COLLECTIONS.PROMOTIONS_COLLECTION: {\n      this.promotions.isAllowedToManageDocuments({\n        promotionId: docId,\n        userId,\n      });\n      break;\n    }\n    case COLLECTIONS.PROPERTIES_COLLECTION: {\n      if (this.properties.isPromotionLot(docId)) {\n        this.promotions.isAllowedToManagePromotionLotDocuments({\n          propertyId: docId,\n          userId,\n        });\n        break;\n      }\n\n      this.properties.isAllowedToUpdate(docId, userId);\n      break;\n    }\n    default:\n      this[collection].isAllowedToUpdate(docId);\n    }\n  }\n}\n"]},"sourceType":"script","hash":"74e0174be6129af5adea4e86e7f6fd6525cf437a"}
