{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/ModalManager/ModalManager.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/components/ModalManager/ModalManager.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/ModalManager/ModalManager.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/ModalManager/ModalManager.jsx"],"names":["React","useReducer","Dialog","ModalManagerContext","DialogComponents","ModalManagerProps","initialState","activeModal","id","openFirstModal","state","payload","modals","firstModal","length","Error","newState","reduce","obj","modal","index","modalId","reducer","action","type","Array","isArray","removedModal","pendingModals","Object","keys","nextModal","Math","min","returnValue","ModalManager","children","dispatch","title","actions","description","content","dialogProps","openModal","closeModal","closeAll"],"mappings":"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","sourcesContent":["// @flow\nimport React, { useReducer } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport ModalManagerContext from './ModalManagerContext';\nimport DialogComponents from './DialogComponents';\n\ntype ModalManagerProps = {};\n\nconst initialState = { activeModal: null };\n\nlet id = 0;\n\nconst openFirstModal = (state, { payload: modals }) => {\n  let firstModal;\n\n  if (modals.length === 0) {\n    throw new Error('Cannot pass an empty array to ModalManager');\n  }\n\n  const newState = modals.reduce((obj, modal, index) => {\n    const modalId = id;\n\n    if (index === 0) {\n      firstModal = modalId;\n    }\n\n    id += 1;\n    return { ...obj, [modalId]: modal };\n  }, state);\n\n  return { ...newState, activeModal: firstModal };\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n  case 'OPEN_MODAL': {\n    if (Array.isArray(action.payload)) {\n      return openFirstModal(state, action);\n    }\n\n    const modalId = id;\n    id += 1;\n    if (state.activeModal === null) {\n      return { ...state, [modalId]: action.payload, activeModal: modalId };\n    }\n    return { ...state, [modalId]: action.payload };\n  }\n  case 'CLOSE_MODAL': {\n    const {\n      [action.payload.activeModal]: removedModal,\n      activeModal,\n      ...newState\n    } = state;\n    const pendingModals = Object.keys(newState);\n    if (pendingModals.length > 0) {\n      const nextModal = Math.min(...pendingModals);\n      return {\n        ...newState,\n        activeModal: nextModal,\n        [nextModal]: {\n          ...newState[nextModal],\n          returnValue: action.payload.returnValue,\n        },\n      };\n    }\n    return { ...newState, activeModal: null };\n  }\n  case 'CLOSE_ALL': {\n    return initialState;\n  }\n\n  default:\n    return state;\n  }\n};\n\nconst ModalManager = ({ children }: ModalManagerProps) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { activeModal } = state;\n  const { title, actions, description, content, ...dialogProps } = state[activeModal] || {};\n\n  const openModal = (payload) => {\n    dispatch({ type: 'OPEN_MODAL', payload });\n  };\n\n  const closeModal = returnValue =>\n    dispatch({ type: 'CLOSE_MODAL', payload: { activeModal, returnValue } });\n\n  const closeAll = () => dispatch({ type: 'CLOSE_ALL' });\n\n  return (\n    <ModalManagerContext.Provider value={{ openModal }}>\n      {children}\n      <Dialog {...dialogProps} open={activeModal !== null} onClose={closeModal}>\n        <DialogComponents\n          returnValue={state[activeModal] && state[activeModal].returnValue}\n          dialogContent={state[activeModal]}\n          closeModal={closeModal}\n          closeAll={closeAll}\n        />\n      </Dialog>\n    </ModalManagerContext.Provider>\n  );\n};\n\nexport default ModalManager;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/ModalManager/ModalManager.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/ModalManager/ModalManager.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nlet React, useReducer;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useReducer(v) {\n    useReducer = v;\n  }\n\n}, 0);\nlet Dialog;\nmodule.link(\"@material-ui/core/Dialog\", {\n  default(v) {\n    Dialog = v;\n  }\n\n}, 1);\nlet ModalManagerContext;\nmodule.link(\"./ModalManagerContext\", {\n  default(v) {\n    ModalManagerContext = v;\n  }\n\n}, 2);\nlet DialogComponents;\nmodule.link(\"./DialogComponents\", {\n  default(v) {\n    DialogComponents = v;\n  }\n\n}, 3);\nconst initialState = {\n  activeModal: null\n};\nlet id = 0;\n\nconst openFirstModal = (state, {\n  payload: modals\n}) => {\n  let firstModal;\n\n  if (modals.length === 0) {\n    throw new Error('Cannot pass an empty array to ModalManager');\n  }\n\n  const newState = modals.reduce((obj, modal, index) => {\n    const modalId = id;\n\n    if (index === 0) {\n      firstModal = modalId;\n    }\n\n    id += 1;\n    return (0, _objectSpread2.default)({}, obj, {\n      [modalId]: modal\n    });\n  }, state);\n  return (0, _objectSpread2.default)({}, newState, {\n    activeModal: firstModal\n  });\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'OPEN_MODAL':\n      {\n        if (Array.isArray(action.payload)) {\n          return openFirstModal(state, action);\n        }\n\n        const modalId = id;\n        id += 1;\n\n        if (state.activeModal === null) {\n          return (0, _objectSpread2.default)({}, state, {\n            [modalId]: action.payload,\n            activeModal: modalId\n          });\n        }\n\n        return (0, _objectSpread2.default)({}, state, {\n          [modalId]: action.payload\n        });\n      }\n\n    case 'CLOSE_MODAL':\n      {\n        const _action$payload$activ = action.payload.activeModal,\n              {\n          [_action$payload$activ]: removedModal,\n          activeModal\n        } = state,\n              newState = (0, _objectWithoutProperties2.default)(state, [_action$payload$activ, \"activeModal\"].map(_toPropertyKey));\n        const pendingModals = Object.keys(newState);\n\n        if (pendingModals.length > 0) {\n          const nextModal = Math.min(...pendingModals);\n          return (0, _objectSpread2.default)({}, newState, {\n            activeModal: nextModal,\n            [nextModal]: (0, _objectSpread2.default)({}, newState[nextModal], {\n              returnValue: action.payload.returnValue\n            })\n          });\n        }\n\n        return (0, _objectSpread2.default)({}, newState, {\n          activeModal: null\n        });\n      }\n\n    case 'CLOSE_ALL':\n      {\n        return initialState;\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst ModalManager = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    activeModal\n  } = state;\n\n  const _ref = state[activeModal] || {},\n        {\n    title,\n    actions,\n    description,\n    content\n  } = _ref,\n        dialogProps = (0, _objectWithoutProperties2.default)(_ref, [\"title\", \"actions\", \"description\", \"content\"]);\n\n  const openModal = payload => {\n    dispatch({\n      type: 'OPEN_MODAL',\n      payload\n    });\n  };\n\n  const closeModal = returnValue => dispatch({\n    type: 'CLOSE_MODAL',\n    payload: {\n      activeModal,\n      returnValue\n    }\n  });\n\n  const closeAll = () => dispatch({\n    type: 'CLOSE_ALL'\n  });\n\n  return React.createElement(ModalManagerContext.Provider, {\n    value: {\n      openModal\n    }\n  }, children, React.createElement(Dialog, (0, _extends2.default)({}, dialogProps, {\n    open: activeModal !== null,\n    onClose: closeModal\n  }), React.createElement(DialogComponents, {\n    returnValue: state[activeModal] && state[activeModal].returnValue,\n    dialogContent: state[activeModal],\n    closeModal: closeModal,\n    closeAll: closeAll\n  })));\n};\n\nmodule.exportDefault(ModalManager);","map":{"version":3,"sources":["imports/core/components/ModalManager/ModalManager.jsx"],"names":["initialState","activeModal","id","openFirstModal","payload","modals","newState","modalId","index","firstModal","modal","reducer","action","Array","state","pendingModals","Object","nextModal","Math","returnValue","ModalManager","children","useReducer","dialogProps","openModal","dispatch","type","closeModal","closeAll"],"mappings":"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","sourcesContent":["// @flow\nimport React, { useReducer } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport ModalManagerContext from './ModalManagerContext';\nimport DialogComponents from './DialogComponents';\n\ntype ModalManagerProps = {};\n\nconst initialState = { activeModal: null };\n\nlet id = 0;\n\nconst openFirstModal = (state, { payload: modals }) => {\n  let firstModal;\n\n  if (modals.length === 0) {\n    throw new Error('Cannot pass an empty array to ModalManager');\n  }\n\n  const newState = modals.reduce((obj, modal, index) => {\n    const modalId = id;\n\n    if (index === 0) {\n      firstModal = modalId;\n    }\n\n    id += 1;\n    return { ...obj, [modalId]: modal };\n  }, state);\n\n  return { ...newState, activeModal: firstModal };\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n  case 'OPEN_MODAL': {\n    if (Array.isArray(action.payload)) {\n      return openFirstModal(state, action);\n    }\n\n    const modalId = id;\n    id += 1;\n    if (state.activeModal === null) {\n      return { ...state, [modalId]: action.payload, activeModal: modalId };\n    }\n    return { ...state, [modalId]: action.payload };\n  }\n  case 'CLOSE_MODAL': {\n    const {\n      [action.payload.activeModal]: removedModal,\n      activeModal,\n      ...newState\n    } = state;\n    const pendingModals = Object.keys(newState);\n    if (pendingModals.length > 0) {\n      const nextModal = Math.min(...pendingModals);\n      return {\n        ...newState,\n        activeModal: nextModal,\n        [nextModal]: {\n          ...newState[nextModal],\n          returnValue: action.payload.returnValue,\n        },\n      };\n    }\n    return { ...newState, activeModal: null };\n  }\n  case 'CLOSE_ALL': {\n    return initialState;\n  }\n\n  default:\n    return state;\n  }\n};\n\nconst ModalManager = ({ children }: ModalManagerProps) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { activeModal } = state;\n  const { title, actions, description, content, ...dialogProps } = state[activeModal] || {};\n\n  const openModal = (payload) => {\n    dispatch({ type: 'OPEN_MODAL', payload });\n  };\n\n  const closeModal = returnValue =>\n    dispatch({ type: 'CLOSE_MODAL', payload: { activeModal, returnValue } });\n\n  const closeAll = () => dispatch({ type: 'CLOSE_ALL' });\n\n  return (\n    <ModalManagerContext.Provider value={{ openModal }}>\n      {children}\n      <Dialog {...dialogProps} open={activeModal !== null} onClose={closeModal}>\n        <DialogComponents\n          returnValue={state[activeModal] && state[activeModal].returnValue}\n          dialogContent={state[activeModal]}\n          closeModal={closeModal}\n          closeAll={closeAll}\n        />\n      </Dialog>\n    </ModalManagerContext.Provider>\n  );\n};\n\nexport default ModalManager;\n"]},"sourceType":"script","hash":"938e9722821bfd8304300e45b24065837abf6f41"}
