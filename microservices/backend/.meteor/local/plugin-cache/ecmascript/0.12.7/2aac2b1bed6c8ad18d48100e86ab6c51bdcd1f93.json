{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/test/PDFService.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/pdf/server/test/PDFService.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/test/PDFService.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/pdf/server/test/PDFService.test.js"],"names":["resetDatabase","expect","base64","fs","cheerio","PROPERTY_TYPE","RESIDENCE_TYPE","PURCHASE_TYPE","CIVIL_STATUS","PDF_TYPES","GENDER","PDFService","getTwoBorrowersLoan","getFullLoan","FAKE_USER","describe","beforeEach","it","skip","loanId","purchaseType","ACQUISITION","residenceType","MAIN_RESIDENCE","borrowers","borrowerInfos","firstName","lastName","gender","M","age","childrenCount","civilStatus","MARRIED","zipCode","city","withSalary","withBonus","withBankFortune","withInsurance2","withInsurance3A","withBank3A","withInsurance3B","withThirdPartyFortune","withOtherIncome","withOtherFortune","withExpenses","withRealEstate","F","company","structures","withBankWithdraw","withInsurance3APledge","withThirdPartyFortuneWithdraw","withCustomNotaryFees","withInsurance3AWithdraw","propertyType","FLAT","loan","generateDataAsPDF","data","type","LOAN","then","response","file","readFileSync","$","load","base64Decode","base64ToStr","to","include","catch","console","log"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { expect } from 'chai';\nimport base64 from 'base64topdf';\nimport fs from 'fs';\nimport cheerio from 'cheerio';\n\nimport {\n  PROPERTY_TYPE,\n  RESIDENCE_TYPE,\n  PURCHASE_TYPE,\n  CIVIL_STATUS,\n  PDF_TYPES,\n  GENDER,\n} from '../../../constants';\nimport PDFService from '../PDFService';\nimport { getTwoBorrowersLoan, getFullLoan } from './testFactories';\nimport { FAKE_USER } from './testFactories/fakes';\n\ndescribe('PDFService', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  it.skip('returns a base64 encoded PDF', () => {\n    const loanId = getTwoBorrowersLoan({\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      borrowers: [\n        {\n          borrowerInfos: {\n            firstName: 'John',\n            lastName: 'Doe',\n            gender: GENDER.M,\n            age: 51,\n            childrenCount: 2,\n            civilStatus: CIVIL_STATUS.MARRIED,\n            zipCode: 1400,\n            city: 'Yverdon-les-Bains',\n          },\n          withSalary: true,\n          withBonus: true,\n          withBankFortune: true,\n          withInsurance2: true,\n          withInsurance3A: true,\n          withBank3A: true,\n          withInsurance3B: true,\n          withThirdPartyFortune: true,\n          withOtherIncome: true,\n          withOtherFortune: true,\n          withExpenses: true,\n          withRealEstate: true,\n        },\n        {\n          borrowerInfos: {\n            firstName: 'Maria',\n            lastName: 'Doe',\n            gender: GENDER.F,\n            age: 49,\n            company: \"McDonald's\",\n            civilStatus: CIVIL_STATUS.MARRIED,\n            zipCode: 1400,\n            city: 'Yverdon-les-Bains',\n          },\n          withSalary: true,\n          withInsurance2: true,\n        },\n      ],\n      structures: [\n        {\n          withBankWithdraw: true,\n          withInsurance3APledge: true,\n          withThirdPartyFortuneWithdraw: true,\n        },\n        {\n          withCustomNotaryFees: true,\n          withBankWithdraw: true,\n          withInsurance3AWithdraw: true,\n        },\n      ],\n      propertyType: PROPERTY_TYPE.FLAT,\n    });\n\n    const loan = getFullLoan(loanId);\n\n    return PDFService.generateDataAsPDF(\n      { data: { ...loan, ...FAKE_USER }, type: PDF_TYPES.LOAN },\n      true,\n    )\n      .then((response) => {\n        const file = fs.readFileSync('/tmp/pdf_output.html', 'utf8');\n        const $ = cheerio.load(file);\n\n        base64.base64Decode(response.base64, '/tmp/pdf_output.pdf');\n        expect(base64.base64ToStr(response.base64)).to.include('PDF');\n      })\n      .catch(console.log);\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/test/PDFService.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/pdf/server/test/PDFService.test.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 0);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 1);\nlet base64;\nmodule.link(\"base64topdf\", {\n  default(v) {\n    base64 = v;\n  }\n\n}, 2);\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 3);\nlet cheerio;\nmodule.link(\"cheerio\", {\n  default(v) {\n    cheerio = v;\n  }\n\n}, 4);\nlet PROPERTY_TYPE, RESIDENCE_TYPE, PURCHASE_TYPE, CIVIL_STATUS, PDF_TYPES, GENDER;\nmodule.link(\"../../../constants\", {\n  PROPERTY_TYPE(v) {\n    PROPERTY_TYPE = v;\n  },\n\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  },\n\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  },\n\n  CIVIL_STATUS(v) {\n    CIVIL_STATUS = v;\n  },\n\n  PDF_TYPES(v) {\n    PDF_TYPES = v;\n  },\n\n  GENDER(v) {\n    GENDER = v;\n  }\n\n}, 5);\nlet PDFService;\nmodule.link(\"../PDFService\", {\n  default(v) {\n    PDFService = v;\n  }\n\n}, 6);\nlet getTwoBorrowersLoan, getFullLoan;\nmodule.link(\"./testFactories\", {\n  getTwoBorrowersLoan(v) {\n    getTwoBorrowersLoan = v;\n  },\n\n  getFullLoan(v) {\n    getFullLoan = v;\n  }\n\n}, 7);\nlet FAKE_USER;\nmodule.link(\"./testFactories/fakes\", {\n  FAKE_USER(v) {\n    FAKE_USER = v;\n  }\n\n}, 8);\ndescribe('PDFService', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n  it.skip('returns a base64 encoded PDF', () => {\n    const loanId = getTwoBorrowersLoan({\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      borrowers: [{\n        borrowerInfos: {\n          firstName: 'John',\n          lastName: 'Doe',\n          gender: GENDER.M,\n          age: 51,\n          childrenCount: 2,\n          civilStatus: CIVIL_STATUS.MARRIED,\n          zipCode: 1400,\n          city: 'Yverdon-les-Bains'\n        },\n        withSalary: true,\n        withBonus: true,\n        withBankFortune: true,\n        withInsurance2: true,\n        withInsurance3A: true,\n        withBank3A: true,\n        withInsurance3B: true,\n        withThirdPartyFortune: true,\n        withOtherIncome: true,\n        withOtherFortune: true,\n        withExpenses: true,\n        withRealEstate: true\n      }, {\n        borrowerInfos: {\n          firstName: 'Maria',\n          lastName: 'Doe',\n          gender: GENDER.F,\n          age: 49,\n          company: \"McDonald's\",\n          civilStatus: CIVIL_STATUS.MARRIED,\n          zipCode: 1400,\n          city: 'Yverdon-les-Bains'\n        },\n        withSalary: true,\n        withInsurance2: true\n      }],\n      structures: [{\n        withBankWithdraw: true,\n        withInsurance3APledge: true,\n        withThirdPartyFortuneWithdraw: true\n      }, {\n        withCustomNotaryFees: true,\n        withBankWithdraw: true,\n        withInsurance3AWithdraw: true\n      }],\n      propertyType: PROPERTY_TYPE.FLAT\n    });\n    const loan = getFullLoan(loanId);\n    return PDFService.generateDataAsPDF({\n      data: (0, _objectSpread2.default)({}, loan, FAKE_USER),\n      type: PDF_TYPES.LOAN\n    }, true).then(response => {\n      const file = fs.readFileSync('/tmp/pdf_output.html', 'utf8');\n      const $ = cheerio.load(file);\n      base64.base64Decode(response.base64, '/tmp/pdf_output.pdf');\n      expect(base64.base64ToStr(response.base64)).to.include('PDF');\n    }).catch(console.log);\n  });\n});","map":{"version":3,"sources":["imports/core/api/pdf/server/test/PDFService.test.js"],"names":["describe","beforeEach","resetDatabase","it","loanId","getTwoBorrowersLoan","purchaseType","PURCHASE_TYPE","residenceType","RESIDENCE_TYPE","borrowers","borrowerInfos","firstName","lastName","gender","GENDER","age","childrenCount","civilStatus","CIVIL_STATUS","zipCode","city","withSalary","withBonus","withBankFortune","withInsurance2","withInsurance3A","withBank3A","withInsurance3B","withThirdPartyFortune","withOtherIncome","withOtherFortune","withExpenses","withRealEstate","company","structures","withBankWithdraw","withInsurance3APledge","withThirdPartyFortuneWithdraw","withCustomNotaryFees","withInsurance3AWithdraw","propertyType","PROPERTY_TYPE","FLAT","loan","getFullLoan","data","FAKE_USER","type","PDF_TYPES","LOAN","response","file","fs","$","cheerio","base64","expect","console"],"mappings":";;;;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,aAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,EAAA;AAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,EAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,SAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA,EAAA,cAAA,EAAA,aAAA,EAAA,YAAA,EAAA,SAAA,EAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,cAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,mBAAA,EAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iBAAA,EAAA;AAAA,EAAA,mBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAoBAA,QAAQ,CAAA,YAAA,EAAe,MAAM;AAC3BC,EAAAA,UAAU,CAAC,MAAM;AACfC,IAAAA,aAAa;AADfD,GAAU,CAAVA;AAIAE,EAAAA,EAAE,CAAFA,IAAAA,CAAAA,8BAAAA,EAAwC,MAAM;AAC5C,UAAMC,MAAM,GAAGC,mBAAmB,CAAC;AACjCC,MAAAA,YAAY,EAAEC,aAAa,CADM,WAAA;AAEjCC,MAAAA,aAAa,EAAEC,cAAc,CAFI,cAAA;AAGjCC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,aAAa,EAAE;AACbC,UAAAA,SAAS,EADI,MAAA;AAEbC,UAAAA,QAAQ,EAFK,KAAA;AAGbC,UAAAA,MAAM,EAAEC,MAAM,CAHD,CAAA;AAIbC,UAAAA,GAAG,EAJU,EAAA;AAKbC,UAAAA,aAAa,EALA,CAAA;AAMbC,UAAAA,WAAW,EAAEC,YAAY,CANZ,OAAA;AAObC,UAAAA,OAAO,EAPM,IAAA;AAQbC,UAAAA,IAAI,EAAE;AARO,SADjB;AAWEC,QAAAA,UAAU,EAXZ,IAAA;AAYEC,QAAAA,SAAS,EAZX,IAAA;AAaEC,QAAAA,eAAe,EAbjB,IAAA;AAcEC,QAAAA,cAAc,EAdhB,IAAA;AAeEC,QAAAA,eAAe,EAfjB,IAAA;AAgBEC,QAAAA,UAAU,EAhBZ,IAAA;AAiBEC,QAAAA,eAAe,EAjBjB,IAAA;AAkBEC,QAAAA,qBAAqB,EAlBvB,IAAA;AAmBEC,QAAAA,eAAe,EAnBjB,IAAA;AAoBEC,QAAAA,gBAAgB,EApBlB,IAAA;AAqBEC,QAAAA,YAAY,EArBd,IAAA;AAsBEC,QAAAA,cAAc,EAAE;AAtBlB,OADS,EAyBT;AACEtB,QAAAA,aAAa,EAAE;AACbC,UAAAA,SAAS,EADI,OAAA;AAEbC,UAAAA,QAAQ,EAFK,KAAA;AAGbC,UAAAA,MAAM,EAAEC,MAAM,CAHD,CAAA;AAIbC,UAAAA,GAAG,EAJU,EAAA;AAKbkB,UAAAA,OAAO,EALM,YAAA;AAMbhB,UAAAA,WAAW,EAAEC,YAAY,CANZ,OAAA;AAObC,UAAAA,OAAO,EAPM,IAAA;AAQbC,UAAAA,IAAI,EAAE;AARO,SADjB;AAWEC,QAAAA,UAAU,EAXZ,IAAA;AAYEG,QAAAA,cAAc,EAAE;AAZlB,OAzBS,CAHsB;AA2CjCU,MAAAA,UAAU,EAAE,CACV;AACEC,QAAAA,gBAAgB,EADlB,IAAA;AAEEC,QAAAA,qBAAqB,EAFvB,IAAA;AAGEC,QAAAA,6BAA6B,EAAE;AAHjC,OADU,EAMV;AACEC,QAAAA,oBAAoB,EADtB,IAAA;AAEEH,QAAAA,gBAAgB,EAFlB,IAAA;AAGEI,QAAAA,uBAAuB,EAAE;AAH3B,OANU,CA3CqB;AAuDjCC,MAAAA,YAAY,EAAEC,aAAa,CAACC;AAvDK,KAAD,CAAlC;AA0DA,UAAMC,IAAI,GAAGC,WAAW,CAAxB,MAAwB,CAAxB;AAEA,WAAO,UAAU,CAAV,iBAAA,CACL;AAAEC,MAAAA,IAAI,kCAAE,IAAF,EAAgBC,SAAhB,CAAN;AAAmCC,MAAAA,IAAI,EAAEC,SAAS,CAACC;AAAnD,KADK,EAAA,IAAA,EAAA,IAAA,CAIEC,QAAD,IAAc;AAClB,YAAMC,IAAI,GAAGC,EAAE,CAAFA,YAAAA,CAAAA,sBAAAA,EAAb,MAAaA,CAAb;AACA,YAAMC,CAAC,GAAGC,OAAO,CAAPA,IAAAA,CAAV,IAAUA,CAAV;AAEAC,MAAAA,MAAM,CAANA,YAAAA,CAAoBL,QAAQ,CAA5BK,MAAAA,EAAAA,qBAAAA;AACAC,MAAAA,MAAM,CAACD,MAAM,CAANA,WAAAA,CAAmBL,QAAQ,CAAlCM,MAAOD,CAAD,CAANC,CAAAA,EAAAA,CAAAA,OAAAA,CAAAA,KAAAA;AATG,KAAA,EAAA,KAAA,CAWEC,OAAO,CAXhB,GAAO,CAAP;AA7DFvD,GAAAA;AALFH,CAAQ,CAARA","sourcesContent":["/* eslint-env mocha */\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { expect } from 'chai';\nimport base64 from 'base64topdf';\nimport fs from 'fs';\nimport cheerio from 'cheerio';\n\nimport {\n  PROPERTY_TYPE,\n  RESIDENCE_TYPE,\n  PURCHASE_TYPE,\n  CIVIL_STATUS,\n  PDF_TYPES,\n  GENDER,\n} from '../../../constants';\nimport PDFService from '../PDFService';\nimport { getTwoBorrowersLoan, getFullLoan } from './testFactories';\nimport { FAKE_USER } from './testFactories/fakes';\n\ndescribe('PDFService', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  it.skip('returns a base64 encoded PDF', () => {\n    const loanId = getTwoBorrowersLoan({\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      borrowers: [\n        {\n          borrowerInfos: {\n            firstName: 'John',\n            lastName: 'Doe',\n            gender: GENDER.M,\n            age: 51,\n            childrenCount: 2,\n            civilStatus: CIVIL_STATUS.MARRIED,\n            zipCode: 1400,\n            city: 'Yverdon-les-Bains',\n          },\n          withSalary: true,\n          withBonus: true,\n          withBankFortune: true,\n          withInsurance2: true,\n          withInsurance3A: true,\n          withBank3A: true,\n          withInsurance3B: true,\n          withThirdPartyFortune: true,\n          withOtherIncome: true,\n          withOtherFortune: true,\n          withExpenses: true,\n          withRealEstate: true,\n        },\n        {\n          borrowerInfos: {\n            firstName: 'Maria',\n            lastName: 'Doe',\n            gender: GENDER.F,\n            age: 49,\n            company: \"McDonald's\",\n            civilStatus: CIVIL_STATUS.MARRIED,\n            zipCode: 1400,\n            city: 'Yverdon-les-Bains',\n          },\n          withSalary: true,\n          withInsurance2: true,\n        },\n      ],\n      structures: [\n        {\n          withBankWithdraw: true,\n          withInsurance3APledge: true,\n          withThirdPartyFortuneWithdraw: true,\n        },\n        {\n          withCustomNotaryFees: true,\n          withBankWithdraw: true,\n          withInsurance3AWithdraw: true,\n        },\n      ],\n      propertyType: PROPERTY_TYPE.FLAT,\n    });\n\n    const loan = getFullLoan(loanId);\n\n    return PDFService.generateDataAsPDF(\n      { data: { ...loan, ...FAKE_USER }, type: PDF_TYPES.LOAN },\n      true,\n    )\n      .then((response) => {\n        const file = fs.readFileSync('/tmp/pdf_output.html', 'utf8');\n        const $ = cheerio.load(file);\n\n        base64.base64Decode(response.base64, '/tmp/pdf_output.pdf');\n        expect(base64.base64ToStr(response.base64)).to.include('PDF');\n      })\n      .catch(console.log);\n  });\n});\n"]},"sourceType":"script","hash":"2aac2b1bed6c8ad18d48100e86ab6c51bdcd1f93"}
