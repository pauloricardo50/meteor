{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/StructureRecapTable.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/StructureRecapTable.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/StructureRecapTable.jsx","inputSourceMap":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/StructureRecapTable.jsx"],"names":["React","Calculator","toMoney","PercentWithStatus","ERROR","SUCCESS","classes","ROW_TYPES","StructureRecapTableProps","columnStyles","width","textAlign","getRows","loan","structureIds","organisation","lenderRules","TITLE","map","structureId","structures","find","id","name","index","calculator","loanValue","selectLoanValue","borrowRatio","getBorrowRatio","incomeRatio","getIncomeRatio","display","alignItems","justifyContent","maxBorrowRatio","maxIncomeRatio","StructureRecapTable"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT;AACA,SAASC,OAAT;AACA,OAAOC,iBAAP;AACA,SAASC,KAAT,EAAgBC,OAAhB;AACA,SAASC,OAAT,EAAkBC,SAAlB;AAEA,KAAKC,wBAAL,GAAgC,EAAhC;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,KAAK,EAAE;AAAT,CADmB,EAEnB;AAAEA,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,SAAS,EAAE;AAA3B,CAFmB,EAGnB;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,SAAS,EAAE;AAA3B,CAHmB,EAInB;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,SAAS,EAAE;AAA3B,CAJmB,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAD,KAA0C;AACxD,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,YAAY,IAAI,EAAxC;AAEA,SAAO,CACL,CAAC,EAAD,CAAI,IAAI,GAAR,CAAY,UAAU,CAACT,OAAO,CAACC,SAAS,CAACU,KAAX,CAAR,CAAtB;MACE,CAAC,EAAD,CAAI,MAAM,CAACR,YAAY,CAAC,CAAD,CAAb,CAAV,CAA4B,QAAQ,EAAE,EAAF;MACpC,CAAC,EAAD,CAAI,MAAM,CAACA,YAAY,CAAC,CAAD,CAAb,CAAV,CAA4B,iBAAiB,EAAE,EAAF;MAC7C,CAAC,EAAD,CAAI,MAAM,CAACA,YAAY,CAAC,CAAD,CAAb,CAAV,CAA4B,aAAa,EAAE,EAAF;MACzC,CAAC,EAAD,CAAI,MAAM,CAACA,YAAY,CAAC,CAAD,CAAb,CAAV,CAA4B,aAAa,EAAE,EAAF;IAC3C,EAAE,EAAF,CANK,EAOL,GAAGK,YAAY,CACZI,GADA,CACIC,WAAW,IAAIN,IAAI,CAACO,UAAL,CAAgBC,IAAhB,CAAqB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAYA,EAAE,KAAKH,WAAxC,CADnB,EAEAD,GAFA,CAEI,CAAC;AAAEI,IAAAA,EAAE,EAAEH,WAAN;AAAmBI,IAAAA;AAAnB,GAAD,EAA4BC,KAA5B,KAAsC;AACzC,UAAMC,UAAU,GAAG,IAAIxB,UAAJ,CAAe;AAChCY,MAAAA,IADgC;AAEhCM,MAAAA,WAFgC;AAGhCH,MAAAA;AAHgC,KAAf,CAAnB;AAKA,UAAMU,SAAS,GAAGD,UAAU,CAACE,eAAX,CAA2B;AAAEd,MAAAA,IAAF;AAAQM,MAAAA;AAAR,KAA3B,CAAlB;AACA,UAAMS,WAAW,GAAGH,UAAU,CAACI,cAAX,CAA0B;AAAEhB,MAAAA,IAAF;AAAQM,MAAAA;AAAR,KAA1B,CAApB;AACA,UAAMW,WAAW,GAAGL,UAAU,CAACM,cAAX,CAA0B;AAAElB,MAAAA,IAAF;AAAQM,MAAAA;AAAR,KAA1B,CAApB;AAEA,WACE,CAAC,EAAD,CAAI,IAAI,CAACA,WAAD,CAAR;YACE,CAAC,EAAD,CAAI,MAAM,CAACV,YAAY,CAAC,CAAD,CAAb,CAAV;cACE,CAACc,IAAI,IAAIC,KAAK,GAAG,CAAjB,CAAmB,OAAO,CAACA,KAAK,GAAG,CAAT,CAAW;YACvC,EAAE,EAAF;YACA,CAAC,EAAD,CAAI,MAAM,CAACf,YAAY,CAAC,CAAD,CAAb,CAAV,CAA4B,CAACP,OAAO,CAACwB,SAAD,CAAR,CAAoB,EAAE,EAAF;YAChD,CAAC,EAAD,CAAI,MAAM,CAACjB,YAAY,CAAC,CAAD,CAAb,CAAV;cACE,CAAC,GAAD,CACE,MAAM,CAAC;AACLuB,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,UAAU,EAAE,QAFP;AAGLC,UAAAA,cAAc,EAAE;AAHX,SAAD,CADR;gBAOE,CAAC,iBAAD,CACE,MAAM,CAACN,WAAD,CADR,CAEE,OAAO,CACLA,WAAW,GAAGH,UAAU,CAACU,cAAzB,GAA0C/B,KAA1C,GAAkDC,OAD7C,CAFT;cAMF,EAAE,GAAF;YACF,EAAE,EAAF;YACA,CAAC,EAAD,CAAI,MAAM,CAACI,YAAY,CAAC,CAAD,CAAb,CAAV;cACE,CAAC,GAAD,CACE,MAAM,CAAC;AACLuB,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,UAAU,EAAE,QAFP;AAGLC,UAAAA,cAAc,EAAE;AAHX,SAAD,CADR;gBAOE,CAAC,iBAAD,CACE,MAAM,CAACJ,WAAD,CADR,CAEE,OAAO,CACLA,WAAW,GAAGL,UAAU,CAACW,cAAzB,GAA0ChC,KAA1C,GAAkDC,OAD7C,CAFT;cAMF,EAAE,GAAF;YACF,EAAE,EAAF;UACF,EAAE,EAAF,CAtCF;AAwCD,GApDA,CAPE,CAAP;AA6DD,CAhED;;AAkEA,MAAMgC,mBAAmB,GAAG,CAAC;AAC3BxB,EAAAA,IAD2B;AAE3BC,EAAAA,YAF2B;AAG3BC,EAAAA;AAH2B,CAI5B,EAAEP,wBAJyB,KAK1B,CAAC,KAAD,CAAO,UAAU,iCAAjB;IACE,CAACI,OAAO,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,GAAD,CAAR;EACF,EAAE,KAAF,CAPF;;AAUA,eAAesB,mBAAf","sourcesContent":["// @flow\nimport React from 'react';\n\nimport { Calculator } from '../../../../../../utils/Calculator';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport PercentWithStatus from '../../../../../../components/PercentWithStatus';\nimport { ERROR, SUCCESS } from '../../../../../constants';\nimport { classes, ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype StructureRecapTableProps = {};\n\nconst columnStyles = [\n  { width: '50%' },\n  { width: '20%', textAlign: 'right' },\n  { width: '15%', textAlign: 'right' },\n  { width: '15%', textAlign: 'right' },\n];\n\nconst getRows = ({ loan, structureIds, organisation }) => {\n  const { lenderRules } = organisation || {};\n\n  return [\n    <tr key=\"0\" className={classes[ROW_TYPES.TITLE]}>\n      <td style={columnStyles[0]}>Scénario</td>\n      <td style={columnStyles[1]}>Prêt hypothécaire</td>\n      <td style={columnStyles[2]}>Taux d'avance</td>\n      <td style={columnStyles[3]}>Taux d'effort</td>\n    </tr>,\n    ...structureIds\n      .map(structureId => loan.structures.find(({ id }) => id === structureId))\n      .map(({ id: structureId, name }, index) => {\n        const calculator = new Calculator({\n          loan,\n          structureId,\n          lenderRules,\n        });\n        const loanValue = calculator.selectLoanValue({ loan, structureId });\n        const borrowRatio = calculator.getBorrowRatio({ loan, structureId });\n        const incomeRatio = calculator.getIncomeRatio({ loan, structureId });\n\n        return (\n          <tr key={structureId}>\n            <td style={columnStyles[0]}>\n              {name || index + 1} (page {index + 2})\n            </td>\n            <td style={columnStyles[1]}>{toMoney(loanValue)}</td>\n            <td style={columnStyles[2]}>\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                }}\n              >\n                <PercentWithStatus\n                  value={borrowRatio}\n                  status={\n                    borrowRatio > calculator.maxBorrowRatio ? ERROR : SUCCESS\n                  }\n                />\n              </div>\n            </td>\n            <td style={columnStyles[3]}>\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                }}\n              >\n                <PercentWithStatus\n                  value={incomeRatio}\n                  status={\n                    incomeRatio > calculator.maxIncomeRatio ? ERROR : SUCCESS\n                  }\n                />\n              </div>\n            </td>\n          </tr>\n        );\n      }),\n  ];\n};\n\nconst StructureRecapTable = ({\n  loan,\n  structureIds,\n  organisation,\n}: StructureRecapTableProps) => (\n  <table className=\"pdf-table structure-recap-table\">\n    {getRows({ loan, structureIds, organisation })}\n  </table>\n);\n\nexport default StructureRecapTable;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/StructureRecapTable.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/StructureRecapTable.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Calculator;\nmodule.link(\"../../../../../../utils/Calculator\", {\n  Calculator(v) {\n    Calculator = v;\n  }\n\n}, 1);\nlet toMoney;\nmodule.link(\"../../../../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 2);\nlet PercentWithStatus;\nmodule.link(\"../../../../../../components/PercentWithStatus\", {\n  default(v) {\n    PercentWithStatus = v;\n  }\n\n}, 3);\nlet ERROR, SUCCESS;\nmodule.link(\"../../../../../constants\", {\n  ERROR(v) {\n    ERROR = v;\n  },\n\n  SUCCESS(v) {\n    SUCCESS = v;\n  }\n\n}, 4);\nlet classes, ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  classes(v) {\n    classes = v;\n  },\n\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 5);\nconst columnStyles = [{\n  width: '50%'\n}, {\n  width: '20%',\n  textAlign: 'right'\n}, {\n  width: '15%',\n  textAlign: 'right'\n}, {\n  width: '15%',\n  textAlign: 'right'\n}];\n\nconst getRows = ({\n  loan,\n  structureIds,\n  organisation\n}) => {\n  const {\n    lenderRules\n  } = organisation || {};\n  return [React.createElement(\"tr\", {\n    key: \"0\",\n    className: classes[ROW_TYPES.TITLE]\n  }, React.createElement(\"td\", {\n    style: columnStyles[0]\n  }, \"Sc\\xE9nario\"), React.createElement(\"td\", {\n    style: columnStyles[1]\n  }, \"Pr\\xEAt hypoth\\xE9caire\"), React.createElement(\"td\", {\n    style: columnStyles[2]\n  }, \"Taux d'avance\"), React.createElement(\"td\", {\n    style: columnStyles[3]\n  }, \"Taux d'effort\")), ...structureIds.map(structureId => loan.structures.find(({\n    id\n  }) => id === structureId)).map(({\n    id: structureId,\n    name\n  }, index) => {\n    const calculator = new Calculator({\n      loan,\n      structureId,\n      lenderRules\n    });\n    const loanValue = calculator.selectLoanValue({\n      loan,\n      structureId\n    });\n    const borrowRatio = calculator.getBorrowRatio({\n      loan,\n      structureId\n    });\n    const incomeRatio = calculator.getIncomeRatio({\n      loan,\n      structureId\n    });\n    return React.createElement(\"tr\", {\n      key: structureId\n    }, React.createElement(\"td\", {\n      style: columnStyles[0]\n    }, name || index + 1, \" (page \", index + 2, \")\"), React.createElement(\"td\", {\n      style: columnStyles[1]\n    }, toMoney(loanValue)), React.createElement(\"td\", {\n      style: columnStyles[2]\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end'\n      }\n    }, React.createElement(PercentWithStatus, {\n      value: borrowRatio,\n      status: borrowRatio > calculator.maxBorrowRatio ? ERROR : SUCCESS\n    }))), React.createElement(\"td\", {\n      style: columnStyles[3]\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end'\n      }\n    }, React.createElement(PercentWithStatus, {\n      value: incomeRatio,\n      status: incomeRatio > calculator.maxIncomeRatio ? ERROR : SUCCESS\n    }))));\n  })];\n};\n\nconst StructureRecapTable = ({\n  loan,\n  structureIds,\n  organisation\n}) => React.createElement(\"table\", {\n  className: \"pdf-table structure-recap-table\"\n}, getRows({\n  loan,\n  structureIds,\n  organisation\n}));\n\nmodule.exportDefault(StructureRecapTable);","map":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/LoanBankPDF/LoanBankCover/StructureRecapTable.jsx"],"names":["columnStyles","width","textAlign","getRows","organisation","lenderRules","classes","ROW_TYPES","structureId","id","name","calculator","loanValue","borrowRatio","incomeRatio","index","toMoney","display","alignItems","justifyContent","StructureRecapTable"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\n\nimport { Calculator } from '../../../../../../utils/Calculator';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport PercentWithStatus from '../../../../../../components/PercentWithStatus';\nimport { ERROR, SUCCESS } from '../../../../../constants';\nimport { classes, ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype StructureRecapTableProps = {};\n\nconst columnStyles = [\n  { width: '50%' },\n  { width: '20%', textAlign: 'right' },\n  { width: '15%', textAlign: 'right' },\n  { width: '15%', textAlign: 'right' },\n];\n\nconst getRows = ({ loan, structureIds, organisation }) => {\n  const { lenderRules } = organisation || {};\n\n  return [\n    <tr key=\"0\" className={classes[ROW_TYPES.TITLE]}>\n      <td style={columnStyles[0]}>Scénario</td>\n      <td style={columnStyles[1]}>Prêt hypothécaire</td>\n      <td style={columnStyles[2]}>Taux d'avance</td>\n      <td style={columnStyles[3]}>Taux d'effort</td>\n    </tr>,\n    ...structureIds\n      .map(structureId => loan.structures.find(({ id }) => id === structureId))\n      .map(({ id: structureId, name }, index) => {\n        const calculator = new Calculator({\n          loan,\n          structureId,\n          lenderRules,\n        });\n        const loanValue = calculator.selectLoanValue({ loan, structureId });\n        const borrowRatio = calculator.getBorrowRatio({ loan, structureId });\n        const incomeRatio = calculator.getIncomeRatio({ loan, structureId });\n\n        return (\n          <tr key={structureId}>\n            <td style={columnStyles[0]}>\n              {name || index + 1} (page {index + 2})\n            </td>\n            <td style={columnStyles[1]}>{toMoney(loanValue)}</td>\n            <td style={columnStyles[2]}>\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                }}\n              >\n                <PercentWithStatus\n                  value={borrowRatio}\n                  status={\n                    borrowRatio > calculator.maxBorrowRatio ? ERROR : SUCCESS\n                  }\n                />\n              </div>\n            </td>\n            <td style={columnStyles[3]}>\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'flex-end',\n                }}\n              >\n                <PercentWithStatus\n                  value={incomeRatio}\n                  status={\n                    incomeRatio > calculator.maxIncomeRatio ? ERROR : SUCCESS\n                  }\n                />\n              </div>\n            </td>\n          </tr>\n        );\n      }),\n  ];\n};\n\nconst StructureRecapTable = ({\n  loan,\n  structureIds,\n  organisation,\n}: StructureRecapTableProps) => (\n  <table className=\"pdf-table structure-recap-table\">\n    {getRows({ loan, structureIds, organisation })}\n  </table>\n);\n\nexport default StructureRecapTable;\n"]},"sourceType":"script","hash":"b9bfcb3369dced9fa9e2ddffe9eb4940bbb26aeb"}
