{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/widget1/Widget1Inputs/test/Widget1Inputs.spec.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/widget1/Widget1Inputs/test/Widget1Inputs.spec.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/widget1/Widget1Inputs/test/Widget1Inputs.spec.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/widget1/Widget1Inputs/test/Widget1Inputs.spec.jsx"],"names":["React","expect","shallow","Widget1Inputs","Widget1SingleInput","describe","props","component","beforeEach","fields","it","find","first","hasClass","to","equal","length","forEach","node","index","prop"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,OAAT;AAEA,SAASC,aAAT;AACA,OAAOC,kBAAP;AAEAC,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7B,MAAIC,KAAJ;;AACA,QAAMC,SAAS,GAAG,MAAML,OAAO,CAAC,CAAC,aAAD,CAAe,IAAII,KAAJ,CAAf,GAAD,CAA/B;;AAEAE,EAAAA,UAAU,CAAC,MAAM;AACfF,IAAAA,KAAK,GAAG;AAAEG,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,QAAX;AAAV,KAAR;AACD,GAFS,CAAV;AAIAC,EAAAA,EAAE,CAAC,yCAAD,EAA4C,MAAM;AAClDT,IAAAA,MAAM,CAACM,SAAS,GACbI,IADI,CACC,KADD,EAEJC,KAFI,GAGJC,QAHI,CAGK,gBAHL,CAAD,CAAN,CAG+BC,EAH/B,CAGkCC,KAHlC,CAGwC,IAHxC;AAID,GALC,CAAF;AAOAL,EAAAA,EAAE,CAAC,yBAAD,EAA4B,MAAM;AAClCT,IAAAA,MAAM,CAACM,SAAS,GAAGI,IAAZ,CAAiBP,kBAAjB,EAAqCY,MAAtC,CAAN,CAAoDF,EAApD,CAAuDC,KAAvD,CAA6DT,KAAK,CAACG,MAAN,CAAaO,MAA1E;AACD,GAFC,CAAF;AAIAN,EAAAA,EAAE,CAAC,4CAAD,EAA+C,MAAM;AACrDH,IAAAA,SAAS,GACNI,IADH,CACQP,kBADR,EAEGa,OAFH,CAEW,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxBlB,MAAAA,MAAM,CAACiB,IAAI,CAACE,IAAL,CAAU,MAAV,CAAD,CAAN,CAA0BN,EAA1B,CAA6BC,KAA7B,CAAmCT,KAAK,CAACG,MAAN,CAAaU,KAAb,CAAnC;AACD,KAJH;AAKD,GANC,CAAF;AAOD,CA1BO,CAAR","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'core/utils/testHelpers/enzyme';\n\nimport { Widget1Inputs } from '../Widget1Inputs';\nimport Widget1SingleInput from '../../Widget1SingleInput';\n\ndescribe('Widget1Input', () => {\n  let props;\n  const component = () => shallow(<Widget1Inputs {...props} />);\n\n  beforeEach(() => {\n    props = { fields: ['field1', 'field2'] };\n  });\n\n  it('renders a root div with the right class', () => {\n    expect(component()\n      .find('div')\n      .first()\n      .hasClass('widget1-inputs')).to.equal(true);\n  });\n\n  it('renders multiple fields', () => {\n    expect(component().find(Widget1SingleInput).length).to.equal(props.fields.length);\n  });\n\n  it('passes the proper field name to each field', () => {\n    component()\n      .find(Widget1SingleInput)\n      .forEach((node, index) => {\n        expect(node.prop('name')).to.equal(props.fields[index]);\n      });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/widget1/Widget1Inputs/test/Widget1Inputs.spec.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/widget1/Widget1Inputs/test/Widget1Inputs.spec.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 1);\nlet shallow;\nmodule.link(\"../../../../utils/testHelpers/enzyme\", {\n  shallow(v) {\n    shallow = v;\n  }\n\n}, 2);\nlet Widget1Inputs;\nmodule.link(\"../Widget1Inputs\", {\n  Widget1Inputs(v) {\n    Widget1Inputs = v;\n  }\n\n}, 3);\nlet Widget1SingleInput;\nmodule.link(\"../../Widget1SingleInput\", {\n  default(v) {\n    Widget1SingleInput = v;\n  }\n\n}, 4);\ndescribe('Widget1Input', () => {\n  let props;\n\n  const component = () => shallow(React.createElement(Widget1Inputs, props));\n\n  beforeEach(() => {\n    props = {\n      fields: ['field1', 'field2']\n    };\n  });\n  it('renders a root div with the right class', () => {\n    expect(component().find('div').first().hasClass('widget1-inputs')).to.equal(true);\n  });\n  it('renders multiple fields', () => {\n    expect(component().find(Widget1SingleInput).length).to.equal(props.fields.length);\n  });\n  it('passes the proper field name to each field', () => {\n    component().find(Widget1SingleInput).forEach((node, index) => {\n      expect(node.prop('name')).to.equal(props.fields[index]);\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/components/widget1/Widget1Inputs/test/Widget1Inputs.spec.jsx"],"names":["describe","component","shallow","beforeEach","props","fields","it","expect","node"],"mappings":"AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAQAA,QAAQ,CAAA,cAAA,EAAiB,MAAM;AAC7B,MAAA,KAAA;;AACA,QAAMC,SAAS,GAAG,MAAMC,OAAO,CAAC,oBAAA,aAAA,EAAhC,KAAgC,CAAD,CAA/B;;AAEAC,EAAAA,UAAU,CAAC,MAAM;AACfC,IAAAA,KAAK,GAAG;AAAEC,MAAAA,MAAM,EAAE,CAAA,QAAA,EAAA,QAAA;AAAV,KAARD;AADFD,GAAU,CAAVA;AAIAG,EAAAA,EAAE,CAAA,yCAAA,EAA4C,MAAM;AAClDC,IAAAA,MAAM,CAACN,SAAS,GAATA,IAAAA,CAAAA,KAAAA,EAAAA,KAAAA,GAAAA,QAAAA,CAAPM,gBAAON,CAAD,CAANM,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,IAAAA;AADFD,GAAE,CAAFA;AAOAA,EAAAA,EAAE,CAAA,yBAAA,EAA4B,MAAM;AAClCC,IAAAA,MAAM,CAACN,SAAS,GAATA,IAAAA,CAAAA,kBAAAA,EAAPM,MAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAA6DH,KAAK,CAALA,MAAAA,CAA7DG,MAAAA;AADFD,GAAE,CAAFA;AAIAA,EAAAA,EAAE,CAAA,4CAAA,EAA+C,MAAM;AACrDL,IAAAA,SAAS,GAATA,IAAAA,CAAAA,kBAAAA,EAAAA,OAAAA,CAEW,CAAA,IAAA,EAAA,KAAA,KAAiB;AACxBM,MAAAA,MAAM,CAACC,IAAI,CAAJA,IAAAA,CAAPD,MAAOC,CAAD,CAAND,CAAAA,EAAAA,CAAAA,KAAAA,CAAmCH,KAAK,CAALA,MAAAA,CAAnCG,KAAmCH,CAAnCG;AAHJN,KAAAA;AADFK,GAAE,CAAFA;AAnBFN,CAAQ,CAARA","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'core/utils/testHelpers/enzyme';\n\nimport { Widget1Inputs } from '../Widget1Inputs';\nimport Widget1SingleInput from '../../Widget1SingleInput';\n\ndescribe('Widget1Input', () => {\n  let props;\n  const component = () => shallow(<Widget1Inputs {...props} />);\n\n  beforeEach(() => {\n    props = { fields: ['field1', 'field2'] };\n  });\n\n  it('renders a root div with the right class', () => {\n    expect(component()\n      .find('div')\n      .first()\n      .hasClass('widget1-inputs')).to.equal(true);\n  });\n\n  it('renders multiple fields', () => {\n    expect(component().find(Widget1SingleInput).length).to.equal(props.fields.length);\n  });\n\n  it('passes the proper field name to each field', () => {\n    component()\n      .find(Widget1SingleInput)\n      .forEach((node, index) => {\n        expect(node.prop('name')).to.equal(props.fields[index]);\n      });\n  });\n});\n"]},"sourceType":"script","hash":"45554587fc0d0b1b71428d4875a75e2e5653c5a7"}
