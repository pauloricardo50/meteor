{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/test/reactFunctions.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/utils/test/reactFunctions.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/test/reactFunctions.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/test/reactFunctions.spec.js"],"names":["expect","arePathsUnequal","describe","it","func","a","to","equal","b","throw"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { arePathsUnequal } from '../reactFunctions';\n\ndescribe('reactFunctions', () => {\n  describe('arePathsUnequal', () => {\n    it('returns true or false if paths are unequal', () => {\n      const func = arePathsUnequal(['a']);\n      expect(func({ a: 1 }, { a: 2 })).to.equal(true);\n      expect(func({ a: 1 }, { a: 1 })).to.equal(false);\n    });\n\n    it('does not fail with nested objects', () => {\n      const func = arePathsUnequal(['a.b']);\n      expect(func({ a: 1 }, { a: { b: 1 } })).to.equal(true);\n      expect(func({ a: 1 }, { a: 1 })).to.equal(false);\n      expect(func({ a: { b: 1 } }, { a: { b: 1 } })).to.equal(false);\n    });\n\n    it('compares arrays', () => {\n      const func = arePathsUnequal(['a']);\n      expect(func({ a: [1] }, { a: [1] })).to.equal(false);\n      expect(func({ a: [1] }, { a: [] })).to.equal(true);\n    });\n\n    it('throws if trying to compare objects', () => {\n      const func = arePathsUnequal(['a']);\n      expect(() => func({ a: {} }, { a: {} })).to.throw('Should not');\n    });\n\n    it('works if one value is null', () => {\n      const func = arePathsUnequal(['a']);\n      expect(func({ a: null }, { a: 2 })).to.equal(true);\n      expect(func({ a: 2 }, { a: null })).to.equal(true);\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/test/reactFunctions.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/test/reactFunctions.spec.js"}},"code":"var expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 0);\nvar arePathsUnequal;\nmodule.link(\"../reactFunctions\", {\n  arePathsUnequal: function (v) {\n    arePathsUnequal = v;\n  }\n}, 1);\ndescribe('reactFunctions', function () {\n  describe('arePathsUnequal', function () {\n    it('returns true or false if paths are unequal', function () {\n      var func = arePathsUnequal(['a']);\n      expect(func({\n        a: 1\n      }, {\n        a: 2\n      })).to.equal(true);\n      expect(func({\n        a: 1\n      }, {\n        a: 1\n      })).to.equal(false);\n    });\n    it('does not fail with nested objects', function () {\n      var func = arePathsUnequal(['a.b']);\n      expect(func({\n        a: 1\n      }, {\n        a: {\n          b: 1\n        }\n      })).to.equal(true);\n      expect(func({\n        a: 1\n      }, {\n        a: 1\n      })).to.equal(false);\n      expect(func({\n        a: {\n          b: 1\n        }\n      }, {\n        a: {\n          b: 1\n        }\n      })).to.equal(false);\n    });\n    it('compares arrays', function () {\n      var func = arePathsUnequal(['a']);\n      expect(func({\n        a: [1]\n      }, {\n        a: [1]\n      })).to.equal(false);\n      expect(func({\n        a: [1]\n      }, {\n        a: []\n      })).to.equal(true);\n    });\n    it('throws if trying to compare objects', function () {\n      var func = arePathsUnequal(['a']);\n      expect(function () {\n        return func({\n          a: {}\n        }, {\n          a: {}\n        });\n      }).to.throw('Should not');\n    });\n    it('works if one value is null', function () {\n      var func = arePathsUnequal(['a']);\n      expect(func({\n        a: null\n      }, {\n        a: 2\n      })).to.equal(true);\n      expect(func({\n        a: 2\n      }, {\n        a: null\n      })).to.equal(true);\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/utils/test/reactFunctions.spec.js"],"names":["describe","it","func","arePathsUnequal","expect","a","b"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { arePathsUnequal } from '../reactFunctions';\n\ndescribe('reactFunctions', () => {\n  describe('arePathsUnequal', () => {\n    it('returns true or false if paths are unequal', () => {\n      const func = arePathsUnequal(['a']);\n      expect(func({ a: 1 }, { a: 2 })).to.equal(true);\n      expect(func({ a: 1 }, { a: 1 })).to.equal(false);\n    });\n\n    it('does not fail with nested objects', () => {\n      const func = arePathsUnequal(['a.b']);\n      expect(func({ a: 1 }, { a: { b: 1 } })).to.equal(true);\n      expect(func({ a: 1 }, { a: 1 })).to.equal(false);\n      expect(func({ a: { b: 1 } }, { a: { b: 1 } })).to.equal(false);\n    });\n\n    it('compares arrays', () => {\n      const func = arePathsUnequal(['a']);\n      expect(func({ a: [1] }, { a: [1] })).to.equal(false);\n      expect(func({ a: [1] }, { a: [] })).to.equal(true);\n    });\n\n    it('throws if trying to compare objects', () => {\n      const func = arePathsUnequal(['a']);\n      expect(() => func({ a: {} }, { a: {} })).to.throw('Should not');\n    });\n\n    it('works if one value is null', () => {\n      const func = arePathsUnequal(['a']);\n      expect(func({ a: null }, { a: 2 })).to.equal(true);\n      expect(func({ a: 2 }, { a: null })).to.equal(true);\n    });\n  });\n});\n"]},"sourceType":"script","hash":"4970b0ca4ee7eb5a7458d05615692863895cd9e7"}
