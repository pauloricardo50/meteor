{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/widget1/Widget1SingleInput/Widget1SingleInputSlider.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/components/widget1/Widget1SingleInput/Widget1SingleInputSlider.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/widget1/Widget1SingleInput/Widget1SingleInputSlider.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/widget1/Widget1SingleInput/Widget1SingleInputSlider.jsx"],"names":["React","PropTypes","Slider","T","IconButton","getSliderValue","value","sliderMax","INCREASE_SLIDER_LIMIT","showIncreaseButton","allowExtremeLoan","Widget1SingleInputSlider","setValue","increaseSliderMax","isLoanValue","propTypes","bool","func","isRequired","number","defaultProps","undefined"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP;AACA,OAAOC,CAAP;AACA,OAAOC,UAAP,yB,CAEA;AACA;;AACA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AAC3C,MAAID,KAAJ,EAAW;AACT,QAAIA,KAAK,IAAIC,SAAb,EAAwB;AACtB,aAAOA,SAAP;AACD;;AACD,WAAOD,KAAP;AACD;;AACD,SAAO,CAAP;AACD,CARD;;AAUA,MAAME,qBAAqB,GAAG,GAA9B;;AAEA,MAAMC,kBAAkB,GAAG,CAACH,KAAD,EAAQC,SAAR,EAAmBG,gBAAnB,KACzBH,SAAS,GAAG,CAAZ,IACGD,KAAK,IAAIE,qBAAqB,GAAGD,SADpC,IAEG,CAACG,gBAHN;;AAKA,MAAMC,wBAAwB,GAAG,CAAC;AAChCL,EAAAA,KADgC;AAEhCM,EAAAA,QAFgC;AAGhCL,EAAAA,SAHgC;AAIhCM,EAAAA,iBAJgC;AAKhCC,EAAAA,WALgC;AAMhCJ,EAAAA;AANgC,CAAD,KAQ/B,CAAC,GAAD,CAAK,UAAU,gBAAf;IACE,CAAC,MAAD,CACE,IAAI,CAAC,CAAD,CADN,CAEE,IAAI,CAACH,SAAD,CAFN,CAGE,KAAK,CAAC,IAAD,CAHP,CAIE;AACA;AACA,QAAM,CAACF,cAAc,CAACC,KAAD,EAAQC,SAAR,CAAf,CANR,CAOE,SAAS,CAACK,QAAD,CAPX,CAQE,UAAU,QARZ,CASE,SAAS,CAAC,CAAC,CAAF,CATX;IAWA,CAACH,kBAAkB,CAACH,KAAD,EAAQC,SAAR,EAAmBG,gBAAnB,CAAlB,GACC,CAAC,UAAD,CACE,KAAK,KADP,CAEE,QAAQ,CACN,CAAC,CAAD,CACE,GAAG,CAAE,4BACHI,WAAW,GAAG,mBAAH,GAAyB,eACrC,EAFE,CADL,GADM,CAFV,CASE,QAAQ,CAACD,iBAAD,CATV,CAUE,SAAS,CAAC,CAAC,CAAF,CAVX,CAWE,KAAK,OAXP,GADD,GAeC,CAAC,GAAD,CAAK,UAAU,oBAAf,GAfF;EAiBF,EAAE,GAAF,CArCF;;AAwCAF,wBAAwB,CAACI,SAAzB,GAAqC;AACnCL,EAAAA,gBAAgB,EAAET,SAAS,CAACe,IADO;AAEnCH,EAAAA,iBAAiB,EAAEZ,SAAS,CAACgB,IAAV,CAAeC,UAFC;AAGnCJ,EAAAA,WAAW,EAAEb,SAAS,CAACe,IAAV,CAAeE,UAHO;AAInCN,EAAAA,QAAQ,EAAEX,SAAS,CAACgB,IAAV,CAAeC,UAJU;AAKnCX,EAAAA,SAAS,EAAEN,SAAS,CAACkB,MAAV,CAAiBD,UALO;AAMnCZ,EAAAA,KAAK,EAAEL,SAAS,CAACkB;AANkB,CAArC;AASAR,wBAAwB,CAACS,YAAzB,GAAwC;AACtCd,EAAAA,KAAK,EAAEe,SAD+B;AAEtCX,EAAAA,gBAAgB,EAAEW;AAFoB,CAAxC;AAKA,eAAeV,wBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Slider from 'core/components/Material/Slider';\nimport T from 'core/components/Translation';\nimport IconButton from 'core/components/IconButton';\n\n// Avoid weird slider bug, by first checking if value exists\n// https://github.com/react-component/slider/issues/387\nconst getSliderValue = (value, sliderMax) => {\n  if (value) {\n    if (value >= sliderMax) {\n      return sliderMax;\n    }\n    return value;\n  }\n  return 0;\n};\n\nconst INCREASE_SLIDER_LIMIT = 0.9;\n\nconst showIncreaseButton = (value, sliderMax, allowExtremeLoan) =>\n  sliderMax > 0\n  && value >= INCREASE_SLIDER_LIMIT * sliderMax\n  && !allowExtremeLoan;\n\nconst Widget1SingleInputSlider = ({\n  value,\n  setValue,\n  sliderMax,\n  increaseSliderMax,\n  isLoanValue,\n  allowExtremeLoan,\n}) => (\n  <div className=\"widget1-slider\">\n    <Slider\n      min={0}\n      max={sliderMax}\n      step={5000}\n      // Do this to prevent an onChange event when typing in a value larger\n      // than sliderMax, which sets the value back to sliderMax\n      value={getSliderValue(value, sliderMax)}\n      onChange={setValue}\n      className=\"slider\"\n      tabIndex={-1}\n    />\n    {showIncreaseButton(value, sliderMax, allowExtremeLoan) ? (\n      <IconButton\n        type=\"add\"\n        tooltip={(\n          <T\n            id={`Widget1SingleInputSlider.${\n              isLoanValue ? 'buttonTooltipLoan' : 'buttonTooltip'\n            }`}\n          />\n        )}\n        onClick={increaseSliderMax}\n        tabIndex={-1}\n        size=\"small\"\n      />\n    ) : (\n      <div className=\"button-placeholder\" />\n    )}\n  </div>\n);\n\nWidget1SingleInputSlider.propTypes = {\n  allowExtremeLoan: PropTypes.bool,\n  increaseSliderMax: PropTypes.func.isRequired,\n  isLoanValue: PropTypes.bool.isRequired,\n  setValue: PropTypes.func.isRequired,\n  sliderMax: PropTypes.number.isRequired,\n  value: PropTypes.number,\n};\n\nWidget1SingleInputSlider.defaultProps = {\n  value: undefined,\n  allowExtremeLoan: undefined,\n};\n\nexport default Widget1SingleInputSlider;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/widget1/Widget1SingleInput/Widget1SingleInputSlider.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/widget1/Widget1SingleInput/Widget1SingleInputSlider.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Slider;\nmodule.link(\"../../Material/Slider\", {\n  default(v) {\n    Slider = v;\n  }\n\n}, 2);\nlet T;\nmodule.link(\"../../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 3);\nlet IconButton;\nmodule.link(\"../../IconButton\", {\n  default(v) {\n    IconButton = v;\n  }\n\n}, 4);\n\n// Avoid weird slider bug, by first checking if value exists\n// https://github.com/react-component/slider/issues/387\nconst getSliderValue = (value, sliderMax) => {\n  if (value) {\n    if (value >= sliderMax) {\n      return sliderMax;\n    }\n\n    return value;\n  }\n\n  return 0;\n};\n\nconst INCREASE_SLIDER_LIMIT = 0.9;\n\nconst showIncreaseButton = (value, sliderMax, allowExtremeLoan) => sliderMax > 0 && value >= INCREASE_SLIDER_LIMIT * sliderMax && !allowExtremeLoan;\n\nconst Widget1SingleInputSlider = ({\n  value,\n  setValue,\n  sliderMax,\n  increaseSliderMax,\n  isLoanValue,\n  allowExtremeLoan\n}) => React.createElement(\"div\", {\n  className: \"widget1-slider\"\n}, React.createElement(Slider, {\n  min: 0,\n  max: sliderMax,\n  step: 5000 // Do this to prevent an onChange event when typing in a value larger\n  // than sliderMax, which sets the value back to sliderMax\n  ,\n  value: getSliderValue(value, sliderMax),\n  onChange: setValue,\n  className: \"slider\",\n  tabIndex: -1\n}), showIncreaseButton(value, sliderMax, allowExtremeLoan) ? React.createElement(IconButton, {\n  type: \"add\",\n  tooltip: React.createElement(T, {\n    id: `Widget1SingleInputSlider.${isLoanValue ? 'buttonTooltipLoan' : 'buttonTooltip'}`\n  }),\n  onClick: increaseSliderMax,\n  tabIndex: -1,\n  size: \"small\"\n}) : React.createElement(\"div\", {\n  className: \"button-placeholder\"\n}));\n\nWidget1SingleInputSlider.propTypes = {\n  allowExtremeLoan: PropTypes.bool,\n  increaseSliderMax: PropTypes.func.isRequired,\n  isLoanValue: PropTypes.bool.isRequired,\n  setValue: PropTypes.func.isRequired,\n  sliderMax: PropTypes.number.isRequired,\n  value: PropTypes.number\n};\nWidget1SingleInputSlider.defaultProps = {\n  value: undefined,\n  allowExtremeLoan: undefined\n};\nmodule.exportDefault(Widget1SingleInputSlider);","map":{"version":3,"sources":["imports/core/components/widget1/Widget1SingleInput/Widget1SingleInputSlider.jsx"],"names":["React","getSliderValue","value","INCREASE_SLIDER_LIMIT","showIncreaseButton","sliderMax","Widget1SingleInputSlider","allowExtremeLoan","isLoanValue","PropTypes","increaseSliderMax","setValue","number","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Slider from 'core/components/Material/Slider';\nimport T from 'core/components/Translation';\nimport IconButton from 'core/components/IconButton';\n\n// Avoid weird slider bug, by first checking if value exists\n// https://github.com/react-component/slider/issues/387\nconst getSliderValue = (value, sliderMax) => {\n  if (value) {\n    if (value >= sliderMax) {\n      return sliderMax;\n    }\n    return value;\n  }\n  return 0;\n};\n\nconst INCREASE_SLIDER_LIMIT = 0.9;\n\nconst showIncreaseButton = (value, sliderMax, allowExtremeLoan) =>\n  sliderMax > 0\n  && value >= INCREASE_SLIDER_LIMIT * sliderMax\n  && !allowExtremeLoan;\n\nconst Widget1SingleInputSlider = ({\n  value,\n  setValue,\n  sliderMax,\n  increaseSliderMax,\n  isLoanValue,\n  allowExtremeLoan,\n}) => (\n  <div className=\"widget1-slider\">\n    <Slider\n      min={0}\n      max={sliderMax}\n      step={5000}\n      // Do this to prevent an onChange event when typing in a value larger\n      // than sliderMax, which sets the value back to sliderMax\n      value={getSliderValue(value, sliderMax)}\n      onChange={setValue}\n      className=\"slider\"\n      tabIndex={-1}\n    />\n    {showIncreaseButton(value, sliderMax, allowExtremeLoan) ? (\n      <IconButton\n        type=\"add\"\n        tooltip={(\n          <T\n            id={`Widget1SingleInputSlider.${\n              isLoanValue ? 'buttonTooltipLoan' : 'buttonTooltip'\n            }`}\n          />\n        )}\n        onClick={increaseSliderMax}\n        tabIndex={-1}\n        size=\"small\"\n      />\n    ) : (\n      <div className=\"button-placeholder\" />\n    )}\n  </div>\n);\n\nWidget1SingleInputSlider.propTypes = {\n  allowExtremeLoan: PropTypes.bool,\n  increaseSliderMax: PropTypes.func.isRequired,\n  isLoanValue: PropTypes.bool.isRequired,\n  setValue: PropTypes.func.isRequired,\n  sliderMax: PropTypes.number.isRequired,\n  value: PropTypes.number,\n};\n\nWidget1SingleInputSlider.defaultProps = {\n  value: undefined,\n  allowExtremeLoan: undefined,\n};\n\nexport default Widget1SingleInputSlider;\n"]},"sourceType":"script","hash":"34c059f6d3df6eb567644cbd5e84f7006e1c8c9b"}
