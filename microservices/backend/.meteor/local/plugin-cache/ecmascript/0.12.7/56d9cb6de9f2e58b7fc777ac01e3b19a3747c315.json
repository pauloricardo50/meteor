{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/DropdownMenu/DropdownMenuContainer.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/DropdownMenu/DropdownMenuContainer.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/DropdownMenu/DropdownMenuContainer.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/DropdownMenu/DropdownMenuContainer.jsx"],"names":["React","compose","withProps","withStateHandlers","withState","ListItemIcon","ListItemText","withStyles","Link","Divider","MenuItem","Icon","styles","theme","menuItem","backgroundColor","palette","primary","main","color","common","white","menuItemRoot","height","colorClass","mapOption","id","onClick","link","icon","label","dividerTop","dividerBottom","secondary","otherProps","handleClose","menuItemClass","arr","event","index","stopPropagation","root","unshift","push","addState","anchorEl","isOpen","fetchedOptions","handleOpen","_","fetchOptions","setFetchedOptions","currentTarget","then","options","classes","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { compose, withProps, withStateHandlers, withState } from 'recompose';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Link from '../Link';\nimport Divider from '../Material/Divider';\nimport MenuItem from '../Material/MenuItem';\nimport Icon from '../Icon';\n\nconst styles = theme => ({\n  menuItem: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      '& $colorClass': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n  menuItemRoot: {\n    height: 'unset',\n  },\n  colorClass: {},\n});\n\nconst mapOption = (\n  {\n    id,\n    onClick,\n    link,\n    icon,\n    label,\n    dividerTop,\n    dividerBottom,\n    secondary,\n    ...otherProps\n  },\n  handleClose,\n  { menuItem: menuItemClass, menuItemRoot, colorClass },\n) => {\n  const arr = [\n    <MenuItem\n      key={id}\n      onClick={(event, index) => {\n        // Prevent background from receiving clicks\n        event.stopPropagation();\n        if (onClick) {\n          onClick(index);\n        }\n        handleClose();\n      }}\n      {...otherProps}\n      component={link ? Link : null}\n      className={menuItemClass}\n      classes={{ root: menuItemRoot }}\n    >\n      {icon && (\n        <ListItemIcon className={colorClass}>\n          <Icon type={icon} />\n        </ListItemIcon>\n      )}\n      <ListItemText\n        classes={{ primary: colorClass, secondary: colorClass }}\n        primary={label}\n        secondary={secondary}\n      />\n    </MenuItem>,\n  ];\n\n  // Add support for adding Dividers at the top or bottom of an option\n  if (dividerTop) {\n    arr.unshift(<Divider key={`divider${id}`} />);\n  } else if (dividerBottom) {\n    arr.push(<Divider key={`divider${id}`} />);\n  }\n\n  return arr;\n};\n\nconst addState = compose(\n  withState('fetchedOptions', 'setFetchedOptions', []),\n  withStateHandlers(\n    { anchorEl: null, isOpen: false, fetchedOptions: [] },\n    {\n      handleOpen: (_, { fetchOptions, setFetchedOptions }) => (currentTarget) => {\n        if (fetchOptions) {\n          fetchOptions().then(setFetchedOptions);\n        }\n\n        return {\n          isOpen: true,\n          anchorEl: currentTarget,\n        };\n      },\n      handleClose: () => () => ({ isOpen: false }),\n    },\n  ),\n);\n\nexport default compose(\n  addState,\n  withStyles(styles),\n  withProps(({\n    options = [],\n    fetchedOptions = [],\n    fetchOptions,\n    handleClose,\n    classes,\n  }) => {\n    if (fetchOptions) {\n      return {\n        options: fetchedOptions.map(option =>\n          mapOption(option, handleClose, classes)),\n      };\n    }\n\n    return {\n      options: options.map(option => mapOption(option, handleClose, classes)),\n    };\n  }),\n);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/DropdownMenu/DropdownMenuContainer.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/DropdownMenu/DropdownMenuContainer.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar compose, withProps, withStateHandlers, withState;\nmodule.link(\"recompose\", {\n  compose: function (v) {\n    compose = v;\n  },\n  withProps: function (v) {\n    withProps = v;\n  },\n  withStateHandlers: function (v) {\n    withStateHandlers = v;\n  },\n  withState: function (v) {\n    withState = v;\n  }\n}, 1);\nvar ListItemIcon;\nmodule.link(\"@material-ui/core/ListItemIcon\", {\n  \"default\": function (v) {\n    ListItemIcon = v;\n  }\n}, 2);\nvar ListItemText;\nmodule.link(\"@material-ui/core/ListItemText\", {\n  \"default\": function (v) {\n    ListItemText = v;\n  }\n}, 3);\nvar withStyles;\nmodule.link(\"@material-ui/core/styles\", {\n  withStyles: function (v) {\n    withStyles = v;\n  }\n}, 4);\nvar Link;\nmodule.link(\"../Link\", {\n  \"default\": function (v) {\n    Link = v;\n  }\n}, 5);\nvar Divider;\nmodule.link(\"../Material/Divider\", {\n  \"default\": function (v) {\n    Divider = v;\n  }\n}, 6);\nvar MenuItem;\nmodule.link(\"../Material/MenuItem\", {\n  \"default\": function (v) {\n    MenuItem = v;\n  }\n}, 7);\nvar Icon;\nmodule.link(\"../Icon\", {\n  \"default\": function (v) {\n    Icon = v;\n  }\n}, 8);\n\nvar styles = function (theme) {\n  return {\n    menuItem: {\n      '&:hover': {\n        backgroundColor: theme.palette.primary.main,\n        '& $colorClass': {\n          color: theme.palette.common.white\n        }\n      }\n    },\n    menuItemRoot: {\n      height: 'unset'\n    },\n    colorClass: {}\n  };\n};\n\nvar mapOption = function (_ref, handleClose, _ref2) {\n  var id = _ref.id,\n      onClick = _ref.onClick,\n      link = _ref.link,\n      icon = _ref.icon,\n      label = _ref.label,\n      dividerTop = _ref.dividerTop,\n      dividerBottom = _ref.dividerBottom,\n      secondary = _ref.secondary,\n      otherProps = (0, _objectWithoutProperties2.default)(_ref, [\"id\", \"onClick\", \"link\", \"icon\", \"label\", \"dividerTop\", \"dividerBottom\", \"secondary\"]);\n  var menuItemClass = _ref2.menuItem,\n      menuItemRoot = _ref2.menuItemRoot,\n      colorClass = _ref2.colorClass;\n  var arr = [React.createElement(MenuItem, (0, _extends2.default)({\n    key: id,\n    onClick: function (event, index) {\n      // Prevent background from receiving clicks\n      event.stopPropagation();\n\n      if (onClick) {\n        onClick(index);\n      }\n\n      handleClose();\n    }\n  }, otherProps, {\n    component: link ? Link : null,\n    className: menuItemClass,\n    classes: {\n      root: menuItemRoot\n    }\n  }), icon && React.createElement(ListItemIcon, {\n    className: colorClass\n  }, React.createElement(Icon, {\n    type: icon\n  })), React.createElement(ListItemText, {\n    classes: {\n      primary: colorClass,\n      secondary: colorClass\n    },\n    primary: label,\n    secondary: secondary\n  }))]; // Add support for adding Dividers at the top or bottom of an option\n\n  if (dividerTop) {\n    arr.unshift(React.createElement(Divider, {\n      key: \"divider\" + id\n    }));\n  } else if (dividerBottom) {\n    arr.push(React.createElement(Divider, {\n      key: \"divider\" + id\n    }));\n  }\n\n  return arr;\n};\n\nvar addState = compose(withState('fetchedOptions', 'setFetchedOptions', []), withStateHandlers({\n  anchorEl: null,\n  isOpen: false,\n  fetchedOptions: []\n}, {\n  handleOpen: function (_, _ref3) {\n    var fetchOptions = _ref3.fetchOptions,\n        setFetchedOptions = _ref3.setFetchedOptions;\n    return function (currentTarget) {\n      if (fetchOptions) {\n        fetchOptions().then(setFetchedOptions);\n      }\n\n      return {\n        isOpen: true,\n        anchorEl: currentTarget\n      };\n    };\n  },\n  handleClose: function () {\n    return function () {\n      return {\n        isOpen: false\n      };\n    };\n  }\n}));\nmodule.exportDefault(compose(addState, withStyles(styles), withProps(function (_ref4) {\n  var _ref4$options = _ref4.options,\n      options = _ref4$options === void 0 ? [] : _ref4$options,\n      _ref4$fetchedOptions = _ref4.fetchedOptions,\n      fetchedOptions = _ref4$fetchedOptions === void 0 ? [] : _ref4$fetchedOptions,\n      fetchOptions = _ref4.fetchOptions,\n      handleClose = _ref4.handleClose,\n      classes = _ref4.classes;\n\n  if (fetchOptions) {\n    return {\n      options: fetchedOptions.map(function (option) {\n        return mapOption(option, handleClose, classes);\n      })\n    };\n  }\n\n  return {\n    options: options.map(function (option) {\n      return mapOption(option, handleClose, classes);\n    })\n  };\n})));","map":{"version":3,"sources":["imports/core/components/DropdownMenu/DropdownMenuContainer.jsx"],"names":["React","styles","theme","menuItem","backgroundColor","color","white","menuItemRoot","height","colorClass","mapOption","otherProps","arr","event","onClick","handleClose","link","root","icon","primary","secondary","addState","compose","withState","withStateHandlers","anchorEl","isOpen","fetchedOptions","handleOpen","setFetchedOptions","currentTarget","fetchOptions","withStyles","withProps","options","classes","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { compose, withProps, withStateHandlers, withState } from 'recompose';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Link from '../Link';\nimport Divider from '../Material/Divider';\nimport MenuItem from '../Material/MenuItem';\nimport Icon from '../Icon';\n\nconst styles = theme => ({\n  menuItem: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      '& $colorClass': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n  menuItemRoot: {\n    height: 'unset',\n  },\n  colorClass: {},\n});\n\nconst mapOption = (\n  {\n    id,\n    onClick,\n    link,\n    icon,\n    label,\n    dividerTop,\n    dividerBottom,\n    secondary,\n    ...otherProps\n  },\n  handleClose,\n  { menuItem: menuItemClass, menuItemRoot, colorClass },\n) => {\n  const arr = [\n    <MenuItem\n      key={id}\n      onClick={(event, index) => {\n        // Prevent background from receiving clicks\n        event.stopPropagation();\n        if (onClick) {\n          onClick(index);\n        }\n        handleClose();\n      }}\n      {...otherProps}\n      component={link ? Link : null}\n      className={menuItemClass}\n      classes={{ root: menuItemRoot }}\n    >\n      {icon && (\n        <ListItemIcon className={colorClass}>\n          <Icon type={icon} />\n        </ListItemIcon>\n      )}\n      <ListItemText\n        classes={{ primary: colorClass, secondary: colorClass }}\n        primary={label}\n        secondary={secondary}\n      />\n    </MenuItem>,\n  ];\n\n  // Add support for adding Dividers at the top or bottom of an option\n  if (dividerTop) {\n    arr.unshift(<Divider key={`divider${id}`} />);\n  } else if (dividerBottom) {\n    arr.push(<Divider key={`divider${id}`} />);\n  }\n\n  return arr;\n};\n\nconst addState = compose(\n  withState('fetchedOptions', 'setFetchedOptions', []),\n  withStateHandlers(\n    { anchorEl: null, isOpen: false, fetchedOptions: [] },\n    {\n      handleOpen: (_, { fetchOptions, setFetchedOptions }) => (currentTarget) => {\n        if (fetchOptions) {\n          fetchOptions().then(setFetchedOptions);\n        }\n\n        return {\n          isOpen: true,\n          anchorEl: currentTarget,\n        };\n      },\n      handleClose: () => () => ({ isOpen: false }),\n    },\n  ),\n);\n\nexport default compose(\n  addState,\n  withStyles(styles),\n  withProps(({\n    options = [],\n    fetchedOptions = [],\n    fetchOptions,\n    handleClose,\n    classes,\n  }) => {\n    if (fetchOptions) {\n      return {\n        options: fetchedOptions.map(option =>\n          mapOption(option, handleClose, classes)),\n      };\n    }\n\n    return {\n      options: options.map(option => mapOption(option, handleClose, classes)),\n    };\n  }),\n);\n"]},"sourceType":"script","hash":"56d9cb6de9f2e58b7fc777ac01e3b19a3747c315"}
