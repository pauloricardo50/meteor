{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/users/server/resolvers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/users/server/resolvers.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/users/server/resolvers.js","inputSourceMap":{"version":3,"sources":["imports/core/api/users/server/resolvers.js"],"names":["proUser","proUserFragment","UserService","proReferredByUsersResolver","userId","organisationId","providedOrganisationId","organisations","fetchOne","$filters","_id","length","users","fetch","$or","referredByUserLink","referredByOrganisationLink","filter","x"],"mappings":"AAAA,SAASA,OAAO,IAAIC,eAApB;AACA,OAAOC,WAAP;AAEA,OAAO,MAAMC,0BAA0B,GAAG,CAAC;AACzCC,EAAAA,MADyC;AAEzCC,EAAAA,cAAc,EAAEC;AAFyB,CAAD,KAGpC;AACJ,MAAID,cAAJ;;AACA,MAAI,CAACC,sBAAL,EAA6B;AAC3B,UAAM;AAAEC,MAAAA,aAAa,GAAG;AAAlB,QAAyBL,WAAW,CAACM,QAAZ,CAAqB;AAClDC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAEN;AAAP,OADwC;AAElDG,MAAAA,aAAa,EAAE;AAAEG,QAAAA,GAAG,EAAE;AAAP;AAFmC,KAArB,CAA/B;AAIAL,IAAAA,cAAc,GAAG,CAAC,CAACE,aAAa,CAACI,MAAhB,IAA0BJ,aAAa,CAAC,CAAD,CAAb,CAAiBG,GAA5D;AACD,GAND,MAMO;AACLL,IAAAA,cAAc,GAAGC,sBAAjB;AACD;;AAED,QAAMM,KAAK,GAAGV,WAAW,CAACW,KAAZ,CAAkB;AAC9BJ,IAAAA,QAAQ,EAAE;AACRK,MAAAA,GAAG,EAAE,CACHV,MAAM,IAAI;AAAEW,QAAAA,kBAAkB,EAAEX;AAAtB,OADP,EAEHC,cAAc,IAAI;AAAEW,QAAAA,0BAA0B,EAAEX;AAA9B,OAFf,EAGHY,MAHG,CAGIC,CAAC,IAAIA,CAHT;AADG,KADoB;AAO9B,OAAGjB,eAAe;AAPY,GAAlB,CAAd;AAUA,SAAOW,KAAP;AACD,CA1BM","sourcesContent":["import { proUser as proUserFragment } from '../../fragments';\nimport UserService from './UserService';\n\nexport const proReferredByUsersResolver = ({\n  userId,\n  organisationId: providedOrganisationId,\n}) => {\n  let organisationId;\n  if (!providedOrganisationId) {\n    const { organisations = [] } = UserService.fetchOne({\n      $filters: { _id: userId },\n      organisations: { _id: 1 },\n    });\n    organisationId = !!organisations.length && organisations[0]._id;\n  } else {\n    organisationId = providedOrganisationId;\n  }\n\n  const users = UserService.fetch({\n    $filters: {\n      $or: [\n        userId && { referredByUserLink: userId },\n        organisationId && { referredByOrganisationLink: organisationId },\n      ].filter(x => x),\n    },\n    ...proUserFragment(),\n  });\n\n  return users;\n};\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/users/server/resolvers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/users/server/resolvers.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  proReferredByUsersResolver: () => proReferredByUsersResolver\n});\nlet proUserFragment;\nmodule.link(\"../../fragments\", {\n  proUser(v) {\n    proUserFragment = v;\n  }\n\n}, 0);\nlet UserService;\nmodule.link(\"./UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 1);\n\nconst proReferredByUsersResolver = ({\n  userId,\n  organisationId: providedOrganisationId\n}) => {\n  let organisationId;\n\n  if (!providedOrganisationId) {\n    const {\n      organisations = []\n    } = UserService.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      organisations: {\n        _id: 1\n      }\n    });\n    organisationId = !!organisations.length && organisations[0]._id;\n  } else {\n    organisationId = providedOrganisationId;\n  }\n\n  const users = UserService.fetch((0, _objectSpread2.default)({\n    $filters: {\n      $or: [userId && {\n        referredByUserLink: userId\n      }, organisationId && {\n        referredByOrganisationLink: organisationId\n      }].filter(x => x)\n    }\n  }, proUserFragment()));\n  return users;\n};","map":{"version":3,"sources":["imports/core/api/users/server/resolvers.js"],"names":["proUser","proReferredByUsersResolver","organisationId","providedOrganisationId","organisations","$filters","_id","userId","users","$or","referredByUserLink","referredByOrganisationLink","x","proUserFragment"],"mappings":";;;;AAAA,MAAA,CAAA,MAAA,CAASA;AAAT,EAAA,0BAAA,EAAA,MAAA;AAASA,CAAT;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAGO,MAAMC,0BAA0B,GAAG,CAAC;AAAA,EAAA,MAAA;AAEzCC,EAAAA,cAAc,EAAEC;AAFyB,CAAD,KAGpC;AACJ,MAAA,cAAA;;AACA,MAAI,CAAJ,sBAAA,EAA6B;AAC3B,UAAM;AAAEC,MAAAA,aAAa,GAAG;AAAlB,QAAyB,WAAW,CAAX,QAAA,CAAqB;AAClDC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAEC;AAAP,OADwC;AAElDH,MAAAA,aAAa,EAAE;AAAEE,QAAAA,GAAG,EAAE;AAAP;AAFmC,KAArB,CAA/B;AAIAJ,IAAAA,cAAc,GAAG,CAAC,CAACE,aAAa,CAAf,MAAA,IAA0BA,aAAa,CAAbA,CAAa,CAAbA,CAA3CF,GAAAA;AALF,GAAA,MAMO;AACLA,IAAAA,cAAc,GAAdA,sBAAAA;AACD;;AAED,QAAMM,KAAK,GAAG,WAAW,CAAX,KAAA;AACZH,IAAAA,QAAQ,EAAE;AACRI,MAAAA,GAAG,EAAE,CACHF,MAAM,IAAI;AAAEG,QAAAA,kBAAkB,EAAEH;AAAtB,OADP,EAEHL,cAAc,IAAI;AAAES,QAAAA,0BAA0B,EAAET;AAA9B,OAFf,EAAA,MAAA,CAGIU,CAAC,IAHL,CAAA;AADG;AADE,KAOTC,eAAe,EAPN,EAAd;AAUA,SAAA,KAAA;AAzBK,CAAA","sourcesContent":["import { proUser as proUserFragment } from '../../fragments';\nimport UserService from './UserService';\n\nexport const proReferredByUsersResolver = ({\n  userId,\n  organisationId: providedOrganisationId,\n}) => {\n  let organisationId;\n  if (!providedOrganisationId) {\n    const { organisations = [] } = UserService.fetchOne({\n      $filters: { _id: userId },\n      organisations: { _id: 1 },\n    });\n    organisationId = !!organisations.length && organisations[0]._id;\n  } else {\n    organisationId = providedOrganisationId;\n  }\n\n  const users = UserService.fetch({\n    $filters: {\n      $or: [\n        userId && { referredByUserLink: userId },\n        organisationId && { referredByOrganisationLink: organisationId },\n      ].filter(x => x),\n    },\n    ...proUserFragment(),\n  });\n\n  return users;\n};\n"]},"sourceType":"script","hash":"24c42379ec319a4ad54ddd1fd00947760dbb1979"}
