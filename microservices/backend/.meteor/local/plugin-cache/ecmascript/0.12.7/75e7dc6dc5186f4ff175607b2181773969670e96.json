{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/utils/stats.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/cultofcoders:redis-oplog/lib/utils/stats.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/utils/stats.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/utils/stats.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:redis-oplog/lib/utils/stats.js"}},"code":"let RedisSubscriptionManager;\nmodule.link(\"../redis/RedisSubscriptionManager\", {\n  default(v) {\n    RedisSubscriptionManager = v;\n  }\n\n}, 0);\nlet PublicationFactory;\nmodule.link(\"../cache/PublicationFactory\", {\n  default(v) {\n    PublicationFactory = v;\n  }\n\n}, 1);\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 2);\nlet sizeof;\nmodule.link(\"object-sizeof\", {\n  default(v) {\n    sizeof = v;\n  }\n\n}, 3);\nmodule.exportDefault(() => {\n  // total of active queries\n  const totalQueries = _.keys(PublicationFactory.store.store).length;\n\n  const redisChannels = _.keys(RedisSubscriptionManager.store).length;\n\n  let totalSize = 0;\n  let totalObservers = 0;\n  let maxSize = 0;\n  let maxSizePubEntry = 0;\n  let maxObservers = 0;\n  let maxObserversPubEntry;\n\n  _.each(PublicationFactory.store.store, (pubEntry, id) => {\n    const size = sizeof(pubEntry.observableCollection.store);\n    totalSize += size;\n\n    if (size > maxSize) {\n      maxSize = size;\n      maxSizePubEntry = pubEntry;\n    }\n\n    const observersCount = pubEntry.observers.length;\n    totalObservers += observersCount;\n\n    if (observersCount > maxObservers) {\n      maxObservers = observersCount;\n      maxObserversPubEntry = pubEntry;\n    }\n  });\n\n  let response = {\n    totalQueries,\n    redisChannels,\n    totalSize: totalSize + 'B',\n    totalObservers\n  };\n\n  if (maxSize) {\n    response.maxSize = {\n      size: maxSize,\n      id: maxSizePubEntry.id\n    };\n  }\n\n  if (maxObservers) {\n    response.maxObservers = {\n      count: maxObservers,\n      id: maxObserversPubEntry.id\n    };\n  }\n\n  return response;\n});","map":{"version":3,"sources":["packages/cultofcoders:redis-oplog/lib/utils/stats.js"],"names":["RedisSubscriptionManager","module","link","default","v","PublicationFactory","_","sizeof","exportDefault","totalQueries","keys","store","length","redisChannels","totalSize","totalObservers","maxSize","maxSizePubEntry","maxObservers","maxObserversPubEntry","each","pubEntry","id","size","observableCollection","observersCount","observers","response","count"],"mappings":"AAAA,IAAIA,wBAAJ;AAA6BC,MAAM,CAACC,IAAP,CAAY,mCAAZ,EAAgD;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,wBAAwB,GAACI,CAAzB;AAA2B;;AAAvC,CAAhD,EAAyF,CAAzF;AAA4F,IAAIC,kBAAJ;AAAuBJ,MAAM,CAACC,IAAP,CAAY,6BAAZ,EAA0C;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACC,IAAAA,kBAAkB,GAACD,CAAnB;AAAqB;;AAAjC,CAA1C,EAA6E,CAA7E;;AAAgF,IAAIE,CAAJ;;AAAML,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACI,EAAAA,CAAC,CAACF,CAAD,EAAG;AAACE,IAAAA,CAAC,GAACF,CAAF;AAAI;;AAAV,CAAhC,EAA4C,CAA5C;AAA+C,IAAIG,MAAJ;AAAWN,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACG,IAAAA,MAAM,GAACH,CAAP;AAAS;;AAArB,CAA5B,EAAmD,CAAnD;AAAhSH,MAAM,CAACO,aAAP,CAKe,MAAM;AACjB;AACA,QAAMC,YAAY,GAAGH,CAAC,CAACI,IAAF,CAAOL,kBAAkB,CAACM,KAAnB,CAAyBA,KAAhC,EAAuCC,MAA5D;;AACA,QAAMC,aAAa,GAAGP,CAAC,CAACI,IAAF,CAAOV,wBAAwB,CAACW,KAAhC,EAAuCC,MAA7D;;AAEA,MAAIE,SAAS,GAAG,CAAhB;AACA,MAAIC,cAAc,GAAG,CAArB;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,oBAAJ;;AAEAb,EAAAA,CAAC,CAACc,IAAF,CAAOf,kBAAkB,CAACM,KAAnB,CAAyBA,KAAhC,EAAuC,CAACU,QAAD,EAAWC,EAAX,KAAkB;AACrD,UAAMC,IAAI,GAAGhB,MAAM,CAACc,QAAQ,CAACG,oBAAT,CAA8Bb,KAA/B,CAAnB;AACAG,IAAAA,SAAS,IAAIS,IAAb;;AAEA,QAAIA,IAAI,GAAGP,OAAX,EAAoB;AAChBA,MAAAA,OAAO,GAAGO,IAAV;AACAN,MAAAA,eAAe,GAAGI,QAAlB;AACH;;AAED,UAAMI,cAAc,GAAGJ,QAAQ,CAACK,SAAT,CAAmBd,MAA1C;AACAG,IAAAA,cAAc,IAAIU,cAAlB;;AAEA,QAAIA,cAAc,GAAGP,YAArB,EAAmC;AAC/BA,MAAAA,YAAY,GAAGO,cAAf;AACAN,MAAAA,oBAAoB,GAAGE,QAAvB;AACH;AACJ,GAhBD;;AAkBA,MAAIM,QAAQ,GAAG;AACXlB,IAAAA,YADW;AAEXI,IAAAA,aAFW;AAGXC,IAAAA,SAAS,EAAEA,SAAS,GAAG,GAHZ;AAIXC,IAAAA;AAJW,GAAf;;AAOA,MAAIC,OAAJ,EAAa;AACTW,IAAAA,QAAQ,CAACX,OAAT,GAAmB;AACfO,MAAAA,IAAI,EAAEP,OADS;AAEfM,MAAAA,EAAE,EAAEL,eAAe,CAACK;AAFL,KAAnB;AAIH;;AAED,MAAIJ,YAAJ,EAAkB;AACdS,IAAAA,QAAQ,CAACT,YAAT,GAAwB;AACpBU,MAAAA,KAAK,EAAEV,YADa;AAEpBI,MAAAA,EAAE,EAAEH,oBAAoB,CAACG;AAFL,KAAxB;AAIH;;AAED,SAAOK,QAAP;AACH,CAzDD","sourcesContent":["import RedisSubscriptionManager from '../redis/RedisSubscriptionManager';\nimport PublicationFactory from '../cache/PublicationFactory';\nimport {_} from 'meteor/underscore';\nimport sizeof from 'object-sizeof';\n\nexport default () => {\n    // total of active queries\n    const totalQueries = _.keys(PublicationFactory.store.store).length;\n    const redisChannels = _.keys(RedisSubscriptionManager.store).length;\n\n    let totalSize = 0;\n    let totalObservers = 0;\n    let maxSize = 0;\n    let maxSizePubEntry = 0;\n    let maxObservers = 0;\n    let maxObserversPubEntry;\n\n    _.each(PublicationFactory.store.store, (pubEntry, id) => {\n        const size = sizeof(pubEntry.observableCollection.store);\n        totalSize += size;\n\n        if (size > maxSize) {\n            maxSize = size;\n            maxSizePubEntry = pubEntry;\n        }\n\n        const observersCount = pubEntry.observers.length;\n        totalObservers += observersCount;\n\n        if (observersCount > maxObservers) {\n            maxObservers = observersCount;\n            maxObserversPubEntry = pubEntry;\n        }\n    });\n\n    let response = {\n        totalQueries,\n        redisChannels,\n        totalSize: totalSize + 'B',\n        totalObservers,\n    };\n\n    if (maxSize) {\n        response.maxSize = {\n            size: maxSize,\n            id: maxSizePubEntry.id\n        }\n    }\n\n    if (maxObservers) {\n        response.maxObservers = {\n            count: maxObservers,\n            id: maxObserversPubEntry.id\n        }\n    }\n\n    return response;\n}"]},"sourceType":"script","hash":"75e7dc6dc5186f4ff175607b2181773969670e96"}
