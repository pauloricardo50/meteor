{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/widget1/widget1Math.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/components/widget1/widget1Math.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/widget1/widget1Math.js","inputSourceMap":{"version":3,"sources":["imports/core/components/widget1/widget1Math.js"],"names":["SUCCESS","WARNING","ERROR","NOTARY_FEES","AMORTIZATION_STOP","MAINTENANCE_REAL","MAINTENANCE_FINMA","INTERESTS_FINMA","MAX_BORROW_RATIO_PRIMARY_PROPERTY","MAX_BORROW_RATIO_OTHER","MAX_BORROW_RATIO_WITH_PLEDGE","FORTUNE_WARNING_TIGHT","INCOME_WARNING_TIGHT","FORTUNE_ERROR","INCOME_ERROR","MAX_INCOME_RATIO","MAX_INCOME_RATIO_TIGHT","getLoanValue","propertyValue","fortune","getRefinancingBorrowRatio","loan","getBorrowRatio","getYearlyAmortization","loanValue","yearsToRetirement","borrowValue","percentToAmortize","getSimpleYearlyInterests","interests","getSimpleYearlyMaintenance","maintenanceRate","getIncomeRatio","yearlySalary","monthlyCost","getFinmaMonthlyCost","wantedLoan","maintenanceMonthly","interestsMonthly","amortizationMonthly","totalMonthly","validateIncomeRatio","incomeRatio","safeIncomeRatio","status","error","undefined","validateBorrowRatio","borrowRatio","isPrimary","allowInsurance","maxRatio"],"mappings":"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","sourcesContent":["import { SUCCESS, WARNING, ERROR } from 'core/api/constants';\n\nimport {\n  NOTARY_FEES,\n  AMORTIZATION_STOP,\n  MAINTENANCE_REAL,\n  MAINTENANCE_FINMA,\n  INTERESTS_FINMA,\n  MAX_BORROW_RATIO_PRIMARY_PROPERTY,\n  MAX_BORROW_RATIO_OTHER,\n  MAX_BORROW_RATIO_WITH_PLEDGE,\n  FORTUNE_WARNING_TIGHT,\n  INCOME_WARNING_TIGHT,\n  FORTUNE_ERROR,\n  INCOME_ERROR,\n  MAX_INCOME_RATIO,\n  MAX_INCOME_RATIO_TIGHT,\n} from 'core/config/financeConstants';\n\nexport const getLoanValue = (propertyValue, fortune) =>\n  propertyValue * (1 + NOTARY_FEES) - fortune;\n\nexport const getRefinancingBorrowRatio = (propertyValue, loan) =>\n  loan / propertyValue;\n\nexport const getBorrowRatio = (propertyValue, fortune) =>\n  getRefinancingBorrowRatio(\n    propertyValue,\n    getLoanValue(propertyValue, fortune),\n  );\n\nexport const getYearlyAmortization = ({\n  propertyValue,\n  loanValue,\n  yearsToRetirement = 15,\n}) => {\n  const borrowValue = loanValue / propertyValue;\n  const percentToAmortize = borrowValue - AMORTIZATION_STOP;\n\n  if (percentToAmortize <= 0) {\n    // If you're below the cut-off value, no need to amortize\n    return 0;\n  }\n\n  // borrowValue is above 65%\n  // 15 years amortization is the default, but if you're older, you'll\n  // have to amortize faster\n  return (percentToAmortize * propertyValue) / yearsToRetirement;\n};\n\n// Given the value of a property, the down payment and interest rate,\n// return the yearly interests to pay.\n// This includes the money lost through NOTARY_FEES\nexport const getSimpleYearlyInterests = (loanValue, interests) =>\n  loanValue * interests;\n\nexport const getSimpleYearlyMaintenance = (\n  propertyValue,\n  maintenanceRate = MAINTENANCE_REAL,\n) => maintenanceRate * propertyValue;\n\nexport const getIncomeRatio = (yearlySalary, monthlyCost) =>\n  monthlyCost / (yearlySalary / 12);\n\nexport const getFinmaMonthlyCost = (propertyValue, fortune, wantedLoan) => {\n  const maintenanceMonthly = getSimpleYearlyMaintenance(propertyValue, MAINTENANCE_FINMA) / 12;\n  const loanValue = wantedLoan || getLoanValue(propertyValue, fortune);\n  const interestsMonthly = getSimpleYearlyInterests(loanValue, INTERESTS_FINMA) / 12;\n  const amortizationMonthly = getYearlyAmortization({ propertyValue, loanValue }) / 12;\n\n  return {\n    maintenanceMonthly,\n    interestsMonthly,\n    amortizationMonthly,\n    totalMonthly: maintenanceMonthly + interestsMonthly + amortizationMonthly,\n  };\n};\n\nexport const validateIncomeRatio = (incomeRatio) => {\n  // add 0.01% to avoid rounding issues\n  const safeIncomeRatio = incomeRatio - 0.0001;\n  if (safeIncomeRatio <= MAX_INCOME_RATIO) {\n    return { status: SUCCESS, error: undefined };\n  }\n  if (safeIncomeRatio <= MAX_INCOME_RATIO_TIGHT) {\n    return { status: WARNING, error: INCOME_WARNING_TIGHT };\n  }\n\n  return { status: ERROR, error: INCOME_ERROR };\n};\n\nexport const validateBorrowRatio = (\n  borrowRatio,\n  isPrimary = true,\n  allowInsurance = true,\n) => {\n  const maxRatio = isPrimary\n    ? MAX_BORROW_RATIO_PRIMARY_PROPERTY\n    : MAX_BORROW_RATIO_OTHER;\n\n  if (borrowRatio <= maxRatio) {\n    return { status: SUCCESS, error: undefined };\n  }\n  if (allowInsurance && borrowRatio <= MAX_BORROW_RATIO_WITH_PLEDGE) {\n    return { status: WARNING, error: FORTUNE_WARNING_TIGHT };\n  }\n\n  return { status: ERROR, error: FORTUNE_ERROR };\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/widget1/widget1Math.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/widget1/widget1Math.js"}},"code":"module.export({\n  getLoanValue: () => getLoanValue,\n  getRefinancingBorrowRatio: () => getRefinancingBorrowRatio,\n  getBorrowRatio: () => getBorrowRatio,\n  getYearlyAmortization: () => getYearlyAmortization,\n  getSimpleYearlyInterests: () => getSimpleYearlyInterests,\n  getSimpleYearlyMaintenance: () => getSimpleYearlyMaintenance,\n  getIncomeRatio: () => getIncomeRatio,\n  getFinmaMonthlyCost: () => getFinmaMonthlyCost,\n  validateIncomeRatio: () => validateIncomeRatio,\n  validateBorrowRatio: () => validateBorrowRatio\n});\nlet SUCCESS, WARNING, ERROR;\nmodule.link(\"../../api/constants\", {\n  SUCCESS(v) {\n    SUCCESS = v;\n  },\n\n  WARNING(v) {\n    WARNING = v;\n  },\n\n  ERROR(v) {\n    ERROR = v;\n  }\n\n}, 0);\nlet NOTARY_FEES, AMORTIZATION_STOP, MAINTENANCE_REAL, MAINTENANCE_FINMA, INTERESTS_FINMA, MAX_BORROW_RATIO_PRIMARY_PROPERTY, MAX_BORROW_RATIO_OTHER, MAX_BORROW_RATIO_WITH_PLEDGE, FORTUNE_WARNING_TIGHT, INCOME_WARNING_TIGHT, FORTUNE_ERROR, INCOME_ERROR, MAX_INCOME_RATIO, MAX_INCOME_RATIO_TIGHT;\nmodule.link(\"../../config/financeConstants\", {\n  NOTARY_FEES(v) {\n    NOTARY_FEES = v;\n  },\n\n  AMORTIZATION_STOP(v) {\n    AMORTIZATION_STOP = v;\n  },\n\n  MAINTENANCE_REAL(v) {\n    MAINTENANCE_REAL = v;\n  },\n\n  MAINTENANCE_FINMA(v) {\n    MAINTENANCE_FINMA = v;\n  },\n\n  INTERESTS_FINMA(v) {\n    INTERESTS_FINMA = v;\n  },\n\n  MAX_BORROW_RATIO_PRIMARY_PROPERTY(v) {\n    MAX_BORROW_RATIO_PRIMARY_PROPERTY = v;\n  },\n\n  MAX_BORROW_RATIO_OTHER(v) {\n    MAX_BORROW_RATIO_OTHER = v;\n  },\n\n  MAX_BORROW_RATIO_WITH_PLEDGE(v) {\n    MAX_BORROW_RATIO_WITH_PLEDGE = v;\n  },\n\n  FORTUNE_WARNING_TIGHT(v) {\n    FORTUNE_WARNING_TIGHT = v;\n  },\n\n  INCOME_WARNING_TIGHT(v) {\n    INCOME_WARNING_TIGHT = v;\n  },\n\n  FORTUNE_ERROR(v) {\n    FORTUNE_ERROR = v;\n  },\n\n  INCOME_ERROR(v) {\n    INCOME_ERROR = v;\n  },\n\n  MAX_INCOME_RATIO(v) {\n    MAX_INCOME_RATIO = v;\n  },\n\n  MAX_INCOME_RATIO_TIGHT(v) {\n    MAX_INCOME_RATIO_TIGHT = v;\n  }\n\n}, 1);\n\nconst getLoanValue = (propertyValue, fortune) => propertyValue * (1 + NOTARY_FEES) - fortune;\n\nconst getRefinancingBorrowRatio = (propertyValue, loan) => loan / propertyValue;\n\nconst getBorrowRatio = (propertyValue, fortune) => getRefinancingBorrowRatio(propertyValue, getLoanValue(propertyValue, fortune));\n\nconst getYearlyAmortization = ({\n  propertyValue,\n  loanValue,\n  yearsToRetirement = 15\n}) => {\n  const borrowValue = loanValue / propertyValue;\n  const percentToAmortize = borrowValue - AMORTIZATION_STOP;\n\n  if (percentToAmortize <= 0) {\n    // If you're below the cut-off value, no need to amortize\n    return 0;\n  } // borrowValue is above 65%\n  // 15 years amortization is the default, but if you're older, you'll\n  // have to amortize faster\n\n\n  return percentToAmortize * propertyValue / yearsToRetirement;\n};\n\nconst getSimpleYearlyInterests = (loanValue, interests) => loanValue * interests;\n\nconst getSimpleYearlyMaintenance = (propertyValue, maintenanceRate = MAINTENANCE_REAL) => maintenanceRate * propertyValue;\n\nconst getIncomeRatio = (yearlySalary, monthlyCost) => monthlyCost / (yearlySalary / 12);\n\nconst getFinmaMonthlyCost = (propertyValue, fortune, wantedLoan) => {\n  const maintenanceMonthly = getSimpleYearlyMaintenance(propertyValue, MAINTENANCE_FINMA) / 12;\n  const loanValue = wantedLoan || getLoanValue(propertyValue, fortune);\n  const interestsMonthly = getSimpleYearlyInterests(loanValue, INTERESTS_FINMA) / 12;\n  const amortizationMonthly = getYearlyAmortization({\n    propertyValue,\n    loanValue\n  }) / 12;\n  return {\n    maintenanceMonthly,\n    interestsMonthly,\n    amortizationMonthly,\n    totalMonthly: maintenanceMonthly + interestsMonthly + amortizationMonthly\n  };\n};\n\nconst validateIncomeRatio = incomeRatio => {\n  // add 0.01% to avoid rounding issues\n  const safeIncomeRatio = incomeRatio - 0.0001;\n\n  if (safeIncomeRatio <= MAX_INCOME_RATIO) {\n    return {\n      status: SUCCESS,\n      error: undefined\n    };\n  }\n\n  if (safeIncomeRatio <= MAX_INCOME_RATIO_TIGHT) {\n    return {\n      status: WARNING,\n      error: INCOME_WARNING_TIGHT\n    };\n  }\n\n  return {\n    status: ERROR,\n    error: INCOME_ERROR\n  };\n};\n\nconst validateBorrowRatio = (borrowRatio, isPrimary = true, allowInsurance = true) => {\n  const maxRatio = isPrimary ? MAX_BORROW_RATIO_PRIMARY_PROPERTY : MAX_BORROW_RATIO_OTHER;\n\n  if (borrowRatio <= maxRatio) {\n    return {\n      status: SUCCESS,\n      error: undefined\n    };\n  }\n\n  if (allowInsurance && borrowRatio <= MAX_BORROW_RATIO_WITH_PLEDGE) {\n    return {\n      status: WARNING,\n      error: FORTUNE_WARNING_TIGHT\n    };\n  }\n\n  return {\n    status: ERROR,\n    error: FORTUNE_ERROR\n  };\n};","map":{"version":3,"sources":["imports/core/components/widget1/widget1Math.js"],"names":["SUCCESS","ERROR","getLoanValue","propertyValue","getRefinancingBorrowRatio","loan","getBorrowRatio","getYearlyAmortization","yearsToRetirement","borrowValue","loanValue","percentToAmortize","getSimpleYearlyInterests","getSimpleYearlyMaintenance","maintenanceRate","getIncomeRatio","monthlyCost","yearlySalary","getFinmaMonthlyCost","maintenanceMonthly","wantedLoan","interestsMonthly","amortizationMonthly","totalMonthly","validateIncomeRatio","incomeRatio","safeIncomeRatio","status","error","undefined","INCOME_WARNING_TIGHT","INCOME_ERROR","validateBorrowRatio","isPrimary","allowInsurance","maxRatio","borrowRatio","FORTUNE_WARNING_TIGHT","FORTUNE_ERROR"],"mappings":"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","sourcesContent":["import { SUCCESS, WARNING, ERROR } from 'core/api/constants';\n\nimport {\n  NOTARY_FEES,\n  AMORTIZATION_STOP,\n  MAINTENANCE_REAL,\n  MAINTENANCE_FINMA,\n  INTERESTS_FINMA,\n  MAX_BORROW_RATIO_PRIMARY_PROPERTY,\n  MAX_BORROW_RATIO_OTHER,\n  MAX_BORROW_RATIO_WITH_PLEDGE,\n  FORTUNE_WARNING_TIGHT,\n  INCOME_WARNING_TIGHT,\n  FORTUNE_ERROR,\n  INCOME_ERROR,\n  MAX_INCOME_RATIO,\n  MAX_INCOME_RATIO_TIGHT,\n} from 'core/config/financeConstants';\n\nexport const getLoanValue = (propertyValue, fortune) =>\n  propertyValue * (1 + NOTARY_FEES) - fortune;\n\nexport const getRefinancingBorrowRatio = (propertyValue, loan) =>\n  loan / propertyValue;\n\nexport const getBorrowRatio = (propertyValue, fortune) =>\n  getRefinancingBorrowRatio(\n    propertyValue,\n    getLoanValue(propertyValue, fortune),\n  );\n\nexport const getYearlyAmortization = ({\n  propertyValue,\n  loanValue,\n  yearsToRetirement = 15,\n}) => {\n  const borrowValue = loanValue / propertyValue;\n  const percentToAmortize = borrowValue - AMORTIZATION_STOP;\n\n  if (percentToAmortize <= 0) {\n    // If you're below the cut-off value, no need to amortize\n    return 0;\n  }\n\n  // borrowValue is above 65%\n  // 15 years amortization is the default, but if you're older, you'll\n  // have to amortize faster\n  return (percentToAmortize * propertyValue) / yearsToRetirement;\n};\n\n// Given the value of a property, the down payment and interest rate,\n// return the yearly interests to pay.\n// This includes the money lost through NOTARY_FEES\nexport const getSimpleYearlyInterests = (loanValue, interests) =>\n  loanValue * interests;\n\nexport const getSimpleYearlyMaintenance = (\n  propertyValue,\n  maintenanceRate = MAINTENANCE_REAL,\n) => maintenanceRate * propertyValue;\n\nexport const getIncomeRatio = (yearlySalary, monthlyCost) =>\n  monthlyCost / (yearlySalary / 12);\n\nexport const getFinmaMonthlyCost = (propertyValue, fortune, wantedLoan) => {\n  const maintenanceMonthly = getSimpleYearlyMaintenance(propertyValue, MAINTENANCE_FINMA) / 12;\n  const loanValue = wantedLoan || getLoanValue(propertyValue, fortune);\n  const interestsMonthly = getSimpleYearlyInterests(loanValue, INTERESTS_FINMA) / 12;\n  const amortizationMonthly = getYearlyAmortization({ propertyValue, loanValue }) / 12;\n\n  return {\n    maintenanceMonthly,\n    interestsMonthly,\n    amortizationMonthly,\n    totalMonthly: maintenanceMonthly + interestsMonthly + amortizationMonthly,\n  };\n};\n\nexport const validateIncomeRatio = (incomeRatio) => {\n  // add 0.01% to avoid rounding issues\n  const safeIncomeRatio = incomeRatio - 0.0001;\n  if (safeIncomeRatio <= MAX_INCOME_RATIO) {\n    return { status: SUCCESS, error: undefined };\n  }\n  if (safeIncomeRatio <= MAX_INCOME_RATIO_TIGHT) {\n    return { status: WARNING, error: INCOME_WARNING_TIGHT };\n  }\n\n  return { status: ERROR, error: INCOME_ERROR };\n};\n\nexport const validateBorrowRatio = (\n  borrowRatio,\n  isPrimary = true,\n  allowInsurance = true,\n) => {\n  const maxRatio = isPrimary\n    ? MAX_BORROW_RATIO_PRIMARY_PROPERTY\n    : MAX_BORROW_RATIO_OTHER;\n\n  if (borrowRatio <= maxRatio) {\n    return { status: SUCCESS, error: undefined };\n  }\n  if (allowInsurance && borrowRatio <= MAX_BORROW_RATIO_WITH_PLEDGE) {\n    return { status: WARNING, error: FORTUNE_WARNING_TIGHT };\n  }\n\n  return { status: ERROR, error: FORTUNE_ERROR };\n};\n"]},"sourceType":"script","hash":"1254c6a84a6c0acb6e6b597803f80337d4b8b2cd"}
