{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/localization/localization.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/utils/localization/localization.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/localization/localization.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/localization/localization.js"],"names":["addLocaleData","moment","fr","translateSimpleSchema","Intl","getUserLocale","getFormats","number","money","style","currency","maximumFractionDigits","minimumFractionDigits","moneyWithoutCurrency","useGrouping","percentage","percentageRounded","setupMoment","locale","months","split","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","meridiemParse","isPM","input","charAt","meridiem","hours","minutes","isLower","week","dow","doy","localizationStartup","setupAccounts","messages","init","T9n","require","accountsFr","map","setLanguage"],"mappings":"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","sourcesContent":["// This file is shared between client and server to allow server-side tests to have access to it\n\nimport { addLocaleData } from 'react-intl';\nimport moment from 'moment';\nimport fr from 'react-intl/locale-data/fr';\nimport translateSimpleSchema from './simpleSchemaLocalization';\nimport Intl from '../intl';\n\nexport const getUserLocale = () => 'fr-CH';\n\nexport const getFormats = () => ({\n  number: {\n    money: {\n      style: 'currency',\n      currency: 'CHF',\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    },\n    moneyWithoutCurrency: {\n      style: 'decimal',\n      useGrouping: true,\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    },\n    percentage: {\n      style: 'percent',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    },\n    percentageRounded: {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    },\n  },\n});\n\nconst setupMoment = () => {\n  moment.locale('fr', {\n    months: 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n    monthsShort: 'Janv._Févr._Mars_Avr._Mai_Juin_Juil._Août_Sept._Oct._Nov._Déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n    weekdaysShort: 'Dim._Lun._Mar._Mer._Jeu._Ven._Sam.'.split('_'),\n    weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm',\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: 'L',\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'qq secs',\n      m: '1m',\n      mm: '%dm',\n      h: '1h',\n      hh: '%dh',\n      d: '1j',\n      dd: '%dj',\n      M: '1 mois',\n      MM: '%d mois',\n      y: '1 an',\n      yy: '%d ans',\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal(number) {\n      return number + (number === 1 ? 'er' : 'e');\n    },\n    meridiemParse: /PD|MD/,\n    isPM(input) {\n      return input.charAt(0) === 'M';\n    },\n    // In case the meridiem units are not separated around 12, then implement\n    // this function (look at locale/id.js for an example).\n    // meridiemHour : function (hour, meridiem) {\n    //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n    // },\n    meridiem(hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n    week: {\n      dow: 1, // Monday is the first day of the week.\n      doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n  });\n};\n\nexport const localizationStartup = ({\n  setupAccounts = true,\n  messages,\n} = {}) => {\n  // Add locales used in app here\n  Intl.init(messages);\n  addLocaleData(fr);\n  setupMoment();\n  moment.locale('fr');\n  translateSimpleSchema();\n\n  if (setupAccounts) {\n    const { T9n } = require('meteor-accounts-t9n');\n    const { fr: accountsFr } = require('meteor-accounts-t9n/build/fr');\n    T9n.map('fr', accountsFr);\n    T9n.setLanguage('fr');\n  }\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/localization/localization.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/localization/localization.js"}},"code":"module.export({\n  getUserLocale: () => getUserLocale,\n  getFormats: () => getFormats,\n  localizationStartup: () => localizationStartup\n});\nlet addLocaleData;\nmodule.link(\"react-intl\", {\n  addLocaleData(v) {\n    addLocaleData = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet fr;\nmodule.link(\"react-intl/locale-data/fr\", {\n  default(v) {\n    fr = v;\n  }\n\n}, 2);\nlet translateSimpleSchema;\nmodule.link(\"./simpleSchemaLocalization\", {\n  default(v) {\n    translateSimpleSchema = v;\n  }\n\n}, 3);\nlet Intl;\nmodule.link(\"../intl\", {\n  default(v) {\n    Intl = v;\n  }\n\n}, 4);\n\nconst getUserLocale = () => 'fr-CH';\n\nconst getFormats = () => ({\n  number: {\n    money: {\n      style: 'currency',\n      currency: 'CHF',\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0\n    },\n    moneyWithoutCurrency: {\n      style: 'decimal',\n      useGrouping: true,\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0\n    },\n    percentage: {\n      style: 'percent',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    },\n    percentageRounded: {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }\n  }\n});\n\nconst setupMoment = () => {\n  moment.locale('fr', {\n    months: 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n    monthsShort: 'Janv._Févr._Mars_Avr._Mai_Juin_Juil._Août_Sept._Oct._Nov._Déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n    weekdaysShort: 'Dim._Lun._Mar._Mer._Jeu._Ven._Sam.'.split('_'),\n    weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'qq secs',\n      m: '1m',\n      mm: '%dm',\n      h: '1h',\n      hh: '%dh',\n      d: '1j',\n      dd: '%dj',\n      M: '1 mois',\n      MM: '%d mois',\n      y: '1 an',\n      yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n\n    ordinal(number) {\n      return number + (number === 1 ? 'er' : 'e');\n    },\n\n    meridiemParse: /PD|MD/,\n\n    isPM(input) {\n      return input.charAt(0) === 'M';\n    },\n\n    // In case the meridiem units are not separated around 12, then implement\n    // this function (look at locale/id.js for an example).\n    // meridiemHour : function (hour, meridiem) {\n    //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n    // },\n    meridiem(hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  });\n};\n\nconst localizationStartup = function () {\n  let {\n    setupAccounts = true,\n    messages\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // Add locales used in app here\n  Intl.init(messages);\n  addLocaleData(fr);\n  setupMoment();\n  moment.locale('fr');\n  translateSimpleSchema();\n\n  if (setupAccounts) {\n    const {\n      T9n\n    } = require('meteor-accounts-t9n');\n\n    const {\n      fr: accountsFr\n    } = require('meteor-accounts-t9n/build/fr');\n\n    T9n.map('fr', accountsFr);\n    T9n.setLanguage('fr');\n  }\n};","map":{"version":3,"sources":["imports/core/utils/localization/localization.js"],"names":["getUserLocale","getFormats","number","money","style","currency","maximumFractionDigits","minimumFractionDigits","moneyWithoutCurrency","useGrouping","percentage","percentageRounded","setupMoment","moment","months","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","meridiemParse","isPM","input","meridiem","hours","week","dow","doy","localizationStartup","setupAccounts","messages","Intl","addLocaleData","translateSimpleSchema","T9n","require","fr","accountsFr"],"mappings":"AAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,aAAA,EAAA,MAAA,aAAA;AAAA,EAAA,UAAA,EAAA,MAAA,UAAA;AAAA,EAAA,mBAAA,EAAA,MAAA;AAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,EAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,EAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,qBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,qBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,IAAA;AAAA,MAAA,CAAA,IAAA,CAAA,SAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAQO,MAAMA,aAAa,GAAG,MAAtB,OAAA;;AAEA,MAAMC,UAAU,GAAG,OAAO;AAC/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EADA,UAAA;AAELC,MAAAA,QAAQ,EAFH,KAAA;AAGLC,MAAAA,qBAAqB,EAHhB,CAAA;AAILC,MAAAA,qBAAqB,EAAE;AAJlB,KADD;AAONC,IAAAA,oBAAoB,EAAE;AACpBJ,MAAAA,KAAK,EADe,SAAA;AAEpBK,MAAAA,WAAW,EAFS,IAAA;AAGpBH,MAAAA,qBAAqB,EAHD,CAAA;AAIpBC,MAAAA,qBAAqB,EAAE;AAJH,KAPhB;AAaNG,IAAAA,UAAU,EAAE;AACVN,MAAAA,KAAK,EADK,SAAA;AAEVG,MAAAA,qBAAqB,EAFX,CAAA;AAGVD,MAAAA,qBAAqB,EAAE;AAHb,KAbN;AAkBNK,IAAAA,iBAAiB,EAAE;AACjBP,MAAAA,KAAK,EADY,SAAA;AAEjBG,MAAAA,qBAAqB,EAFJ,CAAA;AAGjBD,MAAAA,qBAAqB,EAAE;AAHN;AAlBb;AADuB,CAAP,CAAnB;;AA2BP,MAAMM,WAAW,GAAG,MAAM;AACxBC,EAAAA,MAAM,CAANA,MAAAA,CAAAA,IAAAA,EAAoB;AAClBC,IAAAA,MAAM,EAAE,uFAAA,KAAA,CADU,GACV,CADU;AAElBC,IAAAA,WAAW,EAAE,iEAAA,KAAA,CAFK,GAEL,CAFK;AAGlBC,IAAAA,gBAAgB,EAHE,IAAA;AAIlBC,IAAAA,QAAQ,EAAE,sDAAA,KAAA,CAJQ,GAIR,CAJQ;AAKlBC,IAAAA,aAAa,EAAE,qCAAA,KAAA,CALG,GAKH,CALG;AAMlBC,IAAAA,WAAW,EAAE,uBAAA,KAAA,CANK,GAML,CANK;AAOlBC,IAAAA,kBAAkB,EAPA,IAAA;AAQlBC,IAAAA,cAAc,EAAE;AACdC,MAAAA,EAAE,EADY,OAAA;AAEdC,MAAAA,GAAG,EAFW,UAAA;AAGdC,MAAAA,CAAC,EAHa,YAAA;AAIdC,MAAAA,EAAE,EAJY,aAAA;AAKdC,MAAAA,GAAG,EALW,mBAAA;AAMdC,MAAAA,IAAI,EAAE;AANQ,KARE;AAgBlBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EADC,oBAAA;AAERC,MAAAA,OAAO,EAFC,eAAA;AAGRC,MAAAA,QAAQ,EAHA,aAAA;AAIRC,MAAAA,OAAO,EAJC,aAAA;AAKRC,MAAAA,QAAQ,EALA,qBAAA;AAMRC,MAAAA,QAAQ,EAAE;AANF,KAhBQ;AAwBlBC,IAAAA,YAAY,EAAE;AACZC,MAAAA,MAAM,EADM,SAAA;AAEZC,MAAAA,IAAI,EAFQ,WAAA;AAGZC,MAAAA,CAAC,EAHW,SAAA;AAIZC,MAAAA,CAAC,EAJW,IAAA;AAKZC,MAAAA,EAAE,EALU,KAAA;AAMZC,MAAAA,CAAC,EANW,IAAA;AAOZC,MAAAA,EAAE,EAPU,KAAA;AAQZC,MAAAA,CAAC,EARW,IAAA;AASZC,MAAAA,EAAE,EATU,KAAA;AAUZC,MAAAA,CAAC,EAVW,QAAA;AAWZC,MAAAA,EAAE,EAXU,SAAA;AAYZC,MAAAA,CAAC,EAZW,MAAA;AAaZC,MAAAA,EAAE,EAAE;AAbQ,KAxBI;AAuClBC,IAAAA,sBAAsB,EAvCJ,eAAA;;AAwClBC,IAAAA,OAAO,CAAA,MAAA,EAAS;AACd,aAAOhD,MAAM,IAAIA,MAAM,KAANA,CAAAA,GAAAA,IAAAA,GAAjB,GAAa,CAAb;AAzCgB,KAAA;;AA2ClBiD,IAAAA,aAAa,EA3CK,OAAA;;AA4ClBC,IAAAA,IAAI,CAAA,KAAA,EAAQ;AACV,aAAOC,KAAK,CAALA,MAAAA,CAAAA,CAAAA,MAAP,GAAA;AA7CgB,KAAA;;AA+ClB;AACA;AACA;AACA;AACA;AACAC,IAAAA,QAAQ,CAAA,KAAA,EAAA,OAAA,EAAA,OAAA,EAA0B;AAChC,aAAOC,KAAK,GAALA,EAAAA,GAAAA,IAAAA,GAAP,IAAA;AArDgB,KAAA;;AAuDlBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,GAAG,EADC,CAAA;AACI;AACRC,MAAAA,GAAG,EAFC,CAAA,CAEI;;AAFJ;AAvDY,GAApB7C;AADF,CAAA;;AA+DO,MAAM8C,mBAAmB,GAAG,YAGxB;AAAA,MAHyB;AAClCC,IAAAA,aAAa,GADqB,IAAA;AAElCC,IAAAA;AAFkC,GAGzB,uEAHwB,EAGxB;AACT;AACAC,EAAAA,IAAI,CAAJA,IAAAA,CAAAA,QAAAA;AACAC,EAAAA,aAAa,CAAbA,EAAa,CAAbA;AACAnD,EAAAA,WAAW;AACXC,EAAAA,MAAM,CAANA,MAAAA,CAAAA,IAAAA;AACAmD,EAAAA,qBAAqB;;AAErB,MAAA,aAAA,EAAmB;AACjB,UAAM;AAAEC,MAAAA;AAAF,QAAUC,OAAO,CAAvB,qBAAuB,CAAvB;;AACA,UAAM;AAAEC,MAAAA,EAAE,EAAEC;AAAN,QAAqBF,OAAO,CAAlC,8BAAkC,CAAlC;;AACAD,IAAAA,GAAG,CAAHA,GAAAA,CAAAA,IAAAA,EAAAA,UAAAA;AACAA,IAAAA,GAAG,CAAHA,WAAAA,CAAAA,IAAAA;AACD;AAhBI,CAAA","sourcesContent":["// This file is shared between client and server to allow server-side tests to have access to it\n\nimport { addLocaleData } from 'react-intl';\nimport moment from 'moment';\nimport fr from 'react-intl/locale-data/fr';\nimport translateSimpleSchema from './simpleSchemaLocalization';\nimport Intl from '../intl';\n\nexport const getUserLocale = () => 'fr-CH';\n\nexport const getFormats = () => ({\n  number: {\n    money: {\n      style: 'currency',\n      currency: 'CHF',\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    },\n    moneyWithoutCurrency: {\n      style: 'decimal',\n      useGrouping: true,\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    },\n    percentage: {\n      style: 'percent',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    },\n    percentageRounded: {\n      style: 'percent',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    },\n  },\n});\n\nconst setupMoment = () => {\n  moment.locale('fr', {\n    months: 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n    monthsShort: 'Janv._Févr._Mars_Avr._Mai_Juin_Juil._Août_Sept._Oct._Nov._Déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n    weekdaysShort: 'Dim._Lun._Mar._Mer._Jeu._Ven._Sam.'.split('_'),\n    weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD/MM/YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd D MMMM YYYY HH:mm',\n    },\n    calendar: {\n      sameDay: '[Aujourd’hui à] LT',\n      nextDay: '[Demain à] LT',\n      nextWeek: 'dddd [à] LT',\n      lastDay: '[Hier à] LT',\n      lastWeek: 'dddd [dernier à] LT',\n      sameElse: 'L',\n    },\n    relativeTime: {\n      future: 'dans %s',\n      past: 'il y a %s',\n      s: 'qq secs',\n      m: '1m',\n      mm: '%dm',\n      h: '1h',\n      hh: '%dh',\n      d: '1j',\n      dd: '%dj',\n      M: '1 mois',\n      MM: '%d mois',\n      y: '1 an',\n      yy: '%d ans',\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal(number) {\n      return number + (number === 1 ? 'er' : 'e');\n    },\n    meridiemParse: /PD|MD/,\n    isPM(input) {\n      return input.charAt(0) === 'M';\n    },\n    // In case the meridiem units are not separated around 12, then implement\n    // this function (look at locale/id.js for an example).\n    // meridiemHour : function (hour, meridiem) {\n    //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\n    // },\n    meridiem(hours, minutes, isLower) {\n      return hours < 12 ? 'PD' : 'MD';\n    },\n    week: {\n      dow: 1, // Monday is the first day of the week.\n      doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n  });\n};\n\nexport const localizationStartup = ({\n  setupAccounts = true,\n  messages,\n} = {}) => {\n  // Add locales used in app here\n  Intl.init(messages);\n  addLocaleData(fr);\n  setupMoment();\n  moment.locale('fr');\n  translateSimpleSchema();\n\n  if (setupAccounts) {\n    const { T9n } = require('meteor-accounts-t9n');\n    const { fr: accountsFr } = require('meteor-accounts-t9n/build/fr');\n    T9n.map('fr', accountsFr);\n    T9n.setLanguage('fr');\n  }\n};\n"]},"sourceType":"script","hash":"10545bd451b30beb7bc0beacdea5eef8aa44d4a5"}
