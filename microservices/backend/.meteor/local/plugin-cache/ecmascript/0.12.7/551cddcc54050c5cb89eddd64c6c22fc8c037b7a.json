{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/OwnFundsCompleter.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/OwnFundsCompleter.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/OwnFundsCompleter.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/OwnFundsCompleter.spec.js"],"names":["expect","RESIDENCE_TYPE","getRequiredAndCurrentFunds","OWN_FUNDS_USAGE_TYPES","OWN_FUNDS_TYPES","describe","props","structure","property","beforeEach","context","id","ownFunds","propertyId","wantedLoan","propertyWork","_id","value","structureId","properties","loan","residenceType","MAIN_RESIDENCE","structures","ownFundsIndex","it","to","deep","equal","required","current","usageType","WITHDRAW","undefined","PLEDGE","skip","type","BANK_FORTUNE","borrowerId","INSURANCE_2","THIRD_PARTY_FORTUNE","borrowers"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { RESIDENCE_TYPE } from 'core/api/constants';\nimport { getRequiredAndCurrentFunds } from '../OwnFundsCompleterContainer';\nimport {\n  OWN_FUNDS_USAGE_TYPES,\n  OWN_FUNDS_TYPES,\n} from '../../../../../../api/constants';\n\ndescribe('OwnFundsCompleter', () => {\n  describe('getRequiredAndCurrentFunds', () => {\n    let props;\n    let structure;\n    let property;\n\n    beforeEach(() => {\n      props = {};\n    });\n\n    context('for an initial structure', () => {\n      beforeEach(() => {\n        structure = {\n          id: 'struct1',\n          ownFunds: [],\n          propertyId: 'propertyId',\n          wantedLoan: 800000,\n          propertyWork: 0,\n        };\n        property = { _id: 'propertyId', value: 1000000 };\n        props = {\n          structure,\n          structureId: 'struct1',\n          properties: [property],\n          loan: {\n            properties: [property],\n            residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n            structures: [structure],\n          },\n          ownFundsIndex: -1,\n          value: 0,\n        };\n      });\n\n      it('returns 0 and standard value for a normal structure', () => {\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 0,\n        });\n      });\n\n      it('returns less when a value is entered', () => {\n        props.value = 100000;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 100000,\n        });\n      });\n\n      it('properly discounts an existing ownFunds value', () => {\n        structure.ownFunds = [{ value: 150000 }];\n        props.ownFundsIndex = 0;\n        props.value = 100000;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 100000,\n        });\n      });\n\n      it('counts other values', () => {\n        structure.ownFunds = [\n          { value: 150000, usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = 100000;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 250000,\n        });\n      });\n\n      it('counts other values, even if value is undefined', () => {\n        structure.ownFunds = [\n          { value: 150000, usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = undefined;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 150000,\n        });\n      });\n\n      it('does not count other pledged values', () => {\n        structure.ownFunds = [\n          { value: 150000, usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = 100000;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 100000,\n        });\n      });\n\n      it('adjusts the required ownFunds amount if you pledge a value', () => {\n        props.ownFundsIndex = -1;\n        props.value = 100000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 0,\n        });\n      });\n\n      it('adjusts the required amount without exceeding maxBorrowRatioWithPledge', () => {\n        // FIXME: Debate to be had:\n        // 1. Do we reduce the pledged amount to 100k\n        // 2. Do we let the pledged amount at 150k, which is a valid structure\n        // But probably not what the user wants\n        // Except if he's planning to modify another ownfunds afterwards\n\n        // We chose Nb. 2, which is the simpler and more intuitive way to go\n\n        structure.ownFunds = [{ value: 150000 }];\n        props.ownFundsIndex = -1;\n        props.value = 150000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 150000,\n        });\n      });\n\n      it('takes into account previously pledged values', () => {\n        structure.ownFunds = [\n          { value: 40000, usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE },\n          { value: 150000 },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = 40000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 170000,\n          current: 150000,\n        });\n      });\n\n      it('works if changing a wrong pledged amount', () => {\n        structure.wantedLoan = 900000;\n        structure.ownFunds = [\n          { value: 150000, usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE },\n        ];\n        props.ownFundsIndex = 0;\n        props.value = 100000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 0,\n        });\n      });\n\n      // Show warning instead\n      it.skip('works if adding a wrong pledged amount twice', () => {\n        structure.wantedLoan = 900000;\n        structure.ownFunds = [\n          { value: 150000, usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = 200000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 0,\n        });\n      });\n\n      it('takes into account previously pledged values without exceeding maxBorrowRatioWithPledge 1', () => {\n        structure.ownFunds = [\n          { value: 100000, usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE },\n          { value: 150000 },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = 40000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 150000,\n        });\n      });\n\n      it('takes into account previously pledged values without exceeding maxBorrowRatioWithPledge 2', () => {\n        structure.ownFunds = [\n          { value: 150000, usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE },\n          { value: 150000 },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = 40000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 150000,\n        });\n      });\n\n      it('increases the wantedLoan only by the amount possible', () => {\n        structure.wantedLoan = 600000;\n        structure.ownFunds = [{ value: 150000 }];\n        props.value = 300000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 350000,\n          current: 150000,\n        });\n      });\n\n      it('works when editing a pledge funds with high loan', () => {\n        structure.wantedLoan = 900000;\n        structure.ownFunds = [\n          {\n            value: 120000,\n            type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n            borrowerId: 'bId',\n          },\n          {\n            value: 100000,\n            type: OWN_FUNDS_TYPES.INSURANCE_2,\n            usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n            borrowerId: 'bId',\n          },\n          {\n            value: 30000,\n            type: OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n            borrowerId: 'bId',\n          },\n        ];\n        props.ownFundsIndex = 1;\n        props.value = 100000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        props.borrowers = [{ _id: 'bId' }];\n\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 150000,\n        });\n      });\n\n      it('works when changing withdraw to pledge', () => {\n        property.value = 500000;\n        structure.wantedLoan = 400000;\n        structure.ownFunds = [\n          {\n            value: 75000,\n            type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n            borrowerId: 'bId',\n          },\n          {\n            value: 50000,\n            type: OWN_FUNDS_TYPES.INSURANCE_2,\n            usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n            borrowerId: 'bId',\n          },\n        ];\n        props.ownFundsIndex = 1;\n        props.value = 50000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        props.borrowers = [{ _id: 'bId' }];\n\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 75000,\n          current: 75000,\n        });\n      });\n\n      it('works when changing pledge to withdraw', () => {\n        property.value = 500000;\n        structure.wantedLoan = 450000;\n        structure.ownFunds = [\n          {\n            value: 75000,\n            type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n            borrowerId: 'bId',\n          },\n          {\n            value: 50000,\n            type: OWN_FUNDS_TYPES.INSURANCE_2,\n            usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n            borrowerId: 'bId',\n          },\n        ];\n        props.ownFundsIndex = 1;\n        props.type = OWN_FUNDS_TYPES.INSURANCE_2;\n        props.value = 50000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.WITHDRAW;\n        props.borrowers = [{ _id: 'bId' }];\n\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 125000,\n          current: 125000,\n        });\n      });\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/OwnFundsCompleter.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/OwnFundsCompleter.spec.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet RESIDENCE_TYPE;\nmodule.link(\"../../../../../../api/constants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  }\n\n}, 1);\nlet getRequiredAndCurrentFunds;\nmodule.link(\"../OwnFundsCompleterContainer\", {\n  getRequiredAndCurrentFunds(v) {\n    getRequiredAndCurrentFunds = v;\n  }\n\n}, 2);\nlet OWN_FUNDS_USAGE_TYPES, OWN_FUNDS_TYPES;\nmodule.link(\"../../../../../../api/constants\", {\n  OWN_FUNDS_USAGE_TYPES(v) {\n    OWN_FUNDS_USAGE_TYPES = v;\n  },\n\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  }\n\n}, 3);\ndescribe('OwnFundsCompleter', () => {\n  describe('getRequiredAndCurrentFunds', () => {\n    let props;\n    let structure;\n    let property;\n    beforeEach(() => {\n      props = {};\n    });\n    context('for an initial structure', () => {\n      beforeEach(() => {\n        structure = {\n          id: 'struct1',\n          ownFunds: [],\n          propertyId: 'propertyId',\n          wantedLoan: 800000,\n          propertyWork: 0\n        };\n        property = {\n          _id: 'propertyId',\n          value: 1000000\n        };\n        props = {\n          structure,\n          structureId: 'struct1',\n          properties: [property],\n          loan: {\n            properties: [property],\n            residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n            structures: [structure]\n          },\n          ownFundsIndex: -1,\n          value: 0\n        };\n      });\n      it('returns 0 and standard value for a normal structure', () => {\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 0\n        });\n      });\n      it('returns less when a value is entered', () => {\n        props.value = 100000;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 100000\n        });\n      });\n      it('properly discounts an existing ownFunds value', () => {\n        structure.ownFunds = [{\n          value: 150000\n        }];\n        props.ownFundsIndex = 0;\n        props.value = 100000;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 100000\n        });\n      });\n      it('counts other values', () => {\n        structure.ownFunds = [{\n          value: 150000,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW\n        }];\n        props.ownFundsIndex = -1;\n        props.value = 100000;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 250000\n        });\n      });\n      it('counts other values, even if value is undefined', () => {\n        structure.ownFunds = [{\n          value: 150000,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW\n        }];\n        props.ownFundsIndex = -1;\n        props.value = undefined;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 150000\n        });\n      });\n      it('does not count other pledged values', () => {\n        structure.ownFunds = [{\n          value: 150000,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE\n        }];\n        props.ownFundsIndex = -1;\n        props.value = 100000;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 100000\n        });\n      });\n      it('adjusts the required ownFunds amount if you pledge a value', () => {\n        props.ownFundsIndex = -1;\n        props.value = 100000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 0\n        });\n      });\n      it('adjusts the required amount without exceeding maxBorrowRatioWithPledge', () => {\n        // FIXME: Debate to be had:\n        // 1. Do we reduce the pledged amount to 100k\n        // 2. Do we let the pledged amount at 150k, which is a valid structure\n        // But probably not what the user wants\n        // Except if he's planning to modify another ownfunds afterwards\n        // We chose Nb. 2, which is the simpler and more intuitive way to go\n        structure.ownFunds = [{\n          value: 150000\n        }];\n        props.ownFundsIndex = -1;\n        props.value = 150000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 150000\n        });\n      });\n      it('takes into account previously pledged values', () => {\n        structure.ownFunds = [{\n          value: 40000,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE\n        }, {\n          value: 150000\n        }];\n        props.ownFundsIndex = -1;\n        props.value = 40000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 170000,\n          current: 150000\n        });\n      });\n      it('works if changing a wrong pledged amount', () => {\n        structure.wantedLoan = 900000;\n        structure.ownFunds = [{\n          value: 150000,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE\n        }];\n        props.ownFundsIndex = 0;\n        props.value = 100000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 0\n        });\n      }); // Show warning instead\n\n      it.skip('works if adding a wrong pledged amount twice', () => {\n        structure.wantedLoan = 900000;\n        structure.ownFunds = [{\n          value: 150000,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE\n        }];\n        props.ownFundsIndex = -1;\n        props.value = 200000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 0\n        });\n      });\n      it('takes into account previously pledged values without exceeding maxBorrowRatioWithPledge 1', () => {\n        structure.ownFunds = [{\n          value: 100000,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE\n        }, {\n          value: 150000\n        }];\n        props.ownFundsIndex = -1;\n        props.value = 40000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 150000\n        });\n      });\n      it('takes into account previously pledged values without exceeding maxBorrowRatioWithPledge 2', () => {\n        structure.ownFunds = [{\n          value: 150000,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE\n        }, {\n          value: 150000\n        }];\n        props.ownFundsIndex = -1;\n        props.value = 40000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 150000\n        });\n      });\n      it('increases the wantedLoan only by the amount possible', () => {\n        structure.wantedLoan = 600000;\n        structure.ownFunds = [{\n          value: 150000\n        }];\n        props.value = 300000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 350000,\n          current: 150000\n        });\n      });\n      it('works when editing a pledge funds with high loan', () => {\n        structure.wantedLoan = 900000;\n        structure.ownFunds = [{\n          value: 120000,\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId: 'bId'\n        }, {\n          value: 100000,\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n          borrowerId: 'bId'\n        }, {\n          value: 30000,\n          type: OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n          borrowerId: 'bId'\n        }];\n        props.ownFundsIndex = 1;\n        props.value = 100000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        props.borrowers = [{\n          _id: 'bId'\n        }];\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 150000\n        });\n      });\n      it('works when changing withdraw to pledge', () => {\n        property.value = 500000;\n        structure.wantedLoan = 400000;\n        structure.ownFunds = [{\n          value: 75000,\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId: 'bId'\n        }, {\n          value: 50000,\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId: 'bId'\n        }];\n        props.ownFundsIndex = 1;\n        props.value = 50000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        props.borrowers = [{\n          _id: 'bId'\n        }];\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 75000,\n          current: 75000\n        });\n      });\n      it('works when changing pledge to withdraw', () => {\n        property.value = 500000;\n        structure.wantedLoan = 450000;\n        structure.ownFunds = [{\n          value: 75000,\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId: 'bId'\n        }, {\n          value: 50000,\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n          borrowerId: 'bId'\n        }];\n        props.ownFundsIndex = 1;\n        props.type = OWN_FUNDS_TYPES.INSURANCE_2;\n        props.value = 50000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.WITHDRAW;\n        props.borrowers = [{\n          _id: 'bId'\n        }];\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 125000,\n          current: 125000\n        });\n      });\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/OwnFundsCompleter.spec.js"],"names":["describe","beforeEach","props","context","structure","id","ownFunds","propertyId","wantedLoan","propertyWork","property","_id","value","structureId","properties","loan","residenceType","RESIDENCE_TYPE","structures","ownFundsIndex","it","expect","getRequiredAndCurrentFunds","required","current","usageType","OWN_FUNDS_USAGE_TYPES","WITHDRAW","PLEDGE","type","OWN_FUNDS_TYPES","borrowerId"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { RESIDENCE_TYPE } from 'core/api/constants';\nimport { getRequiredAndCurrentFunds } from '../OwnFundsCompleterContainer';\nimport {\n  OWN_FUNDS_USAGE_TYPES,\n  OWN_FUNDS_TYPES,\n} from '../../../../../../api/constants';\n\ndescribe('OwnFundsCompleter', () => {\n  describe('getRequiredAndCurrentFunds', () => {\n    let props;\n    let structure;\n    let property;\n\n    beforeEach(() => {\n      props = {};\n    });\n\n    context('for an initial structure', () => {\n      beforeEach(() => {\n        structure = {\n          id: 'struct1',\n          ownFunds: [],\n          propertyId: 'propertyId',\n          wantedLoan: 800000,\n          propertyWork: 0,\n        };\n        property = { _id: 'propertyId', value: 1000000 };\n        props = {\n          structure,\n          structureId: 'struct1',\n          properties: [property],\n          loan: {\n            properties: [property],\n            residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n            structures: [structure],\n          },\n          ownFundsIndex: -1,\n          value: 0,\n        };\n      });\n\n      it('returns 0 and standard value for a normal structure', () => {\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 0,\n        });\n      });\n\n      it('returns less when a value is entered', () => {\n        props.value = 100000;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 100000,\n        });\n      });\n\n      it('properly discounts an existing ownFunds value', () => {\n        structure.ownFunds = [{ value: 150000 }];\n        props.ownFundsIndex = 0;\n        props.value = 100000;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 100000,\n        });\n      });\n\n      it('counts other values', () => {\n        structure.ownFunds = [\n          { value: 150000, usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = 100000;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 250000,\n        });\n      });\n\n      it('counts other values, even if value is undefined', () => {\n        structure.ownFunds = [\n          { value: 150000, usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = undefined;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 150000,\n        });\n      });\n\n      it('does not count other pledged values', () => {\n        structure.ownFunds = [\n          { value: 150000, usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = 100000;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 250000,\n          current: 100000,\n        });\n      });\n\n      it('adjusts the required ownFunds amount if you pledge a value', () => {\n        props.ownFundsIndex = -1;\n        props.value = 100000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 0,\n        });\n      });\n\n      it('adjusts the required amount without exceeding maxBorrowRatioWithPledge', () => {\n        // FIXME: Debate to be had:\n        // 1. Do we reduce the pledged amount to 100k\n        // 2. Do we let the pledged amount at 150k, which is a valid structure\n        // But probably not what the user wants\n        // Except if he's planning to modify another ownfunds afterwards\n\n        // We chose Nb. 2, which is the simpler and more intuitive way to go\n\n        structure.ownFunds = [{ value: 150000 }];\n        props.ownFundsIndex = -1;\n        props.value = 150000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 150000,\n        });\n      });\n\n      it('takes into account previously pledged values', () => {\n        structure.ownFunds = [\n          { value: 40000, usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE },\n          { value: 150000 },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = 40000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 170000,\n          current: 150000,\n        });\n      });\n\n      it('works if changing a wrong pledged amount', () => {\n        structure.wantedLoan = 900000;\n        structure.ownFunds = [\n          { value: 150000, usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE },\n        ];\n        props.ownFundsIndex = 0;\n        props.value = 100000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 0,\n        });\n      });\n\n      // Show warning instead\n      it.skip('works if adding a wrong pledged amount twice', () => {\n        structure.wantedLoan = 900000;\n        structure.ownFunds = [\n          { value: 150000, usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = 200000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 0,\n        });\n      });\n\n      it('takes into account previously pledged values without exceeding maxBorrowRatioWithPledge 1', () => {\n        structure.ownFunds = [\n          { value: 100000, usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE },\n          { value: 150000 },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = 40000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 150000,\n        });\n      });\n\n      it('takes into account previously pledged values without exceeding maxBorrowRatioWithPledge 2', () => {\n        structure.ownFunds = [\n          { value: 150000, usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE },\n          { value: 150000 },\n        ];\n        props.ownFundsIndex = -1;\n        props.value = 40000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 150000,\n        });\n      });\n\n      it('increases the wantedLoan only by the amount possible', () => {\n        structure.wantedLoan = 600000;\n        structure.ownFunds = [{ value: 150000 }];\n        props.value = 300000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 350000,\n          current: 150000,\n        });\n      });\n\n      it('works when editing a pledge funds with high loan', () => {\n        structure.wantedLoan = 900000;\n        structure.ownFunds = [\n          {\n            value: 120000,\n            type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n            borrowerId: 'bId',\n          },\n          {\n            value: 100000,\n            type: OWN_FUNDS_TYPES.INSURANCE_2,\n            usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n            borrowerId: 'bId',\n          },\n          {\n            value: 30000,\n            type: OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n            borrowerId: 'bId',\n          },\n        ];\n        props.ownFundsIndex = 1;\n        props.value = 100000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        props.borrowers = [{ _id: 'bId' }];\n\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 150000,\n          current: 150000,\n        });\n      });\n\n      it('works when changing withdraw to pledge', () => {\n        property.value = 500000;\n        structure.wantedLoan = 400000;\n        structure.ownFunds = [\n          {\n            value: 75000,\n            type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n            borrowerId: 'bId',\n          },\n          {\n            value: 50000,\n            type: OWN_FUNDS_TYPES.INSURANCE_2,\n            usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n            borrowerId: 'bId',\n          },\n        ];\n        props.ownFundsIndex = 1;\n        props.value = 50000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.PLEDGE;\n        props.borrowers = [{ _id: 'bId' }];\n\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 75000,\n          current: 75000,\n        });\n      });\n\n      it('works when changing pledge to withdraw', () => {\n        property.value = 500000;\n        structure.wantedLoan = 450000;\n        structure.ownFunds = [\n          {\n            value: 75000,\n            type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n            borrowerId: 'bId',\n          },\n          {\n            value: 50000,\n            type: OWN_FUNDS_TYPES.INSURANCE_2,\n            usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n            borrowerId: 'bId',\n          },\n        ];\n        props.ownFundsIndex = 1;\n        props.type = OWN_FUNDS_TYPES.INSURANCE_2;\n        props.value = 50000;\n        props.usageType = OWN_FUNDS_USAGE_TYPES.WITHDRAW;\n        props.borrowers = [{ _id: 'bId' }];\n\n        expect(getRequiredAndCurrentFunds(props)).to.deep.equal({\n          required: 125000,\n          current: 125000,\n        });\n      });\n    });\n  });\n});\n"]},"sourceType":"script","hash":"551cddcc54050c5cb89eddd64c6c22fc8c037b7a"}
