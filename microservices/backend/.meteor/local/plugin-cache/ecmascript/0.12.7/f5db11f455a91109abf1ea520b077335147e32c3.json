{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/BorrowerCalculator.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/utils/Calculator/BorrowerCalculator.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/BorrowerCalculator.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/Calculator/BorrowerCalculator.js"],"names":["OWN_FUNDS_TYPES","getBorrowerDocuments","filesPercent","getMissingDocumentIds","getBorrowerInfoArray","getBorrowerFinanceArray","getBorrowerSimpleArray","arrayify","getPercent","getCountedArray","getMissingFieldIds","getFormValuesHashMultiple","MiddlewareManager","INCOME_CONSIDERATION_TYPES","EXPENSE_TYPES","borrowerExtractorMiddleware","BONUS_ALGORITHMS","REAL_ESTATE_INCOME_ALGORITHMS","withBorrowerCalculator","SuperClass","constructor","config","type","INSURANCE_2","INSURANCE_3A","BANK_3A","INSURANCE_3B","includes","initBorrowerCalculator","middleware","borrowerMiddleware","middlewareManager","applyToAllMethods","getArrayValues","borrowers","key","mapFunc","sum","forEach","borrower","length","map","i","value","reduce","tot","val","Math","max","round","getBonuses","obj","bonusExists","bonusKeys","Object","keys","filter","getBonusIncome","total","acc","arr","bonusAlgorithm","WEAK_AVERAGE","getConsideredValue","values","history","bonusHistoryToConsider","weighting","bonusConsideration","valuesToConsider","slice","getBorrowerCompletion","loan","getBorrowerFilesProgress","percent","personalInfoPercent","percentages","count","fileArray","id","_id","doc","getFunds","isTypeWithArrayValues","sumValues","getFortune","BANK_FORTUNE","getThirdPartyFortune","THIRD_PARTY_FORTUNE","getExpenses","getInsurance2","getInsurance3A","getBank3A","getInsurance3B","getInsuranceFortune","func","getCashFortune","getMissingBorrowerFields","res","missingIds","formArray","borrowerId","formArray2","getMissingBorrowerDocuments","getOtherFortune","getOtherIncome","getTotalFunds","getRealEstateFortune","getRealEstateValue","getRealEstateDebt","getRealEstateIncome","realEstateIncome","income","realEstateIncomeConsideration","getRealEstateIncomeTotal","realEstateIncomeAlgorithm","POSITIVE_NEGATIVE_SPLIT","shouldUseNetSalary","incomeConsiderationType","NET","getSalary","getNetSalary","getFortuneReturns","fortuneReturnsRatio","getTotalIncome","borrowerIncome","getFormattedExpenses","subtract","getRetirement","argMap","age","gender","index","getYearsToRetirement","getAmortizationDuration","retirement","min","Array","isArray","array","b","personalFormArray","financeFormArray","personalInfoPercentSimple","simpleFormArray","borrowerInfoPercent","borrowerFinancePercent","getBorrowerFormHash","t","getNetFortune","getMortgageNotes","mortgageNotes","notes","getRealEstateExpenses","realEstate","realEstateCost","getRealEstateCost","getRealEstateDeltas","allRealEstate","expenses","amortizationRate","getAmortizationRateBase","borrowRatio","getBorrowRatio","propertyValue","getTheoreticalMonthly","propAndWork","loanValue","sumArray","v","getAllExpenses","deltas","REAL_ESTATE_DELTA_NEGATIVE","delta","REAL_ESTATE_DELTA_POSITIVE","getGroupedExpenses","THEORETICAL_REAL_ESTATE","flattenedExpenses","concat","x","description","shouldSubtractExpenseFromIncome","expenseType","expensesSubtractFromIncome","groupRealEstateDeltas","groupedExpenses","toSubtractFromIncome","negativeDeltas","positiveDeltas","getGroupedExpensesBySide","expensesBySide","expenseTypeIsDelta","subtractExpenseTypeFromIncome","formatRealEstateExpenses","add","indexOf","getCommentsForExpenseType","comments","expensesOfType","comment","getCommentsForOtherIncomeType","otherIncome","otherIncomeOfType","canCalculateSolvency"],"mappings":"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","sourcesContent":["// @flow\nimport { OWN_FUNDS_TYPES } from 'imports/core/api/constants';\nimport { getBorrowerDocuments } from 'imports/core/api/files/documents';\nimport {\n  filesPercent,\n  getMissingDocumentIds,\n} from '../../api/files/fileHelpers';\nimport {\n  getBorrowerInfoArray,\n  getBorrowerFinanceArray,\n  getBorrowerSimpleArray,\n} from '../../arrays/BorrowerFormArray';\nimport { arrayify, getPercent } from '../general';\nimport {\n  getCountedArray,\n  getMissingFieldIds,\n  getFormValuesHashMultiple,\n} from '../formArrayHelpers';\nimport MiddlewareManager from '../MiddlewareManager';\nimport { INCOME_CONSIDERATION_TYPES, EXPENSE_TYPES } from '../../api/constants';\nimport { borrowerExtractorMiddleware } from './middleware';\nimport {\n  BONUS_ALGORITHMS,\n  REAL_ESTATE_INCOME_ALGORITHMS,\n} from '../../config/financeConstants';\n\nexport const withBorrowerCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    constructor(config) {\n      super(config);\n      this.initBorrowerCalculator(config);\n    }\n\n    initBorrowerCalculator(config) {\n      const middleware = (config && config.borrowerMiddleware) || borrowerExtractorMiddleware;\n      const middlewareManager = new MiddlewareManager(this);\n      middlewareManager.applyToAllMethods([middleware]);\n    }\n\n    getArrayValues({ borrowers, key, mapFunc }) {\n      let sum = 0;\n\n      arrayify(borrowers).forEach((borrower) => {\n        if (!borrower[key]) {\n          return 0;\n        }\n        sum += [\n          ...(borrower[key] && borrower[key].length > 0\n            ? borrower[key].map(mapFunc || (i => i.value))\n            : []),\n        ].reduce((tot, val) => (val > 0 && tot + val) || tot, 0);\n      });\n\n      return Math.max(0, Math.round(sum));\n    }\n\n    getBonuses({ borrowers }) {\n      return arrayify(borrowers).reduce((obj, borrower) => {\n        if (!borrower.bonusExists) {\n          return obj;\n        }\n\n        const bonusKeys = Object.keys(borrower).filter(key =>\n          key.includes('bonus')\n            && key !== 'bonusExists'\n            && borrower[key] >= 0\n            && borrower[key] !== null);\n\n        bonusKeys.forEach((key) => {\n          const value = borrower[key];\n\n          if (obj[key]) {\n            obj = { ...obj, [key]: obj[key] + value };\n          } else {\n            obj = { ...obj, [key]: value };\n          }\n        });\n\n        return obj;\n      }, {});\n    }\n\n    getBonusIncome({ borrowers }) {\n      const bonusKeys = [\n        'bonus2015',\n        'bonus2016',\n        'bonus2017',\n        'bonus2018',\n        'bonus2019',\n      ];\n      const total = arrayify(borrowers).reduce((acc, borrower) => {\n        if (!borrower.bonusExists) {\n          return acc + 0;\n        }\n\n        const arr = bonusKeys\n          .map(key => borrower[key])\n          .filter(val =>\n            (this.bonusAlgorithm === BONUS_ALGORITHMS.WEAK_AVERAGE\n              ? val > 0\n              : true));\n\n        return (\n          acc\n          + this.getConsideredValue({\n            values: arr,\n            history: this.bonusHistoryToConsider,\n            weighting: this.bonusConsideration,\n          })\n        );\n      }, 0);\n      return Math.max(0, Math.round(total));\n    }\n\n    getConsideredValue({ values, history, weighting }) {\n      const valuesToConsider = values.slice(Math.max(0, values.length - history));\n      const sum = valuesToConsider.reduce((tot, val = 0) => tot + val, 0);\n      return (weighting * sum) / valuesToConsider.length || 0;\n    }\n\n    getBorrowerCompletion({ loan, borrowers }) {\n      return (\n        (this.getBorrowerFilesProgress({ loan, borrowers }).percent\n          + this.personalInfoPercent({ borrowers }))\n        / 2\n      );\n    }\n\n    getBorrowerFilesProgress({ loan, borrowers }) {\n      const percentages = arrayify(borrowers).reduce(\n        (total, borrower) => {\n          const { percent, count } = filesPercent({\n            fileArray: getBorrowerDocuments({ loan, id: borrower._id }, this),\n            doc: borrower,\n          });\n          return {\n            percent: total.percent + percent * count,\n            count: total.count + count,\n          };\n        },\n        { percent: 0, count: 0 },\n      );\n\n      return {\n        ...percentages,\n        percent:\n          percentages.count === 0 ? 1 : percentages.percent / percentages.count,\n      };\n    }\n\n    isTypeWithArrayValues = type =>\n      [\n        OWN_FUNDS_TYPES.INSURANCE_2,\n        OWN_FUNDS_TYPES.INSURANCE_3A,\n        OWN_FUNDS_TYPES.BANK_3A,\n        OWN_FUNDS_TYPES.INSURANCE_3B,\n      ].includes(type);\n\n    getFunds({ borrowers, type }) {\n      if (this.isTypeWithArrayValues(type)) {\n        return this.getArrayValues({ borrowers, key: type });\n      }\n\n      return this.sumValues({ borrowers, keys: type });\n    }\n\n    getFortune({ borrowers }) {\n      return this.sumValues({ borrowers, keys: OWN_FUNDS_TYPES.BANK_FORTUNE });\n    }\n\n    getThirdPartyFortune({ borrowers }) {\n      const val = this.sumValues({\n        borrowers,\n        keys: OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n      });\n      return val;\n    }\n\n    getExpenses({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: 'expenses' });\n    }\n\n    getInsurance2({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.INSURANCE_2,\n      });\n    }\n\n    getInsurance3A({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.INSURANCE_3A,\n      });\n    }\n\n    getBank3A({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: OWN_FUNDS_TYPES.BANK_3A });\n    }\n\n    getInsurance3B({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.INSURANCE_3B,\n      });\n    }\n\n    getInsuranceFortune({ borrowers }) {\n      return [\n        this.getInsurance2,\n        this.getInsurance3A,\n        this.getInsurance3B,\n        this.getBank3A,\n      ].reduce((sum, func) => sum + func({ borrowers }), 0);\n    }\n\n    getCashFortune({ borrowers }) {\n      return [\n        this.getFortune,\n        this.getThirdPartyFortune,\n        this.getInsurance3A,\n        this.getInsurance3B,\n        this.getBank3A,\n      ].reduce((sum, func) => sum + func({ borrowers }), 0);\n    }\n\n    getMissingBorrowerFields({ borrowers }) {\n      const res = arrayify(borrowers).reduce((missingIds, borrower) => {\n        const formArray = getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: borrower._id,\n        });\n        const formArray2 = getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: borrower._id,\n        });\n\n        return [\n          ...missingIds,\n          ...getMissingFieldIds(formArray, borrower),\n          ...getMissingFieldIds(formArray2, borrower),\n        ];\n      }, []);\n\n      return res;\n    }\n\n    getMissingBorrowerDocuments({ loan, borrowers }) {\n      return arrayify(borrowers).reduce(\n        (missingIds, borrower) => [\n          ...missingIds,\n          ...getMissingDocumentIds({\n            doc: borrower,\n            fileArray: getBorrowerDocuments({ loan, id: borrower._id }, this),\n          }),\n        ],\n        [],\n      );\n    }\n\n    getOtherFortune({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: 'otherFortune' });\n    }\n\n    getOtherIncome({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: 'otherIncome' });\n    }\n\n    getTotalFunds({ borrowers }) {\n      return (\n        this.getFortune({ borrowers })\n        + this.getThirdPartyFortune({ borrowers })\n        + this.getInsuranceFortune({ borrowers })\n      );\n    }\n\n    getRealEstateFortune({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: 'realEstate',\n        mapFunc: ({ value = 0, loan = 0 }) => value - loan,\n      });\n    }\n\n    getRealEstateValue({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: 'realEstate' });\n    }\n\n    getRealEstateDebt({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: 'realEstate',\n        mapFunc: ({ loan = 0 }) => loan,\n      });\n    }\n\n    getRealEstateIncome({ borrowers }) {\n      const realEstateIncome = this.getArrayValues({\n        borrowers,\n        key: 'realEstate',\n        mapFunc: ({ income = 0 }) => income,\n      }) * this.realEstateIncomeConsideration;\n\n      return realEstateIncome;\n    }\n\n    getRealEstateIncomeTotal({ borrowers }) {\n      if (\n        this.realEstateIncomeAlgorithm\n        === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT\n      ) {\n        return 0;\n      }\n\n      return this.getRealEstateIncome({ borrowers });\n    }\n\n    shouldUseNetSalary() {\n      return this.incomeConsiderationType === INCOME_CONSIDERATION_TYPES.NET;\n    }\n\n    getSalary({ borrowers }) {\n      if (this.shouldUseNetSalary()) {\n        return this.getNetSalary({ borrowers });\n      }\n      return this.sumValues({ borrowers, keys: 'salary' });\n    }\n\n    getNetSalary({ borrowers }) {\n      return this.sumValues({ borrowers, keys: 'netSalary' });\n    }\n\n    getFortuneReturns({ borrowers }) {\n      if (this.fortuneReturnsRatio) {\n        return this.fortuneReturnsRatio * this.getFortune({ borrowers });\n      }\n\n      return 0;\n    }\n\n    getTotalIncome({ borrowers }) {\n      let sum = arrayify(borrowers).reduce((total, borrower) => {\n        let borrowerIncome = 0;\n        borrowerIncome += this.getSalary({ borrowers: borrower }) || 0;\n        borrowerIncome += this.getBonusIncome({ borrowers: borrower }) || 0;\n        borrowerIncome += this.getOtherIncome({ borrowers: borrower }) || 0;\n        borrowerIncome += this.getFortuneReturns({ borrowers: borrower }) || 0;\n        borrowerIncome\n          += this.getRealEstateIncomeTotal({ borrowers: borrower }) || 0;\n        return total + borrowerIncome;\n      }, 0);\n\n      sum -= this.getFormattedExpenses({ borrowers }).subtract || 0;\n\n      return sum;\n    }\n\n    getRetirement({ borrowers }) {\n      const argMap = borrowers.reduce(\n        (obj, { age, gender }, index) => ({\n          ...obj,\n          [`${`age${index + 1}`}`]: age,\n          [`${`gender${index + 1}`}`]: gender,\n        }),\n        {},\n      );\n      return this.getYearsToRetirement(argMap);\n    }\n\n    getAmortizationDuration({ borrowers }) {\n      const retirement = this.getRetirement({ borrowers });\n      return Math.min(15, retirement);\n    }\n\n    // personalInfoPercent - Determines the completion rate of the borrower's\n    // personal information forms\n    personalInfoPercent({ borrowers }) {\n      if (!borrowers || (Array.isArray(borrowers) && !borrowers.length)) {\n        return 0;\n      }\n\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const personalFormArray = getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n        });\n        const financeFormArray = getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n        });\n        return [\n          ...arr,\n          ...getCountedArray(personalFormArray, b),\n          ...getCountedArray(financeFormArray, b),\n        ];\n      }, []);\n\n      return getPercent(array);\n    }\n\n    personalInfoPercentSimple({ borrowers, loan }) {\n      if ((!borrowers || !borrowers.length) && !loan.borrowers.length) {\n        return 0;\n      }\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const simpleFormArray = getBorrowerSimpleArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n          loan,\n        });\n        return [...arr, ...getCountedArray(simpleFormArray, b)];\n      }, []);\n\n      return getPercent(array);\n    }\n\n    borrowerInfoPercent({ borrowers }) {\n      if (!borrowers || !borrowers.length) {\n        return 0;\n      }\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const personalFormArray = getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n        });\n        return [...arr, ...getCountedArray(personalFormArray, b)];\n      }, []);\n\n      return getPercent(array);\n    }\n\n    borrowerFinancePercent({ borrowers }) {\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const financeFormArray = getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n        });\n        return [...arr, ...getCountedArray(financeFormArray, b)];\n      }, []);\n\n      return getPercent(array);\n    }\n\n    getBorrowerFormHash({ borrowers }) {\n      return getFormValuesHashMultiple(arrayify(borrowers).reduce(\n        (arr, borrower) => [\n          ...arr,\n          {\n            formArray: getBorrowerFinanceArray({\n              borrowers: arrayify(borrowers),\n              borrowerId: borrower._id,\n            }),\n            doc: borrower,\n          },\n          {\n            formArray: getBorrowerInfoArray({\n              borrowers: arrayify(borrowers),\n              borrowerId: borrower._id,\n            }),\n            doc: borrower,\n          },\n        ],\n        [],\n      ));\n    }\n\n    sumValues({ borrowers, keys }) {\n      return arrayify(keys).reduce(\n        (total, key) =>\n          total + arrayify(borrowers).reduce((t, b) => t + (b[key] || 0), 0),\n        0,\n      );\n    }\n\n    getNetFortune({ borrowers }) {\n      return (\n        this.getTotalFunds({ borrowers })\n        + this.getRealEstateFortune({ borrowers })\n        + this.getOtherFortune({ borrowers })\n      );\n    }\n\n    getMortgageNotes({ borrowers }) {\n      return borrowers.reduce(\n        (arr, { mortgageNotes: notes = [] }) => [...arr, ...notes],\n        [],\n      );\n    }\n\n    getRealEstateExpenses({ borrowers }) {\n      const realEstate = arrayify(borrowers).reduce(\n        (arr, borrower) => [...arr, ...(borrower.realEstate || [])],\n        [],\n      );\n      const realEstateCost = realEstate.reduce(\n        (tot, obj) => tot + this.getRealEstateCost(obj),\n        0,\n      );\n\n      return realEstateCost;\n    }\n\n    getRealEstateDeltas({ borrowers }) {\n      const allRealEstate = arrayify(borrowers)\n        .map(({ realEstate }) => realEstate)\n        .reduce((arr, realEstate) => [...arr, ...realEstate], []);\n\n      return allRealEstate.map((realEstate) => {\n        const { income } = realEstate;\n        const expenses = this.getRealEstateCost(realEstate) * 12;\n\n        return (\n          Math.round(income * this.realEstateIncomeConsideration) - expenses\n        );\n      });\n    }\n\n    getRealEstateCost({ loan, value }) {\n      const amortizationRate = this.getAmortizationRateBase({\n        borrowRatio: super.getBorrowRatio({ loan, propertyValue: value }),\n      });\n\n      return super.getTheoreticalMonthly({\n        propAndWork: value,\n        loanValue: loan,\n        amortizationRate,\n      }).total;\n    }\n\n    sumArray(arr) {\n      return arr.reduce((tot, v = 0) => tot + v, 0);\n    }\n\n    // Returns an object with all the types of expenses, combined between\n    // borrowers:\n    // {\n    //  LEASING: 23000,\n    //  WELFARE: 4000,\n    //  THEORETICAL_REAL_ESTATE: 30000,\n    //  etc\n    // }\n    getAllExpenses({ borrowers }) {\n      if (\n        this.realEstateIncomeAlgorithm\n        === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT\n      ) {\n        const deltas = this.getRealEstateDeltas({\n          borrowers,\n        });\n        return {\n          // Negative deltas should be made positive so they can be added to expenses\n          [EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE]: -this.sumArray(deltas.filter(delta => delta < 0)),\n          // Positive deltas should be made negative so they can be subtracted from income,\n          // and therefore increase income\n          [EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE]: -this.sumArray(deltas.filter(delta => delta > 0)),\n          ...this.getGroupedExpenses({ borrowers }),\n        };\n      }\n\n      return {\n        [EXPENSE_TYPES.THEORETICAL_REAL_ESTATE]:\n          this.getRealEstateExpenses({ borrowers }) * 12, // All expenses are annualized\n        ...this.getGroupedExpenses({ borrowers }),\n      };\n    }\n\n    // Same as getAllExpenses, but without real estate expenses\n    getGroupedExpenses({ borrowers }) {\n      const flattenedExpenses = []\n        .concat([], ...arrayify(borrowers).map(({ expenses }) => expenses))\n        .filter(x => x);\n      return flattenedExpenses.reduce(\n        (obj, { value, description }) => ({\n          ...obj,\n          [description]: (obj[description] || 0) + value,\n        }),\n        {},\n      );\n    }\n\n    shouldSubtractExpenseFromIncome(expenseType) {\n      return this.expensesSubtractFromIncome.includes(expenseType);\n    }\n\n    groupRealEstateDeltas({ groupedExpenses, expenses, toSubtractFromIncome }) {\n      const negativeDeltas = expenses[EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE];\n      const positiveDeltas = expenses[EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE];\n\n      if (toSubtractFromIncome) {\n        // If we want to get expenses to subtract from income, add the\n        // positiveDeltas negatively, so they are in fact added to income\n        return {\n          ...groupedExpenses,\n          [EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE]: positiveDeltas,\n        };\n      }\n\n      return {\n        ...groupedExpenses,\n        [EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE]: negativeDeltas,\n      };\n    }\n\n    // Returns an object with all expenses to subtract from income\n    // or all expenses to add to expenses, depending on the param `toSubtractFromIncome`¨\n    // {\n    //  LEASING: 23000,\n    // }\n    getGroupedExpensesBySide({ borrowers, toSubtractFromIncome = true }) {\n      const expenses = this.getAllExpenses({ borrowers });\n\n      const expensesBySide = Object.keys(expenses)\n        .filter(expenseType => !this.expenseTypeIsDelta(expenseType))\n        .filter((expenseType) => {\n          const subtractExpenseTypeFromIncome = this.expensesSubtractFromIncome.includes(expenseType);\n          return toSubtractFromIncome\n            ? subtractExpenseTypeFromIncome\n            : !subtractExpenseTypeFromIncome;\n        });\n\n      const groupedExpenses = expensesBySide.reduce(\n        (obj, expenseType) => ({\n          ...obj,\n          [expenseType]: expenses[expenseType],\n        }),\n        {},\n      );\n\n      if (\n        this.realEstateIncomeAlgorithm\n        === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT\n      ) {\n        return this.groupRealEstateDeltas({\n          groupedExpenses,\n          expenses,\n          toSubtractFromIncome,\n        });\n      }\n\n      return groupedExpenses;\n    }\n\n    expenseTypeIsDelta(expenseType) {\n      return [\n        EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE,\n        EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE,\n      ].includes(expenseType);\n    }\n\n    formatRealEstateExpenses({ obj, expenseType, value }) {\n      if (expenseType === EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE) {\n        return { ...obj, add: obj.add + value };\n      }\n\n      return { ...obj, subtract: obj.subtract + value };\n    }\n\n    // Returns an object with 2 keys, `subtract` and `add` that contain the sum\n    // of all expenses to \"subtract from income\" and \"add to expenses\", respectively\n    getFormattedExpenses({ borrowers }) {\n      const expenses = this.getAllExpenses({ borrowers });\n\n      return Object.keys(expenses).reduce(\n        (obj, expenseType) => {\n          const value = expenses[expenseType];\n          if (this.expenseTypeIsDelta(expenseType)) {\n            return this.formatRealEstateExpenses({ obj, expenseType, value });\n          }\n\n          if (this.expensesSubtractFromIncome.indexOf(expenseType) >= 0) {\n            return { ...obj, subtract: obj.subtract + value };\n          }\n\n          return { ...obj, add: obj.add + value };\n        },\n        { subtract: 0, add: 0 },\n      );\n    }\n\n    getCommentsForExpenseType({ borrowers, type }) {\n      return arrayify(borrowers).reduce((comments, { expenses = [] }) => {\n        const expensesOfType = expenses.filter(({ description }) => description === type);\n        return [\n          ...comments,\n          ...expensesOfType.map(({ comment }) => comment),\n        ].filter(x => x);\n      }, []);\n    }\n\n    getCommentsForOtherIncomeType({ borrowers, type }) {\n      return arrayify(borrowers).reduce((comments, { otherIncome = [] }) => {\n        const otherIncomeOfType = otherIncome.filter(({ description }) => description === type);\n        return [\n          ...comments,\n          ...otherIncomeOfType.map(({ comment }) => comment),\n        ].filter(x => x);\n      }, []);\n    }\n\n    canCalculateSolvency({ borrowers }) {\n      if (!borrowers.length) {\n        return false;\n      }\n\n      if (this.getCashFortune({ borrowers }) === 0) {\n        return false;\n      }\n\n      if (this.getSalary({ borrowers }) === 0) {\n        return false;\n      }\n\n      return true;\n    }\n  };\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/BorrowerCalculator.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/Calculator/BorrowerCalculator.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread11 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nmodule.export({\n  withBorrowerCalculator: function () {\n    return withBorrowerCalculator;\n  }\n});\nvar OWN_FUNDS_TYPES;\nmodule.link(\"../../api/constants\", {\n  OWN_FUNDS_TYPES: function (v) {\n    OWN_FUNDS_TYPES = v;\n  }\n}, 0);\nvar getBorrowerDocuments;\nmodule.link(\"../../api/files/documents\", {\n  getBorrowerDocuments: function (v) {\n    getBorrowerDocuments = v;\n  }\n}, 1);\nvar filesPercent, getMissingDocumentIds;\nmodule.link(\"../../api/files/fileHelpers\", {\n  filesPercent: function (v) {\n    filesPercent = v;\n  },\n  getMissingDocumentIds: function (v) {\n    getMissingDocumentIds = v;\n  }\n}, 2);\nvar getBorrowerInfoArray, getBorrowerFinanceArray, getBorrowerSimpleArray;\nmodule.link(\"../../arrays/BorrowerFormArray\", {\n  getBorrowerInfoArray: function (v) {\n    getBorrowerInfoArray = v;\n  },\n  getBorrowerFinanceArray: function (v) {\n    getBorrowerFinanceArray = v;\n  },\n  getBorrowerSimpleArray: function (v) {\n    getBorrowerSimpleArray = v;\n  }\n}, 3);\nvar arrayify, getPercent;\nmodule.link(\"../general\", {\n  arrayify: function (v) {\n    arrayify = v;\n  },\n  getPercent: function (v) {\n    getPercent = v;\n  }\n}, 4);\nvar getCountedArray, getMissingFieldIds, getFormValuesHashMultiple;\nmodule.link(\"../formArrayHelpers\", {\n  getCountedArray: function (v) {\n    getCountedArray = v;\n  },\n  getMissingFieldIds: function (v) {\n    getMissingFieldIds = v;\n  },\n  getFormValuesHashMultiple: function (v) {\n    getFormValuesHashMultiple = v;\n  }\n}, 5);\nvar MiddlewareManager;\nmodule.link(\"../MiddlewareManager\", {\n  \"default\": function (v) {\n    MiddlewareManager = v;\n  }\n}, 6);\nvar INCOME_CONSIDERATION_TYPES, EXPENSE_TYPES;\nmodule.link(\"../../api/constants\", {\n  INCOME_CONSIDERATION_TYPES: function (v) {\n    INCOME_CONSIDERATION_TYPES = v;\n  },\n  EXPENSE_TYPES: function (v) {\n    EXPENSE_TYPES = v;\n  }\n}, 7);\nvar borrowerExtractorMiddleware;\nmodule.link(\"./middleware\", {\n  borrowerExtractorMiddleware: function (v) {\n    borrowerExtractorMiddleware = v;\n  }\n}, 8);\nvar BONUS_ALGORITHMS, REAL_ESTATE_INCOME_ALGORITHMS;\nmodule.link(\"../../config/financeConstants\", {\n  BONUS_ALGORITHMS: function (v) {\n    BONUS_ALGORITHMS = v;\n  },\n  REAL_ESTATE_INCOME_ALGORITHMS: function (v) {\n    REAL_ESTATE_INCOME_ALGORITHMS = v;\n  }\n}, 9);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar withBorrowerCalculator = function () {\n  var SuperClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] :\n  /*#__PURE__*/\n  function () {\n    function _class() {}\n\n    return _class;\n  }();\n\n  var _temp;\n\n  return _temp =\n  /*#__PURE__*/\n  function (_SuperClass) {\n    (0, _inheritsLoose2.default)(_temp, _SuperClass);\n\n    function _temp(config) {\n      var _this;\n\n      _this = _SuperClass.call(this, config) || this;\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"isTypeWithArrayValues\", function (type) {\n        return [OWN_FUNDS_TYPES.INSURANCE_2, OWN_FUNDS_TYPES.INSURANCE_3A, OWN_FUNDS_TYPES.BANK_3A, OWN_FUNDS_TYPES.INSURANCE_3B].includes(type);\n      });\n\n      _this.initBorrowerCalculator(config);\n\n      return _this;\n    }\n\n    var _proto = _temp.prototype;\n\n    _proto.initBorrowerCalculator = function () {\n      function initBorrowerCalculator(config) {\n        var middleware = config && config.borrowerMiddleware || borrowerExtractorMiddleware;\n        var middlewareManager = new MiddlewareManager(this);\n        middlewareManager.applyToAllMethods([middleware]);\n      }\n\n      return initBorrowerCalculator;\n    }();\n\n    _proto.getArrayValues = function () {\n      function getArrayValues(_ref) {\n        var borrowers = _ref.borrowers,\n            key = _ref.key,\n            mapFunc = _ref.mapFunc;\n        var sum = 0;\n        arrayify(borrowers).forEach(function (borrower) {\n          if (!borrower[key]) {\n            return 0;\n          }\n\n          sum += (0, _toConsumableArray2.default)(borrower[key] && borrower[key].length > 0 ? borrower[key].map(mapFunc || function (i) {\n            return i.value;\n          }) : []).reduce(function (tot, val) {\n            return val > 0 && tot + val || tot;\n          }, 0);\n        });\n        return Math.max(0, Math.round(sum));\n      }\n\n      return getArrayValues;\n    }();\n\n    _proto.getBonuses = function () {\n      function getBonuses(_ref2) {\n        var borrowers = _ref2.borrowers;\n        return arrayify(borrowers).reduce(function (obj, borrower) {\n          if (!borrower.bonusExists) {\n            return obj;\n          }\n\n          var bonusKeys = Object.keys(borrower).filter(function (key) {\n            return key.includes('bonus') && key !== 'bonusExists' && borrower[key] >= 0 && borrower[key] !== null;\n          });\n          bonusKeys.forEach(function (key) {\n            var value = borrower[key];\n\n            if (obj[key]) {\n              var _objectSpread2;\n\n              obj = (0, _objectSpread11.default)({}, obj, (_objectSpread2 = {}, _objectSpread2[key] = obj[key] + value, _objectSpread2));\n            } else {\n              var _objectSpread3;\n\n              obj = (0, _objectSpread11.default)({}, obj, (_objectSpread3 = {}, _objectSpread3[key] = value, _objectSpread3));\n            }\n          });\n          return obj;\n        }, {});\n      }\n\n      return getBonuses;\n    }();\n\n    _proto.getBonusIncome = function () {\n      function getBonusIncome(_ref3) {\n        var _this2 = this;\n\n        var borrowers = _ref3.borrowers;\n        var bonusKeys = ['bonus2015', 'bonus2016', 'bonus2017', 'bonus2018', 'bonus2019'];\n        var total = arrayify(borrowers).reduce(function (acc, borrower) {\n          if (!borrower.bonusExists) {\n            return acc + 0;\n          }\n\n          var arr = bonusKeys.map(function (key) {\n            return borrower[key];\n          }).filter(function (val) {\n            return _this2.bonusAlgorithm === BONUS_ALGORITHMS.WEAK_AVERAGE ? val > 0 : true;\n          });\n          return acc + _this2.getConsideredValue({\n            values: arr,\n            history: _this2.bonusHistoryToConsider,\n            weighting: _this2.bonusConsideration\n          });\n        }, 0);\n        return Math.max(0, Math.round(total));\n      }\n\n      return getBonusIncome;\n    }();\n\n    _proto.getConsideredValue = function () {\n      function getConsideredValue(_ref4) {\n        var values = _ref4.values,\n            history = _ref4.history,\n            weighting = _ref4.weighting;\n        var valuesToConsider = values.slice(Math.max(0, values.length - history));\n        var sum = valuesToConsider.reduce(function (tot) {\n          var val = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          return tot + val;\n        }, 0);\n        return weighting * sum / valuesToConsider.length || 0;\n      }\n\n      return getConsideredValue;\n    }();\n\n    _proto.getBorrowerCompletion = function () {\n      function getBorrowerCompletion(_ref5) {\n        var loan = _ref5.loan,\n            borrowers = _ref5.borrowers;\n        return (this.getBorrowerFilesProgress({\n          loan: loan,\n          borrowers: borrowers\n        }).percent + this.personalInfoPercent({\n          borrowers: borrowers\n        })) / 2;\n      }\n\n      return getBorrowerCompletion;\n    }();\n\n    _proto.getBorrowerFilesProgress = function () {\n      function getBorrowerFilesProgress(_ref6) {\n        var _this3 = this;\n\n        var loan = _ref6.loan,\n            borrowers = _ref6.borrowers;\n        var percentages = arrayify(borrowers).reduce(function (total, borrower) {\n          var _filesPercent = filesPercent({\n            fileArray: getBorrowerDocuments({\n              loan: loan,\n              id: borrower._id\n            }, _this3),\n            doc: borrower\n          }),\n              percent = _filesPercent.percent,\n              count = _filesPercent.count;\n\n          return {\n            percent: total.percent + percent * count,\n            count: total.count + count\n          };\n        }, {\n          percent: 0,\n          count: 0\n        });\n        return (0, _objectSpread11.default)({}, percentages, {\n          percent: percentages.count === 0 ? 1 : percentages.percent / percentages.count\n        });\n      }\n\n      return getBorrowerFilesProgress;\n    }();\n\n    _proto.getFunds = function () {\n      function getFunds(_ref7) {\n        var borrowers = _ref7.borrowers,\n            type = _ref7.type;\n\n        if (this.isTypeWithArrayValues(type)) {\n          return this.getArrayValues({\n            borrowers: borrowers,\n            key: type\n          });\n        }\n\n        return this.sumValues({\n          borrowers: borrowers,\n          keys: type\n        });\n      }\n\n      return getFunds;\n    }();\n\n    _proto.getFortune = function () {\n      function getFortune(_ref8) {\n        var borrowers = _ref8.borrowers;\n        return this.sumValues({\n          borrowers: borrowers,\n          keys: OWN_FUNDS_TYPES.BANK_FORTUNE\n        });\n      }\n\n      return getFortune;\n    }();\n\n    _proto.getThirdPartyFortune = function () {\n      function getThirdPartyFortune(_ref9) {\n        var borrowers = _ref9.borrowers;\n        var val = this.sumValues({\n          borrowers: borrowers,\n          keys: OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE\n        });\n        return val;\n      }\n\n      return getThirdPartyFortune;\n    }();\n\n    _proto.getExpenses = function () {\n      function getExpenses(_ref10) {\n        var borrowers = _ref10.borrowers;\n        return this.getArrayValues({\n          borrowers: borrowers,\n          key: 'expenses'\n        });\n      }\n\n      return getExpenses;\n    }();\n\n    _proto.getInsurance2 = function () {\n      function getInsurance2(_ref11) {\n        var borrowers = _ref11.borrowers;\n        return this.getArrayValues({\n          borrowers: borrowers,\n          key: OWN_FUNDS_TYPES.INSURANCE_2\n        });\n      }\n\n      return getInsurance2;\n    }();\n\n    _proto.getInsurance3A = function () {\n      function getInsurance3A(_ref12) {\n        var borrowers = _ref12.borrowers;\n        return this.getArrayValues({\n          borrowers: borrowers,\n          key: OWN_FUNDS_TYPES.INSURANCE_3A\n        });\n      }\n\n      return getInsurance3A;\n    }();\n\n    _proto.getBank3A = function () {\n      function getBank3A(_ref13) {\n        var borrowers = _ref13.borrowers;\n        return this.getArrayValues({\n          borrowers: borrowers,\n          key: OWN_FUNDS_TYPES.BANK_3A\n        });\n      }\n\n      return getBank3A;\n    }();\n\n    _proto.getInsurance3B = function () {\n      function getInsurance3B(_ref14) {\n        var borrowers = _ref14.borrowers;\n        return this.getArrayValues({\n          borrowers: borrowers,\n          key: OWN_FUNDS_TYPES.INSURANCE_3B\n        });\n      }\n\n      return getInsurance3B;\n    }();\n\n    _proto.getInsuranceFortune = function () {\n      function getInsuranceFortune(_ref15) {\n        var borrowers = _ref15.borrowers;\n        return [this.getInsurance2, this.getInsurance3A, this.getInsurance3B, this.getBank3A].reduce(function (sum, func) {\n          return sum + func({\n            borrowers: borrowers\n          });\n        }, 0);\n      }\n\n      return getInsuranceFortune;\n    }();\n\n    _proto.getCashFortune = function () {\n      function getCashFortune(_ref16) {\n        var borrowers = _ref16.borrowers;\n        return [this.getFortune, this.getThirdPartyFortune, this.getInsurance3A, this.getInsurance3B, this.getBank3A].reduce(function (sum, func) {\n          return sum + func({\n            borrowers: borrowers\n          });\n        }, 0);\n      }\n\n      return getCashFortune;\n    }();\n\n    _proto.getMissingBorrowerFields = function () {\n      function getMissingBorrowerFields(_ref17) {\n        var borrowers = _ref17.borrowers;\n        var res = arrayify(borrowers).reduce(function (missingIds, borrower) {\n          var formArray = getBorrowerInfoArray({\n            borrowers: arrayify(borrowers),\n            borrowerId: borrower._id\n          });\n          var formArray2 = getBorrowerFinanceArray({\n            borrowers: arrayify(borrowers),\n            borrowerId: borrower._id\n          });\n          return [].concat((0, _toConsumableArray2.default)(missingIds), (0, _toConsumableArray2.default)(getMissingFieldIds(formArray, borrower)), (0, _toConsumableArray2.default)(getMissingFieldIds(formArray2, borrower)));\n        }, []);\n        return res;\n      }\n\n      return getMissingBorrowerFields;\n    }();\n\n    _proto.getMissingBorrowerDocuments = function () {\n      function getMissingBorrowerDocuments(_ref18) {\n        var _this4 = this;\n\n        var loan = _ref18.loan,\n            borrowers = _ref18.borrowers;\n        return arrayify(borrowers).reduce(function (missingIds, borrower) {\n          return [].concat((0, _toConsumableArray2.default)(missingIds), (0, _toConsumableArray2.default)(getMissingDocumentIds({\n            doc: borrower,\n            fileArray: getBorrowerDocuments({\n              loan: loan,\n              id: borrower._id\n            }, _this4)\n          })));\n        }, []);\n      }\n\n      return getMissingBorrowerDocuments;\n    }();\n\n    _proto.getOtherFortune = function () {\n      function getOtherFortune(_ref19) {\n        var borrowers = _ref19.borrowers;\n        return this.getArrayValues({\n          borrowers: borrowers,\n          key: 'otherFortune'\n        });\n      }\n\n      return getOtherFortune;\n    }();\n\n    _proto.getOtherIncome = function () {\n      function getOtherIncome(_ref20) {\n        var borrowers = _ref20.borrowers;\n        return this.getArrayValues({\n          borrowers: borrowers,\n          key: 'otherIncome'\n        });\n      }\n\n      return getOtherIncome;\n    }();\n\n    _proto.getTotalFunds = function () {\n      function getTotalFunds(_ref21) {\n        var borrowers = _ref21.borrowers;\n        return this.getFortune({\n          borrowers: borrowers\n        }) + this.getThirdPartyFortune({\n          borrowers: borrowers\n        }) + this.getInsuranceFortune({\n          borrowers: borrowers\n        });\n      }\n\n      return getTotalFunds;\n    }();\n\n    _proto.getRealEstateFortune = function () {\n      function getRealEstateFortune(_ref22) {\n        var borrowers = _ref22.borrowers;\n        return this.getArrayValues({\n          borrowers: borrowers,\n          key: 'realEstate',\n          mapFunc: function (_ref23) {\n            var _ref23$value = _ref23.value,\n                value = _ref23$value === void 0 ? 0 : _ref23$value,\n                _ref23$loan = _ref23.loan,\n                loan = _ref23$loan === void 0 ? 0 : _ref23$loan;\n            return value - loan;\n          }\n        });\n      }\n\n      return getRealEstateFortune;\n    }();\n\n    _proto.getRealEstateValue = function () {\n      function getRealEstateValue(_ref24) {\n        var borrowers = _ref24.borrowers;\n        return this.getArrayValues({\n          borrowers: borrowers,\n          key: 'realEstate'\n        });\n      }\n\n      return getRealEstateValue;\n    }();\n\n    _proto.getRealEstateDebt = function () {\n      function getRealEstateDebt(_ref25) {\n        var borrowers = _ref25.borrowers;\n        return this.getArrayValues({\n          borrowers: borrowers,\n          key: 'realEstate',\n          mapFunc: function (_ref26) {\n            var _ref26$loan = _ref26.loan,\n                loan = _ref26$loan === void 0 ? 0 : _ref26$loan;\n            return loan;\n          }\n        });\n      }\n\n      return getRealEstateDebt;\n    }();\n\n    _proto.getRealEstateIncome = function () {\n      function getRealEstateIncome(_ref27) {\n        var borrowers = _ref27.borrowers;\n        var realEstateIncome = this.getArrayValues({\n          borrowers: borrowers,\n          key: 'realEstate',\n          mapFunc: function (_ref28) {\n            var _ref28$income = _ref28.income,\n                income = _ref28$income === void 0 ? 0 : _ref28$income;\n            return income;\n          }\n        }) * this.realEstateIncomeConsideration;\n        return realEstateIncome;\n      }\n\n      return getRealEstateIncome;\n    }();\n\n    _proto.getRealEstateIncomeTotal = function () {\n      function getRealEstateIncomeTotal(_ref29) {\n        var borrowers = _ref29.borrowers;\n\n        if (this.realEstateIncomeAlgorithm === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT) {\n          return 0;\n        }\n\n        return this.getRealEstateIncome({\n          borrowers: borrowers\n        });\n      }\n\n      return getRealEstateIncomeTotal;\n    }();\n\n    _proto.shouldUseNetSalary = function () {\n      function shouldUseNetSalary() {\n        return this.incomeConsiderationType === INCOME_CONSIDERATION_TYPES.NET;\n      }\n\n      return shouldUseNetSalary;\n    }();\n\n    _proto.getSalary = function () {\n      function getSalary(_ref30) {\n        var borrowers = _ref30.borrowers;\n\n        if (this.shouldUseNetSalary()) {\n          return this.getNetSalary({\n            borrowers: borrowers\n          });\n        }\n\n        return this.sumValues({\n          borrowers: borrowers,\n          keys: 'salary'\n        });\n      }\n\n      return getSalary;\n    }();\n\n    _proto.getNetSalary = function () {\n      function getNetSalary(_ref31) {\n        var borrowers = _ref31.borrowers;\n        return this.sumValues({\n          borrowers: borrowers,\n          keys: 'netSalary'\n        });\n      }\n\n      return getNetSalary;\n    }();\n\n    _proto.getFortuneReturns = function () {\n      function getFortuneReturns(_ref32) {\n        var borrowers = _ref32.borrowers;\n\n        if (this.fortuneReturnsRatio) {\n          return this.fortuneReturnsRatio * this.getFortune({\n            borrowers: borrowers\n          });\n        }\n\n        return 0;\n      }\n\n      return getFortuneReturns;\n    }();\n\n    _proto.getTotalIncome = function () {\n      function getTotalIncome(_ref33) {\n        var _this5 = this;\n\n        var borrowers = _ref33.borrowers;\n        var sum = arrayify(borrowers).reduce(function (total, borrower) {\n          var borrowerIncome = 0;\n          borrowerIncome += _this5.getSalary({\n            borrowers: borrower\n          }) || 0;\n          borrowerIncome += _this5.getBonusIncome({\n            borrowers: borrower\n          }) || 0;\n          borrowerIncome += _this5.getOtherIncome({\n            borrowers: borrower\n          }) || 0;\n          borrowerIncome += _this5.getFortuneReturns({\n            borrowers: borrower\n          }) || 0;\n          borrowerIncome += _this5.getRealEstateIncomeTotal({\n            borrowers: borrower\n          }) || 0;\n          return total + borrowerIncome;\n        }, 0);\n        sum -= this.getFormattedExpenses({\n          borrowers: borrowers\n        }).subtract || 0;\n        return sum;\n      }\n\n      return getTotalIncome;\n    }();\n\n    _proto.getRetirement = function () {\n      function getRetirement(_ref34) {\n        var borrowers = _ref34.borrowers;\n        var argMap = borrowers.reduce(function (obj, _ref35, index) {\n          var _objectSpread4;\n\n          var age = _ref35.age,\n              gender = _ref35.gender;\n          return (0, _objectSpread11.default)({}, obj, (_objectSpread4 = {}, _objectSpread4[\"\" + (\"age\" + (index + 1))] = age, _objectSpread4[\"\" + (\"gender\" + (index + 1))] = gender, _objectSpread4));\n        }, {});\n        return this.getYearsToRetirement(argMap);\n      }\n\n      return getRetirement;\n    }();\n\n    _proto.getAmortizationDuration = function () {\n      function getAmortizationDuration(_ref36) {\n        var borrowers = _ref36.borrowers;\n        var retirement = this.getRetirement({\n          borrowers: borrowers\n        });\n        return Math.min(15, retirement);\n      }\n\n      return getAmortizationDuration;\n    }() // personalInfoPercent - Determines the completion rate of the borrower's\n    // personal information forms\n    ;\n\n    _proto.personalInfoPercent = function () {\n      function personalInfoPercent(_ref37) {\n        var borrowers = _ref37.borrowers;\n\n        if (!borrowers || Array.isArray(borrowers) && !borrowers.length) {\n          return 0;\n        }\n\n        var array = arrayify(borrowers).reduce(function (arr, b) {\n          var personalFormArray = getBorrowerInfoArray({\n            borrowers: arrayify(borrowers),\n            borrowerId: b._id\n          });\n          var financeFormArray = getBorrowerFinanceArray({\n            borrowers: arrayify(borrowers),\n            borrowerId: b._id\n          });\n          return [].concat((0, _toConsumableArray2.default)(arr), (0, _toConsumableArray2.default)(getCountedArray(personalFormArray, b)), (0, _toConsumableArray2.default)(getCountedArray(financeFormArray, b)));\n        }, []);\n        return getPercent(array);\n      }\n\n      return personalInfoPercent;\n    }();\n\n    _proto.personalInfoPercentSimple = function () {\n      function personalInfoPercentSimple(_ref38) {\n        var borrowers = _ref38.borrowers,\n            loan = _ref38.loan;\n\n        if ((!borrowers || !borrowers.length) && !loan.borrowers.length) {\n          return 0;\n        }\n\n        var array = arrayify(borrowers).reduce(function (arr, b) {\n          var simpleFormArray = getBorrowerSimpleArray({\n            borrowers: arrayify(borrowers),\n            borrowerId: b._id,\n            loan: loan\n          });\n          return [].concat((0, _toConsumableArray2.default)(arr), (0, _toConsumableArray2.default)(getCountedArray(simpleFormArray, b)));\n        }, []);\n        return getPercent(array);\n      }\n\n      return personalInfoPercentSimple;\n    }();\n\n    _proto.borrowerInfoPercent = function () {\n      function borrowerInfoPercent(_ref39) {\n        var borrowers = _ref39.borrowers;\n\n        if (!borrowers || !borrowers.length) {\n          return 0;\n        }\n\n        var array = arrayify(borrowers).reduce(function (arr, b) {\n          var personalFormArray = getBorrowerInfoArray({\n            borrowers: arrayify(borrowers),\n            borrowerId: b._id\n          });\n          return [].concat((0, _toConsumableArray2.default)(arr), (0, _toConsumableArray2.default)(getCountedArray(personalFormArray, b)));\n        }, []);\n        return getPercent(array);\n      }\n\n      return borrowerInfoPercent;\n    }();\n\n    _proto.borrowerFinancePercent = function () {\n      function borrowerFinancePercent(_ref40) {\n        var borrowers = _ref40.borrowers;\n        var array = arrayify(borrowers).reduce(function (arr, b) {\n          var financeFormArray = getBorrowerFinanceArray({\n            borrowers: arrayify(borrowers),\n            borrowerId: b._id\n          });\n          return [].concat((0, _toConsumableArray2.default)(arr), (0, _toConsumableArray2.default)(getCountedArray(financeFormArray, b)));\n        }, []);\n        return getPercent(array);\n      }\n\n      return borrowerFinancePercent;\n    }();\n\n    _proto.getBorrowerFormHash = function () {\n      function getBorrowerFormHash(_ref41) {\n        var borrowers = _ref41.borrowers;\n        return getFormValuesHashMultiple(arrayify(borrowers).reduce(function (arr, borrower) {\n          return [].concat((0, _toConsumableArray2.default)(arr), [{\n            formArray: getBorrowerFinanceArray({\n              borrowers: arrayify(borrowers),\n              borrowerId: borrower._id\n            }),\n            doc: borrower\n          }, {\n            formArray: getBorrowerInfoArray({\n              borrowers: arrayify(borrowers),\n              borrowerId: borrower._id\n            }),\n            doc: borrower\n          }]);\n        }, []));\n      }\n\n      return getBorrowerFormHash;\n    }();\n\n    _proto.sumValues = function () {\n      function sumValues(_ref42) {\n        var borrowers = _ref42.borrowers,\n            keys = _ref42.keys;\n        return arrayify(keys).reduce(function (total, key) {\n          return total + arrayify(borrowers).reduce(function (t, b) {\n            return t + (b[key] || 0);\n          }, 0);\n        }, 0);\n      }\n\n      return sumValues;\n    }();\n\n    _proto.getNetFortune = function () {\n      function getNetFortune(_ref43) {\n        var borrowers = _ref43.borrowers;\n        return this.getTotalFunds({\n          borrowers: borrowers\n        }) + this.getRealEstateFortune({\n          borrowers: borrowers\n        }) + this.getOtherFortune({\n          borrowers: borrowers\n        });\n      }\n\n      return getNetFortune;\n    }();\n\n    _proto.getMortgageNotes = function () {\n      function getMortgageNotes(_ref44) {\n        var borrowers = _ref44.borrowers;\n        return borrowers.reduce(function (arr, _ref45) {\n          var _ref45$mortgageNotes = _ref45.mortgageNotes,\n              notes = _ref45$mortgageNotes === void 0 ? [] : _ref45$mortgageNotes;\n          return [].concat((0, _toConsumableArray2.default)(arr), (0, _toConsumableArray2.default)(notes));\n        }, []);\n      }\n\n      return getMortgageNotes;\n    }();\n\n    _proto.getRealEstateExpenses = function () {\n      function getRealEstateExpenses(_ref46) {\n        var _this6 = this;\n\n        var borrowers = _ref46.borrowers;\n        var realEstate = arrayify(borrowers).reduce(function (arr, borrower) {\n          return [].concat((0, _toConsumableArray2.default)(arr), (0, _toConsumableArray2.default)(borrower.realEstate || []));\n        }, []);\n        var realEstateCost = realEstate.reduce(function (tot, obj) {\n          return tot + _this6.getRealEstateCost(obj);\n        }, 0);\n        return realEstateCost;\n      }\n\n      return getRealEstateExpenses;\n    }();\n\n    _proto.getRealEstateDeltas = function () {\n      function getRealEstateDeltas(_ref47) {\n        var _this7 = this;\n\n        var borrowers = _ref47.borrowers;\n        var allRealEstate = arrayify(borrowers).map(function (_ref48) {\n          var realEstate = _ref48.realEstate;\n          return realEstate;\n        }).reduce(function (arr, realEstate) {\n          return [].concat((0, _toConsumableArray2.default)(arr), (0, _toConsumableArray2.default)(realEstate));\n        }, []);\n        return allRealEstate.map(function (realEstate) {\n          var income = realEstate.income;\n          var expenses = _this7.getRealEstateCost(realEstate) * 12;\n          return Math.round(income * _this7.realEstateIncomeConsideration) - expenses;\n        });\n      }\n\n      return getRealEstateDeltas;\n    }();\n\n    _proto.getRealEstateCost = function () {\n      function getRealEstateCost(_ref49) {\n        var loan = _ref49.loan,\n            value = _ref49.value;\n        var amortizationRate = this.getAmortizationRateBase({\n          borrowRatio: _SuperClass.prototype.getBorrowRatio.call(this, {\n            loan: loan,\n            propertyValue: value\n          })\n        });\n        return _SuperClass.prototype.getTheoreticalMonthly.call(this, {\n          propAndWork: value,\n          loanValue: loan,\n          amortizationRate: amortizationRate\n        }).total;\n      }\n\n      return getRealEstateCost;\n    }();\n\n    _proto.sumArray = function () {\n      function sumArray(arr) {\n        return arr.reduce(function (tot) {\n          var v = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          return tot + v;\n        }, 0);\n      }\n\n      return sumArray;\n    }() // Returns an object with all the types of expenses, combined between\n    // borrowers:\n    // {\n    //  LEASING: 23000,\n    //  WELFARE: 4000,\n    //  THEORETICAL_REAL_ESTATE: 30000,\n    //  etc\n    // }\n    ;\n\n    _proto.getAllExpenses = function () {\n      function getAllExpenses(_ref50) {\n        var _objectSpread6;\n\n        var borrowers = _ref50.borrowers;\n\n        if (this.realEstateIncomeAlgorithm === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT) {\n          var _objectSpread5;\n\n          var deltas = this.getRealEstateDeltas({\n            borrowers: borrowers\n          });\n          return (0, _objectSpread11.default)((_objectSpread5 = {}, _objectSpread5[EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE] = -this.sumArray(deltas.filter(function (delta) {\n            return delta < 0;\n          })), _objectSpread5[EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE] = -this.sumArray(deltas.filter(function (delta) {\n            return delta > 0;\n          })), _objectSpread5), this.getGroupedExpenses({\n            borrowers: borrowers\n          }));\n        }\n\n        return (0, _objectSpread11.default)((_objectSpread6 = {}, _objectSpread6[EXPENSE_TYPES.THEORETICAL_REAL_ESTATE] = this.getRealEstateExpenses({\n          borrowers: borrowers\n        }) * 12, _objectSpread6), this.getGroupedExpenses({\n          borrowers: borrowers\n        }));\n      }\n\n      return getAllExpenses;\n    }() // Same as getAllExpenses, but without real estate expenses\n    ;\n\n    _proto.getGroupedExpenses = function () {\n      function getGroupedExpenses(_ref51) {\n        var _ref52;\n\n        var borrowers = _ref51.borrowers;\n\n        var flattenedExpenses = (_ref52 = []).concat.apply(_ref52, [[]].concat((0, _toConsumableArray2.default)(arrayify(borrowers).map(function (_ref53) {\n          var expenses = _ref53.expenses;\n          return expenses;\n        })))).filter(function (x) {\n          return x;\n        });\n\n        return flattenedExpenses.reduce(function (obj, _ref54) {\n          var _objectSpread7;\n\n          var value = _ref54.value,\n              description = _ref54.description;\n          return (0, _objectSpread11.default)({}, obj, (_objectSpread7 = {}, _objectSpread7[description] = (obj[description] || 0) + value, _objectSpread7));\n        }, {});\n      }\n\n      return getGroupedExpenses;\n    }();\n\n    _proto.shouldSubtractExpenseFromIncome = function () {\n      function shouldSubtractExpenseFromIncome(expenseType) {\n        return this.expensesSubtractFromIncome.includes(expenseType);\n      }\n\n      return shouldSubtractExpenseFromIncome;\n    }();\n\n    _proto.groupRealEstateDeltas = function () {\n      function groupRealEstateDeltas(_ref55) {\n        var _objectSpread9;\n\n        var groupedExpenses = _ref55.groupedExpenses,\n            expenses = _ref55.expenses,\n            toSubtractFromIncome = _ref55.toSubtractFromIncome;\n        var negativeDeltas = expenses[EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE];\n        var positiveDeltas = expenses[EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE];\n\n        if (toSubtractFromIncome) {\n          var _objectSpread8;\n\n          // If we want to get expenses to subtract from income, add the\n          // positiveDeltas negatively, so they are in fact added to income\n          return (0, _objectSpread11.default)({}, groupedExpenses, (_objectSpread8 = {}, _objectSpread8[EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE] = positiveDeltas, _objectSpread8));\n        }\n\n        return (0, _objectSpread11.default)({}, groupedExpenses, (_objectSpread9 = {}, _objectSpread9[EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE] = negativeDeltas, _objectSpread9));\n      }\n\n      return groupRealEstateDeltas;\n    }() // Returns an object with all expenses to subtract from income\n    // or all expenses to add to expenses, depending on the param `toSubtractFromIncome`¨\n    // {\n    //  LEASING: 23000,\n    // }\n    ;\n\n    _proto.getGroupedExpensesBySide = function () {\n      function getGroupedExpensesBySide(_ref56) {\n        var _this8 = this;\n\n        var borrowers = _ref56.borrowers,\n            _ref56$toSubtractFrom = _ref56.toSubtractFromIncome,\n            toSubtractFromIncome = _ref56$toSubtractFrom === void 0 ? true : _ref56$toSubtractFrom;\n        var expenses = this.getAllExpenses({\n          borrowers: borrowers\n        });\n        var expensesBySide = Object.keys(expenses).filter(function (expenseType) {\n          return !_this8.expenseTypeIsDelta(expenseType);\n        }).filter(function (expenseType) {\n          var subtractExpenseTypeFromIncome = _this8.expensesSubtractFromIncome.includes(expenseType);\n\n          return toSubtractFromIncome ? subtractExpenseTypeFromIncome : !subtractExpenseTypeFromIncome;\n        });\n        var groupedExpenses = expensesBySide.reduce(function (obj, expenseType) {\n          var _objectSpread10;\n\n          return (0, _objectSpread11.default)({}, obj, (_objectSpread10 = {}, _objectSpread10[expenseType] = expenses[expenseType], _objectSpread10));\n        }, {});\n\n        if (this.realEstateIncomeAlgorithm === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT) {\n          return this.groupRealEstateDeltas({\n            groupedExpenses: groupedExpenses,\n            expenses: expenses,\n            toSubtractFromIncome: toSubtractFromIncome\n          });\n        }\n\n        return groupedExpenses;\n      }\n\n      return getGroupedExpensesBySide;\n    }();\n\n    _proto.expenseTypeIsDelta = function () {\n      function expenseTypeIsDelta(expenseType) {\n        return [EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE, EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE].includes(expenseType);\n      }\n\n      return expenseTypeIsDelta;\n    }();\n\n    _proto.formatRealEstateExpenses = function () {\n      function formatRealEstateExpenses(_ref57) {\n        var obj = _ref57.obj,\n            expenseType = _ref57.expenseType,\n            value = _ref57.value;\n\n        if (expenseType === EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE) {\n          return (0, _objectSpread11.default)({}, obj, {\n            add: obj.add + value\n          });\n        }\n\n        return (0, _objectSpread11.default)({}, obj, {\n          subtract: obj.subtract + value\n        });\n      }\n\n      return formatRealEstateExpenses;\n    }() // Returns an object with 2 keys, `subtract` and `add` that contain the sum\n    // of all expenses to \"subtract from income\" and \"add to expenses\", respectively\n    ;\n\n    _proto.getFormattedExpenses = function () {\n      function getFormattedExpenses(_ref58) {\n        var _this9 = this;\n\n        var borrowers = _ref58.borrowers;\n        var expenses = this.getAllExpenses({\n          borrowers: borrowers\n        });\n        return Object.keys(expenses).reduce(function (obj, expenseType) {\n          var value = expenses[expenseType];\n\n          if (_this9.expenseTypeIsDelta(expenseType)) {\n            return _this9.formatRealEstateExpenses({\n              obj: obj,\n              expenseType: expenseType,\n              value: value\n            });\n          }\n\n          if (_this9.expensesSubtractFromIncome.indexOf(expenseType) >= 0) {\n            return (0, _objectSpread11.default)({}, obj, {\n              subtract: obj.subtract + value\n            });\n          }\n\n          return (0, _objectSpread11.default)({}, obj, {\n            add: obj.add + value\n          });\n        }, {\n          subtract: 0,\n          add: 0\n        });\n      }\n\n      return getFormattedExpenses;\n    }();\n\n    _proto.getCommentsForExpenseType = function () {\n      function getCommentsForExpenseType(_ref59) {\n        var borrowers = _ref59.borrowers,\n            type = _ref59.type;\n        return arrayify(borrowers).reduce(function (comments, _ref60) {\n          var _ref60$expenses = _ref60.expenses,\n              expenses = _ref60$expenses === void 0 ? [] : _ref60$expenses;\n          var expensesOfType = expenses.filter(function (_ref61) {\n            var description = _ref61.description;\n            return description === type;\n          });\n          return [].concat((0, _toConsumableArray2.default)(comments), (0, _toConsumableArray2.default)(expensesOfType.map(function (_ref62) {\n            var comment = _ref62.comment;\n            return comment;\n          }))).filter(function (x) {\n            return x;\n          });\n        }, []);\n      }\n\n      return getCommentsForExpenseType;\n    }();\n\n    _proto.getCommentsForOtherIncomeType = function () {\n      function getCommentsForOtherIncomeType(_ref63) {\n        var borrowers = _ref63.borrowers,\n            type = _ref63.type;\n        return arrayify(borrowers).reduce(function (comments, _ref64) {\n          var _ref64$otherIncome = _ref64.otherIncome,\n              otherIncome = _ref64$otherIncome === void 0 ? [] : _ref64$otherIncome;\n          var otherIncomeOfType = otherIncome.filter(function (_ref65) {\n            var description = _ref65.description;\n            return description === type;\n          });\n          return [].concat((0, _toConsumableArray2.default)(comments), (0, _toConsumableArray2.default)(otherIncomeOfType.map(function (_ref66) {\n            var comment = _ref66.comment;\n            return comment;\n          }))).filter(function (x) {\n            return x;\n          });\n        }, []);\n      }\n\n      return getCommentsForOtherIncomeType;\n    }();\n\n    _proto.canCalculateSolvency = function () {\n      function canCalculateSolvency(_ref67) {\n        var borrowers = _ref67.borrowers;\n\n        if (!borrowers.length) {\n          return false;\n        }\n\n        if (this.getCashFortune({\n          borrowers: borrowers\n        }) === 0) {\n          return false;\n        }\n\n        if (this.getSalary({\n          borrowers: borrowers\n        }) === 0) {\n          return false;\n        }\n\n        return true;\n      }\n\n      return canCalculateSolvency;\n    }();\n\n    return _temp;\n  }(SuperClass), _temp;\n};","map":{"version":3,"sources":["imports/core/utils/Calculator/BorrowerCalculator.js"],"names":["withBorrowerCalculator","constructor","initBorrowerCalculator","middleware","config","middlewareManager","getArrayValues","mapFunc","sum","arrayify","borrower","i","val","tot","Math","getBonuses","borrowers","bonusKeys","Object","key","value","obj","getBonusIncome","total","acc","arr","BONUS_ALGORITHMS","values","history","weighting","bonusConsideration","getConsideredValue","valuesToConsider","getBorrowerCompletion","loan","getBorrowerFilesProgress","percentages","count","filesPercent","fileArray","getBorrowerDocuments","id","_id","doc","percent","type","OWN_FUNDS_TYPES","getFunds","keys","getFortune","BANK_FORTUNE","getThirdPartyFortune","THIRD_PARTY_FORTUNE","getExpenses","getInsurance2","INSURANCE_2","getInsurance3A","INSURANCE_3A","getBank3A","BANK_3A","getInsurance3B","INSURANCE_3B","getInsuranceFortune","func","getCashFortune","getMissingBorrowerFields","res","formArray","getBorrowerInfoArray","borrowerId","formArray2","getBorrowerFinanceArray","getMissingFieldIds","getMissingBorrowerDocuments","getMissingDocumentIds","getOtherFortune","getOtherIncome","getTotalFunds","getRealEstateFortune","getRealEstateValue","getRealEstateDebt","getRealEstateIncome","realEstateIncome","income","getRealEstateIncomeTotal","REAL_ESTATE_INCOME_ALGORITHMS","shouldUseNetSalary","INCOME_CONSIDERATION_TYPES","getSalary","getNetSalary","getFortuneReturns","getTotalIncome","borrowerIncome","getRetirement","argMap","gender","index","getAmortizationDuration","retirement","personalInfoPercent","Array","array","personalFormArray","b","financeFormArray","getCountedArray","getPercent","personalInfoPercentSimple","simpleFormArray","getBorrowerSimpleArray","borrowerInfoPercent","borrowerFinancePercent","getBorrowerFormHash","getFormValuesHashMultiple","sumValues","t","getNetFortune","getMortgageNotes","mortgageNotes","notes","getRealEstateExpenses","realEstate","realEstateCost","getRealEstateDeltas","allRealEstate","expenses","getRealEstateCost","amortizationRate","borrowRatio","propertyValue","propAndWork","loanValue","sumArray","v","getAllExpenses","deltas","EXPENSE_TYPES","delta","getGroupedExpenses","flattenedExpenses","x","description","shouldSubtractExpenseFromIncome","groupRealEstateDeltas","toSubtractFromIncome","negativeDeltas","positiveDeltas","getGroupedExpensesBySide","expensesBySide","expenseType","subtractExpenseTypeFromIncome","groupedExpenses","expenseTypeIsDelta","formatRealEstateExpenses","add","subtract","getFormattedExpenses","getCommentsForExpenseType","expensesOfType","comment","getCommentsForOtherIncomeType","otherIncome","otherIncomeOfType","canCalculateSolvency"],"mappings":"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","sourcesContent":["// @flow\nimport { OWN_FUNDS_TYPES } from 'imports/core/api/constants';\nimport { getBorrowerDocuments } from 'imports/core/api/files/documents';\nimport {\n  filesPercent,\n  getMissingDocumentIds,\n} from '../../api/files/fileHelpers';\nimport {\n  getBorrowerInfoArray,\n  getBorrowerFinanceArray,\n  getBorrowerSimpleArray,\n} from '../../arrays/BorrowerFormArray';\nimport { arrayify, getPercent } from '../general';\nimport {\n  getCountedArray,\n  getMissingFieldIds,\n  getFormValuesHashMultiple,\n} from '../formArrayHelpers';\nimport MiddlewareManager from '../MiddlewareManager';\nimport { INCOME_CONSIDERATION_TYPES, EXPENSE_TYPES } from '../../api/constants';\nimport { borrowerExtractorMiddleware } from './middleware';\nimport {\n  BONUS_ALGORITHMS,\n  REAL_ESTATE_INCOME_ALGORITHMS,\n} from '../../config/financeConstants';\n\nexport const withBorrowerCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    constructor(config) {\n      super(config);\n      this.initBorrowerCalculator(config);\n    }\n\n    initBorrowerCalculator(config) {\n      const middleware = (config && config.borrowerMiddleware) || borrowerExtractorMiddleware;\n      const middlewareManager = new MiddlewareManager(this);\n      middlewareManager.applyToAllMethods([middleware]);\n    }\n\n    getArrayValues({ borrowers, key, mapFunc }) {\n      let sum = 0;\n\n      arrayify(borrowers).forEach((borrower) => {\n        if (!borrower[key]) {\n          return 0;\n        }\n        sum += [\n          ...(borrower[key] && borrower[key].length > 0\n            ? borrower[key].map(mapFunc || (i => i.value))\n            : []),\n        ].reduce((tot, val) => (val > 0 && tot + val) || tot, 0);\n      });\n\n      return Math.max(0, Math.round(sum));\n    }\n\n    getBonuses({ borrowers }) {\n      return arrayify(borrowers).reduce((obj, borrower) => {\n        if (!borrower.bonusExists) {\n          return obj;\n        }\n\n        const bonusKeys = Object.keys(borrower).filter(key =>\n          key.includes('bonus')\n            && key !== 'bonusExists'\n            && borrower[key] >= 0\n            && borrower[key] !== null);\n\n        bonusKeys.forEach((key) => {\n          const value = borrower[key];\n\n          if (obj[key]) {\n            obj = { ...obj, [key]: obj[key] + value };\n          } else {\n            obj = { ...obj, [key]: value };\n          }\n        });\n\n        return obj;\n      }, {});\n    }\n\n    getBonusIncome({ borrowers }) {\n      const bonusKeys = [\n        'bonus2015',\n        'bonus2016',\n        'bonus2017',\n        'bonus2018',\n        'bonus2019',\n      ];\n      const total = arrayify(borrowers).reduce((acc, borrower) => {\n        if (!borrower.bonusExists) {\n          return acc + 0;\n        }\n\n        const arr = bonusKeys\n          .map(key => borrower[key])\n          .filter(val =>\n            (this.bonusAlgorithm === BONUS_ALGORITHMS.WEAK_AVERAGE\n              ? val > 0\n              : true));\n\n        return (\n          acc\n          + this.getConsideredValue({\n            values: arr,\n            history: this.bonusHistoryToConsider,\n            weighting: this.bonusConsideration,\n          })\n        );\n      }, 0);\n      return Math.max(0, Math.round(total));\n    }\n\n    getConsideredValue({ values, history, weighting }) {\n      const valuesToConsider = values.slice(Math.max(0, values.length - history));\n      const sum = valuesToConsider.reduce((tot, val = 0) => tot + val, 0);\n      return (weighting * sum) / valuesToConsider.length || 0;\n    }\n\n    getBorrowerCompletion({ loan, borrowers }) {\n      return (\n        (this.getBorrowerFilesProgress({ loan, borrowers }).percent\n          + this.personalInfoPercent({ borrowers }))\n        / 2\n      );\n    }\n\n    getBorrowerFilesProgress({ loan, borrowers }) {\n      const percentages = arrayify(borrowers).reduce(\n        (total, borrower) => {\n          const { percent, count } = filesPercent({\n            fileArray: getBorrowerDocuments({ loan, id: borrower._id }, this),\n            doc: borrower,\n          });\n          return {\n            percent: total.percent + percent * count,\n            count: total.count + count,\n          };\n        },\n        { percent: 0, count: 0 },\n      );\n\n      return {\n        ...percentages,\n        percent:\n          percentages.count === 0 ? 1 : percentages.percent / percentages.count,\n      };\n    }\n\n    isTypeWithArrayValues = type =>\n      [\n        OWN_FUNDS_TYPES.INSURANCE_2,\n        OWN_FUNDS_TYPES.INSURANCE_3A,\n        OWN_FUNDS_TYPES.BANK_3A,\n        OWN_FUNDS_TYPES.INSURANCE_3B,\n      ].includes(type);\n\n    getFunds({ borrowers, type }) {\n      if (this.isTypeWithArrayValues(type)) {\n        return this.getArrayValues({ borrowers, key: type });\n      }\n\n      return this.sumValues({ borrowers, keys: type });\n    }\n\n    getFortune({ borrowers }) {\n      return this.sumValues({ borrowers, keys: OWN_FUNDS_TYPES.BANK_FORTUNE });\n    }\n\n    getThirdPartyFortune({ borrowers }) {\n      const val = this.sumValues({\n        borrowers,\n        keys: OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n      });\n      return val;\n    }\n\n    getExpenses({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: 'expenses' });\n    }\n\n    getInsurance2({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.INSURANCE_2,\n      });\n    }\n\n    getInsurance3A({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.INSURANCE_3A,\n      });\n    }\n\n    getBank3A({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: OWN_FUNDS_TYPES.BANK_3A });\n    }\n\n    getInsurance3B({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: OWN_FUNDS_TYPES.INSURANCE_3B,\n      });\n    }\n\n    getInsuranceFortune({ borrowers }) {\n      return [\n        this.getInsurance2,\n        this.getInsurance3A,\n        this.getInsurance3B,\n        this.getBank3A,\n      ].reduce((sum, func) => sum + func({ borrowers }), 0);\n    }\n\n    getCashFortune({ borrowers }) {\n      return [\n        this.getFortune,\n        this.getThirdPartyFortune,\n        this.getInsurance3A,\n        this.getInsurance3B,\n        this.getBank3A,\n      ].reduce((sum, func) => sum + func({ borrowers }), 0);\n    }\n\n    getMissingBorrowerFields({ borrowers }) {\n      const res = arrayify(borrowers).reduce((missingIds, borrower) => {\n        const formArray = getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: borrower._id,\n        });\n        const formArray2 = getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: borrower._id,\n        });\n\n        return [\n          ...missingIds,\n          ...getMissingFieldIds(formArray, borrower),\n          ...getMissingFieldIds(formArray2, borrower),\n        ];\n      }, []);\n\n      return res;\n    }\n\n    getMissingBorrowerDocuments({ loan, borrowers }) {\n      return arrayify(borrowers).reduce(\n        (missingIds, borrower) => [\n          ...missingIds,\n          ...getMissingDocumentIds({\n            doc: borrower,\n            fileArray: getBorrowerDocuments({ loan, id: borrower._id }, this),\n          }),\n        ],\n        [],\n      );\n    }\n\n    getOtherFortune({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: 'otherFortune' });\n    }\n\n    getOtherIncome({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: 'otherIncome' });\n    }\n\n    getTotalFunds({ borrowers }) {\n      return (\n        this.getFortune({ borrowers })\n        + this.getThirdPartyFortune({ borrowers })\n        + this.getInsuranceFortune({ borrowers })\n      );\n    }\n\n    getRealEstateFortune({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: 'realEstate',\n        mapFunc: ({ value = 0, loan = 0 }) => value - loan,\n      });\n    }\n\n    getRealEstateValue({ borrowers }) {\n      return this.getArrayValues({ borrowers, key: 'realEstate' });\n    }\n\n    getRealEstateDebt({ borrowers }) {\n      return this.getArrayValues({\n        borrowers,\n        key: 'realEstate',\n        mapFunc: ({ loan = 0 }) => loan,\n      });\n    }\n\n    getRealEstateIncome({ borrowers }) {\n      const realEstateIncome = this.getArrayValues({\n        borrowers,\n        key: 'realEstate',\n        mapFunc: ({ income = 0 }) => income,\n      }) * this.realEstateIncomeConsideration;\n\n      return realEstateIncome;\n    }\n\n    getRealEstateIncomeTotal({ borrowers }) {\n      if (\n        this.realEstateIncomeAlgorithm\n        === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT\n      ) {\n        return 0;\n      }\n\n      return this.getRealEstateIncome({ borrowers });\n    }\n\n    shouldUseNetSalary() {\n      return this.incomeConsiderationType === INCOME_CONSIDERATION_TYPES.NET;\n    }\n\n    getSalary({ borrowers }) {\n      if (this.shouldUseNetSalary()) {\n        return this.getNetSalary({ borrowers });\n      }\n      return this.sumValues({ borrowers, keys: 'salary' });\n    }\n\n    getNetSalary({ borrowers }) {\n      return this.sumValues({ borrowers, keys: 'netSalary' });\n    }\n\n    getFortuneReturns({ borrowers }) {\n      if (this.fortuneReturnsRatio) {\n        return this.fortuneReturnsRatio * this.getFortune({ borrowers });\n      }\n\n      return 0;\n    }\n\n    getTotalIncome({ borrowers }) {\n      let sum = arrayify(borrowers).reduce((total, borrower) => {\n        let borrowerIncome = 0;\n        borrowerIncome += this.getSalary({ borrowers: borrower }) || 0;\n        borrowerIncome += this.getBonusIncome({ borrowers: borrower }) || 0;\n        borrowerIncome += this.getOtherIncome({ borrowers: borrower }) || 0;\n        borrowerIncome += this.getFortuneReturns({ borrowers: borrower }) || 0;\n        borrowerIncome\n          += this.getRealEstateIncomeTotal({ borrowers: borrower }) || 0;\n        return total + borrowerIncome;\n      }, 0);\n\n      sum -= this.getFormattedExpenses({ borrowers }).subtract || 0;\n\n      return sum;\n    }\n\n    getRetirement({ borrowers }) {\n      const argMap = borrowers.reduce(\n        (obj, { age, gender }, index) => ({\n          ...obj,\n          [`${`age${index + 1}`}`]: age,\n          [`${`gender${index + 1}`}`]: gender,\n        }),\n        {},\n      );\n      return this.getYearsToRetirement(argMap);\n    }\n\n    getAmortizationDuration({ borrowers }) {\n      const retirement = this.getRetirement({ borrowers });\n      return Math.min(15, retirement);\n    }\n\n    // personalInfoPercent - Determines the completion rate of the borrower's\n    // personal information forms\n    personalInfoPercent({ borrowers }) {\n      if (!borrowers || (Array.isArray(borrowers) && !borrowers.length)) {\n        return 0;\n      }\n\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const personalFormArray = getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n        });\n        const financeFormArray = getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n        });\n        return [\n          ...arr,\n          ...getCountedArray(personalFormArray, b),\n          ...getCountedArray(financeFormArray, b),\n        ];\n      }, []);\n\n      return getPercent(array);\n    }\n\n    personalInfoPercentSimple({ borrowers, loan }) {\n      if ((!borrowers || !borrowers.length) && !loan.borrowers.length) {\n        return 0;\n      }\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const simpleFormArray = getBorrowerSimpleArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n          loan,\n        });\n        return [...arr, ...getCountedArray(simpleFormArray, b)];\n      }, []);\n\n      return getPercent(array);\n    }\n\n    borrowerInfoPercent({ borrowers }) {\n      if (!borrowers || !borrowers.length) {\n        return 0;\n      }\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const personalFormArray = getBorrowerInfoArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n        });\n        return [...arr, ...getCountedArray(personalFormArray, b)];\n      }, []);\n\n      return getPercent(array);\n    }\n\n    borrowerFinancePercent({ borrowers }) {\n      const array = arrayify(borrowers).reduce((arr, b) => {\n        const financeFormArray = getBorrowerFinanceArray({\n          borrowers: arrayify(borrowers),\n          borrowerId: b._id,\n        });\n        return [...arr, ...getCountedArray(financeFormArray, b)];\n      }, []);\n\n      return getPercent(array);\n    }\n\n    getBorrowerFormHash({ borrowers }) {\n      return getFormValuesHashMultiple(arrayify(borrowers).reduce(\n        (arr, borrower) => [\n          ...arr,\n          {\n            formArray: getBorrowerFinanceArray({\n              borrowers: arrayify(borrowers),\n              borrowerId: borrower._id,\n            }),\n            doc: borrower,\n          },\n          {\n            formArray: getBorrowerInfoArray({\n              borrowers: arrayify(borrowers),\n              borrowerId: borrower._id,\n            }),\n            doc: borrower,\n          },\n        ],\n        [],\n      ));\n    }\n\n    sumValues({ borrowers, keys }) {\n      return arrayify(keys).reduce(\n        (total, key) =>\n          total + arrayify(borrowers).reduce((t, b) => t + (b[key] || 0), 0),\n        0,\n      );\n    }\n\n    getNetFortune({ borrowers }) {\n      return (\n        this.getTotalFunds({ borrowers })\n        + this.getRealEstateFortune({ borrowers })\n        + this.getOtherFortune({ borrowers })\n      );\n    }\n\n    getMortgageNotes({ borrowers }) {\n      return borrowers.reduce(\n        (arr, { mortgageNotes: notes = [] }) => [...arr, ...notes],\n        [],\n      );\n    }\n\n    getRealEstateExpenses({ borrowers }) {\n      const realEstate = arrayify(borrowers).reduce(\n        (arr, borrower) => [...arr, ...(borrower.realEstate || [])],\n        [],\n      );\n      const realEstateCost = realEstate.reduce(\n        (tot, obj) => tot + this.getRealEstateCost(obj),\n        0,\n      );\n\n      return realEstateCost;\n    }\n\n    getRealEstateDeltas({ borrowers }) {\n      const allRealEstate = arrayify(borrowers)\n        .map(({ realEstate }) => realEstate)\n        .reduce((arr, realEstate) => [...arr, ...realEstate], []);\n\n      return allRealEstate.map((realEstate) => {\n        const { income } = realEstate;\n        const expenses = this.getRealEstateCost(realEstate) * 12;\n\n        return (\n          Math.round(income * this.realEstateIncomeConsideration) - expenses\n        );\n      });\n    }\n\n    getRealEstateCost({ loan, value }) {\n      const amortizationRate = this.getAmortizationRateBase({\n        borrowRatio: super.getBorrowRatio({ loan, propertyValue: value }),\n      });\n\n      return super.getTheoreticalMonthly({\n        propAndWork: value,\n        loanValue: loan,\n        amortizationRate,\n      }).total;\n    }\n\n    sumArray(arr) {\n      return arr.reduce((tot, v = 0) => tot + v, 0);\n    }\n\n    // Returns an object with all the types of expenses, combined between\n    // borrowers:\n    // {\n    //  LEASING: 23000,\n    //  WELFARE: 4000,\n    //  THEORETICAL_REAL_ESTATE: 30000,\n    //  etc\n    // }\n    getAllExpenses({ borrowers }) {\n      if (\n        this.realEstateIncomeAlgorithm\n        === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT\n      ) {\n        const deltas = this.getRealEstateDeltas({\n          borrowers,\n        });\n        return {\n          // Negative deltas should be made positive so they can be added to expenses\n          [EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE]: -this.sumArray(deltas.filter(delta => delta < 0)),\n          // Positive deltas should be made negative so they can be subtracted from income,\n          // and therefore increase income\n          [EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE]: -this.sumArray(deltas.filter(delta => delta > 0)),\n          ...this.getGroupedExpenses({ borrowers }),\n        };\n      }\n\n      return {\n        [EXPENSE_TYPES.THEORETICAL_REAL_ESTATE]:\n          this.getRealEstateExpenses({ borrowers }) * 12, // All expenses are annualized\n        ...this.getGroupedExpenses({ borrowers }),\n      };\n    }\n\n    // Same as getAllExpenses, but without real estate expenses\n    getGroupedExpenses({ borrowers }) {\n      const flattenedExpenses = []\n        .concat([], ...arrayify(borrowers).map(({ expenses }) => expenses))\n        .filter(x => x);\n      return flattenedExpenses.reduce(\n        (obj, { value, description }) => ({\n          ...obj,\n          [description]: (obj[description] || 0) + value,\n        }),\n        {},\n      );\n    }\n\n    shouldSubtractExpenseFromIncome(expenseType) {\n      return this.expensesSubtractFromIncome.includes(expenseType);\n    }\n\n    groupRealEstateDeltas({ groupedExpenses, expenses, toSubtractFromIncome }) {\n      const negativeDeltas = expenses[EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE];\n      const positiveDeltas = expenses[EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE];\n\n      if (toSubtractFromIncome) {\n        // If we want to get expenses to subtract from income, add the\n        // positiveDeltas negatively, so they are in fact added to income\n        return {\n          ...groupedExpenses,\n          [EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE]: positiveDeltas,\n        };\n      }\n\n      return {\n        ...groupedExpenses,\n        [EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE]: negativeDeltas,\n      };\n    }\n\n    // Returns an object with all expenses to subtract from income\n    // or all expenses to add to expenses, depending on the param `toSubtractFromIncome`¨\n    // {\n    //  LEASING: 23000,\n    // }\n    getGroupedExpensesBySide({ borrowers, toSubtractFromIncome = true }) {\n      const expenses = this.getAllExpenses({ borrowers });\n\n      const expensesBySide = Object.keys(expenses)\n        .filter(expenseType => !this.expenseTypeIsDelta(expenseType))\n        .filter((expenseType) => {\n          const subtractExpenseTypeFromIncome = this.expensesSubtractFromIncome.includes(expenseType);\n          return toSubtractFromIncome\n            ? subtractExpenseTypeFromIncome\n            : !subtractExpenseTypeFromIncome;\n        });\n\n      const groupedExpenses = expensesBySide.reduce(\n        (obj, expenseType) => ({\n          ...obj,\n          [expenseType]: expenses[expenseType],\n        }),\n        {},\n      );\n\n      if (\n        this.realEstateIncomeAlgorithm\n        === REAL_ESTATE_INCOME_ALGORITHMS.POSITIVE_NEGATIVE_SPLIT\n      ) {\n        return this.groupRealEstateDeltas({\n          groupedExpenses,\n          expenses,\n          toSubtractFromIncome,\n        });\n      }\n\n      return groupedExpenses;\n    }\n\n    expenseTypeIsDelta(expenseType) {\n      return [\n        EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE,\n        EXPENSE_TYPES.REAL_ESTATE_DELTA_POSITIVE,\n      ].includes(expenseType);\n    }\n\n    formatRealEstateExpenses({ obj, expenseType, value }) {\n      if (expenseType === EXPENSE_TYPES.REAL_ESTATE_DELTA_NEGATIVE) {\n        return { ...obj, add: obj.add + value };\n      }\n\n      return { ...obj, subtract: obj.subtract + value };\n    }\n\n    // Returns an object with 2 keys, `subtract` and `add` that contain the sum\n    // of all expenses to \"subtract from income\" and \"add to expenses\", respectively\n    getFormattedExpenses({ borrowers }) {\n      const expenses = this.getAllExpenses({ borrowers });\n\n      return Object.keys(expenses).reduce(\n        (obj, expenseType) => {\n          const value = expenses[expenseType];\n          if (this.expenseTypeIsDelta(expenseType)) {\n            return this.formatRealEstateExpenses({ obj, expenseType, value });\n          }\n\n          if (this.expensesSubtractFromIncome.indexOf(expenseType) >= 0) {\n            return { ...obj, subtract: obj.subtract + value };\n          }\n\n          return { ...obj, add: obj.add + value };\n        },\n        { subtract: 0, add: 0 },\n      );\n    }\n\n    getCommentsForExpenseType({ borrowers, type }) {\n      return arrayify(borrowers).reduce((comments, { expenses = [] }) => {\n        const expensesOfType = expenses.filter(({ description }) => description === type);\n        return [\n          ...comments,\n          ...expensesOfType.map(({ comment }) => comment),\n        ].filter(x => x);\n      }, []);\n    }\n\n    getCommentsForOtherIncomeType({ borrowers, type }) {\n      return arrayify(borrowers).reduce((comments, { otherIncome = [] }) => {\n        const otherIncomeOfType = otherIncome.filter(({ description }) => description === type);\n        return [\n          ...comments,\n          ...otherIncomeOfType.map(({ comment }) => comment),\n        ].filter(x => x);\n      }, []);\n    }\n\n    canCalculateSolvency({ borrowers }) {\n      if (!borrowers.length) {\n        return false;\n      }\n\n      if (this.getCashFortune({ borrowers }) === 0) {\n        return false;\n      }\n\n      if (this.getSalary({ borrowers }) === 0) {\n        return false;\n      }\n\n      return true;\n    }\n  };\n"]},"sourceType":"script","hash":"f5db11f455a91109abf1ea520b077335147e32c3"}
