{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/contacts/queries.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/api/contacts/queries.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/contacts/queries.js","inputSourceMap":{"version":3,"sources":["imports/core/api/contacts/queries.js"],"names":["generateMatchAnyWordRegexp","createRegexQuery","contact","CONTACTS_QUERIES","Contacts","adminContacts","createQuery","ADMIN_CONTACTS","contactSearch","CONTACT_SEARCH","$filter","filters","params","searchQuery","formattedSearchQuery","$or","$and","name","organisations","$options","sort","createdAt","limit"],"mappings":"AAAA,SACEA,0BADF,EAEEC,gBAFF;AAIA,SAASC,OAAT;AACA,SAASC,gBAAT;AACA,OAAOC,QAAP,MAAqB,GAArB;AAEA,OAAO,MAAMC,aAAa,GAAGD,QAAQ,CAACE,WAAT,CAC3BH,gBAAgB,CAACI,cADU,EAE3BL,OAAO,EAFoB,CAAtB;AAKP,OAAO,MAAMM,aAAa,GAAGJ,QAAQ,CAACE,WAAT,CAC3BH,gBAAgB,CAACM,cADU,EAE3B;AACEC,EAAAA,OAAO,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAnB,GAAD,EAAuC;AAC5C,UAAMC,oBAAoB,GAAGd,0BAA0B,CAACa,WAAD,CAAvD;AAEAF,IAAAA,OAAO,CAACI,GAAR,GAAc,CACZd,gBAAgB,CAAC,KAAD,EAAQY,WAAR,CADJ,EAEZZ,gBAAgB,CAAC,WAAD,EAAcY,WAAd,CAFJ,EAGZZ,gBAAgB,CAAC,UAAD,EAAaY,WAAb,CAHJ,EAIZ;AACEG,MAAAA,IAAI,EAAE,CACJf,gBAAgB,CAAC,WAAD,EAAca,oBAAd,CADZ,EAEJb,gBAAgB,CAAC,UAAD,EAAaa,oBAAb,CAFZ;AADR,KAJY,CAAd;AAWD,GAfH;;AAgBEG,EAAAA,IAAI,EAAE,CAhBR;AAiBEC,EAAAA,aAAa,EAAE;AAAED,IAAAA,IAAI,EAAE;AAAR,GAjBjB;AAkBEE,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAE,CAAC;AAAd,KAAR;AAA2BC,IAAAA,KAAK,EAAE;AAAlC;AAlBZ,CAF2B,CAAtB","sourcesContent":["import {\n  generateMatchAnyWordRegexp,\n  createRegexQuery,\n} from '../helpers/mongoHelpers';\nimport { contact } from '../fragments';\nimport { CONTACTS_QUERIES } from './contactsConstants';\nimport Contacts from '.';\n\nexport const adminContacts = Contacts.createQuery(\n  CONTACTS_QUERIES.ADMIN_CONTACTS,\n  contact(),\n);\n\nexport const contactSearch = Contacts.createQuery(\n  CONTACTS_QUERIES.CONTACT_SEARCH,\n  {\n    $filter({ filters, params: { searchQuery } }) {\n      const formattedSearchQuery = generateMatchAnyWordRegexp(searchQuery);\n\n      filters.$or = [\n        createRegexQuery('_id', searchQuery),\n        createRegexQuery('firstName', searchQuery),\n        createRegexQuery('lastName', searchQuery),\n        {\n          $and: [\n            createRegexQuery('firstName', formattedSearchQuery),\n            createRegexQuery('lastName', formattedSearchQuery),\n          ],\n        },\n      ];\n    },\n    name: 1,\n    organisations: { name: 1 },\n    $options: { sort: { createdAt: -1 }, limit: 5 },\n  },\n);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/contacts/queries.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/contacts/queries.js"}},"code":"module.export({\n  adminContacts: () => adminContacts,\n  contactSearch: () => contactSearch\n});\nlet generateMatchAnyWordRegexp, createRegexQuery;\nmodule.link(\"../helpers/mongoHelpers\", {\n  generateMatchAnyWordRegexp(v) {\n    generateMatchAnyWordRegexp = v;\n  },\n\n  createRegexQuery(v) {\n    createRegexQuery = v;\n  }\n\n}, 0);\nlet contact;\nmodule.link(\"../fragments\", {\n  contact(v) {\n    contact = v;\n  }\n\n}, 1);\nlet CONTACTS_QUERIES;\nmodule.link(\"./contactsConstants\", {\n  CONTACTS_QUERIES(v) {\n    CONTACTS_QUERIES = v;\n  }\n\n}, 2);\nlet Contacts;\nmodule.link(\".\", {\n  default(v) {\n    Contacts = v;\n  }\n\n}, 3);\nconst adminContacts = Contacts.createQuery(CONTACTS_QUERIES.ADMIN_CONTACTS, contact());\nconst contactSearch = Contacts.createQuery(CONTACTS_QUERIES.CONTACT_SEARCH, {\n  $filter(_ref) {\n    let {\n      filters,\n      params: {\n        searchQuery\n      }\n    } = _ref;\n    const formattedSearchQuery = generateMatchAnyWordRegexp(searchQuery);\n    filters.$or = [createRegexQuery('_id', searchQuery), createRegexQuery('firstName', searchQuery), createRegexQuery('lastName', searchQuery), {\n      $and: [createRegexQuery('firstName', formattedSearchQuery), createRegexQuery('lastName', formattedSearchQuery)]\n    }];\n  },\n\n  name: 1,\n  organisations: {\n    name: 1\n  },\n  $options: {\n    sort: {\n      createdAt: -1\n    },\n    limit: 5\n  }\n});","map":{"version":3,"sources":["imports/core/api/contacts/queries.js"],"names":["generateMatchAnyWordRegexp","adminContacts","Contacts","CONTACTS_QUERIES","contact","contactSearch","$filter","params","searchQuery","formattedSearchQuery","filters","createRegexQuery","$and","name","organisations","$options","sort","createdAt","limit"],"mappings":"AAAA,MAAA,CAAA,MAAA,CACEA;AAAAA,EAAAA,aAAAA,EAAAA,MADF,aACEA;AADF,EAAA,aAAA,EAAA,MAAA;AACEA,CADF;AAAA,IAAA,0BAAA,EAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AAAA,EAAA,0BAAA,CAAA,CAAA,EAAA;AAAA,IAAA,0BAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,qBAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,GAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAQO,MAAMC,aAAa,GAAGC,QAAQ,CAARA,WAAAA,CAC3BC,gBAAgB,CADWD,cAAAA,EAE3BE,OAFK,EAAsBF,CAAtB;AAKA,MAAMG,aAAa,GAAG,QAAQ,CAAR,WAAA,CAC3BF,gBAAgB,CADW,cAAA,EAE3B;AACEG,EAAAA,OAAO,OAAuC;AAAA,QAAtC;AAAA,MAAA,OAAA;AAAWC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAnB,KAAsC;AAC5C,UAAMC,oBAAoB,GAAGT,0BAA0B,CAAvD,WAAuD,CAAvD;AAEAU,IAAAA,OAAO,CAAPA,GAAAA,GAAc,CACZC,gBAAgB,CAAA,KAAA,EADJ,WACI,CADJ,EAEZA,gBAAgB,CAAA,WAAA,EAFJ,WAEI,CAFJ,EAGZA,gBAAgB,CAAA,UAAA,EAHJ,WAGI,CAHJ,EAIZ;AACEC,MAAAA,IAAI,EAAE,CACJD,gBAAgB,CAAA,WAAA,EADZ,oBACY,CADZ,EAEJA,gBAAgB,CAAA,UAAA,EAFZ,oBAEY,CAFZ;AADR,KAJY,CAAdD;AAJJ,GAAA;;AAgBEG,EAAAA,IAAI,EAhBN,CAAA;AAiBEC,EAAAA,aAAa,EAAE;AAAED,IAAAA,IAAI,EAAE;AAAR,GAjBjB;AAkBEE,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAE,CAAC;AAAd,KAAR;AAA2BC,IAAAA,KAAK,EAAE;AAAlC;AAlBZ,CAF2B,CAAtB","sourcesContent":["import {\n  generateMatchAnyWordRegexp,\n  createRegexQuery,\n} from '../helpers/mongoHelpers';\nimport { contact } from '../fragments';\nimport { CONTACTS_QUERIES } from './contactsConstants';\nimport Contacts from '.';\n\nexport const adminContacts = Contacts.createQuery(\n  CONTACTS_QUERIES.ADMIN_CONTACTS,\n  contact(),\n);\n\nexport const contactSearch = Contacts.createQuery(\n  CONTACTS_QUERIES.CONTACT_SEARCH,\n  {\n    $filter({ filters, params: { searchQuery } }) {\n      const formattedSearchQuery = generateMatchAnyWordRegexp(searchQuery);\n\n      filters.$or = [\n        createRegexQuery('_id', searchQuery),\n        createRegexQuery('firstName', searchQuery),\n        createRegexQuery('lastName', searchQuery),\n        {\n          $and: [\n            createRegexQuery('firstName', formattedSearchQuery),\n            createRegexQuery('lastName', formattedSearchQuery),\n          ],\n        },\n      ];\n    },\n    name: 1,\n    organisations: { name: 1 },\n    $options: { sort: { createdAt: -1 }, limit: 5 },\n  },\n);\n"]},"sourceType":"script","hash":"575def8226027476a2c2639590c92db05361b431"}
