{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/CustomListField.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/AutoForm2/CustomListField.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/CustomListField.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/AutoForm2/CustomListField.jsx"],"names":["ListMaterial","ListSubheader","React","Children","connectField","filterDOMProps","joinName","shouldUpdate","CustomListAddField","ListItemField","FIELDS_TO_IGNORE","List","addIcon","children","dense","initialCount","itemProps","label","name","value","props","undefined","map","item","index","child","cloneElement","key","replace","defaultProps","CustomListField","ensureValue","includeInChain","OptimizedListField","nextProps","update","Object","keys","filter","propName","includes","some","prop","JSON","stringify"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,wBAAzB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,kBAAP;AACA,OAAOC,aAAP;AACA,SAASC,gBAAT;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,OADY;AAEZC,EAAAA,QAFY;AAGZC,EAAAA,KAHY;AAIZC,EAAAA,YAJY;AAKZC,EAAAA,SALY;AAMZC,EAAAA,KANY;AAOZC,EAAAA,IAPY;AAQZC,EAAAA,KARY;AASZ,KAAGC;AATS,CAAD,KAWX,CAAC,GAAD;IACE,CAAC,YAAD,CACE,IAAI,MADN,CAEE,MAAM,CAACN,KAAD,CAFR,CAGE,UAAU,CACRG,KAAK,GAAG,CAAC,aAAD,CAAe,aAAf,CAA6B,CAACA,KAAD,CAAO,EAAE,aAAF,CAAvC,GAA0DI,SADvD,CAHZ,CAME,IAAIhB,cAAc,CAACe,KAAD,CAAlB,CANF;MAQE,CAACP,QAAQ,GACLM,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KACVrB,QAAQ,CAACmB,GAAT,CAAaT,QAAb,EAAuBY,KAAK,IAC1BvB,KAAK,CAACwB,YAAN,CAAmBD,KAAnB,EAA0B;AACxBE,MAAAA,GAAG,EAAEH,KADmB;AAExBP,MAAAA,KAAK,EAAE,IAFiB;AAGxBC,MAAAA,IAAI,EAAEZ,QAAQ,CACZY,IADY,EAEZO,KAAK,CAACL,KAAN,CAAYF,IAAZ,IAAoBO,KAAK,CAACL,KAAN,CAAYF,IAAZ,CAAiBU,OAAjB,CAAyB,GAAzB,EAA8BJ,KAA9B,CAFR;AAHU,KAA1B,CADF,CADA,CADK,GAWLL,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KACV,CAAC,aAAD,CACE,IAAI,CAACA,KAAD,CADN,CAEE,MAAM,CAAC,IAAD,CAFR,CAGE,KAAK,CAAClB,QAAQ,CAACY,IAAD,EAAOM,KAAP,CAAT,CAHP,CAIE,IAAIR,SAAJ,CAJF,GADA,CAXJ;IAmBF,EAAE,YAAF;IACA,CAAC,kBAAD,CACE,IAAI,cADN,CAEE,KAAK,CAAE,GAAEE,IAAK,IAAT,CAFP,CAGE,aAAa,CAACH,YAAD,CAHf;EAKF,EAAE,GAAF,CA7CF;;AAgDAJ,IAAI,CAACkB,YAAL,GAAoB;AAClBf,EAAAA,KAAK,EAAE;AADW,CAApB;AAIA,MAAMgB,eAAe,GAAG1B,YAAY,CAACO,IAAD,EAAO;AACzCoB,EAAAA,WAAW,EAAE,KAD4B;AAEzCC,EAAAA,cAAc,EAAE;AAFyB,CAAP,CAApC;AAKA,OAAO,MAAMC,kBAAkB,GAAG1B,YAAY,CAAC,CAACa,KAAD,EAAQc,SAAR,KAAsB;AACnE,MAAIC,MAAM,GAAG,KAAb;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,SAAZ,EACGI,MADH,CACUC,QAAQ,IAAI,CAAC,CAAC,GAAG7B,gBAAJ,EAAsB,OAAtB,EAA+B8B,QAA/B,CAAwCD,QAAxC,CADvB,EAEGE,IAFH,CAESF,QAAD,IAAc;AAClB,UAAMG,IAAI,GAAGR,SAAS,CAACK,QAAD,CAAtB;;AAEA,QAAIG,IAAI,KAAKtB,KAAK,CAACmB,QAAD,CAAlB,EAA8B;AAC5BJ,MAAAA,MAAM,GAAG,IAAT;AACA,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,GAXH;;AAaA,MAAIQ,IAAI,CAACC,SAAL,CAAexB,KAAK,CAACD,KAArB,MAAgCwB,IAAI,CAACC,SAAL,CAAeV,SAAS,CAACf,KAAzB,CAApC,EAAqE;AACnE;AACA;AACAgB,IAAAA,MAAM,GAAG,IAAT;AACD;;AAED,SAAOA,MAAP;AACD,CAvB6C,CAAZ,CAuB/BL,eAvB+B,CAA3B;AAyBP,eAAeA,eAAf","sourcesContent":["import ListMaterial from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport React, { Children } from 'react';\nimport connectField from 'uniforms/connectField';\nimport filterDOMProps from 'uniforms/filterDOMProps';\nimport joinName from 'uniforms/joinName';\n\nimport { shouldUpdate } from 'recompose';\nimport CustomListAddField from './CustomListAddField';\nimport ListItemField from './CustomListItemField';\nimport { FIELDS_TO_IGNORE } from './constants';\n\nconst List = ({\n  addIcon,\n  children,\n  dense,\n  initialCount,\n  itemProps,\n  label,\n  name,\n  value,\n  ...props\n}) => (\n  <div>\n    <ListMaterial\n      key=\"list\"\n      dense={dense}\n      subheader={\n        label ? <ListSubheader disableSticky>{label}</ListSubheader> : undefined\n      }\n      {...filterDOMProps(props)}\n    >\n      {children\n        ? value.map((item, index) =>\n          Children.map(children, child =>\n            React.cloneElement(child, {\n              key: index,\n              label: null,\n              name: joinName(\n                name,\n                child.props.name && child.props.name.replace('$', index),\n              ),\n            })))\n        : value.map((item, index) => (\n          <ListItemField\n            key={index}\n            label={null}\n            name={joinName(name, index)}\n            {...itemProps}\n          />\n        ))}\n    </ListMaterial>\n    <CustomListAddField\n      key=\"listAddField\"\n      name={`${name}.$`}\n      initialCount={initialCount}\n    />\n  </div>\n);\n\nList.defaultProps = {\n  dense: true,\n};\n\nconst CustomListField = connectField(List, {\n  ensureValue: false,\n  includeInChain: false,\n});\n\nexport const OptimizedListField = shouldUpdate((props, nextProps) => {\n  let update = false;\n\n  Object.keys(nextProps)\n    .filter(propName => ![...FIELDS_TO_IGNORE, 'value'].includes(propName))\n    .some((propName) => {\n      const prop = nextProps[propName];\n\n      if (prop !== props[propName]) {\n        update = true;\n        return true;\n      }\n\n      return false;\n    });\n\n  if (JSON.stringify(props.value) !== JSON.stringify(nextProps.value)) {\n    // Add an exception for list value, as it is an array,\n    // it always updates because [] !== []\n    update = true;\n  }\n\n  return update;\n})(CustomListField);\n\nexport default CustomListField;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/CustomListField.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/AutoForm2/CustomListField.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  OptimizedListField: () => OptimizedListField\n});\nlet ListMaterial;\nmodule.link(\"@material-ui/core/List\", {\n  default(v) {\n    ListMaterial = v;\n  }\n\n}, 0);\nlet ListSubheader;\nmodule.link(\"@material-ui/core/ListSubheader\", {\n  default(v) {\n    ListSubheader = v;\n  }\n\n}, 1);\nlet React, Children;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Children(v) {\n    Children = v;\n  }\n\n}, 2);\nlet connectField;\nmodule.link(\"uniforms/connectField\", {\n  default(v) {\n    connectField = v;\n  }\n\n}, 3);\nlet filterDOMProps;\nmodule.link(\"uniforms/filterDOMProps\", {\n  default(v) {\n    filterDOMProps = v;\n  }\n\n}, 4);\nlet joinName;\nmodule.link(\"uniforms/joinName\", {\n  default(v) {\n    joinName = v;\n  }\n\n}, 5);\nlet shouldUpdate;\nmodule.link(\"recompose\", {\n  shouldUpdate(v) {\n    shouldUpdate = v;\n  }\n\n}, 6);\nlet CustomListAddField;\nmodule.link(\"./CustomListAddField\", {\n  default(v) {\n    CustomListAddField = v;\n  }\n\n}, 7);\nlet ListItemField;\nmodule.link(\"./CustomListItemField\", {\n  default(v) {\n    ListItemField = v;\n  }\n\n}, 8);\nlet FIELDS_TO_IGNORE;\nmodule.link(\"./constants\", {\n  FIELDS_TO_IGNORE(v) {\n    FIELDS_TO_IGNORE = v;\n  }\n\n}, 9);\n\nconst List = (_ref) => {\n  let {\n    addIcon,\n    children,\n    dense,\n    initialCount,\n    itemProps,\n    label,\n    name,\n    value\n  } = _ref,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"addIcon\", \"children\", \"dense\", \"initialCount\", \"itemProps\", \"label\", \"name\", \"value\"]);\n  return React.createElement(\"div\", null, React.createElement(ListMaterial, (0, _extends2.default)({\n    key: \"list\",\n    dense: dense,\n    subheader: label ? React.createElement(ListSubheader, {\n      disableSticky: true\n    }, label) : undefined\n  }, filterDOMProps(props)), children ? value.map((item, index) => Children.map(children, child => React.cloneElement(child, {\n    key: index,\n    label: null,\n    name: joinName(name, child.props.name && child.props.name.replace('$', index))\n  }))) : value.map((item, index) => React.createElement(ListItemField, (0, _extends2.default)({\n    key: index,\n    label: null,\n    name: joinName(name, index)\n  }, itemProps)))), React.createElement(CustomListAddField, {\n    key: \"listAddField\",\n    name: \"\".concat(name, \".$\"),\n    initialCount: initialCount\n  }));\n};\n\nList.defaultProps = {\n  dense: true\n};\nconst CustomListField = connectField(List, {\n  ensureValue: false,\n  includeInChain: false\n});\nconst OptimizedListField = shouldUpdate((props, nextProps) => {\n  let update = false;\n  Object.keys(nextProps).filter(propName => ![...FIELDS_TO_IGNORE, 'value'].includes(propName)).some(propName => {\n    const prop = nextProps[propName];\n\n    if (prop !== props[propName]) {\n      update = true;\n      return true;\n    }\n\n    return false;\n  });\n\n  if (JSON.stringify(props.value) !== JSON.stringify(nextProps.value)) {\n    // Add an exception for list value, as it is an array,\n    // it always updates because [] !== []\n    update = true;\n  }\n\n  return update;\n})(CustomListField);\nmodule.exportDefault(CustomListField);","map":{"version":3,"sources":["imports/core/components/AutoForm2/CustomListField.jsx"],"names":["ListMaterial","List","props","label","filterDOMProps","children","child","key","name","joinName","value","dense","CustomListField","connectField","ensureValue","includeInChain","OptimizedListField","update","Object","propName","prop","nextProps","JSON"],"mappings":"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","sourcesContent":["import ListMaterial from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport React, { Children } from 'react';\nimport connectField from 'uniforms/connectField';\nimport filterDOMProps from 'uniforms/filterDOMProps';\nimport joinName from 'uniforms/joinName';\n\nimport { shouldUpdate } from 'recompose';\nimport CustomListAddField from './CustomListAddField';\nimport ListItemField from './CustomListItemField';\nimport { FIELDS_TO_IGNORE } from './constants';\n\nconst List = ({\n  addIcon,\n  children,\n  dense,\n  initialCount,\n  itemProps,\n  label,\n  name,\n  value,\n  ...props\n}) => (\n  <div>\n    <ListMaterial\n      key=\"list\"\n      dense={dense}\n      subheader={\n        label ? <ListSubheader disableSticky>{label}</ListSubheader> : undefined\n      }\n      {...filterDOMProps(props)}\n    >\n      {children\n        ? value.map((item, index) =>\n          Children.map(children, child =>\n            React.cloneElement(child, {\n              key: index,\n              label: null,\n              name: joinName(\n                name,\n                child.props.name && child.props.name.replace('$', index),\n              ),\n            })))\n        : value.map((item, index) => (\n          <ListItemField\n            key={index}\n            label={null}\n            name={joinName(name, index)}\n            {...itemProps}\n          />\n        ))}\n    </ListMaterial>\n    <CustomListAddField\n      key=\"listAddField\"\n      name={`${name}.$`}\n      initialCount={initialCount}\n    />\n  </div>\n);\n\nList.defaultProps = {\n  dense: true,\n};\n\nconst CustomListField = connectField(List, {\n  ensureValue: false,\n  includeInChain: false,\n});\n\nexport const OptimizedListField = shouldUpdate((props, nextProps) => {\n  let update = false;\n\n  Object.keys(nextProps)\n    .filter(propName => ![...FIELDS_TO_IGNORE, 'value'].includes(propName))\n    .some((propName) => {\n      const prop = nextProps[propName];\n\n      if (prop !== props[propName]) {\n        update = true;\n        return true;\n      }\n\n      return false;\n    });\n\n  if (JSON.stringify(props.value) !== JSON.stringify(nextProps.value)) {\n    // Add an exception for list value, as it is an array,\n    // it always updates because [] !== []\n    update = true;\n  }\n\n  return update;\n})(CustomListField);\n\nexport default CustomListField;\n"]},"sourceType":"script","hash":"3daa2e743c93245af03d6d6b14ddf94799c4dd26"}
