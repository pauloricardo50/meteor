{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/PDFService.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/pdf/server/PDFService.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/PDFService.js","inputSourceMap":{"version":3,"sources":["imports/core/api/pdf/server/PDFService.js"],"names":["Meteor","Random","check","Match","fetch","ReactDOMServer","fs","adminLoans","formatLoanWithPromotion","lenderRules","OrganisationService","LoanBankPDF","PDF_TYPES","validateLoanPdf","PDF_URL","PDFService","type","params","options","htmlOnly","checkParams","data","getDataForPDF","checkData","component","props","fileName","pdfName","makeConfigForPDF","html","getComponentAsHTML","Promise","resolve","fetchPDF","LOAN","error","Error","loanId","organisationId","structureIds","String","Maybe","organisation","fetchOne","$filters","_id","name","logo","loan","clone","hasPromotion","id","path","file","readFileSync","unlink","base64","Buffer","toString","renderToStaticMarkup","API_KEY","settings","DOC_RAPTOR_API_KEY","body","user_credentials","doc","document_content","test","isProduction","isStaging","isDevEnvironment","prince_options","media","baseurl","method","headers","JSON","stringify","then","res","dest","createWriteStream","stream","pipe","on","getBase64String"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\nimport { check, Match } from 'meteor/check';\n\nimport fetch from 'node-fetch';\nimport ReactDOMServer from 'react-dom/server';\nimport fs from 'fs';\n\nimport { adminLoans } from '../../loans/queries';\nimport { formatLoanWithPromotion } from '../../../utils/loanFunctions';\nimport { lenderRules } from '../../fragments';\nimport OrganisationService from '../../organisations/server/OrganisationService';\nimport LoanBankPDF from './pdfComponents/LoanBankPDF';\nimport { PDF_TYPES } from '../pdfConstants';\nimport { validateLoanPdf } from './pdfValidators';\n\nconst PDF_URL = 'https://docraptor.com/docs';\n\nclass PDFService {\n  makePDF = ({ type, params, options, htmlOnly }) => {\n    this.checkParams({ params, type });\n    const data = this.getDataForPDF(type, params);\n    this.checkData({ data, type });\n\n    const { component, props, fileName, pdfName } = this.makeConfigForPDF({\n      data,\n      type,\n      options,\n    });\n    const html = this.getComponentAsHTML(component, props, pdfName);\n\n    if (htmlOnly) {\n      return Promise.resolve({ html, pdfName });\n    }\n\n    return this.fetchPDF(html, fileName, pdfName);\n  };\n\n  checkData = ({ data, type }) => {\n    switch (type) {\n    case PDF_TYPES.LOAN: {\n      try {\n        validateLoanPdf(data);\n      } catch (error) {\n        throw new Meteor.Error(error);\n      }\n      break;\n    }\n    default:\n      throw new Meteor.Error(`Invalid pdf type: ${type}`);\n    }\n  };\n\n  checkParams = ({ params, type }) => {\n    switch (type) {\n    case PDF_TYPES.LOAN: {\n      const { loanId, organisationId, structureIds } = params;\n      check(loanId, String);\n      check(organisationId, Match.Maybe(String));\n      check(structureIds, Match.Maybe([String]));\n      break;\n    }\n\n    default:\n      throw new Meteor.Error(`Invalid pdf type: ${type}`);\n    }\n  };\n\n  getDataForPDF = (type, params) => {\n    switch (type) {\n    case PDF_TYPES.LOAN: {\n      const { loanId, organisationId } = params;\n\n      const organisation = organisationId\n          && OrganisationService.fetchOne({\n            $filters: { _id: organisationId },\n            lenderRules: lenderRules(),\n            name: 1,\n            logo: 1,\n          });\n      const loan = adminLoans.clone({ _id: loanId }).fetchOne();\n\n      if (loan.hasPromotion) {\n        return {\n          ...params,\n          loan: formatLoanWithPromotion(loan),\n          organisation,\n        };\n      }\n\n      return { ...params, loan, organisation };\n    }\n    default:\n      throw new Meteor.Error(`Invalid pdf type: ${type}`);\n    }\n  };\n\n  makeConfigForPDF = ({ type, data, options }) => {\n    const fileName = Random.id();\n\n    switch (type) {\n    case PDF_TYPES.LOAN: {\n      const { loan, organisation } = data;\n      return {\n        component: LoanBankPDF,\n        props: { ...data, options },\n        fileName,\n        pdfName: organisation\n          ? `${loan.name} - ${organisation.name}`\n          : loan.name,\n      };\n    }\n    default:\n      throw new Meteor.Error(`Invalid pdf type: ${type}`);\n    }\n  };\n\n  getBase64String = (path) => {\n    const file = fs.readFileSync(path);\n    fs.unlink(path); // Async delete\n    const base64 = new Buffer(file).toString('base64');\n    return base64;\n  };\n\n  getComponentAsHTML = (component, props, pdfName) =>\n    ReactDOMServer.renderToStaticMarkup(component({ ...props, pdfName }));\n\n  fetchPDF = (html, fileName, pdfName) => {\n    const API_KEY = Meteor.settings.DOC_RAPTOR_API_KEY;\n    const body = {\n      user_credentials: API_KEY,\n      doc: {\n        document_content: html,\n        name: pdfName,\n        type: 'pdf',\n        test: !Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment,\n        // help: true,\n        prince_options: { media: 'screen', baseurl: 'https://www.e-potek.ch' },\n      },\n    };\n\n    return fetch(PDF_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    })\n      .then((res) => {\n        const dest = fs.createWriteStream(`/tmp/${fileName}.pdf`);\n        const stream = res.body.pipe(dest);\n        return new Promise((resolve) => {\n          stream.on('finish', resolve);\n        });\n      })\n      .then(() => this.getBase64String(`/tmp/${fileName}.pdf`))\n      .then(base64 => ({ base64, pdfName }));\n  };\n}\n\nexport default new PDFService();\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/PDFService.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/pdf/server/PDFService.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 1);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 2);\nlet fetch;\nmodule.link(\"node-fetch\", {\n  default(v) {\n    fetch = v;\n  }\n\n}, 3);\nlet ReactDOMServer;\nmodule.link(\"react-dom/server\", {\n  default(v) {\n    ReactDOMServer = v;\n  }\n\n}, 4);\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 5);\nlet adminLoans;\nmodule.link(\"../../loans/queries\", {\n  adminLoans(v) {\n    adminLoans = v;\n  }\n\n}, 6);\nlet formatLoanWithPromotion;\nmodule.link(\"../../../utils/loanFunctions\", {\n  formatLoanWithPromotion(v) {\n    formatLoanWithPromotion = v;\n  }\n\n}, 7);\nlet lenderRules;\nmodule.link(\"../../fragments\", {\n  lenderRules(v) {\n    lenderRules = v;\n  }\n\n}, 8);\nlet OrganisationService;\nmodule.link(\"../../organisations/server/OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 9);\nlet LoanBankPDF;\nmodule.link(\"./pdfComponents/LoanBankPDF\", {\n  default(v) {\n    LoanBankPDF = v;\n  }\n\n}, 10);\nlet PDF_TYPES;\nmodule.link(\"../pdfConstants\", {\n  PDF_TYPES(v) {\n    PDF_TYPES = v;\n  }\n\n}, 11);\nlet validateLoanPdf;\nmodule.link(\"./pdfValidators\", {\n  validateLoanPdf(v) {\n    validateLoanPdf = v;\n  }\n\n}, 12);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst PDF_URL = 'https://docraptor.com/docs';\n\nclass PDFService {\n  constructor() {\n    _defineProperty(this, \"makePDF\", ({\n      type,\n      params,\n      options,\n      htmlOnly\n    }) => {\n      this.checkParams({\n        params,\n        type\n      });\n      const data = this.getDataForPDF(type, params);\n      this.checkData({\n        data,\n        type\n      });\n      const {\n        component,\n        props,\n        fileName,\n        pdfName\n      } = this.makeConfigForPDF({\n        data,\n        type,\n        options\n      });\n      const html = this.getComponentAsHTML(component, props, pdfName);\n\n      if (htmlOnly) {\n        return Promise.resolve({\n          html,\n          pdfName\n        });\n      }\n\n      return this.fetchPDF(html, fileName, pdfName);\n    });\n\n    _defineProperty(this, \"checkData\", ({\n      data,\n      type\n    }) => {\n      switch (type) {\n        case PDF_TYPES.LOAN:\n          {\n            try {\n              validateLoanPdf(data);\n            } catch (error) {\n              throw new Meteor.Error(error);\n            }\n\n            break;\n          }\n\n        default:\n          throw new Meteor.Error(`Invalid pdf type: ${type}`);\n      }\n    });\n\n    _defineProperty(this, \"checkParams\", ({\n      params,\n      type\n    }) => {\n      switch (type) {\n        case PDF_TYPES.LOAN:\n          {\n            const {\n              loanId,\n              organisationId,\n              structureIds\n            } = params;\n            check(loanId, String);\n            check(organisationId, Match.Maybe(String));\n            check(structureIds, Match.Maybe([String]));\n            break;\n          }\n\n        default:\n          throw new Meteor.Error(`Invalid pdf type: ${type}`);\n      }\n    });\n\n    _defineProperty(this, \"getDataForPDF\", (type, params) => {\n      switch (type) {\n        case PDF_TYPES.LOAN:\n          {\n            const {\n              loanId,\n              organisationId\n            } = params;\n            const organisation = organisationId && OrganisationService.fetchOne({\n              $filters: {\n                _id: organisationId\n              },\n              lenderRules: lenderRules(),\n              name: 1,\n              logo: 1\n            });\n            const loan = adminLoans.clone({\n              _id: loanId\n            }).fetchOne();\n\n            if (loan.hasPromotion) {\n              return (0, _objectSpread2.default)({}, params, {\n                loan: formatLoanWithPromotion(loan),\n                organisation\n              });\n            }\n\n            return (0, _objectSpread2.default)({}, params, {\n              loan,\n              organisation\n            });\n          }\n\n        default:\n          throw new Meteor.Error(`Invalid pdf type: ${type}`);\n      }\n    });\n\n    _defineProperty(this, \"makeConfigForPDF\", ({\n      type,\n      data,\n      options\n    }) => {\n      const fileName = Random.id();\n\n      switch (type) {\n        case PDF_TYPES.LOAN:\n          {\n            const {\n              loan,\n              organisation\n            } = data;\n            return {\n              component: LoanBankPDF,\n              props: (0, _objectSpread2.default)({}, data, {\n                options\n              }),\n              fileName,\n              pdfName: organisation ? `${loan.name} - ${organisation.name}` : loan.name\n            };\n          }\n\n        default:\n          throw new Meteor.Error(`Invalid pdf type: ${type}`);\n      }\n    });\n\n    _defineProperty(this, \"getBase64String\", path => {\n      const file = fs.readFileSync(path);\n      fs.unlink(path); // Async delete\n\n      const base64 = new Buffer(file).toString('base64');\n      return base64;\n    });\n\n    _defineProperty(this, \"getComponentAsHTML\", (component, props, pdfName) => ReactDOMServer.renderToStaticMarkup(component((0, _objectSpread2.default)({}, props, {\n      pdfName\n    }))));\n\n    _defineProperty(this, \"fetchPDF\", (html, fileName, pdfName) => {\n      const API_KEY = Meteor.settings.DOC_RAPTOR_API_KEY;\n      const body = {\n        user_credentials: API_KEY,\n        doc: {\n          document_content: html,\n          name: pdfName,\n          type: 'pdf',\n          test: !Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment,\n          // help: true,\n          prince_options: {\n            media: 'screen',\n            baseurl: 'https://www.e-potek.ch'\n          }\n        }\n      };\n      return fetch(PDF_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      }).then(res => {\n        const dest = fs.createWriteStream(`/tmp/${fileName}.pdf`);\n        const stream = res.body.pipe(dest);\n        return new Promise(resolve => {\n          stream.on('finish', resolve);\n        });\n      }).then(() => this.getBase64String(`/tmp/${fileName}.pdf`)).then(base64 => ({\n        base64,\n        pdfName\n      }));\n    });\n  }\n\n}\n\nmodule.exportDefault(new PDFService());","map":{"version":3,"sources":["imports/core/api/pdf/server/PDFService.js"],"names":["PDF_URL","htmlOnly","type","data","pdfName","options","html","PDF_TYPES","validateLoanPdf","Meteor","structureIds","check","Match","organisationId","organisation","$filters","_id","lenderRules","name","logo","loan","loanId","formatLoanWithPromotion","fileName","Random","component","props","path","file","fs","base64","API_KEY","body","user_credentials","doc","document_content","test","prince_options","media","baseurl","method","headers","JSON","res","dest","stream","resolve"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\nimport { check, Match } from 'meteor/check';\n\nimport fetch from 'node-fetch';\nimport ReactDOMServer from 'react-dom/server';\nimport fs from 'fs';\n\nimport { adminLoans } from '../../loans/queries';\nimport { formatLoanWithPromotion } from '../../../utils/loanFunctions';\nimport { lenderRules } from '../../fragments';\nimport OrganisationService from '../../organisations/server/OrganisationService';\nimport LoanBankPDF from './pdfComponents/LoanBankPDF';\nimport { PDF_TYPES } from '../pdfConstants';\nimport { validateLoanPdf } from './pdfValidators';\n\nconst PDF_URL = 'https://docraptor.com/docs';\n\nclass PDFService {\n  makePDF = ({ type, params, options, htmlOnly }) => {\n    this.checkParams({ params, type });\n    const data = this.getDataForPDF(type, params);\n    this.checkData({ data, type });\n\n    const { component, props, fileName, pdfName } = this.makeConfigForPDF({\n      data,\n      type,\n      options,\n    });\n    const html = this.getComponentAsHTML(component, props, pdfName);\n\n    if (htmlOnly) {\n      return Promise.resolve({ html, pdfName });\n    }\n\n    return this.fetchPDF(html, fileName, pdfName);\n  };\n\n  checkData = ({ data, type }) => {\n    switch (type) {\n    case PDF_TYPES.LOAN: {\n      try {\n        validateLoanPdf(data);\n      } catch (error) {\n        throw new Meteor.Error(error);\n      }\n      break;\n    }\n    default:\n      throw new Meteor.Error(`Invalid pdf type: ${type}`);\n    }\n  };\n\n  checkParams = ({ params, type }) => {\n    switch (type) {\n    case PDF_TYPES.LOAN: {\n      const { loanId, organisationId, structureIds } = params;\n      check(loanId, String);\n      check(organisationId, Match.Maybe(String));\n      check(structureIds, Match.Maybe([String]));\n      break;\n    }\n\n    default:\n      throw new Meteor.Error(`Invalid pdf type: ${type}`);\n    }\n  };\n\n  getDataForPDF = (type, params) => {\n    switch (type) {\n    case PDF_TYPES.LOAN: {\n      const { loanId, organisationId } = params;\n\n      const organisation = organisationId\n          && OrganisationService.fetchOne({\n            $filters: { _id: organisationId },\n            lenderRules: lenderRules(),\n            name: 1,\n            logo: 1,\n          });\n      const loan = adminLoans.clone({ _id: loanId }).fetchOne();\n\n      if (loan.hasPromotion) {\n        return {\n          ...params,\n          loan: formatLoanWithPromotion(loan),\n          organisation,\n        };\n      }\n\n      return { ...params, loan, organisation };\n    }\n    default:\n      throw new Meteor.Error(`Invalid pdf type: ${type}`);\n    }\n  };\n\n  makeConfigForPDF = ({ type, data, options }) => {\n    const fileName = Random.id();\n\n    switch (type) {\n    case PDF_TYPES.LOAN: {\n      const { loan, organisation } = data;\n      return {\n        component: LoanBankPDF,\n        props: { ...data, options },\n        fileName,\n        pdfName: organisation\n          ? `${loan.name} - ${organisation.name}`\n          : loan.name,\n      };\n    }\n    default:\n      throw new Meteor.Error(`Invalid pdf type: ${type}`);\n    }\n  };\n\n  getBase64String = (path) => {\n    const file = fs.readFileSync(path);\n    fs.unlink(path); // Async delete\n    const base64 = new Buffer(file).toString('base64');\n    return base64;\n  };\n\n  getComponentAsHTML = (component, props, pdfName) =>\n    ReactDOMServer.renderToStaticMarkup(component({ ...props, pdfName }));\n\n  fetchPDF = (html, fileName, pdfName) => {\n    const API_KEY = Meteor.settings.DOC_RAPTOR_API_KEY;\n    const body = {\n      user_credentials: API_KEY,\n      doc: {\n        document_content: html,\n        name: pdfName,\n        type: 'pdf',\n        test: !Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment,\n        // help: true,\n        prince_options: { media: 'screen', baseurl: 'https://www.e-potek.ch' },\n      },\n    };\n\n    return fetch(PDF_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    })\n      .then((res) => {\n        const dest = fs.createWriteStream(`/tmp/${fileName}.pdf`);\n        const stream = res.body.pipe(dest);\n        return new Promise((resolve) => {\n          stream.on('finish', resolve);\n        });\n      })\n      .then(() => this.getBase64String(`/tmp/${fileName}.pdf`))\n      .then(base64 => ({ base64, pdfName }));\n  };\n}\n\nexport default new PDFService();\n"]},"sourceType":"script","hash":"41c8c65dfd52ffd35da0e1c4a6e0f31b4a4af0ae"}
