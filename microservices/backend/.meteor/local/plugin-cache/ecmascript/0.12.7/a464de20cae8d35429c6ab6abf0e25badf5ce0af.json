{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/partnerList.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/arrays/partnerList.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/partnerList.js","inputSourceMap":{"version":3,"sources":["imports/core/arrays/partnerList.js"],"names":["partnerList","key","name","logo","cantons","getPartnerList","canton","partnersToAvoid","filteredList","filter","partner","includes","length","forEach","partnerToAvoid","index","splice","getAllPartners"],"mappings":"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","sourcesContent":["export const partnerList = [\n  {\n    key: 'banqueDuLeman',\n    name: 'Banque du Léman',\n    logo: 'banqueDuLeman_logo.png',\n    cantons: ['GE'],\n  },\n  {\n    key: 'creditAgricole',\n    name: 'Crédit Agricole Financements Suisse',\n    logo: 'creditAgricole_logo.png',\n    cantons: ['GE'],\n  },\n  {\n    key: 'KFH',\n    name: 'Kreditanstalt für Hypotheken',\n    logo: 'KFH_logo.png',\n    cantons: ['GE'],\n  },\n  {\n    key: 'allianz',\n    name: 'Allianz Suisse',\n    logo: 'allianz_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'postFinance',\n    name: 'PostFinance',\n    logo: 'postFinance_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'banqueMigros',\n    name: 'Banque Migros',\n    logo: 'banqueMigros_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'vaudoiseAssurances',\n    name: 'Vaudoise Assurances',\n    logo: 'vaudoiseAssurances_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'banqueWir',\n    name: 'Banque Wir',\n    logo: 'banqueWir_logo.png',\n    cantons: ['GE'],\n  },\n  {\n    key: 'raiffeisen',\n    name: 'Raiffeisen',\n    logo: 'raiffeisen_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'valiant',\n    name: 'Valiant',\n    logo: 'valiant_logo.png',\n    cantons: ['GE'],\n  },\n  {\n    key: 'swisslife',\n    name: 'Swisslife',\n    logo: 'swisslife_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'banqueCoop',\n    name: 'Banque Coop',\n    logo: 'banqueCoop_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'baloiseAssurances',\n    name: 'Bâloise Assurances',\n    logo: 'baloiseAssurances_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'helvetia',\n    name: 'Helvetia Assurance',\n    logo: 'helvetia_logo.png',\n    cantons: ['GE'],\n  },\n  {\n    key: 'zurichSuisse',\n    name: 'Zurich Suisse',\n    logo: 'zurichSuisse_logo.png',\n    cantons: ['GE'],\n  },\n];\n\n// Given the canton of the borrower and the partners he wants to avoid, return a list of all the\n// lenders we will potentially contact\nexport const getPartnerList = (canton, partnersToAvoid) => {\n  const filteredList = partnerList.filter(partner =>\n    partner.cantons.includes(canton));\n\n  if (partnersToAvoid && partnersToAvoid.length > 0) {\n    partnersToAvoid.forEach((partnerToAvoid, index) => {\n      if (filteredList[index].key === partnerToAvoid) {\n        filteredList.splice(index, 1);\n      }\n    });\n  }\n\n  return filteredList;\n};\n\nexport const getAllPartners = () => partnerList;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/partnerList.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/arrays/partnerList.js"}},"code":"module.export({\n  partnerList: () => partnerList,\n  getPartnerList: () => getPartnerList,\n  getAllPartners: () => getAllPartners\n});\nconst partnerList = [{\n  key: 'banqueDuLeman',\n  name: 'Banque du Léman',\n  logo: 'banqueDuLeman_logo.png',\n  cantons: ['GE']\n}, {\n  key: 'creditAgricole',\n  name: 'Crédit Agricole Financements Suisse',\n  logo: 'creditAgricole_logo.png',\n  cantons: ['GE']\n}, {\n  key: 'KFH',\n  name: 'Kreditanstalt für Hypotheken',\n  logo: 'KFH_logo.png',\n  cantons: ['GE']\n}, {\n  key: 'allianz',\n  name: 'Allianz Suisse',\n  logo: 'allianz_logo.png',\n  cantons: ['GE', 'VD']\n}, {\n  key: 'postFinance',\n  name: 'PostFinance',\n  logo: 'postFinance_logo.png',\n  cantons: ['GE', 'VD']\n}, {\n  key: 'banqueMigros',\n  name: 'Banque Migros',\n  logo: 'banqueMigros_logo.png',\n  cantons: ['GE', 'VD']\n}, {\n  key: 'vaudoiseAssurances',\n  name: 'Vaudoise Assurances',\n  logo: 'vaudoiseAssurances_logo.png',\n  cantons: ['GE', 'VD']\n}, {\n  key: 'banqueWir',\n  name: 'Banque Wir',\n  logo: 'banqueWir_logo.png',\n  cantons: ['GE']\n}, {\n  key: 'raiffeisen',\n  name: 'Raiffeisen',\n  logo: 'raiffeisen_logo.png',\n  cantons: ['GE', 'VD']\n}, {\n  key: 'valiant',\n  name: 'Valiant',\n  logo: 'valiant_logo.png',\n  cantons: ['GE']\n}, {\n  key: 'swisslife',\n  name: 'Swisslife',\n  logo: 'swisslife_logo.png',\n  cantons: ['GE', 'VD']\n}, {\n  key: 'banqueCoop',\n  name: 'Banque Coop',\n  logo: 'banqueCoop_logo.png',\n  cantons: ['GE', 'VD']\n}, {\n  key: 'baloiseAssurances',\n  name: 'Bâloise Assurances',\n  logo: 'baloiseAssurances_logo.png',\n  cantons: ['GE', 'VD']\n}, {\n  key: 'helvetia',\n  name: 'Helvetia Assurance',\n  logo: 'helvetia_logo.png',\n  cantons: ['GE']\n}, {\n  key: 'zurichSuisse',\n  name: 'Zurich Suisse',\n  logo: 'zurichSuisse_logo.png',\n  cantons: ['GE']\n}];\n\nconst getPartnerList = (canton, partnersToAvoid) => {\n  const filteredList = partnerList.filter(partner => partner.cantons.includes(canton));\n\n  if (partnersToAvoid && partnersToAvoid.length > 0) {\n    partnersToAvoid.forEach((partnerToAvoid, index) => {\n      if (filteredList[index].key === partnerToAvoid) {\n        filteredList.splice(index, 1);\n      }\n    });\n  }\n\n  return filteredList;\n};\n\nconst getAllPartners = () => partnerList;","map":{"version":3,"sources":["imports/core/arrays/partnerList.js"],"names":["partnerList","key","name","logo","cantons","getPartnerList","filteredList","partner","partnersToAvoid","getAllPartners"],"mappings":"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","sourcesContent":["export const partnerList = [\n  {\n    key: 'banqueDuLeman',\n    name: 'Banque du Léman',\n    logo: 'banqueDuLeman_logo.png',\n    cantons: ['GE'],\n  },\n  {\n    key: 'creditAgricole',\n    name: 'Crédit Agricole Financements Suisse',\n    logo: 'creditAgricole_logo.png',\n    cantons: ['GE'],\n  },\n  {\n    key: 'KFH',\n    name: 'Kreditanstalt für Hypotheken',\n    logo: 'KFH_logo.png',\n    cantons: ['GE'],\n  },\n  {\n    key: 'allianz',\n    name: 'Allianz Suisse',\n    logo: 'allianz_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'postFinance',\n    name: 'PostFinance',\n    logo: 'postFinance_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'banqueMigros',\n    name: 'Banque Migros',\n    logo: 'banqueMigros_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'vaudoiseAssurances',\n    name: 'Vaudoise Assurances',\n    logo: 'vaudoiseAssurances_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'banqueWir',\n    name: 'Banque Wir',\n    logo: 'banqueWir_logo.png',\n    cantons: ['GE'],\n  },\n  {\n    key: 'raiffeisen',\n    name: 'Raiffeisen',\n    logo: 'raiffeisen_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'valiant',\n    name: 'Valiant',\n    logo: 'valiant_logo.png',\n    cantons: ['GE'],\n  },\n  {\n    key: 'swisslife',\n    name: 'Swisslife',\n    logo: 'swisslife_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'banqueCoop',\n    name: 'Banque Coop',\n    logo: 'banqueCoop_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'baloiseAssurances',\n    name: 'Bâloise Assurances',\n    logo: 'baloiseAssurances_logo.png',\n    cantons: ['GE', 'VD'],\n  },\n  {\n    key: 'helvetia',\n    name: 'Helvetia Assurance',\n    logo: 'helvetia_logo.png',\n    cantons: ['GE'],\n  },\n  {\n    key: 'zurichSuisse',\n    name: 'Zurich Suisse',\n    logo: 'zurichSuisse_logo.png',\n    cantons: ['GE'],\n  },\n];\n\n// Given the canton of the borrower and the partners he wants to avoid, return a list of all the\n// lenders we will potentially contact\nexport const getPartnerList = (canton, partnersToAvoid) => {\n  const filteredList = partnerList.filter(partner =>\n    partner.cantons.includes(canton));\n\n  if (partnersToAvoid && partnersToAvoid.length > 0) {\n    partnersToAvoid.forEach((partnerToAvoid, index) => {\n      if (filteredList[index].key === partnerToAvoid) {\n        filteredList.splice(index, 1);\n      }\n    });\n  }\n\n  return filteredList;\n};\n\nexport const getAllPartners = () => partnerList;\n"]},"sourceType":"script","hash":"a464de20cae8d35429c6ab6abf0e25badf5ce0af"}
