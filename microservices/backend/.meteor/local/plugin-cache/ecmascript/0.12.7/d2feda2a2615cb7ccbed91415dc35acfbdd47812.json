{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/getUser.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/getUser.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/getUser.js","inputSourceMap":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/getUser.js"],"names":["Meteor","pick","SimpleSchema","getImpersonateUserId","checkQuery","checkAccessToUser","UserService","querySchema","email","type","String","optional","getUserAPI","user","_id","userId","query","impersonateUser","schema","proId","getByEmail","Error"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,SAASC,oBAAT,EAA+BC,UAA/B,EAA2CC,iBAA3C;AACA,OAAOC,WAAP;AAEA,MAAMC,WAAW,GAAG,IAAIL,YAAJ,CAAiB;AACnCM,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAD4B;AAEnC,sBAAoB;AAAEF,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B;AAFe,CAAjB,CAApB;;AAKA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GAAR;AAAyBC,EAAAA;AAAzB,CAAD,KAAsC;AACvD,QAAM;AAAER,IAAAA,KAAF;AAAS,wBAAoBS;AAA7B,MAAiDb,UAAU,CAAC;AAChEY,IAAAA,KADgE;AAEhEE,IAAAA,MAAM,EAAEX;AAFwD,GAAD,CAAjE;AAKA,MAAIY,KAAJ;;AACA,MAAIF,eAAJ,EAAqB;AACnBE,IAAAA,KAAK,GAAGhB,oBAAoB,CAAC;AAAEY,MAAAA,MAAF;AAAUE,MAAAA;AAAV,KAAD,CAA5B;AACD;;AAED,QAAMJ,IAAI,GAAGP,WAAW,CAACc,UAAZ,CAAuBZ,KAAvB,CAAb;;AAEA,MAAI,CAACK,IAAL,EAAW;AACT,UAAM,IAAIb,MAAM,CAACqB,KAAX,CAAkB,oBAAmBb,KAAM,8CAA3C,CAAN;AACD;;AAEDH,EAAAA,iBAAiB,CAAC;AAAEQ,IAAAA,IAAF;AAAQM,IAAAA,KAAK,EAAEA,KAAK,IAAIJ;AAAxB,GAAD,CAAjB;AAEA,SAAOd,IAAI,CAACY,IAAD,EAAO,CAAC,WAAD,EAAc,UAAd,EAA0B,QAA1B,EAAoC,cAApC,CAAP,CAAX;AACD,CApBD;;AAsBA,eAAeD,UAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport pick from 'lodash/pick';\nimport SimpleSchema from 'simpl-schema';\n\nimport { getImpersonateUserId, checkQuery, checkAccessToUser } from './helpers';\nimport UserService from '../../../users/server/UserService';\n\nconst querySchema = new SimpleSchema({\n  email: { type: String, optional: false },\n  'impersonate-user': { type: String, optional: true },\n});\n\nconst getUserAPI = ({ user: { _id: userId }, query }) => {\n  const { email, 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: querySchema,\n  });\n\n  let proId;\n  if (impersonateUser) {\n    proId = getImpersonateUserId({ userId, impersonateUser });\n  }\n\n  const user = UserService.getByEmail(email);\n\n  if (!user) {\n    throw new Meteor.Error(`User with email \"${email}\" not found, or you don't have access to it.`);\n  }\n\n  checkAccessToUser({ user, proId: proId || userId });\n\n  return pick(user, ['firstName', 'lastName', 'emails', 'phoneNumbers']);\n};\n\nexport default getUserAPI;\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/getUser.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/getUser.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet pick;\nmodule.link(\"lodash/pick\", {\n  default(v) {\n    pick = v;\n  }\n\n}, 1);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 2);\nlet getImpersonateUserId, checkQuery, checkAccessToUser;\nmodule.link(\"./helpers\", {\n  getImpersonateUserId(v) {\n    getImpersonateUserId = v;\n  },\n\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  checkAccessToUser(v) {\n    checkAccessToUser = v;\n  }\n\n}, 3);\nlet UserService;\nmodule.link(\"../../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 4);\nconst querySchema = new SimpleSchema({\n  email: {\n    type: String,\n    optional: false\n  },\n  'impersonate-user': {\n    type: String,\n    optional: true\n  }\n});\n\nconst getUserAPI = ({\n  user: {\n    _id: userId\n  },\n  query\n}) => {\n  const {\n    email,\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: querySchema\n  });\n  let proId;\n\n  if (impersonateUser) {\n    proId = getImpersonateUserId({\n      userId,\n      impersonateUser\n    });\n  }\n\n  const user = UserService.getByEmail(email);\n\n  if (!user) {\n    throw new Meteor.Error(`User with email \"${email}\" not found, or you don't have access to it.`);\n  }\n\n  checkAccessToUser({\n    user,\n    proId: proId || userId\n  });\n  return pick(user, ['firstName', 'lastName', 'emails', 'phoneNumbers']);\n};\n\nmodule.exportDefault(getUserAPI);","map":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/getUser.js"],"names":["querySchema","email","type","optional","getUserAPI","user","_id","userId","query","impersonateUser","checkQuery","schema","proId","getImpersonateUserId","UserService","Meteor","checkAccessToUser","pick"],"mappings":"AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,IAAA;AAAA,MAAA,CAAA,IAAA,CAAA,aAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,oBAAA,EAAA,UAAA,EAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,oBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,oBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,mCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAOA,MAAMA,WAAW,GAAG,IAAA,YAAA,CAAiB;AACnCC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,EAAN,MAAA;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAD4B;AAEnC,sBAAoB;AAAED,IAAAA,IAAI,EAAN,MAAA;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B;AAFe,CAAjB,CAApB;;AAKA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GAAR;AAAyBC,EAAAA;AAAzB,CAAD,KAAsC;AACvD,QAAM;AAAA,IAAA,KAAA;AAAS,wBAAoBC;AAA7B,MAAiDC,UAAU,CAAC;AAAA,IAAA,KAAA;AAEhEC,IAAAA,MAAM,EAAEX;AAFwD,GAAD,CAAjE;AAKA,MAAA,KAAA;;AACA,MAAA,eAAA,EAAqB;AACnBY,IAAAA,KAAK,GAAGC,oBAAoB,CAAC;AAAA,MAAA,MAAA;AAAUJ,MAAAA;AAAV,KAAD,CAA5BG;AACD;;AAED,QAAMP,IAAI,GAAGS,WAAW,CAAXA,UAAAA,CAAb,KAAaA,CAAb;;AAEA,MAAI,CAAJ,IAAA,EAAW;AACT,UAAM,IAAIC,MAAM,CAAV,KAAA,CAAkB,oBAAmBd,KAA3C,8CAAM,CAAN;AACD;;AAEDe,EAAAA,iBAAiB,CAAC;AAAA,IAAA,IAAA;AAAQJ,IAAAA,KAAK,EAAEA,KAAK,IAAIL;AAAxB,GAAD,CAAjBS;AAEA,SAAOC,IAAI,CAAA,IAAA,EAAO,CAAA,WAAA,EAAA,UAAA,EAAA,QAAA,EAAlB,cAAkB,CAAP,CAAX;AAnBF,CAAA;;AAZA,MAAA,CAAA,aAAA,CAkCA,UAlCA","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport pick from 'lodash/pick';\nimport SimpleSchema from 'simpl-schema';\n\nimport { getImpersonateUserId, checkQuery, checkAccessToUser } from './helpers';\nimport UserService from '../../../users/server/UserService';\n\nconst querySchema = new SimpleSchema({\n  email: { type: String, optional: false },\n  'impersonate-user': { type: String, optional: true },\n});\n\nconst getUserAPI = ({ user: { _id: userId }, query }) => {\n  const { email, 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: querySchema,\n  });\n\n  let proId;\n  if (impersonateUser) {\n    proId = getImpersonateUserId({ userId, impersonateUser });\n  }\n\n  const user = UserService.getByEmail(email);\n\n  if (!user) {\n    throw new Meteor.Error(`User with email \"${email}\" not found, or you don't have access to it.`);\n  }\n\n  checkAccessToUser({ user, proId: proId || userId });\n\n  return pick(user, ['firstName', 'lastName', 'emails', 'phoneNumbers']);\n};\n\nexport default getUserAPI;\n"]},"sourceType":"script","hash":"d2feda2a2615cb7ccbed91415dc35acfbdd47812"}
