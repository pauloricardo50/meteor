{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/memoizeOne/areInputsEqual.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/utils/memoizeOne/areInputsEqual.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/memoizeOne/areInputsEqual.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/memoizeOne/areInputsEqual.js"],"names":["inputHasChanged","next","prev","some","newInput","index","areInputsEqual","newInputs","lastInputs","length","newArgs","Object","values","lastArgs","oneInputHasChanged"],"mappings":"AAAA;AAEA,MAAMA,eAAe,GAAG,CAACC,IAAD,EAAOC,IAAP,KACtBD,IAAI,CAACE,IAAL,CAAU,CAACC,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,KAAKF,IAAI,CAACG,KAAD,CAAhD,CADF;;AAGA,eAAe,SAASC,cAAT,CACbC,SAAS,EAAE,OADE,EAEbC,UAAU,EAAE,OAFC,EAGb;AACA;AACA,MAAID,SAAS,CAACE,MAAV,KAAqBD,UAAU,CAACC,MAApC,EAA4C;AAC1C,WAAO,KAAP;AACD,GAJD,CAMA;;;AACA,MACEF,SAAS,CAACE,MAAV,KAAqB,CAArB,IACG,OAAOF,SAAS,CAAC,CAAD,CAAhB,KAAwB,QAD3B,IAEG,OAAOC,UAAU,CAAC,CAAD,CAAjB,KAAyB,QAF5B,IAGGD,SAAS,CAAC,CAAD,CAAT,KAAiB,IAHpB,IAIGC,UAAU,CAAC,CAAD,CAAV,KAAkB,IALvB,EAME;AACA,UAAME,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcL,SAAS,CAAC,CAAD,CAAvB,CAAhB;AACA,UAAMM,QAAQ,GAAGF,MAAM,CAACC,MAAP,CAAcJ,UAAU,CAAC,CAAD,CAAxB,CAAjB;;AAEA,QAAIE,OAAO,CAACD,MAAR,KAAmBI,QAAQ,CAACJ,MAAhC,EAAwC;AACtC,aAAO,KAAP;AACD;;AAED,UAAMK,kBAAkB,GAAGd,eAAe,CAACU,OAAD,EAAUG,QAAV,CAA1C;AACA,WAAO,CAACC,kBAAR;AACD;;AAED,QAAMA,kBAAkB,GAAGd,eAAe,CAACO,SAAD,EAAYC,UAAZ,CAA1C;AACA,SAAO,CAACM,kBAAR;AACD","sourcesContent":["// @flow\n\nconst inputHasChanged = (next, prev) =>\n  next.some((newInput, index) => newInput !== prev[index]);\n\nexport default function areInputsEqual(\n  newInputs: mixed[],\n  lastInputs: mixed[],\n) {\n  // no checks needed if the inputs length has changed\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n\n  // Handle memoization for functions with 1 argument which is an object\n  if (\n    newInputs.length === 1\n    && typeof newInputs[0] === 'object'\n    && typeof lastInputs[0] === 'object'\n    && newInputs[0] !== null\n    && lastInputs[0] !== null\n  ) {\n    const newArgs = Object.values(newInputs[0]);\n    const lastArgs = Object.values(lastInputs[0]);\n\n    if (newArgs.length !== lastArgs.length) {\n      return false;\n    }\n\n    const oneInputHasChanged = inputHasChanged(newArgs, lastArgs);\n    return !oneInputHasChanged;\n  }\n\n  const oneInputHasChanged = inputHasChanged(newInputs, lastInputs);\n  return !oneInputHasChanged;\n}\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/memoizeOne/areInputsEqual.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/memoizeOne/areInputsEqual.js"}},"code":"module.export({\n  default: () => areInputsEqual\n});\n\nconst inputHasChanged = (next, prev) => next.some((newInput, index) => newInput !== prev[index]);\n\nfunction areInputsEqual(newInputs, lastInputs) {\n  // no checks needed if the inputs length has changed\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  } // Handle memoization for functions with 1 argument which is an object\n\n\n  if (newInputs.length === 1 && typeof newInputs[0] === 'object' && typeof lastInputs[0] === 'object' && newInputs[0] !== null && lastInputs[0] !== null) {\n    const newArgs = Object.values(newInputs[0]);\n    const lastArgs = Object.values(lastInputs[0]);\n\n    if (newArgs.length !== lastArgs.length) {\n      return false;\n    }\n\n    const oneInputHasChanged = inputHasChanged(newArgs, lastArgs);\n    return !oneInputHasChanged;\n  }\n\n  const oneInputHasChanged = inputHasChanged(newInputs, lastInputs);\n  return !oneInputHasChanged;\n}","map":{"version":3,"sources":["imports/core/utils/memoizeOne/areInputsEqual.js"],"names":["inputHasChanged","next","newInput","prev","newInputs","lastInputs","newArgs","Object","lastArgs","oneInputHasChanged"],"mappings":"AAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,OAAA,EAAA,MAAA;AAAA,CAAA;;AAEA,MAAMA,eAAe,GAAG,CAAA,IAAA,EAAA,IAAA,KACtBC,IAAI,CAAJA,IAAAA,CAAU,CAAA,QAAA,EAAA,KAAA,KAAqBC,QAAQ,KAAKC,IAAI,CADlD,KACkD,CAAhDF,CADF;;AAGe,SAAA,cAAA,CAAA,SAAA,EAAA,UAAA,EAGb;AACA;AACA,MAAIG,SAAS,CAATA,MAAAA,KAAqBC,UAAU,CAAnC,MAAA,EAA4C;AAC1C,WAAA,KAAA;AAHF,GAAA,CAMA;;;AACA,MACED,SAAS,CAATA,MAAAA,KAAAA,CAAAA,IACG,OAAOA,SAAS,CAAhB,CAAgB,CAAhB,KADHA,QAAAA,IAEG,OAAOC,UAAU,CAAjB,CAAiB,CAAjB,KAFHD,QAAAA,IAGGA,SAAS,CAATA,CAAS,CAATA,KAHHA,IAAAA,IAIGC,UAAU,CAAVA,CAAU,CAAVA,KALL,IAAA,EAME;AACA,UAAMC,OAAO,GAAGC,MAAM,CAANA,MAAAA,CAAcH,SAAS,CAAvC,CAAuC,CAAvBG,CAAhB;AACA,UAAMC,QAAQ,GAAGD,MAAM,CAANA,MAAAA,CAAcF,UAAU,CAAzC,CAAyC,CAAxBE,CAAjB;;AAEA,QAAID,OAAO,CAAPA,MAAAA,KAAmBE,QAAQ,CAA/B,MAAA,EAAwC;AACtC,aAAA,KAAA;AACD;;AAED,UAAMC,kBAAkB,GAAGT,eAAe,CAAA,OAAA,EAA1C,QAA0C,CAA1C;AACA,WAAO,CAAP,kBAAA;AACD;;AAED,QAAMS,kBAAkB,GAAGT,eAAe,CAAA,SAAA,EAA1C,UAA0C,CAA1C;AACA,SAAO,CAAP,kBAAA;AACD","sourcesContent":["// @flow\n\nconst inputHasChanged = (next, prev) =>\n  next.some((newInput, index) => newInput !== prev[index]);\n\nexport default function areInputsEqual(\n  newInputs: mixed[],\n  lastInputs: mixed[],\n) {\n  // no checks needed if the inputs length has changed\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n\n  // Handle memoization for functions with 1 argument which is an object\n  if (\n    newInputs.length === 1\n    && typeof newInputs[0] === 'object'\n    && typeof lastInputs[0] === 'object'\n    && newInputs[0] !== null\n    && lastInputs[0] !== null\n  ) {\n    const newArgs = Object.values(newInputs[0]);\n    const lastArgs = Object.values(lastInputs[0]);\n\n    if (newArgs.length !== lastArgs.length) {\n      return false;\n    }\n\n    const oneInputHasChanged = inputHasChanged(newArgs, lastArgs);\n    return !oneInputHasChanged;\n  }\n\n  const oneInputHasChanged = inputHasChanged(newInputs, lastInputs);\n  return !oneInputHasChanged;\n}\n"]},"sourceType":"script","hash":"6d5c33635bb730909d742e212db8ff4b03a62f2f"}
