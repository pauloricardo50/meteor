{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/promotionDemo/promotionDemoFixtures.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/fixtures/promotionDemo/promotionDemoFixtures.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/promotionDemo/promotionDemoFixtures.js","inputSourceMap":{"version":3,"sources":["imports/core/fixtures/promotionDemo/promotionDemoFixtures.js"],"names":["Meteor","Accounts","Roles","range","random","shuffle","faker","LoanService","PromotionService","UserService","PromotionOptionService","PromotionLotService","LotService","LOT_TYPES","PROMOTION_TYPES","PROMOTION_STATUS","ROLES","properties","DEMO_PROMOTION","name","type","SHARE","status","OPEN","address1","zipCode","city","contacts","title","email","phoneNumber","createLots","promotionId","forEach","value","lots","promotionLotId","insertPromotionProperty","property","lotIds","map","lotName","insert","Number","parseInt","PARKING_CAR","BASEMENT","lotId","addLink","id","linkName","linkId","getDistinctRandomValues","arr","amount","slice","addPromotionOptions","loanId","promotion","promotionLotLinks","_id","promotionOptionId","createUsers","users","withInvitedBy","console","log","promises","i","length","user","firstName","lastName","phone","promotionCustomerId","createUser","role","USER","options","password","update","userId","object","phoneNumbers","push","inviteUser","sendInvitation","pro","then","promotionOptionIds","setPromotionPriorityOrder","priorityOrder","Promise","all","createPromotionDemo","addCurrentUser","withPromotionOptions","get"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Roles } from 'meteor/alanning:roles';\nimport range from 'lodash/range';\nimport random from 'lodash/random';\nimport shuffle from 'lodash/shuffle';\nimport faker from 'faker/locale/fr';\n\nimport LoanService from '../../api/loans/server/LoanService';\nimport PromotionService from '../../api/promotions/server/PromotionService';\nimport UserService from '../../api/users/server/UserService';\nimport PromotionOptionService from '../../api/promotionOptions/server/PromotionOptionService';\nimport PromotionLotService from '../../api/promotionLots/server/PromotionLotService';\nimport LotService from '../../api/lots/server/LotService';\nimport {\n  LOT_TYPES,\n  PROMOTION_TYPES,\n  PROMOTION_STATUS,\n  ROLES,\n} from '../../api/constants';\nimport { properties } from './data';\n\nconst DEMO_PROMOTION = {\n  name: 'Pré Polly',\n  type: PROMOTION_TYPES.SHARE,\n  status: PROMOTION_STATUS.OPEN,\n  address1: 'Chemin de Pré-Polly 1',\n  zipCode: 1233,\n  city: 'Bernex',\n  contacts: [\n    {\n      name: 'Marc Steiner',\n      title: 'Commercialisation',\n      email: 'marc@test.com',\n      phoneNumber: '+41 21 800 90 70',\n    },\n    {\n      name: 'Léo Dind',\n      title: 'Architecte',\n      email: 'leo@test.com',\n      phoneNumber: '+41 58 999 21 21',\n    },\n  ],\n};\n\nconst createLots = (promotionId) => {\n  properties.forEach(({ name, value, lots }) => {\n    const promotionLotId = PromotionService.insertPromotionProperty({\n      promotionId,\n      property: { name, value },\n    });\n    const lotIds = lots.map(lotName =>\n      LotService.insert({\n        name: lotName,\n        value: 0,\n        type:\n          Number.parseInt(lotName, 10) > 0\n            ? LOT_TYPES.PARKING_CAR\n            : LOT_TYPES.BASEMENT,\n      }));\n    lotIds.forEach(lotId =>\n      PromotionLotService.addLink({\n        id: promotionLotId,\n        linkName: 'lots',\n        linkId: lotId,\n      }));\n    lotIds.forEach(lotId =>\n      PromotionService.addLink({\n        id: promotionId,\n        linkName: 'lots',\n        linkId: lotId,\n      }));\n  });\n};\n\nconst getDistinctRandomValues = (arr, amount) => shuffle(arr).slice(0, amount);\n\nconst addPromotionOptions = (loanId, promotion) => {\n  const amount = random(1, 3);\n  return getDistinctRandomValues(promotion.promotionLotLinks, amount).map(({ _id: promotionLotId }) => {\n    const promotionOptionId = PromotionOptionService.insert({\n      loanId,\n      promotionLotId,\n    });\n    return promotionOptionId;\n  });\n};\n\nconst createUsers = async ({\n  users,\n  promotionId,\n  promotion,\n  withInvitedBy,\n}) => {\n  console.log('creating users');\n  const promises = [];\n  for (let i = 0; i < range(users).length; i += 1) {\n    console.log(`creating user ${i + 1}`);\n\n    const user = {\n      email: `user-${i}@e-potek.ch`,\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      phoneNumber: faker.phone.phoneNumber(),\n    };\n\n    const promotionCustomerId = UserService.createUser({\n      role: ROLES.USER,\n      options: {\n        email: user.email,\n        password: '12345',\n      },\n    });\n\n    UserService.update({\n      userId: promotionCustomerId,\n      object: {\n        firstName: user.firstName,\n        lastName: user.lastName,\n        phoneNumbers: [user.phoneNumber],\n      },\n    });\n\n    promises.push(PromotionService.inviteUser({\n      promotionId,\n      userId: promotionCustomerId,\n      sendInvitation: false,\n      ...(withInvitedBy ? { pro: { _id: Meteor.userId() } } : {}),\n    }).then((loanId) => {\n      const promotionOptionIds = addPromotionOptions(loanId, promotion);\n      LoanService.setPromotionPriorityOrder({\n        loanId,\n        promotionId,\n        priorityOrder: promotionOptionIds,\n      });\n    }));\n  }\n\n  await Promise.all(promises);\n};\n\nexport const createPromotionDemo = async (\n  userId,\n  addCurrentUser,\n  withPromotionOptions,\n  users,\n  withInvitedBy = false,\n) => {\n  console.log('Creating promotion demo...');\n  const promotionId = PromotionService.insert({\n    promotion: DEMO_PROMOTION,\n    userId,\n  });\n\n  console.log('creating lots');\n  createLots(promotionId);\n\n  const promotion = PromotionService.get(promotionId);\n\n  if (addCurrentUser) {\n    console.log('Adding current user');\n\n    const loanId = await PromotionService.inviteUser({\n      promotionId,\n      userId: Meteor.userId(),\n      sendInvitation: false,\n    });\n    if (withPromotionOptions) {\n      const promotionOptionIds = addPromotionOptions(loanId, promotion);\n      LoanService.setPromotionPriorityOrder({\n        loanId,\n        promotionId,\n        priorityOrder: promotionOptionIds,\n      });\n    }\n  }\n\n  await createUsers({\n    users,\n    promotionId,\n    promotion,\n    withInvitedBy,\n  });\n\n  console.log('Done creating promotion');\n};\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/promotionDemo/promotionDemoFixtures.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/fixtures/promotionDemo/promotionDemoFixtures.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  createPromotionDemo: () => createPromotionDemo\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\nlet Roles;\nmodule.link(\"meteor/alanning:roles\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 2);\nlet range;\nmodule.link(\"lodash/range\", {\n  default(v) {\n    range = v;\n  }\n\n}, 3);\nlet random;\nmodule.link(\"lodash/random\", {\n  default(v) {\n    random = v;\n  }\n\n}, 4);\nlet shuffle;\nmodule.link(\"lodash/shuffle\", {\n  default(v) {\n    shuffle = v;\n  }\n\n}, 5);\nlet faker;\nmodule.link(\"faker/locale/fr\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 6);\nlet LoanService;\nmodule.link(\"../../api/loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 7);\nlet PromotionService;\nmodule.link(\"../../api/promotions/server/PromotionService\", {\n  default(v) {\n    PromotionService = v;\n  }\n\n}, 8);\nlet UserService;\nmodule.link(\"../../api/users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 9);\nlet PromotionOptionService;\nmodule.link(\"../../api/promotionOptions/server/PromotionOptionService\", {\n  default(v) {\n    PromotionOptionService = v;\n  }\n\n}, 10);\nlet PromotionLotService;\nmodule.link(\"../../api/promotionLots/server/PromotionLotService\", {\n  default(v) {\n    PromotionLotService = v;\n  }\n\n}, 11);\nlet LotService;\nmodule.link(\"../../api/lots/server/LotService\", {\n  default(v) {\n    LotService = v;\n  }\n\n}, 12);\nlet LOT_TYPES, PROMOTION_TYPES, PROMOTION_STATUS, ROLES;\nmodule.link(\"../../api/constants\", {\n  LOT_TYPES(v) {\n    LOT_TYPES = v;\n  },\n\n  PROMOTION_TYPES(v) {\n    PROMOTION_TYPES = v;\n  },\n\n  PROMOTION_STATUS(v) {\n    PROMOTION_STATUS = v;\n  },\n\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 13);\nlet properties;\nmodule.link(\"./data\", {\n  properties(v) {\n    properties = v;\n  }\n\n}, 14);\nconst DEMO_PROMOTION = {\n  name: 'Pré Polly',\n  type: PROMOTION_TYPES.SHARE,\n  status: PROMOTION_STATUS.OPEN,\n  address1: 'Chemin de Pré-Polly 1',\n  zipCode: 1233,\n  city: 'Bernex',\n  contacts: [{\n    name: 'Marc Steiner',\n    title: 'Commercialisation',\n    email: 'marc@test.com',\n    phoneNumber: '+41 21 800 90 70'\n  }, {\n    name: 'Léo Dind',\n    title: 'Architecte',\n    email: 'leo@test.com',\n    phoneNumber: '+41 58 999 21 21'\n  }]\n};\n\nconst createLots = promotionId => {\n  properties.forEach(({\n    name,\n    value,\n    lots\n  }) => {\n    const promotionLotId = PromotionService.insertPromotionProperty({\n      promotionId,\n      property: {\n        name,\n        value\n      }\n    });\n    const lotIds = lots.map(lotName => LotService.insert({\n      name: lotName,\n      value: 0,\n      type: Number.parseInt(lotName, 10) > 0 ? LOT_TYPES.PARKING_CAR : LOT_TYPES.BASEMENT\n    }));\n    lotIds.forEach(lotId => PromotionLotService.addLink({\n      id: promotionLotId,\n      linkName: 'lots',\n      linkId: lotId\n    }));\n    lotIds.forEach(lotId => PromotionService.addLink({\n      id: promotionId,\n      linkName: 'lots',\n      linkId: lotId\n    }));\n  });\n};\n\nconst getDistinctRandomValues = (arr, amount) => shuffle(arr).slice(0, amount);\n\nconst addPromotionOptions = (loanId, promotion) => {\n  const amount = random(1, 3);\n  return getDistinctRandomValues(promotion.promotionLotLinks, amount).map(({\n    _id: promotionLotId\n  }) => {\n    const promotionOptionId = PromotionOptionService.insert({\n      loanId,\n      promotionLotId\n    });\n    return promotionOptionId;\n  });\n};\n\nconst createUsers = ({\n  users,\n  promotionId,\n  promotion,\n  withInvitedBy\n}) => Promise.asyncApply(() => {\n  console.log('creating users');\n  const promises = [];\n\n  for (let i = 0; i < range(users).length; i += 1) {\n    console.log(`creating user ${i + 1}`);\n    const user = {\n      email: `user-${i}@e-potek.ch`,\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      phoneNumber: faker.phone.phoneNumber()\n    };\n    const promotionCustomerId = UserService.createUser({\n      role: ROLES.USER,\n      options: {\n        email: user.email,\n        password: '12345'\n      }\n    });\n    UserService.update({\n      userId: promotionCustomerId,\n      object: {\n        firstName: user.firstName,\n        lastName: user.lastName,\n        phoneNumbers: [user.phoneNumber]\n      }\n    });\n    promises.push(PromotionService.inviteUser((0, _objectSpread2.default)({\n      promotionId,\n      userId: promotionCustomerId,\n      sendInvitation: false\n    }, withInvitedBy ? {\n      pro: {\n        _id: Meteor.userId()\n      }\n    } : {})).then(loanId => {\n      const promotionOptionIds = addPromotionOptions(loanId, promotion);\n      LoanService.setPromotionPriorityOrder({\n        loanId,\n        promotionId,\n        priorityOrder: promotionOptionIds\n      });\n    }));\n  }\n\n  Promise.await(Promise.all(promises));\n});\n\nconst createPromotionDemo = (userId, addCurrentUser, withPromotionOptions, users, withInvitedBy = false) => Promise.asyncApply(() => {\n  console.log('Creating promotion demo...');\n  const promotionId = PromotionService.insert({\n    promotion: DEMO_PROMOTION,\n    userId\n  });\n  console.log('creating lots');\n  createLots(promotionId);\n  const promotion = PromotionService.get(promotionId);\n\n  if (addCurrentUser) {\n    console.log('Adding current user');\n    const loanId = Promise.await(PromotionService.inviteUser({\n      promotionId,\n      userId: Meteor.userId(),\n      sendInvitation: false\n    }));\n\n    if (withPromotionOptions) {\n      const promotionOptionIds = addPromotionOptions(loanId, promotion);\n      LoanService.setPromotionPriorityOrder({\n        loanId,\n        promotionId,\n        priorityOrder: promotionOptionIds\n      });\n    }\n  }\n\n  Promise.await(createUsers({\n    users,\n    promotionId,\n    promotion,\n    withInvitedBy\n  }));\n  console.log('Done creating promotion');\n});","map":{"version":3,"sources":["imports/core/fixtures/promotionDemo/promotionDemoFixtures.js"],"names":["Meteor","DEMO_PROMOTION","name","type","PROMOTION_TYPES","status","PROMOTION_STATUS","address1","zipCode","city","contacts","title","email","phoneNumber","createLots","promotionId","properties","lots","promotionLotId","property","value","lotIds","lotName","Number","LOT_TYPES","BASEMENT","lotId","id","linkName","linkId","getDistinctRandomValues","shuffle","addPromotionOptions","amount","random","promotion","_id","promotionOptionId","createUsers","withInvitedBy","console","promises","i","range","user","firstName","faker","lastName","promotionCustomerId","role","ROLES","options","password","UserService","userId","object","phoneNumbers","sendInvitation","pro","loanId","promotionOptionIds","LoanService","priorityOrder","Promise","createPromotionDemo","PromotionService"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Roles } from 'meteor/alanning:roles';\nimport range from 'lodash/range';\nimport random from 'lodash/random';\nimport shuffle from 'lodash/shuffle';\nimport faker from 'faker/locale/fr';\n\nimport LoanService from '../../api/loans/server/LoanService';\nimport PromotionService from '../../api/promotions/server/PromotionService';\nimport UserService from '../../api/users/server/UserService';\nimport PromotionOptionService from '../../api/promotionOptions/server/PromotionOptionService';\nimport PromotionLotService from '../../api/promotionLots/server/PromotionLotService';\nimport LotService from '../../api/lots/server/LotService';\nimport {\n  LOT_TYPES,\n  PROMOTION_TYPES,\n  PROMOTION_STATUS,\n  ROLES,\n} from '../../api/constants';\nimport { properties } from './data';\n\nconst DEMO_PROMOTION = {\n  name: 'Pré Polly',\n  type: PROMOTION_TYPES.SHARE,\n  status: PROMOTION_STATUS.OPEN,\n  address1: 'Chemin de Pré-Polly 1',\n  zipCode: 1233,\n  city: 'Bernex',\n  contacts: [\n    {\n      name: 'Marc Steiner',\n      title: 'Commercialisation',\n      email: 'marc@test.com',\n      phoneNumber: '+41 21 800 90 70',\n    },\n    {\n      name: 'Léo Dind',\n      title: 'Architecte',\n      email: 'leo@test.com',\n      phoneNumber: '+41 58 999 21 21',\n    },\n  ],\n};\n\nconst createLots = (promotionId) => {\n  properties.forEach(({ name, value, lots }) => {\n    const promotionLotId = PromotionService.insertPromotionProperty({\n      promotionId,\n      property: { name, value },\n    });\n    const lotIds = lots.map(lotName =>\n      LotService.insert({\n        name: lotName,\n        value: 0,\n        type:\n          Number.parseInt(lotName, 10) > 0\n            ? LOT_TYPES.PARKING_CAR\n            : LOT_TYPES.BASEMENT,\n      }));\n    lotIds.forEach(lotId =>\n      PromotionLotService.addLink({\n        id: promotionLotId,\n        linkName: 'lots',\n        linkId: lotId,\n      }));\n    lotIds.forEach(lotId =>\n      PromotionService.addLink({\n        id: promotionId,\n        linkName: 'lots',\n        linkId: lotId,\n      }));\n  });\n};\n\nconst getDistinctRandomValues = (arr, amount) => shuffle(arr).slice(0, amount);\n\nconst addPromotionOptions = (loanId, promotion) => {\n  const amount = random(1, 3);\n  return getDistinctRandomValues(promotion.promotionLotLinks, amount).map(({ _id: promotionLotId }) => {\n    const promotionOptionId = PromotionOptionService.insert({\n      loanId,\n      promotionLotId,\n    });\n    return promotionOptionId;\n  });\n};\n\nconst createUsers = async ({\n  users,\n  promotionId,\n  promotion,\n  withInvitedBy,\n}) => {\n  console.log('creating users');\n  const promises = [];\n  for (let i = 0; i < range(users).length; i += 1) {\n    console.log(`creating user ${i + 1}`);\n\n    const user = {\n      email: `user-${i}@e-potek.ch`,\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      phoneNumber: faker.phone.phoneNumber(),\n    };\n\n    const promotionCustomerId = UserService.createUser({\n      role: ROLES.USER,\n      options: {\n        email: user.email,\n        password: '12345',\n      },\n    });\n\n    UserService.update({\n      userId: promotionCustomerId,\n      object: {\n        firstName: user.firstName,\n        lastName: user.lastName,\n        phoneNumbers: [user.phoneNumber],\n      },\n    });\n\n    promises.push(PromotionService.inviteUser({\n      promotionId,\n      userId: promotionCustomerId,\n      sendInvitation: false,\n      ...(withInvitedBy ? { pro: { _id: Meteor.userId() } } : {}),\n    }).then((loanId) => {\n      const promotionOptionIds = addPromotionOptions(loanId, promotion);\n      LoanService.setPromotionPriorityOrder({\n        loanId,\n        promotionId,\n        priorityOrder: promotionOptionIds,\n      });\n    }));\n  }\n\n  await Promise.all(promises);\n};\n\nexport const createPromotionDemo = async (\n  userId,\n  addCurrentUser,\n  withPromotionOptions,\n  users,\n  withInvitedBy = false,\n) => {\n  console.log('Creating promotion demo...');\n  const promotionId = PromotionService.insert({\n    promotion: DEMO_PROMOTION,\n    userId,\n  });\n\n  console.log('creating lots');\n  createLots(promotionId);\n\n  const promotion = PromotionService.get(promotionId);\n\n  if (addCurrentUser) {\n    console.log('Adding current user');\n\n    const loanId = await PromotionService.inviteUser({\n      promotionId,\n      userId: Meteor.userId(),\n      sendInvitation: false,\n    });\n    if (withPromotionOptions) {\n      const promotionOptionIds = addPromotionOptions(loanId, promotion);\n      LoanService.setPromotionPriorityOrder({\n        loanId,\n        promotionId,\n        priorityOrder: promotionOptionIds,\n      });\n    }\n  }\n\n  await createUsers({\n    users,\n    promotionId,\n    promotion,\n    withInvitedBy,\n  });\n\n  console.log('Done creating promotion');\n};\n"]},"sourceType":"script","hash":"8c2978d61b5c0f74a4e8b04dbed27b0a9cd79f1e"}
