{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:mutations/lib/mutation.class.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/cultofcoders:mutations/lib/mutation.class.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:mutations/lib/mutation.class.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:mutations/lib/mutation.class.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:mutations/lib/mutation.class.js"}},"code":"module.export({\n  \"default\": function () {\n    return Mutation;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar AOP;\nmodule.link(\"./aop\", {\n  \"default\": function (v) {\n    AOP = v;\n  }\n}, 1);\nvar check, Match;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 2);\n\nvar Mutation =\n/*#__PURE__*/\nfunction () {\n  function Mutation(config) {\n    Mutation.checkDefaultConfig(config);\n    this.config = config;\n    this.callAOP = new AOP();\n    this.executionAOP = new AOP();\n  }\n  /**\n   * @param {Function} fn\n   */\n\n\n  Mutation.addBeforeCall = function () {\n    function addBeforeCall(fn) {\n      this.callAOP.addBefore(fn);\n    }\n\n    return addBeforeCall;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  Mutation.addAfterCall = function () {\n    function addAfterCall(fn) {\n      this.callAOP.addAfter(fn);\n    }\n\n    return addAfterCall;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  Mutation.addBeforeExecution = function () {\n    function addBeforeExecution(fn) {\n      this.executionAOP.addBefore(fn);\n    }\n\n    return addBeforeExecution;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  Mutation.addAfterExecution = function () {\n    function addAfterExecution(fn) {\n      this.executionAOP.addAfter(fn);\n    }\n\n    return addAfterExecution;\n  }()\n  /**\n   * @param {Object} config\n   */\n  ;\n\n  Mutation.checkDefaultConfig = function () {\n    function checkDefaultConfig(config) {\n      check(config, Object);\n\n      if (typeof config.name !== 'string') {\n        throw new Meteor.Error('invalid-config', 'You must provide a \"name\" property to your mutation config.');\n      }\n    }\n\n    return checkDefaultConfig;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  var _proto = Mutation.prototype;\n\n  _proto.addBeforeCall = function () {\n    function addBeforeCall(fn) {\n      this.callAOP.addBefore(fn);\n    }\n\n    return addBeforeCall;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  _proto.addAfterCall = function () {\n    function addAfterCall(fn) {\n      this.callAOP.addAfter(fn);\n    }\n\n    return addAfterCall;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  _proto.addBeforeExecution = function () {\n    function addBeforeExecution(fn) {\n      this.executionAOP.addBefore(fn);\n    }\n\n    return addBeforeExecution;\n  }()\n  /**\n   * @param {Function} fn\n   */\n  ;\n\n  _proto.addAfterExecution = function () {\n    function addAfterExecution(fn) {\n      this.executionAOP.addAfter(fn);\n    }\n\n    return addAfterExecution;\n  }()\n  /**\n   * Runs the mutation inside a promise\n   * @param {Object} callParams\n   * @param {Object} options Meteor options https://docs.meteor.com/api/methods.html#Meteor-apply\n   * @returns {Promise}\n   */\n  ;\n\n  _proto.run = function () {\n    function run(callParams) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var config = this.config;\n      var aopData = {\n        config: config,\n        params: callParams\n      };\n      Mutation.callAOP.executeBefores(aopData);\n      this.callAOP.executeBefores(aopData);\n      var name = config.name,\n          params = config.params;\n      return new Promise(function (resolve, reject) {\n        Meteor.apply(name, [callParams], options, function (error, result) {\n          var aopData = {\n            config: config,\n            params: callParams,\n            result: result,\n            error: error\n          };\n          Mutation.callAOP.executeAfters(aopData);\n\n          _this.callAOP.executeAfters(aopData);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(result);\n          }\n        });\n      });\n    }\n\n    return run;\n  }()\n  /**\n   * Creates the Meteor Method and the handler for it\n   * @param {Function} fn\n   */\n  ;\n\n  _proto.setHandler = function () {\n    function setHandler(fn) {\n      var _Meteor$methods;\n\n      var config = this.config;\n      var name = config.name,\n          params = config.params;\n      var self = this;\n      Meteor.methods((_Meteor$methods = {}, _Meteor$methods[name] = function () {\n        var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        if (config.params) {\n          check(params, config.params);\n        }\n\n        var aopData = {\n          context: this,\n          config: config,\n          params: params\n        };\n        Mutation.executionAOP.executeBefores(aopData);\n        self.executionAOP.executeBefores(aopData);\n        var error, result;\n\n        try {\n          result = fn.call(null, this, params);\n        } catch (e) {\n          error = e;\n        }\n\n        aopData = {\n          context: this,\n          config: config,\n          params: params,\n          result: result,\n          error: error\n        };\n        Mutation.executionAOP.executeAfters(aopData);\n        self.executionAOP.executeAfters(aopData);\n\n        if (error) {\n          throw error;\n        }\n\n        return result;\n      }, _Meteor$methods));\n    }\n\n    return setHandler;\n  }();\n\n  return Mutation;\n}();\n\nMutation.callAOP = new AOP();\nMutation.executionAOP = new AOP();","map":{"version":3,"sources":["packages/cultofcoders:mutations/lib/mutation.class.js"],"names":["module","export","Mutation","Meteor","link","v","AOP","check","Match","config","checkDefaultConfig","callAOP","executionAOP","addBeforeCall","fn","addBefore","addAfterCall","addAfter","addBeforeExecution","addAfterExecution","Object","name","Error","run","callParams","options","aopData","params","executeBefores","Promise","resolve","reject","apply","error","result","executeAfters","setHandler","self","methods","context","call","e"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport AOP from './aop';\nimport { check, Match } from 'meteor/check';\n\nexport default class Mutation {\n    static callAOP = new AOP();\n    static executionAOP = new AOP();\n\n    constructor(config) {\n        Mutation.checkDefaultConfig(config);\n\n        this.config = config;\n        this.callAOP = new AOP();\n        this.executionAOP = new AOP();\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    static addBeforeCall(fn) {\n        this.callAOP.addBefore(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    static addAfterCall(fn) {\n        this.callAOP.addAfter(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    static addBeforeExecution(fn) {\n        this.executionAOP.addBefore(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    static addAfterExecution(fn) {\n        this.executionAOP.addAfter(fn);\n    }\n\n    /**\n     * @param {Object} config\n     */\n    static checkDefaultConfig(config) {\n        check(config, Object);\n        if (typeof config.name !== 'string') {\n            throw new Meteor.Error(\n                'invalid-config',\n                'You must provide a \"name\" property to your mutation config.'\n            );\n        }\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    addBeforeCall(fn) {\n        this.callAOP.addBefore(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    addAfterCall(fn) {\n        this.callAOP.addAfter(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    addBeforeExecution(fn) {\n        this.executionAOP.addBefore(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    addAfterExecution(fn) {\n        this.executionAOP.addAfter(fn);\n    }\n\n    /**\n     * Runs the mutation inside a promise\n     * @param {Object} callParams\n     * @param {Object} options Meteor options https://docs.meteor.com/api/methods.html#Meteor-apply\n     * @returns {Promise}\n     */\n    run(callParams, options = {}) {\n        const config = this.config;\n\n        const aopData = { config, params: callParams };\n        Mutation.callAOP.executeBefores(aopData);\n        this.callAOP.executeBefores(aopData);\n\n        const { name, params } = config;\n\n        return new Promise((resolve, reject) => {\n            Meteor.apply(name, [callParams], options, (error, result) => {\n                const aopData = {\n                    config,\n                    params: callParams,\n                    result,\n                    error,\n                };\n\n                Mutation.callAOP.executeAfters(aopData);\n                this.callAOP.executeAfters(aopData);\n\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve(result);\n                }\n            });\n        });\n    }\n\n    /**\n     * Creates the Meteor Method and the handler for it\n     * @param {Function} fn\n     */\n    setHandler(fn) {\n        const config = this.config;\n        const { name, params } = config;\n        const self = this;\n\n        Meteor.methods({\n            [name](params = {}) {\n                if (config.params) {\n                    check(params, config.params);\n                }\n\n                let aopData = {\n                    context: this,\n                    config,\n                    params,\n                };\n\n                Mutation.executionAOP.executeBefores(aopData);\n                self.executionAOP.executeBefores(aopData);\n\n                let error, result;\n                try {\n                    result = fn.call(null, this, params);\n                } catch (e) {\n                    error = e;\n                }\n\n                aopData = {\n                    context: this,\n                    config,\n                    params,\n                    result,\n                    error,\n                };\n\n                Mutation.executionAOP.executeAfters(aopData);\n                self.executionAOP.executeAfters(aopData);\n\n                if (error) {\n                    throw error;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n"]},"sourceType":"script","hash":"83da09d10a5cd3b291b0cee5a9543a7018ee41e3"}
