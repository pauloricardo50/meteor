{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/queries/queryHelpers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/queries/queryHelpers.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/queries/queryHelpers.js","inputSourceMap":{"version":3,"sources":["imports/core/api/queries/queryHelpers.js"],"names":["Match","Meteor","Security","QueryCacher","defaultParams","options","allowFilterById","$body","Maybe","Object","limit","Number","skip","$sort","$skip","$limit","_userId","OneOf","String","_id","defaultFilter","filters","params","getValidateParams","validateParams","addSort","body","$options","undefined","sort","addSkip","addLimit","Math","min","addPaginate","$paginate","addOptions","addFilters","embody","$filter","bodyFilter","overrideFilter","args","getEmbody","overrides","customEmbody","Error","getFirewall","userId","firewall","checkUserIsAdmin","exposeQuery","query","resolver","caching","expose","resolve","ttl","getDataToHash","cacher","cacheResults"],"mappings":"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","sourcesContent":["import { Match } from 'meteor/check';\n\nimport { Meteor } from 'meteor/meteor';\nimport Security from '../security';\nimport QueryCacher from '../helpers/server/QueryCacher';\n\nconst defaultParams = (options) => {\n  const { allowFilterById = false } = options;\n  return {\n    $body: Match.Maybe(Object),\n    limit: Match.Maybe(Number),\n    skip: Match.Maybe(Number),\n    $sort: Match.Maybe(Object),\n    $skip: Match.Maybe(Number),\n    $limit: Match.Maybe(Number),\n    _userId: Match.Maybe(Match.OneOf(String, null)),\n    ...(allowFilterById ? { _id: Match.Maybe(String) } : {}),\n  };\n};\n\nconst defaultFilter = options => ({ filters, params: { _id } }) => {\n  const { allowFilterById = false } = options;\n  if (allowFilterById && _id) {\n    filters._id = _id;\n  }\n};\n\nconst getValidateParams = ({ validateParams = {} } = {}, options) => ({\n  ...defaultParams(options),\n  ...validateParams,\n});\n\nconst addSort = (body, params) => {\n  const { $sort } = params;\n  body.$options = {\n    ...body.$options,\n    ...($sort !== undefined ? { sort: $sort } : {}),\n  };\n};\n\nconst addSkip = (body, params) => {\n  const { $skip } = params;\n  if ($skip) {\n    body.$options = { ...body.$options, skip: $skip };\n  }\n};\n\nconst addLimit = (body, params) => {\n  const { $limit } = params;\n  if ($limit) {\n    const { $options: { limit } = {} } = body;\n    body.$options = {\n      ...body.$options,\n      limit: limit ? Math.min($limit, limit) : $limit,\n    };\n  }\n};\n\nconst addPaginate = (body) => {\n  body.$paginate = true;\n};\n\nconst addOptions = (body, params) => {\n  addSort(body, params);\n  addSkip(body, params);\n  addLimit(body, params);\n  addPaginate(body);\n};\n\nconst addFilters = (body, embody, options) => {\n  const { $filter: bodyFilter } = body;\n  const { $filter: overrideFilter } = embody || {};\n\n  body.$filter = (...args) => {\n    if (bodyFilter) {\n      bodyFilter(...args);\n    }\n    if (overrideFilter) {\n      overrideFilter(...args);\n    }\n\n    defaultFilter(options)(...args);\n  };\n};\n\nconst getEmbody = (overrides, options) =>\n  function customEmbody(body, params) {\n    if (overrides.embody) {\n      if (typeof overrides.embody !== 'function') {\n        throw new Meteor.Error('Embody must be a function!');\n      }\n      overrides.embody(body, params);\n    }\n\n    addFilters(body, overrides.embody, options);\n    addOptions(body, params);\n  };\n\nconst getFirewall = (overrides, options) => (userId, params) => {\n  params._userId = userId;\n  if (!overrides.firewall) {\n    Security.checkUserIsAdmin(userId);\n  } else {\n    overrides.firewall(userId, params);\n  }\n};\n\nexport const exposeQuery = ({\n  query,\n  overrides = {},\n  options = {},\n  resolver,\n  caching,\n}) => {\n  query.expose({\n    ...overrides,\n    firewall: getFirewall(overrides, options),\n    embody: getEmbody(overrides, options),\n    validateParams: getValidateParams(overrides, options),\n  });\n\n  if (resolver) {\n    query.resolve(resolver);\n  }\n\n  if (caching) {\n    const { ttl, getDataToHash } = caching;\n    const cacher = new QueryCacher({ ttl, getDataToHash });\n    query.cacheResults(cacher);\n  }\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/queries/queryHelpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/queries/queryHelpers.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  exposeQuery: () => exposeQuery\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Security;\nmodule.link(\"../security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 2);\nlet QueryCacher;\nmodule.link(\"../helpers/server/QueryCacher\", {\n  default(v) {\n    QueryCacher = v;\n  }\n\n}, 3);\n\nconst defaultParams = options => {\n  const {\n    allowFilterById = false\n  } = options;\n  return (0, _objectSpread2.default)({\n    $body: Match.Maybe(Object),\n    limit: Match.Maybe(Number),\n    skip: Match.Maybe(Number),\n    $sort: Match.Maybe(Object),\n    $skip: Match.Maybe(Number),\n    $limit: Match.Maybe(Number),\n    _userId: Match.Maybe(Match.OneOf(String, null))\n  }, allowFilterById ? {\n    _id: Match.Maybe(String)\n  } : {});\n};\n\nconst defaultFilter = options => ({\n  filters,\n  params: {\n    _id\n  }\n}) => {\n  const {\n    allowFilterById = false\n  } = options;\n\n  if (allowFilterById && _id) {\n    filters._id = _id;\n  }\n};\n\nconst getValidateParams = ({\n  validateParams = {}\n} = {}, options) => (0, _objectSpread2.default)({}, defaultParams(options), validateParams);\n\nconst addSort = (body, params) => {\n  const {\n    $sort\n  } = params;\n  body.$options = (0, _objectSpread2.default)({}, body.$options, $sort !== undefined ? {\n    sort: $sort\n  } : {});\n};\n\nconst addSkip = (body, params) => {\n  const {\n    $skip\n  } = params;\n\n  if ($skip) {\n    body.$options = (0, _objectSpread2.default)({}, body.$options, {\n      skip: $skip\n    });\n  }\n};\n\nconst addLimit = (body, params) => {\n  const {\n    $limit\n  } = params;\n\n  if ($limit) {\n    const {\n      $options: {\n        limit\n      } = {}\n    } = body;\n    body.$options = (0, _objectSpread2.default)({}, body.$options, {\n      limit: limit ? Math.min($limit, limit) : $limit\n    });\n  }\n};\n\nconst addPaginate = body => {\n  body.$paginate = true;\n};\n\nconst addOptions = (body, params) => {\n  addSort(body, params);\n  addSkip(body, params);\n  addLimit(body, params);\n  addPaginate(body);\n};\n\nconst addFilters = (body, embody, options) => {\n  const {\n    $filter: bodyFilter\n  } = body;\n  const {\n    $filter: overrideFilter\n  } = embody || {};\n\n  body.$filter = (...args) => {\n    if (bodyFilter) {\n      bodyFilter(...args);\n    }\n\n    if (overrideFilter) {\n      overrideFilter(...args);\n    }\n\n    defaultFilter(options)(...args);\n  };\n};\n\nconst getEmbody = (overrides, options) => function customEmbody(body, params) {\n  if (overrides.embody) {\n    if (typeof overrides.embody !== 'function') {\n      throw new Meteor.Error('Embody must be a function!');\n    }\n\n    overrides.embody(body, params);\n  }\n\n  addFilters(body, overrides.embody, options);\n  addOptions(body, params);\n};\n\nconst getFirewall = (overrides, options) => (userId, params) => {\n  params._userId = userId;\n\n  if (!overrides.firewall) {\n    Security.checkUserIsAdmin(userId);\n  } else {\n    overrides.firewall(userId, params);\n  }\n};\n\nconst exposeQuery = ({\n  query,\n  overrides = {},\n  options = {},\n  resolver,\n  caching\n}) => {\n  query.expose((0, _objectSpread2.default)({}, overrides, {\n    firewall: getFirewall(overrides, options),\n    embody: getEmbody(overrides, options),\n    validateParams: getValidateParams(overrides, options)\n  }));\n\n  if (resolver) {\n    query.resolve(resolver);\n  }\n\n  if (caching) {\n    const {\n      ttl,\n      getDataToHash\n    } = caching;\n    const cacher = new QueryCacher({\n      ttl,\n      getDataToHash\n    });\n    query.cacheResults(cacher);\n  }\n};","map":{"version":3,"sources":["imports/core/api/queries/queryHelpers.js"],"names":["defaultParams","options","allowFilterById","$body","Match","limit","skip","$sort","$skip","$limit","_userId","_id","defaultFilter","params","filters","getValidateParams","validateParams","addSort","body","sort","addSkip","addLimit","$options","Math","addPaginate","addOptions","addFilters","$filter","bodyFilter","overrideFilter","embody","getEmbody","overrides","Meteor","getFirewall","Security","exposeQuery","caching","query","firewall","getDataToHash","cacher"],"mappings":"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","sourcesContent":["import { Match } from 'meteor/check';\n\nimport { Meteor } from 'meteor/meteor';\nimport Security from '../security';\nimport QueryCacher from '../helpers/server/QueryCacher';\n\nconst defaultParams = (options) => {\n  const { allowFilterById = false } = options;\n  return {\n    $body: Match.Maybe(Object),\n    limit: Match.Maybe(Number),\n    skip: Match.Maybe(Number),\n    $sort: Match.Maybe(Object),\n    $skip: Match.Maybe(Number),\n    $limit: Match.Maybe(Number),\n    _userId: Match.Maybe(Match.OneOf(String, null)),\n    ...(allowFilterById ? { _id: Match.Maybe(String) } : {}),\n  };\n};\n\nconst defaultFilter = options => ({ filters, params: { _id } }) => {\n  const { allowFilterById = false } = options;\n  if (allowFilterById && _id) {\n    filters._id = _id;\n  }\n};\n\nconst getValidateParams = ({ validateParams = {} } = {}, options) => ({\n  ...defaultParams(options),\n  ...validateParams,\n});\n\nconst addSort = (body, params) => {\n  const { $sort } = params;\n  body.$options = {\n    ...body.$options,\n    ...($sort !== undefined ? { sort: $sort } : {}),\n  };\n};\n\nconst addSkip = (body, params) => {\n  const { $skip } = params;\n  if ($skip) {\n    body.$options = { ...body.$options, skip: $skip };\n  }\n};\n\nconst addLimit = (body, params) => {\n  const { $limit } = params;\n  if ($limit) {\n    const { $options: { limit } = {} } = body;\n    body.$options = {\n      ...body.$options,\n      limit: limit ? Math.min($limit, limit) : $limit,\n    };\n  }\n};\n\nconst addPaginate = (body) => {\n  body.$paginate = true;\n};\n\nconst addOptions = (body, params) => {\n  addSort(body, params);\n  addSkip(body, params);\n  addLimit(body, params);\n  addPaginate(body);\n};\n\nconst addFilters = (body, embody, options) => {\n  const { $filter: bodyFilter } = body;\n  const { $filter: overrideFilter } = embody || {};\n\n  body.$filter = (...args) => {\n    if (bodyFilter) {\n      bodyFilter(...args);\n    }\n    if (overrideFilter) {\n      overrideFilter(...args);\n    }\n\n    defaultFilter(options)(...args);\n  };\n};\n\nconst getEmbody = (overrides, options) =>\n  function customEmbody(body, params) {\n    if (overrides.embody) {\n      if (typeof overrides.embody !== 'function') {\n        throw new Meteor.Error('Embody must be a function!');\n      }\n      overrides.embody(body, params);\n    }\n\n    addFilters(body, overrides.embody, options);\n    addOptions(body, params);\n  };\n\nconst getFirewall = (overrides, options) => (userId, params) => {\n  params._userId = userId;\n  if (!overrides.firewall) {\n    Security.checkUserIsAdmin(userId);\n  } else {\n    overrides.firewall(userId, params);\n  }\n};\n\nexport const exposeQuery = ({\n  query,\n  overrides = {},\n  options = {},\n  resolver,\n  caching,\n}) => {\n  query.expose({\n    ...overrides,\n    firewall: getFirewall(overrides, options),\n    embody: getEmbody(overrides, options),\n    validateParams: getValidateParams(overrides, options),\n  });\n\n  if (resolver) {\n    query.resolve(resolver);\n  }\n\n  if (caching) {\n    const { ttl, getDataToHash } = caching;\n    const cacher = new QueryCacher({ ttl, getDataToHash });\n    query.cacheResults(cacher);\n  }\n};\n"]},"sourceType":"script","hash":"78ca04b51e1cd1bd3ae0bc337df9c35106e90a54"}
