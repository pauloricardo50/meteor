{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingSection/financingSectionHelpers.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/Financing/client/FinancingSection/financingSectionHelpers.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingSection/financingSectionHelpers.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/Financing/client/FinancingSection/financingSectionHelpers.jsx"],"names":["React","cx","makeFilterConfig","structures","condition","renderArray","configArray","sectionProps","structureId","filter","map","Component","id","props","makeRenderSummary","structure","makeRenderDetail","noWrapper"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAO,MAAMC,gBAAgB,GAAGC,UAAU,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAC/D,MAAI,CAACA,SAAL,EAAgB;AACd;AACA,WAAO,IAAP;AACD;;AACD,MAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AACnC,WAAOA,SAAS,CAACD,UAAD,CAAhB;AACD;;AACD,SAAO,CAAC,CAACC,SAAT;AACD,CATM;;AAWP,MAAMC,WAAW,GAAG,CAACC,WAAD,EAAcC,YAAd,EAA4BC,WAA5B,KAClBF,WAAW,CACRG,MADH,CACUP,gBAAgB,CAACK,YAAD,CAD1B,EAEGG,GAFH,CAEO,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,EAAb;AAAiB,KAAGC;AAApB,CAAD,KACFF,SAAS,GACR,CAAC,SAAD,CACE,IAAI,CAACC,EAAD,CADN,CAEE,YAAY,CAACJ,WAAD,CAFd,CAGE,GAAG,CAACI,EAAD,CAHL,CAIE,UAAU,CAACA,EAAD,CAJZ,CAKE,IAAIL,YAAJ,CALF,CAME,IAAIM,KAAJ,CANF,GADQ,GAUR,CAAC,GAAD,CAAK,UAAU,CAACZ,EAAE,CAAC,YAAD,EAAeW,EAAf,CAAH,CAAf,CAAsC,IAAI,CAACA,EAAD,CAA1C,GAbN,CADF;;AAiBA,OAAO,MAAME,iBAAiB,GAAGR,WAAW,IAAI,CAACS,SAAD,EAAYR,YAAZ,KAA6B;AAC3E,QAAM;AAAEK,IAAAA,EAAE,EAAEJ;AAAN,MAAsBO,SAA5B;AAEA,SACE,CAAC,GAAD,CAAK,UAAU,WAAf,CAA2B,IAAI,CAACP,WAAD,CAA/B;MACE,CAACH,WAAW,CAACC,WAAD,EAAc,EAAE,GAAGC,YAAL;AAAmBQ,MAAAA;AAAnB,KAAd,EAA8CP,WAA9C,CAAZ;IACF,EAAE,GAAF,CAHF;AAKD,CARM;AAUP,OAAO,MAAMQ,gBAAgB,GAAG,CAACV,WAAD,EAAcW,SAAd,KAA4B,CAC1DF,SAD0D,EAE1DR,YAF0D,KAGvD;AACH,QAAM;AAAEK,IAAAA,EAAE,EAAEJ;AAAN,MAAsBO,SAA5B;;AACA,MAAIE,SAAJ,EAAe;AACb,WACE,CAAC,GAAD,CAAK,UAAU,WAAf,CAA2B,IAAI,CAACT,WAAD,CAA/B;QACE,CAACH,WAAW,CAACC,WAAD,EAAc,EAAE,GAAGC,YAAL;AAAmBQ,QAAAA;AAAnB,OAAd,EAA8CP,WAA9C,CAAZ;MACF,EAAE,GAAF,CAHF;AAKD;;AACD,SACE,CAAC,GAAD,CAAK,UAAU,WAAf,CAA2B,IAAI,CAACA,WAAD,CAA/B;MACE,CAAC,IAAD,CAAM,UAAU,OAAhB;QACE,CAACH,WAAW,CAACC,WAAD,EAAc,EAAE,GAAGC,YAAL;AAAmBQ,QAAAA;AAAnB,OAAd,EAA8CP,WAA9C,CAAZ;MACF,EAAE,IAAF;IACF,EAAE,GAAF,CALF;AAOD,CAnBM","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nexport const makeFilterConfig = structures => ({ condition }) => {\n  if (!condition) {\n    // Render components without condition property\n    return true;\n  }\n  if (typeof condition === 'function') {\n    return condition(structures);\n  }\n  return !!condition;\n};\n\nconst renderArray = (configArray, sectionProps, structureId) =>\n  configArray\n    .filter(makeFilterConfig(sectionProps))\n    .map(({ Component, id, ...props }) =>\n      (Component ? (\n        <Component\n          key={id}\n          structureId={structureId}\n          id={id}\n          className={id}\n          {...sectionProps}\n          {...props}\n        />\n      ) : (\n        <div className={cx('empty-line', id)} key={id} />\n      )));\n\nexport const makeRenderSummary = configArray => (structure, sectionProps) => {\n  const { id: structureId } = structure;\n\n  return (\n    <div className=\"structure\" key={structureId}>\n      {renderArray(configArray, { ...sectionProps, structure }, structureId)}\n    </div>\n  );\n};\n\nexport const makeRenderDetail = (configArray, noWrapper) => (\n  structure,\n  sectionProps,\n) => {\n  const { id: structureId } = structure;\n  if (noWrapper) {\n    return (\n      <div className=\"structure\" key={structureId}>\n        {renderArray(configArray, { ...sectionProps, structure }, structureId)}\n      </div>\n    );\n  }\n  return (\n    <div className=\"structure\" key={structureId}>\n      <span className=\"card1\">\n        {renderArray(configArray, { ...sectionProps, structure }, structureId)}\n      </span>\n    </div>\n  );\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingSection/financingSectionHelpers.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Financing/client/FinancingSection/financingSectionHelpers.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  makeFilterConfig: () => makeFilterConfig,\n  makeRenderSummary: () => makeRenderSummary,\n  makeRenderDetail: () => makeRenderDetail\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet cx;\nmodule.link(\"classnames\", {\n  default(v) {\n    cx = v;\n  }\n\n}, 1);\n\nconst makeFilterConfig = structures => (_ref) => {\n  let {\n    condition\n  } = _ref;\n\n  if (!condition) {\n    // Render components without condition property\n    return true;\n  }\n\n  if (typeof condition === 'function') {\n    return condition(structures);\n  }\n\n  return !!condition;\n};\n\nconst renderArray = (configArray, sectionProps, structureId) => configArray.filter(makeFilterConfig(sectionProps)).map((_ref2) => {\n  let {\n    Component,\n    id\n  } = _ref2,\n      props = (0, _objectWithoutProperties2.default)(_ref2, [\"Component\", \"id\"]);\n  return Component ? React.createElement(Component, (0, _extends2.default)({\n    key: id,\n    structureId: structureId,\n    id: id,\n    className: id\n  }, sectionProps, props)) : React.createElement(\"div\", {\n    className: cx('empty-line', id),\n    key: id\n  });\n});\n\nconst makeRenderSummary = configArray => (structure, sectionProps) => {\n  const {\n    id: structureId\n  } = structure;\n  return React.createElement(\"div\", {\n    className: \"structure\",\n    key: structureId\n  }, renderArray(configArray, (0, _objectSpread2.default)({}, sectionProps, {\n    structure\n  }), structureId));\n};\n\nconst makeRenderDetail = (configArray, noWrapper) => (structure, sectionProps) => {\n  const {\n    id: structureId\n  } = structure;\n\n  if (noWrapper) {\n    return React.createElement(\"div\", {\n      className: \"structure\",\n      key: structureId\n    }, renderArray(configArray, (0, _objectSpread2.default)({}, sectionProps, {\n      structure\n    }), structureId));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"structure\",\n    key: structureId\n  }, React.createElement(\"span\", {\n    className: \"card1\"\n  }, renderArray(configArray, (0, _objectSpread2.default)({}, sectionProps, {\n    structure\n  }), structureId)));\n};","map":{"version":3,"sources":["imports/core/components/Financing/client/FinancingSection/financingSectionHelpers.jsx"],"names":["makeFilterConfig","structures","condition","renderArray","configArray","props","Component","cx","makeRenderSummary","id","structureId","structure","makeRenderDetail"],"mappings":";;;;;;;;AAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,gBAAA,EAAA,MAAA,gBAAA;AAAA,EAAA,iBAAA,EAAA,MAAA,iBAAA;AAAA,EAAA,gBAAA,EAAA,MAAA;AAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,EAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,EAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAGO,MAAMA,gBAAgB,GAAGC,UAAU,IAAI,UAAmB;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;;AAC/D,MAAI,CAAJ,SAAA,EAAgB;AACd;AACA,WAAA,IAAA;AACD;;AACD,MAAI,OAAA,SAAA,KAAJ,UAAA,EAAqC;AACnC,WAAOA,SAAS,CAAhB,UAAgB,CAAhB;AACD;;AACD,SAAO,CAAC,CAAR,SAAA;AARK,CAAA;;AAWP,MAAMC,WAAW,GAAG,CAAA,WAAA,EAAA,YAAA,EAAA,WAAA,KAClBC,WAAW,CAAXA,MAAAA,CACUJ,gBAAgB,CAD1BI,YAC0B,CAD1BA,EAAAA,GAAAA,CAEO;AAAA,MAAC;AAAA,IAAA,SAAA;AAAA,IAAA;AAAA,GAAD;AAAA,MAAqBC,KAArB;AAAA,SACFC,SAAS,GACR,oBAAA,SAAA;AACE,IAAA,GAAA,EADF,EAAA;AAEE,IAAA,WAAA,EAFF,WAAA;AAGE,IAAA,EAAA,EAHF,EAAA;AAIE,IAAA,SAAA,EAJF;AAAA,KAAA,YAAA,EADQ,KACR,EADQ,GAUR;AAAK,IAAA,SAAA,EAAWC,EAAE,CAAA,YAAA,EAAlB,EAAkB,CAAlB;AAAsC,IAAA,GAAA,EAd9C;AAcQ,IAXC;AAAA,CAFPH,CADF;;AAiBO,MAAMI,iBAAiB,GAAGJ,WAAW,IAAI,CAAA,SAAA,EAAA,YAAA,KAA6B;AAC3E,QAAM;AAAEK,IAAAA,EAAE,EAAEC;AAAN,MAAN,SAAA;AAEA,SACE;AAAK,IAAA,SAAA,EAAL,WAAA;AAA2B,IAAA,GAAA,EAA3B;AAAA,KACGP,WAAW,CAAA,WAAA,kCAAc,YAAd;AAAiCQ,IAAAA;AAAjC,MAAZ,WAAY,CADd,CADF;AAHK,CAAA;;AAUA,MAAMC,gBAAgB,GAAG,CAAA,WAAA,EAAA,SAAA,KAA4B,CAAA,SAAA,EAAA,YAAA,KAGvD;AACH,QAAM;AAAEH,IAAAA,EAAE,EAAEC;AAAN,MAAN,SAAA;;AACA,MAAA,SAAA,EAAe;AACb,WACE;AAAK,MAAA,SAAA,EAAL,WAAA;AAA2B,MAAA,GAAA,EAA3B;AAAA,OACGP,WAAW,CAAA,WAAA,kCAAc,YAAd;AAAiCQ,MAAAA;AAAjC,QAAZ,WAAY,CADd,CADF;AAKD;;AACD,SACE;AAAK,IAAA,SAAA,EAAL,WAAA;AAA2B,IAAA,GAAA,EAA3B;AAAA,KACE;AAAM,IAAA,SAAA,EAAN;AAAA,KACGR,WAAW,CAAA,WAAA,kCAAc,YAAd;AAAiCQ,IAAAA;AAAjC,MAAZ,WAAY,CADd,CADF,CADF;AAZK,CAAA","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nexport const makeFilterConfig = structures => ({ condition }) => {\n  if (!condition) {\n    // Render components without condition property\n    return true;\n  }\n  if (typeof condition === 'function') {\n    return condition(structures);\n  }\n  return !!condition;\n};\n\nconst renderArray = (configArray, sectionProps, structureId) =>\n  configArray\n    .filter(makeFilterConfig(sectionProps))\n    .map(({ Component, id, ...props }) =>\n      (Component ? (\n        <Component\n          key={id}\n          structureId={structureId}\n          id={id}\n          className={id}\n          {...sectionProps}\n          {...props}\n        />\n      ) : (\n        <div className={cx('empty-line', id)} key={id} />\n      )));\n\nexport const makeRenderSummary = configArray => (structure, sectionProps) => {\n  const { id: structureId } = structure;\n\n  return (\n    <div className=\"structure\" key={structureId}>\n      {renderArray(configArray, { ...sectionProps, structure }, structureId)}\n    </div>\n  );\n};\n\nexport const makeRenderDetail = (configArray, noWrapper) => (\n  structure,\n  sectionProps,\n) => {\n  const { id: structureId } = structure;\n  if (noWrapper) {\n    return (\n      <div className=\"structure\" key={structureId}>\n        {renderArray(configArray, { ...sectionProps, structure }, structureId)}\n      </div>\n    );\n  }\n  return (\n    <div className=\"structure\" key={structureId}>\n      <span className=\"card1\">\n        {renderArray(configArray, { ...sectionProps, structure }, structureId)}\n      </span>\n    </div>\n  );\n};\n"]},"sourceType":"script","hash":"d07dba4c3569b79c1de08e40719175a5c5fd3f2a"}
