{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/borrowers/queries.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/api/borrowers/queries.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/borrowers/queries.js","inputSourceMap":{"version":3,"sources":["imports/core/api/borrowers/queries.js"],"names":["createRegexQuery","generateMatchAnyWordRegexp","adminBorrower","BORROWER_QUERIES","Borrowers","adminBorrowers","createQuery","ADMIN_BORROWERS","scoped","borrowerSearch","BORROWER_SEARCH","$filter","filters","params","searchQuery","formattedSearchQuery","$or","$and","name","createdAt","updatedAt","$options","sort","limit"],"mappings":"AAAA,SACEA,gBADF,EAEEC,0BAFF;AAIA,SAASC,aAAT;AACA,SAASC,gBAAT;AACA,OAAOC,SAAP,MAAsB,GAAtB;AAEA,OAAO,MAAMC,cAAc,GAAGD,SAAS,CAACE,WAAV,CAC5BH,gBAAgB,CAACI,eADW,EAE5BL,aAAa,EAFe,EAG5B;AAAEM,EAAAA,MAAM,EAAE;AAAV,CAH4B,CAAvB;AAMP,OAAO,MAAMC,cAAc,GAAGL,SAAS,CAACE,WAAV,CAC5BH,gBAAgB,CAACO,eADW,EAE5B;AACEC,EAAAA,OAAO,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAnB,GAAD,EAAuC;AAC5C;AACA;AACA,UAAMC,oBAAoB,GAAGd,0BAA0B,CAACa,WAAD,CAAvD;AAEAF,IAAAA,OAAO,CAACI,GAAR,GAAc,CACZhB,gBAAgB,CAAC,KAAD,EAAQc,WAAR,CADJ,EAEZd,gBAAgB,CAAC,WAAD,EAAcc,WAAd,CAFJ,EAGZd,gBAAgB,CAAC,UAAD,EAAac,WAAb,CAHJ,EAIZ;AACEG,MAAAA,IAAI,EAAE,CACJjB,gBAAgB,CAAC,WAAD,EAAce,oBAAd,CADZ,EAEJf,gBAAgB,CAAC,UAAD,EAAae,oBAAb,CAFZ;AADR,KAJY,CAAd;AAWD,GAjBH;;AAkBEG,EAAAA,IAAI,EAAE,CAlBR;AAmBEC,EAAAA,SAAS,EAAE,CAnBb;AAoBEC,EAAAA,SAAS,EAAE,CApBb;AAqBEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAEH,MAAAA,SAAS,EAAE,CAAC;AAAd,KAAR;AAA2BI,IAAAA,KAAK,EAAE;AAAlC;AArBZ,CAF4B,CAAvB","sourcesContent":["import {\n  createRegexQuery,\n  generateMatchAnyWordRegexp,\n} from '../helpers/mongoHelpers';\nimport { adminBorrower } from '../fragments';\nimport { BORROWER_QUERIES } from './borrowerConstants';\nimport Borrowers from '.';\n\nexport const adminBorrowers = Borrowers.createQuery(\n  BORROWER_QUERIES.ADMIN_BORROWERS,\n  adminBorrower(),\n  { scoped: true },\n);\n\nexport const borrowerSearch = Borrowers.createQuery(\n  BORROWER_QUERIES.BORROWER_SEARCH,\n  {\n    $filter({ filters, params: { searchQuery } }) {\n      // the following method forces one word to be found in lastname field\n      // and one word in firstName field.\n      const formattedSearchQuery = generateMatchAnyWordRegexp(searchQuery);\n\n      filters.$or = [\n        createRegexQuery('_id', searchQuery),\n        createRegexQuery('firstName', searchQuery),\n        createRegexQuery('lastName', searchQuery),\n        {\n          $and: [\n            createRegexQuery('firstName', formattedSearchQuery),\n            createRegexQuery('lastName', formattedSearchQuery),\n          ],\n        },\n      ];\n    },\n    name: 1,\n    createdAt: 1,\n    updatedAt: 1,\n    $options: { sort: { createdAt: -1 }, limit: 5 },\n  },\n);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/borrowers/queries.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/borrowers/queries.js"}},"code":"module.export({\n  adminBorrowers: function () {\n    return adminBorrowers;\n  },\n  borrowerSearch: function () {\n    return borrowerSearch;\n  }\n});\nvar createRegexQuery, generateMatchAnyWordRegexp;\nmodule.link(\"../helpers/mongoHelpers\", {\n  createRegexQuery: function (v) {\n    createRegexQuery = v;\n  },\n  generateMatchAnyWordRegexp: function (v) {\n    generateMatchAnyWordRegexp = v;\n  }\n}, 0);\nvar adminBorrower;\nmodule.link(\"../fragments\", {\n  adminBorrower: function (v) {\n    adminBorrower = v;\n  }\n}, 1);\nvar BORROWER_QUERIES;\nmodule.link(\"./borrowerConstants\", {\n  BORROWER_QUERIES: function (v) {\n    BORROWER_QUERIES = v;\n  }\n}, 2);\nvar Borrowers;\nmodule.link(\".\", {\n  \"default\": function (v) {\n    Borrowers = v;\n  }\n}, 3);\nvar adminBorrowers = Borrowers.createQuery(BORROWER_QUERIES.ADMIN_BORROWERS, adminBorrower(), {\n  scoped: true\n});\nvar borrowerSearch = Borrowers.createQuery(BORROWER_QUERIES.BORROWER_SEARCH, {\n  $filter: function (_ref) {\n    var filters = _ref.filters,\n        searchQuery = _ref.params.searchQuery;\n    // the following method forces one word to be found in lastname field\n    // and one word in firstName field.\n    var formattedSearchQuery = generateMatchAnyWordRegexp(searchQuery);\n    filters.$or = [createRegexQuery('_id', searchQuery), createRegexQuery('firstName', searchQuery), createRegexQuery('lastName', searchQuery), {\n      $and: [createRegexQuery('firstName', formattedSearchQuery), createRegexQuery('lastName', formattedSearchQuery)]\n    }];\n  },\n  name: 1,\n  createdAt: 1,\n  updatedAt: 1,\n  $options: {\n    sort: {\n      createdAt: -1\n    },\n    limit: 5\n  }\n});","map":{"version":3,"sources":["imports/core/api/borrowers/queries.js"],"names":["createRegexQuery","generateMatchAnyWordRegexp","adminBorrowers","BORROWER_QUERIES","adminBorrower","scoped","borrowerSearch","$filter","params","searchQuery","formattedSearchQuery","filters","$and","name","createdAt","updatedAt","$options","sort","limit"],"mappings":"AAAA,MAAA,CAAA,MAAA,CACEA;AADF,EAAA,cAEEC,EAAAA;AAAAA,WAAAA,cAAAA;AAAAA,GADAD;AADF,EAAA,cAAA,EAAA;AAAA,WAAA,cAAA;AAAA;AACEA,CADF;AAAA,IAAA,gBAAA,EAAA,0BAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AAAA,EAAA,gBAAA,YAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA,GAAA;AAAA,EAAA,0BAAA,YAAA,CAAA,EAAA;AAAA,IAAA,0BAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,aAAA,YAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,qBAAA,EAAA;AAAA,EAAA,gBAAA,YAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,GAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAQO,IAAME,cAAc,GAAG,SAAS,CAAT,WAAA,CAC5BC,gBAAgB,CADY,eAAA,EAE5BC,aAF4B,EAAA,EAG5B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAH4B,CAAvB;AAMA,IAAMC,cAAc,GAAG,SAAS,CAAT,WAAA,CAC5BH,gBAAgB,CADY,eAAA,EAE5B;AACEI,EAAAA,OADF,kBACgD;AAAA,QAAtC,OAAsC,QAAtC,OAAsC;AAAA,QAAjBE,WAAiB,QAA3BD,MAA2B,CAAjBC,WAAiB;AAC5C;AACA;AACA,QAAMC,oBAAoB,GAAGT,0BAA0B,CAAvD,WAAuD,CAAvD;AAEAU,IAAAA,OAAO,CAAPA,GAAAA,GAAc,CACZX,gBAAgB,CAAA,KAAA,EADJ,WACI,CADJ,EAEZA,gBAAgB,CAAA,WAAA,EAFJ,WAEI,CAFJ,EAGZA,gBAAgB,CAAA,UAAA,EAHJ,WAGI,CAHJ,EAIZ;AACEY,MAAAA,IAAI,EAAE,CACJZ,gBAAgB,CAAA,WAAA,EADZ,oBACY,CADZ,EAEJA,gBAAgB,CAAA,UAAA,EAFZ,oBAEY,CAFZ;AADR,KAJY,CAAdW;AANJ,GAAA;AAkBEE,EAAAA,IAAI,EAlBN,CAAA;AAmBEC,EAAAA,SAAS,EAnBX,CAAA;AAoBEC,EAAAA,SAAS,EApBX,CAAA;AAqBEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAEH,MAAAA,SAAS,EAAE,CAAC;AAAd,KAAR;AAA2BI,IAAAA,KAAK,EAAE;AAAlC;AArBZ,CAF4B,CAAvB","sourcesContent":["import {\n  createRegexQuery,\n  generateMatchAnyWordRegexp,\n} from '../helpers/mongoHelpers';\nimport { adminBorrower } from '../fragments';\nimport { BORROWER_QUERIES } from './borrowerConstants';\nimport Borrowers from '.';\n\nexport const adminBorrowers = Borrowers.createQuery(\n  BORROWER_QUERIES.ADMIN_BORROWERS,\n  adminBorrower(),\n  { scoped: true },\n);\n\nexport const borrowerSearch = Borrowers.createQuery(\n  BORROWER_QUERIES.BORROWER_SEARCH,\n  {\n    $filter({ filters, params: { searchQuery } }) {\n      // the following method forces one word to be found in lastname field\n      // and one word in firstName field.\n      const formattedSearchQuery = generateMatchAnyWordRegexp(searchQuery);\n\n      filters.$or = [\n        createRegexQuery('_id', searchQuery),\n        createRegexQuery('firstName', searchQuery),\n        createRegexQuery('lastName', searchQuery),\n        {\n          $and: [\n            createRegexQuery('firstName', formattedSearchQuery),\n            createRegexQuery('lastName', formattedSearchQuery),\n          ],\n        },\n      ];\n    },\n    name: 1,\n    createdAt: 1,\n    updatedAt: 1,\n    $options: { sort: { createdAt: -1 }, limit: 5 },\n  },\n);\n"]},"sourceType":"script","hash":"dff615146a87f5aec8c75ac0e41f39bc06902522"}
