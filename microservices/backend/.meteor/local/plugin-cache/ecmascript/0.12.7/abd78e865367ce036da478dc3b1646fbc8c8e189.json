{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/notifications/server/test/queries.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/notifications/server/test/queries.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/notifications/server/test/queries.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/notifications/server/test/queries.test.js"],"names":["expect","resetDatabase","adminNotifications","generator","describe","beforeEach","USER_ID","getNotifications","clone","userId","unread","fetch","it","users","_id","notifications","recipientLinks","length","to","equal","read","date","Date","setHours","getHours","snoozeDate"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { adminNotifications } from '../../queries';\nimport generator from '../../../factories/index';\nimport '../exposures';\n\ndescribe('adminNotifications', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  const USER_ID = 'a';\n  const getNotifications = () =>\n    adminNotifications.clone({ userId: USER_ID, unread: true }).fetch();\n\n  it('fetches the latest notifications for one user', () => {\n    generator({\n      users: { _id: USER_ID },\n      notifications: [\n        { _id: '1', recipientLinks: [{ _id: USER_ID }] },\n        { _id: '2', recipientLinks: [{ _id: 'b' }] },\n      ],\n    });\n\n    const notifications = getNotifications();\n    expect(notifications.length).to.equal(1);\n    expect(notifications[0]._id).to.equal('1');\n  });\n\n  it('does not fetch read notifications', () => {\n    generator({\n      users: { _id: USER_ID },\n      notifications: [\n        { _id: '1', recipientLinks: [{ _id: USER_ID }] },\n        { _id: '2', recipientLinks: [{ _id: USER_ID, read: true }] },\n      ],\n    });\n\n    const notifications = getNotifications();\n    expect(notifications.length).to.equal(1);\n    expect(notifications[0]._id).to.equal('1');\n  });\n\n  it('does not fetch snoozed notifications', () => {\n    const date = new Date();\n    date.setHours(date.getHours() + 1);\n\n    generator({\n      users: { _id: USER_ID },\n      notifications: [\n        { _id: '1', recipientLinks: [{ _id: USER_ID }] },\n        {\n          _id: '2',\n          recipientLinks: [{ _id: USER_ID, snoozeDate: date }],\n        },\n      ],\n    });\n\n    const notifications = getNotifications();\n    expect(notifications.length).to.equal(1);\n    expect(notifications[0]._id).to.equal('1');\n  });\n\n  it('does fetch snoozed notifications from the past', () => {\n    const date = new Date();\n    date.setHours(date.getHours() - 1);\n\n    generator({\n      users: { _id: USER_ID },\n      notifications: [\n        { _id: '1', recipientLinks: [{ _id: USER_ID }] },\n        {\n          _id: '2',\n          recipientLinks: [{ _id: USER_ID, snoozeDate: date }],\n        },\n      ],\n    });\n\n    const notifications = getNotifications();\n    expect(notifications.length).to.equal(2);\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/notifications/server/test/queries.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/notifications/server/test/queries.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 1);\nlet adminNotifications;\nmodule.link(\"../../queries\", {\n  adminNotifications(v) {\n    adminNotifications = v;\n  }\n\n}, 2);\nlet generator;\nmodule.link(\"../../../factories/index\", {\n  default(v) {\n    generator = v;\n  }\n\n}, 3);\nmodule.link(\"../exposures\");\ndescribe('adminNotifications', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n  const USER_ID = 'a';\n\n  const getNotifications = () => adminNotifications.clone({\n    userId: USER_ID,\n    unread: true\n  }).fetch();\n\n  it('fetches the latest notifications for one user', () => {\n    generator({\n      users: {\n        _id: USER_ID\n      },\n      notifications: [{\n        _id: '1',\n        recipientLinks: [{\n          _id: USER_ID\n        }]\n      }, {\n        _id: '2',\n        recipientLinks: [{\n          _id: 'b'\n        }]\n      }]\n    });\n    const notifications = getNotifications();\n    expect(notifications.length).to.equal(1);\n    expect(notifications[0]._id).to.equal('1');\n  });\n  it('does not fetch read notifications', () => {\n    generator({\n      users: {\n        _id: USER_ID\n      },\n      notifications: [{\n        _id: '1',\n        recipientLinks: [{\n          _id: USER_ID\n        }]\n      }, {\n        _id: '2',\n        recipientLinks: [{\n          _id: USER_ID,\n          read: true\n        }]\n      }]\n    });\n    const notifications = getNotifications();\n    expect(notifications.length).to.equal(1);\n    expect(notifications[0]._id).to.equal('1');\n  });\n  it('does not fetch snoozed notifications', () => {\n    const date = new Date();\n    date.setHours(date.getHours() + 1);\n    generator({\n      users: {\n        _id: USER_ID\n      },\n      notifications: [{\n        _id: '1',\n        recipientLinks: [{\n          _id: USER_ID\n        }]\n      }, {\n        _id: '2',\n        recipientLinks: [{\n          _id: USER_ID,\n          snoozeDate: date\n        }]\n      }]\n    });\n    const notifications = getNotifications();\n    expect(notifications.length).to.equal(1);\n    expect(notifications[0]._id).to.equal('1');\n  });\n  it('does fetch snoozed notifications from the past', () => {\n    const date = new Date();\n    date.setHours(date.getHours() - 1);\n    generator({\n      users: {\n        _id: USER_ID\n      },\n      notifications: [{\n        _id: '1',\n        recipientLinks: [{\n          _id: USER_ID\n        }]\n      }, {\n        _id: '2',\n        recipientLinks: [{\n          _id: USER_ID,\n          snoozeDate: date\n        }]\n      }]\n    });\n    const notifications = getNotifications();\n    expect(notifications.length).to.equal(2);\n  });\n});","map":{"version":3,"sources":["imports/core/api/notifications/server/test/queries.test.js"],"names":["describe","beforeEach","resetDatabase","USER_ID","getNotifications","userId","unread","it","generator","users","_id","notifications","recipientLinks","expect","read","date","snoozeDate"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { adminNotifications } from '../../queries';\nimport generator from '../../../factories/index';\nimport '../exposures';\n\ndescribe('adminNotifications', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  const USER_ID = 'a';\n  const getNotifications = () =>\n    adminNotifications.clone({ userId: USER_ID, unread: true }).fetch();\n\n  it('fetches the latest notifications for one user', () => {\n    generator({\n      users: { _id: USER_ID },\n      notifications: [\n        { _id: '1', recipientLinks: [{ _id: USER_ID }] },\n        { _id: '2', recipientLinks: [{ _id: 'b' }] },\n      ],\n    });\n\n    const notifications = getNotifications();\n    expect(notifications.length).to.equal(1);\n    expect(notifications[0]._id).to.equal('1');\n  });\n\n  it('does not fetch read notifications', () => {\n    generator({\n      users: { _id: USER_ID },\n      notifications: [\n        { _id: '1', recipientLinks: [{ _id: USER_ID }] },\n        { _id: '2', recipientLinks: [{ _id: USER_ID, read: true }] },\n      ],\n    });\n\n    const notifications = getNotifications();\n    expect(notifications.length).to.equal(1);\n    expect(notifications[0]._id).to.equal('1');\n  });\n\n  it('does not fetch snoozed notifications', () => {\n    const date = new Date();\n    date.setHours(date.getHours() + 1);\n\n    generator({\n      users: { _id: USER_ID },\n      notifications: [\n        { _id: '1', recipientLinks: [{ _id: USER_ID }] },\n        {\n          _id: '2',\n          recipientLinks: [{ _id: USER_ID, snoozeDate: date }],\n        },\n      ],\n    });\n\n    const notifications = getNotifications();\n    expect(notifications.length).to.equal(1);\n    expect(notifications[0]._id).to.equal('1');\n  });\n\n  it('does fetch snoozed notifications from the past', () => {\n    const date = new Date();\n    date.setHours(date.getHours() - 1);\n\n    generator({\n      users: { _id: USER_ID },\n      notifications: [\n        { _id: '1', recipientLinks: [{ _id: USER_ID }] },\n        {\n          _id: '2',\n          recipientLinks: [{ _id: USER_ID, snoozeDate: date }],\n        },\n      ],\n    });\n\n    const notifications = getNotifications();\n    expect(notifications.length).to.equal(2);\n  });\n});\n"]},"sourceType":"script","hash":"abd78e865367ce036da478dc3b1646fbc8c8e189"}
