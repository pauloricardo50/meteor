{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/analytics/server/analyticsListeners.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/analytics/server/analyticsListeners.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/analytics/server/analyticsListeners.js","inputSourceMap":{"version":3,"sources":["imports/core/api/analytics/server/analyticsListeners.js"],"names":["loanSetStatus","LoanService","UserService","ServerEventService","EVENTS","Analytics","addAfterMethodListener","context","result","prevStatus","nextStatus","params","loanId","userId","adminId","referredByOrganization","referredByUser","assigneeId","assigneeName","category","name","loanName","purchaseType","residenceType","step","loanStep","fetchOne","$filters","_id","user","referredByOrganisation","assignedEmployee","analytics","track","LOAN_STATUS_CHANGED"],"mappings":"AAAA,SAASA,aAAT;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AAEAF,kBAAkB,CAACG,sBAAnB,CACEN,aADF,EAEE,CAAC;AAAEO,EAAAA,OAAF;AAAWC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAnB;AAA+CC,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF;AAAvD,CAAD,KAAyE;AACvE,QAAM;AAAEC,IAAAA,MAAM,EAAEC;AAAV,MAAsBP,OAA5B;AACA,MAAIQ,sBAAJ;AACA,MAAIC,cAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,YAAJ;AACA,QAAM;AACJL,IAAAA,MADI;AAEJM,IAAAA,QAFI;AAGJC,IAAAA,IAAI,EAAEC,QAHF;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,aALI;AAMJC,IAAAA,IAAI,EAAEC;AANF,MAOFxB,WAAW,CAACyB,QAAZ,CAAqB;AACvBC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,GAAG,EAAEhB;AAAP,KADa;AAEvBC,IAAAA,MAAM,EAAE,CAFe;AAGvBM,IAAAA,QAAQ,EAAE,CAHa;AAIvBC,IAAAA,IAAI,EAAE,CAJiB;AAKvBE,IAAAA,YAAY,EAAE,CALS;AAMvBC,IAAAA,aAAa,EAAE,CANQ;AAOvBC,IAAAA,IAAI,EAAE;AAPiB,GAArB,CAPJ;AAgBA,QAAM;AAAEJ,IAAAA;AAAF,MAAWlB,WAAW,CAACwB,QAAZ,CAAqB;AACpCC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,GAAG,EAAEd;AAAP,KAD0B;AAEpCM,IAAAA,IAAI,EAAE;AAF8B,GAArB,CAAjB;;AAIA,MAAIP,MAAJ,EAAY;AACV,UAAMgB,IAAI,GAAG3B,WAAW,CAACwB,QAAZ,CAAqB;AAChCC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAEf;AAAP,OADsB;AAEhCG,MAAAA,cAAc,EAAE;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAFgB;AAGhCU,MAAAA,sBAAsB,EAAE;AAAEV,QAAAA,IAAI,EAAE;AAAR,OAHQ;AAIhCW,MAAAA,gBAAgB,EAAE;AAAEX,QAAAA,IAAI,EAAE;AAAR;AAJc,KAArB,CAAb;AAMAH,IAAAA,UAAU,GAAGY,IAAI,CAACE,gBAAL,IAAyBF,IAAI,CAACE,gBAAL,CAAsBH,GAA5D;AACAV,IAAAA,YAAY,GAAGW,IAAI,CAACE,gBAAL,IAAyBF,IAAI,CAACE,gBAAL,CAAsBX,IAA9D;AACAL,IAAAA,sBAAsB,GAAGc,IAAI,CAACd,sBAAL,IAA+Bc,IAAI,CAACd,sBAAL,CAA4BK,IAApF;AACAJ,IAAAA,cAAc,GAAGa,IAAI,CAACb,cAAL,IAAuBa,IAAI,CAACb,cAAL,CAAoBI,IAA5D;AACD;;AAED,QAAMY,SAAS,GAAG,IAAI3B,SAAJ,CAAcE,OAAd,CAAlB;AACAyB,EAAAA,SAAS,CAACC,KAAV,CAAgB7B,MAAM,CAAC8B,mBAAvB,EAA4C;AAC1Cf,IAAAA,QAD0C;AAE1CP,IAAAA,MAF0C;AAG1CS,IAAAA,QAH0C;AAI1CI,IAAAA,QAJ0C;AAK1CL,IAAAA,IAL0C;AAM1CV,IAAAA,UAN0C;AAO1CD,IAAAA,UAP0C;AAQ1Ca,IAAAA,YAR0C;AAS1CP,IAAAA,sBAT0C;AAU1CC,IAAAA,cAV0C;AAW1CO,IAAAA,aAX0C;AAY1CT,IAAAA,OAZ0C;AAa1CG,IAAAA,UAb0C;AAc1CC,IAAAA;AAd0C,GAA5C;AAgBD,CA1DH","sourcesContent":["import { loanSetStatus } from '../../loans/methodDefinitions';\nimport LoanService from '../../loans/server/LoanService';\nimport UserService from '../../users/server/UserService';\nimport ServerEventService from '../../events/server/ServerEventService';\nimport EVENTS from '../events';\nimport Analytics from './Analytics';\n\nServerEventService.addAfterMethodListener(\n  loanSetStatus,\n  ({ context, result: { prevStatus, nextStatus }, params: { loanId } }) => {\n    const { userId: adminId } = context;\n    let referredByOrganization;\n    let referredByUser;\n    let assigneeId;\n    let assigneeName;\n    const {\n      userId,\n      category,\n      name: loanName,\n      purchaseType,\n      residenceType,\n      step: loanStep,\n    } = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      userId: 1,\n      category: 1,\n      name: 1,\n      purchaseType: 1,\n      residenceType: 1,\n      step: 1,\n    });\n    const { name } = UserService.fetchOne({\n      $filters: { _id: adminId },\n      name: 1,\n    });\n    if (userId) {\n      const user = UserService.fetchOne({\n        $filters: { _id: userId },\n        referredByUser: { name: 1 },\n        referredByOrganisation: { name: 1 },\n        assignedEmployee: { name: 1 },\n      });\n      assigneeId = user.assignedEmployee && user.assignedEmployee._id;\n      assigneeName = user.assignedEmployee && user.assignedEmployee.name;\n      referredByOrganization = user.referredByOrganization && user.referredByOrganization.name;\n      referredByUser = user.referredByUser && user.referredByUser.name;\n    }\n\n    const analytics = new Analytics(context);\n    analytics.track(EVENTS.LOAN_STATUS_CHANGED, {\n      category,\n      loanId,\n      loanName,\n      loanStep,\n      name,\n      nextStatus,\n      prevStatus,\n      purchaseType,\n      referredByOrganization,\n      referredByUser,\n      residenceType,\n      adminId,\n      assigneeId,\n      assigneeName,\n    });\n  },\n);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/analytics/server/analyticsListeners.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/analytics/server/analyticsListeners.js"}},"code":"let loanSetStatus;\nmodule.link(\"../../loans/methodDefinitions\", {\n  loanSetStatus(v) {\n    loanSetStatus = v;\n  }\n\n}, 0);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 1);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 2);\nlet ServerEventService;\nmodule.link(\"../../events/server/ServerEventService\", {\n  default(v) {\n    ServerEventService = v;\n  }\n\n}, 3);\nlet EVENTS;\nmodule.link(\"../events\", {\n  default(v) {\n    EVENTS = v;\n  }\n\n}, 4);\nlet Analytics;\nmodule.link(\"./Analytics\", {\n  default(v) {\n    Analytics = v;\n  }\n\n}, 5);\nServerEventService.addAfterMethodListener(loanSetStatus, ({\n  context,\n  result: {\n    prevStatus,\n    nextStatus\n  },\n  params: {\n    loanId\n  }\n}) => {\n  const {\n    userId: adminId\n  } = context;\n  let referredByOrganization;\n  let referredByUser;\n  let assigneeId;\n  let assigneeName;\n  const {\n    userId,\n    category,\n    name: loanName,\n    purchaseType,\n    residenceType,\n    step: loanStep\n  } = LoanService.fetchOne({\n    $filters: {\n      _id: loanId\n    },\n    userId: 1,\n    category: 1,\n    name: 1,\n    purchaseType: 1,\n    residenceType: 1,\n    step: 1\n  });\n  const {\n    name\n  } = UserService.fetchOne({\n    $filters: {\n      _id: adminId\n    },\n    name: 1\n  });\n\n  if (userId) {\n    const user = UserService.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      referredByUser: {\n        name: 1\n      },\n      referredByOrganisation: {\n        name: 1\n      },\n      assignedEmployee: {\n        name: 1\n      }\n    });\n    assigneeId = user.assignedEmployee && user.assignedEmployee._id;\n    assigneeName = user.assignedEmployee && user.assignedEmployee.name;\n    referredByOrganization = user.referredByOrganization && user.referredByOrganization.name;\n    referredByUser = user.referredByUser && user.referredByUser.name;\n  }\n\n  const analytics = new Analytics(context);\n  analytics.track(EVENTS.LOAN_STATUS_CHANGED, {\n    category,\n    loanId,\n    loanName,\n    loanStep,\n    name,\n    nextStatus,\n    prevStatus,\n    purchaseType,\n    referredByOrganization,\n    referredByUser,\n    residenceType,\n    adminId,\n    assigneeId,\n    assigneeName\n  });\n});","map":{"version":3,"sources":["imports/core/api/analytics/server/analyticsListeners.js"],"names":["ServerEventService","result","nextStatus","params","loanId","userId","adminId","name","step","loanStep","$filters","_id","category","purchaseType","residenceType","user","referredByUser","referredByOrganisation","assignedEmployee","assigneeId","assigneeName","referredByOrganization","analytics","EVENTS"],"mappings":"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","sourcesContent":["import { loanSetStatus } from '../../loans/methodDefinitions';\nimport LoanService from '../../loans/server/LoanService';\nimport UserService from '../../users/server/UserService';\nimport ServerEventService from '../../events/server/ServerEventService';\nimport EVENTS from '../events';\nimport Analytics from './Analytics';\n\nServerEventService.addAfterMethodListener(\n  loanSetStatus,\n  ({ context, result: { prevStatus, nextStatus }, params: { loanId } }) => {\n    const { userId: adminId } = context;\n    let referredByOrganization;\n    let referredByUser;\n    let assigneeId;\n    let assigneeName;\n    const {\n      userId,\n      category,\n      name: loanName,\n      purchaseType,\n      residenceType,\n      step: loanStep,\n    } = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      userId: 1,\n      category: 1,\n      name: 1,\n      purchaseType: 1,\n      residenceType: 1,\n      step: 1,\n    });\n    const { name } = UserService.fetchOne({\n      $filters: { _id: adminId },\n      name: 1,\n    });\n    if (userId) {\n      const user = UserService.fetchOne({\n        $filters: { _id: userId },\n        referredByUser: { name: 1 },\n        referredByOrganisation: { name: 1 },\n        assignedEmployee: { name: 1 },\n      });\n      assigneeId = user.assignedEmployee && user.assignedEmployee._id;\n      assigneeName = user.assignedEmployee && user.assignedEmployee.name;\n      referredByOrganization = user.referredByOrganization && user.referredByOrganization.name;\n      referredByUser = user.referredByUser && user.referredByUser.name;\n    }\n\n    const analytics = new Analytics(context);\n    analytics.track(EVENTS.LOAN_STATUS_CHANGED, {\n      category,\n      loanId,\n      loanName,\n      loanStep,\n      name,\n      nextStatus,\n      prevStatus,\n      purchaseType,\n      referredByOrganization,\n      referredByUser,\n      residenceType,\n      adminId,\n      assigneeId,\n      assigneeName,\n    });\n  },\n);\n"]},"sourceType":"script","hash":"679a0d28a74e3e4e7a947715362e5bbf002ed2b1"}
