{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/offers/fakes.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/offers/fakes.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/offers/fakes.js","inputSourceMap":{"version":3,"sources":["imports/core/api/offers/fakes.js"],"names":["randInArray","array","Math","floor","random","length","getRandomCondition","conditions","getRandomCounterpart","counterparts","round","v","rand","min","max","getRandomOffer","loan","rate1","rate2","loanWanted","structures","wantedLoan","maxAmountLimited","counterpart","condition","organisation","loanId","_id","maxAmount","amortizationGoal","interestLibor","interest1","interest2","interest5","interest10","filter","x"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,KAAK,CAACI,MAAjC,CAAD,CAAlC;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAMC,UAAU,GAAG,CACjB,gCADiB,EAEjB,EAFiB,EAGjB,EAHiB,EAIjB,EAJiB,EAKjB,EALiB,EAMjB,EANiB,EAOjB,EAPiB,EAQjB,EARiB,EASjB,EATiB,CAAnB;AAYA,SAAOP,WAAW,CAACO,UAAD,CAAlB;AACD,CAdD;;AAgBA,MAAMC,oBAAoB,GAAG,MAAM;AACjC,QAAMC,YAAY,GAAG,CACnB,6BADmB,EAEnB,+BAFmB,EAGnB,8CAHmB,EAInB,mCAJmB,EAKnB,EALmB,EAMnB,EANmB,EAOnB,EAPmB,EAQnB,EARmB,EASnB,EATmB,EAUnB,EAVmB,EAWnB,EAXmB,EAYnB,EAZmB,CAArB;AAeA,SAAOT,WAAW,CAACS,YAAD,CAAlB;AACD,CAjBD;;AAmBA,MAAMC,KAAK,GAAGC,CAAC,IAAIT,IAAI,CAACQ,KAAL,CAAWC,CAAC,GAAG,KAAf,IAAwB,KAA3C;;AAEA,MAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAcJ,KAAK,CAACR,IAAI,CAACE,MAAL,MAAiBU,GAAG,GAAGD,GAAvB,IAA8BA,GAA/B,CAAhC;;AAEA,OAAO,MAAME,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC1C,QAAMC,KAAK,GAAGL,IAAI,CAAC,KAAD,EAAQ,KAAR,CAAlB;AACA,QAAMM,KAAK,GAAGN,IAAI,CAAC,KAAD,EAAQ,KAAR,CAAlB;AAEA,QAAMO,UAAU,GAAGH,IAAI,CAACI,UAAL,CAAgB,CAAhB,EAAmBC,UAAtC;AACA,QAAMC,gBAAgB,GAAGH,UAAU,GAAG,SAAb,GAAyB,SAAzB,GAAqCA,UAA9D;AACA,QAAMI,WAAW,GAAGf,oBAAoB,EAAxC;AACA,QAAMgB,SAAS,GAAGlB,kBAAkB,EAApC;AACA,SAAO;AACLmB,IAAAA,YAAY,EAAE,MADT;AAELC,IAAAA,MAAM,EAAEV,IAAI,CAACW,GAFR;AAGLC,IAAAA,SAAS,EAAEN,gBAHN;AAILO,IAAAA,gBAAgB,EAAE7B,WAAW,CAAC,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,CAAD,CAJxB;AAKL8B,IAAAA,aAAa,EAAEb,KALV;AAMLc,IAAAA,SAAS,EAAErB,KAAK,CAACO,KAAK,GAAGL,IAAI,CAAC,MAAD,EAAS,MAAT,CAAb,CANX;AAOLoB,IAAAA,SAAS,EAAEtB,KAAK,CAACO,KAAK,GAAGL,IAAI,CAAC,MAAD,EAAS,KAAT,CAAb,CAPX;AAQLqB,IAAAA,SAAS,EAAEvB,KAAK,CAACO,KAAK,GAAGL,IAAI,CAAC,KAAD,EAAQ,KAAR,CAAb,CARX;AASLsB,IAAAA,UAAU,EAAExB,KAAK,CAACO,KAAK,GAAGL,IAAI,CAAC,KAAD,EAAQ,IAAR,CAAb,CATZ;AAULL,IAAAA,UAAU,EAAE,CAACiB,SAAD,EAAYD,WAAZ,EAAyBY,MAAzB,CAAgCC,CAAC,IAAIA,CAArC;AAVP,GAAP;AAYD,CApBM","sourcesContent":["const randInArray = array => array[Math.floor(Math.random() * array.length)];\n\nconst getRandomCondition = () => {\n  const conditions = [\n    'Expertise additionelle requise',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n  ];\n\n  return randInArray(conditions);\n};\n\nconst getRandomCounterpart = () => {\n  const counterparts = [\n    'Gestion de toute la fortune',\n    'Souscrire à une assurance vie',\n    \"Gestion de CHF 100'000 de patrimoine minimum\",\n    'Souscrire à une assurance voiture',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n  ];\n\n  return randInArray(counterparts);\n};\n\nconst round = v => Math.round(v * 10000) / 10000;\n\nconst rand = (min, max) => round(Math.random() * (max - min) + min);\n\nexport const getRandomOffer = ({ loan }) => {\n  const rate1 = rand(0.007, 0.012);\n  const rate2 = rand(0.005, 0.009);\n\n  const loanWanted = loan.structures[0].wantedLoan;\n  const maxAmountLimited = loanWanted > 100000000 ? 100000000 : loanWanted;\n  const counterpart = getRandomCounterpart();\n  const condition = getRandomCondition();\n  return {\n    organisation: 'fake',\n    loanId: loan._id,\n    maxAmount: maxAmountLimited,\n    amortizationGoal: randInArray([0.65, 0.6, 0.5]),\n    interestLibor: rate1,\n    interest1: round(rate1 + rand(0.0004, 0.0016)),\n    interest2: round(rate1 + rand(0.0016, 0.004)),\n    interest5: round(rate1 + rand(0.004, 0.006)),\n    interest10: round(rate1 + rand(0.006, 0.01)),\n    conditions: [condition, counterpart].filter(x => x),\n  };\n};\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/offers/fakes.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/offers/fakes.js"}},"code":"module.export({\n  getRandomOffer: () => getRandomOffer\n});\n\nconst randInArray = array => array[Math.floor(Math.random() * array.length)];\n\nconst getRandomCondition = () => {\n  const conditions = ['Expertise additionelle requise', '', '', '', '', '', '', '', ''];\n  return randInArray(conditions);\n};\n\nconst getRandomCounterpart = () => {\n  const counterparts = ['Gestion de toute la fortune', 'Souscrire à une assurance vie', \"Gestion de CHF 100'000 de patrimoine minimum\", 'Souscrire à une assurance voiture', '', '', '', '', '', '', '', ''];\n  return randInArray(counterparts);\n};\n\nconst round = v => Math.round(v * 10000) / 10000;\n\nconst rand = (min, max) => round(Math.random() * (max - min) + min);\n\nconst getRandomOffer = ({\n  loan\n}) => {\n  const rate1 = rand(0.007, 0.012);\n  const rate2 = rand(0.005, 0.009);\n  const loanWanted = loan.structures[0].wantedLoan;\n  const maxAmountLimited = loanWanted > 100000000 ? 100000000 : loanWanted;\n  const counterpart = getRandomCounterpart();\n  const condition = getRandomCondition();\n  return {\n    organisation: 'fake',\n    loanId: loan._id,\n    maxAmount: maxAmountLimited,\n    amortizationGoal: randInArray([0.65, 0.6, 0.5]),\n    interestLibor: rate1,\n    interest1: round(rate1 + rand(0.0004, 0.0016)),\n    interest2: round(rate1 + rand(0.0016, 0.004)),\n    interest5: round(rate1 + rand(0.004, 0.006)),\n    interest10: round(rate1 + rand(0.006, 0.01)),\n    conditions: [condition, counterpart].filter(x => x)\n  };\n};","map":{"version":3,"sources":["imports/core/api/offers/fakes.js"],"names":["randInArray","array","Math","getRandomCondition","conditions","getRandomCounterpart","counterparts","round","v","rand","max","getRandomOffer","loan","rate1","rate2","loanWanted","maxAmountLimited","counterpart","condition","organisation","loanId","maxAmount","amortizationGoal","interestLibor","interest1","interest2","interest5","interest10","x"],"mappings":"AAAA,MAAMA,CAAAA,MAAN,CAAMA;AAAAA,EAAAA,cAAuBC,EAAAA,MAAK;AAA5BD,CAAN;;AAAA,MAAMA,WAAW,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAJA,KAAAA,CAAWA,IAAI,CAAJA,MAAAA,KAAgBD,KAAK,CAAnE,MAAmCC,CAAD,CAAlC;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAMC,UAAU,GAAG,CAAA,gCAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAnB,EAAmB,CAAnB;AAYA,SAAOJ,WAAW,CAAlB,UAAkB,CAAlB;AAbF,CAAA;;AAgBA,MAAMK,oBAAoB,GAAG,MAAM;AACjC,QAAMC,YAAY,GAAG,CAAA,6BAAA,EAAA,+BAAA,EAAA,8CAAA,EAAA,mCAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAArB,EAAqB,CAArB;AAeA,SAAON,WAAW,CAAlB,YAAkB,CAAlB;AAhBF,CAAA;;AAmBA,MAAMO,KAAK,GAAGC,CAAC,IAAIN,IAAI,CAAJA,KAAAA,CAAWM,CAAC,GAAZN,KAAAA,IAAnB,KAAA;;AAEA,MAAMO,IAAI,GAAG,CAAA,GAAA,EAAA,GAAA,KAAcF,KAAK,CAACL,IAAI,CAAJA,MAAAA,MAAiBQ,GAAG,GAApBR,GAAAA,IAAjC,GAAgC,CAAhC;;AAEO,MAAMS,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC1C,QAAMC,KAAK,GAAGJ,IAAI,CAAA,KAAA,EAAlB,KAAkB,CAAlB;AACA,QAAMK,KAAK,GAAGL,IAAI,CAAA,KAAA,EAAlB,KAAkB,CAAlB;AAEA,QAAMM,UAAU,GAAGH,IAAI,CAAJA,UAAAA,CAAAA,CAAAA,EAAnB,UAAA;AACA,QAAMI,gBAAgB,GAAGD,UAAU,GAAVA,SAAAA,GAAAA,SAAAA,GAAzB,UAAA;AACA,QAAME,WAAW,GAAGZ,oBAApB,EAAA;AACA,QAAMa,SAAS,GAAGf,kBAAlB,EAAA;AACA,SAAO;AACLgB,IAAAA,YAAY,EADP,MAAA;AAELC,IAAAA,MAAM,EAAER,IAAI,CAFP,GAAA;AAGLS,IAAAA,SAAS,EAHJ,gBAAA;AAILC,IAAAA,gBAAgB,EAAEtB,WAAW,CAAC,CAAA,IAAA,EAAA,GAAA,EAJzB,GAIyB,CAAD,CAJxB;AAKLuB,IAAAA,aAAa,EALR,KAAA;AAMLC,IAAAA,SAAS,EAAEjB,KAAK,CAACM,KAAK,GAAGJ,IAAI,CAAA,MAAA,EANxB,MAMwB,CAAb,CANX;AAOLgB,IAAAA,SAAS,EAAElB,KAAK,CAACM,KAAK,GAAGJ,IAAI,CAAA,MAAA,EAPxB,KAOwB,CAAb,CAPX;AAQLiB,IAAAA,SAAS,EAAEnB,KAAK,CAACM,KAAK,GAAGJ,IAAI,CAAA,KAAA,EARxB,KAQwB,CAAb,CARX;AASLkB,IAAAA,UAAU,EAAEpB,KAAK,CAACM,KAAK,GAAGJ,IAAI,CAAA,KAAA,EATzB,IASyB,CAAb,CATZ;AAULL,IAAAA,UAAU,EAAE,CAAA,SAAA,EAAA,WAAA,EAAA,MAAA,CAAgCwB,CAAC,IAAjC,CAAA;AAVP,GAAP;AARK,CAAA","sourcesContent":["const randInArray = array => array[Math.floor(Math.random() * array.length)];\n\nconst getRandomCondition = () => {\n  const conditions = [\n    'Expertise additionelle requise',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n  ];\n\n  return randInArray(conditions);\n};\n\nconst getRandomCounterpart = () => {\n  const counterparts = [\n    'Gestion de toute la fortune',\n    'Souscrire à une assurance vie',\n    \"Gestion de CHF 100'000 de patrimoine minimum\",\n    'Souscrire à une assurance voiture',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n  ];\n\n  return randInArray(counterparts);\n};\n\nconst round = v => Math.round(v * 10000) / 10000;\n\nconst rand = (min, max) => round(Math.random() * (max - min) + min);\n\nexport const getRandomOffer = ({ loan }) => {\n  const rate1 = rand(0.007, 0.012);\n  const rate2 = rand(0.005, 0.009);\n\n  const loanWanted = loan.structures[0].wantedLoan;\n  const maxAmountLimited = loanWanted > 100000000 ? 100000000 : loanWanted;\n  const counterpart = getRandomCounterpart();\n  const condition = getRandomCondition();\n  return {\n    organisation: 'fake',\n    loanId: loan._id,\n    maxAmount: maxAmountLimited,\n    amortizationGoal: randInArray([0.65, 0.6, 0.5]),\n    interestLibor: rate1,\n    interest1: round(rate1 + rand(0.0004, 0.0016)),\n    interest2: round(rate1 + rand(0.0016, 0.004)),\n    interest5: round(rate1 + rand(0.004, 0.006)),\n    interest10: round(rate1 + rand(0.006, 0.01)),\n    conditions: [condition, counterpart].filter(x => x),\n  };\n};\n"]},"sourceType":"script","hash":"da408049e422016ef7cf6f64fab41ad2229b9a08"}
