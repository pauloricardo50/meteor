{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/redux/widget1/widget1Actions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/redux/widget1/widget1Actions.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/redux/widget1/widget1Actions.js","inputSourceMap":{"version":3,"sources":["imports/core/redux/widget1/widget1Actions.js"],"names":["MAX_BORROW_RATIO_PRIMARY_PROPERTY","MAX_BORROW_RATIO_WITH_PLEDGE","types","makeWidget1Selector","selectFields","makeSelectValue","ALL_FIELDS","FINAL_STEP","PROPERTY","CAPPED_FIELDS","CURRENT_LOAN","PURCHASE_TYPE","suggestValue","commonTypes","suggestValues","dispatch","getState","state","step","suggestActions","map","NAME","type","SUGGEST_VALUE","value","Promise","all","getPropertyCappedValue","name","propertyValue","allowExtremeLoan","maxValue","Math","floor","shouldCapValue","nextValue","includes","cleanNextValue","min","setValue","resolve","then","SET_VALUE","setAuto","nextAuto","SET_AUTO","auto","increaseSliderMax","INCREASE_SLIDER_MAX","setStep","nextStep","willBeFinalStep","fields","length","resetCalculator","purchaseType","REFINANCING","setAllowExtremeLoan","SET_ALLOW_EXTREME_LOAN"],"mappings":"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","sourcesContent":["import {\n  MAX_BORROW_RATIO_PRIMARY_PROPERTY,\n  MAX_BORROW_RATIO_WITH_PLEDGE,\n} from 'core/config/financeConstants';\nimport * as types from './widget1Types';\nimport {\n  makeWidget1Selector,\n  selectFields,\n  makeSelectValue,\n} from './widget1Selectors';\nimport {\n  ALL_FIELDS,\n  FINAL_STEP,\n  PROPERTY,\n  CAPPED_FIELDS,\n  CURRENT_LOAN,\n  PURCHASE_TYPE,\n} from './widget1Constants';\nimport suggestValue from './widget1Suggestion';\nimport { commonTypes } from '../common';\n\nexport const suggestValues = () => (dispatch, getState) => {\n  const state = getState();\n  const step = makeWidget1Selector('step')(state);\n  let suggestActions = [];\n\n  if (step >= FINAL_STEP) {\n    suggestActions = selectFields(state).map(NAME =>\n      dispatch({\n        type: types.SUGGEST_VALUE(NAME),\n        value: suggestValue(NAME, state),\n      }));\n  }\n\n  return Promise.all(suggestActions);\n};\n\nexport const getPropertyCappedValue = (name, state) => {\n  const propertyValue = makeSelectValue(PROPERTY)(state);\n  const { allowExtremeLoan } = makeWidget1Selector(name)(state);\n  const maxValue = allowExtremeLoan\n    ? propertyValue * MAX_BORROW_RATIO_WITH_PLEDGE\n    : propertyValue * MAX_BORROW_RATIO_PRIMARY_PROPERTY;\n\n  return Math.floor(maxValue);\n};\n\nconst shouldCapValue = (name, nextValue) =>\n  CAPPED_FIELDS.includes(name) && nextValue !== '';\n\nexport const cleanNextValue = (name, nextValue, getState) => {\n  if (shouldCapValue(name, nextValue)) {\n    const state = getState();\n    const maxValue = getPropertyCappedValue(name, state);\n\n    return Math.min(nextValue, maxValue);\n  }\n\n  return nextValue;\n};\n\nexport const setValue = (name, nextValue) => (dispatch, getState) =>\n  Promise.resolve()\n    .then(() =>\n      dispatch({\n        type: types.SET_VALUE(name),\n        value: cleanNextValue(name, nextValue, getState),\n      }))\n    .then(() => dispatch(suggestValues()));\n\nexport const setAuto = (name, nextAuto) => dispatch =>\n  Promise.resolve()\n    .then(() => dispatch({ type: types.SET_AUTO(name), auto: nextAuto }))\n    .then(() => dispatch(suggestValues()));\n\nexport const increaseSliderMax = name => ({\n  type: types.INCREASE_SLIDER_MAX(name),\n});\n\nexport const setStep = nextStep => (dispatch, getState) => {\n  const state = getState();\n  const step = makeWidget1Selector('step')(state);\n\n  // Only set the step if we're not going down\n  if (step > nextStep) {\n    return Promise.resolve();\n  }\n\n  const willBeFinalStep = nextStep === FINAL_STEP;\n  return Promise.resolve()\n    .then(() =>\n      dispatch({ type: commonTypes.SET_VALUE('step'), value: nextStep }))\n    .then(() =>\n    // Special exception here, as suggestValues only runs once\n    // the widget1 is at the FINAL_STEP. Suggest values should be run\n    // if the user enters a value here\n      willBeFinalStep && dispatch(suggestValues()))\n    .then(() => {\n      const fields = selectFields(state);\n      if (step >= fields.length - 1) {\n        dispatch({\n          type: commonTypes.SET_VALUE('finishedTutorial'),\n          value: true,\n        });\n      }\n    });\n};\n\nexport const resetCalculator = () => (dispatch, getState) => {\n  const state = getState();\n  const purchaseType = makeWidget1Selector('purchaseType')(state);\n\n  return Promise.all(ALL_FIELDS.map((name) => {\n    dispatch({ type: types.SET_VALUE(name), value: 0 });\n    dispatch({ type: types.SET_AUTO(name), auto: true });\n  })).then(() => {\n    if (purchaseType === PURCHASE_TYPE.REFINANCING) {\n      // Keep property and current loan to false during refinancing\n      dispatch({ type: types.SET_AUTO(PROPERTY), auto: false });\n      dispatch({ type: types.SET_AUTO(CURRENT_LOAN), auto: false });\n    }\n  });\n};\n\nexport const setAllowExtremeLoan = name => ({\n  type: types.SET_ALLOW_EXTREME_LOAN(name),\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/redux/widget1/widget1Actions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/redux/widget1/widget1Actions.js"}},"code":"module.export({\n  suggestValues: () => suggestValues,\n  getPropertyCappedValue: () => getPropertyCappedValue,\n  cleanNextValue: () => cleanNextValue,\n  setValue: () => setValue,\n  setAuto: () => setAuto,\n  increaseSliderMax: () => increaseSliderMax,\n  setStep: () => setStep,\n  resetCalculator: () => resetCalculator,\n  setAllowExtremeLoan: () => setAllowExtremeLoan\n});\nlet MAX_BORROW_RATIO_PRIMARY_PROPERTY, MAX_BORROW_RATIO_WITH_PLEDGE;\nmodule.link(\"../../config/financeConstants\", {\n  MAX_BORROW_RATIO_PRIMARY_PROPERTY(v) {\n    MAX_BORROW_RATIO_PRIMARY_PROPERTY = v;\n  },\n\n  MAX_BORROW_RATIO_WITH_PLEDGE(v) {\n    MAX_BORROW_RATIO_WITH_PLEDGE = v;\n  }\n\n}, 0);\nlet types;\nmodule.link(\"./widget1Types\", {\n  \"*\"(v) {\n    types = v;\n  }\n\n}, 1);\nlet makeWidget1Selector, selectFields, makeSelectValue;\nmodule.link(\"./widget1Selectors\", {\n  makeWidget1Selector(v) {\n    makeWidget1Selector = v;\n  },\n\n  selectFields(v) {\n    selectFields = v;\n  },\n\n  makeSelectValue(v) {\n    makeSelectValue = v;\n  }\n\n}, 2);\nlet ALL_FIELDS, FINAL_STEP, PROPERTY, CAPPED_FIELDS, CURRENT_LOAN, PURCHASE_TYPE;\nmodule.link(\"./widget1Constants\", {\n  ALL_FIELDS(v) {\n    ALL_FIELDS = v;\n  },\n\n  FINAL_STEP(v) {\n    FINAL_STEP = v;\n  },\n\n  PROPERTY(v) {\n    PROPERTY = v;\n  },\n\n  CAPPED_FIELDS(v) {\n    CAPPED_FIELDS = v;\n  },\n\n  CURRENT_LOAN(v) {\n    CURRENT_LOAN = v;\n  },\n\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  }\n\n}, 3);\nlet suggestValue;\nmodule.link(\"./widget1Suggestion\", {\n  default(v) {\n    suggestValue = v;\n  }\n\n}, 4);\nlet commonTypes;\nmodule.link(\"../common\", {\n  commonTypes(v) {\n    commonTypes = v;\n  }\n\n}, 5);\n\nconst suggestValues = () => (dispatch, getState) => {\n  const state = getState();\n  const step = makeWidget1Selector('step')(state);\n  let suggestActions = [];\n\n  if (step >= FINAL_STEP) {\n    suggestActions = selectFields(state).map(NAME => dispatch({\n      type: types.SUGGEST_VALUE(NAME),\n      value: suggestValue(NAME, state)\n    }));\n  }\n\n  return Promise.all(suggestActions);\n};\n\nconst getPropertyCappedValue = (name, state) => {\n  const propertyValue = makeSelectValue(PROPERTY)(state);\n  const {\n    allowExtremeLoan\n  } = makeWidget1Selector(name)(state);\n  const maxValue = allowExtremeLoan ? propertyValue * MAX_BORROW_RATIO_WITH_PLEDGE : propertyValue * MAX_BORROW_RATIO_PRIMARY_PROPERTY;\n  return Math.floor(maxValue);\n};\n\nconst shouldCapValue = (name, nextValue) => CAPPED_FIELDS.includes(name) && nextValue !== '';\n\nconst cleanNextValue = (name, nextValue, getState) => {\n  if (shouldCapValue(name, nextValue)) {\n    const state = getState();\n    const maxValue = getPropertyCappedValue(name, state);\n    return Math.min(nextValue, maxValue);\n  }\n\n  return nextValue;\n};\n\nconst setValue = (name, nextValue) => (dispatch, getState) => Promise.resolve().then(() => dispatch({\n  type: types.SET_VALUE(name),\n  value: cleanNextValue(name, nextValue, getState)\n})).then(() => dispatch(suggestValues()));\n\nconst setAuto = (name, nextAuto) => dispatch => Promise.resolve().then(() => dispatch({\n  type: types.SET_AUTO(name),\n  auto: nextAuto\n})).then(() => dispatch(suggestValues()));\n\nconst increaseSliderMax = name => ({\n  type: types.INCREASE_SLIDER_MAX(name)\n});\n\nconst setStep = nextStep => (dispatch, getState) => {\n  const state = getState();\n  const step = makeWidget1Selector('step')(state); // Only set the step if we're not going down\n\n  if (step > nextStep) {\n    return Promise.resolve();\n  }\n\n  const willBeFinalStep = nextStep === FINAL_STEP;\n  return Promise.resolve().then(() => dispatch({\n    type: commonTypes.SET_VALUE('step'),\n    value: nextStep\n  })).then(() => // Special exception here, as suggestValues only runs once\n  // the widget1 is at the FINAL_STEP. Suggest values should be run\n  // if the user enters a value here\n  willBeFinalStep && dispatch(suggestValues())).then(() => {\n    const fields = selectFields(state);\n\n    if (step >= fields.length - 1) {\n      dispatch({\n        type: commonTypes.SET_VALUE('finishedTutorial'),\n        value: true\n      });\n    }\n  });\n};\n\nconst resetCalculator = () => (dispatch, getState) => {\n  const state = getState();\n  const purchaseType = makeWidget1Selector('purchaseType')(state);\n  return Promise.all(ALL_FIELDS.map(name => {\n    dispatch({\n      type: types.SET_VALUE(name),\n      value: 0\n    });\n    dispatch({\n      type: types.SET_AUTO(name),\n      auto: true\n    });\n  })).then(() => {\n    if (purchaseType === PURCHASE_TYPE.REFINANCING) {\n      // Keep property and current loan to false during refinancing\n      dispatch({\n        type: types.SET_AUTO(PROPERTY),\n        auto: false\n      });\n      dispatch({\n        type: types.SET_AUTO(CURRENT_LOAN),\n        auto: false\n      });\n    }\n  });\n};\n\nconst setAllowExtremeLoan = name => ({\n  type: types.SET_ALLOW_EXTREME_LOAN(name)\n});","map":{"version":3,"sources":["imports/core/redux/widget1/widget1Actions.js"],"names":["MAX_BORROW_RATIO_PRIMARY_PROPERTY","MAX_BORROW_RATIO_WITH_PLEDGE","suggestValues","state","getState","step","makeWidget1Selector","suggestActions","NAME","dispatch","type","types","value","suggestValue","Promise","getPropertyCappedValue","propertyValue","makeSelectValue","allowExtremeLoan","maxValue","Math","shouldCapValue","CAPPED_FIELDS","nextValue","cleanNextValue","setValue","setAuto","auto","nextAuto","increaseSliderMax","name","setStep","nextStep","willBeFinalStep","commonTypes","fields","selectFields","resetCalculator","purchaseType","PURCHASE_TYPE","setAllowExtremeLoan"],"mappings":"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","sourcesContent":["import {\n  MAX_BORROW_RATIO_PRIMARY_PROPERTY,\n  MAX_BORROW_RATIO_WITH_PLEDGE,\n} from 'core/config/financeConstants';\nimport * as types from './widget1Types';\nimport {\n  makeWidget1Selector,\n  selectFields,\n  makeSelectValue,\n} from './widget1Selectors';\nimport {\n  ALL_FIELDS,\n  FINAL_STEP,\n  PROPERTY,\n  CAPPED_FIELDS,\n  CURRENT_LOAN,\n  PURCHASE_TYPE,\n} from './widget1Constants';\nimport suggestValue from './widget1Suggestion';\nimport { commonTypes } from '../common';\n\nexport const suggestValues = () => (dispatch, getState) => {\n  const state = getState();\n  const step = makeWidget1Selector('step')(state);\n  let suggestActions = [];\n\n  if (step >= FINAL_STEP) {\n    suggestActions = selectFields(state).map(NAME =>\n      dispatch({\n        type: types.SUGGEST_VALUE(NAME),\n        value: suggestValue(NAME, state),\n      }));\n  }\n\n  return Promise.all(suggestActions);\n};\n\nexport const getPropertyCappedValue = (name, state) => {\n  const propertyValue = makeSelectValue(PROPERTY)(state);\n  const { allowExtremeLoan } = makeWidget1Selector(name)(state);\n  const maxValue = allowExtremeLoan\n    ? propertyValue * MAX_BORROW_RATIO_WITH_PLEDGE\n    : propertyValue * MAX_BORROW_RATIO_PRIMARY_PROPERTY;\n\n  return Math.floor(maxValue);\n};\n\nconst shouldCapValue = (name, nextValue) =>\n  CAPPED_FIELDS.includes(name) && nextValue !== '';\n\nexport const cleanNextValue = (name, nextValue, getState) => {\n  if (shouldCapValue(name, nextValue)) {\n    const state = getState();\n    const maxValue = getPropertyCappedValue(name, state);\n\n    return Math.min(nextValue, maxValue);\n  }\n\n  return nextValue;\n};\n\nexport const setValue = (name, nextValue) => (dispatch, getState) =>\n  Promise.resolve()\n    .then(() =>\n      dispatch({\n        type: types.SET_VALUE(name),\n        value: cleanNextValue(name, nextValue, getState),\n      }))\n    .then(() => dispatch(suggestValues()));\n\nexport const setAuto = (name, nextAuto) => dispatch =>\n  Promise.resolve()\n    .then(() => dispatch({ type: types.SET_AUTO(name), auto: nextAuto }))\n    .then(() => dispatch(suggestValues()));\n\nexport const increaseSliderMax = name => ({\n  type: types.INCREASE_SLIDER_MAX(name),\n});\n\nexport const setStep = nextStep => (dispatch, getState) => {\n  const state = getState();\n  const step = makeWidget1Selector('step')(state);\n\n  // Only set the step if we're not going down\n  if (step > nextStep) {\n    return Promise.resolve();\n  }\n\n  const willBeFinalStep = nextStep === FINAL_STEP;\n  return Promise.resolve()\n    .then(() =>\n      dispatch({ type: commonTypes.SET_VALUE('step'), value: nextStep }))\n    .then(() =>\n    // Special exception here, as suggestValues only runs once\n    // the widget1 is at the FINAL_STEP. Suggest values should be run\n    // if the user enters a value here\n      willBeFinalStep && dispatch(suggestValues()))\n    .then(() => {\n      const fields = selectFields(state);\n      if (step >= fields.length - 1) {\n        dispatch({\n          type: commonTypes.SET_VALUE('finishedTutorial'),\n          value: true,\n        });\n      }\n    });\n};\n\nexport const resetCalculator = () => (dispatch, getState) => {\n  const state = getState();\n  const purchaseType = makeWidget1Selector('purchaseType')(state);\n\n  return Promise.all(ALL_FIELDS.map((name) => {\n    dispatch({ type: types.SET_VALUE(name), value: 0 });\n    dispatch({ type: types.SET_AUTO(name), auto: true });\n  })).then(() => {\n    if (purchaseType === PURCHASE_TYPE.REFINANCING) {\n      // Keep property and current loan to false during refinancing\n      dispatch({ type: types.SET_AUTO(PROPERTY), auto: false });\n      dispatch({ type: types.SET_AUTO(CURRENT_LOAN), auto: false });\n    }\n  });\n};\n\nexport const setAllowExtremeLoan = name => ({\n  type: types.SET_ALLOW_EXTREME_LOAN(name),\n});\n"]},"sourceType":"script","hash":"e7ff1d4cc4174ee72e6d5ce4c0dd6d9808b11c26"}
