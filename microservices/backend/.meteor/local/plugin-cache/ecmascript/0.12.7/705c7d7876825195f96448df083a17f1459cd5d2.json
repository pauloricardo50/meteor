{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/loans/server/hooks.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/loans/server/hooks.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/loans/server/hooks.js","inputSourceMap":{"version":3,"sources":["imports/core/api/loans/server/hooks.js"],"names":["EVENTS","FileService","BorrowerService","PropertyService","UpdateWatcherService","ActivityService","SecurityService","ROLES","PROPERTY_CATEGORY","Loans","before","remove","userId","borrowerIds","propertyIds","forEach","borrowerId","loans","createQuery","$filters","_id","fetchOne","length","propertyId","category","USER","addUpdateWatching","collection","fields","shouldWatch","hasRole","PRO","after","deleteAllFilesForDoc","insert","doc","addCreatedAtActivity","createdAt","loanLink","title","update","loanId","status","newStatus","fieldNames","console","log","includes","oldStatus","previous","Meteor","connection"],"mappings":"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","sourcesContent":["import EVENTS from 'core/api/analytics/events';\nimport FileService from '../../files/server/FileService';\nimport BorrowerService from '../../borrowers/server/BorrowerService';\nimport PropertyService from '../../properties/server/PropertyService';\nimport UpdateWatcherService from '../../updateWatchers/server/UpdateWatcherService';\nimport ActivityService from '../../activities/server/ActivityService';\nimport SecurityService from '../../security';\nimport { ROLES, PROPERTY_CATEGORY } from '../../constants';\nimport Loans from '../loans';\n\n// Autoremove borrowers and properties\nLoans.before.remove((userId, { borrowerIds, propertyIds }) => {\n  borrowerIds.forEach((borrowerId) => {\n    const { loans } = BorrowerService.createQuery({\n      $filters: { _id: borrowerId },\n      loans: { _id: 1 },\n    }).fetchOne();\n\n    if (loans.length === 1) {\n      BorrowerService.remove({ borrowerId });\n    }\n  });\n  propertyIds.forEach((propertyId) => {\n    const { loans, category } = PropertyService.createQuery({\n      $filters: { _id: propertyId },\n      loans: { _id: 1 },\n      category: 1,\n    }).fetchOne();\n\n    if (loans.length === 1 && category === PROPERTY_CATEGORY.USER) {\n      PropertyService.remove({ propertyId });\n    }\n  });\n});\n\nUpdateWatcherService.addUpdateWatching({\n  collection: Loans,\n  fields: [\n    'applicationType',\n    'contacts',\n    'customName',\n    'previousLoanTranches',\n    'purchaseType',\n    'residenceType',\n    'step',\n    'verificationStatus',\n    // 'selectedStructure',\n    // 'structures', // The structures notifications are hard to read in slack\n  ],\n  shouldWatch: ({ userId }) =>\n    SecurityService.hasRole(userId, ROLES.USER)\n    || SecurityService.hasRole(userId, ROLES.PRO),\n});\n\nLoans.after.remove((userId, { _id }) => FileService.deleteAllFilesForDoc(_id));\n\nLoans.after.insert((userId, doc) =>\n  ActivityService.addCreatedAtActivity({\n    createdAt: doc.createdAt,\n    loanLink: { _id: doc._id },\n    title: 'Dossier créé',\n  }));\n\nLoans.after.update(function (\n  userId,\n  { _id: loanId, status: newStatus },\n  fieldNames,\n) {\n  console.log('status changed', this);\n  \n  if (fieldNames.includes('status')) {\n    const { status: oldStatus } = this.previous;\n    console.log('Meteor', Meteor.connection);\n    \n    \n    // Analytics.track(EVENTS.LOAN_STATUS_CHANGED, { userId });\n  }\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/loans/server/hooks.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/loans/server/hooks.js"}},"code":"let EVENTS;\nmodule.link(\"../../analytics/events\", {\n  default(v) {\n    EVENTS = v;\n  }\n\n}, 0);\nlet FileService;\nmodule.link(\"../../files/server/FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 1);\nlet BorrowerService;\nmodule.link(\"../../borrowers/server/BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 2);\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 3);\nlet UpdateWatcherService;\nmodule.link(\"../../updateWatchers/server/UpdateWatcherService\", {\n  default(v) {\n    UpdateWatcherService = v;\n  }\n\n}, 4);\nlet ActivityService;\nmodule.link(\"../../activities/server/ActivityService\", {\n  default(v) {\n    ActivityService = v;\n  }\n\n}, 5);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 6);\nlet ROLES, PROPERTY_CATEGORY;\nmodule.link(\"../../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  },\n\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 7);\nlet Loans;\nmodule.link(\"../loans\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 8);\n// Autoremove borrowers and properties\nLoans.before.remove((userId, {\n  borrowerIds,\n  propertyIds\n}) => {\n  borrowerIds.forEach(borrowerId => {\n    const {\n      loans\n    } = BorrowerService.createQuery({\n      $filters: {\n        _id: borrowerId\n      },\n      loans: {\n        _id: 1\n      }\n    }).fetchOne();\n\n    if (loans.length === 1) {\n      BorrowerService.remove({\n        borrowerId\n      });\n    }\n  });\n  propertyIds.forEach(propertyId => {\n    const {\n      loans,\n      category\n    } = PropertyService.createQuery({\n      $filters: {\n        _id: propertyId\n      },\n      loans: {\n        _id: 1\n      },\n      category: 1\n    }).fetchOne();\n\n    if (loans.length === 1 && category === PROPERTY_CATEGORY.USER) {\n      PropertyService.remove({\n        propertyId\n      });\n    }\n  });\n});\nUpdateWatcherService.addUpdateWatching({\n  collection: Loans,\n  fields: ['applicationType', 'contacts', 'customName', 'previousLoanTranches', 'purchaseType', 'residenceType', 'step', 'verificationStatus'],\n  shouldWatch: ({\n    userId\n  }) => SecurityService.hasRole(userId, ROLES.USER) || SecurityService.hasRole(userId, ROLES.PRO)\n});\nLoans.after.remove((userId, {\n  _id\n}) => FileService.deleteAllFilesForDoc(_id));\nLoans.after.insert((userId, doc) => ActivityService.addCreatedAtActivity({\n  createdAt: doc.createdAt,\n  loanLink: {\n    _id: doc._id\n  },\n  title: 'Dossier créé'\n}));\nLoans.after.update(function (userId, {\n  _id: loanId,\n  status: newStatus\n}, fieldNames) {\n  console.log('status changed', this);\n\n  if (fieldNames.includes('status')) {\n    const {\n      status: oldStatus\n    } = this.previous;\n    console.log('Meteor', Meteor.connection); // Analytics.track(EVENTS.LOAN_STATUS_CHANGED, { userId });\n  }\n});","map":{"version":3,"sources":["imports/core/api/loans/server/hooks.js"],"names":["Loans","propertyIds","borrowerIds","borrowerId","loans","$filters","_id","BorrowerService","propertyId","category","PROPERTY_CATEGORY","PropertyService","UpdateWatcherService","collection","fields","shouldWatch","userId","SecurityService","ROLES","FileService","createdAt","doc","loanLink","title","status","newStatus","console","fieldNames","oldStatus","Meteor"],"mappings":"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","sourcesContent":["import EVENTS from 'core/api/analytics/events';\nimport FileService from '../../files/server/FileService';\nimport BorrowerService from '../../borrowers/server/BorrowerService';\nimport PropertyService from '../../properties/server/PropertyService';\nimport UpdateWatcherService from '../../updateWatchers/server/UpdateWatcherService';\nimport ActivityService from '../../activities/server/ActivityService';\nimport SecurityService from '../../security';\nimport { ROLES, PROPERTY_CATEGORY } from '../../constants';\nimport Loans from '../loans';\n\n// Autoremove borrowers and properties\nLoans.before.remove((userId, { borrowerIds, propertyIds }) => {\n  borrowerIds.forEach((borrowerId) => {\n    const { loans } = BorrowerService.createQuery({\n      $filters: { _id: borrowerId },\n      loans: { _id: 1 },\n    }).fetchOne();\n\n    if (loans.length === 1) {\n      BorrowerService.remove({ borrowerId });\n    }\n  });\n  propertyIds.forEach((propertyId) => {\n    const { loans, category } = PropertyService.createQuery({\n      $filters: { _id: propertyId },\n      loans: { _id: 1 },\n      category: 1,\n    }).fetchOne();\n\n    if (loans.length === 1 && category === PROPERTY_CATEGORY.USER) {\n      PropertyService.remove({ propertyId });\n    }\n  });\n});\n\nUpdateWatcherService.addUpdateWatching({\n  collection: Loans,\n  fields: [\n    'applicationType',\n    'contacts',\n    'customName',\n    'previousLoanTranches',\n    'purchaseType',\n    'residenceType',\n    'step',\n    'verificationStatus',\n    // 'selectedStructure',\n    // 'structures', // The structures notifications are hard to read in slack\n  ],\n  shouldWatch: ({ userId }) =>\n    SecurityService.hasRole(userId, ROLES.USER)\n    || SecurityService.hasRole(userId, ROLES.PRO),\n});\n\nLoans.after.remove((userId, { _id }) => FileService.deleteAllFilesForDoc(_id));\n\nLoans.after.insert((userId, doc) =>\n  ActivityService.addCreatedAtActivity({\n    createdAt: doc.createdAt,\n    loanLink: { _id: doc._id },\n    title: 'Dossier créé',\n  }));\n\nLoans.after.update(function (\n  userId,\n  { _id: loanId, status: newStatus },\n  fieldNames,\n) {\n  console.log('status changed', this);\n  \n  if (fieldNames.includes('status')) {\n    const { status: oldStatus } = this.previous;\n    console.log('Meteor', Meteor.connection);\n    \n    \n    // Analytics.track(EVENTS.LOAN_STATUS_CHANGED, { userId });\n  }\n});\n"]},"sourceType":"script","hash":"705c7d7876825195f96448df083a17f1459cd5d2"}
