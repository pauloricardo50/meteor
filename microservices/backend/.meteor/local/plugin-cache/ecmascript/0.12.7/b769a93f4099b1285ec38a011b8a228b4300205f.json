{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTable.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTable.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTable.jsx","inputSourceMap":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTable.jsx"],"names":["React","cx","PdfTableTooltips","PdfTableRow","PdfTableProps","rows","Array","className","String","ROW_TYPES","TITLE","TITLE_NO_PADDING","REGULAR","EMPTY","SUM","SUBSECTION","TOOLTIP","classes","shouldRenderRow","condition","undefined","PdfTable","columnOptions","style","map","rowData","index","filter","tooltip","length"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,gBAAP;AACA,OAAOC,WAAP;AAEA,KAAKC,aAAL,GAAqB;AACnBC,EAAAA,IAAI,EAAEC,KADa;AAEnBC,EAAAA,SAAS,EAAEC,MAFQ;AAAA,CAArB;AAKA,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,KAAK,EAAE,OADgB;AAEvBC,EAAAA,gBAAgB,EAAE,kBAFK;AAGvBC,EAAAA,OAAO,EAAE,SAHc;AAIvBC,EAAAA,KAAK,EAAE,OAJgB;AAKvBC,EAAAA,GAAG,EAAE,KALkB;AAMvBC,EAAAA,UAAU,EAAE,YANW;AAOvBC,EAAAA,OAAO,EAAE;AAPc,CAAlB;AAUP,OAAO,MAAMC,OAAO,GAAG;AACrB,GAACR,SAAS,CAACC,KAAX,GAAmB,WADE;AAErB,GAACD,SAAS,CAACE,gBAAX,GAA8B,sBAFT;AAGrB,GAACF,SAAS,CAACG,OAAX,GAAqB,aAHA;AAIrB,GAACH,SAAS,CAACI,KAAX,GAAmB,WAJE;AAKrB,GAACJ,SAAS,CAACK,GAAX,GAAiB,SALI;AAMrB,GAACL,SAAS,CAACM,UAAX,GAAwB,gBANH;AAOrB,GAACN,SAAS,CAACO,OAAX,GAAqB;AAPA,CAAhB;AAUP,OAAO,MAAME,eAAe,GAAGC,SAAS,IACtCA,SAAS,KAAKC,SAAd,IAA2BD,SADtB;;AAGP,MAAME,QAAQ,GAAG,CAAC;AAChBhB,EAAAA,IADgB;AAEhBE,EAAAA,SAFgB;AAGhBe,EAAAA,aAAa,GAAG,EAHA;AAIhBC,EAAAA,KAAK,GAAG;AAJQ,CAKjB,EAAEnB,aALc,KAMf,CAAC,KAAD,CAAO,UAAU,CAACH,EAAE,CAAC,WAAD,EAAcM,SAAd,CAAH,CAAjB,CAA8C,MAAM,CAACgB,KAAD,CAApD;IACE,CAAClB,IAAI,CAACmB,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC5B,QAAI,CAACR,eAAe,CAACO,OAAO,CAACN,SAAT,CAApB,EAAyC;AACvC,aAAO,IAAP;AACD;;AAED,WACE,CAAC,WAAD,CACE,IAAI,CAACO,KAAD,CADN,CAEE,QAAQ,CAACD,OAAD,CAFV,CAGE,MAAM,CAACC,KAAD,CAHR,CAIE,cAAc,CAACJ,aAAD,CAJhB,GADF;AAQD,GAbA,CAAD;IAcA,CAAC,gBAAD,CACE,SAAS,CAACjB,IAAI,CAACsB,MAAL,CAAY,CAAC;AAAEC,IAAAA,OAAF;AAAWT,IAAAA;AAAX,GAAD,KAA4B,CAAC,CAACS,OAAF,IAAaV,eAAe,CAACC,SAAD,CAApE,CAAD,CADX,CAEE,WAAW,CAACd,IAAI,CAACwB,MAAL,GAAc,CAAf,CAFb;EAIF,EAAE,KAAF,CAzBF;;AA2BA,eAAeR,QAAf","sourcesContent":["// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport PdfTableTooltips from './PdfTableTooltips';\nimport PdfTableRow from './PdfTableRow';\n\ntype PdfTableProps = {\n  rows: Array,\n  className: String,\n};\n\nexport const ROW_TYPES = {\n  TITLE: 'TITLE',\n  TITLE_NO_PADDING: 'TITLE_NO_PADDING',\n  REGULAR: 'REGULAR',\n  EMPTY: 'EMPTY',\n  SUM: 'SUM',\n  SUBSECTION: 'SUBSECTION',\n  TOOLTIP: 'TOOLTIP',\n};\n\nexport const classes = {\n  [ROW_TYPES.TITLE]: 'title-row',\n  [ROW_TYPES.TITLE_NO_PADDING]: 'title-row no-padding',\n  [ROW_TYPES.REGULAR]: 'regular-row',\n  [ROW_TYPES.EMPTY]: 'empty-row',\n  [ROW_TYPES.SUM]: 'sum-row',\n  [ROW_TYPES.SUBSECTION]: 'subsection-row',\n  [ROW_TYPES.TOOLTIP]: 'tooltip',\n};\n\nexport const shouldRenderRow = condition =>\n  condition === undefined || condition;\n\nconst PdfTable = ({\n  rows,\n  className,\n  columnOptions = [],\n  style = {},\n}: PdfTableProps) => (\n  <table className={cx('pdf-table', className)} style={style}>\n    {rows.map((rowData, index) => {\n      if (!shouldRenderRow(rowData.condition)) {\n        return null;\n      }\n\n      return (\n        <PdfTableRow\n          key={index}\n          rowData={rowData}\n          index={index}\n          columnOptions={columnOptions}\n        />\n      );\n    })}\n    <PdfTableTooltips\n      tooltips={rows.filter(({ tooltip, condition }) => !!tooltip && shouldRenderRow(condition))}\n      startIndex={rows.length + 1}\n    />\n  </table>\n);\nexport default PdfTable;\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTable.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTable.jsx"}},"code":"module.export({\n  ROW_TYPES: () => ROW_TYPES,\n  classes: () => classes,\n  shouldRenderRow: () => shouldRenderRow\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet cx;\nmodule.link(\"classnames\", {\n  default(v) {\n    cx = v;\n  }\n\n}, 1);\nlet PdfTableTooltips;\nmodule.link(\"./PdfTableTooltips\", {\n  default(v) {\n    PdfTableTooltips = v;\n  }\n\n}, 2);\nlet PdfTableRow;\nmodule.link(\"./PdfTableRow\", {\n  default(v) {\n    PdfTableRow = v;\n  }\n\n}, 3);\nconst ROW_TYPES = {\n  TITLE: 'TITLE',\n  TITLE_NO_PADDING: 'TITLE_NO_PADDING',\n  REGULAR: 'REGULAR',\n  EMPTY: 'EMPTY',\n  SUM: 'SUM',\n  SUBSECTION: 'SUBSECTION',\n  TOOLTIP: 'TOOLTIP'\n};\nconst classes = {\n  [ROW_TYPES.TITLE]: 'title-row',\n  [ROW_TYPES.TITLE_NO_PADDING]: 'title-row no-padding',\n  [ROW_TYPES.REGULAR]: 'regular-row',\n  [ROW_TYPES.EMPTY]: 'empty-row',\n  [ROW_TYPES.SUM]: 'sum-row',\n  [ROW_TYPES.SUBSECTION]: 'subsection-row',\n  [ROW_TYPES.TOOLTIP]: 'tooltip'\n};\n\nconst shouldRenderRow = condition => condition === undefined || condition;\n\nconst PdfTable = ({\n  rows,\n  className,\n  columnOptions = [],\n  style = {}\n}) => React.createElement(\"table\", {\n  className: cx('pdf-table', className),\n  style: style\n}, rows.map((rowData, index) => {\n  if (!shouldRenderRow(rowData.condition)) {\n    return null;\n  }\n\n  return React.createElement(PdfTableRow, {\n    key: index,\n    rowData: rowData,\n    index: index,\n    columnOptions: columnOptions\n  });\n}), React.createElement(PdfTableTooltips, {\n  tooltips: rows.filter(({\n    tooltip,\n    condition\n  }) => !!tooltip && shouldRenderRow(condition)),\n  startIndex: rows.length + 1\n}));\n\nmodule.exportDefault(PdfTable);","map":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/PdfTable/PdfTable.jsx"],"names":["ROW_TYPES","TITLE","TITLE_NO_PADDING","REGULAR","EMPTY","SUM","SUBSECTION","TOOLTIP","classes","shouldRenderRow","condition","PdfTable","columnOptions","style","cx","rowData","rows"],"mappings":"AAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,SAAA,EAAA,MAAA,SAAA;AAAA,EAAA,OAAA,EAAA,MAAA,OAAA;AAAA,EAAA,eAAA,EAAA,MAAA;AAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,EAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,EAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAWO,MAAMA,SAAS,GAAG;AACvBC,EAAAA,KAAK,EADkB,OAAA;AAEvBC,EAAAA,gBAAgB,EAFO,kBAAA;AAGvBC,EAAAA,OAAO,EAHgB,SAAA;AAIvBC,EAAAA,KAAK,EAJkB,OAAA;AAKvBC,EAAAA,GAAG,EALoB,KAAA;AAMvBC,EAAAA,UAAU,EANa,YAAA;AAOvBC,EAAAA,OAAO,EAAE;AAPc,CAAlB;AAUA,MAAMC,OAAO,GAAG;AACrB,GAACR,SAAS,CAAV,KAAA,GADqB,WAAA;AAErB,GAACA,SAAS,CAAV,gBAAA,GAFqB,sBAAA;AAGrB,GAACA,SAAS,CAAV,OAAA,GAHqB,aAAA;AAIrB,GAACA,SAAS,CAAV,KAAA,GAJqB,WAAA;AAKrB,GAACA,SAAS,CAAV,GAAA,GALqB,SAAA;AAMrB,GAACA,SAAS,CAAV,UAAA,GANqB,gBAAA;AAOrB,GAACA,SAAS,CAAV,OAAA,GAAqB;AAPA,CAAhB;;AAUA,MAAMS,eAAe,GAAGC,SAAS,IACtCA,SAAS,KAATA,SAAAA,IADK,SAAA;;AAGP,MAAMC,QAAQ,GAAG,CAAC;AAAA,EAAA,IAAA;AAAA,EAAA,SAAA;AAGhBC,EAAAA,aAAa,GAHG,EAAA;AAIhBC,EAAAA,KAAK,GAAG;AAJQ,CAAD,KAMf;AAAO,EAAA,SAAA,EAAWC,EAAE,CAAA,WAAA,EAApB,SAAoB,CAApB;AAA8C,EAAA,KAAA,EAA9C;AAAA,GACG,IAAI,CAAJ,GAAA,CAAS,CAAA,OAAA,EAAA,KAAA,KAAoB;AAC5B,MAAI,CAACL,eAAe,CAACM,OAAO,CAA5B,SAAoB,CAApB,EAAyC;AACvC,WAAA,IAAA;AACD;;AAED,SACE,oBAAA,WAAA;AACE,IAAA,GAAA,EADF,KAAA;AAEE,IAAA,OAAA,EAFF,OAAA;AAGE,IAAA,KAAA,EAHF,KAAA;AAIE,IAAA,aAAA,EALJ;AACE,IADF;AALF,CAAC,CADH,EAeE,oBAAA,gBAAA;AACE,EAAA,QAAA,EAAUC,IAAI,CAAJA,MAAAA,CAAY,CAAC;AAAA,IAAA,OAAA;AAAWN,IAAAA;AAAX,GAAD,KAA4B,CAAC,CAAD,OAAA,IAAaD,eAAe,CADhF,SACgF,CAApEO,CADZ;AAEE,EAAA,UAAA,EAAYA,IAAI,CAAJA,MAAAA,GAFd;AAAA,EAfF,CANF;;AAlCA,MAAA,CAAA,aAAA,CA6DA,QA7DA","sourcesContent":["// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport PdfTableTooltips from './PdfTableTooltips';\nimport PdfTableRow from './PdfTableRow';\n\ntype PdfTableProps = {\n  rows: Array,\n  className: String,\n};\n\nexport const ROW_TYPES = {\n  TITLE: 'TITLE',\n  TITLE_NO_PADDING: 'TITLE_NO_PADDING',\n  REGULAR: 'REGULAR',\n  EMPTY: 'EMPTY',\n  SUM: 'SUM',\n  SUBSECTION: 'SUBSECTION',\n  TOOLTIP: 'TOOLTIP',\n};\n\nexport const classes = {\n  [ROW_TYPES.TITLE]: 'title-row',\n  [ROW_TYPES.TITLE_NO_PADDING]: 'title-row no-padding',\n  [ROW_TYPES.REGULAR]: 'regular-row',\n  [ROW_TYPES.EMPTY]: 'empty-row',\n  [ROW_TYPES.SUM]: 'sum-row',\n  [ROW_TYPES.SUBSECTION]: 'subsection-row',\n  [ROW_TYPES.TOOLTIP]: 'tooltip',\n};\n\nexport const shouldRenderRow = condition =>\n  condition === undefined || condition;\n\nconst PdfTable = ({\n  rows,\n  className,\n  columnOptions = [],\n  style = {},\n}: PdfTableProps) => (\n  <table className={cx('pdf-table', className)} style={style}>\n    {rows.map((rowData, index) => {\n      if (!shouldRenderRow(rowData.condition)) {\n        return null;\n      }\n\n      return (\n        <PdfTableRow\n          key={index}\n          rowData={rowData}\n          index={index}\n          columnOptions={columnOptions}\n        />\n      );\n    })}\n    <PdfTableTooltips\n      tooltips={rows.filter(({ tooltip, condition }) => !!tooltip && shouldRenderRow(condition))}\n      startIndex={rows.length + 1}\n    />\n  </table>\n);\nexport default PdfTable;\n"]},"sourceType":"script","hash":"b769a93f4099b1285ec38a011b8a228b4300205f"}
