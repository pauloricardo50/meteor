{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/borrowerFixtures.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/fixtures/borrowerFixtures.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/borrowerFixtures.js","inputSourceMap":{"version":3,"sources":["imports/core/fixtures/borrowerFixtures.js"],"names":["faker","BorrowerService","RESIDENCE_TYPE","OTHER_INCOME","EXPENSES","insertFakeBorrower","userId","firstName","name","lastName","borrower","gender","address1","address","streetAddress","zipCode","city","citizenships","birthDate","birthPlace","civilStatus","childrenCount","company","companyName","personalBank","isSwiss","isUSPerson","worksForOwnCompany","sameAddress","salary","bonusExists","bonus2015","bonus2016","bonus2017","bonus2018","otherIncome","value","description","PENSIONS","WELFARE","expenses","LEASING","PERSONAL_LOAN","realEstate","loan","MAIN_RESIDENCE","bankFortune","insurance2","insurance3B","logic","insert","createFakeBorrowers","twoBorrowers","borrowerIds","push","getRelatedBorrowerIds","usersIds","fetch","$filters","$in","_id","map","item"],"mappings":"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","sourcesContent":["import faker from 'faker/locale/fr';\n\nimport BorrowerService from '../api/borrowers/server/BorrowerService';\nimport { RESIDENCE_TYPE, OTHER_INCOME, EXPENSES } from '../api/constants';\n\nconst insertFakeBorrower = (userId) => {\n  const firstName = faker.name.firstName();\n  const lastName = faker.name.lastName();\n\n  const borrower = {\n    firstName,\n    lastName,\n    gender: 'F',\n    address1: faker.address.streetAddress(),\n    zipCode: 1201,\n    city: 'Genève',\n    citizenships: 'Suisse, Français',\n    birthDate: '1980-03-01',\n    birthPlace: 'Plan-les-Ouates',\n    civilStatus: 'SINGLE',\n    childrenCount: 2,\n    company: faker.company.companyName(),\n    personalBank: 'BCGE',\n    isSwiss: true,\n    isUSPerson: false,\n    worksForOwnCompany: false,\n    sameAddress: true,\n\n    salary: 300000,\n    bonusExists: true,\n    bonus2015: 15490,\n    bonus2016: 11140,\n    bonus2017: 13780,\n    bonus2018: 12300,\n    otherIncome: [\n      {\n        value: 10000,\n        description: OTHER_INCOME.PENSIONS,\n      },\n      {\n        value: 15000,\n        description: OTHER_INCOME.WELFARE,\n      },\n    ],\n    expenses: [\n      {\n        value: 3000,\n        description: EXPENSES.LEASING,\n      },\n      {\n        value: 4000,\n        description: EXPENSES.PERSONAL_LOAN,\n      },\n    ],\n    realEstate: [\n      {\n        value: 433000,\n        loan: 240000,\n        description: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      },\n    ],\n    bankFortune: 300000,\n    insurance2: [{ value: 120000, description: 'Allianz' }],\n    insurance3B: [{ value: 50000, description: 'Zurich' }],\n    logic: {},\n  };\n\n  return BorrowerService.insert({ borrower, userId });\n};\n\nexport const createFakeBorrowers = (userId, twoBorrowers = false) => {\n  const borrowerIds = [insertFakeBorrower(userId)];\n  if (twoBorrowers) {\n    borrowerIds.push(insertFakeBorrower(userId));\n  }\n  return borrowerIds;\n};\n\nexport const getRelatedBorrowerIds = usersIds =>\n  BorrowerService.fetch({\n    $filters: { userId: { $in: usersIds } },\n    _id: 1,\n  }).map(item => item._id);\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/borrowerFixtures.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/fixtures/borrowerFixtures.js"}},"code":"module.export({\n  createFakeBorrowers: () => createFakeBorrowers,\n  getRelatedBorrowerIds: () => getRelatedBorrowerIds\n});\nlet faker;\nmodule.link(\"faker/locale/fr\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 0);\nlet BorrowerService;\nmodule.link(\"../api/borrowers/server/BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 1);\nlet RESIDENCE_TYPE, OTHER_INCOME, EXPENSES;\nmodule.link(\"../api/constants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  },\n\n  OTHER_INCOME(v) {\n    OTHER_INCOME = v;\n  },\n\n  EXPENSES(v) {\n    EXPENSES = v;\n  }\n\n}, 2);\n\nconst insertFakeBorrower = userId => {\n  const firstName = faker.name.firstName();\n  const lastName = faker.name.lastName();\n  const borrower = {\n    firstName,\n    lastName,\n    gender: 'F',\n    address1: faker.address.streetAddress(),\n    zipCode: 1201,\n    city: 'Genève',\n    citizenships: 'Suisse, Français',\n    birthDate: '1980-03-01',\n    birthPlace: 'Plan-les-Ouates',\n    civilStatus: 'SINGLE',\n    childrenCount: 2,\n    company: faker.company.companyName(),\n    personalBank: 'BCGE',\n    isSwiss: true,\n    isUSPerson: false,\n    worksForOwnCompany: false,\n    sameAddress: true,\n    salary: 300000,\n    bonusExists: true,\n    bonus2015: 15490,\n    bonus2016: 11140,\n    bonus2017: 13780,\n    bonus2018: 12300,\n    otherIncome: [{\n      value: 10000,\n      description: OTHER_INCOME.PENSIONS\n    }, {\n      value: 15000,\n      description: OTHER_INCOME.WELFARE\n    }],\n    expenses: [{\n      value: 3000,\n      description: EXPENSES.LEASING\n    }, {\n      value: 4000,\n      description: EXPENSES.PERSONAL_LOAN\n    }],\n    realEstate: [{\n      value: 433000,\n      loan: 240000,\n      description: RESIDENCE_TYPE.MAIN_RESIDENCE\n    }],\n    bankFortune: 300000,\n    insurance2: [{\n      value: 120000,\n      description: 'Allianz'\n    }],\n    insurance3B: [{\n      value: 50000,\n      description: 'Zurich'\n    }],\n    logic: {}\n  };\n  return BorrowerService.insert({\n    borrower,\n    userId\n  });\n};\n\nconst createFakeBorrowers = (userId, twoBorrowers = false) => {\n  const borrowerIds = [insertFakeBorrower(userId)];\n\n  if (twoBorrowers) {\n    borrowerIds.push(insertFakeBorrower(userId));\n  }\n\n  return borrowerIds;\n};\n\nconst getRelatedBorrowerIds = usersIds => BorrowerService.fetch({\n  $filters: {\n    userId: {\n      $in: usersIds\n    }\n  },\n  _id: 1\n}).map(item => item._id);","map":{"version":3,"sources":["imports/core/fixtures/borrowerFixtures.js"],"names":["insertFakeBorrower","userId","firstName","faker","lastName","borrower","gender","address1","zipCode","city","citizenships","birthDate","birthPlace","civilStatus","childrenCount","company","personalBank","isSwiss","isUSPerson","worksForOwnCompany","sameAddress","salary","bonusExists","bonus2015","bonus2016","bonus2017","bonus2018","otherIncome","value","description","OTHER_INCOME","PENSIONS","WELFARE","expenses","EXPENSES","LEASING","PERSONAL_LOAN","realEstate","loan","RESIDENCE_TYPE","MAIN_RESIDENCE","bankFortune","insurance2","insurance3B","logic","createFakeBorrowers","twoBorrowers","borrowerIds","getRelatedBorrowerIds","usersIds","$filters","$in","_id","item"],"mappings":"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","sourcesContent":["import faker from 'faker/locale/fr';\n\nimport BorrowerService from '../api/borrowers/server/BorrowerService';\nimport { RESIDENCE_TYPE, OTHER_INCOME, EXPENSES } from '../api/constants';\n\nconst insertFakeBorrower = (userId) => {\n  const firstName = faker.name.firstName();\n  const lastName = faker.name.lastName();\n\n  const borrower = {\n    firstName,\n    lastName,\n    gender: 'F',\n    address1: faker.address.streetAddress(),\n    zipCode: 1201,\n    city: 'Genève',\n    citizenships: 'Suisse, Français',\n    birthDate: '1980-03-01',\n    birthPlace: 'Plan-les-Ouates',\n    civilStatus: 'SINGLE',\n    childrenCount: 2,\n    company: faker.company.companyName(),\n    personalBank: 'BCGE',\n    isSwiss: true,\n    isUSPerson: false,\n    worksForOwnCompany: false,\n    sameAddress: true,\n\n    salary: 300000,\n    bonusExists: true,\n    bonus2015: 15490,\n    bonus2016: 11140,\n    bonus2017: 13780,\n    bonus2018: 12300,\n    otherIncome: [\n      {\n        value: 10000,\n        description: OTHER_INCOME.PENSIONS,\n      },\n      {\n        value: 15000,\n        description: OTHER_INCOME.WELFARE,\n      },\n    ],\n    expenses: [\n      {\n        value: 3000,\n        description: EXPENSES.LEASING,\n      },\n      {\n        value: 4000,\n        description: EXPENSES.PERSONAL_LOAN,\n      },\n    ],\n    realEstate: [\n      {\n        value: 433000,\n        loan: 240000,\n        description: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      },\n    ],\n    bankFortune: 300000,\n    insurance2: [{ value: 120000, description: 'Allianz' }],\n    insurance3B: [{ value: 50000, description: 'Zurich' }],\n    logic: {},\n  };\n\n  return BorrowerService.insert({ borrower, userId });\n};\n\nexport const createFakeBorrowers = (userId, twoBorrowers = false) => {\n  const borrowerIds = [insertFakeBorrower(userId)];\n  if (twoBorrowers) {\n    borrowerIds.push(insertFakeBorrower(userId));\n  }\n  return borrowerIds;\n};\n\nexport const getRelatedBorrowerIds = usersIds =>\n  BorrowerService.fetch({\n    $filters: { userId: { $in: usersIds } },\n    _id: 1,\n  }).map(item => item._id);\n"]},"sourceType":"script","hash":"92042851da8094e18a01c2e8e3266a5bb848fcc8"}
