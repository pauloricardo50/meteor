{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/inviteCustomerToProProperties.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/inviteCustomerToProProperties.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/inviteCustomerToProProperties.js","inputSourceMap":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/inviteCustomerToProProperties.js"],"names":["Meteor","PropertyService","proInviteUser","PropertySchema","userAllowedKeys","withMeteorUserId","updateCustomerReferral","checkQuery","impersonateSchema","formatPropertyIds","propertyIds","ids","map","id","slice","join","length","checkProperties","properties","schema","pick","property","_id","externalId","Error","exists","query","getExternalProperties","filter","getInternalProperties","inviteCustomerToProPropertiesAPI","user","userId","body","shareSolvency","impersonateUser","externalProperties","internalProperties","formattedIds","payload","run","then","customer","message","email"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport PropertyService from 'core/api/properties/server/PropertyService';\nimport { proInviteUser } from '../../../methods';\nimport PropertySchema, {\n  userAllowedKeys,\n} from '../../../properties/schemas/PropertySchema';\nimport { withMeteorUserId, updateCustomerReferral } from '../helpers';\nimport { checkQuery, impersonateSchema } from './helpers';\n\nconst formatPropertyIds = (propertyIds) => {\n  const ids = propertyIds.map(id => `\"${id}\"`);\n  return [ids.slice(0, -1).join(', '), ids.slice(-1)[0]].join(ids.length < 2 ? '' : ' and ');\n};\n\nconst checkProperties = (properties) => {\n  const schema = PropertySchema.pick(...userAllowedKeys);\n\n  return properties.map((property) => {\n    const { _id, externalId } = property;\n    if ((!_id && !externalId) || (_id && externalId)) {\n      throw new Meteor.Error('Each property must have either a \"_id\" or \"externalId\" key');\n    }\n    if (_id) {\n      const exists = PropertyService.exists(_id);\n      if (!exists) {\n        throw new Meteor.Error(`Property with _id \"${_id}\" does not exist`);\n      }\n    } else {\n      return checkQuery({ schema, query: property });\n    }\n\n    return property;\n  });\n};\n\nconst getExternalProperties = properties =>\n  properties.filter(({ externalId }) => externalId);\nconst getInternalProperties = properties => properties.filter(({ _id }) => _id);\n\nconst inviteCustomerToProPropertiesAPI = ({\n  user: { _id: userId },\n  body,\n  query,\n}) => {\n  let { user, properties = [], shareSolvency } = body;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  properties = checkProperties(properties);\n  const externalProperties = getExternalProperties(properties);\n  const internalProperties = getInternalProperties(properties);\n\n  const formattedIds = formatPropertyIds([\n    ...externalProperties.map(({ externalId }) => externalId),\n    ...internalProperties.map(({ _id }) => _id),\n  ]);\n\n  const payload = {\n    propertyIds: internalProperties.map(({ _id }) => _id),\n    properties: externalProperties,\n    user,\n    shareSolvency,\n  };\n\n  if (!payload.propertyIds.length && !payload.properties.length) {\n    throw new Meteor.Error('You must provide at least one valid property');\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () =>\n    proInviteUser.run(payload))\n    .then(() =>\n      updateCustomerReferral({ customer: user, userId, impersonateUser }))\n    .then(() => ({\n      message: `Successfully invited user \"${\n        user.email\n      }\" to property ids ${formattedIds}`,\n    }));\n};\n\nexport default inviteCustomerToProPropertiesAPI;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/inviteCustomerToProProperties.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/inviteCustomerToProProperties.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet PropertyService;\nmodule.link(\"../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 1);\nlet proInviteUser;\nmodule.link(\"../../../methods\", {\n  proInviteUser(v) {\n    proInviteUser = v;\n  }\n\n}, 2);\nlet PropertySchema, userAllowedKeys;\nmodule.link(\"../../../properties/schemas/PropertySchema\", {\n  default(v) {\n    PropertySchema = v;\n  },\n\n  userAllowedKeys(v) {\n    userAllowedKeys = v;\n  }\n\n}, 3);\nlet withMeteorUserId, updateCustomerReferral;\nmodule.link(\"../helpers\", {\n  withMeteorUserId(v) {\n    withMeteorUserId = v;\n  },\n\n  updateCustomerReferral(v) {\n    updateCustomerReferral = v;\n  }\n\n}, 4);\nlet checkQuery, impersonateSchema;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  impersonateSchema(v) {\n    impersonateSchema = v;\n  }\n\n}, 5);\n\nconst formatPropertyIds = propertyIds => {\n  const ids = propertyIds.map(id => `\"${id}\"`);\n  return [ids.slice(0, -1).join(', '), ids.slice(-1)[0]].join(ids.length < 2 ? '' : ' and ');\n};\n\nconst checkProperties = properties => {\n  const schema = PropertySchema.pick(...userAllowedKeys);\n  return properties.map(property => {\n    const {\n      _id,\n      externalId\n    } = property;\n\n    if (!_id && !externalId || _id && externalId) {\n      throw new Meteor.Error('Each property must have either a \"_id\" or \"externalId\" key');\n    }\n\n    if (_id) {\n      const exists = PropertyService.exists(_id);\n\n      if (!exists) {\n        throw new Meteor.Error(`Property with _id \"${_id}\" does not exist`);\n      }\n    } else {\n      return checkQuery({\n        schema,\n        query: property\n      });\n    }\n\n    return property;\n  });\n};\n\nconst getExternalProperties = properties => properties.filter(({\n  externalId\n}) => externalId);\n\nconst getInternalProperties = properties => properties.filter(({\n  _id\n}) => _id);\n\nconst inviteCustomerToProPropertiesAPI = ({\n  user: {\n    _id: userId\n  },\n  body,\n  query\n}) => {\n  let {\n    user,\n    properties = [],\n    shareSolvency\n  } = body;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: impersonateSchema\n  });\n  properties = checkProperties(properties);\n  const externalProperties = getExternalProperties(properties);\n  const internalProperties = getInternalProperties(properties);\n  const formattedIds = formatPropertyIds([...externalProperties.map(({\n    externalId\n  }) => externalId), ...internalProperties.map(({\n    _id\n  }) => _id)]);\n  const payload = {\n    propertyIds: internalProperties.map(({\n      _id\n    }) => _id),\n    properties: externalProperties,\n    user,\n    shareSolvency\n  };\n\n  if (!payload.propertyIds.length && !payload.properties.length) {\n    throw new Meteor.Error('You must provide at least one valid property');\n  }\n\n  return withMeteorUserId({\n    userId,\n    impersonateUser\n  }, () => proInviteUser.run(payload)).then(() => updateCustomerReferral({\n    customer: user,\n    userId,\n    impersonateUser\n  })).then(() => ({\n    message: `Successfully invited user \"${user.email}\" to property ids ${formattedIds}`\n  }));\n};\n\nmodule.exportDefault(inviteCustomerToProPropertiesAPI);","map":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/inviteCustomerToProProperties.js"],"names":["formatPropertyIds","propertyIds","ids","id","checkProperties","properties","schema","PropertySchema","property","externalId","_id","Meteor","exists","PropertyService","checkQuery","query","getExternalProperties","getInternalProperties","inviteCustomerToProPropertiesAPI","user","userId","shareSolvency","impersonateUser","impersonateSchema","externalProperties","internalProperties","formattedIds","payload","proInviteUser","updateCustomerReferral","customer","message","email"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport PropertyService from 'core/api/properties/server/PropertyService';\nimport { proInviteUser } from '../../../methods';\nimport PropertySchema, {\n  userAllowedKeys,\n} from '../../../properties/schemas/PropertySchema';\nimport { withMeteorUserId, updateCustomerReferral } from '../helpers';\nimport { checkQuery, impersonateSchema } from './helpers';\n\nconst formatPropertyIds = (propertyIds) => {\n  const ids = propertyIds.map(id => `\"${id}\"`);\n  return [ids.slice(0, -1).join(', '), ids.slice(-1)[0]].join(ids.length < 2 ? '' : ' and ');\n};\n\nconst checkProperties = (properties) => {\n  const schema = PropertySchema.pick(...userAllowedKeys);\n\n  return properties.map((property) => {\n    const { _id, externalId } = property;\n    if ((!_id && !externalId) || (_id && externalId)) {\n      throw new Meteor.Error('Each property must have either a \"_id\" or \"externalId\" key');\n    }\n    if (_id) {\n      const exists = PropertyService.exists(_id);\n      if (!exists) {\n        throw new Meteor.Error(`Property with _id \"${_id}\" does not exist`);\n      }\n    } else {\n      return checkQuery({ schema, query: property });\n    }\n\n    return property;\n  });\n};\n\nconst getExternalProperties = properties =>\n  properties.filter(({ externalId }) => externalId);\nconst getInternalProperties = properties => properties.filter(({ _id }) => _id);\n\nconst inviteCustomerToProPropertiesAPI = ({\n  user: { _id: userId },\n  body,\n  query,\n}) => {\n  let { user, properties = [], shareSolvency } = body;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  properties = checkProperties(properties);\n  const externalProperties = getExternalProperties(properties);\n  const internalProperties = getInternalProperties(properties);\n\n  const formattedIds = formatPropertyIds([\n    ...externalProperties.map(({ externalId }) => externalId),\n    ...internalProperties.map(({ _id }) => _id),\n  ]);\n\n  const payload = {\n    propertyIds: internalProperties.map(({ _id }) => _id),\n    properties: externalProperties,\n    user,\n    shareSolvency,\n  };\n\n  if (!payload.propertyIds.length && !payload.properties.length) {\n    throw new Meteor.Error('You must provide at least one valid property');\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () =>\n    proInviteUser.run(payload))\n    .then(() =>\n      updateCustomerReferral({ customer: user, userId, impersonateUser }))\n    .then(() => ({\n      message: `Successfully invited user \"${\n        user.email\n      }\" to property ids ${formattedIds}`,\n    }));\n};\n\nexport default inviteCustomerToProPropertiesAPI;\n"]},"sourceType":"script","hash":"d9a6547d87f64c62f0fbc97f7a0ac905d01715c2"}
