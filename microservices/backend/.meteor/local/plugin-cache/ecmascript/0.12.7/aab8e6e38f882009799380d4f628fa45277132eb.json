{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/notaryFees/cantonConfigs.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/utils/notaryFees/cantonConfigs.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/notaryFees/cantonConfigs.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/notaryFees/cantonConfigs.js"],"names":["RESIDENCE_TYPE","degressive","cantons","VAT","isCasatax","residenceType","propertyValue","MAIN_RESIDENCE","GE","CASATAX_CUTOFF","notaryIncomeFromProperty","amount","brackets","NOTARY_PROPERTY_BRACKETS","minTax","NOTARY_PROPERTY_BRACKETS_MIN","notaryIncomeFromMortgageNote","mortgageNoteIncrease","NOTARY_NOTE_BRACKETS","propertyConstructionTax","constructionValue","PROPERTY_CONSTRUCTION_TAX","propertyRegistrationTax","PROPERTY_REGISTRATION_TAX","landRegistryPropertyTax","LAND_REGISTRY_PROPERTY_TAX","mortgageNoteRegistrationTax","MORTGAGE_NOTE_REGISTRATION_TAX","landRegistryMortgageNoteTax","LAND_REGISTRY_MORTGAGE_NOTE_TAX","buyersContractDeductions","transferTax","Math","min","CASATAX_PROPERTY_DEDUCTION","additionalFees","ADDITIONAL_FEES","mortgageNoteDeductions","MORTGAGE_NOTE_CASATAX_DEDUCTION","VD"],"mappings":"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","sourcesContent":["import { RESIDENCE_TYPE } from 'core/api/constants';\nimport degressive from './degressive';\nimport * as cantons from './cantonConstants';\nimport { VAT } from '../../config/financeConstants';\n\nconst isCasatax = ({ residenceType, propertyValue }) =>\n  residenceType === RESIDENCE_TYPE.MAIN_RESIDENCE\n  && propertyValue <= cantons.GE.CASATAX_CUTOFF;\n\nexport const GE = {\n  notaryIncomeFromProperty: ({ propertyValue }) =>\n    degressive({\n      amount: propertyValue,\n      brackets: cantons.GE.NOTARY_PROPERTY_BRACKETS,\n      minTax: cantons.GE.NOTARY_PROPERTY_BRACKETS_MIN,\n    })\n    * (1 + VAT),\n  notaryIncomeFromMortgageNote: ({ mortgageNoteIncrease }) =>\n    degressive({\n      amount: mortgageNoteIncrease,\n      brackets: cantons.GE.NOTARY_NOTE_BRACKETS,\n    })\n    * (1 + VAT),\n  propertyConstructionTax: ({ constructionValue }) =>\n    constructionValue * cantons.GE.PROPERTY_CONSTRUCTION_TAX,\n  propertyRegistrationTax: ({ propertyValue }) =>\n    propertyValue * cantons.GE.PROPERTY_REGISTRATION_TAX,\n  landRegistryPropertyTax: ({ propertyValue }) =>\n    propertyValue * cantons.GE.LAND_REGISTRY_PROPERTY_TAX,\n  mortgageNoteRegistrationTax: ({ mortgageNoteIncrease }) =>\n    mortgageNoteIncrease * cantons.GE.MORTGAGE_NOTE_REGISTRATION_TAX,\n  landRegistryMortgageNoteTax: ({ mortgageNoteIncrease }) =>\n    mortgageNoteIncrease * cantons.GE.LAND_REGISTRY_MORTGAGE_NOTE_TAX,\n  buyersContractDeductions: ({ residenceType, propertyValue, transferTax }) =>\n    (isCasatax({ residenceType, propertyValue })\n      ? Math.min(cantons.GE.CASATAX_PROPERTY_DEDUCTION, transferTax)\n      : 0),\n  additionalFees: () => cantons.GE.ADDITIONAL_FEES,\n  mortgageNoteDeductions: ({\n    residenceType,\n    propertyValue,\n    mortgageNoteRegistrationTax,\n  }) =>\n    (isCasatax({ residenceType, propertyValue })\n      ? mortgageNoteRegistrationTax * cantons.GE.MORTGAGE_NOTE_CASATAX_DEDUCTION\n      : 0),\n};\n\nexport const VD = {\n  notaryIncomeFromProperty: ({ propertyValue }) =>\n    degressive({\n      amount: propertyValue,\n      brackets: cantons.VD.NOTARY_PROPERTY_BRACKETS,\n      minTax: cantons.VD.NOTARY_PROPERTY_BRACKETS_MIN,\n    })\n    * (1 + VAT),\n  propertyConstructionTax: () => 0, // TODO\n  notaryIncomeFromMortgageNote: ({ mortgageNoteIncrease }) =>\n    degressive({\n      amount: mortgageNoteIncrease,\n      brackets: cantons.VD.NOTARY_NOTE_BRACKETS,\n    })\n    * (1 + VAT),\n  propertyRegistrationTax: ({ propertyValue }) =>\n    propertyValue * cantons.VD.PROPERTY_REGISTRATION_TAX,\n  landRegistryPropertyTax: ({ propertyValue }) =>\n    propertyValue * cantons.VD.LAND_REGISTRY_PROPERTY_TAX,\n  mortgageNoteRegistrationTax: ({ mortgageNoteIncrease }) => 0,\n  landRegistryMortgageNoteTax: ({ mortgageNoteIncrease }) =>\n    mortgageNoteIncrease * cantons.VD.LAND_REGISTRY_MORTGAGE_NOTE_TAX,\n  additionalFees: () => cantons.VD.ADDITIONAL_FEES,\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/notaryFees/cantonConfigs.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/notaryFees/cantonConfigs.js"}},"code":"module.export({\n  GE: function () {\n    return GE;\n  },\n  VD: function () {\n    return VD;\n  }\n});\nvar RESIDENCE_TYPE;\nmodule.link(\"../../api/constants\", {\n  RESIDENCE_TYPE: function (v) {\n    RESIDENCE_TYPE = v;\n  }\n}, 0);\nvar degressive;\nmodule.link(\"./degressive\", {\n  \"default\": function (v) {\n    degressive = v;\n  }\n}, 1);\nvar cantons;\nmodule.link(\"./cantonConstants\", {\n  \"*\": function (v) {\n    cantons = v;\n  }\n}, 2);\nvar VAT;\nmodule.link(\"../../config/financeConstants\", {\n  VAT: function (v) {\n    VAT = v;\n  }\n}, 3);\n\nvar isCasatax = function (_ref) {\n  var residenceType = _ref.residenceType,\n      propertyValue = _ref.propertyValue;\n  return residenceType === RESIDENCE_TYPE.MAIN_RESIDENCE && propertyValue <= cantons.GE.CASATAX_CUTOFF;\n};\n\nvar GE = {\n  notaryIncomeFromProperty: function (_ref2) {\n    var propertyValue = _ref2.propertyValue;\n    return degressive({\n      amount: propertyValue,\n      brackets: cantons.GE.NOTARY_PROPERTY_BRACKETS,\n      minTax: cantons.GE.NOTARY_PROPERTY_BRACKETS_MIN\n    }) * (1 + VAT);\n  },\n  notaryIncomeFromMortgageNote: function (_ref3) {\n    var mortgageNoteIncrease = _ref3.mortgageNoteIncrease;\n    return degressive({\n      amount: mortgageNoteIncrease,\n      brackets: cantons.GE.NOTARY_NOTE_BRACKETS\n    }) * (1 + VAT);\n  },\n  propertyConstructionTax: function (_ref4) {\n    var constructionValue = _ref4.constructionValue;\n    return constructionValue * cantons.GE.PROPERTY_CONSTRUCTION_TAX;\n  },\n  propertyRegistrationTax: function (_ref5) {\n    var propertyValue = _ref5.propertyValue;\n    return propertyValue * cantons.GE.PROPERTY_REGISTRATION_TAX;\n  },\n  landRegistryPropertyTax: function (_ref6) {\n    var propertyValue = _ref6.propertyValue;\n    return propertyValue * cantons.GE.LAND_REGISTRY_PROPERTY_TAX;\n  },\n  mortgageNoteRegistrationTax: function (_ref7) {\n    var mortgageNoteIncrease = _ref7.mortgageNoteIncrease;\n    return mortgageNoteIncrease * cantons.GE.MORTGAGE_NOTE_REGISTRATION_TAX;\n  },\n  landRegistryMortgageNoteTax: function (_ref8) {\n    var mortgageNoteIncrease = _ref8.mortgageNoteIncrease;\n    return mortgageNoteIncrease * cantons.GE.LAND_REGISTRY_MORTGAGE_NOTE_TAX;\n  },\n  buyersContractDeductions: function (_ref9) {\n    var residenceType = _ref9.residenceType,\n        propertyValue = _ref9.propertyValue,\n        transferTax = _ref9.transferTax;\n    return isCasatax({\n      residenceType: residenceType,\n      propertyValue: propertyValue\n    }) ? Math.min(cantons.GE.CASATAX_PROPERTY_DEDUCTION, transferTax) : 0;\n  },\n  additionalFees: function () {\n    return cantons.GE.ADDITIONAL_FEES;\n  },\n  mortgageNoteDeductions: function (_ref10) {\n    var residenceType = _ref10.residenceType,\n        propertyValue = _ref10.propertyValue,\n        mortgageNoteRegistrationTax = _ref10.mortgageNoteRegistrationTax;\n    return isCasatax({\n      residenceType: residenceType,\n      propertyValue: propertyValue\n    }) ? mortgageNoteRegistrationTax * cantons.GE.MORTGAGE_NOTE_CASATAX_DEDUCTION : 0;\n  }\n};\nvar VD = {\n  notaryIncomeFromProperty: function (_ref11) {\n    var propertyValue = _ref11.propertyValue;\n    return degressive({\n      amount: propertyValue,\n      brackets: cantons.VD.NOTARY_PROPERTY_BRACKETS,\n      minTax: cantons.VD.NOTARY_PROPERTY_BRACKETS_MIN\n    }) * (1 + VAT);\n  },\n  propertyConstructionTax: function () {\n    return 0;\n  },\n  // TODO\n  notaryIncomeFromMortgageNote: function (_ref12) {\n    var mortgageNoteIncrease = _ref12.mortgageNoteIncrease;\n    return degressive({\n      amount: mortgageNoteIncrease,\n      brackets: cantons.VD.NOTARY_NOTE_BRACKETS\n    }) * (1 + VAT);\n  },\n  propertyRegistrationTax: function (_ref13) {\n    var propertyValue = _ref13.propertyValue;\n    return propertyValue * cantons.VD.PROPERTY_REGISTRATION_TAX;\n  },\n  landRegistryPropertyTax: function (_ref14) {\n    var propertyValue = _ref14.propertyValue;\n    return propertyValue * cantons.VD.LAND_REGISTRY_PROPERTY_TAX;\n  },\n  mortgageNoteRegistrationTax: function (_ref15) {\n    var mortgageNoteIncrease = _ref15.mortgageNoteIncrease;\n    return 0;\n  },\n  landRegistryMortgageNoteTax: function (_ref16) {\n    var mortgageNoteIncrease = _ref16.mortgageNoteIncrease;\n    return mortgageNoteIncrease * cantons.VD.LAND_REGISTRY_MORTGAGE_NOTE_TAX;\n  },\n  additionalFees: function () {\n    return cantons.VD.ADDITIONAL_FEES;\n  }\n};","map":{"version":3,"sources":["imports/core/utils/notaryFees/cantonConfigs.js"],"names":["RESIDENCE_TYPE","isCasatax","propertyValue","residenceType","cantons","GE","notaryIncomeFromProperty","amount","brackets","minTax","NOTARY_PROPERTY_BRACKETS_MIN","notaryIncomeFromMortgageNote","mortgageNoteIncrease","NOTARY_NOTE_BRACKETS","propertyConstructionTax","constructionValue","propertyRegistrationTax","landRegistryPropertyTax","mortgageNoteRegistrationTax","landRegistryMortgageNoteTax","buyersContractDeductions","transferTax","Math","additionalFees","mortgageNoteDeductions","VD","ADDITIONAL_FEES"],"mappings":"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","sourcesContent":["import { RESIDENCE_TYPE } from 'core/api/constants';\nimport degressive from './degressive';\nimport * as cantons from './cantonConstants';\nimport { VAT } from '../../config/financeConstants';\n\nconst isCasatax = ({ residenceType, propertyValue }) =>\n  residenceType === RESIDENCE_TYPE.MAIN_RESIDENCE\n  && propertyValue <= cantons.GE.CASATAX_CUTOFF;\n\nexport const GE = {\n  notaryIncomeFromProperty: ({ propertyValue }) =>\n    degressive({\n      amount: propertyValue,\n      brackets: cantons.GE.NOTARY_PROPERTY_BRACKETS,\n      minTax: cantons.GE.NOTARY_PROPERTY_BRACKETS_MIN,\n    })\n    * (1 + VAT),\n  notaryIncomeFromMortgageNote: ({ mortgageNoteIncrease }) =>\n    degressive({\n      amount: mortgageNoteIncrease,\n      brackets: cantons.GE.NOTARY_NOTE_BRACKETS,\n    })\n    * (1 + VAT),\n  propertyConstructionTax: ({ constructionValue }) =>\n    constructionValue * cantons.GE.PROPERTY_CONSTRUCTION_TAX,\n  propertyRegistrationTax: ({ propertyValue }) =>\n    propertyValue * cantons.GE.PROPERTY_REGISTRATION_TAX,\n  landRegistryPropertyTax: ({ propertyValue }) =>\n    propertyValue * cantons.GE.LAND_REGISTRY_PROPERTY_TAX,\n  mortgageNoteRegistrationTax: ({ mortgageNoteIncrease }) =>\n    mortgageNoteIncrease * cantons.GE.MORTGAGE_NOTE_REGISTRATION_TAX,\n  landRegistryMortgageNoteTax: ({ mortgageNoteIncrease }) =>\n    mortgageNoteIncrease * cantons.GE.LAND_REGISTRY_MORTGAGE_NOTE_TAX,\n  buyersContractDeductions: ({ residenceType, propertyValue, transferTax }) =>\n    (isCasatax({ residenceType, propertyValue })\n      ? Math.min(cantons.GE.CASATAX_PROPERTY_DEDUCTION, transferTax)\n      : 0),\n  additionalFees: () => cantons.GE.ADDITIONAL_FEES,\n  mortgageNoteDeductions: ({\n    residenceType,\n    propertyValue,\n    mortgageNoteRegistrationTax,\n  }) =>\n    (isCasatax({ residenceType, propertyValue })\n      ? mortgageNoteRegistrationTax * cantons.GE.MORTGAGE_NOTE_CASATAX_DEDUCTION\n      : 0),\n};\n\nexport const VD = {\n  notaryIncomeFromProperty: ({ propertyValue }) =>\n    degressive({\n      amount: propertyValue,\n      brackets: cantons.VD.NOTARY_PROPERTY_BRACKETS,\n      minTax: cantons.VD.NOTARY_PROPERTY_BRACKETS_MIN,\n    })\n    * (1 + VAT),\n  propertyConstructionTax: () => 0, // TODO\n  notaryIncomeFromMortgageNote: ({ mortgageNoteIncrease }) =>\n    degressive({\n      amount: mortgageNoteIncrease,\n      brackets: cantons.VD.NOTARY_NOTE_BRACKETS,\n    })\n    * (1 + VAT),\n  propertyRegistrationTax: ({ propertyValue }) =>\n    propertyValue * cantons.VD.PROPERTY_REGISTRATION_TAX,\n  landRegistryPropertyTax: ({ propertyValue }) =>\n    propertyValue * cantons.VD.LAND_REGISTRY_PROPERTY_TAX,\n  mortgageNoteRegistrationTax: ({ mortgageNoteIncrease }) => 0,\n  landRegistryMortgageNoteTax: ({ mortgageNoteIncrease }) =>\n    mortgageNoteIncrease * cantons.VD.LAND_REGISTRY_MORTGAGE_NOTE_TAX,\n  additionalFees: () => cantons.VD.ADDITIONAL_FEES,\n};\n"]},"sourceType":"script","hash":"aab8e6e38f882009799380d4f628fa45277132eb"}
