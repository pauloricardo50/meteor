{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/TranchePicker.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/TranchePicker/TranchePicker.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/TranchePicker.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/TranchePicker/TranchePicker.jsx"],"names":["React","TranchePickerContainer","Button","Tranche","INTEREST_RATES","TranchePickerProps","tranches","Array","value","type","addTranche","Function","removeTranche","setValue","setType","options","Object","interestRatesOrder","values","filterOptions","currentType","currentSelectedTypes","map","difference","filter","id","includes","currentOption","find","withCurrentType","sortedOptions","sort","id1","id2","indexOf","TranchePicker","newValue","_","newType"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,SAASC,cAAT;AAEA,KAAKC,kBAAL,GAA0B;AACxBC,EAAAA,QAAQ,EAAEC,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,IAAI,EAAE,MAAvB;AAAA,GAAD,CADS;AAExBC,EAAAA,UAAU,EAAEC,QAFY;AAGxBC,EAAAA,aAAa,EAAED,QAHS;AAIxBE,EAAAA,QAAQ,EAAEF,QAJc;AAKxBG,EAAAA,OAAO,EAAEH,QALe;AAMxBI,EAAAA,OAAO,EAAER,KAAK,CAACS,MAAD,CANU;AAAA,CAA1B;AASA,MAAMC,kBAAkB,GAAGD,MAAM,CAACE,MAAP,CAAcd,cAAd,CAA3B;;AAEA,MAAMe,aAAa,GAAG,CAACJ,OAAD,EAAUT,QAAV,EAAoBc,WAApB,KAAoC;AACxD,QAAMC,oBAAoB,GAAGf,QAAQ,CAACgB,GAAT,CAAa,CAAC;AAAEb,IAAAA;AAAF,GAAD,KAAcA,IAA3B,CAA7B;AACA,QAAMc,UAAU,GAAGR,OAAO,CAACS,MAAR,CAAe,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAY,CAACJ,oBAAoB,CAACK,QAArB,CAA8BD,EAA9B,CAA5B,CAAnB;AACA,QAAME,aAAa,GAAGZ,OAAO,CAACa,IAAR,CAAa,CAAC;AAAEH,IAAAA;AAAF,GAAD,KAAYA,EAAE,KAAKL,WAAhC,CAAtB;AACA,QAAMS,eAAe,GAAGF,aAAa,GACjC,CAAC,GAAGJ,UAAJ,EAAgBI,aAAhB,CADiC,GAEjCJ,UAFJ;AAIA,QAAMO,aAAa,GAAGD,eAAe,CAACE,IAAhB,CAAqB,CAAC;AAAEN,IAAAA,EAAE,EAAEO;AAAN,GAAD,EAAc;AAAEP,IAAAA,EAAE,EAAEQ;AAAN,GAAd,KACzChB,kBAAkB,CAACiB,OAAnB,CAA2BF,GAA3B,IAAkCf,kBAAkB,CAACiB,OAAnB,CAA2BD,GAA3B,CADd,CAAtB;AAEA,SAAOH,aAAP;AACD,CAXD;;AAaA,OAAO,MAAMK,aAAa,GAAG,CAAC;AAC5B7B,EAAAA,QAD4B;AAE5BI,EAAAA,UAF4B;AAG5BE,EAAAA,aAH4B;AAI5BC,EAAAA,QAJ4B;AAK5BC,EAAAA,OAL4B;AAM5BC,EAAAA;AAN4B,CAO7B,EAAEV,kBAP0B,KAQ3B,CAAC,GAAD,CAAK,UAAU,gBAAf;IACE,CAACC,QAAQ,CAACgB,GAAT,CAAa,CAAC;AAAEd,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KACZ,CAAC,OAAD,CACE,IAAI,CAACA,IAAD,CADN,CAEE,MAAM,CAACD,KAAD,CAFR,CAGE,KAAK,CAACC,IAAD,CAHP,CAIE,cAAc,CAAC,MAAMG,aAAa,CAACH,IAAD,CAApB,CAJhB,CAKE,SAAS,CAAC2B,QAAQ,IAAIvB,QAAQ,CAACJ,IAAD,EAAO2B,QAAP,CAArB,CALX,CAME,QAAQ,CAAC,CAACC,CAAD,EAAIC,OAAJ,KAAgBxB,OAAO,CAACL,IAAD,EAAO6B,OAAP,CAAxB,CANV,CAOE,QAAQ,CAACnB,aAAa,CAACJ,OAAD,EAAUT,QAAV,EAAoBG,IAApB,CAAd,CAPV,GADD,CAAD;IAWA,CAAC,MAAD,CAAQ,UAAU,KAAlB,CAAwB,OAAxB,CAAgC,QAAQ,CAACC,UAAD,CAAxC;;IAEA,EAAE,MAAF;EACF,EAAE,GAAF,CAvBK;AA0BP,eAAeT,sBAAsB,CAACkC,aAAD,CAArC","sourcesContent":["// @flow\nimport React from 'react';\nimport TranchePickerContainer from './TranchePickerContainer';\nimport Button from '../Button';\nimport Tranche from './Tranche';\nimport { INTEREST_RATES } from '../../api/constants';\n\ntype TranchePickerProps = {\n  tranches: Array<{ value: number, type: string }>,\n  addTranche: Function,\n  removeTranche: Function,\n  setValue: Function,\n  setType: Function,\n  options: Array<Object>,\n};\n\nconst interestRatesOrder = Object.values(INTEREST_RATES);\n\nconst filterOptions = (options, tranches, currentType) => {\n  const currentSelectedTypes = tranches.map(({ type }) => type);\n  const difference = options.filter(({ id }) => !currentSelectedTypes.includes(id));\n  const currentOption = options.find(({ id }) => id === currentType);\n  const withCurrentType = currentOption\n    ? [...difference, currentOption]\n    : difference;\n\n  const sortedOptions = withCurrentType.sort(({ id: id1 }, { id: id2 }) =>\n    interestRatesOrder.indexOf(id1) - interestRatesOrder.indexOf(id2));\n  return sortedOptions;\n};\n\nexport const TranchePicker = ({\n  tranches,\n  addTranche,\n  removeTranche,\n  setValue,\n  setType,\n  options,\n}: TranchePickerProps) => (\n  <div className=\"tranche-picker\">\n    {tranches.map(({ value, type }) => (\n      <Tranche\n        key={type}\n        value={value}\n        type={type}\n        removeTranche={() => removeTranche(type)}\n        setValue={newValue => setValue(type, newValue)}\n        setType={(_, newType) => setType(type, newType)}\n        options={filterOptions(options, tranches, type)}\n      />\n    ))}\n    <Button className=\"add\" primary onClick={addTranche}>\n      Ajouter\n    </Button>\n  </div>\n);\n\nexport default TranchePickerContainer(TranchePicker);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/TranchePicker.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/TranchePicker/TranchePicker.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nmodule.export({\n  TranchePicker: function () {\n    return TranchePicker;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar TranchePickerContainer;\nmodule.link(\"./TranchePickerContainer\", {\n  \"default\": function (v) {\n    TranchePickerContainer = v;\n  }\n}, 1);\nvar Button;\nmodule.link(\"../Button\", {\n  \"default\": function (v) {\n    Button = v;\n  }\n}, 2);\nvar Tranche;\nmodule.link(\"./Tranche\", {\n  \"default\": function (v) {\n    Tranche = v;\n  }\n}, 3);\nvar INTEREST_RATES;\nmodule.link(\"../../api/constants\", {\n  INTEREST_RATES: function (v) {\n    INTEREST_RATES = v;\n  }\n}, 4);\nvar interestRatesOrder = Object.values(INTEREST_RATES);\n\nvar filterOptions = function (options, tranches, currentType) {\n  var currentSelectedTypes = tranches.map(function (_ref) {\n    var type = _ref.type;\n    return type;\n  });\n  var difference = options.filter(function (_ref2) {\n    var id = _ref2.id;\n    return !currentSelectedTypes.includes(id);\n  });\n  var currentOption = options.find(function (_ref3) {\n    var id = _ref3.id;\n    return id === currentType;\n  });\n  var withCurrentType = currentOption ? [].concat((0, _toConsumableArray2.default)(difference), [currentOption]) : difference;\n  var sortedOptions = withCurrentType.sort(function (_ref4, _ref5) {\n    var id1 = _ref4.id;\n    var id2 = _ref5.id;\n    return interestRatesOrder.indexOf(id1) - interestRatesOrder.indexOf(id2);\n  });\n  return sortedOptions;\n};\n\nvar TranchePicker = function (_ref6) {\n  var tranches = _ref6.tranches,\n      addTranche = _ref6.addTranche,\n      removeTranche = _ref6.removeTranche,\n      setValue = _ref6.setValue,\n      setType = _ref6.setType,\n      options = _ref6.options;\n  return React.createElement(\"div\", {\n    className: \"tranche-picker\"\n  }, tranches.map(function (_ref7) {\n    var value = _ref7.value,\n        type = _ref7.type;\n    return React.createElement(Tranche, {\n      key: type,\n      value: value,\n      type: type,\n      removeTranche: function () {\n        return removeTranche(type);\n      },\n      setValue: function (newValue) {\n        return setValue(type, newValue);\n      },\n      setType: function (_, newType) {\n        return setType(type, newType);\n      },\n      options: filterOptions(options, tranches, type)\n    });\n  }), React.createElement(Button, {\n    className: \"add\",\n    primary: true,\n    onClick: addTranche\n  }, \"Ajouter\"));\n};\n\nmodule.exportDefault(TranchePickerContainer(TranchePicker));","map":{"version":3,"sources":["imports/core/components/TranchePicker/TranchePicker.jsx"],"names":["interestRatesOrder","Object","filterOptions","currentSelectedTypes","type","difference","options","id","currentOption","withCurrentType","sortedOptions","id1","id2","TranchePicker","tranches","removeTranche","newValue","setValue","setType","TranchePickerContainer"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport TranchePickerContainer from './TranchePickerContainer';\nimport Button from '../Button';\nimport Tranche from './Tranche';\nimport { INTEREST_RATES } from '../../api/constants';\n\ntype TranchePickerProps = {\n  tranches: Array<{ value: number, type: string }>,\n  addTranche: Function,\n  removeTranche: Function,\n  setValue: Function,\n  setType: Function,\n  options: Array<Object>,\n};\n\nconst interestRatesOrder = Object.values(INTEREST_RATES);\n\nconst filterOptions = (options, tranches, currentType) => {\n  const currentSelectedTypes = tranches.map(({ type }) => type);\n  const difference = options.filter(({ id }) => !currentSelectedTypes.includes(id));\n  const currentOption = options.find(({ id }) => id === currentType);\n  const withCurrentType = currentOption\n    ? [...difference, currentOption]\n    : difference;\n\n  const sortedOptions = withCurrentType.sort(({ id: id1 }, { id: id2 }) =>\n    interestRatesOrder.indexOf(id1) - interestRatesOrder.indexOf(id2));\n  return sortedOptions;\n};\n\nexport const TranchePicker = ({\n  tranches,\n  addTranche,\n  removeTranche,\n  setValue,\n  setType,\n  options,\n}: TranchePickerProps) => (\n  <div className=\"tranche-picker\">\n    {tranches.map(({ value, type }) => (\n      <Tranche\n        key={type}\n        value={value}\n        type={type}\n        removeTranche={() => removeTranche(type)}\n        setValue={newValue => setValue(type, newValue)}\n        setType={(_, newType) => setType(type, newType)}\n        options={filterOptions(options, tranches, type)}\n      />\n    ))}\n    <Button className=\"add\" primary onClick={addTranche}>\n      Ajouter\n    </Button>\n  </div>\n);\n\nexport default TranchePickerContainer(TranchePicker);\n"]},"sourceType":"script","hash":"e22edf4206c3ff17af96c12156acd63c0e548ad5"}
