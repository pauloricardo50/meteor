{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/analytics/server/analyticsListeners.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/analytics/server/analyticsListeners.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/analytics/server/analyticsListeners.js","inputSourceMap":{"version":3,"sources":["imports/core/api/analytics/server/analyticsListeners.js"],"names":["loanSetStatus","LoanService","UserService","ServerEventService","EVENTS","Analytics","addAfterMethodListener","context","result","prevStatus","nextStatus","params","loanId","userId","adminId","referredByOrganisation","referredByUser","assigneeId","assigneeName","customerName","customerId","category","loanCategory","name","loanName","purchaseType","loanPurchaseType","residenceType","loanResidenceType","step","loanStep","fetchOne","$filters","_id","adminName","user","assignedEmployee","analytics","track","LOAN_STATUS_CHANGED"],"mappings":"AAAA,SAASA,aAAT;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AAEAF,kBAAkB,CAACG,sBAAnB,CACEN,aADF,EAEE,CAAC;AAAEO,EAAAA,OAAF;AAAWC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAAnB;AAA+CC,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF;AAAvD,CAAD,KAAyE;AACvE,QAAM;AAAEC,IAAAA,MAAM,EAAEC;AAAV,MAAsBP,OAA5B;AACA,MAAIQ,sBAAJ;AACA,MAAIC,cAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,YAAJ;AACA,QAAM;AACJN,IAAAA,MAAM,EAAEO,UADJ;AAEJC,IAAAA,QAAQ,EAAEC,YAFN;AAGJC,IAAAA,IAAI,EAAEC,QAHF;AAIJC,IAAAA,YAAY,EAAEC,gBAJV;AAKJC,IAAAA,aAAa,EAAEC,iBALX;AAMJC,IAAAA,IAAI,EAAEC;AANF,MAOF7B,WAAW,CAAC8B,QAAZ,CAAqB;AACvBC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,GAAG,EAAErB;AAAP,KADa;AAEvBC,IAAAA,MAAM,EAAE,CAFe;AAGvBQ,IAAAA,QAAQ,EAAE,CAHa;AAIvBE,IAAAA,IAAI,EAAE,CAJiB;AAKvBE,IAAAA,YAAY,EAAE,CALS;AAMvBE,IAAAA,aAAa,EAAE,CANQ;AAOvBE,IAAAA,IAAI,EAAE;AAPiB,GAArB,CAPJ;AAgBA,QAAM;AAAEN,IAAAA,IAAI,EAAEW;AAAR,MAAsBhC,WAAW,CAAC6B,QAAZ,CAAqB;AAC/CC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,GAAG,EAAEnB;AAAP,KADqC;AAE/CS,IAAAA,IAAI,EAAE;AAFyC,GAArB,CAA5B;;AAIA,MAAIH,UAAJ,EAAgB;AACd,UAAMe,IAAI,GAAGjC,WAAW,CAAC6B,QAAZ,CAAqB;AAChCC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAEb;AAAP,OADsB;AAEhCJ,MAAAA,cAAc,EAAE;AAAEO,QAAAA,IAAI,EAAE;AAAR,OAFgB;AAGhCR,MAAAA,sBAAsB,EAAE;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAHQ;AAIhCa,MAAAA,gBAAgB,EAAE;AAAEb,QAAAA,IAAI,EAAE;AAAR,OAJc;AAKhCA,MAAAA,IAAI,EAAE;AAL0B,KAArB,CAAb;AAOAN,IAAAA,UAAU,GAAGkB,IAAI,CAACC,gBAAL,IAAyBD,IAAI,CAACC,gBAAL,CAAsBH,GAA5D;AACAf,IAAAA,YAAY,GAAGiB,IAAI,CAACC,gBAAL,IAAyBD,IAAI,CAACC,gBAAL,CAAsBb,IAA9D;AACAR,IAAAA,sBAAsB,GAAGoB,IAAI,CAACpB,sBAAL,IAA+BoB,IAAI,CAACpB,sBAAL,CAA4BQ,IAApF;AACAP,IAAAA,cAAc,GAAGmB,IAAI,CAACnB,cAAL,IAAuBmB,IAAI,CAACnB,cAAL,CAAoBO,IAA5D;AACAJ,IAAAA,YAAY,GAAGgB,IAAI,CAACZ,IAApB;AACD;;AAED,QAAMc,SAAS,GAAG,IAAIhC,SAAJ,CAAcE,OAAd,CAAlB;AACA8B,EAAAA,SAAS,CAACC,KAAV,CAAgBlC,MAAM,CAACmC,mBAAvB,EAA4C;AAC1CzB,IAAAA,OAD0C;AAE1CoB,IAAAA,SAF0C;AAG1CjB,IAAAA,UAH0C;AAI1CC,IAAAA,YAJ0C;AAK1CE,IAAAA,UAL0C;AAM1CD,IAAAA,YAN0C;AAO1CG,IAAAA,YAP0C;AAQ1CV,IAAAA,MAR0C;AAS1CY,IAAAA,QAT0C;AAU1CE,IAAAA,gBAV0C;AAW1CE,IAAAA,iBAX0C;AAY1CE,IAAAA,QAZ0C;AAa1CpB,IAAAA,UAb0C;AAc1CD,IAAAA,UAd0C;AAe1CM,IAAAA,sBAf0C;AAgB1CC,IAAAA;AAhB0C,GAA5C;AAkBD,CA/DH","sourcesContent":["import { loanSetStatus } from '../../loans/methodDefinitions';\nimport LoanService from '../../loans/server/LoanService';\nimport UserService from '../../users/server/UserService';\nimport ServerEventService from '../../events/server/ServerEventService';\nimport EVENTS from '../events';\nimport Analytics from './Analytics';\n\nServerEventService.addAfterMethodListener(\n  loanSetStatus,\n  ({ context, result: { prevStatus, nextStatus }, params: { loanId } }) => {\n    const { userId: adminId } = context;\n    let referredByOrganisation;\n    let referredByUser;\n    let assigneeId;\n    let assigneeName;\n    let customerName;\n    const {\n      userId: customerId,\n      category: loanCategory,\n      name: loanName,\n      purchaseType: loanPurchaseType,\n      residenceType: loanResidenceType,\n      step: loanStep,\n    } = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      userId: 1,\n      category: 1,\n      name: 1,\n      purchaseType: 1,\n      residenceType: 1,\n      step: 1,\n    });\n    const { name: adminName } = UserService.fetchOne({\n      $filters: { _id: adminId },\n      name: 1,\n    });\n    if (customerId) {\n      const user = UserService.fetchOne({\n        $filters: { _id: customerId },\n        referredByUser: { name: 1 },\n        referredByOrganisation: { name: 1 },\n        assignedEmployee: { name: 1 },\n        name: 1,\n      });\n      assigneeId = user.assignedEmployee && user.assignedEmployee._id;\n      assigneeName = user.assignedEmployee && user.assignedEmployee.name;\n      referredByOrganisation = user.referredByOrganisation && user.referredByOrganisation.name;\n      referredByUser = user.referredByUser && user.referredByUser.name;\n      customerName = user.name;\n    }\n\n    const analytics = new Analytics(context);\n    analytics.track(EVENTS.LOAN_STATUS_CHANGED, {\n      adminId,\n      adminName,\n      assigneeId,\n      assigneeName,\n      customerId,\n      customerName,\n      loanCategory,\n      loanId,\n      loanName,\n      loanPurchaseType,\n      loanResidenceType,\n      loanStep,\n      nextStatus,\n      prevStatus,\n      referredByOrganisation,\n      referredByUser,\n    });\n  },\n);\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/analytics/server/analyticsListeners.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/analytics/server/analyticsListeners.js"}},"code":"let loanSetStatus;\nmodule.link(\"../../loans/methodDefinitions\", {\n  loanSetStatus(v) {\n    loanSetStatus = v;\n  }\n\n}, 0);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 1);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 2);\nlet ServerEventService;\nmodule.link(\"../../events/server/ServerEventService\", {\n  default(v) {\n    ServerEventService = v;\n  }\n\n}, 3);\nlet EVENTS;\nmodule.link(\"../events\", {\n  default(v) {\n    EVENTS = v;\n  }\n\n}, 4);\nlet Analytics;\nmodule.link(\"./Analytics\", {\n  default(v) {\n    Analytics = v;\n  }\n\n}, 5);\nServerEventService.addAfterMethodListener(loanSetStatus, ({\n  context,\n  result: {\n    prevStatus,\n    nextStatus\n  },\n  params: {\n    loanId\n  }\n}) => {\n  const {\n    userId: adminId\n  } = context;\n  let referredByOrganisation;\n  let referredByUser;\n  let assigneeId;\n  let assigneeName;\n  let customerName;\n  const {\n    userId: customerId,\n    category: loanCategory,\n    name: loanName,\n    purchaseType: loanPurchaseType,\n    residenceType: loanResidenceType,\n    step: loanStep\n  } = LoanService.fetchOne({\n    $filters: {\n      _id: loanId\n    },\n    userId: 1,\n    category: 1,\n    name: 1,\n    purchaseType: 1,\n    residenceType: 1,\n    step: 1\n  });\n  const {\n    name: adminName\n  } = UserService.fetchOne({\n    $filters: {\n      _id: adminId\n    },\n    name: 1\n  });\n\n  if (customerId) {\n    const user = UserService.fetchOne({\n      $filters: {\n        _id: customerId\n      },\n      referredByUser: {\n        name: 1\n      },\n      referredByOrganisation: {\n        name: 1\n      },\n      assignedEmployee: {\n        name: 1\n      },\n      name: 1\n    });\n    assigneeId = user.assignedEmployee && user.assignedEmployee._id;\n    assigneeName = user.assignedEmployee && user.assignedEmployee.name;\n    referredByOrganisation = user.referredByOrganisation && user.referredByOrganisation.name;\n    referredByUser = user.referredByUser && user.referredByUser.name;\n    customerName = user.name;\n  }\n\n  const analytics = new Analytics(context);\n  analytics.track(EVENTS.LOAN_STATUS_CHANGED, {\n    adminId,\n    adminName,\n    assigneeId,\n    assigneeName,\n    customerId,\n    customerName,\n    loanCategory,\n    loanId,\n    loanName,\n    loanPurchaseType,\n    loanResidenceType,\n    loanStep,\n    nextStatus,\n    prevStatus,\n    referredByOrganisation,\n    referredByUser\n  });\n});","map":{"version":3,"sources":["imports/core/api/analytics/server/analyticsListeners.js"],"names":["ServerEventService","result","nextStatus","params","loanId","userId","adminId","category","name","purchaseType","residenceType","step","loanStep","$filters","_id","adminName","user","customerId","referredByUser","referredByOrganisation","assignedEmployee","assigneeId","assigneeName","customerName","analytics","EVENTS"],"mappings":"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","sourcesContent":["import { loanSetStatus } from '../../loans/methodDefinitions';\nimport LoanService from '../../loans/server/LoanService';\nimport UserService from '../../users/server/UserService';\nimport ServerEventService from '../../events/server/ServerEventService';\nimport EVENTS from '../events';\nimport Analytics from './Analytics';\n\nServerEventService.addAfterMethodListener(\n  loanSetStatus,\n  ({ context, result: { prevStatus, nextStatus }, params: { loanId } }) => {\n    const { userId: adminId } = context;\n    let referredByOrganisation;\n    let referredByUser;\n    let assigneeId;\n    let assigneeName;\n    let customerName;\n    const {\n      userId: customerId,\n      category: loanCategory,\n      name: loanName,\n      purchaseType: loanPurchaseType,\n      residenceType: loanResidenceType,\n      step: loanStep,\n    } = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      userId: 1,\n      category: 1,\n      name: 1,\n      purchaseType: 1,\n      residenceType: 1,\n      step: 1,\n    });\n    const { name: adminName } = UserService.fetchOne({\n      $filters: { _id: adminId },\n      name: 1,\n    });\n    if (customerId) {\n      const user = UserService.fetchOne({\n        $filters: { _id: customerId },\n        referredByUser: { name: 1 },\n        referredByOrganisation: { name: 1 },\n        assignedEmployee: { name: 1 },\n        name: 1,\n      });\n      assigneeId = user.assignedEmployee && user.assignedEmployee._id;\n      assigneeName = user.assignedEmployee && user.assignedEmployee.name;\n      referredByOrganisation = user.referredByOrganisation && user.referredByOrganisation.name;\n      referredByUser = user.referredByUser && user.referredByUser.name;\n      customerName = user.name;\n    }\n\n    const analytics = new Analytics(context);\n    analytics.track(EVENTS.LOAN_STATUS_CHANGED, {\n      adminId,\n      adminName,\n      assigneeId,\n      assigneeName,\n      customerId,\n      customerName,\n      loanCategory,\n      loanId,\n      loanName,\n      loanPurchaseType,\n      loanResidenceType,\n      loanStep,\n      nextStatus,\n      prevStatus,\n      referredByOrganisation,\n      referredByUser,\n    });\n  },\n);\n"]},"sourceType":"script","hash":"69e44463a16296d8736117befbb8649a37ca2ecf"}
