{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:mutations/lib/debug.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/cultofcoders:mutations/lib/debug.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:mutations/lib/debug.js","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:mutations/lib/debug.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:mutations/lib/debug.js"}},"code":"let Mutation;\nmodule.link(\"./mutation.class\", {\n  default(v) {\n    Mutation = v;\n  }\n\n}, 0);\nObject.assign(Mutation, {\n  isDebugEnabled: Meteor.isDevelopment || process.env.MUTATION_DEBUG_ENABLED\n});\n\nconst shouldDebug = config => {\n  if (!Mutation.isDebugEnabled) {\n    return false;\n  }\n\n  if (Mutation.isDebugEnabled.omit) {\n    return !Mutation.isDebugEnabled.omit.includes(config.name);\n  }\n\n  return true;\n};\n\nMutation.addBeforeCall(({\n  config,\n  params,\n  context\n}) => {\n  if (shouldDebug(config)) {\n    console.log(`[mutations][${config.name}] Calling with params:`, params);\n  }\n});\nMutation.addAfterCall(({\n  config,\n  params,\n  context,\n  result,\n  error\n}) => {\n  if (shouldDebug(config)) {\n    const time = new Date();\n\n    if (!error) {\n      console.log(`[mutations][${config.name}] Received result:`, result);\n    } else {\n      console.error(`[mutations][${config.name}] Received error:`, error);\n    }\n  }\n});\nMutation.addBeforeExecution(({\n  config,\n  params,\n  context\n}) => {\n  if (shouldDebug(config)) {\n    const time = new Date();\n    console.log(`[mutations][${config.name}] Received call with params: ${JSON.stringify(params)}`);\n  }\n});","map":{"version":3,"sources":["packages/cultofcoders:mutations/lib/debug.js"],"names":["Mutation","module","link","default","v","Object","assign","isDebugEnabled","Meteor","isDevelopment","process","env","MUTATION_DEBUG_ENABLED","shouldDebug","config","omit","includes","name","addBeforeCall","params","context","console","log","addAfterCall","result","error","time","Date","addBeforeExecution","JSON","stringify"],"mappings":"AAAA,IAAIA,QAAJ;AAAaC,MAAM,CAACC,IAAP,CAAY,kBAAZ,EAA+B;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,QAAQ,GAACI,CAAT;AAAW;;AAAvB,CAA/B,EAAwD,CAAxD;AAEbC,MAAM,CAACC,MAAP,CAAcN,QAAd,EAAwB;AACtBO,EAAAA,cAAc,EAAEC,MAAM,CAACC,aAAP,IAAwBC,OAAO,CAACC,GAAR,CAAYC;AAD9B,CAAxB;;AAIA,MAAMC,WAAW,GAAIC,MAAD,IAAY;AAC9B,MAAI,CAACd,QAAQ,CAACO,cAAd,EAA8B;AAC5B,WAAO,KAAP;AACD;;AAED,MAAIP,QAAQ,CAACO,cAAT,CAAwBQ,IAA5B,EAAkC;AAChC,WAAO,CAACf,QAAQ,CAACO,cAAT,CAAwBQ,IAAxB,CAA6BC,QAA7B,CAAsCF,MAAM,CAACG,IAA7C,CAAR;AACD;;AAED,SAAO,IAAP;AACD,CAVD;;AAYAjB,QAAQ,CAACkB,aAAT,CAAuB,CAAC;AAAEJ,EAAAA,MAAF;AAAUK,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAAD,KAAiC;AACtD,MAAIP,WAAW,CAACC,MAAD,CAAf,EAAyB;AACvBO,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAcR,MAAM,CAACG,IAAK,wBAAvC,EAAgEE,MAAhE;AACD;AACF,CAJD;AAMAnB,QAAQ,CAACuB,YAAT,CAAsB,CAAC;AAAET,EAAAA,MAAF;AAAUK,EAAAA,MAAV;AAAkBC,EAAAA,OAAlB;AAA2BI,EAAAA,MAA3B;AAAmCC,EAAAA;AAAnC,CAAD,KAAgD;AACpE,MAAIZ,WAAW,CAACC,MAAD,CAAf,EAAyB;AACvB,UAAMY,IAAI,GAAG,IAAIC,IAAJ,EAAb;;AAEA,QAAI,CAACF,KAAL,EAAY;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAa,eAAcR,MAAM,CAACG,IAAK,oBAAvC,EAA4DO,MAA5D;AACD,KAFD,MAEO;AACLH,MAAAA,OAAO,CAACI,KAAR,CAAe,eAAcX,MAAM,CAACG,IAAK,mBAAzC,EAA6DQ,KAA7D;AACD;AACF;AACF,CAVD;AAYAzB,QAAQ,CAAC4B,kBAAT,CAA4B,CAAC;AAAEd,EAAAA,MAAF;AAAUK,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAAD,KAAiC;AAC3D,MAAIP,WAAW,CAACC,MAAD,CAAf,EAAyB;AACvB,UAAMY,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAa,eACXR,MAAM,CAACG,IACR,gCAA+BY,IAAI,CAACC,SAAL,CAAeX,MAAf,CAAuB,EAFvD;AAGD;AACF,CAPD","sourcesContent":["import Mutation from './mutation.class';\n\nObject.assign(Mutation, {\n  isDebugEnabled: Meteor.isDevelopment || process.env.MUTATION_DEBUG_ENABLED,\n});\n\nconst shouldDebug = (config) => {\n  if (!Mutation.isDebugEnabled) {\n    return false;\n  }\n\n  if (Mutation.isDebugEnabled.omit) {\n    return !Mutation.isDebugEnabled.omit.includes(config.name);\n  }\n\n  return true;\n};\n\nMutation.addBeforeCall(({ config, params, context }) => {\n  if (shouldDebug(config)) {\n    console.log(`[mutations][${config.name}] Calling with params:`, params);\n  }\n});\n\nMutation.addAfterCall(({ config, params, context, result, error }) => {\n  if (shouldDebug(config)) {\n    const time = new Date();\n\n    if (!error) {\n      console.log(`[mutations][${config.name}] Received result:`, result);\n    } else {\n      console.error(`[mutations][${config.name}] Received error:`, error);\n    }\n  }\n});\n\nMutation.addBeforeExecution(({ config, params, context }) => {\n  if (shouldDebug(config)) {\n    const time = new Date();\n    console.log(`[mutations][${\n      config.name\n    }] Received call with params: ${JSON.stringify(params)}`);\n  }\n});\n"]},"sourceType":"script","hash":"21cd830c30aff7389e3ac73f76611fdad183a8fa"}
