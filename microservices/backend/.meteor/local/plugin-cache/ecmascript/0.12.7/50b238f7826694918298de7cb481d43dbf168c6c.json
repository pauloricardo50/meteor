{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/features/test/FeatureService.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/api/features/test/FeatureService.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/features/test/FeatureService.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/features/test/FeatureService.test.js"],"names":["expect","FeatureService","featureService","describe","beforeEach","featureConfig","featureOne","featureWhichIsDisabled","featureWithPriorityOfDecision","featureMap","tp1","tp2","tp3","featureNotInConfig","tp4","it","getFeatureDecision","to","be","true","equal","undefined","anotherFeatureService","A_FEATURE","TP1"],"mappings":"AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,SAASC,cAAT;AAEA,IAAIC,cAAJ;AAEAC,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC/BA,EAAAA,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AACnCC,IAAAA,UAAU,CAAC,MAAM;AACf,YAAMC,aAAa,GAAG;AACpBC,QAAAA,UAAU,EAAE,IADQ;AAEpBC,QAAAA,sBAAsB,EAAE,KAFJ;AAGpBC,QAAAA,6BAA6B,EAAE;AAHX,OAAtB;AAMA,YAAMC,UAAU,GAAG;AACjBH,QAAAA,UAAU,EAAE;AAAEI,UAAAA,GAAG,EAAE,IAAP;AAAaC,UAAAA,GAAG,EAAE;AAAlB,SADK;AAEjBJ,QAAAA,sBAAsB,EAAE;AAAEK,UAAAA,GAAG,EAAE;AAAP,SAFP;AAGjBJ,QAAAA,6BAA6B,EAAE;AAAEG,UAAAA,GAAG,EAAE;AAAP,SAHd;AAIjBE,QAAAA,kBAAkB,EAAE;AAAEC,UAAAA,GAAG,EAAE,IAAP;AAAaH,UAAAA,GAAG,EAAE;AAAlB;AAJH,OAAnB;AAOAT,MAAAA,cAAc,GAAG,IAAID,cAAJ,CAAmB;AAAEQ,QAAAA,UAAF;AAAcJ,QAAAA;AAAd,OAAnB,CAAjB;AACD,KAfS,CAAV;AAiBAU,IAAAA,EAAE,CAAC,qEAAD,EAAwE,MAAM;AAC9Ef,MAAAA,MAAM,CAACE,cAAc,CAACc,kBAAf,CAAkC,KAAlC,CAAD,CAAN,CAAiDC,EAAjD,CAAoDC,EAApD,CAAuDC,IAAvD;AACD,KAFC,CAAF;AAIAJ,IAAAA,EAAE,CAAC,0GAAD,EAA6G,MAAM;AACnHf,MAAAA,MAAM,CAACE,cAAc,CAACc,kBAAf,CAAkC,KAAlC,CAAD,CAAN,CAAiDC,EAAjD,CAAoDG,KAApD,CAA0D,QAA1D;AACD,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,mEAAD,EAAsE,MAAM;AAC5Ef,MAAAA,MAAM,CAACE,cAAc,CAACc,kBAAf,CAAkC,KAAlC,CAAD,CAAN,CAAiDC,EAAjD,CAAoDC,EAApD,CAAuDG,SAAvD;AACD,KAFC,CAAF;AAIAN,IAAAA,EAAE,CAAC,yGAAD,EAA4G,MAAM;AAClHf,MAAAA,MAAM,CAACE,cAAc,CAACc,kBAAf,CAAkC,KAAlC,CAAD,CAAN,CAAiDC,EAAjD,CAAoDC,EAApD,CAAuDG,SAAvD;AACD,KAFC,CAAF;AAIAN,IAAAA,EAAE,CAAC,6GAAD,EAAgH,MAAM;AACtHf,MAAAA,MAAM,CAACE,cAAc,CAACc,kBAAf,CAAkC,KAAlC,CAAD,CAAN,CAAiDC,EAAjD,CAAoDC,EAApD,CAAuDG,SAAvD;AACD,KAFC,CAAF;AAIAN,IAAAA,EAAE,CAAC,4EAAD,EAA+E,MAAM;AACrF,YAAMO,qBAAqB,GAAG,IAAIrB,cAAJ,CAAmB;AAC/CQ,QAAAA,UAAU,EAAE;AAAEc,UAAAA,SAAS,EAAE;AAAEC,YAAAA,GAAG,EAAE;AAAP;AAAb,SADmC;AAE/CnB,QAAAA,aAAa,EAAEgB;AAFgC,OAAnB,CAA9B;AAIArB,MAAAA,MAAM,CAACsB,qBAAqB,CAACN,kBAAtB,CAAyC,OAAzC,CAAD,CAAN,CAA0DC,EAA1D,CAA6DC,EAA7D,CAAgEG,SAAhE;AACD,KANC,CAAF;AAOD,GA7CO,CAAR;AA8CD,CA/CO,CAAR","sourcesContent":["import { expect } from 'chai';\nimport { FeatureService } from '../FeatureService';\n\nlet featureService;\n\ndescribe('FeatureService', () => {\n  describe('getFeatureDecision', () => {\n    beforeEach(() => {\n      const featureConfig = {\n        featureOne: true,\n        featureWhichIsDisabled: false,\n        featureWithPriorityOfDecision: true,\n      };\n\n      const featureMap = {\n        featureOne: { tp1: true, tp2: 'tp2-v1' },\n        featureWhichIsDisabled: { tp3: true },\n        featureWithPriorityOfDecision: { tp2: 'tp2-v2' },\n        featureNotInConfig: { tp4: true, tp2: 'tp2-v3' },\n      };\n\n      featureService = new FeatureService({ featureMap, featureConfig });\n    });\n\n    it('should return a feature decision that belongs to an enabled feature', () => {\n      expect(featureService.getFeatureDecision('tp1')).to.be.true;\n    });\n\n    it('should return the latter feature decision for two decisions both belonging to different enabled features', () => {\n      expect(featureService.getFeatureDecision('tp2')).to.equal('tp2-v2');\n    });\n\n    it('should not return a feature decision that does not exist anywhere', () => {\n      expect(featureService.getFeatureDecision('tp9')).to.be.undefined;\n    });\n\n    it('should not return a feature decision of a feature disabled in the config but present in the feature map', () => {\n      expect(featureService.getFeatureDecision('tp3')).to.be.undefined;\n    });\n\n    it('should not return a feature decision of a feature not existing in the config but present in the feature map', () => {\n      expect(featureService.getFeatureDecision('tp4')).to.be.undefined;\n    });\n\n    it('should return undefined and not crash if the feature config does not exist', () => {\n      const anotherFeatureService = new FeatureService({\n        featureMap: { A_FEATURE: { TP1: true } },\n        featureConfig: undefined,\n      });\n      expect(anotherFeatureService.getFeatureDecision('tp123')).to.be.undefined;\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/features/test/FeatureService.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/features/test/FeatureService.test.js"}},"code":"var expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 0);\nvar FeatureService;\nmodule.link(\"../FeatureService\", {\n  FeatureService: function (v) {\n    FeatureService = v;\n  }\n}, 1);\nvar featureService;\ndescribe('FeatureService', function () {\n  describe('getFeatureDecision', function () {\n    beforeEach(function () {\n      var featureConfig = {\n        featureOne: true,\n        featureWhichIsDisabled: false,\n        featureWithPriorityOfDecision: true\n      };\n      var featureMap = {\n        featureOne: {\n          tp1: true,\n          tp2: 'tp2-v1'\n        },\n        featureWhichIsDisabled: {\n          tp3: true\n        },\n        featureWithPriorityOfDecision: {\n          tp2: 'tp2-v2'\n        },\n        featureNotInConfig: {\n          tp4: true,\n          tp2: 'tp2-v3'\n        }\n      };\n      featureService = new FeatureService({\n        featureMap: featureMap,\n        featureConfig: featureConfig\n      });\n    });\n    it('should return a feature decision that belongs to an enabled feature', function () {\n      expect(featureService.getFeatureDecision('tp1')).to.be.true;\n    });\n    it('should return the latter feature decision for two decisions both belonging to different enabled features', function () {\n      expect(featureService.getFeatureDecision('tp2')).to.equal('tp2-v2');\n    });\n    it('should not return a feature decision that does not exist anywhere', function () {\n      expect(featureService.getFeatureDecision('tp9')).to.be.undefined;\n    });\n    it('should not return a feature decision of a feature disabled in the config but present in the feature map', function () {\n      expect(featureService.getFeatureDecision('tp3')).to.be.undefined;\n    });\n    it('should not return a feature decision of a feature not existing in the config but present in the feature map', function () {\n      expect(featureService.getFeatureDecision('tp4')).to.be.undefined;\n    });\n    it('should return undefined and not crash if the feature config does not exist', function () {\n      var anotherFeatureService = new FeatureService({\n        featureMap: {\n          A_FEATURE: {\n            TP1: true\n          }\n        },\n        featureConfig: undefined\n      });\n      expect(anotherFeatureService.getFeatureDecision('tp123')).to.be.undefined;\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/api/features/test/FeatureService.test.js"],"names":["describe","beforeEach","featureConfig","featureOne","featureWhichIsDisabled","featureWithPriorityOfDecision","featureMap","tp1","tp2","tp3","featureNotInConfig","tp4","featureService","it","expect","anotherFeatureService","A_FEATURE","TP1","undefined"],"mappings":"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","sourcesContent":["import { expect } from 'chai';\nimport { FeatureService } from '../FeatureService';\n\nlet featureService;\n\ndescribe('FeatureService', () => {\n  describe('getFeatureDecision', () => {\n    beforeEach(() => {\n      const featureConfig = {\n        featureOne: true,\n        featureWhichIsDisabled: false,\n        featureWithPriorityOfDecision: true,\n      };\n\n      const featureMap = {\n        featureOne: { tp1: true, tp2: 'tp2-v1' },\n        featureWhichIsDisabled: { tp3: true },\n        featureWithPriorityOfDecision: { tp2: 'tp2-v2' },\n        featureNotInConfig: { tp4: true, tp2: 'tp2-v3' },\n      };\n\n      featureService = new FeatureService({ featureMap, featureConfig });\n    });\n\n    it('should return a feature decision that belongs to an enabled feature', () => {\n      expect(featureService.getFeatureDecision('tp1')).to.be.true;\n    });\n\n    it('should return the latter feature decision for two decisions both belonging to different enabled features', () => {\n      expect(featureService.getFeatureDecision('tp2')).to.equal('tp2-v2');\n    });\n\n    it('should not return a feature decision that does not exist anywhere', () => {\n      expect(featureService.getFeatureDecision('tp9')).to.be.undefined;\n    });\n\n    it('should not return a feature decision of a feature disabled in the config but present in the feature map', () => {\n      expect(featureService.getFeatureDecision('tp3')).to.be.undefined;\n    });\n\n    it('should not return a feature decision of a feature not existing in the config but present in the feature map', () => {\n      expect(featureService.getFeatureDecision('tp4')).to.be.undefined;\n    });\n\n    it('should return undefined and not crash if the feature config does not exist', () => {\n      const anotherFeatureService = new FeatureService({\n        featureMap: { A_FEATURE: { TP1: true } },\n        featureConfig: undefined,\n      });\n      expect(anotherFeatureService.getFeatureDecision('tp123')).to.be.undefined;\n    });\n  });\n});\n"]},"sourceType":"script","hash":"50b238f7826694918298de7cb481d43dbf168c6c"}
