{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/test/BorrowerFormArray.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/arrays/test/BorrowerFormArray.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/test/BorrowerFormArray.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/arrays/test/BorrowerFormArray.spec.js"],"names":["expect","getBorrowerInfoArray","getBorrowerFinanceArray","describe","borrowers","_id","it","borrowerId","to","throw","array","equal","have","length","above","forEach","field","type","id"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport {\n  getBorrowerInfoArray,\n  getBorrowerFinanceArray,\n} from '../BorrowerFormArray';\n\ndescribe('BorrowerFormArrays', () => {\n  describe('getBorrowerInfoArray', () => {\n    const borrowers = [{ _id: 'id1' }, { _id: 'id2' }, { _id: 'id3' }];\n\n    it('throws an error if a wrong ID is passed', () => {\n      expect(() =>\n        getBorrowerInfoArray({ borrowers, borrowerId: 'id4' })).to.throw();\n    });\n\n    it('returns an array of objects, each having an id', () => {\n      const array = getBorrowerInfoArray({ borrowers, borrowerId: 'id1' });\n\n      expect(typeof array).to.equal('object');\n      expect(array).to.have.length.above(0);\n      array.forEach((field) => {\n        expect(typeof field).to.equal('object');\n        if (field.type !== 'conditionalInput' && field.type !== 'h3') {\n          expect(!!field.id).to.equal(true);\n        }\n      });\n    });\n  });\n\n  describe('getBorrowerFinanceArray', () => {\n    const borrowers = [{ _id: 'id1' }, { _id: 'id2' }, { _id: 'id3' }];\n\n    it('throws an error if a wrong ID is passed', () => {\n      expect(() =>\n        getBorrowerFinanceArray({ borrowers, borrowerId: 'id4' })).to.throw();\n    });\n\n    it('returns an array of objects, each having an id', () => {\n      const array = getBorrowerFinanceArray({ borrowers, borrowerId: 'id1' });\n\n      expect(typeof array).to.equal('object');\n      expect(array).to.have.length.above(0);\n      array.forEach((field) => {\n        expect(typeof field).to.equal('object');\n        if (field.type !== 'conditionalInput' && field.type !== 'h3') {\n          expect(!!field.id).to.equal(true);\n        }\n      });\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/test/BorrowerFormArray.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/arrays/test/BorrowerFormArray.spec.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 0);\nvar getBorrowerInfoArray, getBorrowerFinanceArray;\nmodule.link(\"../BorrowerFormArray\", {\n  getBorrowerInfoArray: function (v) {\n    getBorrowerInfoArray = v;\n  },\n  getBorrowerFinanceArray: function (v) {\n    getBorrowerFinanceArray = v;\n  }\n}, 1);\ndescribe('BorrowerFormArrays', function () {\n  describe('getBorrowerInfoArray', function () {\n    var borrowers = [{\n      _id: 'id1'\n    }, {\n      _id: 'id2'\n    }, {\n      _id: 'id3'\n    }];\n    it('throws an error if a wrong ID is passed', function () {\n      expect(function () {\n        return getBorrowerInfoArray({\n          borrowers: borrowers,\n          borrowerId: 'id4'\n        });\n      }).to.throw();\n    });\n    it('returns an array of objects, each having an id', function () {\n      var array = getBorrowerInfoArray({\n        borrowers: borrowers,\n        borrowerId: 'id1'\n      });\n      expect((0, _typeof2.default)(array)).to.equal('object');\n      expect(array).to.have.length.above(0);\n      array.forEach(function (field) {\n        expect((0, _typeof2.default)(field)).to.equal('object');\n\n        if (field.type !== 'conditionalInput' && field.type !== 'h3') {\n          expect(!!field.id).to.equal(true);\n        }\n      });\n    });\n  });\n  describe('getBorrowerFinanceArray', function () {\n    var borrowers = [{\n      _id: 'id1'\n    }, {\n      _id: 'id2'\n    }, {\n      _id: 'id3'\n    }];\n    it('throws an error if a wrong ID is passed', function () {\n      expect(function () {\n        return getBorrowerFinanceArray({\n          borrowers: borrowers,\n          borrowerId: 'id4'\n        });\n      }).to.throw();\n    });\n    it('returns an array of objects, each having an id', function () {\n      var array = getBorrowerFinanceArray({\n        borrowers: borrowers,\n        borrowerId: 'id1'\n      });\n      expect((0, _typeof2.default)(array)).to.equal('object');\n      expect(array).to.have.length.above(0);\n      array.forEach(function (field) {\n        expect((0, _typeof2.default)(field)).to.equal('object');\n\n        if (field.type !== 'conditionalInput' && field.type !== 'h3') {\n          expect(!!field.id).to.equal(true);\n        }\n      });\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/arrays/test/BorrowerFormArray.spec.js"],"names":["describe","borrowers","_id","it","expect","getBorrowerInfoArray","borrowerId","array","field","getBorrowerFinanceArray"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport {\n  getBorrowerInfoArray,\n  getBorrowerFinanceArray,\n} from '../BorrowerFormArray';\n\ndescribe('BorrowerFormArrays', () => {\n  describe('getBorrowerInfoArray', () => {\n    const borrowers = [{ _id: 'id1' }, { _id: 'id2' }, { _id: 'id3' }];\n\n    it('throws an error if a wrong ID is passed', () => {\n      expect(() =>\n        getBorrowerInfoArray({ borrowers, borrowerId: 'id4' })).to.throw();\n    });\n\n    it('returns an array of objects, each having an id', () => {\n      const array = getBorrowerInfoArray({ borrowers, borrowerId: 'id1' });\n\n      expect(typeof array).to.equal('object');\n      expect(array).to.have.length.above(0);\n      array.forEach((field) => {\n        expect(typeof field).to.equal('object');\n        if (field.type !== 'conditionalInput' && field.type !== 'h3') {\n          expect(!!field.id).to.equal(true);\n        }\n      });\n    });\n  });\n\n  describe('getBorrowerFinanceArray', () => {\n    const borrowers = [{ _id: 'id1' }, { _id: 'id2' }, { _id: 'id3' }];\n\n    it('throws an error if a wrong ID is passed', () => {\n      expect(() =>\n        getBorrowerFinanceArray({ borrowers, borrowerId: 'id4' })).to.throw();\n    });\n\n    it('returns an array of objects, each having an id', () => {\n      const array = getBorrowerFinanceArray({ borrowers, borrowerId: 'id1' });\n\n      expect(typeof array).to.equal('object');\n      expect(array).to.have.length.above(0);\n      array.forEach((field) => {\n        expect(typeof field).to.equal('object');\n        if (field.type !== 'conditionalInput' && field.type !== 'h3') {\n          expect(!!field.id).to.equal(true);\n        }\n      });\n    });\n  });\n});\n"]},"sourceType":"script","hash":"a68e64786f6e3462923c9ce2e21fc8842e7cb07c"}
