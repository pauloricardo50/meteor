{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/tasks/server/exposures.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/tasks/server/exposures.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/tasks/server/exposures.js","inputSourceMap":{"version":3,"sources":["imports/core/api/tasks/server/exposures.js"],"names":["Match","moment","exposeQuery","tasks","getUptoDate","uptoDate","endOf","toDate","add","query","overrides","embody","body","params","$filter","filters","assignee","loanId","status","$or","dueAt","$lt","$exists","$postFilter","results","postFilterParams","_userId","filter","task","assigneeLink","_id","assigneeId","isPrivate","validateParams","Maybe","OneOf","Object","String","options","allowFilterById"],"mappings":"AAAA,SAASA,KAAT,QAAsB,cAAtB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,WAAT;AACA,SAASC,KAAT;;AAEA,MAAMC,WAAW,GAAIC,QAAD,IAAc;AAChC,UAAQA,QAAR;AACA,SAAK,OAAL;AACE,aAAOJ,MAAM,GACVK,KADI,CACE,KADF,EAEJC,MAFI,EAAP;;AAGF,SAAK,UAAL;AACE,aAAON,MAAM,GACVK,KADI,CACE,KADF,EAEJE,GAFI,CAEA,CAFA,EAEG,MAFH,EAGJF,KAHI,CAGE,KAHF,EAIJC,MAJI,EAAP;;AAMF;AACE,aAAO,IAAP;AAbF;AAeD,CAhBD;;AAkBAL,WAAW,CAAC;AACVO,EAAAA,KAAK,EAAEN,KADG;AAEVO,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACxBD,MAAAA,IAAI,CAACE,OAAL,GAAe,CAAC;AACdC,QAAAA,OADc;AAEdF,QAAAA,MAAM,EAAE;AAAEG,UAAAA,QAAF;AAAYC,UAAAA,MAAZ;AAAoBC,UAAAA,MAApB;AAA4Bb,UAAAA;AAA5B;AAFM,OAAD,KAGT;AACJ,YAAIW,QAAJ,EAAc;AACZD,UAAAA,OAAO,CAAC,kBAAD,CAAP,GAA8BC,QAA9B;AACD;;AAED,YAAIE,MAAJ,EAAY;AACVH,UAAAA,OAAO,CAACG,MAAR,GAAiBA,MAAjB;AACD;;AAED,YAAId,WAAW,CAACC,QAAD,CAAf,EAA2B;AACzBU,UAAAA,OAAO,CAACI,GAAR,GAAc,CACZ;AAAEC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,GAAG,EAAEjB,WAAW,CAACC,QAAD;AAAlB;AAAT,WADY,EAEZ;AAAEe,YAAAA,KAAK,EAAE;AAAEE,cAAAA,OAAO,EAAE;AAAX;AAAT,WAFY,CAAd;AAID;;AAED,YAAIL,MAAJ,EAAY;AACVF,UAAAA,OAAO,CAAC,cAAD,CAAP,GAA0BE,MAA1B;AACD;AACF,OAtBD;;AAuBAL,MAAAA,IAAI,CAACW,WAAL,GAAmB,CAACC,OAAD,EAAUC,gBAAV,KAA+B;AAChD,cAAM;AAAEC,UAAAA;AAAF,YAAcD,gBAApB;AAEA,eAAOD,OAAO,CAACG,MAAR,CAAgBC,IAAD,IAAU;AAC9B,gBAAM;AACJC,YAAAA,YAAY,EAAE;AAAEC,cAAAA,GAAG,EAAEC;AAAP,gBAAsB,EADhC;AAEJC,YAAAA,SAAS,GAAG;AAFR,cAGFJ,IAHJ;;AAKA,cAAII,SAAS,IAAID,UAAjB,EAA6B;AAC3B,mBAAOA,UAAU,KAAKL,OAAtB;AACD;;AAED,iBAAO,IAAP;AACD,SAXM,CAAP;AAYD,OAfD;AAgBD,KAzCQ;AA0CTO,IAAAA,cAAc,EAAE;AACdjB,MAAAA,QAAQ,EAAEhB,KAAK,CAACkC,KAAN,CAAYlC,KAAK,CAACmC,KAAN,CAAYC,MAAZ,EAAoBC,MAApB,CAAZ,CADI;AAEdpB,MAAAA,MAAM,EAAEjB,KAAK,CAACkC,KAAN,CAAYG,MAAZ,CAFM;AAGdnB,MAAAA,MAAM,EAAElB,KAAK,CAACkC,KAAN,CAAYlC,KAAK,CAACmC,KAAN,CAAYC,MAAZ,EAAoBC,MAApB,CAAZ,CAHM;AAIdhC,MAAAA,QAAQ,EAAEL,KAAK,CAACkC,KAAN,CAAYG,MAAZ;AAJI;AA1CP,GAFD;AAmDVC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,eAAe,EAAE;AAAnB;AAnDC,CAAD,CAAX","sourcesContent":["import { Match } from 'meteor/check';\n\nimport moment from 'moment';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { tasks } from '../queries';\n\nconst getUptoDate = (uptoDate) => {\n  switch (uptoDate) {\n  case 'TODAY':\n    return moment()\n      .endOf('day')\n      .toDate();\n  case 'TOMORROW':\n    return moment()\n      .endOf('day')\n      .add(1, 'days')\n      .endOf('day')\n      .toDate();\n\n  default:\n    return null;\n  }\n};\n\nexposeQuery({\n  query: tasks,\n  overrides: {\n    embody: (body, params) => {\n      body.$filter = ({\n        filters,\n        params: { assignee, loanId, status, uptoDate },\n      }) => {\n        if (assignee) {\n          filters['assigneeLink._id'] = assignee;\n        }\n\n        if (status) {\n          filters.status = status;\n        }\n\n        if (getUptoDate(uptoDate)) {\n          filters.$or = [\n            { dueAt: { $lt: getUptoDate(uptoDate) } },\n            { dueAt: { $exists: false } },\n          ];\n        }\n\n        if (loanId) {\n          filters['loanLink._id'] = loanId;\n        }\n      };\n      body.$postFilter = (results, postFilterParams) => {\n        const { _userId } = postFilterParams;\n\n        return results.filter((task) => {\n          const {\n            assigneeLink: { _id: assigneeId } = {},\n            isPrivate = false,\n          } = task;\n\n          if (isPrivate && assigneeId) {\n            return assigneeId === _userId;\n          }\n\n          return true;\n        });\n      };\n    },\n    validateParams: {\n      assignee: Match.Maybe(Match.OneOf(Object, String)),\n      loanId: Match.Maybe(String),\n      status: Match.Maybe(Match.OneOf(Object, String)),\n      uptoDate: Match.Maybe(String),\n    },\n  },\n  options: { allowFilterById: true },\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/tasks/server/exposures.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/tasks/server/exposures.js"}},"code":"let Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 2);\nlet tasks;\nmodule.link(\"../queries\", {\n  tasks(v) {\n    tasks = v;\n  }\n\n}, 3);\n\nconst getUptoDate = uptoDate => {\n  switch (uptoDate) {\n    case 'TODAY':\n      return moment().endOf('day').toDate();\n\n    case 'TOMORROW':\n      return moment().endOf('day').add(1, 'days').endOf('day').toDate();\n\n    default:\n      return null;\n  }\n};\n\nexposeQuery({\n  query: tasks,\n  overrides: {\n    embody: (body, params) => {\n      body.$filter = ({\n        filters,\n        params: {\n          assignee,\n          loanId,\n          status,\n          uptoDate\n        }\n      }) => {\n        if (assignee) {\n          filters['assigneeLink._id'] = assignee;\n        }\n\n        if (status) {\n          filters.status = status;\n        }\n\n        if (getUptoDate(uptoDate)) {\n          filters.$or = [{\n            dueAt: {\n              $lt: getUptoDate(uptoDate)\n            }\n          }, {\n            dueAt: {\n              $exists: false\n            }\n          }];\n        }\n\n        if (loanId) {\n          filters['loanLink._id'] = loanId;\n        }\n      };\n\n      body.$postFilter = (results, postFilterParams) => {\n        const {\n          _userId\n        } = postFilterParams;\n        return results.filter(task => {\n          const {\n            assigneeLink: {\n              _id: assigneeId\n            } = {},\n            isPrivate = false\n          } = task;\n\n          if (isPrivate && assigneeId) {\n            return assigneeId === _userId;\n          }\n\n          return true;\n        });\n      };\n    },\n    validateParams: {\n      assignee: Match.Maybe(Match.OneOf(Object, String)),\n      loanId: Match.Maybe(String),\n      status: Match.Maybe(Match.OneOf(Object, String)),\n      uptoDate: Match.Maybe(String)\n    }\n  },\n  options: {\n    allowFilterById: true\n  }\n});","map":{"version":3,"sources":["imports/core/api/tasks/server/exposures.js"],"names":["getUptoDate","uptoDate","moment","exposeQuery","query","overrides","embody","body","params","filters","dueAt","$lt","$exists","_userId","task","assigneeLink","_id","assigneeId","isPrivate","validateParams","assignee","Match","loanId","status","options","allowFilterById"],"mappings":"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","sourcesContent":["import { Match } from 'meteor/check';\n\nimport moment from 'moment';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { tasks } from '../queries';\n\nconst getUptoDate = (uptoDate) => {\n  switch (uptoDate) {\n  case 'TODAY':\n    return moment()\n      .endOf('day')\n      .toDate();\n  case 'TOMORROW':\n    return moment()\n      .endOf('day')\n      .add(1, 'days')\n      .endOf('day')\n      .toDate();\n\n  default:\n    return null;\n  }\n};\n\nexposeQuery({\n  query: tasks,\n  overrides: {\n    embody: (body, params) => {\n      body.$filter = ({\n        filters,\n        params: { assignee, loanId, status, uptoDate },\n      }) => {\n        if (assignee) {\n          filters['assigneeLink._id'] = assignee;\n        }\n\n        if (status) {\n          filters.status = status;\n        }\n\n        if (getUptoDate(uptoDate)) {\n          filters.$or = [\n            { dueAt: { $lt: getUptoDate(uptoDate) } },\n            { dueAt: { $exists: false } },\n          ];\n        }\n\n        if (loanId) {\n          filters['loanLink._id'] = loanId;\n        }\n      };\n      body.$postFilter = (results, postFilterParams) => {\n        const { _userId } = postFilterParams;\n\n        return results.filter((task) => {\n          const {\n            assigneeLink: { _id: assigneeId } = {},\n            isPrivate = false,\n          } = task;\n\n          if (isPrivate && assigneeId) {\n            return assigneeId === _userId;\n          }\n\n          return true;\n        });\n      };\n    },\n    validateParams: {\n      assignee: Match.Maybe(Match.OneOf(Object, String)),\n      loanId: Match.Maybe(String),\n      status: Match.Maybe(Match.OneOf(Object, String)),\n      uptoDate: Match.Maybe(String),\n    },\n  },\n  options: { allowFilterById: true },\n});\n"]},"sourceType":"script","hash":"e74fd3e2e09659760c7dcf8979c8ba3936e496b4"}
