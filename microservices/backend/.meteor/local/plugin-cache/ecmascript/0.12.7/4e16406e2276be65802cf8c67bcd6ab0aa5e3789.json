{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/sharedSchemas.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/api/helpers/sharedSchemas.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/sharedSchemas.js","inputSourceMap":{"version":3,"sources":["imports/core/api/helpers/sharedSchemas.js"],"names":["SimpleSchema","CUSTOM_AUTOFIELD_TYPES","CANTONS","zipcodes","createdAt","type","Date","autoValue","isInsert","unset","optional","updatedAt","isUpdate","isUpsert","additionalDocuments","initialDocuments","Array","defaultValue","Object","String","Boolean","address","address1","address2","zipCode","Integer","min","max","city","canton","allowedValues","keys","field","value","uniforms","placeholder","contactsSchema","contacts","label","regEx","RegEx","Email","makePermissions","permissionsSchema","prefix","autoFormDisplayCondition","autoFormLabel","reduce","permissions","key","condition","userLinksSchema","userLinks","mortgageNoteLinks","roundedInteger","digits","rounder","isSet","Math","round","percentageField","Number","PERCENT","moneyField","MONEY","decimalMoneyField","MONEY_DECIMAL","documentsField","blackbox","dateField","DATE","cacheField"],"mappings":"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","sourcesContent":["import SimpleSchema from 'simpl-schema';\n\nimport { CUSTOM_AUTOFIELD_TYPES } from 'core/components/AutoForm2/constants';\nimport { CANTONS } from '../loans/loanConstants';\nimport zipcodes from '../../utils/zipcodes';\n\nexport const createdAt = {\n  type: Date,\n  autoValue() {\n    if (this.isInsert) {\n      return new Date();\n    }\n    this.unset();\n  },\n  optional: true,\n};\n\nexport const updatedAt = {\n  type: Date,\n  autoValue() {\n    if (this.isUpdate || this.isInsert || this.isUpsert) {\n      return new Date();\n    }\n  },\n  optional: true,\n};\n\nexport const additionalDocuments = initialDocuments => ({\n  additionalDocuments: { type: Array, defaultValue: initialDocuments },\n  'additionalDocuments.$': Object,\n  'additionalDocuments.$.id': String,\n  'additionalDocuments.$.label': { type: String, optional: true },\n  'additionalDocuments.$.requiredByAdmin': { type: Boolean, optional: true },\n  'additionalDocuments.$.category': { type: String, optional: true },\n});\n\nexport const address = {\n  address1: { type: String, optional: true },\n  address2: { type: String, optional: true },\n  zipCode: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 1000,\n    max: 99999,\n  },\n  city: { type: String, optional: true },\n  canton: {\n    type: String,\n    allowedValues: Object.keys(CANTONS),\n    optional: true,\n    autoValue() {\n      return zipcodes(this.field('zipCode').value);\n    },\n    uniforms: { placeholder: null },\n  },\n};\n\nexport const contactsSchema = {\n  contacts: { type: Array, defaultValue: [] },\n  'contacts.$': Object,\n  'contacts.$.name': { type: String, uniforms: { label: 'Prénom Nom' } },\n  'contacts.$.title': { type: String, uniforms: { label: 'Fonction/Titre' } },\n  'contacts.$.email': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email,\n    optional: true,\n  },\n  'contacts.$.phoneNumber': {\n    type: String,\n    uniforms: { label: 'No. de Téléphone' },\n    optional: true,\n  },\n};\n\nexport const makePermissions = ({\n  permissionsSchema,\n  prefix,\n  autoFormDisplayCondition = () => true,\n  autoFormLabel,\n}) =>\n  Object.keys(permissionsSchema).reduce(\n    (permissions, key) => ({\n      ...permissions,\n      [`${prefix}.${key}`]: permissionsSchema[key],\n    }),\n    {\n      [prefix]: {\n        type: Object,\n        optional: true,\n        condition: autoFormDisplayCondition,\n        uniforms: { label: autoFormLabel || prefix },\n      },\n    },\n  );\n\nexport const userLinksSchema = permissionsSchema => ({\n  userLinks: { type: Array, defaultValue: [] },\n  'userLinks.$': Object,\n  'userLinks.$._id': { type: String, optional: true },\n  ...(permissionsSchema\n    ? makePermissions({ permissionsSchema, prefix: 'userLinks.$.permissions' })\n    : {}),\n});\n\nexport const mortgageNoteLinks = {\n  mortgageNoteLinks: { type: Array, optional: true },\n  'mortgageNoteLinks.$': Object,\n  'mortgageNoteLinks.$._id': { type: String, optional: true },\n};\n\nexport const roundedInteger = (digits) => {\n  const rounder = 10 ** digits;\n  return {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 1000000000,\n    autoValue() {\n      if (this.isSet) {\n        return Math.round(this.value / rounder) * rounder;\n      }\n    },\n    optional: true,\n  };\n};\n\nexport const percentageField = {\n  type: Number,\n  min: -1,\n  max: 1,\n  optional: true,\n  autoValue() {\n    if (this.isSet) {\n      return Math.round(Number(this.value) * 10000) / 10000;\n    }\n  },\n  uniforms: { type: CUSTOM_AUTOFIELD_TYPES.PERCENT, placeholder: '0.00%' },\n};\n\nexport const moneyField = {\n  type: SimpleSchema.Integer,\n  min: 0,\n  max: 1000000000,\n  optional: true,\n  uniforms: { type: CUSTOM_AUTOFIELD_TYPES.MONEY },\n};\n\nexport const decimalMoneyField = {\n  ...moneyField,\n  type: Number,\n  uniforms: { type: CUSTOM_AUTOFIELD_TYPES.MONEY_DECIMAL },\n};\n\nexport const documentsField = {\n  type: Object,\n  defaultValue: {},\n  optional: true,\n  blackbox: true,\n};\n\nexport const dateField = {\n  type: Date,\n  optional: true,\n  uniforms: { type: CUSTOM_AUTOFIELD_TYPES.DATE },\n};\n\nexport const cacheField = {\n  type: Object,\n  optional: true,\n  blackbox: true,\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/sharedSchemas.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/helpers/sharedSchemas.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread3 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  createdAt: function () {\n    return createdAt;\n  },\n  updatedAt: function () {\n    return updatedAt;\n  },\n  additionalDocuments: function () {\n    return additionalDocuments;\n  },\n  address: function () {\n    return address;\n  },\n  contactsSchema: function () {\n    return contactsSchema;\n  },\n  makePermissions: function () {\n    return makePermissions;\n  },\n  userLinksSchema: function () {\n    return userLinksSchema;\n  },\n  mortgageNoteLinks: function () {\n    return mortgageNoteLinks;\n  },\n  roundedInteger: function () {\n    return roundedInteger;\n  },\n  percentageField: function () {\n    return percentageField;\n  },\n  moneyField: function () {\n    return moneyField;\n  },\n  decimalMoneyField: function () {\n    return decimalMoneyField;\n  },\n  documentsField: function () {\n    return documentsField;\n  },\n  dateField: function () {\n    return dateField;\n  },\n  cacheField: function () {\n    return cacheField;\n  }\n});\nvar SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar CUSTOM_AUTOFIELD_TYPES;\nmodule.link(\"../../components/AutoForm2/constants\", {\n  CUSTOM_AUTOFIELD_TYPES: function (v) {\n    CUSTOM_AUTOFIELD_TYPES = v;\n  }\n}, 1);\nvar CANTONS;\nmodule.link(\"../loans/loanConstants\", {\n  CANTONS: function (v) {\n    CANTONS = v;\n  }\n}, 2);\nvar zipcodes;\nmodule.link(\"../../utils/zipcodes\", {\n  \"default\": function (v) {\n    zipcodes = v;\n  }\n}, 3);\nvar createdAt = {\n  type: Date,\n  autoValue: function () {\n    if (this.isInsert) {\n      return new Date();\n    }\n\n    this.unset();\n  },\n  optional: true\n};\nvar updatedAt = {\n  type: Date,\n  autoValue: function () {\n    if (this.isUpdate || this.isInsert || this.isUpsert) {\n      return new Date();\n    }\n  },\n  optional: true\n};\n\nvar additionalDocuments = function (initialDocuments) {\n  return {\n    additionalDocuments: {\n      type: Array,\n      defaultValue: initialDocuments\n    },\n    'additionalDocuments.$': Object,\n    'additionalDocuments.$.id': String,\n    'additionalDocuments.$.label': {\n      type: String,\n      optional: true\n    },\n    'additionalDocuments.$.requiredByAdmin': {\n      type: Boolean,\n      optional: true\n    },\n    'additionalDocuments.$.category': {\n      type: String,\n      optional: true\n    }\n  };\n};\n\nvar address = {\n  address1: {\n    type: String,\n    optional: true\n  },\n  address2: {\n    type: String,\n    optional: true\n  },\n  zipCode: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 1000,\n    max: 99999\n  },\n  city: {\n    type: String,\n    optional: true\n  },\n  canton: {\n    type: String,\n    allowedValues: Object.keys(CANTONS),\n    optional: true,\n    autoValue: function () {\n      return zipcodes(this.field('zipCode').value);\n    },\n    uniforms: {\n      placeholder: null\n    }\n  }\n};\nvar contactsSchema = {\n  contacts: {\n    type: Array,\n    defaultValue: []\n  },\n  'contacts.$': Object,\n  'contacts.$.name': {\n    type: String,\n    uniforms: {\n      label: 'Prénom Nom'\n    }\n  },\n  'contacts.$.title': {\n    type: String,\n    uniforms: {\n      label: 'Fonction/Titre'\n    }\n  },\n  'contacts.$.email': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email,\n    optional: true\n  },\n  'contacts.$.phoneNumber': {\n    type: String,\n    uniforms: {\n      label: 'No. de Téléphone'\n    },\n    optional: true\n  }\n};\n\nvar makePermissions = function (_ref) {\n  var _Object$keys$reduce;\n\n  var permissionsSchema = _ref.permissionsSchema,\n      prefix = _ref.prefix,\n      _ref$autoFormDisplayC = _ref.autoFormDisplayCondition,\n      autoFormDisplayCondition = _ref$autoFormDisplayC === void 0 ? function () {\n    return true;\n  } : _ref$autoFormDisplayC,\n      autoFormLabel = _ref.autoFormLabel;\n  return Object.keys(permissionsSchema).reduce(function (permissions, key) {\n    var _objectSpread2;\n\n    return (0, _objectSpread3.default)({}, permissions, (_objectSpread2 = {}, _objectSpread2[prefix + \".\" + key] = permissionsSchema[key], _objectSpread2));\n  }, (_Object$keys$reduce = {}, _Object$keys$reduce[prefix] = {\n    type: Object,\n    optional: true,\n    condition: autoFormDisplayCondition,\n    uniforms: {\n      label: autoFormLabel || prefix\n    }\n  }, _Object$keys$reduce));\n};\n\nvar userLinksSchema = function (permissionsSchema) {\n  return (0, _objectSpread3.default)({\n    userLinks: {\n      type: Array,\n      defaultValue: []\n    },\n    'userLinks.$': Object,\n    'userLinks.$._id': {\n      type: String,\n      optional: true\n    }\n  }, permissionsSchema ? makePermissions({\n    permissionsSchema: permissionsSchema,\n    prefix: 'userLinks.$.permissions'\n  }) : {});\n};\n\nvar mortgageNoteLinks = {\n  mortgageNoteLinks: {\n    type: Array,\n    optional: true\n  },\n  'mortgageNoteLinks.$': Object,\n  'mortgageNoteLinks.$._id': {\n    type: String,\n    optional: true\n  }\n};\n\nvar roundedInteger = function (digits) {\n  var rounder = Math.pow(10, digits);\n  return {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 1000000000,\n    autoValue: function () {\n      if (this.isSet) {\n        return Math.round(this.value / rounder) * rounder;\n      }\n    },\n    optional: true\n  };\n};\n\nvar percentageField = {\n  type: Number,\n  min: -1,\n  max: 1,\n  optional: true,\n  autoValue: function () {\n    if (this.isSet) {\n      return Math.round(Number(this.value) * 10000) / 10000;\n    }\n  },\n  uniforms: {\n    type: CUSTOM_AUTOFIELD_TYPES.PERCENT,\n    placeholder: '0.00%'\n  }\n};\nvar moneyField = {\n  type: SimpleSchema.Integer,\n  min: 0,\n  max: 1000000000,\n  optional: true,\n  uniforms: {\n    type: CUSTOM_AUTOFIELD_TYPES.MONEY\n  }\n};\nvar decimalMoneyField = (0, _objectSpread3.default)({}, moneyField, {\n  type: Number,\n  uniforms: {\n    type: CUSTOM_AUTOFIELD_TYPES.MONEY_DECIMAL\n  }\n});\nvar documentsField = {\n  type: Object,\n  defaultValue: {},\n  optional: true,\n  blackbox: true\n};\nvar dateField = {\n  type: Date,\n  optional: true,\n  uniforms: {\n    type: CUSTOM_AUTOFIELD_TYPES.DATE\n  }\n};\nvar cacheField = {\n  type: Object,\n  optional: true,\n  blackbox: true\n};","map":{"version":3,"sources":["imports/core/api/helpers/sharedSchemas.js"],"names":["SimpleSchema","createdAt","type","autoValue","optional","updatedAt","additionalDocuments","initialDocuments","defaultValue","address","address1","address2","zipCode","min","max","city","canton","allowedValues","Object","zipcodes","uniforms","placeholder","contactsSchema","contacts","label","regEx","makePermissions","autoFormDisplayCondition","autoFormLabel","prefix","permissionsSchema","condition","userLinksSchema","userLinks","mortgageNoteLinks","roundedInteger","digits","rounder","Math","percentageField","Number","CUSTOM_AUTOFIELD_TYPES","moneyField","MONEY","decimalMoneyField","MONEY_DECIMAL","documentsField","blackbox","dateField","DATE","cacheField"],"mappings":"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","sourcesContent":["import SimpleSchema from 'simpl-schema';\n\nimport { CUSTOM_AUTOFIELD_TYPES } from 'core/components/AutoForm2/constants';\nimport { CANTONS } from '../loans/loanConstants';\nimport zipcodes from '../../utils/zipcodes';\n\nexport const createdAt = {\n  type: Date,\n  autoValue() {\n    if (this.isInsert) {\n      return new Date();\n    }\n    this.unset();\n  },\n  optional: true,\n};\n\nexport const updatedAt = {\n  type: Date,\n  autoValue() {\n    if (this.isUpdate || this.isInsert || this.isUpsert) {\n      return new Date();\n    }\n  },\n  optional: true,\n};\n\nexport const additionalDocuments = initialDocuments => ({\n  additionalDocuments: { type: Array, defaultValue: initialDocuments },\n  'additionalDocuments.$': Object,\n  'additionalDocuments.$.id': String,\n  'additionalDocuments.$.label': { type: String, optional: true },\n  'additionalDocuments.$.requiredByAdmin': { type: Boolean, optional: true },\n  'additionalDocuments.$.category': { type: String, optional: true },\n});\n\nexport const address = {\n  address1: { type: String, optional: true },\n  address2: { type: String, optional: true },\n  zipCode: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 1000,\n    max: 99999,\n  },\n  city: { type: String, optional: true },\n  canton: {\n    type: String,\n    allowedValues: Object.keys(CANTONS),\n    optional: true,\n    autoValue() {\n      return zipcodes(this.field('zipCode').value);\n    },\n    uniforms: { placeholder: null },\n  },\n};\n\nexport const contactsSchema = {\n  contacts: { type: Array, defaultValue: [] },\n  'contacts.$': Object,\n  'contacts.$.name': { type: String, uniforms: { label: 'Prénom Nom' } },\n  'contacts.$.title': { type: String, uniforms: { label: 'Fonction/Titre' } },\n  'contacts.$.email': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email,\n    optional: true,\n  },\n  'contacts.$.phoneNumber': {\n    type: String,\n    uniforms: { label: 'No. de Téléphone' },\n    optional: true,\n  },\n};\n\nexport const makePermissions = ({\n  permissionsSchema,\n  prefix,\n  autoFormDisplayCondition = () => true,\n  autoFormLabel,\n}) =>\n  Object.keys(permissionsSchema).reduce(\n    (permissions, key) => ({\n      ...permissions,\n      [`${prefix}.${key}`]: permissionsSchema[key],\n    }),\n    {\n      [prefix]: {\n        type: Object,\n        optional: true,\n        condition: autoFormDisplayCondition,\n        uniforms: { label: autoFormLabel || prefix },\n      },\n    },\n  );\n\nexport const userLinksSchema = permissionsSchema => ({\n  userLinks: { type: Array, defaultValue: [] },\n  'userLinks.$': Object,\n  'userLinks.$._id': { type: String, optional: true },\n  ...(permissionsSchema\n    ? makePermissions({ permissionsSchema, prefix: 'userLinks.$.permissions' })\n    : {}),\n});\n\nexport const mortgageNoteLinks = {\n  mortgageNoteLinks: { type: Array, optional: true },\n  'mortgageNoteLinks.$': Object,\n  'mortgageNoteLinks.$._id': { type: String, optional: true },\n};\n\nexport const roundedInteger = (digits) => {\n  const rounder = 10 ** digits;\n  return {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 1000000000,\n    autoValue() {\n      if (this.isSet) {\n        return Math.round(this.value / rounder) * rounder;\n      }\n    },\n    optional: true,\n  };\n};\n\nexport const percentageField = {\n  type: Number,\n  min: -1,\n  max: 1,\n  optional: true,\n  autoValue() {\n    if (this.isSet) {\n      return Math.round(Number(this.value) * 10000) / 10000;\n    }\n  },\n  uniforms: { type: CUSTOM_AUTOFIELD_TYPES.PERCENT, placeholder: '0.00%' },\n};\n\nexport const moneyField = {\n  type: SimpleSchema.Integer,\n  min: 0,\n  max: 1000000000,\n  optional: true,\n  uniforms: { type: CUSTOM_AUTOFIELD_TYPES.MONEY },\n};\n\nexport const decimalMoneyField = {\n  ...moneyField,\n  type: Number,\n  uniforms: { type: CUSTOM_AUTOFIELD_TYPES.MONEY_DECIMAL },\n};\n\nexport const documentsField = {\n  type: Object,\n  defaultValue: {},\n  optional: true,\n  blackbox: true,\n};\n\nexport const dateField = {\n  type: Date,\n  optional: true,\n  uniforms: { type: CUSTOM_AUTOFIELD_TYPES.DATE },\n};\n\nexport const cacheField = {\n  type: Object,\n  optional: true,\n  blackbox: true,\n};\n"]},"sourceType":"script","hash":"4e16406e2276be65802cf8c67bcd6ab0aa5e3789"}
