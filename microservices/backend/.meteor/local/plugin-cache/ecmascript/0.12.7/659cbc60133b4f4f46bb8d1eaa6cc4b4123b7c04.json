{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/LoanCalculator.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/utils/Calculator/LoanCalculator.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/LoanCalculator.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/Calculator/LoanCalculator.js"],"names":["OWN_FUNDS_TYPES","getLoanDocuments","OWN_FUNDS_USAGE_TYPES","filesPercent","getMissingDocumentIds","getRefinancingFormArray","NotaryFeesCalculator","getCountedArray","getPercent","withLoanCalculator","SuperClass","getProjectValue","loan","structureId","propAndWork","getPropAndWork","value","getFees","total","getTotalUsed","ownFunds","selectStructureKey","key","reduce","sum","getTotalPledged","filter","usageType","PLEDGE","notaryFees","calculator","getFeesCalculator","calculatedNotaryFees","getNotaryFeesForLoan","canton","selectPropertyKey","getInterests","interestRates","finalInterestRates","currentInterestRates","offer","loanTranches","loanValue","selectLoanValue","interests","getInterestsWithTranches","tranches","getTheoreticalInterests","propertyValue","selectPropertyValue","propertyWork","firstRank","Math","min","amortizationGoal","secondRank","max","firstRankInterests","theoreticalInterestRate","secondRankInterests","theoreticalInterestRate2ndRank","getTheoreticalMaintenance","theoreticalMaintenanceRate","getAmortization","offerOverride","selectOffer","offerToUse","oldAmortizationGoal","amortizationRate","getAmortizationRate","amortizationYears","amortization","getTheoreticalAmortization","borrowRatio","getBorrowRatio","getAmortizationRateBase","cacheFix","getMonthly","getTheoreticalPropertyCost","asObject","maintenance","getTheoreticalMonthly","propertyCost","expensesToAddToTheoreticalCost","getFormattedExpenses","add","getIncomeRatio","cost","income","getTotalIncome","borrowers","ratio","wantedLoan","getMaxBorrowRatio","maxBorrowRatio","loanHasMinimalInformation","structure","selectStructure","length","getLoanFilesProgress","fileArray","doc","getMissingLoanDocuments","getTotalFinancing","getNonPledgedOwnFunds","getPledgedOwnFunds","getUsedFundsOfType","type","ownFundType","ownFundUsageType","getRemainingFundsOfType","getFunds","BANK_FORTUNE","WITHDRAW","undefined","getTotalRemainingFunds","Object","values","THIRD_PARTY_FORTUNE","refinancingPercent","array","getMortgageNoteIncrease","mortgageNoteIds","mortgageNotes","propertyMortgageNotes","selectProperty","borrowerMortgageNotes","getMortgageNotes","structureMortgageNotes","map","id","find","_id","allMortgageNotes","mortgageNoteValue","getCashUsed","INSURANCE_2","getCashRatio","fees","cashUsed","cashRatio","hasEnoughCash","minCash","structureIsValid","incomeRatio","maxIncomeRatio","allowPledge","getEstimatedRevenues","estimatedCommission","getEstimatedReferralRevenues","referralCommission","getRequiredOwnFunds","projectValue","getMissingOwnFunds","fundsRequired","totalCurrentFunds","isMissingOwnFunds","missingOwnFunds","ownFundsRoundingAmount","hasTooMuchOwnFunds","hasCompleteStructure","structures","some"],"mappings":"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","sourcesContent":["// @flow\nimport { OWN_FUNDS_TYPES } from 'core/api/constants';\nimport { getLoanDocuments } from '../../api/files/documents';\nimport { OWN_FUNDS_USAGE_TYPES } from '../../api/constants';\nimport {\n  filesPercent,\n  getMissingDocumentIds,\n} from '../../api/files/fileHelpers';\nimport getRefinancingFormArray from '../../arrays/RefinancingFormArray';\nimport NotaryFeesCalculator from '../notaryFees/NotaryFeesCalculator';\nimport { getCountedArray } from '../formArrayHelpers';\nimport { getPercent } from '../general';\n\nexport const withLoanCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    getProjectValue({ loan, structureId }) {\n      const propAndWork = this.getPropAndWork({ loan, structureId });\n      if (!propAndWork) {\n        return 0;\n      }\n\n      const value = propAndWork + this.getFees({ loan, structureId }).total;\n\n      return value;\n    }\n\n    getTotalUsed({ loan, structureId }) {\n      const ownFunds = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'ownFunds',\n      });\n      return ownFunds.reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getTotalPledged({ loan, structureId }) {\n      const ownFunds = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'ownFunds',\n      });\n      return ownFunds\n        .filter(({ usageType }) => usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE)\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getFees({ loan, structureId }): number {\n      const notaryFees = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'notaryFees',\n      });\n\n      // Custom notary fees are provided\n      if (notaryFees === 0 || notaryFees) {\n        return { total: notaryFees };\n      }\n\n      const calculator = this.getFeesCalculator({ loan, structureId });\n\n      const calculatedNotaryFees = calculator.getNotaryFeesForLoan({\n        loan,\n        structureId,\n      });\n\n      return calculatedNotaryFees;\n    }\n\n    getFeesCalculator({ loan, structureId }) {\n      const canton = this.selectPropertyKey({\n        loan,\n        structureId,\n        key: 'canton',\n      });\n      return new NotaryFeesCalculator({ canton });\n    }\n\n    getInterests({ loan, interestRates, structureId }) {\n      let finalInterestRates = interestRates || loan.currentInterestRates;\n      const offer = this.selectStructureKey({\n        loan,\n        key: 'offer',\n        structureId,\n      });\n      const loanTranches = this.selectStructureKey({\n        loan,\n        key: 'loanTranches',\n        structureId,\n      });\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      if (offer) {\n        finalInterestRates = offer;\n      }\n\n      const interests = this.getInterestsWithTranches({\n        tranches: loanTranches,\n        interestRates: finalInterestRates,\n      });\n\n      return (interests * loanValue) / 12;\n    }\n\n    getTheoreticalInterests({ loan, structureId }) {\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      const propertyValue = this.selectPropertyValue({ loan, structureId });\n      const propertyWork = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'propertyWork',\n      }) || 0;\n      const firstRank = Math.min(\n        loanValue,\n        this.amortizationGoal * (propertyValue + propertyWork),\n      );\n      const secondRank = Math.max(0, loanValue - firstRank);\n\n      const firstRankInterests = firstRank * this.theoreticalInterestRate;\n      const secondRankInterests = secondRank\n        * (this.theoreticalInterestRate2ndRank || this.theoreticalInterestRate);\n\n      return (firstRankInterests + secondRankInterests) / 12;\n    }\n\n    getTheoreticalMaintenance({ loan, structureId }) {\n      return (\n        (this.getPropAndWork({ loan, structureId })\n          * this.theoreticalMaintenanceRate)\n        / 12\n      );\n    }\n\n    getAmortization({ loan, structureId, offerOverride }) {\n      const offer = this.selectOffer({ loan, structureId });\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      const offerToUse = offerOverride || offer;\n\n      if (offerToUse) {\n        // Temporarily change amortizationGoal\n        const oldAmortizationGoal = this.amortizationGoal;\n        this.amortizationGoal = offerToUse.amortizationGoal;\n\n        const amortizationRate = this.getAmortizationRate({\n          loan,\n          amortizationYears: offerToUse.amortizationYears,\n          structureId,\n        });\n\n        const amortization = (amortizationRate * loanValue) / 12;\n\n        this.amortizationGoal = oldAmortizationGoal;\n\n        return amortization;\n      }\n\n      const amortizationRate = this.getAmortizationRate({ loan, structureId });\n      return (amortizationRate * loanValue) / 12;\n    }\n\n    getTheoreticalAmortization({ loan, structureId }) {\n      const loanValue = this.selectLoanValue({ loan, structureId });\n\n      return (this.getAmortizationRate({ loan, structureId }) * loanValue) / 12;\n    }\n\n    getAmortizationRate({ loan, amortizationYears, structureId }) {\n      const borrowRatio = this.getBorrowRatio({ loan, structureId });\n      return this.getAmortizationRateBase({\n        borrowRatio,\n        amortizationYears,\n        // Prevent caching of this function if amortizationGoal has changed\n        cacheFix: this.amortizationGoal,\n      });\n    }\n\n    getMonthly({ loan, interestRates, structureId }) {\n      return (\n        this.getInterests({ loan, interestRates, structureId })\n        + this.getAmortization({ loan, structureId })\n      );\n    }\n\n    getTheoreticalPropertyCost({ loan, structureId, asObject = false }) {\n      const interests = this.getTheoreticalInterests({ loan, structureId });\n      const amortization = this.getTheoreticalAmortization({\n        loan,\n        structureId,\n      });\n      const maintenance = this.getTheoreticalMaintenance({ loan, structureId });\n      return asObject\n        ? {\n          interests,\n          amortization,\n          maintenance,\n          total: interests + amortization + maintenance,\n        }\n        : interests + amortization + maintenance;\n    }\n\n    getTheoreticalMonthly({ loan, structureId }) {\n      const propertyCost = this.getTheoreticalPropertyCost({\n        loan,\n        structureId,\n      });\n      const expensesToAddToTheoreticalCost = this.getFormattedExpenses({ loan, structureId }).add / 12;\n\n      return propertyCost + expensesToAddToTheoreticalCost;\n    }\n\n    getIncomeRatio({ loan, structureId }) {\n      const cost = this.getTheoreticalMonthly({ loan, structureId });\n      const income = this.getTotalIncome({ borrowers: loan.borrowers });\n      const ratio = cost / (income / 12);\n\n      if (ratio > 1 || ratio < 0) {\n        return 1;\n      }\n\n      return ratio;\n    }\n\n    getBorrowRatio({ loan, structureId }) {\n      const wantedLoan = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'wantedLoan',\n      });\n      const propAndWork = this.getPropAndWork({ loan, structureId });\n      return wantedLoan / propAndWork;\n    }\n\n    getMaxBorrowRatio() {\n      return this.maxBorrowRatio;\n    }\n\n    loanHasMinimalInformation({ loan }) {\n      const structure = this.selectStructure({ loan });\n\n      return !!(\n        structure.ownFunds\n        && structure.ownFunds.length > 0\n        && this.selectPropertyValue({ loan })\n        && this.selectLoanValue({ loan })\n      );\n    }\n\n    getLoanFilesProgress({ loan }) {\n      return filesPercent({ fileArray: getLoanDocuments({ loan }), doc: loan });\n    }\n\n    getMissingLoanDocuments({ loan }) {\n      return getMissingDocumentIds({\n        fileArray: getLoanDocuments({ loan }),\n        doc: loan,\n      });\n    }\n\n    getTotalFinancing({ loan, structureId }) {\n      return (\n        this.selectStructureKey({ loan, structureId, key: 'wantedLoan' })\n        + this.getNonPledgedOwnFunds({ loan, structureId })\n      );\n    }\n\n    getNonPledgedOwnFunds({ loan, structureId }) {\n      const ownFunds = this.selectStructureKey({ loan, structureId, key: 'ownFunds' }) || [];\n      return ownFunds\n        .filter(({ usageType }) => usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE)\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getPledgedOwnFunds({ loan, structureId }) {\n      const ownFunds = this.selectStructureKey({ loan, structureId, key: 'ownFunds' }) || [];\n      return ownFunds\n        .filter(({ usageType }) => usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE)\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getUsedFundsOfType({ loan, type, usageType, structureId }) {\n      const ownFunds = this.selectStructureKey({ loan, structureId, key: 'ownFunds' }) || [];\n      return ownFunds\n        .filter(({ type: ownFundType }) => (type ? ownFundType === type : true))\n        .filter(({ usageType: ownFundUsageType }) =>\n          (usageType ? ownFundUsageType === usageType : true))\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getRemainingFundsOfType({ loan, structureId, type }) {\n      const ownFunds = this.getFunds({ loan, type, structureId });\n      return (\n        ownFunds\n        - this.getUsedFundsOfType({\n          loan,\n          type,\n          structureId,\n          usageType:\n            type !== OWN_FUNDS_TYPES.BANK_FORTUNE\n              ? OWN_FUNDS_USAGE_TYPES.WITHDRAW\n              : undefined,\n        })\n      );\n    }\n\n    getTotalRemainingFunds({ loan, structureId }) {\n      // Don't count extra third party fortune, as it is not a real \"loan\" from them\n      return Object.values(OWN_FUNDS_TYPES)\n        .filter(type => type !== OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE)\n        .reduce(\n          (sum, type) =>\n            sum + this.getRemainingFundsOfType({ loan, structureId, type }),\n          0,\n        );\n    }\n\n    refinancingPercent({ loan }) {\n      const array = getCountedArray(getRefinancingFormArray({ loan }), loan);\n      return getPercent(array);\n    }\n\n    getMortgageNoteIncrease({ loan, structureId }) {\n      const { borrowers = [] } = loan;\n      const { mortgageNoteIds = [] } = this.selectStructure({\n        loan,\n        structureId,\n      });\n\n      const { mortgageNotes: propertyMortgageNotes = [] } = this.selectProperty({ loan, structureId });\n      const borrowerMortgageNotes = this.getMortgageNotes({ borrowers });\n      const structureMortgageNotes = mortgageNoteIds.map(id =>\n        borrowerMortgageNotes.find(({ _id }) => _id === id));\n\n      const allMortgageNotes = [\n        ...structureMortgageNotes,\n        ...propertyMortgageNotes,\n      ];\n      const mortgageNoteValue = allMortgageNotes.reduce(\n        (total, { value }) => total + (value || 0),\n        0,\n      );\n      const loanValue = this.selectLoanValue({ loan, structureId });\n\n      return Math.max(0, loanValue - mortgageNoteValue);\n    }\n\n    getCashUsed({ loan, structureId }) {\n      const { ownFunds } = this.selectStructure({ loan, structureId });\n\n      return ownFunds\n        .filter(({ type, usageType }) =>\n          type !== OWN_FUNDS_TYPES.INSURANCE_2\n            && usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE)\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getCashRatio({ loan, structureId }) {\n      const propAndWork = this.getPropAndWork({ loan, structureId });\n      const fees = this.getFees({ loan, structureId }).total;\n      const cashUsed = this.getCashUsed({ loan, structureId });\n\n      const cashRatio = (cashUsed - fees) / propAndWork;\n      return cashRatio;\n    }\n\n    hasEnoughCash({ loan, structureId }) {\n      return this.getCashRatio({ loan, structureId }) >= this.minCash;\n    }\n\n    structureIsValid({ loan, structureId }) {\n      const incomeRatio = this.getIncomeRatio({ loan, structureId });\n      const borrowRatio = this.getBorrowRatio({ loan, structureId });\n\n      if (\n        incomeRatio > this.maxIncomeRatio\n        || borrowRatio > this.maxBorrowRatio\n      ) {\n        return false;\n      }\n\n      if (\n        !this.allowPledge\n        && this.getPledgedOwnFunds({ loan, structureId }) > 0\n      ) {\n        return false;\n      }\n\n      return true;\n    }\n\n    getEstimatedRevenues({ loan, structureId }) {\n      const propertyValue = this.selectPropertyValue({ loan, structureId });\n      return propertyValue * this.estimatedCommission;\n    }\n\n    getEstimatedReferralRevenues({ loan, structureId }) {\n      return (\n        this.getEstimatedRevenues({ loan, structureId })\n        * this.referralCommission\n      );\n    }\n\n    getRequiredOwnFunds({ loan, structureId }) {\n      const projectValue = this.getProjectValue({ loan, structureId });\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      return projectValue - loanValue;\n    }\n\n    getMissingOwnFunds({ loan, structureId }) {\n      const fundsRequired = this.getRequiredOwnFunds({ loan, structureId });\n      const totalCurrentFunds = this.getNonPledgedOwnFunds({\n        loan,\n        structureId,\n      });\n\n      return fundsRequired - totalCurrentFunds;\n    }\n\n    isMissingOwnFunds({ loan, structureId }) {\n      const missingOwnFunds = this.getMissingOwnFunds({ loan, structureId });\n      return missingOwnFunds >= this.ownFundsRoundingAmount;\n    }\n\n    hasTooMuchOwnFunds({ loan, structureId }) {\n      const missingOwnFunds = this.getMissingOwnFunds({ loan, structureId });\n      return missingOwnFunds <= -this.ownFundsRoundingAmount;\n    }\n\n    hasCompleteStructure({ loan }) {\n      return loan.structures.some(({ id }) => {\n        const fundsRequired = this.getRequiredOwnFunds({\n          loan,\n          structureId: id,\n        });\n\n        if (fundsRequired === 0) {\n          return false;\n        }\n\n        if (\n          !this.isMissingOwnFunds({ loan, structureId: id })\n          && !this.hasTooMuchOwnFunds({ loan, structureId: id })\n        ) {\n          return true;\n        }\n\n        return false;\n      });\n    }\n  };\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/LoanCalculator.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/Calculator/LoanCalculator.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nmodule.export({\n  withLoanCalculator: function () {\n    return withLoanCalculator;\n  }\n});\nvar OWN_FUNDS_TYPES;\nmodule.link(\"../../api/constants\", {\n  OWN_FUNDS_TYPES: function (v) {\n    OWN_FUNDS_TYPES = v;\n  }\n}, 0);\nvar getLoanDocuments;\nmodule.link(\"../../api/files/documents\", {\n  getLoanDocuments: function (v) {\n    getLoanDocuments = v;\n  }\n}, 1);\nvar OWN_FUNDS_USAGE_TYPES;\nmodule.link(\"../../api/constants\", {\n  OWN_FUNDS_USAGE_TYPES: function (v) {\n    OWN_FUNDS_USAGE_TYPES = v;\n  }\n}, 2);\nvar filesPercent, getMissingDocumentIds;\nmodule.link(\"../../api/files/fileHelpers\", {\n  filesPercent: function (v) {\n    filesPercent = v;\n  },\n  getMissingDocumentIds: function (v) {\n    getMissingDocumentIds = v;\n  }\n}, 3);\nvar getRefinancingFormArray;\nmodule.link(\"../../arrays/RefinancingFormArray\", {\n  \"default\": function (v) {\n    getRefinancingFormArray = v;\n  }\n}, 4);\nvar NotaryFeesCalculator;\nmodule.link(\"../notaryFees/NotaryFeesCalculator\", {\n  \"default\": function (v) {\n    NotaryFeesCalculator = v;\n  }\n}, 5);\nvar getCountedArray;\nmodule.link(\"../formArrayHelpers\", {\n  getCountedArray: function (v) {\n    getCountedArray = v;\n  }\n}, 6);\nvar getPercent;\nmodule.link(\"../general\", {\n  getPercent: function (v) {\n    getPercent = v;\n  }\n}, 7);\n\nvar withLoanCalculator = function () {\n  var SuperClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] :\n  /*#__PURE__*/\n  function () {\n    function _class() {}\n\n    return _class;\n  }();\n  return (\n    /*#__PURE__*/\n    function (_SuperClass) {\n      (0, _inheritsLoose2.default)(_class2, _SuperClass);\n\n      function _class2() {\n        return _SuperClass.apply(this, arguments) || this;\n      }\n\n      var _proto = _class2.prototype;\n\n      _proto.getProjectValue = function () {\n        function getProjectValue(_ref) {\n          var loan = _ref.loan,\n              structureId = _ref.structureId;\n          var propAndWork = this.getPropAndWork({\n            loan: loan,\n            structureId: structureId\n          });\n\n          if (!propAndWork) {\n            return 0;\n          }\n\n          var value = propAndWork + this.getFees({\n            loan: loan,\n            structureId: structureId\n          }).total;\n          return value;\n        }\n\n        return getProjectValue;\n      }();\n\n      _proto.getTotalUsed = function () {\n        function getTotalUsed(_ref2) {\n          var loan = _ref2.loan,\n              structureId = _ref2.structureId;\n          var ownFunds = this.selectStructureKey({\n            loan: loan,\n            structureId: structureId,\n            key: 'ownFunds'\n          });\n          return ownFunds.reduce(function (sum, _ref3) {\n            var value = _ref3.value;\n            return sum + value;\n          }, 0);\n        }\n\n        return getTotalUsed;\n      }();\n\n      _proto.getTotalPledged = function () {\n        function getTotalPledged(_ref4) {\n          var loan = _ref4.loan,\n              structureId = _ref4.structureId;\n          var ownFunds = this.selectStructureKey({\n            loan: loan,\n            structureId: structureId,\n            key: 'ownFunds'\n          });\n          return ownFunds.filter(function (_ref5) {\n            var usageType = _ref5.usageType;\n            return usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE;\n          }).reduce(function (sum, _ref6) {\n            var value = _ref6.value;\n            return sum + value;\n          }, 0);\n        }\n\n        return getTotalPledged;\n      }();\n\n      _proto.getFees = function () {\n        function getFees(_ref7) {\n          var loan = _ref7.loan,\n              structureId = _ref7.structureId;\n          var notaryFees = this.selectStructureKey({\n            loan: loan,\n            structureId: structureId,\n            key: 'notaryFees'\n          }); // Custom notary fees are provided\n\n          if (notaryFees === 0 || notaryFees) {\n            return {\n              total: notaryFees\n            };\n          }\n\n          var calculator = this.getFeesCalculator({\n            loan: loan,\n            structureId: structureId\n          });\n          var calculatedNotaryFees = calculator.getNotaryFeesForLoan({\n            loan: loan,\n            structureId: structureId\n          });\n          return calculatedNotaryFees;\n        }\n\n        return getFees;\n      }();\n\n      _proto.getFeesCalculator = function () {\n        function getFeesCalculator(_ref8) {\n          var loan = _ref8.loan,\n              structureId = _ref8.structureId;\n          var canton = this.selectPropertyKey({\n            loan: loan,\n            structureId: structureId,\n            key: 'canton'\n          });\n          return new NotaryFeesCalculator({\n            canton: canton\n          });\n        }\n\n        return getFeesCalculator;\n      }();\n\n      _proto.getInterests = function () {\n        function getInterests(_ref9) {\n          var loan = _ref9.loan,\n              interestRates = _ref9.interestRates,\n              structureId = _ref9.structureId;\n          var finalInterestRates = interestRates || loan.currentInterestRates;\n          var offer = this.selectStructureKey({\n            loan: loan,\n            key: 'offer',\n            structureId: structureId\n          });\n          var loanTranches = this.selectStructureKey({\n            loan: loan,\n            key: 'loanTranches',\n            structureId: structureId\n          });\n          var loanValue = this.selectLoanValue({\n            loan: loan,\n            structureId: structureId\n          });\n\n          if (offer) {\n            finalInterestRates = offer;\n          }\n\n          var interests = this.getInterestsWithTranches({\n            tranches: loanTranches,\n            interestRates: finalInterestRates\n          });\n          return interests * loanValue / 12;\n        }\n\n        return getInterests;\n      }();\n\n      _proto.getTheoreticalInterests = function () {\n        function getTheoreticalInterests(_ref10) {\n          var loan = _ref10.loan,\n              structureId = _ref10.structureId;\n          var loanValue = this.selectLoanValue({\n            loan: loan,\n            structureId: structureId\n          });\n          var propertyValue = this.selectPropertyValue({\n            loan: loan,\n            structureId: structureId\n          });\n          var propertyWork = this.selectStructureKey({\n            loan: loan,\n            structureId: structureId,\n            key: 'propertyWork'\n          }) || 0;\n          var firstRank = Math.min(loanValue, this.amortizationGoal * (propertyValue + propertyWork));\n          var secondRank = Math.max(0, loanValue - firstRank);\n          var firstRankInterests = firstRank * this.theoreticalInterestRate;\n          var secondRankInterests = secondRank * (this.theoreticalInterestRate2ndRank || this.theoreticalInterestRate);\n          return (firstRankInterests + secondRankInterests) / 12;\n        }\n\n        return getTheoreticalInterests;\n      }();\n\n      _proto.getTheoreticalMaintenance = function () {\n        function getTheoreticalMaintenance(_ref11) {\n          var loan = _ref11.loan,\n              structureId = _ref11.structureId;\n          return this.getPropAndWork({\n            loan: loan,\n            structureId: structureId\n          }) * this.theoreticalMaintenanceRate / 12;\n        }\n\n        return getTheoreticalMaintenance;\n      }();\n\n      _proto.getAmortization = function () {\n        function getAmortization(_ref12) {\n          var loan = _ref12.loan,\n              structureId = _ref12.structureId,\n              offerOverride = _ref12.offerOverride;\n          var offer = this.selectOffer({\n            loan: loan,\n            structureId: structureId\n          });\n          var loanValue = this.selectLoanValue({\n            loan: loan,\n            structureId: structureId\n          });\n          var offerToUse = offerOverride || offer;\n\n          if (offerToUse) {\n            // Temporarily change amortizationGoal\n            var oldAmortizationGoal = this.amortizationGoal;\n            this.amortizationGoal = offerToUse.amortizationGoal;\n\n            var _amortizationRate = this.getAmortizationRate({\n              loan: loan,\n              amortizationYears: offerToUse.amortizationYears,\n              structureId: structureId\n            });\n\n            var amortization = _amortizationRate * loanValue / 12;\n            this.amortizationGoal = oldAmortizationGoal;\n            return amortization;\n          }\n\n          var amortizationRate = this.getAmortizationRate({\n            loan: loan,\n            structureId: structureId\n          });\n          return amortizationRate * loanValue / 12;\n        }\n\n        return getAmortization;\n      }();\n\n      _proto.getTheoreticalAmortization = function () {\n        function getTheoreticalAmortization(_ref13) {\n          var loan = _ref13.loan,\n              structureId = _ref13.structureId;\n          var loanValue = this.selectLoanValue({\n            loan: loan,\n            structureId: structureId\n          });\n          return this.getAmortizationRate({\n            loan: loan,\n            structureId: structureId\n          }) * loanValue / 12;\n        }\n\n        return getTheoreticalAmortization;\n      }();\n\n      _proto.getAmortizationRate = function () {\n        function getAmortizationRate(_ref14) {\n          var loan = _ref14.loan,\n              amortizationYears = _ref14.amortizationYears,\n              structureId = _ref14.structureId;\n          var borrowRatio = this.getBorrowRatio({\n            loan: loan,\n            structureId: structureId\n          });\n          return this.getAmortizationRateBase({\n            borrowRatio: borrowRatio,\n            amortizationYears: amortizationYears,\n            // Prevent caching of this function if amortizationGoal has changed\n            cacheFix: this.amortizationGoal\n          });\n        }\n\n        return getAmortizationRate;\n      }();\n\n      _proto.getMonthly = function () {\n        function getMonthly(_ref15) {\n          var loan = _ref15.loan,\n              interestRates = _ref15.interestRates,\n              structureId = _ref15.structureId;\n          return this.getInterests({\n            loan: loan,\n            interestRates: interestRates,\n            structureId: structureId\n          }) + this.getAmortization({\n            loan: loan,\n            structureId: structureId\n          });\n        }\n\n        return getMonthly;\n      }();\n\n      _proto.getTheoreticalPropertyCost = function () {\n        function getTheoreticalPropertyCost(_ref16) {\n          var loan = _ref16.loan,\n              structureId = _ref16.structureId,\n              _ref16$asObject = _ref16.asObject,\n              asObject = _ref16$asObject === void 0 ? false : _ref16$asObject;\n          var interests = this.getTheoreticalInterests({\n            loan: loan,\n            structureId: structureId\n          });\n          var amortization = this.getTheoreticalAmortization({\n            loan: loan,\n            structureId: structureId\n          });\n          var maintenance = this.getTheoreticalMaintenance({\n            loan: loan,\n            structureId: structureId\n          });\n          return asObject ? {\n            interests: interests,\n            amortization: amortization,\n            maintenance: maintenance,\n            total: interests + amortization + maintenance\n          } : interests + amortization + maintenance;\n        }\n\n        return getTheoreticalPropertyCost;\n      }();\n\n      _proto.getTheoreticalMonthly = function () {\n        function getTheoreticalMonthly(_ref17) {\n          var loan = _ref17.loan,\n              structureId = _ref17.structureId;\n          var propertyCost = this.getTheoreticalPropertyCost({\n            loan: loan,\n            structureId: structureId\n          });\n          var expensesToAddToTheoreticalCost = this.getFormattedExpenses({\n            loan: loan,\n            structureId: structureId\n          }).add / 12;\n          return propertyCost + expensesToAddToTheoreticalCost;\n        }\n\n        return getTheoreticalMonthly;\n      }();\n\n      _proto.getIncomeRatio = function () {\n        function getIncomeRatio(_ref18) {\n          var loan = _ref18.loan,\n              structureId = _ref18.structureId;\n          var cost = this.getTheoreticalMonthly({\n            loan: loan,\n            structureId: structureId\n          });\n          var income = this.getTotalIncome({\n            borrowers: loan.borrowers\n          });\n          var ratio = cost / (income / 12);\n\n          if (ratio > 1 || ratio < 0) {\n            return 1;\n          }\n\n          return ratio;\n        }\n\n        return getIncomeRatio;\n      }();\n\n      _proto.getBorrowRatio = function () {\n        function getBorrowRatio(_ref19) {\n          var loan = _ref19.loan,\n              structureId = _ref19.structureId;\n          var wantedLoan = this.selectStructureKey({\n            loan: loan,\n            structureId: structureId,\n            key: 'wantedLoan'\n          });\n          var propAndWork = this.getPropAndWork({\n            loan: loan,\n            structureId: structureId\n          });\n          return wantedLoan / propAndWork;\n        }\n\n        return getBorrowRatio;\n      }();\n\n      _proto.getMaxBorrowRatio = function () {\n        function getMaxBorrowRatio() {\n          return this.maxBorrowRatio;\n        }\n\n        return getMaxBorrowRatio;\n      }();\n\n      _proto.loanHasMinimalInformation = function () {\n        function loanHasMinimalInformation(_ref20) {\n          var loan = _ref20.loan;\n          var structure = this.selectStructure({\n            loan: loan\n          });\n          return !!(structure.ownFunds && structure.ownFunds.length > 0 && this.selectPropertyValue({\n            loan: loan\n          }) && this.selectLoanValue({\n            loan: loan\n          }));\n        }\n\n        return loanHasMinimalInformation;\n      }();\n\n      _proto.getLoanFilesProgress = function () {\n        function getLoanFilesProgress(_ref21) {\n          var loan = _ref21.loan;\n          return filesPercent({\n            fileArray: getLoanDocuments({\n              loan: loan\n            }),\n            doc: loan\n          });\n        }\n\n        return getLoanFilesProgress;\n      }();\n\n      _proto.getMissingLoanDocuments = function () {\n        function getMissingLoanDocuments(_ref22) {\n          var loan = _ref22.loan;\n          return getMissingDocumentIds({\n            fileArray: getLoanDocuments({\n              loan: loan\n            }),\n            doc: loan\n          });\n        }\n\n        return getMissingLoanDocuments;\n      }();\n\n      _proto.getTotalFinancing = function () {\n        function getTotalFinancing(_ref23) {\n          var loan = _ref23.loan,\n              structureId = _ref23.structureId;\n          return this.selectStructureKey({\n            loan: loan,\n            structureId: structureId,\n            key: 'wantedLoan'\n          }) + this.getNonPledgedOwnFunds({\n            loan: loan,\n            structureId: structureId\n          });\n        }\n\n        return getTotalFinancing;\n      }();\n\n      _proto.getNonPledgedOwnFunds = function () {\n        function getNonPledgedOwnFunds(_ref24) {\n          var loan = _ref24.loan,\n              structureId = _ref24.structureId;\n          var ownFunds = this.selectStructureKey({\n            loan: loan,\n            structureId: structureId,\n            key: 'ownFunds'\n          }) || [];\n          return ownFunds.filter(function (_ref25) {\n            var usageType = _ref25.usageType;\n            return usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE;\n          }).reduce(function (sum, _ref26) {\n            var value = _ref26.value;\n            return sum + value;\n          }, 0);\n        }\n\n        return getNonPledgedOwnFunds;\n      }();\n\n      _proto.getPledgedOwnFunds = function () {\n        function getPledgedOwnFunds(_ref27) {\n          var loan = _ref27.loan,\n              structureId = _ref27.structureId;\n          var ownFunds = this.selectStructureKey({\n            loan: loan,\n            structureId: structureId,\n            key: 'ownFunds'\n          }) || [];\n          return ownFunds.filter(function (_ref28) {\n            var usageType = _ref28.usageType;\n            return usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE;\n          }).reduce(function (sum, _ref29) {\n            var value = _ref29.value;\n            return sum + value;\n          }, 0);\n        }\n\n        return getPledgedOwnFunds;\n      }();\n\n      _proto.getUsedFundsOfType = function () {\n        function getUsedFundsOfType(_ref30) {\n          var loan = _ref30.loan,\n              type = _ref30.type,\n              usageType = _ref30.usageType,\n              structureId = _ref30.structureId;\n          var ownFunds = this.selectStructureKey({\n            loan: loan,\n            structureId: structureId,\n            key: 'ownFunds'\n          }) || [];\n          return ownFunds.filter(function (_ref31) {\n            var ownFundType = _ref31.type;\n            return type ? ownFundType === type : true;\n          }).filter(function (_ref32) {\n            var ownFundUsageType = _ref32.usageType;\n            return usageType ? ownFundUsageType === usageType : true;\n          }).reduce(function (sum, _ref33) {\n            var value = _ref33.value;\n            return sum + value;\n          }, 0);\n        }\n\n        return getUsedFundsOfType;\n      }();\n\n      _proto.getRemainingFundsOfType = function () {\n        function getRemainingFundsOfType(_ref34) {\n          var loan = _ref34.loan,\n              structureId = _ref34.structureId,\n              type = _ref34.type;\n          var ownFunds = this.getFunds({\n            loan: loan,\n            type: type,\n            structureId: structureId\n          });\n          return ownFunds - this.getUsedFundsOfType({\n            loan: loan,\n            type: type,\n            structureId: structureId,\n            usageType: type !== OWN_FUNDS_TYPES.BANK_FORTUNE ? OWN_FUNDS_USAGE_TYPES.WITHDRAW : undefined\n          });\n        }\n\n        return getRemainingFundsOfType;\n      }();\n\n      _proto.getTotalRemainingFunds = function () {\n        function getTotalRemainingFunds(_ref35) {\n          var _this = this;\n\n          var loan = _ref35.loan,\n              structureId = _ref35.structureId;\n          // Don't count extra third party fortune, as it is not a real \"loan\" from them\n          return Object.values(OWN_FUNDS_TYPES).filter(function (type) {\n            return type !== OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE;\n          }).reduce(function (sum, type) {\n            return sum + _this.getRemainingFundsOfType({\n              loan: loan,\n              structureId: structureId,\n              type: type\n            });\n          }, 0);\n        }\n\n        return getTotalRemainingFunds;\n      }();\n\n      _proto.refinancingPercent = function () {\n        function refinancingPercent(_ref36) {\n          var loan = _ref36.loan;\n          var array = getCountedArray(getRefinancingFormArray({\n            loan: loan\n          }), loan);\n          return getPercent(array);\n        }\n\n        return refinancingPercent;\n      }();\n\n      _proto.getMortgageNoteIncrease = function () {\n        function getMortgageNoteIncrease(_ref37) {\n          var loan = _ref37.loan,\n              structureId = _ref37.structureId;\n          var _loan$borrowers = loan.borrowers,\n              borrowers = _loan$borrowers === void 0 ? [] : _loan$borrowers;\n\n          var _this$selectStructure = this.selectStructure({\n            loan: loan,\n            structureId: structureId\n          }),\n              _this$selectStructure2 = _this$selectStructure.mortgageNoteIds,\n              mortgageNoteIds = _this$selectStructure2 === void 0 ? [] : _this$selectStructure2;\n\n          var _this$selectProperty = this.selectProperty({\n            loan: loan,\n            structureId: structureId\n          }),\n              _this$selectProperty$ = _this$selectProperty.mortgageNotes,\n              propertyMortgageNotes = _this$selectProperty$ === void 0 ? [] : _this$selectProperty$;\n\n          var borrowerMortgageNotes = this.getMortgageNotes({\n            borrowers: borrowers\n          });\n          var structureMortgageNotes = mortgageNoteIds.map(function (id) {\n            return borrowerMortgageNotes.find(function (_ref38) {\n              var _id = _ref38._id;\n              return _id === id;\n            });\n          });\n          var allMortgageNotes = [].concat((0, _toConsumableArray2.default)(structureMortgageNotes), (0, _toConsumableArray2.default)(propertyMortgageNotes));\n          var mortgageNoteValue = allMortgageNotes.reduce(function (total, _ref39) {\n            var value = _ref39.value;\n            return total + (value || 0);\n          }, 0);\n          var loanValue = this.selectLoanValue({\n            loan: loan,\n            structureId: structureId\n          });\n          return Math.max(0, loanValue - mortgageNoteValue);\n        }\n\n        return getMortgageNoteIncrease;\n      }();\n\n      _proto.getCashUsed = function () {\n        function getCashUsed(_ref40) {\n          var loan = _ref40.loan,\n              structureId = _ref40.structureId;\n\n          var _this$selectStructure3 = this.selectStructure({\n            loan: loan,\n            structureId: structureId\n          }),\n              ownFunds = _this$selectStructure3.ownFunds;\n\n          return ownFunds.filter(function (_ref41) {\n            var type = _ref41.type,\n                usageType = _ref41.usageType;\n            return type !== OWN_FUNDS_TYPES.INSURANCE_2 && usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE;\n          }).reduce(function (sum, _ref42) {\n            var value = _ref42.value;\n            return sum + value;\n          }, 0);\n        }\n\n        return getCashUsed;\n      }();\n\n      _proto.getCashRatio = function () {\n        function getCashRatio(_ref43) {\n          var loan = _ref43.loan,\n              structureId = _ref43.structureId;\n          var propAndWork = this.getPropAndWork({\n            loan: loan,\n            structureId: structureId\n          });\n          var fees = this.getFees({\n            loan: loan,\n            structureId: structureId\n          }).total;\n          var cashUsed = this.getCashUsed({\n            loan: loan,\n            structureId: structureId\n          });\n          var cashRatio = (cashUsed - fees) / propAndWork;\n          return cashRatio;\n        }\n\n        return getCashRatio;\n      }();\n\n      _proto.hasEnoughCash = function () {\n        function hasEnoughCash(_ref44) {\n          var loan = _ref44.loan,\n              structureId = _ref44.structureId;\n          return this.getCashRatio({\n            loan: loan,\n            structureId: structureId\n          }) >= this.minCash;\n        }\n\n        return hasEnoughCash;\n      }();\n\n      _proto.structureIsValid = function () {\n        function structureIsValid(_ref45) {\n          var loan = _ref45.loan,\n              structureId = _ref45.structureId;\n          var incomeRatio = this.getIncomeRatio({\n            loan: loan,\n            structureId: structureId\n          });\n          var borrowRatio = this.getBorrowRatio({\n            loan: loan,\n            structureId: structureId\n          });\n\n          if (incomeRatio > this.maxIncomeRatio || borrowRatio > this.maxBorrowRatio) {\n            return false;\n          }\n\n          if (!this.allowPledge && this.getPledgedOwnFunds({\n            loan: loan,\n            structureId: structureId\n          }) > 0) {\n            return false;\n          }\n\n          return true;\n        }\n\n        return structureIsValid;\n      }();\n\n      _proto.getEstimatedRevenues = function () {\n        function getEstimatedRevenues(_ref46) {\n          var loan = _ref46.loan,\n              structureId = _ref46.structureId;\n          var propertyValue = this.selectPropertyValue({\n            loan: loan,\n            structureId: structureId\n          });\n          return propertyValue * this.estimatedCommission;\n        }\n\n        return getEstimatedRevenues;\n      }();\n\n      _proto.getEstimatedReferralRevenues = function () {\n        function getEstimatedReferralRevenues(_ref47) {\n          var loan = _ref47.loan,\n              structureId = _ref47.structureId;\n          return this.getEstimatedRevenues({\n            loan: loan,\n            structureId: structureId\n          }) * this.referralCommission;\n        }\n\n        return getEstimatedReferralRevenues;\n      }();\n\n      _proto.getRequiredOwnFunds = function () {\n        function getRequiredOwnFunds(_ref48) {\n          var loan = _ref48.loan,\n              structureId = _ref48.structureId;\n          var projectValue = this.getProjectValue({\n            loan: loan,\n            structureId: structureId\n          });\n          var loanValue = this.selectLoanValue({\n            loan: loan,\n            structureId: structureId\n          });\n          return projectValue - loanValue;\n        }\n\n        return getRequiredOwnFunds;\n      }();\n\n      _proto.getMissingOwnFunds = function () {\n        function getMissingOwnFunds(_ref49) {\n          var loan = _ref49.loan,\n              structureId = _ref49.structureId;\n          var fundsRequired = this.getRequiredOwnFunds({\n            loan: loan,\n            structureId: structureId\n          });\n          var totalCurrentFunds = this.getNonPledgedOwnFunds({\n            loan: loan,\n            structureId: structureId\n          });\n          return fundsRequired - totalCurrentFunds;\n        }\n\n        return getMissingOwnFunds;\n      }();\n\n      _proto.isMissingOwnFunds = function () {\n        function isMissingOwnFunds(_ref50) {\n          var loan = _ref50.loan,\n              structureId = _ref50.structureId;\n          var missingOwnFunds = this.getMissingOwnFunds({\n            loan: loan,\n            structureId: structureId\n          });\n          return missingOwnFunds >= this.ownFundsRoundingAmount;\n        }\n\n        return isMissingOwnFunds;\n      }();\n\n      _proto.hasTooMuchOwnFunds = function () {\n        function hasTooMuchOwnFunds(_ref51) {\n          var loan = _ref51.loan,\n              structureId = _ref51.structureId;\n          var missingOwnFunds = this.getMissingOwnFunds({\n            loan: loan,\n            structureId: structureId\n          });\n          return missingOwnFunds <= -this.ownFundsRoundingAmount;\n        }\n\n        return hasTooMuchOwnFunds;\n      }();\n\n      _proto.hasCompleteStructure = function () {\n        function hasCompleteStructure(_ref52) {\n          var _this2 = this;\n\n          var loan = _ref52.loan;\n          return loan.structures.some(function (_ref53) {\n            var id = _ref53.id;\n\n            var fundsRequired = _this2.getRequiredOwnFunds({\n              loan: loan,\n              structureId: id\n            });\n\n            if (fundsRequired === 0) {\n              return false;\n            }\n\n            if (!_this2.isMissingOwnFunds({\n              loan: loan,\n              structureId: id\n            }) && !_this2.hasTooMuchOwnFunds({\n              loan: loan,\n              structureId: id\n            })) {\n              return true;\n            }\n\n            return false;\n          });\n        }\n\n        return hasCompleteStructure;\n      }();\n\n      return _class2;\n    }(SuperClass)\n  );\n};","map":{"version":3,"sources":["imports/core/utils/Calculator/LoanCalculator.js"],"names":["withLoanCalculator","getProjectValue","structureId","propAndWork","loan","value","getTotalUsed","ownFunds","key","sum","getTotalPledged","usageType","OWN_FUNDS_USAGE_TYPES","getFees","notaryFees","total","calculator","calculatedNotaryFees","getFeesCalculator","canton","getInterests","finalInterestRates","interestRates","offer","loanTranches","loanValue","interests","tranches","getTheoreticalInterests","propertyValue","propertyWork","firstRank","Math","secondRank","firstRankInterests","secondRankInterests","getTheoreticalMaintenance","getAmortization","offerOverride","offerToUse","oldAmortizationGoal","amortizationRate","amortizationYears","amortization","getTheoreticalAmortization","getAmortizationRate","borrowRatio","cacheFix","amortizationGoal","getMonthly","getTheoreticalPropertyCost","asObject","maintenance","getTheoreticalMonthly","propertyCost","expensesToAddToTheoreticalCost","getIncomeRatio","cost","income","borrowers","ratio","getBorrowRatio","wantedLoan","getMaxBorrowRatio","loanHasMinimalInformation","structure","getLoanFilesProgress","filesPercent","fileArray","getLoanDocuments","doc","getMissingLoanDocuments","getMissingDocumentIds","getTotalFinancing","getNonPledgedOwnFunds","getPledgedOwnFunds","getUsedFundsOfType","type","ownFundType","ownFundUsageType","getRemainingFundsOfType","OWN_FUNDS_TYPES","undefined","getTotalRemainingFunds","refinancingPercent","array","getCountedArray","getRefinancingFormArray","getPercent","getMortgageNoteIncrease","mortgageNoteIds","mortgageNotes","propertyMortgageNotes","borrowerMortgageNotes","structureMortgageNotes","id","_id","allMortgageNotes","mortgageNoteValue","getCashUsed","getCashRatio","fees","cashUsed","cashRatio","hasEnoughCash","structureIsValid","incomeRatio","getEstimatedRevenues","getEstimatedReferralRevenues","getRequiredOwnFunds","projectValue","getMissingOwnFunds","fundsRequired","totalCurrentFunds","isMissingOwnFunds","missingOwnFunds","hasTooMuchOwnFunds","hasCompleteStructure"],"mappings":"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","sourcesContent":["// @flow\nimport { OWN_FUNDS_TYPES } from 'core/api/constants';\nimport { getLoanDocuments } from '../../api/files/documents';\nimport { OWN_FUNDS_USAGE_TYPES } from '../../api/constants';\nimport {\n  filesPercent,\n  getMissingDocumentIds,\n} from '../../api/files/fileHelpers';\nimport getRefinancingFormArray from '../../arrays/RefinancingFormArray';\nimport NotaryFeesCalculator from '../notaryFees/NotaryFeesCalculator';\nimport { getCountedArray } from '../formArrayHelpers';\nimport { getPercent } from '../general';\n\nexport const withLoanCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    getProjectValue({ loan, structureId }) {\n      const propAndWork = this.getPropAndWork({ loan, structureId });\n      if (!propAndWork) {\n        return 0;\n      }\n\n      const value = propAndWork + this.getFees({ loan, structureId }).total;\n\n      return value;\n    }\n\n    getTotalUsed({ loan, structureId }) {\n      const ownFunds = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'ownFunds',\n      });\n      return ownFunds.reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getTotalPledged({ loan, structureId }) {\n      const ownFunds = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'ownFunds',\n      });\n      return ownFunds\n        .filter(({ usageType }) => usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE)\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getFees({ loan, structureId }): number {\n      const notaryFees = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'notaryFees',\n      });\n\n      // Custom notary fees are provided\n      if (notaryFees === 0 || notaryFees) {\n        return { total: notaryFees };\n      }\n\n      const calculator = this.getFeesCalculator({ loan, structureId });\n\n      const calculatedNotaryFees = calculator.getNotaryFeesForLoan({\n        loan,\n        structureId,\n      });\n\n      return calculatedNotaryFees;\n    }\n\n    getFeesCalculator({ loan, structureId }) {\n      const canton = this.selectPropertyKey({\n        loan,\n        structureId,\n        key: 'canton',\n      });\n      return new NotaryFeesCalculator({ canton });\n    }\n\n    getInterests({ loan, interestRates, structureId }) {\n      let finalInterestRates = interestRates || loan.currentInterestRates;\n      const offer = this.selectStructureKey({\n        loan,\n        key: 'offer',\n        structureId,\n      });\n      const loanTranches = this.selectStructureKey({\n        loan,\n        key: 'loanTranches',\n        structureId,\n      });\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      if (offer) {\n        finalInterestRates = offer;\n      }\n\n      const interests = this.getInterestsWithTranches({\n        tranches: loanTranches,\n        interestRates: finalInterestRates,\n      });\n\n      return (interests * loanValue) / 12;\n    }\n\n    getTheoreticalInterests({ loan, structureId }) {\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      const propertyValue = this.selectPropertyValue({ loan, structureId });\n      const propertyWork = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'propertyWork',\n      }) || 0;\n      const firstRank = Math.min(\n        loanValue,\n        this.amortizationGoal * (propertyValue + propertyWork),\n      );\n      const secondRank = Math.max(0, loanValue - firstRank);\n\n      const firstRankInterests = firstRank * this.theoreticalInterestRate;\n      const secondRankInterests = secondRank\n        * (this.theoreticalInterestRate2ndRank || this.theoreticalInterestRate);\n\n      return (firstRankInterests + secondRankInterests) / 12;\n    }\n\n    getTheoreticalMaintenance({ loan, structureId }) {\n      return (\n        (this.getPropAndWork({ loan, structureId })\n          * this.theoreticalMaintenanceRate)\n        / 12\n      );\n    }\n\n    getAmortization({ loan, structureId, offerOverride }) {\n      const offer = this.selectOffer({ loan, structureId });\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      const offerToUse = offerOverride || offer;\n\n      if (offerToUse) {\n        // Temporarily change amortizationGoal\n        const oldAmortizationGoal = this.amortizationGoal;\n        this.amortizationGoal = offerToUse.amortizationGoal;\n\n        const amortizationRate = this.getAmortizationRate({\n          loan,\n          amortizationYears: offerToUse.amortizationYears,\n          structureId,\n        });\n\n        const amortization = (amortizationRate * loanValue) / 12;\n\n        this.amortizationGoal = oldAmortizationGoal;\n\n        return amortization;\n      }\n\n      const amortizationRate = this.getAmortizationRate({ loan, structureId });\n      return (amortizationRate * loanValue) / 12;\n    }\n\n    getTheoreticalAmortization({ loan, structureId }) {\n      const loanValue = this.selectLoanValue({ loan, structureId });\n\n      return (this.getAmortizationRate({ loan, structureId }) * loanValue) / 12;\n    }\n\n    getAmortizationRate({ loan, amortizationYears, structureId }) {\n      const borrowRatio = this.getBorrowRatio({ loan, structureId });\n      return this.getAmortizationRateBase({\n        borrowRatio,\n        amortizationYears,\n        // Prevent caching of this function if amortizationGoal has changed\n        cacheFix: this.amortizationGoal,\n      });\n    }\n\n    getMonthly({ loan, interestRates, structureId }) {\n      return (\n        this.getInterests({ loan, interestRates, structureId })\n        + this.getAmortization({ loan, structureId })\n      );\n    }\n\n    getTheoreticalPropertyCost({ loan, structureId, asObject = false }) {\n      const interests = this.getTheoreticalInterests({ loan, structureId });\n      const amortization = this.getTheoreticalAmortization({\n        loan,\n        structureId,\n      });\n      const maintenance = this.getTheoreticalMaintenance({ loan, structureId });\n      return asObject\n        ? {\n          interests,\n          amortization,\n          maintenance,\n          total: interests + amortization + maintenance,\n        }\n        : interests + amortization + maintenance;\n    }\n\n    getTheoreticalMonthly({ loan, structureId }) {\n      const propertyCost = this.getTheoreticalPropertyCost({\n        loan,\n        structureId,\n      });\n      const expensesToAddToTheoreticalCost = this.getFormattedExpenses({ loan, structureId }).add / 12;\n\n      return propertyCost + expensesToAddToTheoreticalCost;\n    }\n\n    getIncomeRatio({ loan, structureId }) {\n      const cost = this.getTheoreticalMonthly({ loan, structureId });\n      const income = this.getTotalIncome({ borrowers: loan.borrowers });\n      const ratio = cost / (income / 12);\n\n      if (ratio > 1 || ratio < 0) {\n        return 1;\n      }\n\n      return ratio;\n    }\n\n    getBorrowRatio({ loan, structureId }) {\n      const wantedLoan = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'wantedLoan',\n      });\n      const propAndWork = this.getPropAndWork({ loan, structureId });\n      return wantedLoan / propAndWork;\n    }\n\n    getMaxBorrowRatio() {\n      return this.maxBorrowRatio;\n    }\n\n    loanHasMinimalInformation({ loan }) {\n      const structure = this.selectStructure({ loan });\n\n      return !!(\n        structure.ownFunds\n        && structure.ownFunds.length > 0\n        && this.selectPropertyValue({ loan })\n        && this.selectLoanValue({ loan })\n      );\n    }\n\n    getLoanFilesProgress({ loan }) {\n      return filesPercent({ fileArray: getLoanDocuments({ loan }), doc: loan });\n    }\n\n    getMissingLoanDocuments({ loan }) {\n      return getMissingDocumentIds({\n        fileArray: getLoanDocuments({ loan }),\n        doc: loan,\n      });\n    }\n\n    getTotalFinancing({ loan, structureId }) {\n      return (\n        this.selectStructureKey({ loan, structureId, key: 'wantedLoan' })\n        + this.getNonPledgedOwnFunds({ loan, structureId })\n      );\n    }\n\n    getNonPledgedOwnFunds({ loan, structureId }) {\n      const ownFunds = this.selectStructureKey({ loan, structureId, key: 'ownFunds' }) || [];\n      return ownFunds\n        .filter(({ usageType }) => usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE)\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getPledgedOwnFunds({ loan, structureId }) {\n      const ownFunds = this.selectStructureKey({ loan, structureId, key: 'ownFunds' }) || [];\n      return ownFunds\n        .filter(({ usageType }) => usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE)\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getUsedFundsOfType({ loan, type, usageType, structureId }) {\n      const ownFunds = this.selectStructureKey({ loan, structureId, key: 'ownFunds' }) || [];\n      return ownFunds\n        .filter(({ type: ownFundType }) => (type ? ownFundType === type : true))\n        .filter(({ usageType: ownFundUsageType }) =>\n          (usageType ? ownFundUsageType === usageType : true))\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getRemainingFundsOfType({ loan, structureId, type }) {\n      const ownFunds = this.getFunds({ loan, type, structureId });\n      return (\n        ownFunds\n        - this.getUsedFundsOfType({\n          loan,\n          type,\n          structureId,\n          usageType:\n            type !== OWN_FUNDS_TYPES.BANK_FORTUNE\n              ? OWN_FUNDS_USAGE_TYPES.WITHDRAW\n              : undefined,\n        })\n      );\n    }\n\n    getTotalRemainingFunds({ loan, structureId }) {\n      // Don't count extra third party fortune, as it is not a real \"loan\" from them\n      return Object.values(OWN_FUNDS_TYPES)\n        .filter(type => type !== OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE)\n        .reduce(\n          (sum, type) =>\n            sum + this.getRemainingFundsOfType({ loan, structureId, type }),\n          0,\n        );\n    }\n\n    refinancingPercent({ loan }) {\n      const array = getCountedArray(getRefinancingFormArray({ loan }), loan);\n      return getPercent(array);\n    }\n\n    getMortgageNoteIncrease({ loan, structureId }) {\n      const { borrowers = [] } = loan;\n      const { mortgageNoteIds = [] } = this.selectStructure({\n        loan,\n        structureId,\n      });\n\n      const { mortgageNotes: propertyMortgageNotes = [] } = this.selectProperty({ loan, structureId });\n      const borrowerMortgageNotes = this.getMortgageNotes({ borrowers });\n      const structureMortgageNotes = mortgageNoteIds.map(id =>\n        borrowerMortgageNotes.find(({ _id }) => _id === id));\n\n      const allMortgageNotes = [\n        ...structureMortgageNotes,\n        ...propertyMortgageNotes,\n      ];\n      const mortgageNoteValue = allMortgageNotes.reduce(\n        (total, { value }) => total + (value || 0),\n        0,\n      );\n      const loanValue = this.selectLoanValue({ loan, structureId });\n\n      return Math.max(0, loanValue - mortgageNoteValue);\n    }\n\n    getCashUsed({ loan, structureId }) {\n      const { ownFunds } = this.selectStructure({ loan, structureId });\n\n      return ownFunds\n        .filter(({ type, usageType }) =>\n          type !== OWN_FUNDS_TYPES.INSURANCE_2\n            && usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE)\n        .reduce((sum, { value }) => sum + value, 0);\n    }\n\n    getCashRatio({ loan, structureId }) {\n      const propAndWork = this.getPropAndWork({ loan, structureId });\n      const fees = this.getFees({ loan, structureId }).total;\n      const cashUsed = this.getCashUsed({ loan, structureId });\n\n      const cashRatio = (cashUsed - fees) / propAndWork;\n      return cashRatio;\n    }\n\n    hasEnoughCash({ loan, structureId }) {\n      return this.getCashRatio({ loan, structureId }) >= this.minCash;\n    }\n\n    structureIsValid({ loan, structureId }) {\n      const incomeRatio = this.getIncomeRatio({ loan, structureId });\n      const borrowRatio = this.getBorrowRatio({ loan, structureId });\n\n      if (\n        incomeRatio > this.maxIncomeRatio\n        || borrowRatio > this.maxBorrowRatio\n      ) {\n        return false;\n      }\n\n      if (\n        !this.allowPledge\n        && this.getPledgedOwnFunds({ loan, structureId }) > 0\n      ) {\n        return false;\n      }\n\n      return true;\n    }\n\n    getEstimatedRevenues({ loan, structureId }) {\n      const propertyValue = this.selectPropertyValue({ loan, structureId });\n      return propertyValue * this.estimatedCommission;\n    }\n\n    getEstimatedReferralRevenues({ loan, structureId }) {\n      return (\n        this.getEstimatedRevenues({ loan, structureId })\n        * this.referralCommission\n      );\n    }\n\n    getRequiredOwnFunds({ loan, structureId }) {\n      const projectValue = this.getProjectValue({ loan, structureId });\n      const loanValue = this.selectLoanValue({ loan, structureId });\n      return projectValue - loanValue;\n    }\n\n    getMissingOwnFunds({ loan, structureId }) {\n      const fundsRequired = this.getRequiredOwnFunds({ loan, structureId });\n      const totalCurrentFunds = this.getNonPledgedOwnFunds({\n        loan,\n        structureId,\n      });\n\n      return fundsRequired - totalCurrentFunds;\n    }\n\n    isMissingOwnFunds({ loan, structureId }) {\n      const missingOwnFunds = this.getMissingOwnFunds({ loan, structureId });\n      return missingOwnFunds >= this.ownFundsRoundingAmount;\n    }\n\n    hasTooMuchOwnFunds({ loan, structureId }) {\n      const missingOwnFunds = this.getMissingOwnFunds({ loan, structureId });\n      return missingOwnFunds <= -this.ownFundsRoundingAmount;\n    }\n\n    hasCompleteStructure({ loan }) {\n      return loan.structures.some(({ id }) => {\n        const fundsRequired = this.getRequiredOwnFunds({\n          loan,\n          structureId: id,\n        });\n\n        if (fundsRequired === 0) {\n          return false;\n        }\n\n        if (\n          !this.isMissingOwnFunds({ loan, structureId: id })\n          && !this.hasTooMuchOwnFunds({ loan, structureId: id })\n        ) {\n          return true;\n        }\n\n        return false;\n      });\n    }\n  };\n"]},"sourceType":"script","hash":"659cbc60133b4f4f46bb8d1eaa6cc4b4123b7c04"}
