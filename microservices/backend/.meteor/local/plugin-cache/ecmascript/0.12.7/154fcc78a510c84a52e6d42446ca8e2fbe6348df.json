{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingSection/components/test/InputAndSliderField.spec.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/Financing/client/FinancingSection/components/test/InputAndSliderField.spec.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingSection/components/test/InputAndSliderField.spec.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/Financing/client/FinancingSection/components/test/InputAndSliderField.spec.jsx"],"names":["React","expect","sinon","mount","InputAndSliderField","MoneyInput","Slider","describe","props","component","inputValue","wrapper","find","value","sliderValue","beforeEach","it","allowUndefined","to","equal","setProps","update","forceUndefined","onChange","spy","max","simulate","target","calledOnce","firstCall","args","deep"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport sinon from 'sinon';\nimport { mount } from 'core/utils/testHelpers/enzyme';\n\nimport { InputAndSliderField } from '../InputAndSliderField';\nimport MoneyInput from '../../../../../MoneyInput/MoneyInput';\nimport Slider from '../../../../../Material/Slider';\n\ndescribe('InputAndSliderField', () => {\n  let props;\n  const component = () => mount(<InputAndSliderField {...props} />);\n\n  const inputValue = wrapper => wrapper.find(MoneyInput).props().value;\n  const sliderValue = wrapper => wrapper.find(Slider).props().value;\n\n  beforeEach(() => {\n    props = {};\n  });\n\n  it('allows undefined values', () => {\n    props = {\n      allowUndefined: true,\n      value: 12,\n    };\n    const wrapper = component();\n\n    expect(inputValue(wrapper)).to.equal(12);\n    expect(sliderValue(wrapper)).to.equal(12);\n\n    wrapper.setProps({ value: '' });\n    wrapper.update();\n\n    expect(inputValue(wrapper)).to.equal('');\n    expect(sliderValue(wrapper)).to.equal('');\n  });\n\n  it('does not allow undefined values', () => {\n    props = {\n      value: 12,\n    };\n    const wrapper = component();\n\n    expect(inputValue(wrapper)).to.equal(12);\n    expect(sliderValue(wrapper)).to.equal(12);\n\n    wrapper.setProps({ value: '' });\n    wrapper.update();\n\n    expect(inputValue(wrapper)).to.equal(0);\n    expect(sliderValue(wrapper)).to.equal(0);\n  });\n\n  it('forces 0 to be undefined values', () => {\n    props = {\n      allowUndefined: true,\n      forceUndefined: true,\n      value: 12,\n    };\n    const wrapper = component();\n\n    expect(inputValue(wrapper)).to.equal(12);\n    expect(sliderValue(wrapper)).to.equal(12);\n\n    wrapper.setProps({ value: 0 });\n    wrapper.update();\n\n    expect(inputValue(wrapper)).to.equal('');\n    expect(sliderValue(wrapper)).to.equal('');\n  });\n\n  it('does not force 0 to be undefined values when undefined values are not allowed', () => {\n    props = {\n      forceUndefined: true,\n      value: 12,\n    };\n    const wrapper = component();\n\n    expect(inputValue(wrapper)).to.equal(12);\n    expect(sliderValue(wrapper)).to.equal(12);\n\n    wrapper.setProps({ value: 0 });\n    wrapper.update();\n\n    expect(inputValue(wrapper)).to.equal(0);\n    expect(sliderValue(wrapper)).to.equal(0);\n  });\n\n  describe('onChange', () => {\n    it('let the user type his value when it is less than max', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        max: 50,\n      };\n      const wrapper = component();\n\n      wrapper.find('input').simulate('change', { target: { value: 15 } });\n\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal([15]);\n    });\n\n    it('does not let the user type more than max', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        max: 50,\n      };\n      const wrapper = component();\n\n      wrapper.find('input').simulate('change', { target: { value: 60 } });\n\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal([50]);\n    });\n\n    it('does not let the user type an empty string when undefined values are not allowed', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        max: 50,\n      };\n      const wrapper = component();\n\n      wrapper.find('input').simulate('change', { target: { value: '' } });\n\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal([0]);\n    });\n\n    it('let the user type empty strings when undefined values are allowed', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        allowUndefined: true,\n        max: 50,\n      };\n      const wrapper = component();\n\n      wrapper.find('input').simulate('change', { target: { value: '' } });\n\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal(['']);\n    });\n\n    it('forces 0 values to empty strings when forceUndefined and allowUndefined are true', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        allowUndefined: true,\n        forceUndefined: true,\n      };\n      const wrapper = component();\n\n      wrapper.find('input').simulate('change', { target: { value: '' } });\n\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal(['']);\n    });\n\n    it('does not force 0 values to empty strings when forceUndefined is true but undefined values are not allowed', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        forceUndefined: true,\n      };\n      const wrapper = component();\n\n      wrapper.find('input').simulate('change', { target: { value: 0 } });\n\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal([0]);\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingSection/components/test/InputAndSliderField.spec.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Financing/client/FinancingSection/components/test/InputAndSliderField.spec.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 1);\nlet sinon;\nmodule.link(\"sinon\", {\n  default(v) {\n    sinon = v;\n  }\n\n}, 2);\nlet mount;\nmodule.link(\"../../../../../../utils/testHelpers/enzyme\", {\n  mount(v) {\n    mount = v;\n  }\n\n}, 3);\nlet InputAndSliderField;\nmodule.link(\"../InputAndSliderField\", {\n  InputAndSliderField(v) {\n    InputAndSliderField = v;\n  }\n\n}, 4);\nlet MoneyInput;\nmodule.link(\"../../../../../MoneyInput/MoneyInput\", {\n  default(v) {\n    MoneyInput = v;\n  }\n\n}, 5);\nlet Slider;\nmodule.link(\"../../../../../Material/Slider\", {\n  default(v) {\n    Slider = v;\n  }\n\n}, 6);\ndescribe('InputAndSliderField', () => {\n  let props;\n\n  const component = () => mount(React.createElement(InputAndSliderField, props));\n\n  const inputValue = wrapper => wrapper.find(MoneyInput).props().value;\n\n  const sliderValue = wrapper => wrapper.find(Slider).props().value;\n\n  beforeEach(() => {\n    props = {};\n  });\n  it('allows undefined values', () => {\n    props = {\n      allowUndefined: true,\n      value: 12\n    };\n    const wrapper = component();\n    expect(inputValue(wrapper)).to.equal(12);\n    expect(sliderValue(wrapper)).to.equal(12);\n    wrapper.setProps({\n      value: ''\n    });\n    wrapper.update();\n    expect(inputValue(wrapper)).to.equal('');\n    expect(sliderValue(wrapper)).to.equal('');\n  });\n  it('does not allow undefined values', () => {\n    props = {\n      value: 12\n    };\n    const wrapper = component();\n    expect(inputValue(wrapper)).to.equal(12);\n    expect(sliderValue(wrapper)).to.equal(12);\n    wrapper.setProps({\n      value: ''\n    });\n    wrapper.update();\n    expect(inputValue(wrapper)).to.equal(0);\n    expect(sliderValue(wrapper)).to.equal(0);\n  });\n  it('forces 0 to be undefined values', () => {\n    props = {\n      allowUndefined: true,\n      forceUndefined: true,\n      value: 12\n    };\n    const wrapper = component();\n    expect(inputValue(wrapper)).to.equal(12);\n    expect(sliderValue(wrapper)).to.equal(12);\n    wrapper.setProps({\n      value: 0\n    });\n    wrapper.update();\n    expect(inputValue(wrapper)).to.equal('');\n    expect(sliderValue(wrapper)).to.equal('');\n  });\n  it('does not force 0 to be undefined values when undefined values are not allowed', () => {\n    props = {\n      forceUndefined: true,\n      value: 12\n    };\n    const wrapper = component();\n    expect(inputValue(wrapper)).to.equal(12);\n    expect(sliderValue(wrapper)).to.equal(12);\n    wrapper.setProps({\n      value: 0\n    });\n    wrapper.update();\n    expect(inputValue(wrapper)).to.equal(0);\n    expect(sliderValue(wrapper)).to.equal(0);\n  });\n  describe('onChange', () => {\n    it('let the user type his value when it is less than max', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        max: 50\n      };\n      const wrapper = component();\n      wrapper.find('input').simulate('change', {\n        target: {\n          value: 15\n        }\n      });\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal([15]);\n    });\n    it('does not let the user type more than max', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        max: 50\n      };\n      const wrapper = component();\n      wrapper.find('input').simulate('change', {\n        target: {\n          value: 60\n        }\n      });\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal([50]);\n    });\n    it('does not let the user type an empty string when undefined values are not allowed', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        max: 50\n      };\n      const wrapper = component();\n      wrapper.find('input').simulate('change', {\n        target: {\n          value: ''\n        }\n      });\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal([0]);\n    });\n    it('let the user type empty strings when undefined values are allowed', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        allowUndefined: true,\n        max: 50\n      };\n      const wrapper = component();\n      wrapper.find('input').simulate('change', {\n        target: {\n          value: ''\n        }\n      });\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal(['']);\n    });\n    it('forces 0 values to empty strings when forceUndefined and allowUndefined are true', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        allowUndefined: true,\n        forceUndefined: true\n      };\n      const wrapper = component();\n      wrapper.find('input').simulate('change', {\n        target: {\n          value: ''\n        }\n      });\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal(['']);\n    });\n    it('does not force 0 values to empty strings when forceUndefined is true but undefined values are not allowed', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        forceUndefined: true\n      };\n      const wrapper = component();\n      wrapper.find('input').simulate('change', {\n        target: {\n          value: 0\n        }\n      });\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal([0]);\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/components/Financing/client/FinancingSection/components/test/InputAndSliderField.spec.jsx"],"names":["describe","component","mount","inputValue","wrapper","sliderValue","beforeEach","props","it","allowUndefined","value","expect","forceUndefined","onChange","sinon","max","target"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport sinon from 'sinon';\nimport { mount } from 'core/utils/testHelpers/enzyme';\n\nimport { InputAndSliderField } from '../InputAndSliderField';\nimport MoneyInput from '../../../../../MoneyInput/MoneyInput';\nimport Slider from '../../../../../Material/Slider';\n\ndescribe('InputAndSliderField', () => {\n  let props;\n  const component = () => mount(<InputAndSliderField {...props} />);\n\n  const inputValue = wrapper => wrapper.find(MoneyInput).props().value;\n  const sliderValue = wrapper => wrapper.find(Slider).props().value;\n\n  beforeEach(() => {\n    props = {};\n  });\n\n  it('allows undefined values', () => {\n    props = {\n      allowUndefined: true,\n      value: 12,\n    };\n    const wrapper = component();\n\n    expect(inputValue(wrapper)).to.equal(12);\n    expect(sliderValue(wrapper)).to.equal(12);\n\n    wrapper.setProps({ value: '' });\n    wrapper.update();\n\n    expect(inputValue(wrapper)).to.equal('');\n    expect(sliderValue(wrapper)).to.equal('');\n  });\n\n  it('does not allow undefined values', () => {\n    props = {\n      value: 12,\n    };\n    const wrapper = component();\n\n    expect(inputValue(wrapper)).to.equal(12);\n    expect(sliderValue(wrapper)).to.equal(12);\n\n    wrapper.setProps({ value: '' });\n    wrapper.update();\n\n    expect(inputValue(wrapper)).to.equal(0);\n    expect(sliderValue(wrapper)).to.equal(0);\n  });\n\n  it('forces 0 to be undefined values', () => {\n    props = {\n      allowUndefined: true,\n      forceUndefined: true,\n      value: 12,\n    };\n    const wrapper = component();\n\n    expect(inputValue(wrapper)).to.equal(12);\n    expect(sliderValue(wrapper)).to.equal(12);\n\n    wrapper.setProps({ value: 0 });\n    wrapper.update();\n\n    expect(inputValue(wrapper)).to.equal('');\n    expect(sliderValue(wrapper)).to.equal('');\n  });\n\n  it('does not force 0 to be undefined values when undefined values are not allowed', () => {\n    props = {\n      forceUndefined: true,\n      value: 12,\n    };\n    const wrapper = component();\n\n    expect(inputValue(wrapper)).to.equal(12);\n    expect(sliderValue(wrapper)).to.equal(12);\n\n    wrapper.setProps({ value: 0 });\n    wrapper.update();\n\n    expect(inputValue(wrapper)).to.equal(0);\n    expect(sliderValue(wrapper)).to.equal(0);\n  });\n\n  describe('onChange', () => {\n    it('let the user type his value when it is less than max', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        max: 50,\n      };\n      const wrapper = component();\n\n      wrapper.find('input').simulate('change', { target: { value: 15 } });\n\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal([15]);\n    });\n\n    it('does not let the user type more than max', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        max: 50,\n      };\n      const wrapper = component();\n\n      wrapper.find('input').simulate('change', { target: { value: 60 } });\n\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal([50]);\n    });\n\n    it('does not let the user type an empty string when undefined values are not allowed', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        max: 50,\n      };\n      const wrapper = component();\n\n      wrapper.find('input').simulate('change', { target: { value: '' } });\n\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal([0]);\n    });\n\n    it('let the user type empty strings when undefined values are allowed', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        allowUndefined: true,\n        max: 50,\n      };\n      const wrapper = component();\n\n      wrapper.find('input').simulate('change', { target: { value: '' } });\n\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal(['']);\n    });\n\n    it('forces 0 values to empty strings when forceUndefined and allowUndefined are true', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        allowUndefined: true,\n        forceUndefined: true,\n      };\n      const wrapper = component();\n\n      wrapper.find('input').simulate('change', { target: { value: '' } });\n\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal(['']);\n    });\n\n    it('does not force 0 values to empty strings when forceUndefined is true but undefined values are not allowed', () => {\n      const onChange = sinon.spy();\n      props = {\n        value: 12,\n        onChange,\n        forceUndefined: true,\n      };\n      const wrapper = component();\n\n      wrapper.find('input').simulate('change', { target: { value: 0 } });\n\n      expect(onChange.calledOnce).to.equal(true);\n      expect(onChange.firstCall.args).to.deep.equal([0]);\n    });\n  });\n});\n"]},"sourceType":"script","hash":"154fcc78a510c84a52e6d42446ca8e2fbe6348df"}
