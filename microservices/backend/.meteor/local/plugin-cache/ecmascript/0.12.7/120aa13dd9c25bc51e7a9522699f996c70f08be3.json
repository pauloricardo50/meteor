{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/interestRates/queries.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/interestRates/queries.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/interestRates/queries.js","inputSourceMap":{"version":3,"sources":["imports/core/api/interestRates/queries.js"],"names":["currentInterestRates","currentInterestRatesFragment","interestRates","interestRatesFragment","InterestRates","INTEREST_RATES_QUERIES","INTEREST_RATES","makeCheckIsRate","rates","type","rateLow","rateHigh","trend","makeFormatRate","sortRates","a","b","Object","values","indexOf","getAverageRates","reduce","avgRates","createQuery","CURRENT_INTEREST_RATES","$postFilter","results","length","cleanedRates","keys","filter","map","sort","averageRates","date","$options"],"mappings":"AAAA,SACEA,oBAAoB,IAAIC,4BAD1B,EAEEC,aAAa,IAAIC,qBAFnB;AAIA,OAAOC,aAAP,MAA0B,GAA1B;AACA,SACEC,sBADF,EAEEC,cAFF;;AAKA,MAAMC,eAAe,GAAGC,KAAK,IAAIC,IAAI,IACnCD,KAAK,CAACC,IAAD,CAAL,CAAYC,OAAZ,IAAuBF,KAAK,CAACC,IAAD,CAAL,CAAYE,QAAnC,IAA+CH,KAAK,CAACC,IAAD,CAAL,CAAYG,KAD7D;;AAGA,MAAMC,cAAc,GAAGL,KAAK,IAAIC,IAAI,KAAK;AACvCA,EAAAA,IADuC;AAEvCC,EAAAA,OAAO,EAAEF,KAAK,CAACC,IAAD,CAAL,CAAYC,OAFkB;AAGvCC,EAAAA,QAAQ,EAAEH,KAAK,CAACC,IAAD,CAAL,CAAYE,QAHiB;AAIvCC,EAAAA,KAAK,EAAEJ,KAAK,CAACC,IAAD,CAAL,CAAYG;AAJoB,CAAL,CAApC;;AAOA,MAAME,SAAS,GAAG,CAAC;AAAEL,EAAAA,IAAI,EAAEM;AAAR,CAAD,EAAc;AAAEN,EAAAA,IAAI,EAAEO;AAAR,CAAd,KAChBC,MAAM,CAACC,MAAP,CAAcZ,cAAd,EAA8Ba,OAA9B,CAAsCJ,CAAtC,IACEE,MAAM,CAACC,MAAP,CAAcZ,cAAd,EAA8Ba,OAA9B,CAAsCH,CAAtC,CAFJ;;AAIA,MAAMI,eAAe,GAAGZ,KAAK,IAC3BA,KAAK,CAACa,MAAN,CACE,CAACC,QAAD,EAAW;AAAEb,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAX,MAA4C,EAC1C,GAAGW,QADuC;AAE1C,GAACb,IAAD,GAAQ,CAACC,OAAO,GAAGC,QAAX,IAAuB;AAFW,CAA5C,CADF,EAKE,EALF,CADF;;AASA,OAAO,MAAMX,oBAAoB,GAAGI,aAAa,CAACmB,WAAd,CAClClB,sBAAsB,CAACmB,sBADW,EAElC;AACEC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMxB,aAAa,GAAGwB,OAAO,CAACC,MAAR,GAAiB,CAAjB,IAAsBD,OAAO,CAAC,CAAD,CAAnD;AACA,UAAME,YAAY,GAAGX,MAAM,CAACY,IAAP,CAAY3B,aAAZ,EAClB4B,MADkB,CACXvB,eAAe,CAACL,aAAD,CADJ,EAElB6B,GAFkB,CAEdlB,cAAc,CAACX,aAAD,CAFA,EAGlB8B,IAHkB,CAGblB,SAHa,CAArB;AAIA,UAAMmB,YAAY,GAAGb,eAAe,CAACQ,YAAD,CAApC;AAEA,WAAO;AAAEpB,MAAAA,KAAK,EAAEoB,YAAT;AAAuBK,MAAAA,YAAvB;AAAqCC,MAAAA,IAAI,EAAEhC,aAAa,CAACgC;AAAzD,KAAP;AACD,GAVH;;AAWE,KAAGjC,4BAA4B;AAXjC,CAFkC,CAA7B;AAiBP,OAAO,MAAMC,aAAa,GAAGE,aAAa,CAACmB,WAAd,CAC3BlB,sBAAsB,CAACC,cADI,EAE3B,EACE,GAAGH,qBAAqB,EAD1B;AAEEgC,EAAAA,QAAQ,EAAE;AAAEH,IAAAA,IAAI,EAAE;AAAEE,MAAAA,IAAI,EAAE,CAAC;AAAT;AAAR;AAFZ,CAF2B,CAAtB","sourcesContent":["import {\n  currentInterestRates as currentInterestRatesFragment,\n  interestRates as interestRatesFragment,\n} from '../fragments';\nimport InterestRates from '.';\nimport {\n  INTEREST_RATES_QUERIES,\n  INTEREST_RATES,\n} from './interestRatesConstants';\n\nconst makeCheckIsRate = rates => type =>\n  rates[type].rateLow && rates[type].rateHigh && rates[type].trend;\n\nconst makeFormatRate = rates => type => ({\n  type,\n  rateLow: rates[type].rateLow,\n  rateHigh: rates[type].rateHigh,\n  trend: rates[type].trend,\n});\n\nconst sortRates = ({ type: a }, { type: b }) =>\n  Object.values(INTEREST_RATES).indexOf(a)\n  - Object.values(INTEREST_RATES).indexOf(b);\n\nconst getAverageRates = rates =>\n  rates.reduce(\n    (avgRates, { type, rateLow, rateHigh }) => ({\n      ...avgRates,\n      [type]: (rateLow + rateHigh) / 2,\n    }),\n    {},\n  );\n\nexport const currentInterestRates = InterestRates.createQuery(\n  INTEREST_RATES_QUERIES.CURRENT_INTEREST_RATES,\n  {\n    $postFilter(results) {\n      const interestRates = results.length > 0 && results[0];\n      const cleanedRates = Object.keys(interestRates)\n        .filter(makeCheckIsRate(interestRates))\n        .map(makeFormatRate(interestRates))\n        .sort(sortRates);\n      const averageRates = getAverageRates(cleanedRates);\n\n      return { rates: cleanedRates, averageRates, date: interestRates.date };\n    },\n    ...currentInterestRatesFragment(),\n  },\n);\n\nexport const interestRates = InterestRates.createQuery(\n  INTEREST_RATES_QUERIES.INTEREST_RATES,\n  {\n    ...interestRatesFragment(),\n    $options: { sort: { date: -1 } },\n  },\n);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/interestRates/queries.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/interestRates/queries.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  currentInterestRates: () => currentInterestRates,\n  interestRates: () => interestRates\n});\nlet currentInterestRatesFragment, interestRatesFragment;\nmodule.link(\"../fragments\", {\n  currentInterestRates(v) {\n    currentInterestRatesFragment = v;\n  },\n\n  interestRates(v) {\n    interestRatesFragment = v;\n  }\n\n}, 0);\nlet InterestRates;\nmodule.link(\".\", {\n  default(v) {\n    InterestRates = v;\n  }\n\n}, 1);\nlet INTEREST_RATES_QUERIES, INTEREST_RATES;\nmodule.link(\"./interestRatesConstants\", {\n  INTEREST_RATES_QUERIES(v) {\n    INTEREST_RATES_QUERIES = v;\n  },\n\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  }\n\n}, 2);\n\nconst makeCheckIsRate = rates => type => rates[type].rateLow && rates[type].rateHigh && rates[type].trend;\n\nconst makeFormatRate = rates => type => ({\n  type,\n  rateLow: rates[type].rateLow,\n  rateHigh: rates[type].rateHigh,\n  trend: rates[type].trend\n});\n\nconst sortRates = ({\n  type: a\n}, {\n  type: b\n}) => Object.values(INTEREST_RATES).indexOf(a) - Object.values(INTEREST_RATES).indexOf(b);\n\nconst getAverageRates = rates => rates.reduce((avgRates, {\n  type,\n  rateLow,\n  rateHigh\n}) => (0, _objectSpread2.default)({}, avgRates, {\n  [type]: (rateLow + rateHigh) / 2\n}), {});\n\nconst currentInterestRates = InterestRates.createQuery(INTEREST_RATES_QUERIES.CURRENT_INTEREST_RATES, (0, _objectSpread2.default)({\n  $postFilter(results) {\n    const interestRates = results.length > 0 && results[0];\n    const cleanedRates = Object.keys(interestRates).filter(makeCheckIsRate(interestRates)).map(makeFormatRate(interestRates)).sort(sortRates);\n    const averageRates = getAverageRates(cleanedRates);\n    return {\n      rates: cleanedRates,\n      averageRates,\n      date: interestRates.date\n    };\n  }\n\n}, currentInterestRatesFragment()));\nconst interestRates = InterestRates.createQuery(INTEREST_RATES_QUERIES.INTEREST_RATES, (0, _objectSpread2.default)({}, interestRatesFragment(), {\n  $options: {\n    sort: {\n      date: -1\n    }\n  }\n}));","map":{"version":3,"sources":["imports/core/api/interestRates/queries.js"],"names":["currentInterestRates","currentInterestRatesFragment","interestRates","interestRatesFragment","makeCheckIsRate","rates","type","makeFormatRate","rateLow","rateHigh","trend","sortRates","a","b","Object","getAverageRates","INTEREST_RATES_QUERIES","$postFilter","results","cleanedRates","averageRates","date","$options","sort"],"mappings":";;;;AAAA,MAAA,CAAA,MAAA,CACEA;AAAAA,EAAAA,oBAAwBC,EAAAA,MAAAA,oBAAxBD;AADF,EAAA,aAEEE,EAAAA,MAAa;AADbF,CADF;AAEmBG,IAFnB,4BAEmBA,EAFnB,qBAEmBA;AAFnB,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,oBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,4BAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,qBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,GAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,sBAAA,EAAA,cAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,EAAA,sBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,sBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,cAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAUA,MAAMC,eAAe,GAAGC,KAAK,IAAIC,IAAI,IACnCD,KAAK,CAALA,IAAK,CAALA,CAAAA,OAAAA,IAAuBA,KAAK,CAALA,IAAK,CAALA,CAAvBA,QAAAA,IAA+CA,KAAK,CAALA,IAAK,CAALA,CADjD,KAAA;;AAGA,MAAME,cAAc,GAAGF,KAAK,IAAIC,IAAI,KAAK;AAAA,EAAA,IAAA;AAEvCE,EAAAA,OAAO,EAAEH,KAAK,CAALA,IAAK,CAALA,CAF8B,OAAA;AAGvCI,EAAAA,QAAQ,EAAEJ,KAAK,CAALA,IAAK,CAALA,CAH6B,QAAA;AAIvCK,EAAAA,KAAK,EAAEL,KAAK,CAALA,IAAK,CAALA,CAAYK;AAJoB,CAAL,CAApC;;AAOA,MAAMC,SAAS,GAAG,CAAC;AAAEL,EAAAA,IAAI,EAAEM;AAAR,CAAD,EAAc;AAAEN,EAAAA,IAAI,EAAEO;AAAR,CAAd,KAChBC,MAAM,CAANA,MAAAA,CAAAA,cAAAA,EAAAA,OAAAA,CAAAA,CAAAA,IACEA,MAAM,CAANA,MAAAA,CAAAA,cAAAA,EAAAA,OAAAA,CAFJ,CAEIA,CAFJ;;AAIA,MAAMC,eAAe,GAAGV,KAAK,IAC3B,KAAK,CAAL,MAAA,CACE,CAAA,QAAA,EAAW;AAAA,EAAA,IAAA;AAAA,EAAA,OAAA;AAAiBI,EAAAA;AAAjB,CAAX,qCAA4C,QAA5C;AAEE,GAAA,IAAA,GAAQ,CAACD,OAAO,GAAR,QAAA,IAAuB;AAFjC,EADF,EADF,EACE,CADF;;AASO,MAAMR,oBAAoB,GAAG,aAAa,CAAb,WAAA,CAClCgB,sBAAsB,CADY,sBAAA;AAGhCC,EAAAA,WAAW,CAAA,OAAA,EAAU;AACnB,UAAMf,aAAa,GAAGgB,OAAO,CAAPA,MAAAA,GAAAA,CAAAA,IAAsBA,OAAO,CAAnD,CAAmD,CAAnD;AACA,UAAMC,YAAY,GAAGL,MAAM,CAANA,IAAAA,CAAAA,aAAAA,EAAAA,MAAAA,CACXV,eAAe,CADJU,aACI,CADJA,EAAAA,GAAAA,CAEdP,cAAc,CAFAO,aAEA,CAFAA,EAAAA,IAAAA,CAArB,SAAqBA,CAArB;AAIA,UAAMM,YAAY,GAAGL,eAAe,CAApC,YAAoC,CAApC;AAEA,WAAO;AAAEV,MAAAA,KAAK,EAAP,YAAA;AAAA,MAAA,YAAA;AAAqCgB,MAAAA,IAAI,EAAEnB,aAAa,CAACmB;AAAzD,KAAP;AATJ;;AAFkC,GAa7BpB,4BAA4B,EAbC,EAA7B;AAiBA,MAAMC,aAAa,GAAG,aAAa,CAAb,WAAA,CAC3Bc,sBAAsB,CADK,cAAA,kCAGtBb,qBADL,EAF2B;AAIzBmB,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAEF,MAAAA,IAAI,EAAE,CAAC;AAAT;AAAR;AAJe,GAAtB","sourcesContent":["import {\n  currentInterestRates as currentInterestRatesFragment,\n  interestRates as interestRatesFragment,\n} from '../fragments';\nimport InterestRates from '.';\nimport {\n  INTEREST_RATES_QUERIES,\n  INTEREST_RATES,\n} from './interestRatesConstants';\n\nconst makeCheckIsRate = rates => type =>\n  rates[type].rateLow && rates[type].rateHigh && rates[type].trend;\n\nconst makeFormatRate = rates => type => ({\n  type,\n  rateLow: rates[type].rateLow,\n  rateHigh: rates[type].rateHigh,\n  trend: rates[type].trend,\n});\n\nconst sortRates = ({ type: a }, { type: b }) =>\n  Object.values(INTEREST_RATES).indexOf(a)\n  - Object.values(INTEREST_RATES).indexOf(b);\n\nconst getAverageRates = rates =>\n  rates.reduce(\n    (avgRates, { type, rateLow, rateHigh }) => ({\n      ...avgRates,\n      [type]: (rateLow + rateHigh) / 2,\n    }),\n    {},\n  );\n\nexport const currentInterestRates = InterestRates.createQuery(\n  INTEREST_RATES_QUERIES.CURRENT_INTEREST_RATES,\n  {\n    $postFilter(results) {\n      const interestRates = results.length > 0 && results[0];\n      const cleanedRates = Object.keys(interestRates)\n        .filter(makeCheckIsRate(interestRates))\n        .map(makeFormatRate(interestRates))\n        .sort(sortRates);\n      const averageRates = getAverageRates(cleanedRates);\n\n      return { rates: cleanedRates, averageRates, date: interestRates.date };\n    },\n    ...currentInterestRatesFragment(),\n  },\n);\n\nexport const interestRates = InterestRates.createQuery(\n  INTEREST_RATES_QUERIES.INTEREST_RATES,\n  {\n    ...interestRatesFragment(),\n    $options: { sort: { date: -1 } },\n  },\n);\n"]},"sourceType":"script","hash":"120aa13dd9c25bc51e7a9522699f996c70f08be3"}
