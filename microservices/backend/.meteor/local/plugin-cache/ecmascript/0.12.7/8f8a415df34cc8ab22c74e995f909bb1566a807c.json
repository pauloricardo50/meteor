{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher-react/lib/withStaticQuery.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/cultofcoders:grapher-react/lib/withStaticQuery.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher-react/lib/withStaticQuery.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher-react/lib/withStaticQuery.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher-react/lib/withStaticQuery.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nmodule.export({\n  \"default\": function () {\n    return withStaticQueryContainer;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar getDisplayName;\nmodule.link(\"./getDisplayName\", {\n  \"default\": function (v) {\n    getDisplayName = v;\n  }\n}, 1);\n\nfunction withStaticQueryContainer(config) {\n  return function (WrappedComponent) {\n    /**\n     * We use it like this so we can have naming inside React Dev Tools\n     * This is a standard pattern in HOCs\n     */\n    var GrapherStaticQueryContainer =\n    /*#__PURE__*/\n    function (_React$Component) {\n      (0, _inheritsLoose2.default)(GrapherStaticQueryContainer, _React$Component);\n\n      function GrapherStaticQueryContainer() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n        _this.state = {\n          isLoading: true,\n          error: null,\n          data: []\n        };\n\n        _this.refetch = function () {\n          var _config$loadOnRefetch = config.loadOnRefetch,\n              loadOnRefetch = _config$loadOnRefetch === void 0 ? true : _config$loadOnRefetch;\n          var query = _this.props.query;\n\n          if (loadOnRefetch) {\n            _this.setState({\n              isLoading: true\n            }, function () {\n              _this.fetch(query);\n            });\n          } else {\n            _this.fetch(query);\n          }\n        };\n\n        return _this;\n      }\n\n      var _proto = GrapherStaticQueryContainer.prototype;\n\n      _proto.componentWillReceiveProps = function () {\n        function componentWillReceiveProps(nextProps) {\n          var query = nextProps.query;\n\n          if (!config.shouldRefetch) {\n            this.fetch(query);\n          } else if (config.shouldRefetch(this.props, nextProps)) {\n            this.fetch(query);\n          }\n        }\n\n        return componentWillReceiveProps;\n      }();\n\n      _proto.componentDidMount = function () {\n        function componentDidMount() {\n          var _this2 = this;\n\n          var _this$props = this.props,\n              query = _this$props.query,\n              config = _this$props.config;\n          this.fetch(query);\n\n          if (config.pollingMs) {\n            this.pollingInterval = setInterval(function () {\n              _this2.fetch(query);\n            }, config.pollingMs);\n          }\n        }\n\n        return componentDidMount;\n      }();\n\n      _proto.componentWillUnmount = function () {\n        function componentWillUnmount() {\n          this.pollingInterval && clearInterval(this.pollingInterval);\n        }\n\n        return componentWillUnmount;\n      }();\n\n      _proto.fetch = function () {\n        function fetch(query) {\n          var _this3 = this;\n\n          query.fetch(function (error, data) {\n            if (error) {\n              _this3.setState({\n                error: error,\n                data: [],\n                isLoading: false\n              });\n            } else {\n              _this3.setState({\n                error: null,\n                data: data,\n                isLoading: false\n              });\n            }\n          });\n        }\n\n        return fetch;\n      }();\n\n      _proto.render = function () {\n        function render() {\n          var _this$props2 = this.props,\n              config = _this$props2.config,\n              props = _this$props2.props,\n              query = _this$props2.query;\n          return React.createElement(WrappedComponent, {\n            grapher: this.state,\n            config: config,\n            query: query,\n            props: (0, _objectSpread2.default)({}, props, {\n              refetch: this.refetch\n            })\n          });\n        }\n\n        return render;\n      }();\n\n      return GrapherStaticQueryContainer;\n    }(React.Component);\n\n    GrapherStaticQueryContainer.displayName = \"StaticQuery(\" + getDisplayName(WrappedComponent) + \")\";\n    return GrapherStaticQueryContainer;\n  };\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher-react/lib/withStaticQuery.js"],"names":["module","export","withStaticQueryContainer","React","link","v","getDisplayName","config","WrappedComponent","GrapherStaticQueryContainer","state","isLoading","error","data","refetch","loadOnRefetch","query","props","setState","fetch","componentWillReceiveProps","nextProps","shouldRefetch","componentDidMount","pollingMs","pollingInterval","setInterval","componentWillUnmount","clearInterval","render","createElement","grapher","Component","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getDisplayName from './getDisplayName';\n\nexport default function withStaticQueryContainer(config) {\n    return function(WrappedComponent) {\n        /**\n         * We use it like this so we can have naming inside React Dev Tools\n         * This is a standard pattern in HOCs\n         */\n        class GrapherStaticQueryContainer extends React.Component {\n            state = {\n                isLoading: true,\n                error: null,\n                data: [],\n            };\n\n            componentWillReceiveProps(nextProps) {\n                const { query } = nextProps;\n                \n                if (!config.shouldRefetch) {\n                    this.fetch(query);\n                } else if (config.shouldRefetch(this.props, nextProps)) {\n                    this.fetch(query);\n                }\n            }\n\n            componentDidMount() {\n                const { query, config } = this.props;\n                this.fetch(query);\n\n                if (config.pollingMs) {\n                    this.pollingInterval = setInterval(() => {\n                        this.fetch(query);\n                    }, config.pollingMs);\n                }\n            }\n\n            componentWillUnmount() {\n                this.pollingInterval && clearInterval(this.pollingInterval);\n            }\n\n            fetch(query) {\n                query.fetch((error, data) => {\n                    if (error) {\n                        this.setState({\n                            error,\n                            data: [],\n                            isLoading: false,\n                        });\n                    } else {\n                        this.setState({\n                            error: null,\n                            data,\n                            isLoading: false,\n                        });\n                    }\n                });\n            }\n\n            refetch = () => {\n                const { loadOnRefetch = true } = config;\n                const { query } = this.props;\n\n                if (loadOnRefetch) {\n                    this.setState({ isLoading: true }, () => {\n                        this.fetch(query);\n                    });\n                } else {\n                    this.fetch(query);\n                }\n            };\n\n            render() {\n                const { config, props, query } = this.props;\n\n                return React.createElement(WrappedComponent, {\n                    grapher: this.state,\n                    config,\n                    query,\n                    props: { ...props, refetch: this.refetch },\n                });\n            }\n        }\n\n        GrapherStaticQueryContainer.displayName = `StaticQuery(${getDisplayName(\n            WrappedComponent,\n        )})`;\n\n        return GrapherStaticQueryContainer;\n    };\n}\n"]},"sourceType":"script","hash":"8f8a415df34cc8ab22c74e995f909bb1566a807c"}
