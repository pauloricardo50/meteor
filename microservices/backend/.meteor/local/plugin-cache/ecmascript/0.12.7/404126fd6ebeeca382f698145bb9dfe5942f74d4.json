{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/properties/server/PropertyService.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/properties/server/PropertyService.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/properties/server/PropertyService.js","inputSourceMap":{"version":3,"sources":["imports/core/api/properties/server/PropertyService.js"],"names":["Meteor","EMAIL_IDS","sendEmail","LoanService","CollectionService","PROPERTY_PERMISSIONS_FULL_ACCESS","PROPERTY_CATEGORY","Properties","UserService","removePropertyFromLoan","getUserNameAndOrganisation","HTTP_STATUS_CODES","PropertyService","constructor","property","userId","loanId","propertyId","insert","addPropertyToLoan","object","update","$set","fetchOne","$filters","_id","loans","category","length","loansLink","getLink","remove","loan","get","$push","$pop","$pull","propertyIds","some","hasProperty","admin","pro","isNewUser","shareSolvency","properties","map","hasOneOfProperties","Error","CONFLICT","insertPropertyLoan","addresses","address1","sendPropertyInvitationEmail","proName","user","name","proUserId","ctaUrl","settings","public","subdomains","app","formattedAddresses","slice","join","getEnrollmentUrl","run","emailId","INVITE_USER_TO_PROPERTY","params","address","multiple","addProUser","addLink","id","linkName","linkId","metadata","permissions","proPropertyInsert","PRO","setProUserPermissions","updateLinkMetadata","removeProFromProperty","removeLink","removeCustomerFromProperty","findOne","structures","insertExternalProperty","externalId","existingProperty"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,eAAvB;AAEA,SAASC,SAAT;AACA,SAASC,SAAT;AACA,OAAOC,WAAP;AACA,OAAOC,iBAAP;AACA,SACEC,gCADF,EAEEC,iBAFF;AAIA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,SAASC,sBAAT;AACA,SAASC,0BAAT;AACA,SAASC,iBAAT;AAEA,OAAO,MAAMC,eAAN,SAA8BR,iBAA9B,CAAgD;AACrDS,EAAAA,WAAW,GAAG;AACZ,UAAMN,UAAN;;AADY,oCAIL,CAAC;AAAEO,MAAAA,QAAF;AAAYC,MAAAA,MAAZ;AAAoBC,MAAAA;AAApB,KAAD,KAAkC;AACzC,YAAMC,UAAU,GAAG,MAAMC,MAAN,CAAa,EAAE,GAAGJ,QAAL;AAAeC,QAAAA;AAAf,OAAb,CAAnB;;AACA,UAAIC,MAAJ,EAAY;AACVb,QAAAA,WAAW,CAACgB,iBAAZ,CAA8B;AAAEH,UAAAA,MAAF;AAAUC,UAAAA;AAAV,SAA9B;AACD;;AAED,aAAOA,UAAP;AACD,KAXa;;AAAA,oCAaL,CAAC;AAAEA,MAAAA,UAAF;AAAcG,MAAAA;AAAd,KAAD,KACPb,UAAU,CAACc,MAAX,CAAkBJ,UAAlB,EAA8B;AAAEK,MAAAA,IAAI,EAAEF;AAAR,KAA9B,CAdY;;AAAA,oCAgBL,CAAC;AAAEH,MAAAA,UAAF;AAAcD,MAAAA;AAAd,KAAD,KAA4B;AACnC,YAAMF,QAAQ,GAAG,KAAKS,QAAL,CAAc;AAC7BC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAG,EAAER;AAAP,SADmB;AAE7BS,QAAAA,KAAK,EAAE;AAAED,UAAAA,GAAG,EAAE;AAAP,SAFsB;AAG7BE,QAAAA,QAAQ,EAAE;AAHmB,OAAd,CAAjB;;AAMA,UAAIb,QAAQ,IAAIA,QAAQ,CAACY,KAArB,IAA8BZ,QAAQ,CAACY,KAAT,CAAeE,MAAf,GAAwB,CAA1D,EAA6D;AAC3D,YAAIZ,MAAJ,EAAY;AACV,gBAAMa,SAAS,GAAG,KAAKC,OAAL,CAAab,UAAb,EAAyB,OAAzB,CAAlB;AACAY,UAAAA,SAAS,CAACE,MAAV,CAAiBf,MAAjB;AACA,iBAAOP,sBAAsB,CAAC;AAC5BuB,YAAAA,IAAI,EAAE7B,WAAW,CAAC8B,GAAZ,CAAgBjB,MAAhB,CADsB;AAE5BC,YAAAA;AAF4B,WAAD,CAA7B;AAID,SAR0D,CAS3D;AACA;;;AACA,eAAO,KAAP;AACD;;AAED,aAAOV,UAAU,CAACwB,MAAX,CAAkBd,UAAlB,CAAP;AACD,KAtCa;;AAAA,uCAwCF,CAAC;AAAEA,MAAAA,UAAF;AAAcG,MAAAA;AAAd,KAAD,KACVb,UAAU,CAACc,MAAX,CAAkBJ,UAAlB,EAA8B;AAAEiB,MAAAA,KAAK,EAAEd;AAAT,KAA9B,CAzCY;;AAAA,sCA2CH,CAAC;AAAEH,MAAAA,UAAF;AAAcG,MAAAA;AAAd,KAAD,KACTb,UAAU,CAACc,MAAX,CAAkBJ,UAAlB,EAA8B;AAAEkB,MAAAA,IAAI,EAAEf;AAAR,KAA9B,CA5CY;;AAAA,uCA8CF,CAAC;AAAEH,MAAAA,UAAF;AAAcG,MAAAA;AAAd,KAAD,KACVb,UAAU,CAACc,MAAX,CAAkBJ,UAAlB,EAA8B;AAAEmB,MAAAA,KAAK,EAAEhB;AAAT,KAA9B,CA/CY;;AAAA,gDAiDO,CAAC;AAAEL,MAAAA,MAAF;AAAUsB,MAAAA;AAAV,KAAD,KACnBA,WAAW,CAACC,IAAZ,CAAiBrB,UAAU,IACzBT,WAAW,CAAC+B,WAAZ,CAAwB;AAAExB,MAAAA,MAAF;AAAUE,MAAAA;AAAV,KAAxB,CADF,CAlDY;;AAAA,wCAqDD,CAAC;AACZoB,MAAAA,WADY;AAEZG,MAAAA,KAFY;AAGZC,MAAAA,GAHY;AAIZ1B,MAAAA,MAJY;AAKZ2B,MAAAA,SALY;AAMZC,MAAAA;AANY,KAAD,KAOP;AACJ,YAAMC,UAAU,GAAGP,WAAW,CAACQ,GAAZ,CAAgB5B,UAAU,IAAI,KAAKgB,GAAL,CAAShB,UAAT,CAA9B,CAAnB;;AAEA,UAAI,KAAK6B,kBAAL,CAAwB;AAAE/B,QAAAA,MAAF;AAAUsB,QAAAA;AAAV,OAAxB,CAAJ,EAAsD;AACpD,cAAM,IAAIrC,MAAM,CAAC+C,KAAX,CACJpC,iBAAiB,CAACqC,QADd,EAEJ,sDAFI,CAAN;AAID;;AAED7C,MAAAA,WAAW,CAAC8C,kBAAZ,CAA+B;AAAElC,QAAAA,MAAF;AAAUsB,QAAAA,WAAV;AAAuBM,QAAAA;AAAvB,OAA/B;AAEA,YAAMO,SAAS,GAAGN,UAAU,CAACC,GAAX,CAAe,CAAC;AAAEM,QAAAA;AAAF,OAAD,KAAmB,IAAGA,QAAS,GAA9C,CAAlB;AAEA,aAAO,KAAKC,2BAAL,CAAiC;AACtCrC,QAAAA,MADsC;AAEtC2B,QAAAA,SAFsC;AAGtCQ,QAAAA,SAHsC;AAItCG,QAAAA,OAAO,EAAEZ,GAAG,GAAG/B,0BAA0B,CAAC;AAAE4C,UAAAA,IAAI,EAAEb;AAAR,SAAD,CAA7B,GAA+CD,KAAK,CAACe,IAJ3B;AAKtCC,QAAAA,SAAS,EAAEf,GAAG,IAAIA,GAAG,CAAChB;AALgB,OAAjC,CAAP;AAOD,KAjFa;AAEb;;AAiFD2B,EAAAA,2BAA2B,CAAC;AAC1BrC,IAAAA,MAD0B;AAE1B2B,IAAAA,SAF0B;AAG1BW,IAAAA,OAH0B;AAI1BH,IAAAA,SAJ0B;AAK1BM,IAAAA;AAL0B,GAAD,EAMxB;AACD,QAAIC,MAAM,GAAGzD,MAAM,CAAC0D,QAAP,CAAgBC,MAAhB,CAAuBC,UAAvB,CAAkCC,GAA/C;AAEA,UAAMC,kBAAkB,GAAG,CACzBZ,SAAS,CAACa,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,EAAuBC,IAAvB,CAA4B,IAA5B,CADyB,EAEzBd,SAAS,CAACa,KAAV,CAAgB,CAAC,CAAjB,EAAoB,CAApB,CAFyB,EAGzBC,IAHyB,CAGpBd,SAAS,CAACtB,MAAV,GAAmB,CAAnB,GAAuB,EAAvB,GAA4B,MAHR,CAA3B;;AAKA,QAAIc,SAAJ,EAAe;AACb;AACAe,MAAAA,MAAM,GAAGjD,WAAW,CAACyD,gBAAZ,CAA6B;AAAElD,QAAAA;AAAF,OAA7B,CAAT;AACD;;AAED,WAAOb,SAAS,CAACgE,GAAV,CAAc;AACnBC,MAAAA,OAAO,EAAElE,SAAS,CAACmE,uBADA;AAEnBrD,MAAAA,MAFmB;AAGnBsD,MAAAA,MAAM,EAAE;AACNb,QAAAA,SADM;AAENH,QAAAA,OAFM;AAGNiB,QAAAA,OAAO,EAAER,kBAHH;AAINL,QAAAA,MAJM;AAKNc,QAAAA,QAAQ,EAAErB,SAAS,CAACtB,MAAV,GAAmB;AALvB;AAHW,KAAd,CAAP;AAWD;;AAED4C,EAAAA,UAAU,CAAC;AAAEvD,IAAAA,UAAF;AAAcF,IAAAA;AAAd,GAAD,EAAyB;AACjC,SAAK0D,OAAL,CAAa;AACXC,MAAAA,EAAE,EAAEzD,UADO;AAEX0D,MAAAA,QAAQ,EAAE,OAFC;AAGXC,MAAAA,MAAM,EAAE7D,MAHG;AAIX8D,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf;AAJC,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,CAAC;AAAEjE,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,EAAuB;AACtC,UAAME,UAAU,GAAG,KAAKC,MAAL,CAAY;AAC7BJ,MAAAA,QAAQ,EAAE,EAAE,GAAGA,QAAL;AAAea,QAAAA,QAAQ,EAAErB,iBAAiB,CAAC0E;AAA3C;AADmB,KAAZ,CAAnB;AAGA,SAAKP,OAAL,CAAa;AACXC,MAAAA,EAAE,EAAEzD,UADO;AAEX0D,MAAAA,QAAQ,EAAE,OAFC;AAGXC,MAAAA,MAAM,EAAE7D,MAHG;AAIX8D,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,WAAW,EAAEzE;AAAf;AAJC,KAAb;AAOA,WAAOY,UAAP;AACD;;AAEDgE,EAAAA,qBAAqB,CAAC;AAAEhE,IAAAA,UAAF;AAAcF,IAAAA,MAAd;AAAsB+D,IAAAA;AAAtB,GAAD,EAAsC;AACzD,SAAKI,kBAAL,CAAwB;AACtBR,MAAAA,EAAE,EAAEzD,UADkB;AAEtB0D,MAAAA,QAAQ,EAAE,OAFY;AAGtBC,MAAAA,MAAM,EAAE7D,MAHc;AAItB8D,MAAAA,QAAQ,EAAE;AAAEC,QAAAA;AAAF;AAJY,KAAxB;AAMD;;AAEDK,EAAAA,qBAAqB,CAAC;AAAElE,IAAAA,UAAF;AAAcuC,IAAAA;AAAd,GAAD,EAA4B;AAC/C,SAAK4B,UAAL,CAAgB;AAAEV,MAAAA,EAAE,EAAEzD,UAAN;AAAkB0D,MAAAA,QAAQ,EAAE,OAA5B;AAAqCC,MAAAA,MAAM,EAAEpB;AAA7C,KAAhB;AACD;;AAED6B,EAAAA,0BAA0B,CAAC;AAAEpE,IAAAA,UAAF;AAAcD,IAAAA;AAAd,GAAD,EAAyB;AACjD,UAAMgB,IAAI,GAAG7B,WAAW,CAACmF,OAAZ,CAAoB;AAAE7D,MAAAA,GAAG,EAAET;AAAP,KAApB,CAAb;AACA,UAAM;AAAEuE,MAAAA,UAAU,GAAG;AAAf,QAAsBvD,IAA5B;;AAEA,QAAIuD,UAAU,CAAC3D,MAAf,EAAuB;AACrBnB,MAAAA,sBAAsB,CAAC;AAAEuB,QAAAA,IAAF;AAAQf,QAAAA;AAAR,OAAD,CAAtB;AACD;;AAED,SAAKmE,UAAL,CAAgB;AAAEV,MAAAA,EAAE,EAAEzD,UAAN;AAAkB0D,MAAAA,QAAQ,EAAE,OAA5B;AAAqCC,MAAAA,MAAM,EAAE5D;AAA7C,KAAhB;AACD;;AAEDwE,EAAAA,sBAAsB,CAAC;AAAEzE,IAAAA,MAAF;AAAUD,IAAAA,QAAQ,EAAE;AAAE2E,MAAAA,UAAF;AAAc,SAAG3E;AAAjB;AAApB,GAAD,EAAoD;AACxE,UAAM4E,gBAAgB,GAAG,KAAKnE,QAAL,CAAc;AAAEC,MAAAA,QAAQ,EAAE;AAAEiE,QAAAA;AAAF;AAAZ,KAAd,CAAzB;;AAEA,QAAIC,gBAAJ,EAAsB;AACpB,YAAM,IAAI1F,MAAM,CAAC+C,KAAX,CAAkB,6BAA4B0C,UAAW,kBAAzD,CAAN;AACD;;AAED,WAAO,KAAKV,iBAAL,CAAuB;AAC5BhE,MAAAA,MAD4B;AAE5BD,MAAAA,QAAQ,EAAE;AAAE2E,QAAAA,UAAF;AAAc,WAAG3E;AAAjB;AAFkB,KAAvB,CAAP;AAID;;AA9KoD;AAiLvD,eAAe,IAAIF,eAAJ,EAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { EMAIL_IDS } from 'core/api/email/emailConstants';\nimport { sendEmail } from 'core/api/methods/index';\nimport LoanService from '../../loans/server/LoanService';\nimport CollectionService from '../../helpers/CollectionService';\nimport {\n  PROPERTY_PERMISSIONS_FULL_ACCESS,\n  PROPERTY_CATEGORY,\n} from '../propertyConstants';\nimport Properties from '../properties';\nimport UserService from '../../users/server/UserService';\nimport { removePropertyFromLoan } from './propertyServerHelpers';\nimport { getUserNameAndOrganisation } from '../../helpers';\nimport { HTTP_STATUS_CODES } from '../../RESTAPI/server/restApiConstants';\n\nexport class PropertyService extends CollectionService {\n  constructor() {\n    super(Properties);\n  }\n\n  insert = ({ property, userId, loanId }) => {\n    const propertyId = super.insert({ ...property, userId });\n    if (loanId) {\n      LoanService.addPropertyToLoan({ loanId, propertyId });\n    }\n\n    return propertyId;\n  };\n\n  update = ({ propertyId, object }) =>\n    Properties.update(propertyId, { $set: object });\n\n  remove = ({ propertyId, loanId }) => {\n    const property = this.fetchOne({\n      $filters: { _id: propertyId },\n      loans: { _id: 1 },\n      category: 1,\n    });\n\n    if (property && property.loans && property.loans.length > 1) {\n      if (loanId) {\n        const loansLink = this.getLink(propertyId, 'loans');\n        loansLink.remove(loanId);\n        return removePropertyFromLoan({\n          loan: LoanService.get(loanId),\n          propertyId,\n        });\n      }\n      // Can't delete a property that has multiple loans without specifying\n      // from where you want to remove it\n      return false;\n    }\n\n    return Properties.remove(propertyId);\n  };\n\n  pushValue = ({ propertyId, object }) =>\n    Properties.update(propertyId, { $push: object });\n\n  popValue = ({ propertyId, object }) =>\n    Properties.update(propertyId, { $pop: object });\n\n  pullValue = ({ propertyId, object }) =>\n    Properties.update(propertyId, { $pull: object });\n\n  hasOneOfProperties = ({ userId, propertyIds }) =>\n    propertyIds.some(propertyId =>\n      UserService.hasProperty({ userId, propertyId }));\n\n  inviteUser = ({\n    propertyIds,\n    admin,\n    pro,\n    userId,\n    isNewUser,\n    shareSolvency,\n  }) => {\n    const properties = propertyIds.map(propertyId => this.get(propertyId));\n\n    if (this.hasOneOfProperties({ userId, propertyIds })) {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.CONFLICT,\n        'Cet utilisateur est déjà invité à ce bien immobilier',\n      );\n    }\n\n    LoanService.insertPropertyLoan({ userId, propertyIds, shareSolvency });\n\n    const addresses = properties.map(({ address1 }) => `\"${address1}\"`);\n\n    return this.sendPropertyInvitationEmail({\n      userId,\n      isNewUser,\n      addresses,\n      proName: pro ? getUserNameAndOrganisation({ user: pro }) : admin.name,\n      proUserId: pro && pro._id,\n    });\n  };\n\n  sendPropertyInvitationEmail({\n    userId,\n    isNewUser,\n    proName,\n    addresses,\n    proUserId,\n  }) {\n    let ctaUrl = Meteor.settings.public.subdomains.app;\n\n    const formattedAddresses = [\n      addresses.slice(0, -1).join(', '),\n      addresses.slice(-1)[0],\n    ].join(addresses.length < 2 ? '' : ' et ');\n\n    if (isNewUser) {\n      // Envoyer invitation avec enrollment link\n      ctaUrl = UserService.getEnrollmentUrl({ userId });\n    }\n\n    return sendEmail.run({\n      emailId: EMAIL_IDS.INVITE_USER_TO_PROPERTY,\n      userId,\n      params: {\n        proUserId,\n        proName,\n        address: formattedAddresses,\n        ctaUrl,\n        multiple: addresses.length > 1,\n      },\n    });\n  }\n\n  addProUser({ propertyId, userId }) {\n    this.addLink({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: { permissions: {} },\n    });\n  }\n\n  proPropertyInsert({ property, userId }) {\n    const propertyId = this.insert({\n      property: { ...property, category: PROPERTY_CATEGORY.PRO },\n    });\n    this.addLink({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: { permissions: PROPERTY_PERMISSIONS_FULL_ACCESS },\n    });\n\n    return propertyId;\n  }\n\n  setProUserPermissions({ propertyId, userId, permissions }) {\n    this.updateLinkMetadata({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: { permissions },\n    });\n  }\n\n  removeProFromProperty({ propertyId, proUserId }) {\n    this.removeLink({ id: propertyId, linkName: 'users', linkId: proUserId });\n  }\n\n  removeCustomerFromProperty({ propertyId, loanId }) {\n    const loan = LoanService.findOne({ _id: loanId });\n    const { structures = [] } = loan;\n\n    if (structures.length) {\n      removePropertyFromLoan({ loan, propertyId });\n    }\n\n    this.removeLink({ id: propertyId, linkName: 'loans', linkId: loanId });\n  }\n\n  insertExternalProperty({ userId, property: { externalId, ...property } }) {\n    const existingProperty = this.fetchOne({ $filters: { externalId } });\n\n    if (existingProperty) {\n      throw new Meteor.Error(`Property with externalId \"${externalId}\" exists already`);\n    }\n\n    return this.proPropertyInsert({\n      userId,\n      property: { externalId, ...property },\n    });\n  }\n}\n\nexport default new PropertyService();\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/properties/server/PropertyService.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/properties/server/PropertyService.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  PropertyService: () => PropertyService\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet EMAIL_IDS;\nmodule.link(\"../../email/emailConstants\", {\n  EMAIL_IDS(v) {\n    EMAIL_IDS = v;\n  }\n\n}, 1);\nlet sendEmail;\nmodule.link(\"../../methods\", {\n  sendEmail(v) {\n    sendEmail = v;\n  }\n\n}, 2);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 3);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 4);\nlet PROPERTY_PERMISSIONS_FULL_ACCESS, PROPERTY_CATEGORY;\nmodule.link(\"../propertyConstants\", {\n  PROPERTY_PERMISSIONS_FULL_ACCESS(v) {\n    PROPERTY_PERMISSIONS_FULL_ACCESS = v;\n  },\n\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 5);\nlet Properties;\nmodule.link(\"../properties\", {\n  default(v) {\n    Properties = v;\n  }\n\n}, 6);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 7);\nlet removePropertyFromLoan;\nmodule.link(\"./propertyServerHelpers\", {\n  removePropertyFromLoan(v) {\n    removePropertyFromLoan = v;\n  }\n\n}, 8);\nlet getUserNameAndOrganisation;\nmodule.link(\"../../helpers\", {\n  getUserNameAndOrganisation(v) {\n    getUserNameAndOrganisation = v;\n  }\n\n}, 9);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../../RESTAPI/server/restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 10);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass PropertyService extends CollectionService {\n  constructor() {\n    super(Properties);\n\n    _defineProperty(this, \"insert\", ({\n      property,\n      userId,\n      loanId\n    }) => {\n      const propertyId = super.insert((0, _objectSpread2.default)({}, property, {\n        userId\n      }));\n\n      if (loanId) {\n        LoanService.addPropertyToLoan({\n          loanId,\n          propertyId\n        });\n      }\n\n      return propertyId;\n    });\n\n    _defineProperty(this, \"update\", ({\n      propertyId,\n      object\n    }) => Properties.update(propertyId, {\n      $set: object\n    }));\n\n    _defineProperty(this, \"remove\", ({\n      propertyId,\n      loanId\n    }) => {\n      const property = this.fetchOne({\n        $filters: {\n          _id: propertyId\n        },\n        loans: {\n          _id: 1\n        },\n        category: 1\n      });\n\n      if (property && property.loans && property.loans.length > 1) {\n        if (loanId) {\n          const loansLink = this.getLink(propertyId, 'loans');\n          loansLink.remove(loanId);\n          return removePropertyFromLoan({\n            loan: LoanService.get(loanId),\n            propertyId\n          });\n        } // Can't delete a property that has multiple loans without specifying\n        // from where you want to remove it\n\n\n        return false;\n      }\n\n      return Properties.remove(propertyId);\n    });\n\n    _defineProperty(this, \"pushValue\", ({\n      propertyId,\n      object\n    }) => Properties.update(propertyId, {\n      $push: object\n    }));\n\n    _defineProperty(this, \"popValue\", ({\n      propertyId,\n      object\n    }) => Properties.update(propertyId, {\n      $pop: object\n    }));\n\n    _defineProperty(this, \"pullValue\", ({\n      propertyId,\n      object\n    }) => Properties.update(propertyId, {\n      $pull: object\n    }));\n\n    _defineProperty(this, \"hasOneOfProperties\", ({\n      userId,\n      propertyIds\n    }) => propertyIds.some(propertyId => UserService.hasProperty({\n      userId,\n      propertyId\n    })));\n\n    _defineProperty(this, \"inviteUser\", ({\n      propertyIds,\n      admin,\n      pro,\n      userId,\n      isNewUser,\n      shareSolvency\n    }) => {\n      const properties = propertyIds.map(propertyId => this.get(propertyId));\n\n      if (this.hasOneOfProperties({\n        userId,\n        propertyIds\n      })) {\n        throw new Meteor.Error(HTTP_STATUS_CODES.CONFLICT, 'Cet utilisateur est déjà invité à ce bien immobilier');\n      }\n\n      LoanService.insertPropertyLoan({\n        userId,\n        propertyIds,\n        shareSolvency\n      });\n      const addresses = properties.map(({\n        address1\n      }) => `\"${address1}\"`);\n      return this.sendPropertyInvitationEmail({\n        userId,\n        isNewUser,\n        addresses,\n        proName: pro ? getUserNameAndOrganisation({\n          user: pro\n        }) : admin.name,\n        proUserId: pro && pro._id\n      });\n    });\n  }\n\n  sendPropertyInvitationEmail({\n    userId,\n    isNewUser,\n    proName,\n    addresses,\n    proUserId\n  }) {\n    let ctaUrl = Meteor.settings.public.subdomains.app;\n    const formattedAddresses = [addresses.slice(0, -1).join(', '), addresses.slice(-1)[0]].join(addresses.length < 2 ? '' : ' et ');\n\n    if (isNewUser) {\n      // Envoyer invitation avec enrollment link\n      ctaUrl = UserService.getEnrollmentUrl({\n        userId\n      });\n    }\n\n    return sendEmail.run({\n      emailId: EMAIL_IDS.INVITE_USER_TO_PROPERTY,\n      userId,\n      params: {\n        proUserId,\n        proName,\n        address: formattedAddresses,\n        ctaUrl,\n        multiple: addresses.length > 1\n      }\n    });\n  }\n\n  addProUser({\n    propertyId,\n    userId\n  }) {\n    this.addLink({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: {\n        permissions: {}\n      }\n    });\n  }\n\n  proPropertyInsert({\n    property,\n    userId\n  }) {\n    const propertyId = this.insert({\n      property: (0, _objectSpread2.default)({}, property, {\n        category: PROPERTY_CATEGORY.PRO\n      })\n    });\n    this.addLink({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: {\n        permissions: PROPERTY_PERMISSIONS_FULL_ACCESS\n      }\n    });\n    return propertyId;\n  }\n\n  setProUserPermissions({\n    propertyId,\n    userId,\n    permissions\n  }) {\n    this.updateLinkMetadata({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: {\n        permissions\n      }\n    });\n  }\n\n  removeProFromProperty({\n    propertyId,\n    proUserId\n  }) {\n    this.removeLink({\n      id: propertyId,\n      linkName: 'users',\n      linkId: proUserId\n    });\n  }\n\n  removeCustomerFromProperty({\n    propertyId,\n    loanId\n  }) {\n    const loan = LoanService.findOne({\n      _id: loanId\n    });\n    const {\n      structures = []\n    } = loan;\n\n    if (structures.length) {\n      removePropertyFromLoan({\n        loan,\n        propertyId\n      });\n    }\n\n    this.removeLink({\n      id: propertyId,\n      linkName: 'loans',\n      linkId: loanId\n    });\n  }\n\n  insertExternalProperty(_ref) {\n    let {\n      userId,\n      property: {\n        externalId\n      }\n    } = _ref,\n        property = (0, _objectWithoutProperties2.default)(_ref.property, [\"externalId\"]);\n    const existingProperty = this.fetchOne({\n      $filters: {\n        externalId\n      }\n    });\n\n    if (existingProperty) {\n      throw new Meteor.Error(`Property with externalId \"${externalId}\" exists already`);\n    }\n\n    return this.proPropertyInsert({\n      userId,\n      property: (0, _objectSpread2.default)({\n        externalId\n      }, property)\n    });\n  }\n\n}\n\nmodule.exportDefault(new PropertyService());","map":{"version":3,"sources":["imports/core/api/properties/server/PropertyService.js"],"names":["constructor","loanId","propertyId","userId","LoanService","object","$set","property","$filters","_id","loans","category","loansLink","removePropertyFromLoan","loan","Properties","$push","$pop","$pull","propertyIds","shareSolvency","properties","Meteor","HTTP_STATUS_CODES","addresses","address1","proName","pro","getUserNameAndOrganisation","user","admin","proUserId","sendPropertyInvitationEmail","ctaUrl","formattedAddresses","emailId","EMAIL_IDS","params","address","multiple","addProUser","id","linkName","linkId","metadata","permissions","proPropertyInsert","PROPERTY_CATEGORY","PRO","PROPERTY_PERMISSIONS_FULL_ACCESS","setProUserPermissions","removeProFromProperty","removeCustomerFromProperty","structures","insertExternalProperty","existingProperty","externalId"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { EMAIL_IDS } from 'core/api/email/emailConstants';\nimport { sendEmail } from 'core/api/methods/index';\nimport LoanService from '../../loans/server/LoanService';\nimport CollectionService from '../../helpers/CollectionService';\nimport {\n  PROPERTY_PERMISSIONS_FULL_ACCESS,\n  PROPERTY_CATEGORY,\n} from '../propertyConstants';\nimport Properties from '../properties';\nimport UserService from '../../users/server/UserService';\nimport { removePropertyFromLoan } from './propertyServerHelpers';\nimport { getUserNameAndOrganisation } from '../../helpers';\nimport { HTTP_STATUS_CODES } from '../../RESTAPI/server/restApiConstants';\n\nexport class PropertyService extends CollectionService {\n  constructor() {\n    super(Properties);\n  }\n\n  insert = ({ property, userId, loanId }) => {\n    const propertyId = super.insert({ ...property, userId });\n    if (loanId) {\n      LoanService.addPropertyToLoan({ loanId, propertyId });\n    }\n\n    return propertyId;\n  };\n\n  update = ({ propertyId, object }) =>\n    Properties.update(propertyId, { $set: object });\n\n  remove = ({ propertyId, loanId }) => {\n    const property = this.fetchOne({\n      $filters: { _id: propertyId },\n      loans: { _id: 1 },\n      category: 1,\n    });\n\n    if (property && property.loans && property.loans.length > 1) {\n      if (loanId) {\n        const loansLink = this.getLink(propertyId, 'loans');\n        loansLink.remove(loanId);\n        return removePropertyFromLoan({\n          loan: LoanService.get(loanId),\n          propertyId,\n        });\n      }\n      // Can't delete a property that has multiple loans without specifying\n      // from where you want to remove it\n      return false;\n    }\n\n    return Properties.remove(propertyId);\n  };\n\n  pushValue = ({ propertyId, object }) =>\n    Properties.update(propertyId, { $push: object });\n\n  popValue = ({ propertyId, object }) =>\n    Properties.update(propertyId, { $pop: object });\n\n  pullValue = ({ propertyId, object }) =>\n    Properties.update(propertyId, { $pull: object });\n\n  hasOneOfProperties = ({ userId, propertyIds }) =>\n    propertyIds.some(propertyId =>\n      UserService.hasProperty({ userId, propertyId }));\n\n  inviteUser = ({\n    propertyIds,\n    admin,\n    pro,\n    userId,\n    isNewUser,\n    shareSolvency,\n  }) => {\n    const properties = propertyIds.map(propertyId => this.get(propertyId));\n\n    if (this.hasOneOfProperties({ userId, propertyIds })) {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.CONFLICT,\n        'Cet utilisateur est déjà invité à ce bien immobilier',\n      );\n    }\n\n    LoanService.insertPropertyLoan({ userId, propertyIds, shareSolvency });\n\n    const addresses = properties.map(({ address1 }) => `\"${address1}\"`);\n\n    return this.sendPropertyInvitationEmail({\n      userId,\n      isNewUser,\n      addresses,\n      proName: pro ? getUserNameAndOrganisation({ user: pro }) : admin.name,\n      proUserId: pro && pro._id,\n    });\n  };\n\n  sendPropertyInvitationEmail({\n    userId,\n    isNewUser,\n    proName,\n    addresses,\n    proUserId,\n  }) {\n    let ctaUrl = Meteor.settings.public.subdomains.app;\n\n    const formattedAddresses = [\n      addresses.slice(0, -1).join(', '),\n      addresses.slice(-1)[0],\n    ].join(addresses.length < 2 ? '' : ' et ');\n\n    if (isNewUser) {\n      // Envoyer invitation avec enrollment link\n      ctaUrl = UserService.getEnrollmentUrl({ userId });\n    }\n\n    return sendEmail.run({\n      emailId: EMAIL_IDS.INVITE_USER_TO_PROPERTY,\n      userId,\n      params: {\n        proUserId,\n        proName,\n        address: formattedAddresses,\n        ctaUrl,\n        multiple: addresses.length > 1,\n      },\n    });\n  }\n\n  addProUser({ propertyId, userId }) {\n    this.addLink({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: { permissions: {} },\n    });\n  }\n\n  proPropertyInsert({ property, userId }) {\n    const propertyId = this.insert({\n      property: { ...property, category: PROPERTY_CATEGORY.PRO },\n    });\n    this.addLink({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: { permissions: PROPERTY_PERMISSIONS_FULL_ACCESS },\n    });\n\n    return propertyId;\n  }\n\n  setProUserPermissions({ propertyId, userId, permissions }) {\n    this.updateLinkMetadata({\n      id: propertyId,\n      linkName: 'users',\n      linkId: userId,\n      metadata: { permissions },\n    });\n  }\n\n  removeProFromProperty({ propertyId, proUserId }) {\n    this.removeLink({ id: propertyId, linkName: 'users', linkId: proUserId });\n  }\n\n  removeCustomerFromProperty({ propertyId, loanId }) {\n    const loan = LoanService.findOne({ _id: loanId });\n    const { structures = [] } = loan;\n\n    if (structures.length) {\n      removePropertyFromLoan({ loan, propertyId });\n    }\n\n    this.removeLink({ id: propertyId, linkName: 'loans', linkId: loanId });\n  }\n\n  insertExternalProperty({ userId, property: { externalId, ...property } }) {\n    const existingProperty = this.fetchOne({ $filters: { externalId } });\n\n    if (existingProperty) {\n      throw new Meteor.Error(`Property with externalId \"${externalId}\" exists already`);\n    }\n\n    return this.proPropertyInsert({\n      userId,\n      property: { externalId, ...property },\n    });\n  }\n}\n\nexport default new PropertyService();\n"]},"sourceType":"script","hash":"404126fd6ebeeca382f698145bb9dfe5942f74d4"}
