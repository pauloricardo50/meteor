{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOwnFunds/test/RequiredOwnFunds.spec.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/Financing/client/FinancingOwnFunds/test/RequiredOwnFunds.spec.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOwnFunds/test/RequiredOwnFunds.spec.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/Financing/client/FinancingOwnFunds/test/RequiredOwnFunds.spec.jsx"],"names":["React","expect","shallow","StatusIcon","RequiredOwnFundsBody","SUCCESS","ERROR","OWN_FUNDS_ROUNDING_AMOUNT","describe","props","component","beforeEach","value","it","find","children","first","id","to","include","status","equal"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'core/utils/testHelpers/enzyme';\n\nimport StatusIcon from '../../../../StatusIcon';\nimport RequiredOwnFundsBody from '../RequiredOwnFundsBody';\nimport { SUCCESS, ERROR } from '../../../../../api/constants';\nimport { OWN_FUNDS_ROUNDING_AMOUNT } from '../../../../../config/financeConstants';\n\ndescribe('RequiredOwnFunds', () => {\n  let props;\n  const component = () => shallow(<RequiredOwnFundsBody {...props} />);\n\n  beforeEach(() => {\n    props = { value: 0 };\n  });\n\n  it('displays valid text when value is 0', () => {\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('valid');\n  });\n\n  it('shows valid when value is rounding amount', () => {\n    props.value = OWN_FUNDS_ROUNDING_AMOUNT;\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('valid');\n  });\n\n  it('shows valid when value is negative rounding amount', () => {\n    props.value = -OWN_FUNDS_ROUNDING_AMOUNT;\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('valid');\n  });\n\n  it('shows too low allocated own funds if value is high', () => {\n    props.value = OWN_FUNDS_ROUNDING_AMOUNT + 1000;\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('low');\n  });\n\n  it('shows too much allocated own funds if value is high', () => {\n    props.value = -OWN_FUNDS_ROUNDING_AMOUNT - 1000;\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('high');\n  });\n\n  it('shows success icon when value is valid', () => {\n    expect(component()\n      .find(StatusIcon)\n      .first()\n      .props().status).to.equal(SUCCESS);\n  });\n\n  it('shows success icon when value is invalid', () => {\n    props.value = OWN_FUNDS_ROUNDING_AMOUNT + 1000;\n    expect(component()\n      .find(StatusIcon)\n      .first()\n      .props().status).to.equal(ERROR);\n  });\n\n  it('shows valid when value is -rounding plus a sub-1 amount', () => {\n    props.value = -OWN_FUNDS_ROUNDING_AMOUNT + 0.5;\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('valid');\n  });\n\n  it('shows valid when value is rounding minus a sub-1 amount', () => {\n    props.value = OWN_FUNDS_ROUNDING_AMOUNT - 0.5;\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('valid');\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOwnFunds/test/RequiredOwnFunds.spec.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Financing/client/FinancingOwnFunds/test/RequiredOwnFunds.spec.jsx"}},"code":"var React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 1);\nvar shallow;\nmodule.link(\"../../../../../utils/testHelpers/enzyme\", {\n  shallow: function (v) {\n    shallow = v;\n  }\n}, 2);\nvar StatusIcon;\nmodule.link(\"../../../../StatusIcon\", {\n  \"default\": function (v) {\n    StatusIcon = v;\n  }\n}, 3);\nvar RequiredOwnFundsBody;\nmodule.link(\"../RequiredOwnFundsBody\", {\n  \"default\": function (v) {\n    RequiredOwnFundsBody = v;\n  }\n}, 4);\nvar SUCCESS, ERROR;\nmodule.link(\"../../../../../api/constants\", {\n  SUCCESS: function (v) {\n    SUCCESS = v;\n  },\n  ERROR: function (v) {\n    ERROR = v;\n  }\n}, 5);\nvar OWN_FUNDS_ROUNDING_AMOUNT;\nmodule.link(\"../../../../../config/financeConstants\", {\n  OWN_FUNDS_ROUNDING_AMOUNT: function (v) {\n    OWN_FUNDS_ROUNDING_AMOUNT = v;\n  }\n}, 6);\ndescribe('RequiredOwnFunds', function () {\n  var props;\n\n  var component = function () {\n    return shallow(React.createElement(RequiredOwnFundsBody, props));\n  };\n\n  beforeEach(function () {\n    props = {\n      value: 0\n    };\n  });\n  it('displays valid text when value is 0', function () {\n    expect(component().find('.text').children().first().props().id).to.include('valid');\n  });\n  it('shows valid when value is rounding amount', function () {\n    props.value = OWN_FUNDS_ROUNDING_AMOUNT;\n    expect(component().find('.text').children().first().props().id).to.include('valid');\n  });\n  it('shows valid when value is negative rounding amount', function () {\n    props.value = -OWN_FUNDS_ROUNDING_AMOUNT;\n    expect(component().find('.text').children().first().props().id).to.include('valid');\n  });\n  it('shows too low allocated own funds if value is high', function () {\n    props.value = OWN_FUNDS_ROUNDING_AMOUNT + 1000;\n    expect(component().find('.text').children().first().props().id).to.include('low');\n  });\n  it('shows too much allocated own funds if value is high', function () {\n    props.value = -OWN_FUNDS_ROUNDING_AMOUNT - 1000;\n    expect(component().find('.text').children().first().props().id).to.include('high');\n  });\n  it('shows success icon when value is valid', function () {\n    expect(component().find(StatusIcon).first().props().status).to.equal(SUCCESS);\n  });\n  it('shows success icon when value is invalid', function () {\n    props.value = OWN_FUNDS_ROUNDING_AMOUNT + 1000;\n    expect(component().find(StatusIcon).first().props().status).to.equal(ERROR);\n  });\n  it('shows valid when value is -rounding plus a sub-1 amount', function () {\n    props.value = -OWN_FUNDS_ROUNDING_AMOUNT + 0.5;\n    expect(component().find('.text').children().first().props().id).to.include('valid');\n  });\n  it('shows valid when value is rounding minus a sub-1 amount', function () {\n    props.value = OWN_FUNDS_ROUNDING_AMOUNT - 0.5;\n    expect(component().find('.text').children().first().props().id).to.include('valid');\n  });\n});","map":{"version":3,"sources":["imports/core/components/Financing/client/FinancingOwnFunds/test/RequiredOwnFunds.spec.jsx"],"names":["describe","component","shallow","beforeEach","props","value","it","expect","OWN_FUNDS_ROUNDING_AMOUNT"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'core/utils/testHelpers/enzyme';\n\nimport StatusIcon from '../../../../StatusIcon';\nimport RequiredOwnFundsBody from '../RequiredOwnFundsBody';\nimport { SUCCESS, ERROR } from '../../../../../api/constants';\nimport { OWN_FUNDS_ROUNDING_AMOUNT } from '../../../../../config/financeConstants';\n\ndescribe('RequiredOwnFunds', () => {\n  let props;\n  const component = () => shallow(<RequiredOwnFundsBody {...props} />);\n\n  beforeEach(() => {\n    props = { value: 0 };\n  });\n\n  it('displays valid text when value is 0', () => {\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('valid');\n  });\n\n  it('shows valid when value is rounding amount', () => {\n    props.value = OWN_FUNDS_ROUNDING_AMOUNT;\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('valid');\n  });\n\n  it('shows valid when value is negative rounding amount', () => {\n    props.value = -OWN_FUNDS_ROUNDING_AMOUNT;\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('valid');\n  });\n\n  it('shows too low allocated own funds if value is high', () => {\n    props.value = OWN_FUNDS_ROUNDING_AMOUNT + 1000;\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('low');\n  });\n\n  it('shows too much allocated own funds if value is high', () => {\n    props.value = -OWN_FUNDS_ROUNDING_AMOUNT - 1000;\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('high');\n  });\n\n  it('shows success icon when value is valid', () => {\n    expect(component()\n      .find(StatusIcon)\n      .first()\n      .props().status).to.equal(SUCCESS);\n  });\n\n  it('shows success icon when value is invalid', () => {\n    props.value = OWN_FUNDS_ROUNDING_AMOUNT + 1000;\n    expect(component()\n      .find(StatusIcon)\n      .first()\n      .props().status).to.equal(ERROR);\n  });\n\n  it('shows valid when value is -rounding plus a sub-1 amount', () => {\n    props.value = -OWN_FUNDS_ROUNDING_AMOUNT + 0.5;\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('valid');\n  });\n\n  it('shows valid when value is rounding minus a sub-1 amount', () => {\n    props.value = OWN_FUNDS_ROUNDING_AMOUNT - 0.5;\n    expect(component()\n      .find('.text')\n      .children()\n      .first()\n      .props().id).to.include('valid');\n  });\n});\n"]},"sourceType":"script","hash":"6c4cc1dce10a763e2fa8331fb363877afb0e9a86"}
