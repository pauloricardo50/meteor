{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/test/redirection.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/utils/test/redirection.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/test/redirection.test.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/test/redirection.test.js"],"names":["Accounts","Meteor","Random","expect","sinon","getRedirectIfInRoleForOtherApp","ROLES","describe","token","id","beforeEach","_storedLoginToken","stub","callsFake","afterEach","userWithRole","role","roles","urlFor","service","settings","public","subdomains","PRO","USER","forEach","microservice","args","url","it","JSON","stringify","originalMicroservice","to","equal"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nimport { expect } from 'chai';\nimport sinon from 'sinon';\n\nimport { getRedirectIfInRoleForOtherApp } from '../redirection';\nimport { ROLES } from '../../api/constants';\n\ndescribe('getRedirectIfInRoleForOtherApp', () => {\n  const token = Random.id();\n\n  beforeEach(() => {\n    // It's available only on the client.\n    Accounts._storedLoginToken = sinon.stub().callsFake(() => token);\n  });\n\n  afterEach(() => {\n    delete Accounts._storedLoginToken;\n  });\n\n  const userWithRole = role => ({ roles: [role] });\n  const urlFor = service =>\n    `${Meteor.settings.public.subdomains[service]}/login-token/${token}`;\n\n  [\n    ['app', [userWithRole(ROLES.PRO), ROLES.PRO, 'pro'], urlFor('pro')],\n    ['app', [userWithRole(ROLES.PRO), ROLES.USER, 'app']],\n    ['app', [userWithRole(ROLES.USER), ROLES.PRO, 'pro']],\n    ['app', [userWithRole(ROLES.USER), ROLES.USER, 'app']],\n    ['pro', [userWithRole(ROLES.PRO), ROLES.PRO, 'pro']],\n    ['pro', [userWithRole(ROLES.PRO), ROLES.USER, 'app']],\n    ['pro', [userWithRole(ROLES.USER), ROLES.PRO, 'pro']],\n    ['pro', [userWithRole(ROLES.USER), ROLES.USER, 'app'], urlFor('app')],\n  ].forEach(([microservice, args, url]) => {\n    it(`Should work in ${microservice} for ${JSON.stringify(args)}`, () => {\n      const originalMicroservice = Meteor.settings.public.microservice;\n      Meteor.settings.public.microservice = microservice;\n\n      expect(getRedirectIfInRoleForOtherApp(...args)).to.equal(url);\n\n      Meteor.settings.public.microservice = originalMicroservice;\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/test/redirection.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/test/redirection.test.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Random;\nmodule.link(\"meteor/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 2);\nvar expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 3);\nvar sinon;\nmodule.link(\"sinon\", {\n  \"default\": function (v) {\n    sinon = v;\n  }\n}, 4);\nvar getRedirectIfInRoleForOtherApp;\nmodule.link(\"../redirection\", {\n  getRedirectIfInRoleForOtherApp: function (v) {\n    getRedirectIfInRoleForOtherApp = v;\n  }\n}, 5);\nvar ROLES;\nmodule.link(\"../../api/constants\", {\n  ROLES: function (v) {\n    ROLES = v;\n  }\n}, 6);\ndescribe('getRedirectIfInRoleForOtherApp', function () {\n  var token = Random.id();\n  beforeEach(function () {\n    // It's available only on the client.\n    Accounts._storedLoginToken = sinon.stub().callsFake(function () {\n      return token;\n    });\n  });\n  afterEach(function () {\n    delete Accounts._storedLoginToken;\n  });\n\n  var userWithRole = function (role) {\n    return {\n      roles: [role]\n    };\n  };\n\n  var urlFor = function (service) {\n    return Meteor.settings.public.subdomains[service] + \"/login-token/\" + token;\n  };\n\n  [['app', [userWithRole(ROLES.PRO), ROLES.PRO, 'pro'], urlFor('pro')], ['app', [userWithRole(ROLES.PRO), ROLES.USER, 'app']], ['app', [userWithRole(ROLES.USER), ROLES.PRO, 'pro']], ['app', [userWithRole(ROLES.USER), ROLES.USER, 'app']], ['pro', [userWithRole(ROLES.PRO), ROLES.PRO, 'pro']], ['pro', [userWithRole(ROLES.PRO), ROLES.USER, 'app']], ['pro', [userWithRole(ROLES.USER), ROLES.PRO, 'pro']], ['pro', [userWithRole(ROLES.USER), ROLES.USER, 'app'], urlFor('app')]].forEach(function (_ref) {\n    var _ref2 = (0, _slicedToArray2.default)(_ref, 3),\n        microservice = _ref2[0],\n        args = _ref2[1],\n        url = _ref2[2];\n\n    it(\"Should work in \" + microservice + \" for \" + JSON.stringify(args), function () {\n      var originalMicroservice = Meteor.settings.public.microservice;\n      Meteor.settings.public.microservice = microservice;\n      expect(getRedirectIfInRoleForOtherApp.apply(void 0, (0, _toConsumableArray2.default)(args))).to.equal(url);\n      Meteor.settings.public.microservice = originalMicroservice;\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/utils/test/redirection.test.js"],"names":["describe","token","Random","beforeEach","Accounts","sinon","afterEach","userWithRole","role","roles","urlFor","service","Meteor","ROLES","it","microservice","JSON","originalMicroservice","expect","getRedirectIfInRoleForOtherApp"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nimport { expect } from 'chai';\nimport sinon from 'sinon';\n\nimport { getRedirectIfInRoleForOtherApp } from '../redirection';\nimport { ROLES } from '../../api/constants';\n\ndescribe('getRedirectIfInRoleForOtherApp', () => {\n  const token = Random.id();\n\n  beforeEach(() => {\n    // It's available only on the client.\n    Accounts._storedLoginToken = sinon.stub().callsFake(() => token);\n  });\n\n  afterEach(() => {\n    delete Accounts._storedLoginToken;\n  });\n\n  const userWithRole = role => ({ roles: [role] });\n  const urlFor = service =>\n    `${Meteor.settings.public.subdomains[service]}/login-token/${token}`;\n\n  [\n    ['app', [userWithRole(ROLES.PRO), ROLES.PRO, 'pro'], urlFor('pro')],\n    ['app', [userWithRole(ROLES.PRO), ROLES.USER, 'app']],\n    ['app', [userWithRole(ROLES.USER), ROLES.PRO, 'pro']],\n    ['app', [userWithRole(ROLES.USER), ROLES.USER, 'app']],\n    ['pro', [userWithRole(ROLES.PRO), ROLES.PRO, 'pro']],\n    ['pro', [userWithRole(ROLES.PRO), ROLES.USER, 'app']],\n    ['pro', [userWithRole(ROLES.USER), ROLES.PRO, 'pro']],\n    ['pro', [userWithRole(ROLES.USER), ROLES.USER, 'app'], urlFor('app')],\n  ].forEach(([microservice, args, url]) => {\n    it(`Should work in ${microservice} for ${JSON.stringify(args)}`, () => {\n      const originalMicroservice = Meteor.settings.public.microservice;\n      Meteor.settings.public.microservice = microservice;\n\n      expect(getRedirectIfInRoleForOtherApp(...args)).to.equal(url);\n\n      Meteor.settings.public.microservice = originalMicroservice;\n    });\n  });\n});\n"]},"sourceType":"script","hash":"1922b2a1c718039275c9cb7cd980c661849e3866"}
