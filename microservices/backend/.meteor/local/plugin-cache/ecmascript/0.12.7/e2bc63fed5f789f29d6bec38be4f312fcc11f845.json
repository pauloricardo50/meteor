{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingSection/components/InputAndSliderField.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/Financing/client/FinancingSection/components/InputAndSliderField.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingSection/components/InputAndSliderField.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/Financing/client/FinancingSection/components/InputAndSliderField.jsx"],"names":["React","connectField","Slider","MoneyInput","InputAndSliderFieldProps","valueIsNotDefined","value","undefined","makeHandleTextChange","onChange","max","allowUndefined","forceUndefined","Math","min","setValue","InputAndSliderField","props","placeholder","maxSlider","disabled","maxSliderValue"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,MAAP;AAEA,OAAOC,UAAP;AAEA,KAAKC,wBAAL,GAAgC,EAAhC;;AAEA,MAAMC,iBAAiB,GAAGC,KAAK,IAC7BA,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAKC,SAA1B,IAAuCD,KAAK,KAAK,IADnD;;AAGA,MAAME,oBAAoB,GAAG,CAAC;AAC5BC,EAAAA,QAD4B;AAE5BC,EAAAA,GAF4B;AAG5BC,EAAAA,cAH4B;AAI5BC,EAAAA;AAJ4B,CAAD,KAKtBN,KAAD,IAAW;AACf,MAAIK,cAAc,IAAIN,iBAAiB,CAACC,KAAD,CAAvC,EAAgD;AAC9C,WAAOG,QAAQ,CAAC,EAAD,CAAf;AACD;;AACD,MAAIC,GAAG,IAAIJ,KAAX,EAAkB;AAChB,WAAOG,QAAQ,CAACI,IAAI,CAACC,GAAL,CAASR,KAAT,EAAgBI,GAAhB,CAAD,CAAf;AACD;;AACD,SAAOD,QAAQ,CAACH,KAAK,KAAKM,cAAc,IAAID,cAAlB,GAAmC,EAAnC,GAAwC,CAA7C,CAAN,CAAf;AACD,CAbD;;AAeA,MAAMI,QAAQ,GAAG,CAACT,KAAD,EAAQK,cAAR,EAAwBC,cAAxB,KAA2C;AAC1D,MAAID,cAAJ,EAAoB;AAClB,WAAOC,cAAc,IAAIN,KAAK,KAAK,CAA5B,GACH,EADG,GAEFD,iBAAiB,CAACC,KAAD,CAAjB,IAA4B,EAA7B,IAAoCA,KAFxC;AAGD;;AACD,SAAOA,KAAK,IAAI,CAAhB;AACD,CAPD;;AASA,OAAO,MAAMU,mBAAmB,GAAG,CAACC,KAAK,EAAEb,wBAAR,KAAqC;AACtE,QAAM;AACJE,IAAAA,KADI;AAEJG,IAAAA,QAFI;AAGJS,IAAAA,WAHI;AAIJN,IAAAA,cAJI;AAKJD,IAAAA,cALI;AAMJD,IAAAA,GAAG,GAAG,OANF;AAOJS,IAAAA,SAPI;AAQJC,IAAAA;AARI,MASFH,KATJ;AAUA,QAAMI,cAAc,GAAGF,SAAS,IAAIT,GAApC;AACA,SACE;MACE,CAAC,UAAD,CACE,MAAM,CAACK,QAAQ,CAACT,KAAD,EAAQK,cAAR,EAAwBC,cAAxB,CAAT,CADR,CAEE,SAAS,CAACJ,oBAAoB,CAACS,KAAD,CAArB,CAFX,CAGE,YAAY,CAACC,WAAW,KAAKX,SAAhB,GAA4B,EAA5B,GAAkC,GAAEW,WAAY,EAAjD,CAHd,CAGkE;AAChE,cAAU,aAJZ,CAKE,SAAS,CAACE,QAAD,CALX;MAOA,CAAC,MAAD,CACE,IAAI,CAAC,CAAD,CADN,CAEE,IAAI,CAACP,IAAI,CAACH,GAAL,CAASW,cAAT,EAAyBf,KAAzB,CAAD,CAFN,CAGE,KAAK,CAAC,IAAD,CAHP,CAIE,MAAM,CAACS,QAAQ,CAACT,KAAD,EAAQK,cAAR,EAAwBC,cAAxB,CAAT,CAJR,CAKE,SAAS,CAACH,QAAD,CALX,CAME,UAAU,QANZ,CAOE,SAAS,CAACW,QAAD,CAPX;IASF,GAlBF;AAoBD,CAhCM;AAkCP,eAAenB,YAAY,CAACe,mBAAD,CAA3B","sourcesContent":["// @flow\nimport React from 'react';\nimport connectField from 'uniforms/connectField';\nimport Slider from 'core/components/Material/Slider';\n\nimport MoneyInput from '../../../../MoneyInput';\n\ntype InputAndSliderFieldProps = {};\n\nconst valueIsNotDefined = value =>\n  value === '' || value === undefined || value === null;\n\nconst makeHandleTextChange = ({\n  onChange,\n  max,\n  allowUndefined,\n  forceUndefined,\n}) => (value) => {\n  if (allowUndefined && valueIsNotDefined(value)) {\n    return onChange('');\n  }\n  if (max && value) {\n    return onChange(Math.min(value, max));\n  }\n  return onChange(value || (forceUndefined && allowUndefined ? '' : 0));\n};\n\nconst setValue = (value, allowUndefined, forceUndefined) => {\n  if (allowUndefined) {\n    return forceUndefined && value === 0\n      ? ''\n      : (valueIsNotDefined(value) && '') || value;\n  }\n  return value || 0;\n};\n\nexport const InputAndSliderField = (props: InputAndSliderFieldProps) => {\n  const {\n    value,\n    onChange,\n    placeholder,\n    forceUndefined,\n    allowUndefined,\n    max = 1000000,\n    maxSlider,\n    disabled,\n  } = props;\n  const maxSliderValue = maxSlider || max;\n  return (\n    <>\n      <MoneyInput\n        value={setValue(value, allowUndefined, forceUndefined)}\n        onChange={makeHandleTextChange(props)}\n        placeholder={placeholder === undefined ? '' : `${placeholder}`} // Placeholders should always be a string\n        className=\"money-input\"\n        disabled={disabled}\n      />\n      <Slider\n        min={0}\n        max={Math.max(maxSliderValue, value)}\n        step={1000}\n        value={setValue(value, allowUndefined, forceUndefined)}\n        onChange={onChange}\n        className=\"slider\"\n        disabled={disabled}\n      />\n    </>\n  );\n};\n\nexport default connectField(InputAndSliderField);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingSection/components/InputAndSliderField.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Financing/client/FinancingSection/components/InputAndSliderField.jsx"}},"code":"module.export({\n  InputAndSliderField: () => InputAndSliderField\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet connectField;\nmodule.link(\"uniforms/connectField\", {\n  default(v) {\n    connectField = v;\n  }\n\n}, 1);\nlet Slider;\nmodule.link(\"../../../../Material/Slider\", {\n  default(v) {\n    Slider = v;\n  }\n\n}, 2);\nlet MoneyInput;\nmodule.link(\"../../../../MoneyInput\", {\n  default(v) {\n    MoneyInput = v;\n  }\n\n}, 3);\n\nconst valueIsNotDefined = value => value === '' || value === undefined || value === null;\n\nconst makeHandleTextChange = (_ref) => {\n  let {\n    onChange,\n    max,\n    allowUndefined,\n    forceUndefined\n  } = _ref;\n  return value => {\n    if (allowUndefined && valueIsNotDefined(value)) {\n      return onChange('');\n    }\n\n    if (max && value) {\n      return onChange(Math.min(value, max));\n    }\n\n    return onChange(value || (forceUndefined && allowUndefined ? '' : 0));\n  };\n};\n\nconst setValue = (value, allowUndefined, forceUndefined) => {\n  if (allowUndefined) {\n    return forceUndefined && value === 0 ? '' : valueIsNotDefined(value) && '' || value;\n  }\n\n  return value || 0;\n};\n\nconst InputAndSliderField = props => {\n  const {\n    value,\n    onChange,\n    placeholder,\n    forceUndefined,\n    allowUndefined,\n    max = 1000000,\n    maxSlider,\n    disabled\n  } = props;\n  const maxSliderValue = maxSlider || max;\n  return React.createElement(React.Fragment, null, React.createElement(MoneyInput, {\n    value: setValue(value, allowUndefined, forceUndefined),\n    onChange: makeHandleTextChange(props),\n    placeholder: placeholder === undefined ? '' : \"\".concat(placeholder) // Placeholders should always be a string\n    ,\n    className: \"money-input\",\n    disabled: disabled\n  }), React.createElement(Slider, {\n    min: 0,\n    max: Math.max(maxSliderValue, value),\n    step: 1000,\n    value: setValue(value, allowUndefined, forceUndefined),\n    onChange: onChange,\n    className: \"slider\",\n    disabled: disabled\n  }));\n};\n\nmodule.exportDefault(connectField(InputAndSliderField));","map":{"version":3,"sources":["imports/core/components/Financing/client/FinancingSection/components/InputAndSliderField.jsx"],"names":["valueIsNotDefined","value","makeHandleTextChange","forceUndefined","allowUndefined","onChange","max","Math","setValue","InputAndSliderField","disabled","maxSliderValue","maxSlider","placeholder","connectField"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport connectField from 'uniforms/connectField';\nimport Slider from 'core/components/Material/Slider';\n\nimport MoneyInput from '../../../../MoneyInput';\n\ntype InputAndSliderFieldProps = {};\n\nconst valueIsNotDefined = value =>\n  value === '' || value === undefined || value === null;\n\nconst makeHandleTextChange = ({\n  onChange,\n  max,\n  allowUndefined,\n  forceUndefined,\n}) => (value) => {\n  if (allowUndefined && valueIsNotDefined(value)) {\n    return onChange('');\n  }\n  if (max && value) {\n    return onChange(Math.min(value, max));\n  }\n  return onChange(value || (forceUndefined && allowUndefined ? '' : 0));\n};\n\nconst setValue = (value, allowUndefined, forceUndefined) => {\n  if (allowUndefined) {\n    return forceUndefined && value === 0\n      ? ''\n      : (valueIsNotDefined(value) && '') || value;\n  }\n  return value || 0;\n};\n\nexport const InputAndSliderField = (props: InputAndSliderFieldProps) => {\n  const {\n    value,\n    onChange,\n    placeholder,\n    forceUndefined,\n    allowUndefined,\n    max = 1000000,\n    maxSlider,\n    disabled,\n  } = props;\n  const maxSliderValue = maxSlider || max;\n  return (\n    <>\n      <MoneyInput\n        value={setValue(value, allowUndefined, forceUndefined)}\n        onChange={makeHandleTextChange(props)}\n        placeholder={placeholder === undefined ? '' : `${placeholder}`} // Placeholders should always be a string\n        className=\"money-input\"\n        disabled={disabled}\n      />\n      <Slider\n        min={0}\n        max={Math.max(maxSliderValue, value)}\n        step={1000}\n        value={setValue(value, allowUndefined, forceUndefined)}\n        onChange={onChange}\n        className=\"slider\"\n        disabled={disabled}\n      />\n    </>\n  );\n};\n\nexport default connectField(InputAndSliderField);\n"]},"sourceType":"script","hash":"e2bc63fed5f789f29d6bec38be4f312fcc11f845"}
