{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/report/report-text-summary.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/lmieulet:meteor-coverage/server/report/report-text-summary.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/report/report-text-summary.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/report/report-text-summary.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/lmieulet:meteor-coverage/server/report/report-text-summary.js"}},"code":"let Conf;\nmodule.link(\"../context/conf\", {\n  default(v) {\n    Conf = v;\n  }\n\n}, 0);\nlet CoverageData;\nmodule.link(\"../services/coverage-data\", {\n  default(v) {\n    CoverageData = v;\n  }\n\n}, 1);\nlet Core;\nmodule.link(\"../services/core\", {\n  default(v) {\n    Core = v;\n  }\n\n}, 2);\nlet ReportCommon;\nmodule.link(\"./report-common\", {\n  default(v) {\n    ReportCommon = v;\n  }\n\n}, 3);\nlet path;\nmodule.link(\"path\", {\n  default(v) {\n    path = v;\n  }\n\n}, 4);\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 5);\n\nvar Report = Npm.require('istanbul-lib-report'),\n    ReportImpl = Npm.require('istanbul-reports');\n\nmodule.exportDefault(class {\n  constructor(res, type, options) {\n    this.res = res;\n    this.options = options;\n    this.report = ReportImpl.create(type, this.options);\n    this.report.file = this.options.path;\n    this.context = this.getContext(this.report.file);\n  }\n\n  generate() {\n    let coverage = Core.getCoverageObject();\n    var root = CoverageData.getTreeReport(coverage);\n    this.report.onStart(root, this.context);\n    this.res.end('{\"type\":\"success\"}');\n  }\n\n  getContext(filepath) {\n    const dirpath = path.dirname(filepath);\n    ReportCommon.checkDirectory(dirpath);\n    ReportCommon.checkFile(filepath);\n    var context = Report.createContext();\n    Object.defineProperty(context, 'writer', {\n      value: {\n        writeFile: function (path) {\n          return {\n            write: function (data) {\n              fs.appendFileSync(path, data);\n            },\n            println: function (data) {\n              fs.appendFileSync(path, data + '\\r\\n');\n            },\n            close: function () {},\n            colorize: function (string) {\n              return string;\n            }\n          };\n        }\n      }\n    });\n    return context;\n  }\n\n});","map":{"version":3,"sources":["packages/lmieulet:meteor-coverage/server/report/report-text-summary.js"],"names":["Conf","module","link","default","v","CoverageData","Core","ReportCommon","path","fs","Report","Npm","require","ReportImpl","exportDefault","constructor","res","type","options","report","create","file","context","getContext","generate","coverage","getCoverageObject","root","getTreeReport","onStart","end","filepath","dirpath","dirname","checkDirectory","checkFile","createContext","Object","defineProperty","value","writeFile","write","data","appendFileSync","println","close","colorize","string"],"mappings":"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","sourcesContent":["import Conf from '../context/conf';\nimport CoverageData from '../services/coverage-data';\nimport Core from '../services/core';\nimport ReportCommon from './report-common';\nimport path from 'path';\nimport fs from 'fs';\nvar Report = Npm.require('istanbul-lib-report'),\n  ReportImpl = Npm.require('istanbul-reports');\n  \nexport default class {\n  constructor(res, type, options) {\n    this.res = res;\n    this.options = options;\n    this.report = ReportImpl.create(type, this.options);\n\n    this.report.file = this.options.path;\n    this.context = this.getContext(this.report.file);\n\n  }\n\n  generate() {\n    let coverage = Core.getCoverageObject();\n    var root = CoverageData.getTreeReport(coverage);\n    this.report.onStart(root, this.context);\n    this.res.end('{\"type\":\"success\"}');\n  }\n\n  getContext(filepath) {\n    const dirpath = path.dirname(filepath);\n    ReportCommon.checkDirectory(dirpath);\n    ReportCommon.checkFile(filepath);\n    var context = Report.createContext();\n\n\n    Object.defineProperty(context, 'writer', {\n      value: {\n        writeFile: function (path) {\n          return {\n            write: function (data) {\n              fs.appendFileSync(path, data);\n            },\n            println: function (data) {\n              fs.appendFileSync(path, data + '\\r\\n');\n            },\n            close: function () {\n            },\n            colorize: function(string) {\n              return string;\n            }\n          };\n        }\n      }\n    });\n    return context;\n  }\n}\n"]},"sourceType":"script","hash":"bcb1493e8911c44cfb7fda76d16495e99d5fd54e"}
