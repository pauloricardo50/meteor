{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/RadioButtons.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/components/RadioButtons.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/RadioButtons.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/RadioButtons.jsx"],"names":["React","PropTypes","Radio","RadioGroup","FormLabel","FormControl","FormControlLabel","T","safeChange","value","id","onChange","options","every","o","RadioButtons","intlPrefix","label","style","radioGroupStyle","disabled","isValidElement","event","newValue","justifyContent","flexDirection","map","option","undefined","propTypes","bool","string","node","func","isRequired","array","object","any","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Radio, { RadioGroup } from 'core/components/Material/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport T from 'core/components/Translation';\n\nconst safeChange = (value, id, onChange, options) => {\n  // If all options are booleans, transform the onChange handler's value\n  // to booleans\n  if (options.every(o => typeof o === 'boolean' || typeof o.id === 'boolean')) {\n    return onChange(id, value === 'true');\n  }\n  return onChange(id, value);\n};\n\n// Cast value to strings, so that is plays nicely with material-ui,\n// in the onChange handler, convert back to boolean\nconst RadioButtons = ({\n  options,\n  onChange,\n  id,\n  intlPrefix,\n  value,\n  label,\n  style,\n  radioGroupStyle,\n  disabled,\n}) => (\n  <FormControl style={style} className=\"mui-radio-group\">\n    {React.isValidElement(label) && <FormLabel htmlFor={id}>{label}</FormLabel>}\n\n    <RadioGroup\n      onChange={(event, newValue) =>\n        safeChange(newValue, id, onChange, options)\n      }\n      value={`${value}`}\n      name={id}\n      id={id}\n      className=\"radio-group flex\"\n      style={\n        radioGroupStyle || {\n          justifyContent: 'flex-start',\n          flexDirection: 'row',\n        }\n      }\n    >\n      {options.map(option => (\n        <FormControlLabel\n          control={<Radio className=\"radio\" />}\n          key={option.id || option}\n          value={`${option.id !== undefined ? option.id : option}`}\n          label={option.label || <T id={`${intlPrefix}.${option}`} />}\n          disabled={disabled}\n        />\n      ))}\n    </RadioGroup>\n  </FormControl>\n);\n\nRadioButtons.propTypes = {\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  intlPrefix: PropTypes.string,\n  label: PropTypes.node,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  style: PropTypes.object,\n  value: PropTypes.any,\n};\n\nRadioButtons.defaultProps = {\n  label: '',\n  style: {},\n  value: undefined,\n  intlPrefix: '',\n  disabled: false,\n};\n\nexport default RadioButtons;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/RadioButtons.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/RadioButtons.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Radio, RadioGroup;\nmodule.link(\"./Material/Radio\", {\n  default(v) {\n    Radio = v;\n  },\n\n  RadioGroup(v) {\n    RadioGroup = v;\n  }\n\n}, 2);\nlet FormLabel;\nmodule.link(\"@material-ui/core/FormLabel\", {\n  default(v) {\n    FormLabel = v;\n  }\n\n}, 3);\nlet FormControl;\nmodule.link(\"@material-ui/core/FormControl\", {\n  default(v) {\n    FormControl = v;\n  }\n\n}, 4);\nlet FormControlLabel;\nmodule.link(\"@material-ui/core/FormControlLabel\", {\n  default(v) {\n    FormControlLabel = v;\n  }\n\n}, 5);\nlet T;\nmodule.link(\"./Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 6);\n\nconst safeChange = (value, id, onChange, options) => {\n  // If all options are booleans, transform the onChange handler's value\n  // to booleans\n  if (options.every(o => typeof o === 'boolean' || typeof o.id === 'boolean')) {\n    return onChange(id, value === 'true');\n  }\n\n  return onChange(id, value);\n}; // Cast value to strings, so that is plays nicely with material-ui,\n// in the onChange handler, convert back to boolean\n\n\nconst RadioButtons = ({\n  options,\n  onChange,\n  id,\n  intlPrefix,\n  value,\n  label,\n  style,\n  radioGroupStyle,\n  disabled\n}) => React.createElement(FormControl, {\n  style: style,\n  className: \"mui-radio-group\"\n}, React.isValidElement(label) && React.createElement(FormLabel, {\n  htmlFor: id\n}, label), React.createElement(RadioGroup, {\n  onChange: (event, newValue) => safeChange(newValue, id, onChange, options),\n  value: `${value}`,\n  name: id,\n  id: id,\n  className: \"radio-group flex\",\n  style: radioGroupStyle || {\n    justifyContent: 'flex-start',\n    flexDirection: 'row'\n  }\n}, options.map(option => React.createElement(FormControlLabel, {\n  control: React.createElement(Radio, {\n    className: \"radio\"\n  }),\n  key: option.id || option,\n  value: `${option.id !== undefined ? option.id : option}`,\n  label: option.label || React.createElement(T, {\n    id: `${intlPrefix}.${option}`\n  }),\n  disabled: disabled\n}))));\n\nRadioButtons.propTypes = {\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  intlPrefix: PropTypes.string,\n  label: PropTypes.node,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  style: PropTypes.object,\n  value: PropTypes.any\n};\nRadioButtons.defaultProps = {\n  label: '',\n  style: {},\n  value: undefined,\n  intlPrefix: '',\n  disabled: false\n};\nmodule.exportDefault(RadioButtons);","map":{"version":3,"sources":["imports/core/components/RadioButtons.jsx"],"names":["React","safeChange","options","o","onChange","value","RadioButtons","disabled","radioGroupStyle","justifyContent","flexDirection","option","intlPrefix","PropTypes","id","label","style","any"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Radio, { RadioGroup } from 'core/components/Material/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport T from 'core/components/Translation';\n\nconst safeChange = (value, id, onChange, options) => {\n  // If all options are booleans, transform the onChange handler's value\n  // to booleans\n  if (options.every(o => typeof o === 'boolean' || typeof o.id === 'boolean')) {\n    return onChange(id, value === 'true');\n  }\n  return onChange(id, value);\n};\n\n// Cast value to strings, so that is plays nicely with material-ui,\n// in the onChange handler, convert back to boolean\nconst RadioButtons = ({\n  options,\n  onChange,\n  id,\n  intlPrefix,\n  value,\n  label,\n  style,\n  radioGroupStyle,\n  disabled,\n}) => (\n  <FormControl style={style} className=\"mui-radio-group\">\n    {React.isValidElement(label) && <FormLabel htmlFor={id}>{label}</FormLabel>}\n\n    <RadioGroup\n      onChange={(event, newValue) =>\n        safeChange(newValue, id, onChange, options)\n      }\n      value={`${value}`}\n      name={id}\n      id={id}\n      className=\"radio-group flex\"\n      style={\n        radioGroupStyle || {\n          justifyContent: 'flex-start',\n          flexDirection: 'row',\n        }\n      }\n    >\n      {options.map(option => (\n        <FormControlLabel\n          control={<Radio className=\"radio\" />}\n          key={option.id || option}\n          value={`${option.id !== undefined ? option.id : option}`}\n          label={option.label || <T id={`${intlPrefix}.${option}`} />}\n          disabled={disabled}\n        />\n      ))}\n    </RadioGroup>\n  </FormControl>\n);\n\nRadioButtons.propTypes = {\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  intlPrefix: PropTypes.string,\n  label: PropTypes.node,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  style: PropTypes.object,\n  value: PropTypes.any,\n};\n\nRadioButtons.defaultProps = {\n  label: '',\n  style: {},\n  value: undefined,\n  intlPrefix: '',\n  disabled: false,\n};\n\nexport default RadioButtons;\n"]},"sourceType":"script","hash":"9c82933e1d337c375d163837722732156ca33bb6"}
