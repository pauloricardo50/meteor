{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js"}},"code":"module.export({\n  default: () => AggregateFilters\n});\nlet sift;\nmodule.link(\"sift\", {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 1);\n\nfunction extractIdsFromArray(array, field) {\n  return (array || []).map(obj => _.isObject(obj) ? dot.pick(field, obj) : undefined).filter(v => !!v);\n}\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\n\n\nclass AggregateFilters {\n  constructor(collectionNode, metaFilters) {\n    this.collectionNode = collectionNode;\n    this.linker = collectionNode.linker;\n    this.metaFilters = metaFilters;\n    this.isVirtual = this.linker.isVirtual();\n    this.linkStorageField = this.linker.linkStorageField;\n  }\n\n  get parentObjects() {\n    return this.collectionNode.parent.results;\n  }\n\n  create() {\n    switch (this.linker.strategy) {\n      case 'one':\n        return this.createOne();\n\n      case 'one-meta':\n        return this.createOneMeta();\n\n      case 'many':\n        return this.createMany();\n\n      case 'many-meta':\n        return this.createManyMeta();\n\n      default:\n        throw new Meteor.Error(\"Invalid linker type: \".concat(this.linker.type));\n    }\n  }\n\n  createOne() {\n    if (!this.isVirtual) {\n      return {\n        _id: {\n          $in: _.uniq(extractIdsFromArray(this.parentObjects, this.linkStorageField))\n        }\n      };\n    } else {\n      return {\n        [this.linkStorageField]: {\n          $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n        }\n      };\n    }\n  }\n\n  createOneMeta() {\n    if (!this.isVirtual) {\n      let eligibleObjects = this.parentObjects;\n\n      if (this.metaFilters) {\n        eligibleObjects = _.filter(this.parentObjects, object => {\n          return sift(this.metaFilters)(object[this.linkStorageField]);\n        });\n      }\n\n      const storages = _.pluck(eligibleObjects, this.linkStorageField);\n\n      let ids = [];\n\n      _.each(storages, storage => {\n        if (storage) {\n          ids.push(storage._id);\n        }\n      });\n\n      return {\n        _id: {\n          $in: _.uniq(ids)\n        }\n      };\n    } else {\n      let filters = {};\n\n      if (this.metaFilters) {\n        _.each(this.metaFilters, (value, key) => {\n          filters[this.linkStorageField + '.' + key] = value;\n        });\n      }\n\n      filters[this.linkStorageField + '._id'] = {\n        $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n      };\n      return filters;\n    }\n  }\n\n  createMany() {\n    if (!this.isVirtual) {\n      const [root, ...nested] = this.linkStorageField.split('.');\n\n      const arrayOfIds = _.union(...extractIdsFromArray(this.parentObjects, root));\n\n      return {\n        _id: {\n          $in: _.uniq(nested.length > 0 ? extractIdsFromArray(arrayOfIds, nested.join('.')) : arrayOfIds)\n        }\n      };\n    } else {\n      const arrayOfIds = _.pluck(this.parentObjects, '_id');\n\n      return {\n        [this.linkStorageField]: {\n          $in: _.uniq(_.union(...arrayOfIds))\n        }\n      };\n    }\n  }\n\n  createManyMeta() {\n    if (!this.isVirtual) {\n      let ids = [];\n\n      _.each(this.parentObjects, object => {\n        if (object[this.linkStorageField]) {\n          if (this.metaFilters) {\n            const isValid = sift(this.metaFilters);\n\n            _.each(object[this.linkStorageField], object => {\n              if (isValid(object)) {\n                ids.push(object._id);\n              }\n            });\n          } else {\n            _.each(object[this.linkStorageField], object => {\n              ids.push(object._id);\n            });\n          }\n        }\n      });\n\n      return {\n        _id: {\n          $in: _.uniq(ids)\n        }\n      };\n    } else {\n      let filters = {};\n\n      if (this.metaFilters) {\n        _.each(this.metaFilters, (value, key) => {\n          filters[key] = value;\n        });\n      }\n\n      filters._id = {\n        $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n      };\n      return {\n        [this.linkStorageField]: {\n          $elemMatch: filters\n        }\n      };\n    }\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js"],"names":["module","export","default","AggregateFilters","sift","link","v","dot","extractIdsFromArray","array","field","map","obj","_","isObject","pick","undefined","filter","constructor","collectionNode","metaFilters","linker","isVirtual","linkStorageField","parentObjects","parent","results","create","strategy","createOne","createOneMeta","createMany","createManyMeta","Meteor","Error","type","_id","$in","uniq","pluck","eligibleObjects","object","storages","ids","each","storage","push","filters","value","key","root","nested","split","arrayOfIds","union","length","join","isValid","$elemMatch"],"mappings":"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","sourcesContent":["import sift from 'sift';\nimport dot from 'dot-object';\n\nfunction extractIdsFromArray(array, field) {\n    return (array || []).map(obj => _.isObject(obj) ? dot.pick(field, obj) : undefined).filter(v => !!v);\n}\n\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\nexport default class AggregateFilters {\n    constructor(collectionNode, metaFilters) {\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    get parentObjects() {\n        return this.collectionNode.parent.results;\n    }\n\n    create() {\n        switch (this.linker.strategy) {\n            case 'one':\n                return this.createOne();\n            case 'one-meta':\n                return this.createOneMeta();\n            case 'many':\n                return this.createMany();\n            case 'many-meta':\n                return this.createManyMeta();\n            default:\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n        }\n    }\n\n    createOne() {\n        if (!this.isVirtual) {\n            return {\n                _id: {\n                    $in: _.uniq(extractIdsFromArray(this.parentObjects, this.linkStorageField))\n                }\n            };\n        } else {\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, '_id')\n                    )\n                }\n            };\n        }\n    }\n\n    createOneMeta() {\n        if (!this.isVirtual) {\n            let eligibleObjects = this.parentObjects;\n\n            if (this.metaFilters) {\n                eligibleObjects = _.filter(this.parentObjects, object => {\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\n                });\n            }\n\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\n            let ids = [];\n            _.each(storages, storage => {\n                if (storage) {\n                    ids.push(storage._id);\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[this.linkStorageField + '.' + key] = value;\n                })\n            }\n\n            filters[this.linkStorageField + '._id'] = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return filters;\n        }\n    }\n\n    createMany() {\n        if (!this.isVirtual) {\n            const [root, ...nested] = this.linkStorageField.split('.');\n            const arrayOfIds = _.union(...extractIdsFromArray(this.parentObjects, root));\n            return {\n                _id: {\n                    $in: _.uniq(nested.length > 0 ? extractIdsFromArray(arrayOfIds, nested.join('.')) : arrayOfIds)\n                }\n            };\n        } else {\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        }\n    }\n\n    createManyMeta() {\n        if (!this.isVirtual) {\n            let ids = [];\n\n            _.each(this.parentObjects, object => {\n                if (object[this.linkStorageField]) {\n                    if (this.metaFilters) {\n                        const isValid = sift(this.metaFilters);\n                        _.each(object[this.linkStorageField], object => {\n                            if (isValid(object)) {\n                                ids.push(object._id);\n                            }\n                        });\n                    } else {\n                        _.each(object[this.linkStorageField], object => {\n                            ids.push(object._id);\n                        });\n                    }\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[key] = value;\n                })\n            }\n\n            filters._id = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return {\n                [this.linkStorageField]: {\n                    $elemMatch: filters\n                }\n            };\n        }\n    }\n}"]},"sourceType":"script","hash":"1a6facc15096c19b17c078953dd3105f66d91c3d"}
