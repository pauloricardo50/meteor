{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/mongo/allow-deny/validatedRemove.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/cultofcoders:redis-oplog/lib/mongo/allow-deny/validatedRemove.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/mongo/allow-deny/validatedRemove.js","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/mongo/allow-deny/validatedRemove.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:redis-oplog/lib/mongo/allow-deny/validatedRemove.js"}},"code":"module.export({\n  default: () => validatedRemove\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 1);\nlet transformDoc;\nmodule.link(\"./transformDoc\", {\n  default(v) {\n    transformDoc = v;\n  }\n\n}, 2);\n\nfunction validatedRemove(userId, selector) {\n  const findOptions = {\n    transform: null\n  };\n\n  if (!this._validators.fetchAllFields) {\n    findOptions.fields = {};\n\n    _.each(this._validators.fetch, fieldName => {\n      findOptions.fields[fieldName] = 1;\n    });\n  }\n\n  const doc = this._collection.findOne(selector, findOptions);\n\n  if (!doc) {\n    return 0;\n  } // call user validators.\n  // Any deny returns true means denied.\n\n\n  if (_.any(this._validators.remove.deny, validator => validator(userId, transformDoc(validator, doc)))) {\n    throw new Meteor.Error(403, 'Access denied');\n  } // Any allow returns true means proceed. Throw error if they all fail.\n\n\n  if (_.all(this._validators.remove.allow, validator => !validator(userId, transformDoc(validator, doc)))) {\n    throw new Meteor.Error(403, 'Access denied');\n  } // Back when we supported arbitrary client-provided selectors, we actually\n  // rewrote the selector to {_id: {$in: [ids that we found]}} before passing to\n  // Mongo to avoid races, but since selector is guaranteed to already just be\n  // an ID, we don't have to any more.\n\n\n  return this.remove(selector, {\n    optimistic: true\n  });\n}","map":{"version":3,"sources":["packages/cultofcoders:redis-oplog/lib/mongo/allow-deny/validatedRemove.js"],"names":["module","export","default","validatedRemove","Meteor","link","v","_","transformDoc","userId","selector","findOptions","transform","_validators","fetchAllFields","fields","each","fetch","fieldName","doc","_collection","findOne","any","remove","deny","validator","Error","all","allow","optimistic"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIC;AAAb,CAAd;AAA6C,IAAIC,MAAJ;AAAWJ,MAAM,CAACK,IAAP,CAAY,eAAZ,EAA4B;AAACD,EAAAA,MAAM,CAACE,CAAD,EAAG;AAACF,IAAAA,MAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;;AAAqD,IAAIC,CAAJ;;AAAMP,MAAM,CAACK,IAAP,CAAY,mBAAZ,EAAgC;AAACE,EAAAA,CAAC,CAACD,CAAD,EAAG;AAACC,IAAAA,CAAC,GAACD,CAAF;AAAI;;AAAV,CAAhC,EAA4C,CAA5C;AAA+C,IAAIE,YAAJ;AAAiBR,MAAM,CAACK,IAAP,CAAY,gBAAZ,EAA6B;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACE,IAAAA,YAAY,GAACF,CAAb;AAAe;;AAA3B,CAA7B,EAA0D,CAA1D;;AAKpK,SAASH,eAAT,CAAyBM,MAAzB,EAAiCC,QAAjC,EAA2C;AACtD,QAAMC,WAAW,GAAG;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAApB;;AACA,MAAI,CAAC,KAAKC,WAAL,CAAiBC,cAAtB,EAAsC;AAClCH,IAAAA,WAAW,CAACI,MAAZ,GAAqB,EAArB;;AACAR,IAAAA,CAAC,CAACS,IAAF,CAAO,KAAKH,WAAL,CAAiBI,KAAxB,EAA+BC,SAAS,IAAI;AACxCP,MAAAA,WAAW,CAACI,MAAZ,CAAmBG,SAAnB,IAAgC,CAAhC;AACH,KAFD;AAGH;;AAED,QAAMC,GAAG,GAAG,KAAKC,WAAL,CAAiBC,OAAjB,CAAyBX,QAAzB,EAAmCC,WAAnC,CAAZ;;AACA,MAAI,CAACQ,GAAL,EAAU;AACN,WAAO,CAAP;AACH,GAZqD,CActD;AACA;;;AACA,MAAIZ,CAAC,CAACe,GAAF,CAAM,KAAKT,WAAL,CAAiBU,MAAjB,CAAwBC,IAA9B,EAAoCC,SAAS,IACzCA,SAAS,CAAChB,MAAD,EAASD,YAAY,CAACiB,SAAD,EAAYN,GAAZ,CAArB,CADb,CAAJ,EAC0D;AACtD,UAAM,IAAIf,MAAM,CAACsB,KAAX,CAAiB,GAAjB,EAAsB,eAAtB,CAAN;AACH,GAnBqD,CAoBtD;;;AACA,MAAInB,CAAC,CAACoB,GAAF,CAAM,KAAKd,WAAL,CAAiBU,MAAjB,CAAwBK,KAA9B,EAAqCH,SAAS,IAC1C,CAACA,SAAS,CAAChB,MAAD,EAASD,YAAY,CAACiB,SAAD,EAAYN,GAAZ,CAArB,CADd,CAAJ,EAC2D;AACvD,UAAM,IAAIf,MAAM,CAACsB,KAAX,CAAiB,GAAjB,EAAsB,eAAtB,CAAN;AACH,GAxBqD,CA0BtD;AACA;AACA;AACA;;;AACA,SAAO,KAAKH,MAAL,CAAYb,QAAZ,EAAsB;AAACmB,IAAAA,UAAU,EAAE;AAAb,GAAtB,CAAP;AACH","sourcesContent":["/* eslint no-param-reassign: 0 no-underscore-dangle: 0 */\nimport {Meteor} from 'meteor/meteor'\nimport {_} from 'meteor/underscore'\nimport transformDoc from './transformDoc'\n\nexport default function validatedRemove(userId, selector) {\n    const findOptions = {transform: null}\n    if (!this._validators.fetchAllFields) {\n        findOptions.fields = {}\n        _.each(this._validators.fetch, fieldName => {\n            findOptions.fields[fieldName] = 1\n        })\n    }\n\n    const doc = this._collection.findOne(selector, findOptions)\n    if (!doc) {\n        return 0\n    }\n\n    // call user validators.\n    // Any deny returns true means denied.\n    if (_.any(this._validators.remove.deny, validator =>\n            validator(userId, transformDoc(validator, doc)))) {\n        throw new Meteor.Error(403, 'Access denied')\n    }\n    // Any allow returns true means proceed. Throw error if they all fail.\n    if (_.all(this._validators.remove.allow, validator =>\n            !validator(userId, transformDoc(validator, doc)))) {\n        throw new Meteor.Error(403, 'Access denied')\n    }\n\n    // Back when we supported arbitrary client-provided selectors, we actually\n    // rewrote the selector to {_id: {$in: [ids that we found]}} before passing to\n    // Mongo to avoid races, but since selector is guaranteed to already just be\n    // an ID, we don't have to any more.\n    return this.remove(selector, {optimistic: true})\n}\n"]},"sourceType":"script","hash":"154c7d60bee3505fb81eed8b463eb4fd279727a6"}
