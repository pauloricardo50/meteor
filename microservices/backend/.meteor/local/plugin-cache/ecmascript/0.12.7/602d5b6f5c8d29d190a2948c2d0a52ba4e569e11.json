{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/rate-limit.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/utils/rate-limit.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/rate-limit.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/rate-limit.js"],"names":["Meteor","DDPRateLimiter","Match","check","map","zipObject","SecurityService","isServer","setErrorMessage","timeToReset","time","Math","ceil","seconds","shouldRateLimit","testRateLimit","isAppTest","rateLimitedMethods","defaultLimit","defaultTimeRange","defaultRateLimit","global","limit","timeRange","dev","roleLimiterCheckPattern","Optional","ObjectIncluding","Number","rateLimitCheckPattern","limitRoles","methodLimiterRule","name","role","userId","hasRole","length","type","getRateLimitedMethods","setMethodLimiter","rateLimit","currentRateLimit","Object","keys","forEach","addRule","push"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { Match, check } from 'meteor/check';\nimport map from 'lodash/map';\nimport zipObject from 'lodash/zipObject';\nimport SecurityService from '../api/security/Security';\n\nif (Meteor.isServer) {\n  DDPRateLimiter.setErrorMessage(({ timeToReset }) => {\n    const time = Math.ceil(timeToReset / 1000);\n    const seconds = time === 1 ? 'seconde' : 'secondes';\n    return `Doucement, tu peux reessayer dans ${time} ${seconds}.`;\n  });\n}\n\nconst shouldRateLimit = testRateLimit =>\n  Meteor.isServer && (!Meteor.isAppTest || testRateLimit);\n\nconst rateLimitedMethods = [];\n\nconst defaultLimit = 5;\nconst defaultTimeRange = 1000;\n\nconst defaultRateLimit = {\n  global: {\n    limit: defaultLimit,\n    timeRange: defaultTimeRange,\n  },\n  dev: {\n    limit: 300,\n    timeRange: defaultTimeRange,\n  },\n};\n\nconst roleLimiterCheckPattern = Match.Optional(Match.ObjectIncluding({\n  limit: Match.Optional(Number),\n  timeRange: Match.Optional(Number),\n}));\n\nconst rateLimitCheckPattern = limitRoles =>\n  Match.ObjectIncluding(zipObject(limitRoles, map(limitRoles, () => roleLimiterCheckPattern)));\n\nconst methodLimiterRule = ({ name, limitRoles = [], role = 'global' }) => ({\n  userId: (userId) => {\n    if (userId) {\n      if (role !== 'global') {\n        return SecurityService.hasRole(userId, role);\n      }\n      if (limitRoles.length > 1) {\n        return !SecurityService.hasRole(userId, limitRoles);\n      }\n    }\n    return true;\n  },\n  type: 'method',\n  name,\n});\n\nexport const getRateLimitedMethods = () => rateLimitedMethods;\n\nexport const setMethodLimiter = ({ name, rateLimit = {}, testRateLimit }) => {\n  if (shouldRateLimit(testRateLimit)) {\n    const currentRateLimit = { ...defaultRateLimit, ...rateLimit };\n    const limitRoles = Object.keys(currentRateLimit);\n\n    check(currentRateLimit, rateLimitCheckPattern(limitRoles));\n\n    limitRoles.forEach((role) => {\n      const {\n        limit = defaultLimit,\n        timeRange = defaultTimeRange,\n      } = currentRateLimit[role];\n\n      DDPRateLimiter.addRule(\n        methodLimiterRule({\n          name,\n          role,\n          limitRoles,\n        }),\n        limit,\n        timeRange,\n      );\n    });\n\n    rateLimitedMethods.push(name);\n  }\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/rate-limit.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/rate-limit.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  getRateLimitedMethods: () => getRateLimitedMethods,\n  setMethodLimiter: () => setMethodLimiter\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet DDPRateLimiter;\nmodule.link(\"meteor/ddp-rate-limiter\", {\n  DDPRateLimiter(v) {\n    DDPRateLimiter = v;\n  }\n\n}, 1);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nlet map;\nmodule.link(\"lodash/map\", {\n  default(v) {\n    map = v;\n  }\n\n}, 3);\nlet zipObject;\nmodule.link(\"lodash/zipObject\", {\n  default(v) {\n    zipObject = v;\n  }\n\n}, 4);\nlet SecurityService;\nmodule.link(\"../api/security/Security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 5);\n\nif (Meteor.isServer) {\n  DDPRateLimiter.setErrorMessage(({\n    timeToReset\n  }) => {\n    const time = Math.ceil(timeToReset / 1000);\n    const seconds = time === 1 ? 'seconde' : 'secondes';\n    return `Doucement, tu peux reessayer dans ${time} ${seconds}.`;\n  });\n}\n\nconst shouldRateLimit = testRateLimit => Meteor.isServer && (!Meteor.isAppTest || testRateLimit);\n\nconst rateLimitedMethods = [];\nconst defaultLimit = 5;\nconst defaultTimeRange = 1000;\nconst defaultRateLimit = {\n  global: {\n    limit: defaultLimit,\n    timeRange: defaultTimeRange\n  },\n  dev: {\n    limit: 300,\n    timeRange: defaultTimeRange\n  }\n};\nconst roleLimiterCheckPattern = Match.Optional(Match.ObjectIncluding({\n  limit: Match.Optional(Number),\n  timeRange: Match.Optional(Number)\n}));\n\nconst rateLimitCheckPattern = limitRoles => Match.ObjectIncluding(zipObject(limitRoles, map(limitRoles, () => roleLimiterCheckPattern)));\n\nconst methodLimiterRule = ({\n  name,\n  limitRoles = [],\n  role = 'global'\n}) => ({\n  userId: userId => {\n    if (userId) {\n      if (role !== 'global') {\n        return SecurityService.hasRole(userId, role);\n      }\n\n      if (limitRoles.length > 1) {\n        return !SecurityService.hasRole(userId, limitRoles);\n      }\n    }\n\n    return true;\n  },\n  type: 'method',\n  name\n});\n\nconst getRateLimitedMethods = () => rateLimitedMethods;\n\nconst setMethodLimiter = ({\n  name,\n  rateLimit = {},\n  testRateLimit\n}) => {\n  if (shouldRateLimit(testRateLimit)) {\n    const currentRateLimit = (0, _objectSpread2.default)({}, defaultRateLimit, rateLimit);\n    const limitRoles = Object.keys(currentRateLimit);\n    check(currentRateLimit, rateLimitCheckPattern(limitRoles));\n    limitRoles.forEach(role => {\n      const {\n        limit = defaultLimit,\n        timeRange = defaultTimeRange\n      } = currentRateLimit[role];\n      DDPRateLimiter.addRule(methodLimiterRule({\n        name,\n        role,\n        limitRoles\n      }), limit, timeRange);\n    });\n    rateLimitedMethods.push(name);\n  }\n};","map":{"version":3,"sources":["imports/core/utils/rate-limit.js"],"names":["Meteor","DDPRateLimiter","timeToReset","time","Math","seconds","shouldRateLimit","testRateLimit","rateLimitedMethods","defaultLimit","defaultTimeRange","defaultRateLimit","global","limit","timeRange","dev","roleLimiterCheckPattern","Match","rateLimitCheckPattern","limitRoles","zipObject","map","methodLimiterRule","role","userId","SecurityService","type","name","getRateLimitedMethods","setMethodLimiter","rateLimit","currentRateLimit","Object","check"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { Match, check } from 'meteor/check';\nimport map from 'lodash/map';\nimport zipObject from 'lodash/zipObject';\nimport SecurityService from '../api/security/Security';\n\nif (Meteor.isServer) {\n  DDPRateLimiter.setErrorMessage(({ timeToReset }) => {\n    const time = Math.ceil(timeToReset / 1000);\n    const seconds = time === 1 ? 'seconde' : 'secondes';\n    return `Doucement, tu peux reessayer dans ${time} ${seconds}.`;\n  });\n}\n\nconst shouldRateLimit = testRateLimit =>\n  Meteor.isServer && (!Meteor.isAppTest || testRateLimit);\n\nconst rateLimitedMethods = [];\n\nconst defaultLimit = 5;\nconst defaultTimeRange = 1000;\n\nconst defaultRateLimit = {\n  global: {\n    limit: defaultLimit,\n    timeRange: defaultTimeRange,\n  },\n  dev: {\n    limit: 300,\n    timeRange: defaultTimeRange,\n  },\n};\n\nconst roleLimiterCheckPattern = Match.Optional(Match.ObjectIncluding({\n  limit: Match.Optional(Number),\n  timeRange: Match.Optional(Number),\n}));\n\nconst rateLimitCheckPattern = limitRoles =>\n  Match.ObjectIncluding(zipObject(limitRoles, map(limitRoles, () => roleLimiterCheckPattern)));\n\nconst methodLimiterRule = ({ name, limitRoles = [], role = 'global' }) => ({\n  userId: (userId) => {\n    if (userId) {\n      if (role !== 'global') {\n        return SecurityService.hasRole(userId, role);\n      }\n      if (limitRoles.length > 1) {\n        return !SecurityService.hasRole(userId, limitRoles);\n      }\n    }\n    return true;\n  },\n  type: 'method',\n  name,\n});\n\nexport const getRateLimitedMethods = () => rateLimitedMethods;\n\nexport const setMethodLimiter = ({ name, rateLimit = {}, testRateLimit }) => {\n  if (shouldRateLimit(testRateLimit)) {\n    const currentRateLimit = { ...defaultRateLimit, ...rateLimit };\n    const limitRoles = Object.keys(currentRateLimit);\n\n    check(currentRateLimit, rateLimitCheckPattern(limitRoles));\n\n    limitRoles.forEach((role) => {\n      const {\n        limit = defaultLimit,\n        timeRange = defaultTimeRange,\n      } = currentRateLimit[role];\n\n      DDPRateLimiter.addRule(\n        methodLimiterRule({\n          name,\n          role,\n          limitRoles,\n        }),\n        limit,\n        timeRange,\n      );\n    });\n\n    rateLimitedMethods.push(name);\n  }\n};\n"]},"sourceType":"script","hash":"602d5b6f5c8d29d190a2948c2d0a52ba4e569e11"}
