{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/tasks/server/TaskService.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/tasks/server/TaskService.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/tasks/server/TaskService.js","inputSourceMap":{"version":3,"sources":["imports/core/api/tasks/server/TaskService.js"],"names":["Mongo","moment","LOANS_COLLECTION","USERS_COLLECTION","CollectionService","TASK_STATUS","Tasks","PROMOTIONS_COLLECTION","ORGANISATIONS_COLLECTION","LENDERS_COLLECTION","TaskService","constructor","object","collection","dueAt","dueAtTime","docId","assigneeLink","rest","assignee","_id","getAssigneeForDoc","taskId","insert","getDueDate","addLink","id","linkName","linkId","remove","update","$set","findOne","find","fetch","hours","minutes","split","date","undefined","hour","minute","seconds","milliseconds","toDate","isAfter","add","status","COMPLETED","completedAt","Date","newStatus","newAssigneeId","doc","Collection","get","createQuery","$filters","fetchOne"],"mappings":"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","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nimport moment from 'moment';\n\nimport { LOANS_COLLECTION, USERS_COLLECTION } from '../../constants';\nimport CollectionService from '../../helpers/CollectionService';\nimport { TASK_STATUS } from '../taskConstants';\nimport Tasks from '../tasks';\nimport { PROMOTIONS_COLLECTION } from '../../promotions/promotionConstants';\nimport { ORGANISATIONS_COLLECTION } from '../../organisations/organisationConstants';\nimport { LENDERS_COLLECTION } from '../../lenders/lenderConstants';\n\nclass TaskService extends CollectionService {\n  constructor() {\n    super(Tasks);\n  }\n\n  insert = ({\n    object: { collection, dueAt, dueAtTime, docId, assigneeLink = {}, ...rest },\n  }) => {\n    let assignee = assigneeLink._id;\n    if (!assignee && docId && collection) {\n      assignee = this.getAssigneeForDoc(docId, collection);\n    }\n\n    const taskId = Tasks.insert({\n      dueAt: this.getDueDate({ dueAt, dueAtTime }),\n      ...rest,\n    });\n\n    if (collection === LOANS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'loan', linkId: docId });\n    }\n    if (collection === USERS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'user', linkId: docId });\n    }\n    if (collection === PROMOTIONS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'promotion', linkId: docId });\n    }\n    if (collection === ORGANISATIONS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'organisation', linkId: docId });\n    }\n    if (collection === LENDERS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'lender', linkId: docId });\n    }\n\n    if (assignee) {\n      this.addLink({\n        id: taskId,\n        linkName: 'assignee',\n        linkId: assignee,\n      });\n    }\n\n    return taskId;\n  };\n\n  remove = ({ taskId }) => Tasks.remove(taskId);\n\n  update = ({ taskId, object }) => Tasks.update(taskId, { $set: object });\n\n  getTaskById = taskId => Tasks.findOne(taskId);\n\n  getTasksForDoc = docId => Tasks.find({ docId }).fetch();\n\n  getDueDate = ({ dueAt, dueAtTime }) => {\n    if (dueAt && !dueAtTime) {\n      return dueAt;\n    }\n\n    if (dueAtTime) {\n      const [hours = 0, minutes = 0] = dueAtTime.split(':');\n      const date = moment(dueAt || undefined)\n        .hour(hours)\n        .minute(minutes)\n        .seconds(0)\n        .milliseconds(0);\n\n      if (dueAt) {\n        return date.toDate();\n      }\n\n      if (moment().isAfter(date)) {\n        // If it is 14:00, and you choose 10:00 as the time, you don't want it\n        // in the past, but tomorrow\n        date.add(1, 'd');\n      }\n      return date.toDate();\n    }\n  };\n\n  complete = ({ taskId }) =>\n    this.update({\n      taskId,\n      object: { status: TASK_STATUS.COMPLETED, completedAt: new Date() },\n    });\n\n  changeStatus = ({ taskId, newStatus }) =>\n    this.update({\n      taskId,\n      object: {\n        status: newStatus,\n        completedAt:\n          newStatus === TASK_STATUS.COMPLETED ? new Date() : undefined,\n      },\n    });\n\n  changeAssignedTo = ({ taskId, newAssigneeId }) => {\n    this.addLink({ id: taskId, linkName: 'assignee', linkId: newAssigneeId });\n  };\n\n  getAssigneeForDoc = (docId, collection) => {\n    const doc = Mongo.Collection.get(collection)\n      .createQuery({ $filters: { _id: docId }, assignee: 1 })\n      .fetchOne();\n\n    return doc && doc.assignee ? doc.assignee._id : null;\n  };\n}\n\nexport default new TaskService();\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/tasks/server/TaskService.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/tasks/server/TaskService.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet LOANS_COLLECTION, USERS_COLLECTION;\nmodule.link(\"../../constants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  },\n\n  USERS_COLLECTION(v) {\n    USERS_COLLECTION = v;\n  }\n\n}, 2);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 3);\nlet TASK_STATUS;\nmodule.link(\"../taskConstants\", {\n  TASK_STATUS(v) {\n    TASK_STATUS = v;\n  }\n\n}, 4);\nlet Tasks;\nmodule.link(\"../tasks\", {\n  default(v) {\n    Tasks = v;\n  }\n\n}, 5);\nlet PROMOTIONS_COLLECTION;\nmodule.link(\"../../promotions/promotionConstants\", {\n  PROMOTIONS_COLLECTION(v) {\n    PROMOTIONS_COLLECTION = v;\n  }\n\n}, 6);\nlet ORGANISATIONS_COLLECTION;\nmodule.link(\"../../organisations/organisationConstants\", {\n  ORGANISATIONS_COLLECTION(v) {\n    ORGANISATIONS_COLLECTION = v;\n  }\n\n}, 7);\nlet LENDERS_COLLECTION;\nmodule.link(\"../../lenders/lenderConstants\", {\n  LENDERS_COLLECTION(v) {\n    LENDERS_COLLECTION = v;\n  }\n\n}, 8);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass TaskService extends CollectionService {\n  constructor() {\n    super(Tasks);\n\n    _defineProperty(this, \"insert\", (_ref) => {\n      let {\n        object: {\n          collection,\n          dueAt,\n          dueAtTime,\n          docId,\n          assigneeLink = {}\n        }\n      } = _ref,\n          rest = (0, _objectWithoutProperties2.default)(_ref.object, [\"collection\", \"dueAt\", \"dueAtTime\", \"docId\", \"assigneeLink\"]);\n      let assignee = assigneeLink._id;\n\n      if (!assignee && docId && collection) {\n        assignee = this.getAssigneeForDoc(docId, collection);\n      }\n\n      const taskId = Tasks.insert((0, _objectSpread2.default)({\n        dueAt: this.getDueDate({\n          dueAt,\n          dueAtTime\n        })\n      }, rest));\n\n      if (collection === LOANS_COLLECTION) {\n        this.addLink({\n          id: taskId,\n          linkName: 'loan',\n          linkId: docId\n        });\n      }\n\n      if (collection === USERS_COLLECTION) {\n        this.addLink({\n          id: taskId,\n          linkName: 'user',\n          linkId: docId\n        });\n      }\n\n      if (collection === PROMOTIONS_COLLECTION) {\n        this.addLink({\n          id: taskId,\n          linkName: 'promotion',\n          linkId: docId\n        });\n      }\n\n      if (collection === ORGANISATIONS_COLLECTION) {\n        this.addLink({\n          id: taskId,\n          linkName: 'organisation',\n          linkId: docId\n        });\n      }\n\n      if (collection === LENDERS_COLLECTION) {\n        this.addLink({\n          id: taskId,\n          linkName: 'lender',\n          linkId: docId\n        });\n      }\n\n      if (assignee) {\n        this.addLink({\n          id: taskId,\n          linkName: 'assignee',\n          linkId: assignee\n        });\n      }\n\n      return taskId;\n    });\n\n    _defineProperty(this, \"remove\", ({\n      taskId\n    }) => Tasks.remove(taskId));\n\n    _defineProperty(this, \"update\", ({\n      taskId,\n      object\n    }) => Tasks.update(taskId, {\n      $set: object\n    }));\n\n    _defineProperty(this, \"getTaskById\", taskId => Tasks.findOne(taskId));\n\n    _defineProperty(this, \"getTasksForDoc\", docId => Tasks.find({\n      docId\n    }).fetch());\n\n    _defineProperty(this, \"getDueDate\", ({\n      dueAt,\n      dueAtTime\n    }) => {\n      if (dueAt && !dueAtTime) {\n        return dueAt;\n      }\n\n      if (dueAtTime) {\n        const [hours = 0, minutes = 0] = dueAtTime.split(':');\n        const date = moment(dueAt || undefined).hour(hours).minute(minutes).seconds(0).milliseconds(0);\n\n        if (dueAt) {\n          return date.toDate();\n        }\n\n        if (moment().isAfter(date)) {\n          // If it is 14:00, and you choose 10:00 as the time, you don't want it\n          // in the past, but tomorrow\n          date.add(1, 'd');\n        }\n\n        return date.toDate();\n      }\n    });\n\n    _defineProperty(this, \"complete\", ({\n      taskId\n    }) => this.update({\n      taskId,\n      object: {\n        status: TASK_STATUS.COMPLETED,\n        completedAt: new Date()\n      }\n    }));\n\n    _defineProperty(this, \"changeStatus\", ({\n      taskId,\n      newStatus\n    }) => this.update({\n      taskId,\n      object: {\n        status: newStatus,\n        completedAt: newStatus === TASK_STATUS.COMPLETED ? new Date() : undefined\n      }\n    }));\n\n    _defineProperty(this, \"changeAssignedTo\", ({\n      taskId,\n      newAssigneeId\n    }) => {\n      this.addLink({\n        id: taskId,\n        linkName: 'assignee',\n        linkId: newAssigneeId\n      });\n    });\n\n    _defineProperty(this, \"getAssigneeForDoc\", (docId, collection) => {\n      const doc = Mongo.Collection.get(collection).createQuery({\n        $filters: {\n          _id: docId\n        },\n        assignee: 1\n      }).fetchOne();\n      return doc && doc.assignee ? doc.assignee._id : null;\n    });\n  }\n\n}\n\nmodule.exportDefault(new TaskService());","map":{"version":3,"sources":["imports/core/api/tasks/server/TaskService.js"],"names":["constructor","object","assigneeLink","rest","assignee","taskId","dueAt","dueAtTime","collection","id","linkName","linkId","docId","Tasks","$set","hours","minutes","date","moment","status","TASK_STATUS","completedAt","newStatus","undefined","newAssigneeId","doc","$filters","_id"],"mappings":"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","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nimport moment from 'moment';\n\nimport { LOANS_COLLECTION, USERS_COLLECTION } from '../../constants';\nimport CollectionService from '../../helpers/CollectionService';\nimport { TASK_STATUS } from '../taskConstants';\nimport Tasks from '../tasks';\nimport { PROMOTIONS_COLLECTION } from '../../promotions/promotionConstants';\nimport { ORGANISATIONS_COLLECTION } from '../../organisations/organisationConstants';\nimport { LENDERS_COLLECTION } from '../../lenders/lenderConstants';\n\nclass TaskService extends CollectionService {\n  constructor() {\n    super(Tasks);\n  }\n\n  insert = ({\n    object: { collection, dueAt, dueAtTime, docId, assigneeLink = {}, ...rest },\n  }) => {\n    let assignee = assigneeLink._id;\n    if (!assignee && docId && collection) {\n      assignee = this.getAssigneeForDoc(docId, collection);\n    }\n\n    const taskId = Tasks.insert({\n      dueAt: this.getDueDate({ dueAt, dueAtTime }),\n      ...rest,\n    });\n\n    if (collection === LOANS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'loan', linkId: docId });\n    }\n    if (collection === USERS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'user', linkId: docId });\n    }\n    if (collection === PROMOTIONS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'promotion', linkId: docId });\n    }\n    if (collection === ORGANISATIONS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'organisation', linkId: docId });\n    }\n    if (collection === LENDERS_COLLECTION) {\n      this.addLink({ id: taskId, linkName: 'lender', linkId: docId });\n    }\n\n    if (assignee) {\n      this.addLink({\n        id: taskId,\n        linkName: 'assignee',\n        linkId: assignee,\n      });\n    }\n\n    return taskId;\n  };\n\n  remove = ({ taskId }) => Tasks.remove(taskId);\n\n  update = ({ taskId, object }) => Tasks.update(taskId, { $set: object });\n\n  getTaskById = taskId => Tasks.findOne(taskId);\n\n  getTasksForDoc = docId => Tasks.find({ docId }).fetch();\n\n  getDueDate = ({ dueAt, dueAtTime }) => {\n    if (dueAt && !dueAtTime) {\n      return dueAt;\n    }\n\n    if (dueAtTime) {\n      const [hours = 0, minutes = 0] = dueAtTime.split(':');\n      const date = moment(dueAt || undefined)\n        .hour(hours)\n        .minute(minutes)\n        .seconds(0)\n        .milliseconds(0);\n\n      if (dueAt) {\n        return date.toDate();\n      }\n\n      if (moment().isAfter(date)) {\n        // If it is 14:00, and you choose 10:00 as the time, you don't want it\n        // in the past, but tomorrow\n        date.add(1, 'd');\n      }\n      return date.toDate();\n    }\n  };\n\n  complete = ({ taskId }) =>\n    this.update({\n      taskId,\n      object: { status: TASK_STATUS.COMPLETED, completedAt: new Date() },\n    });\n\n  changeStatus = ({ taskId, newStatus }) =>\n    this.update({\n      taskId,\n      object: {\n        status: newStatus,\n        completedAt:\n          newStatus === TASK_STATUS.COMPLETED ? new Date() : undefined,\n      },\n    });\n\n  changeAssignedTo = ({ taskId, newAssigneeId }) => {\n    this.addLink({ id: taskId, linkName: 'assignee', linkId: newAssigneeId });\n  };\n\n  getAssigneeForDoc = (docId, collection) => {\n    const doc = Mongo.Collection.get(collection)\n      .createQuery({ $filters: { _id: docId }, assignee: 1 })\n      .fetchOne();\n\n    return doc && doc.assignee ? doc.assignee._id : null;\n  };\n}\n\nexport default new TaskService();\n"]},"sourceType":"script","hash":"bc1d2bf91d942851f1d5c15cac5da45a69481f5d"}
