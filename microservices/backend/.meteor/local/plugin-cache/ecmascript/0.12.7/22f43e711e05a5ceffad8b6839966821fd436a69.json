{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/IconLink/CollectionIconLinkPopup/queries.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/IconLink/CollectionIconLinkPopup/queries.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/IconLink/CollectionIconLinkPopup/queries.js","inputSourceMap":{"version":3,"sources":["imports/core/components/IconLink/CollectionIconLinkPopup/queries.js"],"names":["adminLoans","adminUsers","adminBorrowers","adminProperties","adminOffers","proPromotions","adminOrganisations","adminContacts","LOANS_COLLECTION","USERS_COLLECTION","BORROWERS_COLLECTION","PROPERTIES_COLLECTION","OFFERS_COLLECTION","PROMOTIONS_COLLECTION","ORGANISATIONS_COLLECTION","CONTACTS_COLLECTION","makeQuery","query","params","cb","clone","fetchOne","_id","$body","anonymous","borrowers","name","selectedStructure","status","structures","wantedLoan","id","user","assignedEmployee","$filter","email","loans","phoneNumber","roles","referredByUser","referredByOrganisation","emails","address1","category","documents","propertyImages","totalValue","feedback","lender","organisation","logo","loan","maxAmount","availablePromotionLots","bookedPromotionLots","promotionImage","lenderOrganisation","soldPromotionLots","type","offerCount","organisations"],"mappings":"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","sourcesContent":["import { adminLoans } from 'core/api/loans/queries';\nimport { adminUsers } from 'core/api/users/queries';\nimport { adminBorrowers } from 'core/api/borrowers/queries';\nimport { adminProperties } from 'core/api/properties/queries';\nimport { adminOffers } from 'core/api/offers/queries';\nimport { proPromotions } from 'core/api/promotions/queries';\nimport { adminOrganisations } from 'core/api/organisations/queries';\nimport { adminContacts } from 'core/api/contacts/queries';\nimport {\n  LOANS_COLLECTION,\n  USERS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n  OFFERS_COLLECTION,\n  PROMOTIONS_COLLECTION,\n  ORGANISATIONS_COLLECTION,\n  CONTACTS_COLLECTION,\n} from '../../../api/constants';\n\nconst makeQuery = (query, params, cb) => query.clone(params).fetchOne(cb);\n\nexport default {\n  [LOANS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminLoans,\n      {\n        _id,\n        $body: {\n          anonymous: true,\n          borrowers: { name: 1 },\n          name: 1,\n          selectedStructure: 1,\n          status: 1,\n          structures: { wantedLoan: 1, id: 1 },\n          user: { name: 1, assignedEmployee: { name: 1 } },\n        },\n      },\n      cb,\n    ),\n  [USERS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminUsers,\n      {\n        _id,\n        $body: {\n          $filter: 1,\n          assignedEmployee: { name: 1 },\n          email: 1,\n          loans: { name: 1 },\n          name: 1,\n          phoneNumber: 1,\n          roles: 1,\n          referredByUser: { name: 1 },\n          referredByOrganisation: { name: 1 },\n          emails: 1,\n        },\n      },\n      cb,\n    ),\n  [BORROWERS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminBorrowers,\n      {\n        _id,\n        $body: {\n          loans: { name: 1 },\n          name: 1,\n          user: { name: 1, assignedEmployee: { name: 1 } },\n        },\n      },\n      cb,\n    ),\n  [PROPERTIES_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminProperties,\n      {\n        _id,\n        $body: {\n          address1: 1,\n          category: 1,\n          documents: { propertyImages: 1 },\n          name: 1,\n          status: 1,\n          totalValue: 1,\n        },\n      },\n      cb,\n    ),\n  [OFFERS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminOffers,\n      {\n        _id,\n        $body: {\n          feedback: 1,\n          lender: { organisation: { name: 1, logo: 1 }, loan: { name: 1 } },\n          maxAmount: 1,\n        },\n      },\n      cb,\n    ),\n  [PROMOTIONS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      proPromotions,\n      {\n        _id,\n        $body: {\n          availablePromotionLots: 1,\n          bookedPromotionLots: 1,\n          documents: { promotionImage: 1 },\n          lenderOrganisation: { name: 1 },\n          name: 1,\n          soldPromotionLots: 1,\n          status: 1,\n        },\n      },\n      cb,\n    ),\n  [ORGANISATIONS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminOrganisations,\n      {\n        _id,\n        $body: { name: 1, logo: 1, type: 1, offerCount: 1 },\n      },\n      cb,\n    ),\n  [CONTACTS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminContacts,\n      {\n        _id,\n        $body: {\n          email: 1,\n          name: 1,\n          organisations: { name: 1, logo: 1 },\n          phoneNumber: 1,\n        },\n      },\n      cb,\n    ),\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/IconLink/CollectionIconLinkPopup/queries.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/IconLink/CollectionIconLinkPopup/queries.js"}},"code":"let adminLoans;\nmodule.link(\"../../../api/loans/queries\", {\n  adminLoans(v) {\n    adminLoans = v;\n  }\n\n}, 0);\nlet adminUsers;\nmodule.link(\"../../../api/users/queries\", {\n  adminUsers(v) {\n    adminUsers = v;\n  }\n\n}, 1);\nlet adminBorrowers;\nmodule.link(\"../../../api/borrowers/queries\", {\n  adminBorrowers(v) {\n    adminBorrowers = v;\n  }\n\n}, 2);\nlet adminProperties;\nmodule.link(\"../../../api/properties/queries\", {\n  adminProperties(v) {\n    adminProperties = v;\n  }\n\n}, 3);\nlet adminOffers;\nmodule.link(\"../../../api/offers/queries\", {\n  adminOffers(v) {\n    adminOffers = v;\n  }\n\n}, 4);\nlet proPromotions;\nmodule.link(\"../../../api/promotions/queries\", {\n  proPromotions(v) {\n    proPromotions = v;\n  }\n\n}, 5);\nlet adminOrganisations;\nmodule.link(\"../../../api/organisations/queries\", {\n  adminOrganisations(v) {\n    adminOrganisations = v;\n  }\n\n}, 6);\nlet adminContacts;\nmodule.link(\"../../../api/contacts/queries\", {\n  adminContacts(v) {\n    adminContacts = v;\n  }\n\n}, 7);\nlet LOANS_COLLECTION, USERS_COLLECTION, BORROWERS_COLLECTION, PROPERTIES_COLLECTION, OFFERS_COLLECTION, PROMOTIONS_COLLECTION, ORGANISATIONS_COLLECTION, CONTACTS_COLLECTION;\nmodule.link(\"../../../api/constants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  },\n\n  USERS_COLLECTION(v) {\n    USERS_COLLECTION = v;\n  },\n\n  BORROWERS_COLLECTION(v) {\n    BORROWERS_COLLECTION = v;\n  },\n\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  },\n\n  OFFERS_COLLECTION(v) {\n    OFFERS_COLLECTION = v;\n  },\n\n  PROMOTIONS_COLLECTION(v) {\n    PROMOTIONS_COLLECTION = v;\n  },\n\n  ORGANISATIONS_COLLECTION(v) {\n    ORGANISATIONS_COLLECTION = v;\n  },\n\n  CONTACTS_COLLECTION(v) {\n    CONTACTS_COLLECTION = v;\n  }\n\n}, 8);\n\nconst makeQuery = (query, params, cb) => query.clone(params).fetchOne(cb);\n\nmodule.exportDefault({\n  [LOANS_COLLECTION]: (_id, cb) => makeQuery(adminLoans, {\n    _id,\n    $body: {\n      anonymous: true,\n      borrowers: {\n        name: 1\n      },\n      name: 1,\n      selectedStructure: 1,\n      status: 1,\n      structures: {\n        wantedLoan: 1,\n        id: 1\n      },\n      user: {\n        name: 1,\n        assignedEmployee: {\n          name: 1\n        }\n      }\n    }\n  }, cb),\n  [USERS_COLLECTION]: (_id, cb) => makeQuery(adminUsers, {\n    _id,\n    $body: {\n      $filter: 1,\n      assignedEmployee: {\n        name: 1\n      },\n      email: 1,\n      loans: {\n        name: 1\n      },\n      name: 1,\n      phoneNumber: 1,\n      roles: 1,\n      referredByUser: {\n        name: 1\n      },\n      referredByOrganisation: {\n        name: 1\n      },\n      emails: 1\n    }\n  }, cb),\n  [BORROWERS_COLLECTION]: (_id, cb) => makeQuery(adminBorrowers, {\n    _id,\n    $body: {\n      loans: {\n        name: 1\n      },\n      name: 1,\n      user: {\n        name: 1,\n        assignedEmployee: {\n          name: 1\n        }\n      }\n    }\n  }, cb),\n  [PROPERTIES_COLLECTION]: (_id, cb) => makeQuery(adminProperties, {\n    _id,\n    $body: {\n      address1: 1,\n      category: 1,\n      documents: {\n        propertyImages: 1\n      },\n      name: 1,\n      status: 1,\n      totalValue: 1\n    }\n  }, cb),\n  [OFFERS_COLLECTION]: (_id, cb) => makeQuery(adminOffers, {\n    _id,\n    $body: {\n      feedback: 1,\n      lender: {\n        organisation: {\n          name: 1,\n          logo: 1\n        },\n        loan: {\n          name: 1\n        }\n      },\n      maxAmount: 1\n    }\n  }, cb),\n  [PROMOTIONS_COLLECTION]: (_id, cb) => makeQuery(proPromotions, {\n    _id,\n    $body: {\n      availablePromotionLots: 1,\n      bookedPromotionLots: 1,\n      documents: {\n        promotionImage: 1\n      },\n      lenderOrganisation: {\n        name: 1\n      },\n      name: 1,\n      soldPromotionLots: 1,\n      status: 1\n    }\n  }, cb),\n  [ORGANISATIONS_COLLECTION]: (_id, cb) => makeQuery(adminOrganisations, {\n    _id,\n    $body: {\n      name: 1,\n      logo: 1,\n      type: 1,\n      offerCount: 1\n    }\n  }, cb),\n  [CONTACTS_COLLECTION]: (_id, cb) => makeQuery(adminContacts, {\n    _id,\n    $body: {\n      email: 1,\n      name: 1,\n      organisations: {\n        name: 1,\n        logo: 1\n      },\n      phoneNumber: 1\n    }\n  }, cb)\n});","map":{"version":3,"sources":["imports/core/components/IconLink/CollectionIconLinkPopup/queries.js"],"names":["makeQuery","query","$body","anonymous","borrowers","name","selectedStructure","status","structures","wantedLoan","id","user","assignedEmployee","$filter","email","loans","phoneNumber","roles","referredByUser","referredByOrganisation","emails","address1","category","documents","propertyImages","totalValue","feedback","lender","organisation","logo","loan","maxAmount","availablePromotionLots","bookedPromotionLots","promotionImage","lenderOrganisation","soldPromotionLots","type","offerCount","organisations"],"mappings":"AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,cAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,cAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iCAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,6BAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iCAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oCAAA,EAAA;AAAA,EAAA,kBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+BAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,qBAAA,EAAA,iBAAA,EAAA,qBAAA,EAAA,wBAAA,EAAA,mBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,oBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,oBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,qBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,qBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,qBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,qBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,wBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,wBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,mBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAmBA,MAAMA,SAAS,GAAG,CAAA,KAAA,EAAA,MAAA,EAAA,EAAA,KAAuBC,KAAK,CAALA,KAAAA,CAAAA,MAAAA,EAAAA,QAAAA,CAAzC,EAAyCA,CAAzC;;AAnBA,MAAA,CAAA,aAAA,CAqBe;AACb,GAAA,gBAAA,GAAoB,CAAA,GAAA,EAAA,EAAA,KAClBD,SAAS,CAAA,UAAA,EAEP;AAAA,IAAA,GAAA;AAEEE,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EADJ,IAAA;AAELC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAFN;AAGLA,MAAAA,IAAI,EAHC,CAAA;AAILC,MAAAA,iBAAiB,EAJZ,CAAA;AAKLC,MAAAA,MAAM,EALD,CAAA;AAMLC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,UAAU,EAAZ,CAAA;AAAiBC,QAAAA,EAAE,EAAE;AAArB,OANP;AAOLC,MAAAA,IAAI,EAAE;AAAEN,QAAAA,IAAI,EAAN,CAAA;AAAWO,QAAAA,gBAAgB,EAAE;AAAEP,UAAAA,IAAI,EAAE;AAAR;AAA7B;AAPD;AAFT,GAFO,EAFE,EAEF,CAFE;AAkBb,GAAA,gBAAA,GAAoB,CAAA,GAAA,EAAA,EAAA,KAClBL,SAAS,CAAA,UAAA,EAEP;AAAA,IAAA,GAAA;AAEEE,IAAAA,KAAK,EAAE;AACLW,MAAAA,OAAO,EADF,CAAA;AAELD,MAAAA,gBAAgB,EAAE;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAFb;AAGLS,MAAAA,KAAK,EAHA,CAAA;AAILC,MAAAA,KAAK,EAAE;AAAEV,QAAAA,IAAI,EAAE;AAAR,OAJF;AAKLA,MAAAA,IAAI,EALC,CAAA;AAMLW,MAAAA,WAAW,EANN,CAAA;AAOLC,MAAAA,KAAK,EAPA,CAAA;AAQLC,MAAAA,cAAc,EAAE;AAAEb,QAAAA,IAAI,EAAE;AAAR,OARX;AASLc,MAAAA,sBAAsB,EAAE;AAAEd,QAAAA,IAAI,EAAE;AAAR,OATnB;AAULe,MAAAA,MAAM,EAAE;AAVH;AAFT,GAFO,EAnBE,EAmBF,CAnBE;AAsCb,GAAA,oBAAA,GAAwB,CAAA,GAAA,EAAA,EAAA,KACtBpB,SAAS,CAAA,cAAA,EAEP;AAAA,IAAA,GAAA;AAEEE,IAAAA,KAAK,EAAE;AACLa,MAAAA,KAAK,EAAE;AAAEV,QAAAA,IAAI,EAAE;AAAR,OADF;AAELA,MAAAA,IAAI,EAFC,CAAA;AAGLM,MAAAA,IAAI,EAAE;AAAEN,QAAAA,IAAI,EAAN,CAAA;AAAWO,QAAAA,gBAAgB,EAAE;AAAEP,UAAAA,IAAI,EAAE;AAAR;AAA7B;AAHD;AAFT,GAFO,EAvCE,EAuCF,CAvCE;AAmDb,GAAA,qBAAA,GAAyB,CAAA,GAAA,EAAA,EAAA,KACvBL,SAAS,CAAA,eAAA,EAEP;AAAA,IAAA,GAAA;AAEEE,IAAAA,KAAK,EAAE;AACLmB,MAAAA,QAAQ,EADH,CAAA;AAELC,MAAAA,QAAQ,EAFH,CAAA;AAGLC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,cAAc,EAAE;AAAlB,OAHN;AAILnB,MAAAA,IAAI,EAJC,CAAA;AAKLE,MAAAA,MAAM,EALD,CAAA;AAMLkB,MAAAA,UAAU,EAAE;AANP;AAFT,GAFO,EApDE,EAoDF,CApDE;AAmEb,GAAA,iBAAA,GAAqB,CAAA,GAAA,EAAA,EAAA,KACnBzB,SAAS,CAAA,WAAA,EAEP;AAAA,IAAA,GAAA;AAEEE,IAAAA,KAAK,EAAE;AACLwB,MAAAA,QAAQ,EADH,CAAA;AAELC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAEvB,UAAAA,IAAI,EAAN,CAAA;AAAWwB,UAAAA,IAAI,EAAE;AAAjB,SAAhB;AAAsCC,QAAAA,IAAI,EAAE;AAAEzB,UAAAA,IAAI,EAAE;AAAR;AAA5C,OAFH;AAGL0B,MAAAA,SAAS,EAAE;AAHN;AAFT,GAFO,EApEE,EAoEF,CApEE;AAgFb,GAAA,qBAAA,GAAyB,CAAA,GAAA,EAAA,EAAA,KACvB/B,SAAS,CAAA,aAAA,EAEP;AAAA,IAAA,GAAA;AAEEE,IAAAA,KAAK,EAAE;AACL8B,MAAAA,sBAAsB,EADjB,CAAA;AAELC,MAAAA,mBAAmB,EAFd,CAAA;AAGLV,MAAAA,SAAS,EAAE;AAAEW,QAAAA,cAAc,EAAE;AAAlB,OAHN;AAILC,MAAAA,kBAAkB,EAAE;AAAE9B,QAAAA,IAAI,EAAE;AAAR,OAJf;AAKLA,MAAAA,IAAI,EALC,CAAA;AAML+B,MAAAA,iBAAiB,EANZ,CAAA;AAOL7B,MAAAA,MAAM,EAAE;AAPH;AAFT,GAFO,EAjFE,EAiFF,CAjFE;AAiGb,GAAA,wBAAA,GAA4B,CAAA,GAAA,EAAA,EAAA,KAC1BP,SAAS,CAAA,kBAAA,EAEP;AAAA,IAAA,GAAA;AAEEE,IAAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAN,CAAA;AAAWwB,MAAAA,IAAI,EAAf,CAAA;AAAoBQ,MAAAA,IAAI,EAAxB,CAAA;AAA6BC,MAAAA,UAAU,EAAE;AAAzC;AAFT,GAFO,EAlGE,EAkGF,CAlGE;AA0Gb,GAAA,mBAAA,GAAuB,CAAA,GAAA,EAAA,EAAA,KACrBtC,SAAS,CAAA,aAAA,EAEP;AAAA,IAAA,GAAA;AAEEE,IAAAA,KAAK,EAAE;AACLY,MAAAA,KAAK,EADA,CAAA;AAELT,MAAAA,IAAI,EAFC,CAAA;AAGLkC,MAAAA,aAAa,EAAE;AAAElC,QAAAA,IAAI,EAAN,CAAA;AAAWwB,QAAAA,IAAI,EAAE;AAAjB,OAHV;AAILb,MAAAA,WAAW,EAAE;AAJR;AAFT,GAFO,EAAA,EAAA;AA3GE,CArBf","sourcesContent":["import { adminLoans } from 'core/api/loans/queries';\nimport { adminUsers } from 'core/api/users/queries';\nimport { adminBorrowers } from 'core/api/borrowers/queries';\nimport { adminProperties } from 'core/api/properties/queries';\nimport { adminOffers } from 'core/api/offers/queries';\nimport { proPromotions } from 'core/api/promotions/queries';\nimport { adminOrganisations } from 'core/api/organisations/queries';\nimport { adminContacts } from 'core/api/contacts/queries';\nimport {\n  LOANS_COLLECTION,\n  USERS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n  OFFERS_COLLECTION,\n  PROMOTIONS_COLLECTION,\n  ORGANISATIONS_COLLECTION,\n  CONTACTS_COLLECTION,\n} from '../../../api/constants';\n\nconst makeQuery = (query, params, cb) => query.clone(params).fetchOne(cb);\n\nexport default {\n  [LOANS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminLoans,\n      {\n        _id,\n        $body: {\n          anonymous: true,\n          borrowers: { name: 1 },\n          name: 1,\n          selectedStructure: 1,\n          status: 1,\n          structures: { wantedLoan: 1, id: 1 },\n          user: { name: 1, assignedEmployee: { name: 1 } },\n        },\n      },\n      cb,\n    ),\n  [USERS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminUsers,\n      {\n        _id,\n        $body: {\n          $filter: 1,\n          assignedEmployee: { name: 1 },\n          email: 1,\n          loans: { name: 1 },\n          name: 1,\n          phoneNumber: 1,\n          roles: 1,\n          referredByUser: { name: 1 },\n          referredByOrganisation: { name: 1 },\n          emails: 1,\n        },\n      },\n      cb,\n    ),\n  [BORROWERS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminBorrowers,\n      {\n        _id,\n        $body: {\n          loans: { name: 1 },\n          name: 1,\n          user: { name: 1, assignedEmployee: { name: 1 } },\n        },\n      },\n      cb,\n    ),\n  [PROPERTIES_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminProperties,\n      {\n        _id,\n        $body: {\n          address1: 1,\n          category: 1,\n          documents: { propertyImages: 1 },\n          name: 1,\n          status: 1,\n          totalValue: 1,\n        },\n      },\n      cb,\n    ),\n  [OFFERS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminOffers,\n      {\n        _id,\n        $body: {\n          feedback: 1,\n          lender: { organisation: { name: 1, logo: 1 }, loan: { name: 1 } },\n          maxAmount: 1,\n        },\n      },\n      cb,\n    ),\n  [PROMOTIONS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      proPromotions,\n      {\n        _id,\n        $body: {\n          availablePromotionLots: 1,\n          bookedPromotionLots: 1,\n          documents: { promotionImage: 1 },\n          lenderOrganisation: { name: 1 },\n          name: 1,\n          soldPromotionLots: 1,\n          status: 1,\n        },\n      },\n      cb,\n    ),\n  [ORGANISATIONS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminOrganisations,\n      {\n        _id,\n        $body: { name: 1, logo: 1, type: 1, offerCount: 1 },\n      },\n      cb,\n    ),\n  [CONTACTS_COLLECTION]: (_id, cb) =>\n    makeQuery(\n      adminContacts,\n      {\n        _id,\n        $body: {\n          email: 1,\n          name: 1,\n          organisations: { name: 1, logo: 1 },\n          phoneNumber: 1,\n        },\n      },\n      cb,\n    ),\n};\n"]},"sourceType":"script","hash":"22f43e711e05a5ceffad8b6839966821fd436a69"}
