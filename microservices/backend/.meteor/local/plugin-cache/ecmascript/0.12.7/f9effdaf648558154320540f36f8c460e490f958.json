{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/3.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/migrations/server/test/3.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/3.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/migrations/server/test/3.test.js"],"names":["expect","resetDatabase","Loans","up","down","describe","beforeEach","it","Promise","all","rawCollection","insert","_id","general","residenceType","name","then","loans","find","fetch","forEach","to","equal","undefined","deep"],"mappings":"AAAA;;AACA;AACA,SAASA,MAAT,QAAuB,MAAvB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,KAAT;AACA,SAASC,EAAT,EAAaC,IAAb;AAEAC,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5BC,EAAAA,UAAU,CAAC,MAAM;AACfL,IAAAA,aAAa;AACd,GAFS,CAAV;AAIAI,EAAAA,QAAQ,CAAC,IAAD,EAAO,MAAM;AACnBE,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MACjCC,OAAO,CAACC,GAAR,CAAY,CACVP,KAAK,CAACQ,aAAN,GAAsBC,MAAtB,CAA6B;AAC3BC,MAAAA,GAAG,EAAE,OADsB;AAE3BC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAFkB;AAG3BC,MAAAA,IAAI,EAAE;AAHqB,KAA7B,CADU,EAMVb,KAAK,CAACQ,aAAN,GAAsBC,MAAtB,CAA6B;AAC3BC,MAAAA,GAAG,EAAE,OADsB;AAE3BC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAFkB;AAG3BC,MAAAA,IAAI,EAAE;AAHqB,KAA7B,CANU,CAAZ,EAYGC,IAZH,CAYQb,EAZR,EAaGa,IAbH,CAaQ,MAAM;AACV,YAAMC,KAAK,GAAGf,KAAK,CAACgB,IAAN,GAAaC,KAAb,EAAd;AACAF,MAAAA,KAAK,CAACG,OAAN,CAAc,CAAC;AAAEP,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAD,KAAgC;AAC5Cd,QAAAA,MAAM,CAACa,OAAD,CAAN,CAAgBQ,EAAhB,CAAmBC,KAAnB,CAAyBC,SAAzB;AACAvB,QAAAA,MAAM,CAACc,aAAD,CAAN,CAAsBO,EAAtB,CAAyBC,KAAzB,CAA+B,MAA/B;AACD,OAHD;AAID,KAnBH,CADA,CAAF;AAqBD,GAtBO,CAAR;AAwBAjB,EAAAA,QAAQ,CAAC,MAAD,EAAS,MAAM;AACrBE,IAAAA,EAAE,CAAC,8BAAD,EAAiC,MACjCC,OAAO,CAACC,GAAR,CAAY,CACVP,KAAK,CAACQ,aAAN,GAAsBC,MAAtB,CAA6B;AAC3BC,MAAAA,GAAG,EAAE,OADsB;AAE3BE,MAAAA,aAAa,EAAE,MAFY;AAG3BC,MAAAA,IAAI,EAAE;AAHqB,KAA7B,CADU,EAMVb,KAAK,CAACQ,aAAN,GAAsBC,MAAtB,CAA6B;AAC3BC,MAAAA,GAAG,EAAE,OADsB;AAE3BE,MAAAA,aAAa,EAAE,MAFY;AAG3BC,MAAAA,IAAI,EAAE;AAHqB,KAA7B,CANU,CAAZ,EAYGC,IAZH,CAYQZ,IAZR,EAaGY,IAbH,CAaQ,MAAM;AACV,YAAMC,KAAK,GAAGf,KAAK,CAACgB,IAAN,GAAaC,KAAb,EAAd;AACAF,MAAAA,KAAK,CAACG,OAAN,CAAc,CAAC;AAAEP,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAD,KAAgC;AAC5Cd,QAAAA,MAAM,CAACa,OAAD,CAAN,CAAgBQ,EAAhB,CAAmBG,IAAnB,CAAwBF,KAAxB,CAA8B;AAAER,UAAAA,aAAa,EAAE;AAAjB,SAA9B;AACAd,QAAAA,MAAM,CAACc,aAAD,CAAN,CAAsBO,EAAtB,CAAyBC,KAAzB,CAA+BC,SAA/B;AACD,OAHD;AAID,KAnBH,CADA,CAAF;AAqBD,GAtBO,CAAR;AAuBD,CApDO,CAAR","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { Loans } from '../../..';\nimport { up, down } from '../3';\n\ndescribe('Migration 3', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('up', () => {\n    it('adds a category on all Loans', () =>\n      Promise.all([\n        Loans.rawCollection().insert({\n          _id: 'loan1',\n          general: { residenceType: 'dude' },\n          name: 'a',\n        }),\n        Loans.rawCollection().insert({\n          _id: 'loan2',\n          general: { residenceType: 'dude' },\n          name: 'b',\n        }),\n      ])\n        .then(up)\n        .then(() => {\n          const loans = Loans.find().fetch();\n          loans.forEach(({ general, residenceType }) => {\n            expect(general).to.equal(undefined);\n            expect(residenceType).to.equal('dude');\n          });\n        }));\n  });\n\n  describe('down', () => {\n    it('adds a category on all Loans', () =>\n      Promise.all([\n        Loans.rawCollection().insert({\n          _id: 'loan1',\n          residenceType: 'dude',\n          name: 'a',\n        }),\n        Loans.rawCollection().insert({\n          _id: 'loan2',\n          residenceType: 'dude',\n          name: 'b',\n        }),\n      ])\n        .then(down)\n        .then(() => {\n          const loans = Loans.find().fetch();\n          loans.forEach(({ general, residenceType }) => {\n            expect(general).to.deep.equal({ residenceType: 'dude' });\n            expect(residenceType).to.equal(undefined);\n          });\n        }));\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/3.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/migrations/server/test/3.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 1);\nlet Loans;\nmodule.link(\"../../..\", {\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 2);\nlet up, down;\nmodule.link(\"../3\", {\n  up(v) {\n    up = v;\n  },\n\n  down(v) {\n    down = v;\n  }\n\n}, 3);\ndescribe('Migration 3', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n  describe('up', () => {\n    it('adds a category on all Loans', () => Promise.all([Loans.rawCollection().insert({\n      _id: 'loan1',\n      general: {\n        residenceType: 'dude'\n      },\n      name: 'a'\n    }), Loans.rawCollection().insert({\n      _id: 'loan2',\n      general: {\n        residenceType: 'dude'\n      },\n      name: 'b'\n    })]).then(up).then(() => {\n      const loans = Loans.find().fetch();\n      loans.forEach(({\n        general,\n        residenceType\n      }) => {\n        expect(general).to.equal(undefined);\n        expect(residenceType).to.equal('dude');\n      });\n    }));\n  });\n  describe('down', () => {\n    it('adds a category on all Loans', () => Promise.all([Loans.rawCollection().insert({\n      _id: 'loan1',\n      residenceType: 'dude',\n      name: 'a'\n    }), Loans.rawCollection().insert({\n      _id: 'loan2',\n      residenceType: 'dude',\n      name: 'b'\n    })]).then(down).then(() => {\n      const loans = Loans.find().fetch();\n      loans.forEach(({\n        general,\n        residenceType\n      }) => {\n        expect(general).to.deep.equal({\n          residenceType: 'dude'\n        });\n        expect(residenceType).to.equal(undefined);\n      });\n    }));\n  });\n});","map":{"version":3,"sources":["imports/core/api/migrations/server/test/3.test.js"],"names":["describe","beforeEach","resetDatabase","it","_id","general","residenceType","name","loans","Loans","expect"],"mappings":"AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,EAAA,EAAA,IAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,EAAA,CAAA,CAAA,EAAA;AAAA,IAAA,EAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,IAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAQAA,QAAQ,CAAA,aAAA,EAAgB,MAAM;AAC5BC,EAAAA,UAAU,CAAC,MAAM;AACfC,IAAAA,aAAa;AADfD,GAAU,CAAVA;AAIAD,EAAAA,QAAQ,CAAA,IAAA,EAAO,MAAM;AACnBG,IAAAA,EAAE,CAAA,8BAAA,EAAiC,MACjC,OAAO,CAAP,GAAA,CAAY,CACV,KAAK,CAAL,aAAA,GAAA,MAAA,CAA6B;AAC3BC,MAAAA,GAAG,EADwB,OAAA;AAE3BC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAFkB;AAG3BC,MAAAA,IAAI,EAAE;AAHqB,KAA7B,CADU,EAMV,KAAK,CAAL,aAAA,GAAA,MAAA,CAA6B;AAC3BH,MAAAA,GAAG,EADwB,OAAA;AAE3BC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAFkB;AAG3BC,MAAAA,IAAI,EAAE;AAHqB,KAA7B,CANU,CAAZ,EAAA,IAAA,CAAA,EAAA,EAAA,IAAA,CAaQ,MAAM;AACV,YAAMC,KAAK,GAAGC,KAAK,CAALA,IAAAA,GAAd,KAAcA,EAAd;AACAD,MAAAA,KAAK,CAALA,OAAAA,CAAc,CAAC;AAAA,QAAA,OAAA;AAAWF,QAAAA;AAAX,OAAD,KAAgC;AAC5CI,QAAAA,MAAM,CAANA,OAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,SAAAA;AACAA,QAAAA,MAAM,CAANA,aAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,MAAAA;AAFFF,OAAAA;AAhBNL,KACE,CADA,CAAFA;AADFH,GAAQ,CAARA;AAwBAA,EAAAA,QAAQ,CAAA,MAAA,EAAS,MAAM;AACrBG,IAAAA,EAAE,CAAA,8BAAA,EAAiC,MACjC,OAAO,CAAP,GAAA,CAAY,CACV,KAAK,CAAL,aAAA,GAAA,MAAA,CAA6B;AAC3BC,MAAAA,GAAG,EADwB,OAAA;AAE3BE,MAAAA,aAAa,EAFc,MAAA;AAG3BC,MAAAA,IAAI,EAAE;AAHqB,KAA7B,CADU,EAMV,KAAK,CAAL,aAAA,GAAA,MAAA,CAA6B;AAC3BH,MAAAA,GAAG,EADwB,OAAA;AAE3BE,MAAAA,aAAa,EAFc,MAAA;AAG3BC,MAAAA,IAAI,EAAE;AAHqB,KAA7B,CANU,CAAZ,EAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAaQ,MAAM;AACV,YAAMC,KAAK,GAAGC,KAAK,CAALA,IAAAA,GAAd,KAAcA,EAAd;AACAD,MAAAA,KAAK,CAALA,OAAAA,CAAc,CAAC;AAAA,QAAA,OAAA;AAAWF,QAAAA;AAAX,OAAD,KAAgC;AAC5CI,QAAAA,MAAM,CAANA,OAAM,CAANA,CAAAA,EAAAA,CAAAA,IAAAA,CAAAA,KAAAA,CAA8B;AAAEJ,UAAAA,aAAa,EAAE;AAAjB,SAA9BI;AACAA,QAAAA,MAAM,CAANA,aAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,SAAAA;AAFFF,OAAAA;AAhBNL,KACE,CADA,CAAFA;AADFH,GAAQ,CAARA;AA7BFA,CAAQ,CAARA","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { Loans } from '../../..';\nimport { up, down } from '../3';\n\ndescribe('Migration 3', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('up', () => {\n    it('adds a category on all Loans', () =>\n      Promise.all([\n        Loans.rawCollection().insert({\n          _id: 'loan1',\n          general: { residenceType: 'dude' },\n          name: 'a',\n        }),\n        Loans.rawCollection().insert({\n          _id: 'loan2',\n          general: { residenceType: 'dude' },\n          name: 'b',\n        }),\n      ])\n        .then(up)\n        .then(() => {\n          const loans = Loans.find().fetch();\n          loans.forEach(({ general, residenceType }) => {\n            expect(general).to.equal(undefined);\n            expect(residenceType).to.equal('dude');\n          });\n        }));\n  });\n\n  describe('down', () => {\n    it('adds a category on all Loans', () =>\n      Promise.all([\n        Loans.rawCollection().insert({\n          _id: 'loan1',\n          residenceType: 'dude',\n          name: 'a',\n        }),\n        Loans.rawCollection().insert({\n          _id: 'loan2',\n          residenceType: 'dude',\n          name: 'b',\n        }),\n      ])\n        .then(down)\n        .then(() => {\n          const loans = Loans.find().fetch();\n          loans.forEach(({ general, residenceType }) => {\n            expect(general).to.deep.equal({ residenceType: 'dude' });\n            expect(residenceType).to.equal(undefined);\n          });\n        }));\n  });\n});\n"]},"sourceType":"script","hash":"f9effdaf648558154320540f36f8c460e490f958"}
