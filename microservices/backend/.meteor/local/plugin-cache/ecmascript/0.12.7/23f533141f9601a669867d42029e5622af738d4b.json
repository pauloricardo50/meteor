{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/context/conf.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/lmieulet:meteor-coverage/server/context/conf.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/context/conf.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/context/conf.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/lmieulet:meteor-coverage/server/context/conf.js"}},"code":"module.export({\n  IS_COVERAGE_ACTIVE: () => IS_COVERAGE_ACTIVE,\n  IS_COVERAGE_VERBOSE: () => IS_COVERAGE_VERBOSE,\n  COVERAGE_APP_FOLDER: () => COVERAGE_APP_FOLDER,\n  COVERAGE_EXPORT_FOLDER: () => COVERAGE_EXPORT_FOLDER,\n  remapFormat: () => remapFormat,\n  reportTypes: () => reportTypes\n});\nlet Log;\nmodule.link(\"./log\", {\n  default(v) {\n    Log = v;\n  }\n\n}, 0);\nconst meteor_parameters = {\n  // /:\\ ES 6\n  // return the value OR UNDEFINED\n  // THIS IS NOT A BOOLEAN\n  IS_COVERAGE_ACTIVE: Meteor && Meteor.settings && Meteor.settings.coverage && Meteor.settings.coverage.is_coverage_active,\n  COVERAGE_APP_FOLDER: Meteor && Meteor.settings && Meteor.settings.coverage && Meteor.settings.coverage.coverage_app_folder\n};\nconst IS_COVERAGE_ACTIVE = meteor_parameters.IS_COVERAGE_ACTIVE || process.env['COVERAGE'] === '1';\nconst IS_COVERAGE_VERBOSE = Log.COVERAGE_VERBOSE;\nconst ENV_NOT_DEFINED = '/SET/ENV/COVERAGE_APP_FOLDER/OR/READ/README/';\nconst COVERAGE_APP_FOLDER = meteor_parameters.COVERAGE_APP_FOLDER || process.env['COVERAGE_APP_FOLDER'] || ENV_NOT_DEFINED;\n\n/* istanbul ignore else */\nif (COVERAGE_APP_FOLDER === ENV_NOT_DEFINED) {\n  Log.info('Error: COVERAGE_APP_FOLDER is undefined and the coverage will fail.');\n}\n\nconst NOT_DEFINED = '/COVERAGE/NOT/ACTIVE/';\nlet configuration = {\n  output: NOT_DEFINED\n};\n/* istanbul ignore else */\n\nif (IS_COVERAGE_ACTIVE) {\n  const fs = Npm.require('fs'),\n        path = Npm.require('path');\n\n  Log.info('Coverage active');\n  let coverageFile = path.join(COVERAGE_APP_FOLDER, '.coverage.json'),\n      defaultConfig = JSON.parse(Assets.getText('conf/default-coverage.json'));\n\n  try {\n    fs.accessSync(coverageFile);\n    Log.info('Reading custom configuration');\n    const configurationString = fs.readFileSync(coverageFile);\n    configuration = JSON.parse(configurationString);\n    Log.info('[Configuration] ', configuration);\n  } catch (e) {\n    if (e instanceof SyntaxError) {\n      let errMsg = `Error: ${coverageFile} is not a valid JSON`;\n      console.error(errMsg, e);\n      Log.error(e.stack);\n    } // Set up defaultConfig value if they are not provided in the .coverage.json file\n\n\n    Log.info('Loading default configuration, missing configuration file ', coverageFile);\n    configuration = defaultConfig;\n  } // Don't force to rewrite all the key of configuration.\n\n  /* istanbul ignore else */\n\n\n  if (configuration.output === undefined) {\n    Log.info('Loading default configuration: output');\n    configuration.output = defaultConfig.output;\n  }\n  /* istanbul ignore else */\n\n\n  if (configuration.remapFormat === undefined) {\n    Log.info('Loading default configuration: remapFormat');\n    configuration.remapFormat = defaultConfig.remapFormat;\n  }\n}\n\nconst COVERAGE_EXPORT_FOLDER = configuration.output;\nconst remapFormat = configuration.remapFormat;\nconst reportTypes = {\n  allowed: ['clover', 'cobertura', 'coverage', 'html', 'json', 'json-summary', 'lcov', 'lcovonly', 'remap', 'teamcity', 'text', 'text-lcov', 'text-summary'],\n  pending: ['clover', 'cobertura', 'lcov', 'teamcity', 'text', 'text-lcov']\n};\nLog.info('Coverage configuration:');\nLog.info('- IS_COVERAGE_ACTIVE=', IS_COVERAGE_ACTIVE);\nLog.info('- IS_COVERAGE_VERBOSE=', IS_COVERAGE_VERBOSE);\nLog.info('- COVERAGE_APP_FOLDER=', COVERAGE_APP_FOLDER);\nLog.info('.coverage.json values:');\nLog.info('- remapFormat=', configuration.remapFormat);\nLog.info('- COVERAGE_EXPORT_FOLDER=', COVERAGE_EXPORT_FOLDER);","map":{"version":3,"sources":["packages/lmieulet:meteor-coverage/server/context/conf.js"],"names":["module","export","IS_COVERAGE_ACTIVE","IS_COVERAGE_VERBOSE","COVERAGE_APP_FOLDER","COVERAGE_EXPORT_FOLDER","remapFormat","reportTypes","Log","link","default","v","meteor_parameters","Meteor","settings","coverage","is_coverage_active","coverage_app_folder","process","env","COVERAGE_VERBOSE","ENV_NOT_DEFINED","info","NOT_DEFINED","configuration","output","fs","Npm","require","path","coverageFile","join","defaultConfig","JSON","parse","Assets","getText","accessSync","configurationString","readFileSync","e","SyntaxError","errMsg","console","error","stack","undefined","allowed","pending"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,kBAAkB,EAAC,MAAIA,kBAAxB;AAA2CC,EAAAA,mBAAmB,EAAC,MAAIA,mBAAnE;AAAuFC,EAAAA,mBAAmB,EAAC,MAAIA,mBAA/G;AAAmIC,EAAAA,sBAAsB,EAAC,MAAIA,sBAA9J;AAAqLC,EAAAA,WAAW,EAAC,MAAIA,WAArM;AAAiNC,EAAAA,WAAW,EAAC,MAAIA;AAAjO,CAAd;AAA6P,IAAIC,GAAJ;AAAQR,MAAM,CAACS,IAAP,CAAY,OAAZ,EAAoB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACH,IAAAA,GAAG,GAACG,CAAJ;AAAM;;AAAlB,CAApB,EAAwC,CAAxC;AACrQ,MAAMC,iBAAiB,GAAG;AACxB;AACA;AACA;AACAV,EAAAA,kBAAkB,EAAEW,MAAM,IAAIA,MAAM,CAACC,QAAjB,IAA6BD,MAAM,CAACC,QAAP,CAAgBC,QAA7C,IAAyDF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,kBAJ9E;AAKxBZ,EAAAA,mBAAmB,EAAES,MAAM,IAAIA,MAAM,CAACC,QAAjB,IAA6BD,MAAM,CAACC,QAAP,CAAgBC,QAA7C,IAAyDF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBE;AAL/E,CAA1B;AAQO,MAAMf,kBAAkB,GAAGU,iBAAiB,CAACV,kBAAlB,IAAyCgB,OAAO,CAACC,GAAR,CAAY,UAAZ,MAA4B,GAAhG;AACA,MAAMhB,mBAAmB,GAAGK,GAAG,CAACY,gBAAhC;AACP,MAAMC,eAAe,GAAG,8CAAxB;AAEO,MAAMjB,mBAAmB,GAAGQ,iBAAiB,CAACR,mBAAlB,IAAyCc,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAzC,IAA+EE,eAA3G;;AAEP;AACA,IAAIjB,mBAAmB,KAAKiB,eAA5B,EAA6C;AAC3Cb,EAAAA,GAAG,CAACc,IAAJ,CAAS,qEAAT;AACD;;AACD,MAAMC,WAAW,GAAG,uBAApB;AACA,IAAIC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAEF;AADU,CAApB;AAGA;;AACA,IAAIrB,kBAAJ,EAAwB;AACtB,QAAMwB,EAAE,GAAGC,GAAG,CAACC,OAAJ,CAAY,IAAZ,CAAX;AAAA,QACEC,IAAI,GAAGF,GAAG,CAACC,OAAJ,CAAY,MAAZ,CADT;;AAGApB,EAAAA,GAAG,CAACc,IAAJ,CAAS,iBAAT;AACA,MAAIQ,YAAY,GAAGD,IAAI,CAACE,IAAL,CAAU3B,mBAAV,EAA+B,gBAA/B,CAAnB;AAAA,MACE4B,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,OAAP,CAAe,4BAAf,CAAX,CADlB;;AAGA,MAAI;AACFV,IAAAA,EAAE,CAACW,UAAH,CAAcP,YAAd;AACAtB,IAAAA,GAAG,CAACc,IAAJ,CAAS,8BAAT;AACA,UAAMgB,mBAAmB,GAAGZ,EAAE,CAACa,YAAH,CAAgBT,YAAhB,CAA5B;AACAN,IAAAA,aAAa,GAAGS,IAAI,CAACC,KAAL,CAAWI,mBAAX,CAAhB;AACA9B,IAAAA,GAAG,CAACc,IAAJ,CAAS,kBAAT,EAA6BE,aAA7B;AACD,GAND,CAME,OAAOgB,CAAP,EAAU;AACV,QAAIA,CAAC,YAAYC,WAAjB,EAA8B;AAC5B,UAAIC,MAAM,GAAI,UAASZ,YAAa,sBAApC;AACAa,MAAAA,OAAO,CAACC,KAAR,CAAcF,MAAd,EAAsBF,CAAtB;AACAhC,MAAAA,GAAG,CAACoC,KAAJ,CAAUJ,CAAC,CAACK,KAAZ;AACD,KALS,CAMV;;;AACArC,IAAAA,GAAG,CAACc,IAAJ,CAAS,4DAAT,EAAuEQ,YAAvE;AACAN,IAAAA,aAAa,GAAGQ,aAAhB;AACD,GAvBqB,CAyBtB;;AAEA;;;AACA,MAAIR,aAAa,CAACC,MAAd,KAAyBqB,SAA7B,EAAwC;AACtCtC,IAAAA,GAAG,CAACc,IAAJ,CAAS,uCAAT;AACAE,IAAAA,aAAa,CAACC,MAAd,GAAuBO,aAAa,CAACP,MAArC;AACD;AAED;;;AACA,MAAID,aAAa,CAAClB,WAAd,KAA8BwC,SAAlC,EAA6C;AAC3CtC,IAAAA,GAAG,CAACc,IAAJ,CAAS,4CAAT;AACAE,IAAAA,aAAa,CAAClB,WAAd,GAA4B0B,aAAa,CAAC1B,WAA1C;AACD;AACF;;AAEM,MAAMD,sBAAsB,GAAGmB,aAAa,CAACC,MAA7C;AACA,MAAMnB,WAAW,GAAGkB,aAAa,CAAClB,WAAlC;AACA,MAAMC,WAAW,GAAG;AACzBwC,EAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,UAAxB,EAAoC,MAApC,EAA4C,MAA5C,EAAoD,cAApD,EAAoE,MAApE,EAA4E,UAA5E,EAAwF,OAAxF,EAAiG,UAAjG,EAA6G,MAA7G,EAAqH,WAArH,EAAkI,cAAlI,CADgB;AAEzBC,EAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,MAAxB,EAAgC,UAAhC,EAA4C,MAA5C,EAAoD,WAApD;AAFgB,CAApB;AAKPxC,GAAG,CAACc,IAAJ,CAAS,yBAAT;AACAd,GAAG,CAACc,IAAJ,CAAS,uBAAT,EAAkCpB,kBAAlC;AACAM,GAAG,CAACc,IAAJ,CAAS,wBAAT,EAAmCnB,mBAAnC;AACAK,GAAG,CAACc,IAAJ,CAAS,wBAAT,EAAmClB,mBAAnC;AACAI,GAAG,CAACc,IAAJ,CAAS,wBAAT;AACAd,GAAG,CAACc,IAAJ,CAAS,gBAAT,EAA2BE,aAAa,CAAClB,WAAzC;AACAE,GAAG,CAACc,IAAJ,CAAS,2BAAT,EAAsCjB,sBAAtC","sourcesContent":["import Log from './log';\nconst meteor_parameters = {\n  // /:\\ ES 6\n  // return the value OR UNDEFINED\n  // THIS IS NOT A BOOLEAN\n  IS_COVERAGE_ACTIVE: Meteor && Meteor.settings && Meteor.settings.coverage && Meteor.settings.coverage.is_coverage_active,\n  COVERAGE_APP_FOLDER: Meteor && Meteor.settings && Meteor.settings.coverage && Meteor.settings.coverage.coverage_app_folder\n};\n\nexport const IS_COVERAGE_ACTIVE = meteor_parameters.IS_COVERAGE_ACTIVE ||  process.env['COVERAGE'] === '1';\nexport const IS_COVERAGE_VERBOSE = Log.COVERAGE_VERBOSE;\nconst ENV_NOT_DEFINED = '/SET/ENV/COVERAGE_APP_FOLDER/OR/READ/README/';\n\nexport const COVERAGE_APP_FOLDER = meteor_parameters.COVERAGE_APP_FOLDER || process.env['COVERAGE_APP_FOLDER'] || ENV_NOT_DEFINED;\n\n/* istanbul ignore else */\nif (COVERAGE_APP_FOLDER === ENV_NOT_DEFINED) {\n  Log.info('Error: COVERAGE_APP_FOLDER is undefined and the coverage will fail.');\n}\nconst NOT_DEFINED = '/COVERAGE/NOT/ACTIVE/';\nlet configuration = {\n  output: NOT_DEFINED\n};\n/* istanbul ignore else */\nif (IS_COVERAGE_ACTIVE) {\n  const fs = Npm.require('fs'),\n    path = Npm.require('path');\n\n  Log.info('Coverage active');\n  let coverageFile = path.join(COVERAGE_APP_FOLDER, '.coverage.json'),\n    defaultConfig = JSON.parse(Assets.getText('conf/default-coverage.json'));\n\n  try {\n    fs.accessSync(coverageFile);\n    Log.info('Reading custom configuration');\n    const configurationString = fs.readFileSync(coverageFile);\n    configuration = JSON.parse(configurationString);\n    Log.info('[Configuration] ', configuration);\n  } catch (e) {\n    if (e instanceof SyntaxError) {\n      let errMsg = `Error: ${coverageFile} is not a valid JSON`;\n      console.error(errMsg, e);\n      Log.error(e.stack);\n    }\n    // Set up defaultConfig value if they are not provided in the .coverage.json file\n    Log.info('Loading default configuration, missing configuration file ', coverageFile);\n    configuration = defaultConfig;\n  }\n\n  // Don't force to rewrite all the key of configuration.\n\n  /* istanbul ignore else */\n  if (configuration.output === undefined) {\n    Log.info('Loading default configuration: output');\n    configuration.output = defaultConfig.output;\n  }\n\n  /* istanbul ignore else */\n  if (configuration.remapFormat === undefined) {\n    Log.info('Loading default configuration: remapFormat');\n    configuration.remapFormat = defaultConfig.remapFormat;\n  }\n}\n\nexport const COVERAGE_EXPORT_FOLDER = configuration.output;\nexport const remapFormat = configuration.remapFormat;\nexport const reportTypes = {\n  allowed: ['clover', 'cobertura', 'coverage', 'html', 'json', 'json-summary', 'lcov', 'lcovonly', 'remap', 'teamcity', 'text', 'text-lcov', 'text-summary'],\n  pending: ['clover', 'cobertura', 'lcov', 'teamcity', 'text', 'text-lcov']\n};\n\nLog.info('Coverage configuration:');\nLog.info('- IS_COVERAGE_ACTIVE=', IS_COVERAGE_ACTIVE);\nLog.info('- IS_COVERAGE_VERBOSE=', IS_COVERAGE_VERBOSE);\nLog.info('- COVERAGE_APP_FOLDER=', COVERAGE_APP_FOLDER);\nLog.info('.coverage.json values:');\nLog.info('- remapFormat=', configuration.remapFormat);\nLog.info('- COVERAGE_EXPORT_FOLDER=', COVERAGE_EXPORT_FOLDER);\n"]},"sourceType":"script","hash":"23f533141f9601a669867d42029e5622af738d4b"}
