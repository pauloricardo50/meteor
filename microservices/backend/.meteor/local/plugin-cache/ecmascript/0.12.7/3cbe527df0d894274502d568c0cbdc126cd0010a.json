{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/tooltips/Tooltip/Tooltip.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/tooltips/Tooltip/Tooltip.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/tooltips/Tooltip/Tooltip.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/tooltips/Tooltip/Tooltip.jsx"],"names":["React","PropTypes","omit","FormattedMessage","Popover","DialogSimple","Button","defaultIntlValues","T","TooltipSynonyms","getTooltip1Id","id","includes","getTooltip2Id","Tooltip","tooltipConfig","double","isDoubleTooltip","match","rest","content","zIndex","marginTop","handleClose","passedProps","propTypes","string","object","isRequired"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AAEA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,CAAP;AACA,OAAOC,eAAP;;AAEA,MAAMC,aAAa,GAAGC,EAAE,IAAKA,EAAE,CAACC,QAAH,CAAY,SAAZ,IAAyBD,EAAzB,GAA+B,WAAUA,EAAG,EAAzE;;AACA,MAAME,aAAa,GAAGF,EAAE,IAAKA,EAAE,CAACC,QAAH,CAAY,SAAZ,IAAyBD,EAAzB,GAA+B,YAAWA,EAAG,EAA1E;;AAEA,MAAMG,OAAO,GAAG,CAAC;AACfC,EAAAA,aAAa,EAAE;AAAEJ,IAAAA,EAAF;AAAMK,IAAAA,MAAM,EAAEC;AAAd,GADA;AAEfC,EAAAA,KAFe;AAGf,KAAGC;AAHY,CAAD,KAIV;AACJ,MAAIC,OAAO,GAAG,IAAd;;AAEA,MAAIH,eAAJ,EAAqB;AACnBG,IAAAA,OAAO,GACL,CAAC,IAAD,CAAM,UAAU,SAAhB;QACE,CAAC,gBAAD,CAAkB,GAAG,CAACV,aAAa,CAACC,EAAD,CAAd,CAArB;QACA,CAAC,YAAD,CACE,MAAM,CAACO,KAAD,CADR,CAEE;AACA;AACA;AACA;AACA,YAAM,CAAC;AAAEG,QAAAA,MAAM,EAAE;AAAV,OAAD,CANR,CAOE,YAAY,CAAC;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAD,CAPd,CAQE,MAAM,CAAC,CAAC,gBAAD,CAAkB,GAAG,mBAArB,GAAD,CARR,CASE,SATF,CAUE,QAAQ,CAACC,WAAW,IAClB,CAAC,MAAD,CACE,OADF,CAEE,MAAM,CAAC,CAAC,CAAD,CAAG,GAAG,YAAN,GAAD,CAFR,CAGE,QAAQ,CAACA,WAAD,CAHV,GADM,CAVV;UAkBE,CAAC,eAAD,CAAiB,UAAU,CAACZ,EAAD,CAA3B,CAAgC,MAAM,CAACO,KAAD,CAAtC;UACA,CAAC,EAAD;UACA,CAAC,EAAD;UACA,CAAC,gBAAD,CAAkB,GAAG,CAACL,aAAa,CAACF,EAAD,CAAd,CAArB,CAAyC,OAAO,CAACJ,iBAAD,CAAhD;QACF,EAAE,YAAF;MACF,EAAE,IAAF,CA1BF;AA4BD,GA7BD,MA6BO;AACLa,IAAAA,OAAO,GAAG,CAAC,gBAAD,CAAkB,GAAG,CAACV,aAAa,CAACC,EAAD,CAAd,CAArB,GAAV;AACD;;AAED,QAAMa,WAAW,GAAGtB,IAAI,CAACiB,IAAD,EAAO,CAAC,SAAD,EAAY,MAAZ,EAAoB,OAApB,CAAP,CAAxB;AAEA,SACE,CAAC,OAAD,CAAS,IAAIK,WAAJ,CAAT,CAA0B,GAAG,CAACb,EAAD,CAA7B;MACE,CAACS,OAAD;IACF,EAAE,OAAF,CAHF;AAKD,CA/CD;;AAiDAN,OAAO,CAACW,SAAR,GAAoB;AAClBP,EAAAA,KAAK,EAAEjB,SAAS,CAACyB,MADC;AAElBX,EAAAA,aAAa,EAAEd,SAAS,CAAC0B,MAAV,CAAiBC;AAFd,CAApB;AAKA,eAAed,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport { FormattedMessage } from 'react-intl';\nimport Popover from 'react-bootstrap/lib/Popover';\n\nimport DialogSimple from '../../DialogSimple/loadable';\nimport Button from '../../Button';\nimport defaultIntlValues from '../../Translation/defaultIntlValues';\nimport T from '../../Translation';\nimport TooltipSynonyms from '../TooltipSynonyms';\n\nconst getTooltip1Id = id => (id.includes('tooltip') ? id : `tooltip.${id}`);\nconst getTooltip2Id = id => (id.includes('tooltip') ? id : `tooltip2.${id}`);\n\nconst Tooltip = ({\n  tooltipConfig: { id, double: isDoubleTooltip },\n  match,\n  ...rest\n}) => {\n  let content = null;\n\n  if (isDoubleTooltip) {\n    content = (\n      <span className=\"tooltip\">\n        <FormattedMessage id={getTooltip1Id(id)} />\n        <DialogSimple\n          title={match}\n          // Dialogs normally have zIndex of 1500\n          // Usually dialogs should be behind tooltips (which are\n          // at zindex 1501), but when you trigger a dialog from a tooltip,\n          // it should be above the previous tooltip, hence 1502\n          style={{ zIndex: 1502 }}\n          buttonStyle={{ marginTop: 16 }}\n          label={<FormattedMessage id=\"general.learnMore\" />}\n          autoFocus\n          actions={handleClose => (\n            <Button\n              primary\n              label={<T id=\"general.ok\" />}\n              onClick={handleClose}\n            />\n          )}\n        >\n          <TooltipSynonyms tooltipId={id} match={match} />\n          <br />\n          <br />\n          <FormattedMessage id={getTooltip2Id(id)} values={defaultIntlValues} />\n        </DialogSimple>\n      </span>\n    );\n  } else {\n    content = <FormattedMessage id={getTooltip1Id(id)} />;\n  }\n\n  const passedProps = omit(rest, ['trigger', 'hide', 'match']);\n\n  return (\n    <Popover {...passedProps} id={id}>\n      {content}\n    </Popover>\n  );\n};\n\nTooltip.propTypes = {\n  match: PropTypes.string,\n  tooltipConfig: PropTypes.object.isRequired,\n};\n\nexport default Tooltip;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/tooltips/Tooltip/Tooltip.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/tooltips/Tooltip/Tooltip.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet omit;\nmodule.link(\"lodash/omit\", {\n  default(v) {\n    omit = v;\n  }\n\n}, 2);\nlet FormattedMessage;\nmodule.link(\"react-intl\", {\n  FormattedMessage(v) {\n    FormattedMessage = v;\n  }\n\n}, 3);\nlet Popover;\nmodule.link(\"react-bootstrap/lib/Popover\", {\n  default(v) {\n    Popover = v;\n  }\n\n}, 4);\nlet DialogSimple;\nmodule.link(\"../../DialogSimple/loadable\", {\n  default(v) {\n    DialogSimple = v;\n  }\n\n}, 5);\nlet Button;\nmodule.link(\"../../Button\", {\n  default(v) {\n    Button = v;\n  }\n\n}, 6);\nlet defaultIntlValues;\nmodule.link(\"../../Translation/defaultIntlValues\", {\n  default(v) {\n    defaultIntlValues = v;\n  }\n\n}, 7);\nlet T;\nmodule.link(\"../../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 8);\nlet TooltipSynonyms;\nmodule.link(\"../TooltipSynonyms\", {\n  default(v) {\n    TooltipSynonyms = v;\n  }\n\n}, 9);\n\nconst getTooltip1Id = id => id.includes('tooltip') ? id : \"tooltip.\".concat(id);\n\nconst getTooltip2Id = id => id.includes('tooltip') ? id : \"tooltip2.\".concat(id);\n\nconst Tooltip = (_ref) => {\n  let {\n    tooltipConfig: {\n      id,\n      double: isDoubleTooltip\n    },\n    match\n  } = _ref,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"tooltipConfig\", \"match\"]);\n  let content = null;\n\n  if (isDoubleTooltip) {\n    content = React.createElement(\"span\", {\n      className: \"tooltip\"\n    }, React.createElement(FormattedMessage, {\n      id: getTooltip1Id(id)\n    }), React.createElement(DialogSimple, {\n      title: match // Dialogs normally have zIndex of 1500\n      // Usually dialogs should be behind tooltips (which are\n      // at zindex 1501), but when you trigger a dialog from a tooltip,\n      // it should be above the previous tooltip, hence 1502\n      ,\n      style: {\n        zIndex: 1502\n      },\n      buttonStyle: {\n        marginTop: 16\n      },\n      label: React.createElement(FormattedMessage, {\n        id: \"general.learnMore\"\n      }),\n      autoFocus: true,\n      actions: handleClose => React.createElement(Button, {\n        primary: true,\n        label: React.createElement(T, {\n          id: \"general.ok\"\n        }),\n        onClick: handleClose\n      })\n    }, React.createElement(TooltipSynonyms, {\n      tooltipId: id,\n      match: match\n    }), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(FormattedMessage, {\n      id: getTooltip2Id(id),\n      values: defaultIntlValues\n    })));\n  } else {\n    content = React.createElement(FormattedMessage, {\n      id: getTooltip1Id(id)\n    });\n  }\n\n  const passedProps = omit(rest, ['trigger', 'hide', 'match']);\n  return React.createElement(Popover, (0, _extends2.default)({}, passedProps, {\n    id: id\n  }), content);\n};\n\nTooltip.propTypes = {\n  match: PropTypes.string,\n  tooltipConfig: PropTypes.object.isRequired\n};\nmodule.exportDefault(Tooltip);","map":{"version":3,"sources":["imports/core/components/tooltips/Tooltip/Tooltip.jsx"],"names":["React","getTooltip1Id","id","getTooltip2Id","Tooltip","tooltipConfig","double","isDoubleTooltip","rest","content","zIndex","marginTop","handleClose","passedProps","omit","match","PropTypes","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport omit from 'lodash/omit';\nimport { FormattedMessage } from 'react-intl';\nimport Popover from 'react-bootstrap/lib/Popover';\n\nimport DialogSimple from '../../DialogSimple/loadable';\nimport Button from '../../Button';\nimport defaultIntlValues from '../../Translation/defaultIntlValues';\nimport T from '../../Translation';\nimport TooltipSynonyms from '../TooltipSynonyms';\n\nconst getTooltip1Id = id => (id.includes('tooltip') ? id : `tooltip.${id}`);\nconst getTooltip2Id = id => (id.includes('tooltip') ? id : `tooltip2.${id}`);\n\nconst Tooltip = ({\n  tooltipConfig: { id, double: isDoubleTooltip },\n  match,\n  ...rest\n}) => {\n  let content = null;\n\n  if (isDoubleTooltip) {\n    content = (\n      <span className=\"tooltip\">\n        <FormattedMessage id={getTooltip1Id(id)} />\n        <DialogSimple\n          title={match}\n          // Dialogs normally have zIndex of 1500\n          // Usually dialogs should be behind tooltips (which are\n          // at zindex 1501), but when you trigger a dialog from a tooltip,\n          // it should be above the previous tooltip, hence 1502\n          style={{ zIndex: 1502 }}\n          buttonStyle={{ marginTop: 16 }}\n          label={<FormattedMessage id=\"general.learnMore\" />}\n          autoFocus\n          actions={handleClose => (\n            <Button\n              primary\n              label={<T id=\"general.ok\" />}\n              onClick={handleClose}\n            />\n          )}\n        >\n          <TooltipSynonyms tooltipId={id} match={match} />\n          <br />\n          <br />\n          <FormattedMessage id={getTooltip2Id(id)} values={defaultIntlValues} />\n        </DialogSimple>\n      </span>\n    );\n  } else {\n    content = <FormattedMessage id={getTooltip1Id(id)} />;\n  }\n\n  const passedProps = omit(rest, ['trigger', 'hide', 'match']);\n\n  return (\n    <Popover {...passedProps} id={id}>\n      {content}\n    </Popover>\n  );\n};\n\nTooltip.propTypes = {\n  match: PropTypes.string,\n  tooltipConfig: PropTypes.object.isRequired,\n};\n\nexport default Tooltip;\n"]},"sourceType":"script","hash":"3cbe527df0d894274502d568c0cbdc126cd0010a"}
