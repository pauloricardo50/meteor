{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/notifications/server/exposures.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/notifications/server/exposures.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/notifications/server/exposures.js","inputSourceMap":{"version":3,"sources":["imports/core/api/notifications/server/exposures.js"],"names":["Meteor","Match","exposeQuery","adminNotifications","query","overrides","embody","body","$filter","filters","params","_userId","userId","read","unread","Error","recipientLinks","$elemMatch","_id","$or","snoozeDate","$exists","$lte","Date","validateParams","Maybe","String","Boolean"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,SAASC,WAAT;AACA,SAASC,kBAAT;AAEAD,WAAW,CAAC;AACVE,EAAAA,KAAK,EAAED,kBADG;AAEVE,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAGC,IAAD,IAAU;AAChBA,MAAAA,IAAI,CAACC,OAAL,GAAe,CAAC;AACdC,QAAAA,OADc;AAEdC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,OAAF;AAAWC,UAAAA,MAAX;AAAmBC,UAAAA,IAAnB;AAAyBC,UAAAA;AAAzB;AAFM,OAAD,KAGT;AACJ,YAAI,CAACD,IAAD,IAAS,CAACC,MAAd,EAAsB;AACpB,gBAAM,IAAId,MAAM,CAACe,KAAX,CAAiB,2CAAjB,CAAN;AACD;;AAED,YAAID,MAAJ,EAAY;AACVL,UAAAA,OAAO,CAACO,cAAR,GAAyB;AACvBC,YAAAA,UAAU,EAAE;AACVC,cAAAA,GAAG,EAAEP,OAAO,IAAIC,MADN;AAEVC,cAAAA,IAAI,EAAE,KAFI;AAGVM,cAAAA,GAAG,EAAE,CACH;AAAEC,gBAAAA,UAAU,EAAE;AAAEC,kBAAAA,OAAO,EAAE;AAAX;AAAd,eADG,EAEH;AAAED,gBAAAA,UAAU,EAAE;AAAEE,kBAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAR;AAAd,eAFG;AAHK;AADW,WAAzB;AAUD;;AAED,YAAIV,IAAJ,EAAU;AACRJ,UAAAA,OAAO,CAACO,cAAR,GAAyB;AACvBC,YAAAA,UAAU,EAAE;AAAEC,cAAAA,GAAG,EAAEN,MAAM,IAAID,OAAjB;AAA0BE,cAAAA,IAAI,EAAE;AAAhC;AADW,WAAzB;AAGD;AACF,OA1BD;AA2BD,KA7BQ;AA8BTW,IAAAA,cAAc,EAAE;AACdZ,MAAAA,MAAM,EAAEX,KAAK,CAACwB,KAAN,CAAYC,MAAZ,CADM;AAEdb,MAAAA,IAAI,EAAEZ,KAAK,CAACwB,KAAN,CAAYE,OAAZ,CAFQ;AAGdb,MAAAA,MAAM,EAAEb,KAAK,CAACwB,KAAN,CAAYE,OAAZ;AAHM;AA9BP;AAFD,CAAD,CAAX","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match } from 'meteor/check';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { adminNotifications } from '../queries';\n\nexposeQuery({\n  query: adminNotifications,\n  overrides: {\n    embody: (body) => {\n      body.$filter = ({\n        filters,\n        params: { _userId, userId, read, unread },\n      }) => {\n        if (!read && !unread) {\n          throw new Meteor.Error('You have to provide either read or unread');\n        }\n\n        if (unread) {\n          filters.recipientLinks = {\n            $elemMatch: {\n              _id: _userId || userId,\n              read: false,\n              $or: [\n                { snoozeDate: { $exists: false } },\n                { snoozeDate: { $lte: new Date() } },\n              ],\n            },\n          };\n        }\n\n        if (read) {\n          filters.recipientLinks = {\n            $elemMatch: { _id: userId || _userId, read: true },\n          };\n        }\n      };\n    },\n    validateParams: {\n      userId: Match.Maybe(String),\n      read: Match.Maybe(Boolean),\n      unread: Match.Maybe(Boolean),\n    },\n  },\n});\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/notifications/server/exposures.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/notifications/server/exposures.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 2);\nlet adminNotifications;\nmodule.link(\"../queries\", {\n  adminNotifications(v) {\n    adminNotifications = v;\n  }\n\n}, 3);\nexposeQuery({\n  query: adminNotifications,\n  overrides: {\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params: {\n          _userId,\n          userId,\n          read,\n          unread\n        }\n      }) => {\n        if (!read && !unread) {\n          throw new Meteor.Error('You have to provide either read or unread');\n        }\n\n        if (unread) {\n          filters.recipientLinks = {\n            $elemMatch: {\n              _id: _userId || userId,\n              read: false,\n              $or: [{\n                snoozeDate: {\n                  $exists: false\n                }\n              }, {\n                snoozeDate: {\n                  $lte: new Date()\n                }\n              }]\n            }\n          };\n        }\n\n        if (read) {\n          filters.recipientLinks = {\n            $elemMatch: {\n              _id: userId || _userId,\n              read: true\n            }\n          };\n        }\n      };\n    },\n    validateParams: {\n      userId: Match.Maybe(String),\n      read: Match.Maybe(Boolean),\n      unread: Match.Maybe(Boolean)\n    }\n  }\n});","map":{"version":3,"sources":["imports/core/api/notifications/server/exposures.js"],"names":["exposeQuery","query","overrides","embody","body","params","unread","Meteor","filters","$elemMatch","_id","_userId","read","$or","snoozeDate","$exists","$lte","userId","validateParams","Match"],"mappings":"AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4BAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,kBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAMAA,WAAW,CAAC;AACVC,EAAAA,KAAK,EADK,kBAAA;AAEVC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAGC,IAAD,IAAU;AAChBA,MAAAA,IAAI,CAAJA,OAAAA,GAAe,CAAC;AAAA,QAAA,OAAA;AAEdC,QAAAA,MAAM,EAAE;AAAA,UAAA,OAAA;AAAA,UAAA,MAAA;AAAA,UAAA,IAAA;AAAyBC,UAAAA;AAAzB;AAFM,OAAD,KAGT;AACJ,YAAI,CAAA,IAAA,IAAS,CAAb,MAAA,EAAsB;AACpB,gBAAM,IAAIC,MAAM,CAAV,KAAA,CAAN,2CAAM,CAAN;AACD;;AAED,YAAA,MAAA,EAAY;AACVC,UAAAA,OAAO,CAAPA,cAAAA,GAAyB;AACvBC,YAAAA,UAAU,EAAE;AACVC,cAAAA,GAAG,EAAEC,OAAO,IADF,MAAA;AAEVC,cAAAA,IAAI,EAFM,KAAA;AAGVC,cAAAA,GAAG,EAAE,CACH;AAAEC,gBAAAA,UAAU,EAAE;AAAEC,kBAAAA,OAAO,EAAE;AAAX;AAAd,eADG,EAEH;AAAED,gBAAAA,UAAU,EAAE;AAAEE,kBAAAA,IAAI,EAAE,IAAA,IAAA;AAAR;AAAd,eAFG;AAHK;AADW,WAAzBR;AAUD;;AAED,YAAA,IAAA,EAAU;AACRA,UAAAA,OAAO,CAAPA,cAAAA,GAAyB;AACvBC,YAAAA,UAAU,EAAE;AAAEC,cAAAA,GAAG,EAAEO,MAAM,IAAb,OAAA;AAA0BL,cAAAA,IAAI,EAAE;AAAhC;AADW,WAAzBJ;AAGD;AAzBHJ,OAAAA;AAFO,KAAA;AA8BTc,IAAAA,cAAc,EAAE;AACdD,MAAAA,MAAM,EAAEE,KAAK,CAALA,KAAAA,CADM,MACNA,CADM;AAEdP,MAAAA,IAAI,EAAEO,KAAK,CAALA,KAAAA,CAFQ,OAERA,CAFQ;AAGdb,MAAAA,MAAM,EAAEa,KAAK,CAALA,KAAAA,CAAAA,OAAAA;AAHM;AA9BP;AAFD,CAAD,CAAXnB","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match } from 'meteor/check';\n\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport { adminNotifications } from '../queries';\n\nexposeQuery({\n  query: adminNotifications,\n  overrides: {\n    embody: (body) => {\n      body.$filter = ({\n        filters,\n        params: { _userId, userId, read, unread },\n      }) => {\n        if (!read && !unread) {\n          throw new Meteor.Error('You have to provide either read or unread');\n        }\n\n        if (unread) {\n          filters.recipientLinks = {\n            $elemMatch: {\n              _id: _userId || userId,\n              read: false,\n              $or: [\n                { snoozeDate: { $exists: false } },\n                { snoozeDate: { $lte: new Date() } },\n              ],\n            },\n          };\n        }\n\n        if (read) {\n          filters.recipientLinks = {\n            $elemMatch: { _id: userId || _userId, read: true },\n          };\n        }\n      };\n    },\n    validateParams: {\n      userId: Match.Maybe(String),\n      read: Match.Maybe(Boolean),\n      unread: Match.Maybe(Boolean),\n    },\n  },\n});\n"]},"sourceType":"script","hash":"7419fa56999e7581370fbcf2ae7b0a81e926ad30"}
