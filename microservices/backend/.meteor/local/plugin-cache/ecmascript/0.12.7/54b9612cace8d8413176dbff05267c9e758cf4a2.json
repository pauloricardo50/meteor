{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/mongo/extendObserveChanges.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/cultofcoders:redis-oplog/lib/mongo/extendObserveChanges.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/mongo/extendObserveChanges.js","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/mongo/extendObserveChanges.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:redis-oplog/lib/mongo/extendObserveChanges.js"}},"code":"let PublicationEntry;\nmodule.link(\"../cache/PublicationEntry\", {\n  default(v) {\n    PublicationEntry = v;\n  }\n\n}, 0);\nlet PublicationFactory;\nmodule.link(\"../cache/PublicationFactory\", {\n  default(v) {\n    PublicationFactory = v;\n  }\n\n}, 1);\nlet diff;\nmodule.link(\"deep-diff\", {\n  diff(v) {\n    diff = v;\n  }\n\n}, 2);\nlet cloneDeep;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    cloneDeep = v;\n  }\n\n}, 3);\nlet DDP;\nmodule.link(\"meteor/ddp\", {\n  DDP(v) {\n    DDP = v;\n  }\n\n}, 4);\nmodule.exportDefault(function (cursor, selector, options) {\n  if (options && options.disableOplog) {\n    return;\n  }\n\n  if (!cursor._cursorDescription) {\n    // It means that it's most likely a LocalCollection, no need to extend it in any way\n    return;\n  }\n\n  Object.assign(cursor, {\n    observeChanges(_observer) {\n      return createPublicationEntry(cursor, createObserveChanges(_observer));\n    },\n\n    observe(_observer) {\n      return createPublicationEntry(cursor, createObserve(_observer));\n    }\n\n  });\n});\n\n/**\n * Creates the publication entry\n * @param cursor\n * @param observer\n * @returns {{stop: (function()), _multiplexer: {}}}\n */\nfunction createPublicationEntry(cursor, observer) {\n  let pe = PublicationFactory.create(cursor, observer);\n  return {\n    stop() {\n      pe.removeObserver(observer);\n    },\n\n    // We do this to make it work with meteorhacks:kadira\n    _multiplexer: class {\n      _sendAdds() {}\n\n    }\n  };\n}\n/**\n * @param observer\n */\n\n\nfunction createObserve(observer) {\n  const ef = function () {};\n\n  return {\n    connection: getObserverConnection(observer),\n\n    added(collectionName, docId, doc) {\n      if (observer.added) {\n        observer.added(cloneDeep(doc));\n      }\n    },\n\n    changed(collectionName, docId, changedDiff, newDoc, oldDoc) {\n      if (observer.changed) {\n        var differences = diff(newDoc, oldDoc);\n\n        if (differences) {\n          observer.changed(cloneDeep(newDoc), oldDoc);\n        }\n      }\n    },\n\n    removed(collectionName, docId, doc) {\n      if (observer.removed) {\n        observer.removed(doc);\n      }\n    }\n\n  };\n}\n/**\n * @param observer\n */\n\n\nfunction createObserveChanges(observer) {\n  const ef = function () {};\n\n  return {\n    connection: getObserverConnection(observer),\n\n    added(collectionName, docId, doc) {\n      if (observer.added) {\n        observer.added(docId, cloneDeep(doc));\n      }\n    },\n\n    changed(collectionName, docId, doc) {\n      if (observer.changed) {\n        observer.changed(docId, cloneDeep(doc));\n      }\n    },\n\n    removed(collectionName, docId) {\n      if (observer.removed) {\n        observer.removed(docId);\n      }\n    }\n\n  };\n}\n/**\n * @param {*} observer\n */\n\n\nfunction getObserverConnection(observer) {\n  if (observer.connection) {\n    return observer.connection;\n  }\n\n  const currentPublishInvoke = DDP._CurrentPublicationInvocation && DDP._CurrentPublicationInvocation.get();\n\n  if (currentPublishInvoke) {\n    return currentPublishInvoke.connection;\n  }\n}","map":{"version":3,"sources":["packages/cultofcoders:redis-oplog/lib/mongo/extendObserveChanges.js"],"names":["PublicationEntry","module","link","default","v","PublicationFactory","diff","cloneDeep","DDP","exportDefault","cursor","selector","options","disableOplog","_cursorDescription","Object","assign","observeChanges","_observer","createPublicationEntry","createObserveChanges","observe","createObserve","observer","pe","create","stop","removeObserver","_multiplexer","_sendAdds","ef","connection","getObserverConnection","added","collectionName","docId","doc","changed","changedDiff","newDoc","oldDoc","differences","removed","currentPublishInvoke","_CurrentPublicationInvocation","get"],"mappings":"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","sourcesContent":["import PublicationEntry from \"../cache/PublicationEntry\";\nimport PublicationFactory from \"../cache/PublicationFactory\";\nimport { diff } from \"deep-diff\";\nimport cloneDeep from \"lodash.clonedeep\";\nimport { DDP } from \"meteor/ddp\";\n\nexport default function(cursor, selector, options) {\n    if (options && options.disableOplog) {\n        return;\n    }\n\n    if (!cursor._cursorDescription) {\n        // It means that it's most likely a LocalCollection, no need to extend it in any way\n        return;\n    }\n\n    Object.assign(cursor, {\n        observeChanges(_observer) {\n            return createPublicationEntry(\n                cursor,\n                createObserveChanges(_observer)\n            );\n        },\n        observe(_observer) {\n            return createPublicationEntry(cursor, createObserve(_observer));\n        }\n    });\n}\n\n/**\n * Creates the publication entry\n * @param cursor\n * @param observer\n * @returns {{stop: (function()), _multiplexer: {}}}\n */\nfunction createPublicationEntry(cursor, observer) {\n    let pe = PublicationFactory.create(cursor, observer);\n\n    return {\n        stop() {\n            pe.removeObserver(observer);\n        },\n        // We do this to make it work with meteorhacks:kadira\n        _multiplexer: class {\n            _sendAdds() {}\n        }\n    };\n}\n\n/**\n * @param observer\n */\nfunction createObserve(observer) {\n    const ef = function() {};\n\n    return {\n        connection: getObserverConnection(observer),\n        added(collectionName, docId, doc) {\n            if (observer.added) {\n                observer.added(cloneDeep(doc));\n            }\n        },\n        changed(collectionName, docId, changedDiff, newDoc, oldDoc) {\n            if (observer.changed) {\n                var differences = diff(newDoc, oldDoc);\n\n                if (differences) {\n                    observer.changed(cloneDeep(newDoc), oldDoc);\n                }\n            }\n        },\n        removed(collectionName, docId, doc) {\n            if (observer.removed) {\n                observer.removed(doc);\n            }\n        }\n    };\n}\n\n/**\n * @param observer\n */\nfunction createObserveChanges(observer) {\n    const ef = function() {};\n\n    return {\n        connection: getObserverConnection(observer),\n        added(collectionName, docId, doc) {\n            if (observer.added) {\n                observer.added(docId, cloneDeep(doc));\n            }\n        },\n        changed(collectionName, docId, doc) {\n            if (observer.changed) {\n                observer.changed(docId, cloneDeep(doc));\n            }\n        },\n        removed(collectionName, docId) {\n            if (observer.removed) {\n                observer.removed(docId);\n            }\n        }\n    };\n}\n\n/**\n * @param {*} observer\n */\nfunction getObserverConnection(observer) {\n    if (observer.connection) {\n        return observer.connection;\n    }\n\n    const currentPublishInvoke = DDP._CurrentPublicationInvocation && DDP._CurrentPublicationInvocation.get();\n\n    if (currentPublishInvoke) {\n        return currentPublishInvoke.connection;\n    }\n}\n"]},"sourceType":"script","hash":"54b9612cace8d8413176dbff05267c9e758cf4a2"}
