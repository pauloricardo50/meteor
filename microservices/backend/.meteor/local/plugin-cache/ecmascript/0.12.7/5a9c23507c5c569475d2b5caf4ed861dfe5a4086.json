{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/test/mortgageEstimate.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/test/mortgageEstimate.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/test/mortgageEstimate.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/test/mortgageEstimate.test.js"],"names":["Meteor","resetDatabase","sinon","PURCHASE_TYPE","RESIDENCE_TYPE","generator","TRENDS","RESTAPI","fetchAndCheckResponse","makeHeaders","getTimestampAndNonce","mortgageEstimateAPI","url","api","addEndpoint","getResult","expectedResponse","query","timestamp","nonce","data","method","headers","userId","describe","timeout","now","clock","before","settings","public","microservice","parent","pending","skip","start","after","reset","beforeEach","users","_factory","_id","organisations","interestRates","date","Date","toISOString","interestLibor","rateLow","rateHigh","trend","DOWN","interest5","UP","interest10","FLAT","interest15","useFakeTimers","getTime","afterEach","restore","it","borrowRatio","monthlyInterests","interestsLibor","interests5","interests10","interests15","loanValue","monthlyMaintenance","monthlyAmortization","notaryFees","estimate","total","ownFunds","monthlyTotals","purchaseType","ACQUISITION","residenceType","MAIN_RESIDENCE","totalValue","canton"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { Meteor } from 'meteor/meteor';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\nimport sinon from 'sinon';\n\nimport { PURCHASE_TYPE } from 'core/api/loans/loanConstants';\nimport { RESIDENCE_TYPE } from 'core/api/properties/propertyConstants';\nimport generator from '../../../../factories';\nimport { TRENDS } from '../../../../constants';\nimport RESTAPI from '../../RESTAPI';\nimport {\n  fetchAndCheckResponse,\n  makeHeaders,\n  getTimestampAndNonce,\n} from '../../test/apiTestHelpers.test';\nimport { mortgageEstimateAPI } from '..';\n\nconst url = '/calculator/mortgage-estimate';\nconst api = new RESTAPI();\napi.addEndpoint(url, 'GET', mortgageEstimateAPI);\n\nconst getResult = ({ expectedResponse, query }) => {\n  const { timestamp, nonce } = getTimestampAndNonce();\n\n  return fetchAndCheckResponse({\n    url,\n    query,\n    data: {\n      method: 'GET',\n      headers: makeHeaders({\n        userId: 'pro',\n        timestamp,\n        nonce,\n        query,\n      }),\n    },\n    expectedResponse,\n  });\n};\n\ndescribe('REST: mortgageEstimate', function () {\n  this.timeout(10000);\n  let now;\n  let clock;\n\n  before(function () {\n    if (Meteor.settings.public.microservice !== 'pro') {\n      this.parent.pending = true;\n      this.skip();\n    } else {\n      api.start();\n    }\n  });\n\n  after(() => {\n    api.reset();\n  });\n\n  beforeEach(() => {\n    resetDatabase();\n    generator({\n      users: [{ _factory: 'pro', _id: 'pro', organisations: [{ _id: 'org' }] }],\n      interestRates: [\n        {\n          date: new Date().toISOString(),\n          interestLibor: {\n            rateLow: 0.005,\n            rateHigh: 0.01,\n            trend: TRENDS.DOWN,\n          },\n          interest5: {\n            rateLow: 0.01,\n            rateHigh: 0.012,\n            trend: TRENDS.UP,\n          },\n          interest10: {\n            rateLow: 0.012,\n            rateHigh: 0.015,\n            trend: TRENDS.FLAT,\n          },\n          interest15: {\n            rateLow: 0.015,\n            rateHigh: 0.02,\n            trend: TRENDS.FLAT,\n          },\n        },\n      ],\n    });\n    now = new Date();\n    clock = sinon.useFakeTimers(now.getTime());\n  });\n\n  afterEach(() => {\n    clock.restore();\n  });\n\n  it('Returns default response if only the propertyValue is given', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200,\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 1000,\n      notaryFees: {\n        estimate: true,\n        total: 60000,\n      },\n      ownFunds: 300000,\n      monthlyTotals: {\n        interestsLibor: 1400,\n        interests5: 1800,\n        interests10: 1960,\n        interests15: 2200,\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1260000,\n    };\n\n    const query = { 'property-value': '1200000' };\n    return getResult({ query, expectedResponse });\n  });\n\n  it('Uses the canton if provided', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200,\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 1000,\n      notaryFees: {\n        canton: 'GE',\n        estimate: false,\n        total: 65273.96,\n      },\n      ownFunds: 305273.96,\n      monthlyTotals: {\n        interestsLibor: 1400,\n        interests5: 1800,\n        interests10: 1960,\n        interests15: 2200,\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1265273.96,\n    };\n\n    const query = { 'property-value': '1200000', canton: 'GE' };\n    return getResult({ query, expectedResponse });\n  });\n\n  it('Uses maintenance if provided', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200,\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 1000,\n      monthlyAmortization: 1000,\n      notaryFees: {\n        estimate: true,\n        total: 60000,\n      },\n      ownFunds: 300000,\n      monthlyTotals: {\n        interestsLibor: 2400,\n        interests5: 2800,\n        interests10: 2960,\n        interests15: 3200,\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1260000,\n    };\n\n    const query = {\n      'property-value': '1200000',\n      'monthly-maintenance': '1000',\n    };\n    return getResult({ query, expectedResponse });\n  });\n\n  it('Uses zipCode if provided', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200,\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 1000,\n      notaryFees: {\n        canton: 'GE',\n        estimate: false,\n        total: 65273.96,\n      },\n      ownFunds: 305273.96,\n      monthlyTotals: {\n        interestsLibor: 1400,\n        interests5: 1800,\n        interests10: 1960,\n        interests15: 2200,\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1265273.96,\n    };\n\n    const query = {\n      'property-value': '1200000',\n      'zip-code': '1201',\n    };\n    return getResult({ query, expectedResponse });\n  });\n\n  it('Uses includeNotaryFees if provided', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200,\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 1000,\n      ownFunds: 240000,\n      monthlyTotals: {\n        interestsLibor: 1400,\n        interests5: 1800,\n        interests10: 1960,\n        interests15: 2200,\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1200000,\n    };\n\n    const query = {\n      'property-value': '1200000',\n      'include-notary-fees': 'false',\n    };\n    return getResult({ query, expectedResponse });\n  });\n\n  it('reduces the borrowRatio for expensive properties', () => {\n    const expectedResponse = {\n      borrowRatio: 0.67,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 1005,\n        interests5: 2010,\n        interests10: 2412,\n        interests15: 3015,\n      },\n      loanValue: 2412000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 3400,\n      ownFunds: 1188000,\n      monthlyTotals: {\n        interestsLibor: 4405,\n        interests5: 5410,\n        interests10: 5812,\n        interests15: 6415,\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 3600000,\n    };\n\n    const query = {\n      'property-value': '3600000',\n      'include-notary-fees': 'false',\n    };\n    return getResult({ query, expectedResponse });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/test/mortgageEstimate.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/test/mortgageEstimate.test.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 1);\nlet sinon;\nmodule.link(\"sinon\", {\n  default(v) {\n    sinon = v;\n  }\n\n}, 2);\nlet PURCHASE_TYPE;\nmodule.link(\"../../../../loans/loanConstants\", {\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  }\n\n}, 3);\nlet RESIDENCE_TYPE;\nmodule.link(\"../../../../properties/propertyConstants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  }\n\n}, 4);\nlet generator;\nmodule.link(\"../../../../factories\", {\n  default(v) {\n    generator = v;\n  }\n\n}, 5);\nlet TRENDS;\nmodule.link(\"../../../../constants\", {\n  TRENDS(v) {\n    TRENDS = v;\n  }\n\n}, 6);\nlet RESTAPI;\nmodule.link(\"../../RESTAPI\", {\n  default(v) {\n    RESTAPI = v;\n  }\n\n}, 7);\nlet fetchAndCheckResponse, makeHeaders, getTimestampAndNonce;\nmodule.link(\"../../test/apiTestHelpers.test\", {\n  fetchAndCheckResponse(v) {\n    fetchAndCheckResponse = v;\n  },\n\n  makeHeaders(v) {\n    makeHeaders = v;\n  },\n\n  getTimestampAndNonce(v) {\n    getTimestampAndNonce = v;\n  }\n\n}, 8);\nlet mortgageEstimateAPI;\nmodule.link(\"..\", {\n  mortgageEstimateAPI(v) {\n    mortgageEstimateAPI = v;\n  }\n\n}, 9);\nconst url = '/calculator/mortgage-estimate';\nconst api = new RESTAPI();\napi.addEndpoint(url, 'GET', mortgageEstimateAPI);\n\nconst getResult = ({\n  expectedResponse,\n  query\n}) => {\n  const {\n    timestamp,\n    nonce\n  } = getTimestampAndNonce();\n  return fetchAndCheckResponse({\n    url,\n    query,\n    data: {\n      method: 'GET',\n      headers: makeHeaders({\n        userId: 'pro',\n        timestamp,\n        nonce,\n        query\n      })\n    },\n    expectedResponse\n  });\n};\n\ndescribe('REST: mortgageEstimate', function () {\n  this.timeout(10000);\n  let now;\n  let clock;\n  before(function () {\n    if (Meteor.settings.public.microservice !== 'pro') {\n      this.parent.pending = true;\n      this.skip();\n    } else {\n      api.start();\n    }\n  });\n  after(() => {\n    api.reset();\n  });\n  beforeEach(() => {\n    resetDatabase();\n    generator({\n      users: [{\n        _factory: 'pro',\n        _id: 'pro',\n        organisations: [{\n          _id: 'org'\n        }]\n      }],\n      interestRates: [{\n        date: new Date().toISOString(),\n        interestLibor: {\n          rateLow: 0.005,\n          rateHigh: 0.01,\n          trend: TRENDS.DOWN\n        },\n        interest5: {\n          rateLow: 0.01,\n          rateHigh: 0.012,\n          trend: TRENDS.UP\n        },\n        interest10: {\n          rateLow: 0.012,\n          rateHigh: 0.015,\n          trend: TRENDS.FLAT\n        },\n        interest15: {\n          rateLow: 0.015,\n          rateHigh: 0.02,\n          trend: TRENDS.FLAT\n        }\n      }]\n    });\n    now = new Date();\n    clock = sinon.useFakeTimers(now.getTime());\n  });\n  afterEach(() => {\n    clock.restore();\n  });\n  it('Returns default response if only the propertyValue is given', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 1000,\n      notaryFees: {\n        estimate: true,\n        total: 60000\n      },\n      ownFunds: 300000,\n      monthlyTotals: {\n        interestsLibor: 1400,\n        interests5: 1800,\n        interests10: 1960,\n        interests15: 2200\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1260000\n    };\n    const query = {\n      'property-value': '1200000'\n    };\n    return getResult({\n      query,\n      expectedResponse\n    });\n  });\n  it('Uses the canton if provided', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 1000,\n      notaryFees: {\n        canton: 'GE',\n        estimate: false,\n        total: 65273.96\n      },\n      ownFunds: 305273.96,\n      monthlyTotals: {\n        interestsLibor: 1400,\n        interests5: 1800,\n        interests10: 1960,\n        interests15: 2200\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1265273.96\n    };\n    const query = {\n      'property-value': '1200000',\n      canton: 'GE'\n    };\n    return getResult({\n      query,\n      expectedResponse\n    });\n  });\n  it('Uses maintenance if provided', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 1000,\n      monthlyAmortization: 1000,\n      notaryFees: {\n        estimate: true,\n        total: 60000\n      },\n      ownFunds: 300000,\n      monthlyTotals: {\n        interestsLibor: 2400,\n        interests5: 2800,\n        interests10: 2960,\n        interests15: 3200\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1260000\n    };\n    const query = {\n      'property-value': '1200000',\n      'monthly-maintenance': '1000'\n    };\n    return getResult({\n      query,\n      expectedResponse\n    });\n  });\n  it('Uses zipCode if provided', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 1000,\n      notaryFees: {\n        canton: 'GE',\n        estimate: false,\n        total: 65273.96\n      },\n      ownFunds: 305273.96,\n      monthlyTotals: {\n        interestsLibor: 1400,\n        interests5: 1800,\n        interests10: 1960,\n        interests15: 2200\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1265273.96\n    };\n    const query = {\n      'property-value': '1200000',\n      'zip-code': '1201'\n    };\n    return getResult({\n      query,\n      expectedResponse\n    });\n  });\n  it('Uses includeNotaryFees if provided', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 1000,\n      ownFunds: 240000,\n      monthlyTotals: {\n        interestsLibor: 1400,\n        interests5: 1800,\n        interests10: 1960,\n        interests15: 2200\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1200000\n    };\n    const query = {\n      'property-value': '1200000',\n      'include-notary-fees': 'false'\n    };\n    return getResult({\n      query,\n      expectedResponse\n    });\n  });\n  it('reduces the borrowRatio for expensive properties', () => {\n    const expectedResponse = {\n      borrowRatio: 0.67,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 1005,\n        interests5: 2010,\n        interests10: 2412,\n        interests15: 3015\n      },\n      loanValue: 2412000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 3400,\n      ownFunds: 1188000,\n      monthlyTotals: {\n        interestsLibor: 4405,\n        interests5: 5410,\n        interests10: 5812,\n        interests15: 6415\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 3600000\n    };\n    const query = {\n      'property-value': '3600000',\n      'include-notary-fees': 'false'\n    };\n    return getResult({\n      query,\n      expectedResponse\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/test/mortgageEstimate.test.js"],"names":["url","api","getResult","query","nonce","getTimestampAndNonce","fetchAndCheckResponse","data","method","headers","makeHeaders","userId","expectedResponse","describe","before","Meteor","after","beforeEach","resetDatabase","generator","users","_factory","_id","organisations","interestRates","date","interestLibor","rateLow","rateHigh","trend","TRENDS","DOWN","interest5","UP","interest10","FLAT","interest15","now","clock","sinon","afterEach","it","borrowRatio","monthlyInterests","interestsLibor","interests5","interests10","interests15","loanValue","monthlyMaintenance","monthlyAmortization","notaryFees","estimate","total","ownFunds","monthlyTotals","purchaseType","PURCHASE_TYPE","residenceType","RESIDENCE_TYPE","totalValue","canton"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { Meteor } from 'meteor/meteor';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\nimport sinon from 'sinon';\n\nimport { PURCHASE_TYPE } from 'core/api/loans/loanConstants';\nimport { RESIDENCE_TYPE } from 'core/api/properties/propertyConstants';\nimport generator from '../../../../factories';\nimport { TRENDS } from '../../../../constants';\nimport RESTAPI from '../../RESTAPI';\nimport {\n  fetchAndCheckResponse,\n  makeHeaders,\n  getTimestampAndNonce,\n} from '../../test/apiTestHelpers.test';\nimport { mortgageEstimateAPI } from '..';\n\nconst url = '/calculator/mortgage-estimate';\nconst api = new RESTAPI();\napi.addEndpoint(url, 'GET', mortgageEstimateAPI);\n\nconst getResult = ({ expectedResponse, query }) => {\n  const { timestamp, nonce } = getTimestampAndNonce();\n\n  return fetchAndCheckResponse({\n    url,\n    query,\n    data: {\n      method: 'GET',\n      headers: makeHeaders({\n        userId: 'pro',\n        timestamp,\n        nonce,\n        query,\n      }),\n    },\n    expectedResponse,\n  });\n};\n\ndescribe('REST: mortgageEstimate', function () {\n  this.timeout(10000);\n  let now;\n  let clock;\n\n  before(function () {\n    if (Meteor.settings.public.microservice !== 'pro') {\n      this.parent.pending = true;\n      this.skip();\n    } else {\n      api.start();\n    }\n  });\n\n  after(() => {\n    api.reset();\n  });\n\n  beforeEach(() => {\n    resetDatabase();\n    generator({\n      users: [{ _factory: 'pro', _id: 'pro', organisations: [{ _id: 'org' }] }],\n      interestRates: [\n        {\n          date: new Date().toISOString(),\n          interestLibor: {\n            rateLow: 0.005,\n            rateHigh: 0.01,\n            trend: TRENDS.DOWN,\n          },\n          interest5: {\n            rateLow: 0.01,\n            rateHigh: 0.012,\n            trend: TRENDS.UP,\n          },\n          interest10: {\n            rateLow: 0.012,\n            rateHigh: 0.015,\n            trend: TRENDS.FLAT,\n          },\n          interest15: {\n            rateLow: 0.015,\n            rateHigh: 0.02,\n            trend: TRENDS.FLAT,\n          },\n        },\n      ],\n    });\n    now = new Date();\n    clock = sinon.useFakeTimers(now.getTime());\n  });\n\n  afterEach(() => {\n    clock.restore();\n  });\n\n  it('Returns default response if only the propertyValue is given', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200,\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 1000,\n      notaryFees: {\n        estimate: true,\n        total: 60000,\n      },\n      ownFunds: 300000,\n      monthlyTotals: {\n        interestsLibor: 1400,\n        interests5: 1800,\n        interests10: 1960,\n        interests15: 2200,\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1260000,\n    };\n\n    const query = { 'property-value': '1200000' };\n    return getResult({ query, expectedResponse });\n  });\n\n  it('Uses the canton if provided', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200,\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 1000,\n      notaryFees: {\n        canton: 'GE',\n        estimate: false,\n        total: 65273.96,\n      },\n      ownFunds: 305273.96,\n      monthlyTotals: {\n        interestsLibor: 1400,\n        interests5: 1800,\n        interests10: 1960,\n        interests15: 2200,\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1265273.96,\n    };\n\n    const query = { 'property-value': '1200000', canton: 'GE' };\n    return getResult({ query, expectedResponse });\n  });\n\n  it('Uses maintenance if provided', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200,\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 1000,\n      monthlyAmortization: 1000,\n      notaryFees: {\n        estimate: true,\n        total: 60000,\n      },\n      ownFunds: 300000,\n      monthlyTotals: {\n        interestsLibor: 2400,\n        interests5: 2800,\n        interests10: 2960,\n        interests15: 3200,\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1260000,\n    };\n\n    const query = {\n      'property-value': '1200000',\n      'monthly-maintenance': '1000',\n    };\n    return getResult({ query, expectedResponse });\n  });\n\n  it('Uses zipCode if provided', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200,\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 1000,\n      notaryFees: {\n        canton: 'GE',\n        estimate: false,\n        total: 65273.96,\n      },\n      ownFunds: 305273.96,\n      monthlyTotals: {\n        interestsLibor: 1400,\n        interests5: 1800,\n        interests10: 1960,\n        interests15: 2200,\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1265273.96,\n    };\n\n    const query = {\n      'property-value': '1200000',\n      'zip-code': '1201',\n    };\n    return getResult({ query, expectedResponse });\n  });\n\n  it('Uses includeNotaryFees if provided', () => {\n    const expectedResponse = {\n      borrowRatio: 0.8,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 400,\n        interests5: 800,\n        interests10: 960,\n        interests15: 1200,\n      },\n      loanValue: 960000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 1000,\n      ownFunds: 240000,\n      monthlyTotals: {\n        interestsLibor: 1400,\n        interests5: 1800,\n        interests10: 1960,\n        interests15: 2200,\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 1200000,\n    };\n\n    const query = {\n      'property-value': '1200000',\n      'include-notary-fees': 'false',\n    };\n    return getResult({ query, expectedResponse });\n  });\n\n  it('reduces the borrowRatio for expensive properties', () => {\n    const expectedResponse = {\n      borrowRatio: 0.67,\n      date: now.toISOString(),\n      monthlyInterests: {\n        interestsLibor: 1005,\n        interests5: 2010,\n        interests10: 2412,\n        interests15: 3015,\n      },\n      loanValue: 2412000,\n      monthlyMaintenance: 0,\n      monthlyAmortization: 3400,\n      ownFunds: 1188000,\n      monthlyTotals: {\n        interestsLibor: 4405,\n        interests5: 5410,\n        interests10: 5812,\n        interests15: 6415,\n      },\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      residenceType: RESIDENCE_TYPE.MAIN_RESIDENCE,\n      totalValue: 3600000,\n    };\n\n    const query = {\n      'property-value': '3600000',\n      'include-notary-fees': 'false',\n    };\n    return getResult({ query, expectedResponse });\n  });\n});\n"]},"sourceType":"script","hash":"5a9c23507c5c569475d2b5caf4ed861dfe5a4086"}
