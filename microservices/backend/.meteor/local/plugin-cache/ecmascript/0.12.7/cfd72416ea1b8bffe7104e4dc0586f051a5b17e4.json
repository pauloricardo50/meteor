{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/test/getPropertyLoans.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/test/getPropertyLoans.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/test/getPropertyLoans.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/test/getPropertyLoans.test.js"],"names":["Meteor","resetDatabase","expect","PropertyService","generator","RESTAPI","getPropertyLoansAPI","fetchAndCheckResponse","makeHeaders","getTimestampAndNonce","PROPERTY_CATEGORY","PROPERTY_PERMISSIONS_FULL_ACCESS","HTTP_STATUS_CODES","api","addEndpoint","getPropertyLoans","propertyId","userId","impersonateUser","timestamp","nonce","query","url","data","method","headers","makeCustomers","count","Array","map","_","index","_id","referredByUserLink","referredByOrganisationLink","loans","propertyIds","describe","timeout","before","settings","public","microservice","parent","pending","skip","start","after","reset","beforeEach","users","_factory","organisations","emails","address","verified","proProperties","externalId","category","PRO","it","setProUserPermissions","permissions","then","length","to","equal","every","solvent","addProUser","displayCustomersNames","user","name","response","deep","status","message","NOT_FOUND","include"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { Meteor } from 'meteor/meteor';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\nimport { expect } from 'chai';\n\nimport PropertyService from '../../../../properties/server/PropertyService';\nimport generator from '../../../../factories/index';\nimport RESTAPI from '../../RESTAPI';\nimport getPropertyLoansAPI from '../getPropertyLoans';\nimport {\n  fetchAndCheckResponse,\n  makeHeaders,\n  getTimestampAndNonce,\n} from '../../test/apiTestHelpers.test';\nimport {\n  PROPERTY_CATEGORY,\n  PROPERTY_PERMISSIONS_FULL_ACCESS,\n} from '../../../../constants';\nimport { HTTP_STATUS_CODES } from '../../restApiConstants';\n\nconst api = new RESTAPI();\napi.addEndpoint('/properties/:propertyId/loans', 'GET', getPropertyLoansAPI);\n\nconst getPropertyLoans = ({ propertyId, userId, impersonateUser }) => {\n  const { timestamp, nonce } = getTimestampAndNonce();\n  const query = impersonateUser && { 'impersonate-user': impersonateUser };\n  return fetchAndCheckResponse({\n    url: `/properties/${propertyId}/loans`,\n    query,\n    data: {\n      method: 'GET',\n      headers: makeHeaders({\n        userId,\n        timestamp,\n        nonce,\n        query,\n      }),\n    },\n  });\n};\n\nconst makeCustomers = count =>\n  [...Array(count)].map((_, index) => ({\n    _id: `user${index}`,\n    referredByUserLink: 'pro',\n    referredByOrganisationLink: 'org',\n    loans: [{ _id: `loan${index}`, propertyIds: ['property'] }],\n  }));\n\ndescribe('REST: getPropertyLoans', function () {\n  this.timeout(10000);\n\n  before(function () {\n    if (Meteor.settings.public.microservice !== 'pro') {\n      this.parent.pending = true;\n      this.skip();\n    } else {\n      api.start();\n    }\n  });\n\n  after(() => {\n    api.reset();\n  });\n\n  beforeEach(() => {\n    resetDatabase();\n    generator({\n      users: [\n        {\n          _factory: 'pro',\n          _id: 'pro',\n          organisations: [{ _id: 'org' }],\n        },\n        {\n          _factory: 'pro',\n          _id: 'pro2',\n          organisations: [{ _id: 'org' }],\n          emails: [{ address: 'pro2@org.com', verified: true }],\n          proProperties: [\n            {\n              _id: 'property',\n              externalId: 'extId',\n              category: PROPERTY_CATEGORY.PRO,\n            },\n          ],\n        },\n        {\n          _factory: 'pro',\n          _id: 'pro3',\n          organisations: [{ _id: 'org2' }],\n        },\n      ],\n    });\n  });\n\n  it('returns property loans', () => {\n    PropertyService.setProUserPermissions({\n      propertyId: 'property',\n      userId: 'pro2',\n      permissions: PROPERTY_PERMISSIONS_FULL_ACCESS,\n    });\n    generator({ users: makeCustomers(5) });\n    return getPropertyLoans({\n      propertyId: 'property',\n      userId: 'pro',\n      impersonateUser: 'pro2@org.com',\n    }).then((loans) => {\n      expect(loans.length).to.equal(5);\n      expect(loans.every(({ solvent }) => !!solvent)).to.equal(true);\n    });\n  });\n\n  it('returns property anonymized loans', () => {\n    PropertyService.addProUser({ propertyId: 'property', userId: 'pro3' });\n    PropertyService.setProUserPermissions({\n      propertyId: 'property',\n      userId: 'pro3',\n      permissions: { displayCustomersNames: false },\n    });\n    generator({ users: makeCustomers(5) });\n    return getPropertyLoans({ propertyId: 'property', userId: 'pro3' }).then((loans) => {\n      expect(loans.length).to.equal(5);\n      expect(loans.every(({ user }) => user.name === 'XXX')).to.equal(true);\n      expect(loans.every(({ solvent }) => !solvent)).to.equal(true);\n    });\n  });\n\n  it('returns an error if user has no access to property', () => {\n    generator({ users: makeCustomers(5) });\n    return getPropertyLoans({ propertyId: 'property', userId: 'pro3' }).then((response) => {\n      expect(response).to.deep.equal({\n        status: 400,\n        message:\n            \"Vous n'avez pas accès à ce bien immobilier [NOT_AUTHORIZED]\",\n      });\n    });\n  });\n\n  it('returns property loans', () => {\n    PropertyService.setProUserPermissions({\n      propertyId: 'property',\n      userId: 'pro2',\n      permissions: PROPERTY_PERMISSIONS_FULL_ACCESS,\n    });\n    generator({ users: makeCustomers(5) });\n    return getPropertyLoans({\n      propertyId: 'extId',\n      userId: 'pro',\n      impersonateUser: 'pro2@org.com',\n    }).then((loans) => {\n      expect(loans.length).to.equal(5);\n      expect(loans.every(({ solvent }) => !!solvent)).to.equal(true);\n    });\n  });\n\n  it('fails when property does not exist', () => {\n    generator({ users: makeCustomers(5) });\n    return getPropertyLoans({\n      propertyId: '12345',\n      userId: 'pro',\n      impersonateUser: 'pro2@org.com',\n    }).then((response) => {\n      expect(response.status).to.equal(HTTP_STATUS_CODES.NOT_FOUND);\n      expect(response.message).to.include('not found');\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/test/getPropertyLoans.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/test/getPropertyLoans.test.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 1);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 2);\nlet PropertyService;\nmodule.link(\"../../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 3);\nlet generator;\nmodule.link(\"../../../../factories/index\", {\n  default(v) {\n    generator = v;\n  }\n\n}, 4);\nlet RESTAPI;\nmodule.link(\"../../RESTAPI\", {\n  default(v) {\n    RESTAPI = v;\n  }\n\n}, 5);\nlet getPropertyLoansAPI;\nmodule.link(\"../getPropertyLoans\", {\n  default(v) {\n    getPropertyLoansAPI = v;\n  }\n\n}, 6);\nlet fetchAndCheckResponse, makeHeaders, getTimestampAndNonce;\nmodule.link(\"../../test/apiTestHelpers.test\", {\n  fetchAndCheckResponse(v) {\n    fetchAndCheckResponse = v;\n  },\n\n  makeHeaders(v) {\n    makeHeaders = v;\n  },\n\n  getTimestampAndNonce(v) {\n    getTimestampAndNonce = v;\n  }\n\n}, 7);\nlet PROPERTY_CATEGORY, PROPERTY_PERMISSIONS_FULL_ACCESS;\nmodule.link(\"../../../../constants\", {\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  },\n\n  PROPERTY_PERMISSIONS_FULL_ACCESS(v) {\n    PROPERTY_PERMISSIONS_FULL_ACCESS = v;\n  }\n\n}, 8);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../../restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 9);\nconst api = new RESTAPI();\napi.addEndpoint('/properties/:propertyId/loans', 'GET', getPropertyLoansAPI);\n\nconst getPropertyLoans = ({\n  propertyId,\n  userId,\n  impersonateUser\n}) => {\n  const {\n    timestamp,\n    nonce\n  } = getTimestampAndNonce();\n  const query = impersonateUser && {\n    'impersonate-user': impersonateUser\n  };\n  return fetchAndCheckResponse({\n    url: `/properties/${propertyId}/loans`,\n    query,\n    data: {\n      method: 'GET',\n      headers: makeHeaders({\n        userId,\n        timestamp,\n        nonce,\n        query\n      })\n    }\n  });\n};\n\nconst makeCustomers = count => [...Array(count)].map((_, index) => ({\n  _id: `user${index}`,\n  referredByUserLink: 'pro',\n  referredByOrganisationLink: 'org',\n  loans: [{\n    _id: `loan${index}`,\n    propertyIds: ['property']\n  }]\n}));\n\ndescribe('REST: getPropertyLoans', function () {\n  this.timeout(10000);\n  before(function () {\n    if (Meteor.settings.public.microservice !== 'pro') {\n      this.parent.pending = true;\n      this.skip();\n    } else {\n      api.start();\n    }\n  });\n  after(() => {\n    api.reset();\n  });\n  beforeEach(() => {\n    resetDatabase();\n    generator({\n      users: [{\n        _factory: 'pro',\n        _id: 'pro',\n        organisations: [{\n          _id: 'org'\n        }]\n      }, {\n        _factory: 'pro',\n        _id: 'pro2',\n        organisations: [{\n          _id: 'org'\n        }],\n        emails: [{\n          address: 'pro2@org.com',\n          verified: true\n        }],\n        proProperties: [{\n          _id: 'property',\n          externalId: 'extId',\n          category: PROPERTY_CATEGORY.PRO\n        }]\n      }, {\n        _factory: 'pro',\n        _id: 'pro3',\n        organisations: [{\n          _id: 'org2'\n        }]\n      }]\n    });\n  });\n  it('returns property loans', () => {\n    PropertyService.setProUserPermissions({\n      propertyId: 'property',\n      userId: 'pro2',\n      permissions: PROPERTY_PERMISSIONS_FULL_ACCESS\n    });\n    generator({\n      users: makeCustomers(5)\n    });\n    return getPropertyLoans({\n      propertyId: 'property',\n      userId: 'pro',\n      impersonateUser: 'pro2@org.com'\n    }).then(loans => {\n      expect(loans.length).to.equal(5);\n      expect(loans.every(({\n        solvent\n      }) => !!solvent)).to.equal(true);\n    });\n  });\n  it('returns property anonymized loans', () => {\n    PropertyService.addProUser({\n      propertyId: 'property',\n      userId: 'pro3'\n    });\n    PropertyService.setProUserPermissions({\n      propertyId: 'property',\n      userId: 'pro3',\n      permissions: {\n        displayCustomersNames: false\n      }\n    });\n    generator({\n      users: makeCustomers(5)\n    });\n    return getPropertyLoans({\n      propertyId: 'property',\n      userId: 'pro3'\n    }).then(loans => {\n      expect(loans.length).to.equal(5);\n      expect(loans.every(({\n        user\n      }) => user.name === 'XXX')).to.equal(true);\n      expect(loans.every(({\n        solvent\n      }) => !solvent)).to.equal(true);\n    });\n  });\n  it('returns an error if user has no access to property', () => {\n    generator({\n      users: makeCustomers(5)\n    });\n    return getPropertyLoans({\n      propertyId: 'property',\n      userId: 'pro3'\n    }).then(response => {\n      expect(response).to.deep.equal({\n        status: 400,\n        message: \"Vous n'avez pas accès à ce bien immobilier [NOT_AUTHORIZED]\"\n      });\n    });\n  });\n  it('returns property loans', () => {\n    PropertyService.setProUserPermissions({\n      propertyId: 'property',\n      userId: 'pro2',\n      permissions: PROPERTY_PERMISSIONS_FULL_ACCESS\n    });\n    generator({\n      users: makeCustomers(5)\n    });\n    return getPropertyLoans({\n      propertyId: 'extId',\n      userId: 'pro',\n      impersonateUser: 'pro2@org.com'\n    }).then(loans => {\n      expect(loans.length).to.equal(5);\n      expect(loans.every(({\n        solvent\n      }) => !!solvent)).to.equal(true);\n    });\n  });\n  it('fails when property does not exist', () => {\n    generator({\n      users: makeCustomers(5)\n    });\n    return getPropertyLoans({\n      propertyId: '12345',\n      userId: 'pro',\n      impersonateUser: 'pro2@org.com'\n    }).then(response => {\n      expect(response.status).to.equal(HTTP_STATUS_CODES.NOT_FOUND);\n      expect(response.message).to.include('not found');\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/test/getPropertyLoans.test.js"],"names":["api","getPropertyLoans","impersonateUser","nonce","getTimestampAndNonce","query","fetchAndCheckResponse","url","propertyId","data","method","headers","makeHeaders","makeCustomers","count","Array","_id","index","referredByUserLink","referredByOrganisationLink","loans","propertyIds","describe","before","Meteor","after","beforeEach","resetDatabase","generator","users","_factory","organisations","emails","address","verified","proProperties","externalId","category","PROPERTY_CATEGORY","PRO","it","PropertyService","userId","permissions","PROPERTY_PERMISSIONS_FULL_ACCESS","expect","solvent","displayCustomersNames","user","response","status","message","HTTP_STATUS_CODES"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { Meteor } from 'meteor/meteor';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\nimport { expect } from 'chai';\n\nimport PropertyService from '../../../../properties/server/PropertyService';\nimport generator from '../../../../factories/index';\nimport RESTAPI from '../../RESTAPI';\nimport getPropertyLoansAPI from '../getPropertyLoans';\nimport {\n  fetchAndCheckResponse,\n  makeHeaders,\n  getTimestampAndNonce,\n} from '../../test/apiTestHelpers.test';\nimport {\n  PROPERTY_CATEGORY,\n  PROPERTY_PERMISSIONS_FULL_ACCESS,\n} from '../../../../constants';\nimport { HTTP_STATUS_CODES } from '../../restApiConstants';\n\nconst api = new RESTAPI();\napi.addEndpoint('/properties/:propertyId/loans', 'GET', getPropertyLoansAPI);\n\nconst getPropertyLoans = ({ propertyId, userId, impersonateUser }) => {\n  const { timestamp, nonce } = getTimestampAndNonce();\n  const query = impersonateUser && { 'impersonate-user': impersonateUser };\n  return fetchAndCheckResponse({\n    url: `/properties/${propertyId}/loans`,\n    query,\n    data: {\n      method: 'GET',\n      headers: makeHeaders({\n        userId,\n        timestamp,\n        nonce,\n        query,\n      }),\n    },\n  });\n};\n\nconst makeCustomers = count =>\n  [...Array(count)].map((_, index) => ({\n    _id: `user${index}`,\n    referredByUserLink: 'pro',\n    referredByOrganisationLink: 'org',\n    loans: [{ _id: `loan${index}`, propertyIds: ['property'] }],\n  }));\n\ndescribe('REST: getPropertyLoans', function () {\n  this.timeout(10000);\n\n  before(function () {\n    if (Meteor.settings.public.microservice !== 'pro') {\n      this.parent.pending = true;\n      this.skip();\n    } else {\n      api.start();\n    }\n  });\n\n  after(() => {\n    api.reset();\n  });\n\n  beforeEach(() => {\n    resetDatabase();\n    generator({\n      users: [\n        {\n          _factory: 'pro',\n          _id: 'pro',\n          organisations: [{ _id: 'org' }],\n        },\n        {\n          _factory: 'pro',\n          _id: 'pro2',\n          organisations: [{ _id: 'org' }],\n          emails: [{ address: 'pro2@org.com', verified: true }],\n          proProperties: [\n            {\n              _id: 'property',\n              externalId: 'extId',\n              category: PROPERTY_CATEGORY.PRO,\n            },\n          ],\n        },\n        {\n          _factory: 'pro',\n          _id: 'pro3',\n          organisations: [{ _id: 'org2' }],\n        },\n      ],\n    });\n  });\n\n  it('returns property loans', () => {\n    PropertyService.setProUserPermissions({\n      propertyId: 'property',\n      userId: 'pro2',\n      permissions: PROPERTY_PERMISSIONS_FULL_ACCESS,\n    });\n    generator({ users: makeCustomers(5) });\n    return getPropertyLoans({\n      propertyId: 'property',\n      userId: 'pro',\n      impersonateUser: 'pro2@org.com',\n    }).then((loans) => {\n      expect(loans.length).to.equal(5);\n      expect(loans.every(({ solvent }) => !!solvent)).to.equal(true);\n    });\n  });\n\n  it('returns property anonymized loans', () => {\n    PropertyService.addProUser({ propertyId: 'property', userId: 'pro3' });\n    PropertyService.setProUserPermissions({\n      propertyId: 'property',\n      userId: 'pro3',\n      permissions: { displayCustomersNames: false },\n    });\n    generator({ users: makeCustomers(5) });\n    return getPropertyLoans({ propertyId: 'property', userId: 'pro3' }).then((loans) => {\n      expect(loans.length).to.equal(5);\n      expect(loans.every(({ user }) => user.name === 'XXX')).to.equal(true);\n      expect(loans.every(({ solvent }) => !solvent)).to.equal(true);\n    });\n  });\n\n  it('returns an error if user has no access to property', () => {\n    generator({ users: makeCustomers(5) });\n    return getPropertyLoans({ propertyId: 'property', userId: 'pro3' }).then((response) => {\n      expect(response).to.deep.equal({\n        status: 400,\n        message:\n            \"Vous n'avez pas accès à ce bien immobilier [NOT_AUTHORIZED]\",\n      });\n    });\n  });\n\n  it('returns property loans', () => {\n    PropertyService.setProUserPermissions({\n      propertyId: 'property',\n      userId: 'pro2',\n      permissions: PROPERTY_PERMISSIONS_FULL_ACCESS,\n    });\n    generator({ users: makeCustomers(5) });\n    return getPropertyLoans({\n      propertyId: 'extId',\n      userId: 'pro',\n      impersonateUser: 'pro2@org.com',\n    }).then((loans) => {\n      expect(loans.length).to.equal(5);\n      expect(loans.every(({ solvent }) => !!solvent)).to.equal(true);\n    });\n  });\n\n  it('fails when property does not exist', () => {\n    generator({ users: makeCustomers(5) });\n    return getPropertyLoans({\n      propertyId: '12345',\n      userId: 'pro',\n      impersonateUser: 'pro2@org.com',\n    }).then((response) => {\n      expect(response.status).to.equal(HTTP_STATUS_CODES.NOT_FOUND);\n      expect(response.message).to.include('not found');\n    });\n  });\n});\n"]},"sourceType":"script","hash":"cfd72416ea1b8bffe7104e4dc0586f051a5b17e4"}
