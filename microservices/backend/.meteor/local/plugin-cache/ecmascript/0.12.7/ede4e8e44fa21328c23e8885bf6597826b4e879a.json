{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/17.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/migrations/server/17.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/17.js","inputSourceMap":{"version":3,"sources":["imports/core/api/migrations/server/17.js"],"names":["Migrations","ACTIVITY_TYPES","ActivityService","LoanService","up","allLoans","fetch","createdAt","closingDate","signingDate","user","assignedEmployeeId","Promise","all","map","_id","assignee","addCreatedAtActivity","loanLink","title","insert","date","type","EVENT","createdBy","baseUpdate","$unset","down","add","version","name"],"mappings":"AAAA,SAASA,UAAT,QAA2B,6BAA3B;AAEA,SAASC,cAAT;AACA,OAAOC,eAAP;AACA,OAAOC,WAAP;AAEA,OAAO,MAAMC,EAAE,GAAG,YAAY;AAC5B,QAAMC,QAAQ,GAAGF,WAAW,CAACG,KAAZ,CAAkB;AACjCC,IAAAA,SAAS,EAAE,CADsB;AAEjCC,IAAAA,WAAW,EAAE,CAFoB;AAGjCC,IAAAA,WAAW,EAAE,CAHoB;AAIjCC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB;AAJ2B,GAAlB,CAAjB;AAOA,QAAMC,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACS,GAAT,CAAa,CAAC;AAAEP,IAAAA,SAAF;AAAaQ,IAAAA,GAAb;AAAkBN,IAAAA,WAAlB;AAA+BD,IAAAA,WAA/B;AAA4CE,IAAAA,IAAI,GAAG;AAAnD,GAAD,KAA6D;AAC1F,UAAMM,QAAQ,GAAGN,IAAI,CAACC,kBAAtB;AACAT,IAAAA,eAAe,CAACe,oBAAhB,CAAqC;AACnCV,MAAAA,SADmC;AAEnCW,MAAAA,QAAQ,EAAE;AAAEH,QAAAA;AAAF,OAFyB;AAGnCI,MAAAA,KAAK,EAAE;AAH4B,KAArC;;AAMA,QAAIV,WAAJ,EAAiB;AACfP,MAAAA,eAAe,CAACkB,MAAhB,CAAuB;AACrBD,QAAAA,KAAK,EAAE,WADc;AAErBE,QAAAA,IAAI,EAAEZ,WAFe;AAGrBa,QAAAA,IAAI,EAAErB,cAAc,CAACsB,KAHA;AAIrBC,QAAAA,SAAS,EAAER,QAJU;AAKrBE,QAAAA,QAAQ,EAAE;AAAEH,UAAAA;AAAF;AALW,OAAvB;AAOD;;AAED,QAAIP,WAAJ,EAAiB;AACfN,MAAAA,eAAe,CAACkB,MAAhB,CAAuB;AACrBD,QAAAA,KAAK,EAAE,SADc;AAErBE,QAAAA,IAAI,EAAEb,WAFe;AAGrBc,QAAAA,IAAI,EAAErB,cAAc,CAACsB,KAHA;AAIrBC,QAAAA,SAAS,EAAER,QAJU;AAKrBE,QAAAA,QAAQ,EAAE;AAAEH,UAAAA;AAAF;AALW,OAAvB;AAOD;;AAEDZ,IAAAA,WAAW,CAACsB,UAAZ,CAAuBV,GAAvB,EAA4B;AAC1BW,MAAAA,MAAM,EAAE;AAAElB,QAAAA,WAAW,EAAE,CAAf;AAAkBC,QAAAA,WAAW,EAAE;AAA/B;AADkB,KAA5B;AAGD,GA/BiB,CAAZ,CAAN;AAgCD,CAxCM,C,CA0CP;;AACA,OAAO,MAAMkB,IAAI,GAAG,MAAM,CAAE,CAArB;AAEP3B,UAAU,CAAC4B,GAAX,CAAe;AACbC,EAAAA,OAAO,EAAE,EADI;AAEbC,EAAAA,IAAI,EAAE,mDAFO;AAGb1B,EAAAA,EAHa;AAIbuB,EAAAA;AAJa,CAAf","sourcesContent":["import { Migrations } from 'meteor/percolate:migrations';\n\nimport { ACTIVITY_TYPES } from '../../activities/activityConstants';\nimport ActivityService from '../../activities/server/ActivityService';\nimport LoanService from '../../loans/server/LoanService';\n\nexport const up = async () => {\n  const allLoans = LoanService.fetch({\n    createdAt: 1,\n    closingDate: 1,\n    signingDate: 1,\n    user: { assignedEmployeeId: 1 },\n  });\n\n  await Promise.all(allLoans.map(({ createdAt, _id, signingDate, closingDate, user = {} }) => {\n    const assignee = user.assignedEmployeeId;\n    ActivityService.addCreatedAtActivity({\n      createdAt,\n      loanLink: { _id },\n      title: 'Dossier créé',\n    });\n\n    if (signingDate) {\n      ActivityService.insert({\n        title: 'Signature',\n        date: signingDate,\n        type: ACTIVITY_TYPES.EVENT,\n        createdBy: assignee,\n        loanLink: { _id },\n      });\n    }\n\n    if (closingDate) {\n      ActivityService.insert({\n        title: 'Closing',\n        date: closingDate,\n        type: ACTIVITY_TYPES.EVENT,\n        createdBy: assignee,\n        loanLink: { _id },\n      });\n    }\n\n    LoanService.baseUpdate(_id, {\n      $unset: { closingDate: 1, signingDate: 1 },\n    });\n  }));\n};\n\n// No need to migrate back\nexport const down = () => {};\n\nMigrations.add({\n  version: 17,\n  name: 'Add activities and remove closing + signing dates',\n  up,\n  down,\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/17.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/migrations/server/17.js"}},"code":"module.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet ACTIVITY_TYPES;\nmodule.link(\"../../activities/activityConstants\", {\n  ACTIVITY_TYPES(v) {\n    ACTIVITY_TYPES = v;\n  }\n\n}, 1);\nlet ActivityService;\nmodule.link(\"../../activities/server/ActivityService\", {\n  default(v) {\n    ActivityService = v;\n  }\n\n}, 2);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 3);\n\nconst up = () => Promise.asyncApply(() => {\n  const allLoans = LoanService.fetch({\n    createdAt: 1,\n    closingDate: 1,\n    signingDate: 1,\n    user: {\n      assignedEmployeeId: 1\n    }\n  });\n  Promise.await(Promise.all(allLoans.map(({\n    createdAt,\n    _id,\n    signingDate,\n    closingDate,\n    user = {}\n  }) => {\n    const assignee = user.assignedEmployeeId;\n    ActivityService.addCreatedAtActivity({\n      createdAt,\n      loanLink: {\n        _id\n      },\n      title: 'Dossier créé'\n    });\n\n    if (signingDate) {\n      ActivityService.insert({\n        title: 'Signature',\n        date: signingDate,\n        type: ACTIVITY_TYPES.EVENT,\n        createdBy: assignee,\n        loanLink: {\n          _id\n        }\n      });\n    }\n\n    if (closingDate) {\n      ActivityService.insert({\n        title: 'Closing',\n        date: closingDate,\n        type: ACTIVITY_TYPES.EVENT,\n        createdBy: assignee,\n        loanLink: {\n          _id\n        }\n      });\n    }\n\n    LoanService.baseUpdate(_id, {\n      $unset: {\n        closingDate: 1,\n        signingDate: 1\n      }\n    });\n  })));\n});\n\nconst down = () => {};\n\nMigrations.add({\n  version: 17,\n  name: 'Add activities and remove closing + signing dates',\n  up,\n  down\n});","map":{"version":3,"sources":["imports/core/api/migrations/server/17.js"],"names":["Migrations","up","allLoans","createdAt","closingDate","signingDate","user","assignedEmployeeId","assignee","ActivityService","loanLink","_id","title","date","type","ACTIVITY_TYPES","createdBy","LoanService","$unset","down","version","name"],"mappings":"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","sourcesContent":["import { Migrations } from 'meteor/percolate:migrations';\n\nimport { ACTIVITY_TYPES } from '../../activities/activityConstants';\nimport ActivityService from '../../activities/server/ActivityService';\nimport LoanService from '../../loans/server/LoanService';\n\nexport const up = async () => {\n  const allLoans = LoanService.fetch({\n    createdAt: 1,\n    closingDate: 1,\n    signingDate: 1,\n    user: { assignedEmployeeId: 1 },\n  });\n\n  await Promise.all(allLoans.map(({ createdAt, _id, signingDate, closingDate, user = {} }) => {\n    const assignee = user.assignedEmployeeId;\n    ActivityService.addCreatedAtActivity({\n      createdAt,\n      loanLink: { _id },\n      title: 'Dossier créé',\n    });\n\n    if (signingDate) {\n      ActivityService.insert({\n        title: 'Signature',\n        date: signingDate,\n        type: ACTIVITY_TYPES.EVENT,\n        createdBy: assignee,\n        loanLink: { _id },\n      });\n    }\n\n    if (closingDate) {\n      ActivityService.insert({\n        title: 'Closing',\n        date: closingDate,\n        type: ACTIVITY_TYPES.EVENT,\n        createdBy: assignee,\n        loanLink: { _id },\n      });\n    }\n\n    LoanService.baseUpdate(_id, {\n      $unset: { closingDate: 1, signingDate: 1 },\n    });\n  }));\n};\n\n// No need to migrate back\nexport const down = () => {};\n\nMigrations.add({\n  version: 17,\n  name: 'Add activities and remove closing + signing dates',\n  up,\n  down,\n});\n"]},"sourceType":"script","hash":"ede4e8e44fa21328c23e8885bf6597826b4e879a"}
