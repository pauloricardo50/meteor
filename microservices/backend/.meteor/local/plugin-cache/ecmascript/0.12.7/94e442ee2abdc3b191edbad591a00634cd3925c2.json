{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/containers/withMatchParam.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/containers/withMatchParam.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/containers/withMatchParam.js","inputSourceMap":{"version":3,"sources":["imports/core/containers/withMatchParam.js"],"names":["withRouter","matchPath","isArray","compose","mapProps","paramName","path","passProps","match","history","location","rest","realMatch","pathname","exact","strict","reduce","acc","param","params","paramNameFromProps"],"mappings":"AAAA;AACA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,WAAlC,C,CAEA;AACA;AACA;;AACA,gBAAe,CACbC,SAAS,EAAE,SAAS,QAAT,IAAqB,MAAM,MAA3B,CADE,EAEbC,IAFa,EAGb;AAAEC,EAAAA;AAAF,IAAgB,EAHH,KAKbJ,OAAO,CACLH,UADK,EAELI,QAAQ,CAAC,CAAC;AAAEI,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,QAAlB;AAA4B,KAAGC;AAA/B,CAAD,KAA2C;AAClD,MAAIC,SAAJ;;AACA,MAAIN,IAAJ,EAAU;AACRM,IAAAA,SAAS,GAAGX,SAAS,CAACQ,OAAO,CAACC,QAAR,CAAiBG,QAAlB,EAA4B;AAC/CP,MAAAA,IAD+C;AAE/CQ,MAAAA,KAAK,EAAE,KAFwC;AAG/CC,MAAAA,MAAM,EAAE;AAHuC,KAA5B,CAArB;AAKD,GAND,MAMO;AACLH,IAAAA,SAAS,GAAGJ,KAAZ;AACD;;AAED,MAAI,CAACI,SAAL,EAAgB;AACd,WAAO,EAAE,GAAGD;AAAL,KAAP;AACD;;AAED,MAAIT,OAAO,CAACG,SAAD,CAAX,EAAwB;AACtB,WAAOA,SAAS,CAACW,MAAV,CACL,CAACC,GAAD,EAAMC,KAAN,MAAiB,EAAE,GAAGD,GAAL;AAAU,OAACC,KAAD,GAASN,SAAS,CAACO,MAAV,CAAiBD,KAAjB;AAAnB,KAAjB,CADK,EAEL,EAAE,GAAGP;AAAL,KAFK,CAAP;AAID;;AAED,MAAI,OAAON,SAAP,KAAqB,UAAzB,EAAqC;AACnC,UAAMe,kBAAkB,GAAGf,SAAS,CAACM,IAAD,CAApC;AACA,WAAO;AACL,OAACS,kBAAD,GAAsBR,SAAS,CAACO,MAAV,CAAiBC,kBAAjB,CADjB;AAEL,SAAGT;AAFE,KAAP;AAID;;AAED,MAAIJ,SAAJ,EAAe;AACb,WAAO;AACLC,MAAAA,KADK;AAELC,MAAAA,OAFK;AAGLC,MAAAA,QAHK;AAIL,OAACL,SAAD,GAAaO,SAAS,CAACO,MAAV,CAAiBd,SAAjB,CAJR;AAKL,SAAGM;AALE,KAAP;AAOD;;AAED,SAAO;AAAE,KAACN,SAAD,GAAaO,SAAS,CAACO,MAAV,CAAiBd,SAAjB,CAAf;AAA4C,OAAGM;AAA/C,GAAP;AACD,CA1CO,CAFH,CALT","sourcesContent":["// @flow\nimport { withRouter, matchPath } from 'react-router-dom';\nimport isArray from 'lodash/isArray';\nimport { compose, mapProps } from 'recompose';\n\n// Lets you pass a param as a string, or an array of params, and you will get\n// them as simple props from react-router, instead of drilling down\n// match.params.paramName\nexport default (\n  paramName: string | string[] | (() => string),\n  path,\n  { passProps } = {},\n) =>\n  compose(\n    withRouter,\n    mapProps(({ match, history, location, ...rest }) => {\n      let realMatch;\n      if (path) {\n        realMatch = matchPath(history.location.pathname, {\n          path,\n          exact: false,\n          strict: false,\n        });\n      } else {\n        realMatch = match;\n      }\n\n      if (!realMatch) {\n        return { ...rest };\n      }\n\n      if (isArray(paramName)) {\n        return paramName.reduce(\n          (acc, param) => ({ ...acc, [param]: realMatch.params[param] }),\n          { ...rest },\n        );\n      }\n\n      if (typeof paramName === 'function') {\n        const paramNameFromProps = paramName(rest);\n        return {\n          [paramNameFromProps]: realMatch.params[paramNameFromProps],\n          ...rest,\n        };\n      }\n\n      if (passProps) {\n        return {\n          match,\n          history,\n          location,\n          [paramName]: realMatch.params[paramName],\n          ...rest,\n        };\n      }\n\n      return { [paramName]: realMatch.params[paramName], ...rest };\n    }),\n  );\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/containers/withMatchParam.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/containers/withMatchParam.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet withRouter, matchPath;\nmodule.link(\"react-router-dom\", {\n  withRouter(v) {\n    withRouter = v;\n  },\n\n  matchPath(v) {\n    matchPath = v;\n  }\n\n}, 0);\nlet isArray;\nmodule.link(\"lodash/isArray\", {\n  default(v) {\n    isArray = v;\n  }\n\n}, 1);\nlet compose, mapProps;\nmodule.link(\"recompose\", {\n  compose(v) {\n    compose = v;\n  },\n\n  mapProps(v) {\n    mapProps = v;\n  }\n\n}, 2);\nmodule.exportDefault((paramName, path, {\n  passProps\n} = {}) => compose(withRouter, mapProps((_ref) => {\n  let {\n    match,\n    history,\n    location\n  } = _ref,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"match\", \"history\", \"location\"]);\n  let realMatch;\n\n  if (path) {\n    realMatch = matchPath(history.location.pathname, {\n      path,\n      exact: false,\n      strict: false\n    });\n  } else {\n    realMatch = match;\n  }\n\n  if (!realMatch) {\n    return (0, _objectSpread2.default)({}, rest);\n  }\n\n  if (isArray(paramName)) {\n    return paramName.reduce((acc, param) => (0, _objectSpread2.default)({}, acc, {\n      [param]: realMatch.params[param]\n    }), (0, _objectSpread2.default)({}, rest));\n  }\n\n  if (typeof paramName === 'function') {\n    const paramNameFromProps = paramName(rest);\n    return (0, _objectSpread2.default)({\n      [paramNameFromProps]: realMatch.params[paramNameFromProps]\n    }, rest);\n  }\n\n  if (passProps) {\n    return (0, _objectSpread2.default)({\n      match,\n      history,\n      location,\n      [paramName]: realMatch.params[paramName]\n    }, rest);\n  }\n\n  return (0, _objectSpread2.default)({\n    [paramName]: realMatch.params[paramName]\n  }, rest);\n})));","map":{"version":3,"sources":["imports/core/containers/withMatchParam.js"],"names":["passProps","compose","mapProps","rest","realMatch","matchPath","history","exact","strict","isArray","paramNameFromProps","paramName"],"mappings":";;;;;;AAAA,IAAA,UAAA,EAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA,EAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,MAAA,CAAA,aAAA,CAQe,CAAA,SAAA,EAAA,IAAA,EAGb;AAAEA,EAAAA;AAAF,IAHa,EAAA,KAKbC,OAAO,CAAA,UAAA,EAELC,QAAQ,CAAC,UAA2C;AAAA,MAA1C;AAAA,IAAA,KAAA;AAAA,IAAA,OAAA;AAAA,IAAA;AAAA,GAA0C;AAAA,MAAXC,IAAW;AAClD,MAAA,SAAA;;AACA,MAAA,IAAA,EAAU;AACRC,IAAAA,SAAS,GAAGC,SAAS,CAACC,OAAO,CAAPA,QAAAA,CAAD,QAAA,EAA4B;AAAA,MAAA,IAAA;AAE/CC,MAAAA,KAAK,EAF0C,KAAA;AAG/CC,MAAAA,MAAM,EAAE;AAHuC,KAA5B,CAArBJ;AADF,GAAA,MAMO;AACLA,IAAAA,SAAS,GAATA,KAAAA;AACD;;AAED,MAAI,CAAJ,SAAA,EAAgB;AACd,2CAAYD,IAAZ;AACD;;AAED,MAAIM,OAAO,CAAX,SAAW,CAAX,EAAwB;AACtB,WAAO,SAAS,CAAT,MAAA,CACL,CAAA,GAAA,EAAA,KAAA,qCAAiB,GAAjB;AAA2B,OAAA,KAAA,GAASL,SAAS,CAATA,MAAAA,CAAAA,KAAAA;AAApC,MADK,kCAEAD,IAFA,EAAP;AAID;;AAED,MAAI,OAAA,SAAA,KAAJ,UAAA,EAAqC;AACnC,UAAMO,kBAAkB,GAAGC,SAAS,CAApC,IAAoC,CAApC;AACA;AACE,OAAA,kBAAA,GAAsBP,SAAS,CAATA,MAAAA,CADjB,kBACiBA;AADxB,OAEKD,IAFL;AAID;;AAED,MAAA,SAAA,EAAe;AACb;AAAO,MAAA,KAAP;AAAO,MAAA,OAAP;AAAO,MAAA,QAAP;AAIE,OAAA,SAAA,GAAaC,SAAS,CAATA,MAAAA,CAJR,SAIQA;AAJf,OAKKD,IALL;AAOD;;AAED;AAAS,KAAA,SAAA,GAAaC,SAAS,CAATA,MAAAA,CAAf,SAAeA;AAAtB,KAAsDD,IAAtD;AAhDN,CAOY,CAFH,CAbT","sourcesContent":["// @flow\nimport { withRouter, matchPath } from 'react-router-dom';\nimport isArray from 'lodash/isArray';\nimport { compose, mapProps } from 'recompose';\n\n// Lets you pass a param as a string, or an array of params, and you will get\n// them as simple props from react-router, instead of drilling down\n// match.params.paramName\nexport default (\n  paramName: string | string[] | (() => string),\n  path,\n  { passProps } = {},\n) =>\n  compose(\n    withRouter,\n    mapProps(({ match, history, location, ...rest }) => {\n      let realMatch;\n      if (path) {\n        realMatch = matchPath(history.location.pathname, {\n          path,\n          exact: false,\n          strict: false,\n        });\n      } else {\n        realMatch = match;\n      }\n\n      if (!realMatch) {\n        return { ...rest };\n      }\n\n      if (isArray(paramName)) {\n        return paramName.reduce(\n          (acc, param) => ({ ...acc, [param]: realMatch.params[param] }),\n          { ...rest },\n        );\n      }\n\n      if (typeof paramName === 'function') {\n        const paramNameFromProps = paramName(rest);\n        return {\n          [paramNameFromProps]: realMatch.params[paramNameFromProps],\n          ...rest,\n        };\n      }\n\n      if (passProps) {\n        return {\n          match,\n          history,\n          location,\n          [paramName]: realMatch.params[paramName],\n          ...rest,\n        };\n      }\n\n      return { [paramName]: realMatch.params[paramName], ...rest };\n    }),\n  );\n"]},"sourceType":"script","hash":"94e442ee2abdc3b191edbad591a00634cd3925c2"}
