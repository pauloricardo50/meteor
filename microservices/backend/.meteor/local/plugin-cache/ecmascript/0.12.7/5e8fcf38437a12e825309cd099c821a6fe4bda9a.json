{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/14.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/migrations/server/test/14.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/14.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/migrations/server/test/14.test.js"],"names":["expect","resetDatabase","Properties","up","down","describe","beforeEach","it","rawCollection","insert","_id","monthlyExpenses","findOne","yearlyExpenses","to","equal","undefined"],"mappings":"AAAA;;AACA;AACA,SAASA,MAAT,QAAuB,MAAvB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,UAAT;AACA,SAASC,EAAT,EAAaC,IAAb;AAEAC,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7BC,EAAAA,UAAU,CAAC,MAAM;AACfL,IAAAA,aAAa;AACd,GAFS,CAAV;AAIAI,EAAAA,QAAQ,CAAC,IAAD,EAAO,MAAM;AACnBE,IAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAY;AACzD,YAAML,UAAU,CAACM,aAAX,GAA2BC,MAA3B,CAAkC;AACtCC,QAAAA,GAAG,EAAE,MADiC;AAEtCC,QAAAA,eAAe,EAAE;AAFqB,OAAlC,CAAN;AAIA,YAAMT,UAAU,CAACM,aAAX,GAA2BC,MAA3B,CAAkC;AACtCC,QAAAA,GAAG,EAAE;AADiC,OAAlC,CAAN;AAGA,YAAMP,EAAE,EAAR;AAEAH,MAAAA,MAAM,CAACE,UAAU,CAACU,OAAX,CAAmB;AAAEF,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAoCG,cAArC,CAAN,CAA2DC,EAA3D,CAA8DC,KAA9D,CAAoE,IAApE;AACAf,MAAAA,MAAM,CAACE,UAAU,CAACU,OAAX,CAAmB;AAAEF,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAoCC,eAArC,CAAN,CAA4DG,EAA5D,CAA+DC,KAA/D,CAAqEC,SAArE;AACAhB,MAAAA,MAAM,CAACE,UAAU,CAACU,OAAX,CAAmB;AAAEF,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAqCG,cAAtC,CAAN,CAA4DC,EAA5D,CAA+DC,KAA/D,CAAqEC,SAArE;AACAhB,MAAAA,MAAM,CAACE,UAAU,CAACU,OAAX,CAAmB;AAAEF,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAqCC,eAAtC,CAAN,CAA6DG,EAA7D,CAAgEC,KAAhE,CAAsEC,SAAtE;AACD,KAdC,CAAF;AAeD,GAhBO,CAAR;AAkBAX,EAAAA,QAAQ,CAAC,MAAD,EAAS,MAAM;AACrBE,IAAAA,EAAE,CAAC,0CAAD,EAA6C,YAAY;AACzD,YAAML,UAAU,CAACM,aAAX,GAA2BC,MAA3B,CAAkC;AACtCC,QAAAA,GAAG,EAAE,MADiC;AAEtCG,QAAAA,cAAc,EAAE;AAFsB,OAAlC,CAAN;AAIA,YAAMX,UAAU,CAACM,aAAX,GAA2BC,MAA3B,CAAkC;AACtCC,QAAAA,GAAG,EAAE;AADiC,OAAlC,CAAN;AAIA,YAAMN,IAAI,EAAV;AAEAJ,MAAAA,MAAM,CAACE,UAAU,CAACU,OAAX,CAAmB;AAAEF,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAoCG,cAArC,CAAN,CAA2DC,EAA3D,CAA8DC,KAA9D,CAAoEC,SAApE;AACAhB,MAAAA,MAAM,CAACE,UAAU,CAACU,OAAX,CAAmB;AAAEF,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAoCC,eAArC,CAAN,CAA4DG,EAA5D,CAA+DC,KAA/D,CAAqE,EAArE;AACAf,MAAAA,MAAM,CAACE,UAAU,CAACU,OAAX,CAAmB;AAAEF,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAqCG,cAAtC,CAAN,CAA4DC,EAA5D,CAA+DC,KAA/D,CAAqEC,SAArE;AACAhB,MAAAA,MAAM,CAACE,UAAU,CAACU,OAAX,CAAmB;AAAEF,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAqCC,eAAtC,CAAN,CAA6DG,EAA7D,CAAgEC,KAAhE,CAAsEC,SAAtE;AACD,KAfC,CAAF;AAgBD,GAjBO,CAAR;AAkBD,CAzCO,CAAR","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { Properties } from '../../..';\nimport { up, down } from '../14';\n\ndescribe('Migration 14', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('up', () => {\n    it('adds yearly and removes monthly expenses', async () => {\n      await Properties.rawCollection().insert({\n        _id: 'test',\n        monthlyExpenses: 100,\n      });\n      await Properties.rawCollection().insert({\n        _id: 'test2',\n      });\n      await up();\n\n      expect(Properties.findOne({ _id: 'test' }).yearlyExpenses).to.equal(1200);\n      expect(Properties.findOne({ _id: 'test' }).monthlyExpenses).to.equal(undefined);\n      expect(Properties.findOne({ _id: 'test2' }).yearlyExpenses).to.equal(undefined);\n      expect(Properties.findOne({ _id: 'test2' }).monthlyExpenses).to.equal(undefined);\n    });\n  });\n\n  describe('down', () => {\n    it('adds monthly and removes yearly expenses', async () => {\n      await Properties.rawCollection().insert({\n        _id: 'test',\n        yearlyExpenses: 1000,\n      });\n      await Properties.rawCollection().insert({\n        _id: 'test2',\n      });\n\n      await down();\n\n      expect(Properties.findOne({ _id: 'test' }).yearlyExpenses).to.equal(undefined);\n      expect(Properties.findOne({ _id: 'test' }).monthlyExpenses).to.equal(83);\n      expect(Properties.findOne({ _id: 'test2' }).yearlyExpenses).to.equal(undefined);\n      expect(Properties.findOne({ _id: 'test2' }).monthlyExpenses).to.equal(undefined);\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/14.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/migrations/server/test/14.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 1);\nlet Properties;\nmodule.link(\"../../..\", {\n  Properties(v) {\n    Properties = v;\n  }\n\n}, 2);\nlet up, down;\nmodule.link(\"../14\", {\n  up(v) {\n    up = v;\n  },\n\n  down(v) {\n    down = v;\n  }\n\n}, 3);\ndescribe('Migration 14', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n  describe('up', () => {\n    it('adds yearly and removes monthly expenses', () => Promise.asyncApply(() => {\n      Promise.await(Properties.rawCollection().insert({\n        _id: 'test',\n        monthlyExpenses: 100\n      }));\n      Promise.await(Properties.rawCollection().insert({\n        _id: 'test2'\n      }));\n      Promise.await(up());\n      expect(Properties.findOne({\n        _id: 'test'\n      }).yearlyExpenses).to.equal(1200);\n      expect(Properties.findOne({\n        _id: 'test'\n      }).monthlyExpenses).to.equal(undefined);\n      expect(Properties.findOne({\n        _id: 'test2'\n      }).yearlyExpenses).to.equal(undefined);\n      expect(Properties.findOne({\n        _id: 'test2'\n      }).monthlyExpenses).to.equal(undefined);\n    }));\n  });\n  describe('down', () => {\n    it('adds monthly and removes yearly expenses', () => Promise.asyncApply(() => {\n      Promise.await(Properties.rawCollection().insert({\n        _id: 'test',\n        yearlyExpenses: 1000\n      }));\n      Promise.await(Properties.rawCollection().insert({\n        _id: 'test2'\n      }));\n      Promise.await(down());\n      expect(Properties.findOne({\n        _id: 'test'\n      }).yearlyExpenses).to.equal(undefined);\n      expect(Properties.findOne({\n        _id: 'test'\n      }).monthlyExpenses).to.equal(83);\n      expect(Properties.findOne({\n        _id: 'test2'\n      }).yearlyExpenses).to.equal(undefined);\n      expect(Properties.findOne({\n        _id: 'test2'\n      }).monthlyExpenses).to.equal(undefined);\n    }));\n  });\n});","map":{"version":3,"sources":["imports/core/api/migrations/server/test/14.test.js"],"names":["describe","beforeEach","resetDatabase","it","_id","monthlyExpenses","up","expect","yearlyExpenses","down"],"mappings":"AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,EAAA,EAAA,IAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,EAAA,CAAA,CAAA,EAAA;AAAA,IAAA,EAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,IAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAQAA,QAAQ,CAAA,cAAA,EAAiB,MAAM;AAC7BC,EAAAA,UAAU,CAAC,MAAM;AACfC,IAAAA,aAAa;AADfD,GAAU,CAAVA;AAIAD,EAAAA,QAAQ,CAAA,IAAA,EAAO,MAAM;AACnBG,IAAAA,EAAE,CAAA,0CAAA,EAA6C,+BAAY;AACzD,oBAAM,UAAU,CAAV,aAAA,GAAA,MAAA,CAAkC;AACtCC,QAAAA,GAAG,EADmC,MAAA;AAEtCC,QAAAA,eAAe,EAAE;AAFqB,OAAlC,CAAN;AAIA,oBAAM,UAAU,CAAV,aAAA,GAAA,MAAA,CAAkC;AACtCD,QAAAA,GAAG,EAAE;AADiC,OAAlC,CAAN;AAGA,oBAAME,EAAN,EAAA;AAEAC,MAAAA,MAAM,CAAC,UAAU,CAAV,OAAA,CAAmB;AAAEH,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAPG,cAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,IAAAA;AACAA,MAAAA,MAAM,CAAC,UAAU,CAAV,OAAA,CAAmB;AAAEH,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAPG,eAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,SAAAA;AACAA,MAAAA,MAAM,CAAC,UAAU,CAAV,OAAA,CAAmB;AAAEH,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAPG,cAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,SAAAA;AACAA,MAAAA,MAAM,CAAC,UAAU,CAAV,OAAA,CAAmB;AAAEH,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAPG,eAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,SAAAA;AAbFJ,KAA+C,CAA7C,CAAFA;AADFH,GAAQ,CAARA;AAkBAA,EAAAA,QAAQ,CAAA,MAAA,EAAS,MAAM;AACrBG,IAAAA,EAAE,CAAA,0CAAA,EAA6C,+BAAY;AACzD,oBAAM,UAAU,CAAV,aAAA,GAAA,MAAA,CAAkC;AACtCC,QAAAA,GAAG,EADmC,MAAA;AAEtCI,QAAAA,cAAc,EAAE;AAFsB,OAAlC,CAAN;AAIA,oBAAM,UAAU,CAAV,aAAA,GAAA,MAAA,CAAkC;AACtCJ,QAAAA,GAAG,EAAE;AADiC,OAAlC,CAAN;AAIA,oBAAMK,IAAN,EAAA;AAEAF,MAAAA,MAAM,CAAC,UAAU,CAAV,OAAA,CAAmB;AAAEH,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAPG,cAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,SAAAA;AACAA,MAAAA,MAAM,CAAC,UAAU,CAAV,OAAA,CAAmB;AAAEH,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAPG,eAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,EAAAA;AACAA,MAAAA,MAAM,CAAC,UAAU,CAAV,OAAA,CAAmB;AAAEH,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAPG,cAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,SAAAA;AACAA,MAAAA,MAAM,CAAC,UAAU,CAAV,OAAA,CAAmB;AAAEH,QAAAA,GAAG,EAAE;AAAP,OAAnB,EAAPG,eAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,SAAAA;AAdFJ,KAA+C,CAA7C,CAAFA;AADFH,GAAQ,CAARA;AAvBFA,CAAQ,CAARA","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { Properties } from '../../..';\nimport { up, down } from '../14';\n\ndescribe('Migration 14', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('up', () => {\n    it('adds yearly and removes monthly expenses', async () => {\n      await Properties.rawCollection().insert({\n        _id: 'test',\n        monthlyExpenses: 100,\n      });\n      await Properties.rawCollection().insert({\n        _id: 'test2',\n      });\n      await up();\n\n      expect(Properties.findOne({ _id: 'test' }).yearlyExpenses).to.equal(1200);\n      expect(Properties.findOne({ _id: 'test' }).monthlyExpenses).to.equal(undefined);\n      expect(Properties.findOne({ _id: 'test2' }).yearlyExpenses).to.equal(undefined);\n      expect(Properties.findOne({ _id: 'test2' }).monthlyExpenses).to.equal(undefined);\n    });\n  });\n\n  describe('down', () => {\n    it('adds monthly and removes yearly expenses', async () => {\n      await Properties.rawCollection().insert({\n        _id: 'test',\n        yearlyExpenses: 1000,\n      });\n      await Properties.rawCollection().insert({\n        _id: 'test2',\n      });\n\n      await down();\n\n      expect(Properties.findOne({ _id: 'test' }).yearlyExpenses).to.equal(undefined);\n      expect(Properties.findOne({ _id: 'test' }).monthlyExpenses).to.equal(83);\n      expect(Properties.findOne({ _id: 'test2' }).yearlyExpenses).to.equal(undefined);\n      expect(Properties.findOne({ _id: 'test2' }).monthlyExpenses).to.equal(undefined);\n    });\n  });\n});\n"]},"sourceType":"script","hash":"5e8fcf38437a12e825309cd099c821a6fe4bda9a"}
