{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/15.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/migrations/server/test/15.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/15.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/migrations/server/test/15.test.js"],"names":["expect","resetDatabase","Loans","up","down","LOAN_CATEGORIES","describe","beforeEach","it","rawCollection","insert","_id","name","find","fetch","forEach","category","to","equal","undefined","STANDARD","PREMIUM","not"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { Loans } from '../../..';\nimport { up, down } from '../15';\nimport { LOAN_CATEGORIES } from '../../../loans/loanConstants';\n\ndescribe('Migration 15', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('up', () => {\n    it('adds a category on all loans', async () => {\n      await Loans.rawCollection().insert({ _id: '1', name: 'a' });\n      await Loans.rawCollection().insert({ _id: '2', name: 'b' });\n      await Loans.rawCollection().insert({ _id: '3', name: 'c' });\n\n      Loans.find()\n        .fetch()\n        .forEach(({ category }) => {\n          expect(category).to.equal(undefined);\n        });\n\n      await up();\n\n      Loans.find()\n        .fetch()\n        .forEach(({ category }) => {\n          expect(category).to.equal(LOAN_CATEGORIES.STANDARD);\n        });\n    });\n  });\n\n  describe('down', () => {\n    it('removes category from all loans', async () => {\n      await Loans.rawCollection().insert({\n        _id: '1',\n        category: LOAN_CATEGORIES.STANDARD,\n        name: 'a',\n      });\n      await Loans.rawCollection().insert({\n        _id: '2',\n        category: LOAN_CATEGORIES.STANDARD,\n        name: 'b',\n      });\n      await Loans.rawCollection().insert({\n        _id: '3',\n        category: LOAN_CATEGORIES.PREMIUM,\n        name: 'c',\n      });\n\n      Loans.find()\n        .fetch()\n        .forEach(({ category }) => {\n          expect(category).to.not.equal(undefined);\n        });\n\n      await down();\n\n      Loans.find()\n        .fetch()\n        .forEach(({ category }) => {\n          expect(category).to.equal(undefined);\n        });\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/15.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/migrations/server/test/15.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 1);\nlet Loans;\nmodule.link(\"../../..\", {\n  Loans(v) {\n    Loans = v;\n  }\n\n}, 2);\nlet up, down;\nmodule.link(\"../15\", {\n  up(v) {\n    up = v;\n  },\n\n  down(v) {\n    down = v;\n  }\n\n}, 3);\nlet LOAN_CATEGORIES;\nmodule.link(\"../../../loans/loanConstants\", {\n  LOAN_CATEGORIES(v) {\n    LOAN_CATEGORIES = v;\n  }\n\n}, 4);\ndescribe('Migration 15', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n  describe('up', () => {\n    it('adds a category on all loans', () => Promise.asyncApply(() => {\n      Promise.await(Loans.rawCollection().insert({\n        _id: '1',\n        name: 'a'\n      }));\n      Promise.await(Loans.rawCollection().insert({\n        _id: '2',\n        name: 'b'\n      }));\n      Promise.await(Loans.rawCollection().insert({\n        _id: '3',\n        name: 'c'\n      }));\n      Loans.find().fetch().forEach(({\n        category\n      }) => {\n        expect(category).to.equal(undefined);\n      });\n      Promise.await(up());\n      Loans.find().fetch().forEach(({\n        category\n      }) => {\n        expect(category).to.equal(LOAN_CATEGORIES.STANDARD);\n      });\n    }));\n  });\n  describe('down', () => {\n    it('removes category from all loans', () => Promise.asyncApply(() => {\n      Promise.await(Loans.rawCollection().insert({\n        _id: '1',\n        category: LOAN_CATEGORIES.STANDARD,\n        name: 'a'\n      }));\n      Promise.await(Loans.rawCollection().insert({\n        _id: '2',\n        category: LOAN_CATEGORIES.STANDARD,\n        name: 'b'\n      }));\n      Promise.await(Loans.rawCollection().insert({\n        _id: '3',\n        category: LOAN_CATEGORIES.PREMIUM,\n        name: 'c'\n      }));\n      Loans.find().fetch().forEach(({\n        category\n      }) => {\n        expect(category).to.not.equal(undefined);\n      });\n      Promise.await(down());\n      Loans.find().fetch().forEach(({\n        category\n      }) => {\n        expect(category).to.equal(undefined);\n      });\n    }));\n  });\n});","map":{"version":3,"sources":["imports/core/api/migrations/server/test/15.test.js"],"names":["describe","beforeEach","resetDatabase","it","_id","name","Loans","category","expect","up","LOAN_CATEGORIES","down"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { Loans } from '../../..';\nimport { up, down } from '../15';\nimport { LOAN_CATEGORIES } from '../../../loans/loanConstants';\n\ndescribe('Migration 15', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('up', () => {\n    it('adds a category on all loans', async () => {\n      await Loans.rawCollection().insert({ _id: '1', name: 'a' });\n      await Loans.rawCollection().insert({ _id: '2', name: 'b' });\n      await Loans.rawCollection().insert({ _id: '3', name: 'c' });\n\n      Loans.find()\n        .fetch()\n        .forEach(({ category }) => {\n          expect(category).to.equal(undefined);\n        });\n\n      await up();\n\n      Loans.find()\n        .fetch()\n        .forEach(({ category }) => {\n          expect(category).to.equal(LOAN_CATEGORIES.STANDARD);\n        });\n    });\n  });\n\n  describe('down', () => {\n    it('removes category from all loans', async () => {\n      await Loans.rawCollection().insert({\n        _id: '1',\n        category: LOAN_CATEGORIES.STANDARD,\n        name: 'a',\n      });\n      await Loans.rawCollection().insert({\n        _id: '2',\n        category: LOAN_CATEGORIES.STANDARD,\n        name: 'b',\n      });\n      await Loans.rawCollection().insert({\n        _id: '3',\n        category: LOAN_CATEGORIES.PREMIUM,\n        name: 'c',\n      });\n\n      Loans.find()\n        .fetch()\n        .forEach(({ category }) => {\n          expect(category).to.not.equal(undefined);\n        });\n\n      await down();\n\n      Loans.find()\n        .fetch()\n        .forEach(({ category }) => {\n          expect(category).to.equal(undefined);\n        });\n    });\n  });\n});\n"]},"sourceType":"script","hash":"c9c3ffcc480ac5749429247719241ee83ff73524"}
