{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/properties/propertiesAdditionalDocuments.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/properties/propertiesAdditionalDocuments.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/properties/propertiesAdditionalDocuments.js","inputSourceMap":{"version":3,"sources":["imports/core/api/properties/propertiesAdditionalDocuments.js"],"names":["DOCUMENTS","propertyConstants","RESIDENCE_TYPE","Loans","initialDocuments","id","PURCHASE_CONTRACT","LAND_REGISTER_EXTRACT","PROPERTY_MARKETING_BROCHURE","PROPERTY_PICTURES","PROPERTY_PLANS","FIRE_AND_WATER_INSURANCE","getLoanResidenceType","propertyId","loan","findOne","propertyIds","fields","residenceType","sort","createdAt","conditionalDocuments","PROPERTY_VOLUME","condition","doc","propertyType","PROPERTY_TYPE","HOUSE","PROPERTY_MINERGIE_CERTIFICATE","minergie","MINERGIE_CERTIFICATE","WITHOUT_CERTIFICATE","COOWNERSHIP_AGREEMENT","isCoproperty","COOWNERSHIP_ALLOCATION_AGREEMENT","INVESTEMENT_PROPERTY_RENTAL_STATEMENT","_id","INVESTMENT","INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT"],"mappings":"AAAA,SAASA,SAAT;AACA,OAAO,KAAKC,iBAAZ;AACA,SAASC,cAAT;AACA,OAAOC,KAAP;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAC9B;AAAEC,EAAAA,EAAE,EAAEL,SAAS,CAACM;AAAhB,CAD8B,EAE9B;AAAED,EAAAA,EAAE,EAAEL,SAAS,CAACO;AAAhB,CAF8B,EAG9B;AAAEF,EAAAA,EAAE,EAAEL,SAAS,CAACQ;AAAhB,CAH8B,EAI9B;AAAEH,EAAAA,EAAE,EAAEL,SAAS,CAACS;AAAhB,CAJ8B,EAK9B;AAAEJ,EAAAA,EAAE,EAAEL,SAAS,CAACU;AAAhB,CAL8B,EAM9B;AAAEL,EAAAA,EAAE,EAAEL,SAAS,CAACW;AAAhB,CAN8B,CAAzB;;AASP,MAAMC,oBAAoB,GAAIC,UAAD,IAAgB;AAC3C;AACA;AACA,QAAMC,IAAI,GAAGX,KAAK,CAACY,OAAN,CACX;AAAEC,IAAAA,WAAW,EAAEH;AAAf,GADW,EAEX;AAAEI,IAAAA,MAAM,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAV;AAAgCC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb;AAAtC,GAFW,CAAb;AAIA,SAAON,IAAI,IAAIA,IAAI,CAACI,aAApB;AACD,CARD;;AAUA,OAAO,MAAMG,oBAAoB,GAAG,CAClC;AACEhB,EAAAA,EAAE,EAAEL,SAAS,CAACsB,eADhB;AAEEC,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE;AAAEC,MAAAA;AAAF;AAAP,GAAD,KACTA,YAAY,KAAKxB,iBAAiB,CAACyB,aAAlB,CAAgCC;AAHrD,CADkC,EAMlC;AACEtB,EAAAA,EAAE,EAAEL,SAAS,CAAC4B,6BADhB;AAEEL,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE;AAAEK,MAAAA;AAAF;AAAP,GAAD,KACTA,QAAQ,KAAK5B,iBAAiB,CAAC6B,oBAAlB,CAAuCC;AAHxD,CANkC,EAWlC;AACE1B,EAAAA,EAAE,EAAEL,SAAS,CAACgC,qBADhB;AAEET,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE;AAAES,MAAAA;AAAF;AAAP,GAAD,KAA+BA,YAAY,KAAK;AAF7D,CAXkC,EAelC;AACE5B,EAAAA,EAAE,EAAEL,SAAS,CAACkC,gCADhB;AAEEX,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE;AAAES,MAAAA;AAAF;AAAP,GAAD,KAA+BA,YAAY,KAAK;AAF7D,CAfkC,EAmBlC;AACE5B,EAAAA,EAAE,EAAEL,SAAS,CAACmC,qCADhB;AAEEZ,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE;AAAEY,MAAAA,GAAG,EAAEvB;AAAP;AAAP,GAAD,KACTD,oBAAoB,CAACC,UAAD,CAApB,KAAqCX,cAAc,CAACmC;AAHxD,CAnBkC,EAwBlC;AACEhC,EAAAA,EAAE,EAAEL,SAAS,CAACsC,8CADhB;AAEEf,EAAAA,SAAS,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE;AAAEY,MAAAA,GAAG,EAAEvB;AAAP;AAAP,GAAD,KACTD,oBAAoB,CAACC,UAAD,CAApB,KAAqCX,cAAc,CAACmC;AAHxD,CAxBkC,CAA7B","sourcesContent":["import { DOCUMENTS } from '../files/fileConstants';\nimport * as propertyConstants from './propertyConstants';\nimport { RESIDENCE_TYPE } from '../constants';\nimport Loans from '../loans';\n\nexport const initialDocuments = [\n  { id: DOCUMENTS.PURCHASE_CONTRACT },\n  { id: DOCUMENTS.LAND_REGISTER_EXTRACT },\n  { id: DOCUMENTS.PROPERTY_MARKETING_BROCHURE },\n  { id: DOCUMENTS.PROPERTY_PICTURES },\n  { id: DOCUMENTS.PROPERTY_PLANS },\n  { id: DOCUMENTS.FIRE_AND_WATER_INSURANCE },\n];\n\nconst getLoanResidenceType = (propertyId) => {\n  // If a property is shared among multiple loans, this may work in unexpected ways,\n  // since each of those properties could have a different residenceType\n  const loan = Loans.findOne(\n    { propertyIds: propertyId },\n    { fields: { residenceType: 1 }, sort: { createdAt: 1 } },\n  );\n  return loan && loan.residenceType;\n};\n\nexport const conditionalDocuments = [\n  {\n    id: DOCUMENTS.PROPERTY_VOLUME,\n    condition: ({ doc: { propertyType } }) =>\n      propertyType === propertyConstants.PROPERTY_TYPE.HOUSE,\n  },\n  {\n    id: DOCUMENTS.PROPERTY_MINERGIE_CERTIFICATE,\n    condition: ({ doc: { minergie } }) =>\n      minergie !== propertyConstants.MINERGIE_CERTIFICATE.WITHOUT_CERTIFICATE,\n  },\n  {\n    id: DOCUMENTS.COOWNERSHIP_AGREEMENT,\n    condition: ({ doc: { isCoproperty } }) => isCoproperty === true,\n  },\n  {\n    id: DOCUMENTS.COOWNERSHIP_ALLOCATION_AGREEMENT,\n    condition: ({ doc: { isCoproperty } }) => isCoproperty === true,\n  },\n  {\n    id: DOCUMENTS.INVESTEMENT_PROPERTY_RENTAL_STATEMENT,\n    condition: ({ doc: { _id: propertyId } }) =>\n      getLoanResidenceType(propertyId) === RESIDENCE_TYPE.INVESTMENT,\n  },\n  {\n    id: DOCUMENTS.INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT,\n    condition: ({ doc: { _id: propertyId } }) =>\n      getLoanResidenceType(propertyId) === RESIDENCE_TYPE.INVESTMENT,\n  },\n];\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/properties/propertiesAdditionalDocuments.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/properties/propertiesAdditionalDocuments.js"}},"code":"module.export({\n  initialDocuments: () => initialDocuments,\n  conditionalDocuments: () => conditionalDocuments\n});\nlet DOCUMENTS;\nmodule.link(\"../files/fileConstants\", {\n  DOCUMENTS(v) {\n    DOCUMENTS = v;\n  }\n\n}, 0);\nlet propertyConstants;\nmodule.link(\"./propertyConstants\", {\n  \"*\"(v) {\n    propertyConstants = v;\n  }\n\n}, 1);\nlet RESIDENCE_TYPE;\nmodule.link(\"../constants\", {\n  RESIDENCE_TYPE(v) {\n    RESIDENCE_TYPE = v;\n  }\n\n}, 2);\nlet Loans;\nmodule.link(\"../loans\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 3);\nconst initialDocuments = [{\n  id: DOCUMENTS.PURCHASE_CONTRACT\n}, {\n  id: DOCUMENTS.LAND_REGISTER_EXTRACT\n}, {\n  id: DOCUMENTS.PROPERTY_MARKETING_BROCHURE\n}, {\n  id: DOCUMENTS.PROPERTY_PICTURES\n}, {\n  id: DOCUMENTS.PROPERTY_PLANS\n}, {\n  id: DOCUMENTS.FIRE_AND_WATER_INSURANCE\n}];\n\nconst getLoanResidenceType = propertyId => {\n  // If a property is shared among multiple loans, this may work in unexpected ways,\n  // since each of those properties could have a different residenceType\n  const loan = Loans.findOne({\n    propertyIds: propertyId\n  }, {\n    fields: {\n      residenceType: 1\n    },\n    sort: {\n      createdAt: 1\n    }\n  });\n  return loan && loan.residenceType;\n};\n\nconst conditionalDocuments = [{\n  id: DOCUMENTS.PROPERTY_VOLUME,\n  condition: ({\n    doc: {\n      propertyType\n    }\n  }) => propertyType === propertyConstants.PROPERTY_TYPE.HOUSE\n}, {\n  id: DOCUMENTS.PROPERTY_MINERGIE_CERTIFICATE,\n  condition: ({\n    doc: {\n      minergie\n    }\n  }) => minergie !== propertyConstants.MINERGIE_CERTIFICATE.WITHOUT_CERTIFICATE\n}, {\n  id: DOCUMENTS.COOWNERSHIP_AGREEMENT,\n  condition: ({\n    doc: {\n      isCoproperty\n    }\n  }) => isCoproperty === true\n}, {\n  id: DOCUMENTS.COOWNERSHIP_ALLOCATION_AGREEMENT,\n  condition: ({\n    doc: {\n      isCoproperty\n    }\n  }) => isCoproperty === true\n}, {\n  id: DOCUMENTS.INVESTEMENT_PROPERTY_RENTAL_STATEMENT,\n  condition: ({\n    doc: {\n      _id: propertyId\n    }\n  }) => getLoanResidenceType(propertyId) === RESIDENCE_TYPE.INVESTMENT\n}, {\n  id: DOCUMENTS.INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT,\n  condition: ({\n    doc: {\n      _id: propertyId\n    }\n  }) => getLoanResidenceType(propertyId) === RESIDENCE_TYPE.INVESTMENT\n}];","map":{"version":3,"sources":["imports/core/api/properties/propertiesAdditionalDocuments.js"],"names":["DOCUMENTS","initialDocuments","id","PURCHASE_CONTRACT","LAND_REGISTER_EXTRACT","PROPERTY_MARKETING_BROCHURE","PROPERTY_PICTURES","PROPERTY_PLANS","FIRE_AND_WATER_INSURANCE","getLoanResidenceType","propertyId","loan","propertyIds","fields","residenceType","sort","createdAt","conditionalDocuments","condition","doc","propertyType","propertyConstants","HOUSE","minergie","WITHOUT_CERTIFICATE","isCoproperty","_id","RESIDENCE_TYPE","INVESTMENT"],"mappings":"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","sourcesContent":["import { DOCUMENTS } from '../files/fileConstants';\nimport * as propertyConstants from './propertyConstants';\nimport { RESIDENCE_TYPE } from '../constants';\nimport Loans from '../loans';\n\nexport const initialDocuments = [\n  { id: DOCUMENTS.PURCHASE_CONTRACT },\n  { id: DOCUMENTS.LAND_REGISTER_EXTRACT },\n  { id: DOCUMENTS.PROPERTY_MARKETING_BROCHURE },\n  { id: DOCUMENTS.PROPERTY_PICTURES },\n  { id: DOCUMENTS.PROPERTY_PLANS },\n  { id: DOCUMENTS.FIRE_AND_WATER_INSURANCE },\n];\n\nconst getLoanResidenceType = (propertyId) => {\n  // If a property is shared among multiple loans, this may work in unexpected ways,\n  // since each of those properties could have a different residenceType\n  const loan = Loans.findOne(\n    { propertyIds: propertyId },\n    { fields: { residenceType: 1 }, sort: { createdAt: 1 } },\n  );\n  return loan && loan.residenceType;\n};\n\nexport const conditionalDocuments = [\n  {\n    id: DOCUMENTS.PROPERTY_VOLUME,\n    condition: ({ doc: { propertyType } }) =>\n      propertyType === propertyConstants.PROPERTY_TYPE.HOUSE,\n  },\n  {\n    id: DOCUMENTS.PROPERTY_MINERGIE_CERTIFICATE,\n    condition: ({ doc: { minergie } }) =>\n      minergie !== propertyConstants.MINERGIE_CERTIFICATE.WITHOUT_CERTIFICATE,\n  },\n  {\n    id: DOCUMENTS.COOWNERSHIP_AGREEMENT,\n    condition: ({ doc: { isCoproperty } }) => isCoproperty === true,\n  },\n  {\n    id: DOCUMENTS.COOWNERSHIP_ALLOCATION_AGREEMENT,\n    condition: ({ doc: { isCoproperty } }) => isCoproperty === true,\n  },\n  {\n    id: DOCUMENTS.INVESTEMENT_PROPERTY_RENTAL_STATEMENT,\n    condition: ({ doc: { _id: propertyId } }) =>\n      getLoanResidenceType(propertyId) === RESIDENCE_TYPE.INVESTMENT,\n  },\n  {\n    id: DOCUMENTS.INVESTEMENT_PROPERTY_SERVICE_CHARGE_SETTLEMENT,\n    condition: ({ doc: { _id: propertyId } }) =>\n      getLoanResidenceType(propertyId) === RESIDENCE_TYPE.INVESTMENT,\n  },\n];\n"]},"sourceType":"script","hash":"af697ec993da98ba2351ba642788dc914652cb54"}
