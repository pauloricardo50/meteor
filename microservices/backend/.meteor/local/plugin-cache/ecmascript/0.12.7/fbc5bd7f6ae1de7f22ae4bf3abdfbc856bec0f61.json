{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/files/server/meteor-slingshot-server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/files/server/meteor-slingshot-server.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/files/server/meteor-slingshot-server.js","inputSourceMap":{"version":3,"sources":["imports/core/api/files/server/meteor-slingshot-server.js"],"names":["Meteor","Slingshot","ROLES","COLLECTIONS","SecurityService","SLINGSHOT_DIRECTIVE_NAME","MAX_FILE_SIZE","ALLOWED_FILE_TYPES","uploadDirective","getS3FileKey","file","docId","id","name","normalize","replace","createDirective","maxSize","allowedFileTypes","authorize","collection","hasMinimumRole","userId","role","ADMIN","Error","Object","values","includes","isAllowedToModifyFiles","fileKey","key"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SAASC,KAAT;AACA,SAASC,WAAT;AACA,OAAOC,eAAP;AACA,SACEC,wBADF,EAEEC,aAFF,EAGEC,kBAHF;AAKA,OAAOC,eAAP;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAO;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAP,KACzB,GAAED,KAAM,IAAGC,EAAG,IAAGF,IAAI,CAACG,IAAL,CACfC,SADe,CACL,KADK,EAEfC,OAFe,CAEP,kBAFO,EAEa,EAFb,CAEiB,EAH9B;AAKPd,SAAS,CAACe,eAAV,CAA0BX,wBAA1B,EAAoDG,eAApD,EAAqE;AACnES,EAAAA,OAAO,EAAEX,aAD0D;AAEnEY,EAAAA,gBAAgB,EAAEX,kBAFiD;;AAGnEY,EAAAA,SAAS,CAACT,IAAD,EAAO;AAAEU,IAAAA,UAAF;AAAcT,IAAAA;AAAd,GAAP,EAA8B;AACrC;AAEA;AACA,QACEP,eAAe,CAACiB,cAAhB,CAA+B;AAAEC,MAAAA,MAAM,EAAE,KAAKA,MAAf;AAAuBC,MAAAA,IAAI,EAAErB,KAAK,CAACsB;AAAnC,KAA/B,CADF,EAEE;AACA,aAAO,IAAP;AACD,KARoC,CAUrC;;;AACA,QAAI,CAAC,KAAKF,MAAV,EAAkB;AAChB,YAAM,IAAItB,MAAM,CAACyB,KAAX,CACJ,gBADI,EAEJ,qCAFI,CAAN;AAID;;AAED,QAAI,CAACC,MAAM,CAACC,MAAP,CAAcxB,WAAd,EAA2ByB,QAA3B,CAAoCR,UAApC,CAAL,EAAsD;AACpD,YAAM,IAAIpB,MAAM,CAACyB,KAAX,CAAiB,oBAAjB,EAAuC,0BAAvC,CAAN;AACD;;AAEDrB,IAAAA,eAAe,CAACyB,sBAAhB,CAAuC;AACrCT,MAAAA,UADqC;AAErCT,MAAAA,KAFqC;AAGrCW,MAAAA,MAAM,EAAE,KAAKA,MAHwB;AAIrCQ,MAAAA,OAAO,EAAEnB;AAJ4B,KAAvC;AAOA,WAAO,IAAP;AACD,GAjCkE;;AAkCnEoB,EAAAA,GAAG,EAAEtB;AAlC8D,CAArE","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Slingshot } from 'meteor/edgee:slingshot';\n\nimport { ROLES } from 'core/api/constants';\nimport { COLLECTIONS } from '../../constants';\nimport SecurityService from '../../security';\nimport {\n  SLINGSHOT_DIRECTIVE_NAME,\n  MAX_FILE_SIZE,\n  ALLOWED_FILE_TYPES,\n} from '../fileConstants';\nimport uploadDirective from './uploadDirective';\n\nexport const getS3FileKey = (file, { docId, id }) =>\n  `${docId}/${id}/${file.name\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')}`;\n\nSlingshot.createDirective(SLINGSHOT_DIRECTIVE_NAME, uploadDirective, {\n  maxSize: MAX_FILE_SIZE,\n  allowedFileTypes: ALLOWED_FILE_TYPES,\n  authorize(file, { collection, docId }) {\n    // Don't use arrow function, this is the current object here\n\n    // Check for devs and admins\n    if (\n      SecurityService.hasMinimumRole({ userId: this.userId, role: ROLES.ADMIN })\n    ) {\n      return true;\n    }\n\n    // Deny uploads if user is not logged in.\n    if (!this.userId) {\n      throw new Meteor.Error(\n        'Login Required',\n        'Please login before uploading files',\n      );\n    }\n\n    if (!Object.values(COLLECTIONS).includes(collection)) {\n      throw new Meteor.Error('Invalid collection', \"Collection doesn't exist\");\n    }\n\n    SecurityService.isAllowedToModifyFiles({\n      collection,\n      docId,\n      userId: this.userId,\n      fileKey: docId,\n    });\n\n    return true;\n  },\n  key: getS3FileKey,\n});\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/files/server/meteor-slingshot-server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/files/server/meteor-slingshot-server.js"}},"code":"module.export({\n  getS3FileKey: () => getS3FileKey\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Slingshot;\nmodule.link(\"meteor/edgee:slingshot\", {\n  Slingshot(v) {\n    Slingshot = v;\n  }\n\n}, 1);\nlet ROLES;\nmodule.link(\"../../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 2);\nlet COLLECTIONS;\nmodule.link(\"../../constants\", {\n  COLLECTIONS(v) {\n    COLLECTIONS = v;\n  }\n\n}, 3);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 4);\nlet SLINGSHOT_DIRECTIVE_NAME, MAX_FILE_SIZE, ALLOWED_FILE_TYPES;\nmodule.link(\"../fileConstants\", {\n  SLINGSHOT_DIRECTIVE_NAME(v) {\n    SLINGSHOT_DIRECTIVE_NAME = v;\n  },\n\n  MAX_FILE_SIZE(v) {\n    MAX_FILE_SIZE = v;\n  },\n\n  ALLOWED_FILE_TYPES(v) {\n    ALLOWED_FILE_TYPES = v;\n  }\n\n}, 5);\nlet uploadDirective;\nmodule.link(\"./uploadDirective\", {\n  default(v) {\n    uploadDirective = v;\n  }\n\n}, 6);\n\nconst getS3FileKey = (file, {\n  docId,\n  id\n}) => `${docId}/${id}/${file.name.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')}`;\n\nSlingshot.createDirective(SLINGSHOT_DIRECTIVE_NAME, uploadDirective, {\n  maxSize: MAX_FILE_SIZE,\n  allowedFileTypes: ALLOWED_FILE_TYPES,\n\n  authorize(file, {\n    collection,\n    docId\n  }) {\n    // Don't use arrow function, this is the current object here\n    // Check for devs and admins\n    if (SecurityService.hasMinimumRole({\n      userId: this.userId,\n      role: ROLES.ADMIN\n    })) {\n      return true;\n    } // Deny uploads if user is not logged in.\n\n\n    if (!this.userId) {\n      throw new Meteor.Error('Login Required', 'Please login before uploading files');\n    }\n\n    if (!Object.values(COLLECTIONS).includes(collection)) {\n      throw new Meteor.Error('Invalid collection', \"Collection doesn't exist\");\n    }\n\n    SecurityService.isAllowedToModifyFiles({\n      collection,\n      docId,\n      userId: this.userId,\n      fileKey: docId\n    });\n    return true;\n  },\n\n  key: getS3FileKey\n});","map":{"version":3,"sources":["imports/core/api/files/server/meteor-slingshot-server.js"],"names":["Meteor","getS3FileKey","id","docId","file","Slingshot","maxSize","allowedFileTypes","authorize","userId","role","ROLES","ADMIN","Object","SecurityService","fileKey","key"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Slingshot } from 'meteor/edgee:slingshot';\n\nimport { ROLES } from 'core/api/constants';\nimport { COLLECTIONS } from '../../constants';\nimport SecurityService from '../../security';\nimport {\n  SLINGSHOT_DIRECTIVE_NAME,\n  MAX_FILE_SIZE,\n  ALLOWED_FILE_TYPES,\n} from '../fileConstants';\nimport uploadDirective from './uploadDirective';\n\nexport const getS3FileKey = (file, { docId, id }) =>\n  `${docId}/${id}/${file.name\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')}`;\n\nSlingshot.createDirective(SLINGSHOT_DIRECTIVE_NAME, uploadDirective, {\n  maxSize: MAX_FILE_SIZE,\n  allowedFileTypes: ALLOWED_FILE_TYPES,\n  authorize(file, { collection, docId }) {\n    // Don't use arrow function, this is the current object here\n\n    // Check for devs and admins\n    if (\n      SecurityService.hasMinimumRole({ userId: this.userId, role: ROLES.ADMIN })\n    ) {\n      return true;\n    }\n\n    // Deny uploads if user is not logged in.\n    if (!this.userId) {\n      throw new Meteor.Error(\n        'Login Required',\n        'Please login before uploading files',\n      );\n    }\n\n    if (!Object.values(COLLECTIONS).includes(collection)) {\n      throw new Meteor.Error('Invalid collection', \"Collection doesn't exist\");\n    }\n\n    SecurityService.isAllowedToModifyFiles({\n      collection,\n      docId,\n      userId: this.userId,\n      fileKey: docId,\n    });\n\n    return true;\n  },\n  key: getS3FileKey,\n});\n"]},"sourceType":"script","hash":"fbc5bd7f6ae1de7f22ae4bf3abdfbc856bec0f61"}
