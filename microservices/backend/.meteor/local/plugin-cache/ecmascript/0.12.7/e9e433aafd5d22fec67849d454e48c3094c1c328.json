{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/maps/test/MapWithMarkerWrapper.test.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/maps/test/MapWithMarkerWrapper.test.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/maps/test/MapWithMarkerWrapper.test.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/maps/test/MapWithMarkerWrapper.test.jsx"],"names":["React","expect","shallow","MapWithMarkerWrapper","MapWithMarker","getAddressString","component","props","describe","address","beforeEach","address1","city","zipCode","it","errorParagraph","find","length","to","equal","first","prop"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,SAASC,OAAT;AACA,OAAOC,oBAAP;AACA,OAAOC,aAAP;AAEA,SAASC,gBAAT;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAIL,OAAO,CAAC,CAAC,oBAAD,CAAsB,IAAIK,KAAJ,CAAtB,GAAD,CAAlC;;AAEAC,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AACrC,MAAIC,OAAJ;AAEAC,EAAAA,UAAU,CAAC,MAAM;AACfD,IAAAA,OAAO,GAAG;AAAEE,MAAAA,QAAQ,EAAE,aAAZ;AAA2BC,MAAAA,IAAI,EAAE,WAAjC;AAA8CC,MAAAA,OAAO,EAAE;AAAvD,KAAV;AACD,GAFS,CAAV;AAIAC,EAAAA,EAAE,CAAC,2DAAD,EAA8D,MAAM;AACpEL,IAAAA,OAAO,GAAG;AAAEG,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAE;AAA9B,KAAV;AACA,UAAME,cAAc,GAAGT,SAAS,CAACG,OAAD,CAAT,CAAmBO,IAAnB,CAAwB,qBAAxB,CAAvB;AACAf,IAAAA,MAAM,CAACc,cAAc,CAACE,MAAhB,CAAN,CAA8BC,EAA9B,CAAiCC,KAAjC,CAAuC,CAAvC;AACD,GAJC,CAAF;AAMAL,EAAAA,EAAE,CAAC,8CAAD,EAAiD,MACjDb,MAAM,CAACK,SAAS,CAACG,OAAD,CAAT,CAAmBO,IAAnB,CAAwBZ,aAAxB,EAAuCa,MAAxC,CAAN,CAAsDC,EAAtD,CAAyDC,KAAzD,CAA+D,CAA/D,CADA,CAAF;AAGAL,EAAAA,EAAE,CAAC,2DAAD,EAA8D,MAC9Db,MAAM,CAACK,SAAS,CAACG,OAAD,CAAT,CACJO,IADI,CACCZ,aADD,EAEJgB,KAFI,GAGJC,IAHI,CAGC,SAHD,CAAD,CAAN,CAGoBH,EAHpB,CAGuBC,KAHvB,CAG6Bd,gBAAgB,CAACI,OAAD,CAH7C,CADA,CAAF;AAKD,CArBO,CAAR","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\n\nimport { shallow } from 'core/utils/testHelpers/enzyme';\nimport MapWithMarkerWrapper from '../MapWithMarkerWrapper';\nimport MapWithMarker from '../MapWithMarker';\n\nimport { getAddressString } from '../googleMapsHelpers';\n\nconst component = props => shallow(<MapWithMarkerWrapper {...props} />);\n\ndescribe('MapWithMarkerWrapper', () => {\n  let address;\n\n  beforeEach(() => {\n    address = { address1: 'Thamel Marg', city: 'Kathmandu', zipCode: '123456' };\n  });\n\n  it(\"doesn't render MapWithMarker if the address is incomplete\", () => {\n    address = { city: 'Kathmandu', zipCode: '123456' };\n    const errorParagraph = component(address).find('.incomplete-address');\n    expect(errorParagraph.length).to.equal(1);\n  });\n\n  it('renders MapWithMarker if address is complete', () =>\n    expect(component(address).find(MapWithMarker).length).to.equal(1));\n\n  it('passes the correct address to the MapWithMarker component', () =>\n    expect(component(address)\n      .find(MapWithMarker)\n      .first()\n      .prop('address')).to.equal(getAddressString(address)));\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/maps/test/MapWithMarkerWrapper.test.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/maps/test/MapWithMarkerWrapper.test.jsx"}},"code":"var React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 1);\nvar shallow;\nmodule.link(\"../../../utils/testHelpers/enzyme\", {\n  shallow: function (v) {\n    shallow = v;\n  }\n}, 2);\nvar MapWithMarkerWrapper;\nmodule.link(\"../MapWithMarkerWrapper\", {\n  \"default\": function (v) {\n    MapWithMarkerWrapper = v;\n  }\n}, 3);\nvar MapWithMarker;\nmodule.link(\"../MapWithMarker\", {\n  \"default\": function (v) {\n    MapWithMarker = v;\n  }\n}, 4);\nvar getAddressString;\nmodule.link(\"../googleMapsHelpers\", {\n  getAddressString: function (v) {\n    getAddressString = v;\n  }\n}, 5);\n\nvar component = function (props) {\n  return shallow(React.createElement(MapWithMarkerWrapper, props));\n};\n\ndescribe('MapWithMarkerWrapper', function () {\n  var address;\n  beforeEach(function () {\n    address = {\n      address1: 'Thamel Marg',\n      city: 'Kathmandu',\n      zipCode: '123456'\n    };\n  });\n  it(\"doesn't render MapWithMarker if the address is incomplete\", function () {\n    address = {\n      city: 'Kathmandu',\n      zipCode: '123456'\n    };\n    var errorParagraph = component(address).find('.incomplete-address');\n    expect(errorParagraph.length).to.equal(1);\n  });\n  it('renders MapWithMarker if address is complete', function () {\n    return expect(component(address).find(MapWithMarker).length).to.equal(1);\n  });\n  it('passes the correct address to the MapWithMarker component', function () {\n    return expect(component(address).find(MapWithMarker).first().prop('address')).to.equal(getAddressString(address));\n  });\n});","map":{"version":3,"sources":["imports/core/components/maps/test/MapWithMarkerWrapper.test.jsx"],"names":["component","props","shallow","describe","beforeEach","address","address1","city","zipCode","it","errorParagraph","expect","getAddressString"],"mappings":"AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,MAAA,YAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,mCAAA,EAAA;AAAA,EAAA,OAAA,YAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,oBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,oBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,EAAA;AAAA,EAAA,gBAAA,YAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAUA,IAAMA,SAAS,GAAGC,UAAAA,KAAK;AAAA,SAAIC,OAAO,CAAC,oBAAA,oBAAA,EAAnC,KAAmC,CAAD,CAAX;AAAA,CAAvB;;AAEAC,QAAQ,CAAA,sBAAA,EAAyB,YAAM;AACrC,MAAA,OAAA;AAEAC,EAAAA,UAAU,CAAC,YAAM;AACfC,IAAAA,OAAO,GAAG;AAAEC,MAAAA,QAAQ,EAAV,aAAA;AAA2BC,MAAAA,IAAI,EAA/B,WAAA;AAA8CC,MAAAA,OAAO,EAAE;AAAvD,KAAVH;AADFD,GAAU,CAAVA;AAIAK,EAAAA,EAAE,CAAA,2DAAA,EAA8D,YAAM;AACpEJ,IAAAA,OAAO,GAAG;AAAEE,MAAAA,IAAI,EAAN,WAAA;AAAqBC,MAAAA,OAAO,EAAE;AAA9B,KAAVH;AACA,QAAMK,cAAc,GAAGV,SAAS,CAATA,OAAS,CAATA,CAAAA,IAAAA,CAAvB,qBAAuBA,CAAvB;AACAW,IAAAA,MAAM,CAACD,cAAc,CAArBC,MAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,CAAAA;AAHFF,GAAE,CAAFA;AAMAA,EAAAA,EAAE,CAAA,8CAAA,EAAiD;AAAA,WACjDE,MAAM,CAACX,SAAS,CAATA,OAAS,CAATA,CAAAA,IAAAA,CAAAA,aAAAA,EAAPW,MAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CADFF,CACEE,CADiD;AAAA,GAAjD,CAAFF;AAGAA,EAAAA,EAAE,CAAA,2DAAA,EAA8D;AAAA,WAC9DE,MAAM,CAACX,SAAS,CAATA,OAAS,CAATA,CAAAA,IAAAA,CAAAA,aAAAA,EAAAA,KAAAA,GAAAA,IAAAA,CAAPW,SAAOX,CAAD,CAANW,CAAAA,EAAAA,CAAAA,KAAAA,CAG6BC,gBAAgB,CAJ/CH,OAI+C,CAH7CE,CAD8D;AAAA,GAA9D,CAAFF;AAhBFN,CAAQ,CAARA","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\n\nimport { shallow } from 'core/utils/testHelpers/enzyme';\nimport MapWithMarkerWrapper from '../MapWithMarkerWrapper';\nimport MapWithMarker from '../MapWithMarker';\n\nimport { getAddressString } from '../googleMapsHelpers';\n\nconst component = props => shallow(<MapWithMarkerWrapper {...props} />);\n\ndescribe('MapWithMarkerWrapper', () => {\n  let address;\n\n  beforeEach(() => {\n    address = { address1: 'Thamel Marg', city: 'Kathmandu', zipCode: '123456' };\n  });\n\n  it(\"doesn't render MapWithMarker if the address is incomplete\", () => {\n    address = { city: 'Kathmandu', zipCode: '123456' };\n    const errorParagraph = component(address).find('.incomplete-address');\n    expect(errorParagraph.length).to.equal(1);\n  });\n\n  it('renders MapWithMarker if address is complete', () =>\n    expect(component(address).find(MapWithMarker).length).to.equal(1));\n\n  it('passes the correct address to the MapWithMarker component', () =>\n    expect(component(address)\n      .find(MapWithMarker)\n      .first()\n      .prop('address')).to.equal(getAddressString(address)));\n});\n"]},"sourceType":"script","hash":"e9e433aafd5d22fec67849d454e48c3094c1c328"}
