{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingSection/components/CalculatedValue.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/Financing/client/FinancingSection/components/CalculatedValue.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingSection/components/CalculatedValue.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/Financing/client/FinancingSection/components/CalculatedValue.jsx"],"names":["React","cx","compose","toMoney","SingleStructureContainer","FinancingDataContainer","Percent","CalculatedValueProps","value","format","className","children","Function","rightElement","FORMATS","MONEY","PERCENT","DEFAULT","formatters","CalculatedValue","props","displayValue","memo"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,SAASC,OAAT;AACA,OAAOC,wBAAP;AACA,OAAOC,sBAAP;AACA,SAASC,OAAT;AAEA,KAAKC,oBAAL,GAA4B;AAC1BC,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,MAAM,GAAG,MAFiB;AAG1BC,EAAAA,SAAS,EAAE,MAHe;AAI1BC,EAAAA,QAAQ,GAAGC,QAJe;AAK1BC,EAAAA,YAAY,GAAGD,QALW;AAAA,CAA5B;AAQA,OAAO,MAAME,OAAO,GAAG;AACrBC,EAAAA,KAAK,EAAE,OADc;AAErBC,EAAAA,OAAO,EAAE,SAFY;AAGrBC,EAAAA,OAAO,EAAE;AAHY,CAAhB;AAMP,MAAMC,UAAU,GAAG;AACjB,GAACJ,OAAO,CAACC,KAAT,GAAiBP,KAAK,IACpB,CAAC,MAAM,QAAP;MACE,CAAC,IAAD,CAAM,UAAU,KAAhB,CAAsB,GAAG,EAAE,IAAF;MACzB,CAACL,OAAO,CAACK,KAAD,CAAR;IACF,EAAE,MAAM,QAAR,CALe;AAOjB,GAACM,OAAO,CAACE,OAAT,GAAmBR,KAAK,IAAI,CAAC,OAAD,CAAS,MAAM,CAACA,KAAD,CAAf,GAPX;AAQjB,GAACM,OAAO,CAACG,OAAT,GAAmBT,KAAK,IAAIA;AARX,CAAnB;;AAWA,MAAMW,eAAe,GAAG,CAAC;AACvBX,EAAAA,KADuB;AAEvBC,EAAAA,MAAM,GAAGK,OAAO,CAACC,KAFM;AAGvBL,EAAAA,SAHuB;AAIvBC,EAAAA,QAJuB;AAKvBE,EAAAA,YALuB;AAMvB,KAAGO;AANoB,CAOxB,EAAEb,oBAPqB,KAOI;AAC1B,QAAMc,YAAY,GAAG,OAAOb,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAACY,KAAD,CAAnC,GAA6CZ,KAAlE;AAEA,SACE,CAAC,GAAD,CAAK,UAAU,CAACP,EAAE,CAAC,kBAAD,EAAqBS,SAArB,CAAH,CAAf;MACE,CAACC,QAAQ,GAAGA,QAAQ,CAACU,YAAD,CAAX,GAA4BH,UAAU,CAACT,MAAD,CAAV,CAAmBY,YAAnB,CAArC;MACA,CAACR,YAAY,GAAGA,YAAY,CAACQ,YAAD,CAAf,GAAgC,IAA7C;IACF,EAAE,GAAF,CAJF;AAMD,CAhBD;;AAkBA,eAAenB,OAAO,CACpBE,wBADoB,EAEpBC,sBAFoB,EAGpBL,KAAK,CAACsB,IAHc,CAAP,CAIbH,eAJa,CAAf","sourcesContent":["// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport { compose } from 'recompose';\n\nimport { toMoney } from '../../../../../utils/conversionFunctions';\nimport SingleStructureContainer from '../../containers/SingleStructureContainer';\nimport FinancingDataContainer from '../../containers/FinancingDataContainer';\nimport { Percent } from '../../../../Translation';\n\ntype CalculatedValueProps = {\n  value: number,\n  format?: string,\n  className: string,\n  children?: Function,\n  rightElement?: Function,\n};\n\nexport const FORMATS = {\n  MONEY: 'MONEY',\n  PERCENT: 'PERCENT',\n  DEFAULT: 'DEFAULT',\n};\n\nconst formatters = {\n  [FORMATS.MONEY]: value => (\n    <React.Fragment>\n      <span className=\"chf\">CHF</span>\n      {toMoney(value)}\n    </React.Fragment>\n  ),\n  [FORMATS.PERCENT]: value => <Percent value={value} />,\n  [FORMATS.DEFAULT]: value => value,\n};\n\nconst CalculatedValue = ({\n  value,\n  format = FORMATS.MONEY,\n  className,\n  children,\n  rightElement,\n  ...props\n}: CalculatedValueProps) => {\n  const displayValue = typeof value === 'function' ? value(props) : value;\n\n  return (\n    <div className={cx('calculated-value', className)}>\n      {children ? children(displayValue) : formatters[format](displayValue)}\n      {rightElement ? rightElement(displayValue) : null}\n    </div>\n  );\n};\n\nexport default compose(\n  SingleStructureContainer,\n  FinancingDataContainer,\n  React.memo,\n)(CalculatedValue);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingSection/components/CalculatedValue.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Financing/client/FinancingSection/components/CalculatedValue.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _formatters;\n\nmodule.export({\n  FORMATS: function () {\n    return FORMATS;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar cx;\nmodule.link(\"classnames\", {\n  \"default\": function (v) {\n    cx = v;\n  }\n}, 1);\nvar compose;\nmodule.link(\"recompose\", {\n  compose: function (v) {\n    compose = v;\n  }\n}, 2);\nvar toMoney;\nmodule.link(\"../../../../../utils/conversionFunctions\", {\n  toMoney: function (v) {\n    toMoney = v;\n  }\n}, 3);\nvar SingleStructureContainer;\nmodule.link(\"../../containers/SingleStructureContainer\", {\n  \"default\": function (v) {\n    SingleStructureContainer = v;\n  }\n}, 4);\nvar FinancingDataContainer;\nmodule.link(\"../../containers/FinancingDataContainer\", {\n  \"default\": function (v) {\n    FinancingDataContainer = v;\n  }\n}, 5);\nvar Percent;\nmodule.link(\"../../../../Translation\", {\n  Percent: function (v) {\n    Percent = v;\n  }\n}, 6);\nvar FORMATS = {\n  MONEY: 'MONEY',\n  PERCENT: 'PERCENT',\n  DEFAULT: 'DEFAULT'\n};\nvar formatters = (_formatters = {}, _formatters[FORMATS.MONEY] = function (value) {\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"chf\"\n  }, \"CHF\"), toMoney(value));\n}, _formatters[FORMATS.PERCENT] = function (value) {\n  return React.createElement(Percent, {\n    value: value\n  });\n}, _formatters[FORMATS.DEFAULT] = function (value) {\n  return value;\n}, _formatters);\n\nvar CalculatedValue = function (_ref) {\n  var value = _ref.value,\n      _ref$format = _ref.format,\n      format = _ref$format === void 0 ? FORMATS.MONEY : _ref$format,\n      className = _ref.className,\n      children = _ref.children,\n      rightElement = _ref.rightElement,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"value\", \"format\", \"className\", \"children\", \"rightElement\"]);\n  var displayValue = typeof value === 'function' ? value(props) : value;\n  return React.createElement(\"div\", {\n    className: cx('calculated-value', className)\n  }, children ? children(displayValue) : formatters[format](displayValue), rightElement ? rightElement(displayValue) : null);\n};\n\nmodule.exportDefault(compose(SingleStructureContainer, FinancingDataContainer, React.memo)(CalculatedValue));","map":{"version":3,"sources":["imports/core/components/Financing/client/FinancingSection/components/CalculatedValue.jsx"],"names":["FORMATS","MONEY","PERCENT","DEFAULT","formatters","value","toMoney","CalculatedValue","format","props","displayValue","cx","children","rightElement","compose","React"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport { compose } from 'recompose';\n\nimport { toMoney } from '../../../../../utils/conversionFunctions';\nimport SingleStructureContainer from '../../containers/SingleStructureContainer';\nimport FinancingDataContainer from '../../containers/FinancingDataContainer';\nimport { Percent } from '../../../../Translation';\n\ntype CalculatedValueProps = {\n  value: number,\n  format?: string,\n  className: string,\n  children?: Function,\n  rightElement?: Function,\n};\n\nexport const FORMATS = {\n  MONEY: 'MONEY',\n  PERCENT: 'PERCENT',\n  DEFAULT: 'DEFAULT',\n};\n\nconst formatters = {\n  [FORMATS.MONEY]: value => (\n    <React.Fragment>\n      <span className=\"chf\">CHF</span>\n      {toMoney(value)}\n    </React.Fragment>\n  ),\n  [FORMATS.PERCENT]: value => <Percent value={value} />,\n  [FORMATS.DEFAULT]: value => value,\n};\n\nconst CalculatedValue = ({\n  value,\n  format = FORMATS.MONEY,\n  className,\n  children,\n  rightElement,\n  ...props\n}: CalculatedValueProps) => {\n  const displayValue = typeof value === 'function' ? value(props) : value;\n\n  return (\n    <div className={cx('calculated-value', className)}>\n      {children ? children(displayValue) : formatters[format](displayValue)}\n      {rightElement ? rightElement(displayValue) : null}\n    </div>\n  );\n};\n\nexport default compose(\n  SingleStructureContainer,\n  FinancingDataContainer,\n  React.memo,\n)(CalculatedValue);\n"]},"sourceType":"script","hash":"dd741def1a73d11c09cb81d2918a39fe23762ac0"}
