{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/RESTAPI.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/RESTAPI/server/RESTAPI.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/RESTAPI.js","inputSourceMap":{"version":3,"sources":["imports/core/api/RESTAPI/server/RESTAPI.js"],"names":["Meteor","WebApp","connectRoute","Fiber","compose","defaultMiddlewares","logRequest","trackRequest","setIsAPI","setAPIUser","HTTP_STATUS_CODES","setClientMicroservice","setClientUrl","RESTAPI","constructor","rootPath","preMiddlewares","postMiddlewares","path","endpoints","reset","connectHandlers","stack","start","registerMiddlewares","registerEndpoints","middlewares","forEach","middleware","use","getEndpointsOptions","Object","keys","endpoint","methods","method","finalEndpoint","makeEndpoint","handler","registerEndpoint","wrapHandler","req","res","next","headers","host","location","href","user","Promise","resolve","then","body","query","params","files","result","handleSuccess","catch","error","run","bind","bindEnvironment","router","toLowerCase","status","stringified","JSON","stringify","writeHead","OK","write","end","addEndpoint","options","Error","reduce"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { WebApp } from 'meteor/webapp';\nimport connectRoute from 'connect-route';\nimport Fiber from 'fibers';\nimport { compose } from 'recompose';\n\nimport * as defaultMiddlewares from './middlewares';\nimport { logRequest, trackRequest, setIsAPI, setAPIUser } from './helpers';\nimport { HTTP_STATUS_CODES } from './restApiConstants';\nimport {\n  setClientMicroservice,\n  setClientUrl,\n} from '../../../utils/server/getClientUrl';\n\nexport default class RESTAPI {\n  constructor({\n    rootPath = '/api',\n    preMiddlewares = defaultMiddlewares.preMiddlewares,\n    postMiddlewares = defaultMiddlewares.postMiddlewares,\n  } = {}) {\n    this.rootPath = rootPath;\n    this.preMiddlewares = preMiddlewares;\n    this.postMiddlewares = postMiddlewares;\n    this.endpoints = {};\n  }\n\n  reset() {\n    WebApp.connectHandlers.stack = [];\n  }\n\n  start() {\n    this.reset();\n    this.registerMiddlewares(this.preMiddlewares);\n    this.registerEndpoints();\n    this.registerMiddlewares(this.postMiddlewares);\n  }\n\n  registerMiddlewares(middlewares) {\n    middlewares.forEach((middleware) => {\n      WebApp.connectHandlers.use(this.rootPath, middleware(this.getEndpointsOptions()));\n    });\n  }\n\n  makeEndpoint = path => this.rootPath + path;\n\n  registerEndpoints() {\n    const endpoints = Object.keys(this.endpoints);\n\n    endpoints.forEach((endpoint) => {\n      const methods = Object.keys(this.endpoints[endpoint]);\n\n      methods.forEach((method) => {\n        const finalEndpoint = this.makeEndpoint(endpoint);\n        const { handler } = this.endpoints[endpoint][method];\n\n        this.registerEndpoint(finalEndpoint, handler, method);\n      });\n    });\n  }\n\n  wrapHandler(handler) {\n    return (req, res, next) => {\n      Fiber(() => {\n        const { headers = {} } = req;\n        const { host, location } = headers;\n\n        setClientMicroservice('api');\n        setClientUrl({ host, href: location });\n        setIsAPI();\n        setAPIUser(req.user);\n\n        try {\n          Promise.resolve()\n            .then(() =>\n              handler({\n                user: req.user,\n                body: req.body,\n                query: req.query,\n                params: req.params,\n                files: req.files,\n              }))\n            .then(result => this.handleSuccess(result, req, res))\n            .catch(next);\n        } catch (error) {\n          next(error);\n        }\n      }).run();\n    };\n  }\n\n  registerEndpoint(endpoint, handler, method) {\n    compose(\n      WebApp.connectHandlers.use.bind(WebApp.connectHandlers),\n      Meteor.bindEnvironment,\n      connectRoute,\n    )((router) => {\n      router[method.toLowerCase()](endpoint, this.wrapHandler(handler));\n    });\n  }\n\n  handleSuccess(result = '', req, res) {\n    const { status } = result;\n    const stringified = JSON.stringify(result);\n\n    // LOGS\n    logRequest({ req, result: stringified });\n\n    trackRequest({ req, result: stringified });\n\n    res.writeHead(status || HTTP_STATUS_CODES.OK, {\n      'Content-Type': 'application/json',\n    });\n    res.write(stringified);\n\n    res.end();\n  }\n\n  addEndpoint(path, method, handler, options = {}) {\n    if (this.endpoints[path] && this.endpoints[path][method]) {\n      throw new Error(`Endpoint \"${path}\" for method \"${method}\" already exists in REST API`);\n    }\n\n    this.endpoints[path] = {\n      ...(this.endpoints[path] || {}),\n      [method]: { handler, options },\n    };\n  }\n\n  getEndpointsOptions() {\n    return Object.keys(this.endpoints).reduce(\n      (options, path) => ({\n        ...options,\n        [this.makeEndpoint(path)]: Object.keys(this.endpoints[path]).reduce(\n          (methods, method) => ({\n            ...methods,\n            [method]: { options: this.endpoints[path][method].options },\n          }),\n          {},\n        ),\n      }),\n      {},\n    );\n  }\n}\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/RESTAPI.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/RESTAPI/server/RESTAPI.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  default: () => RESTAPI\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebApp(v) {\n    WebApp = v;\n  }\n\n}, 1);\nlet connectRoute;\nmodule.link(\"connect-route\", {\n  default(v) {\n    connectRoute = v;\n  }\n\n}, 2);\nlet Fiber;\nmodule.link(\"fibers\", {\n  default(v) {\n    Fiber = v;\n  }\n\n}, 3);\nlet compose;\nmodule.link(\"recompose\", {\n  compose(v) {\n    compose = v;\n  }\n\n}, 4);\nlet defaultMiddlewares;\nmodule.link(\"./middlewares\", {\n  \"*\"(v) {\n    defaultMiddlewares = v;\n  }\n\n}, 5);\nlet logRequest, trackRequest, setIsAPI, setAPIUser;\nmodule.link(\"./helpers\", {\n  logRequest(v) {\n    logRequest = v;\n  },\n\n  trackRequest(v) {\n    trackRequest = v;\n  },\n\n  setIsAPI(v) {\n    setIsAPI = v;\n  },\n\n  setAPIUser(v) {\n    setAPIUser = v;\n  }\n\n}, 6);\nlet HTTP_STATUS_CODES;\nmodule.link(\"./restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 7);\nlet setClientMicroservice, setClientUrl;\nmodule.link(\"../../../utils/server/getClientUrl\", {\n  setClientMicroservice(v) {\n    setClientMicroservice = v;\n  },\n\n  setClientUrl(v) {\n    setClientUrl = v;\n  }\n\n}, 8);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass RESTAPI {\n  constructor({\n    rootPath = '/api',\n    preMiddlewares = defaultMiddlewares.preMiddlewares,\n    postMiddlewares = defaultMiddlewares.postMiddlewares\n  } = {}) {\n    _defineProperty(this, \"makeEndpoint\", path => this.rootPath + path);\n\n    this.rootPath = rootPath;\n    this.preMiddlewares = preMiddlewares;\n    this.postMiddlewares = postMiddlewares;\n    this.endpoints = {};\n  }\n\n  reset() {\n    WebApp.connectHandlers.stack = [];\n  }\n\n  start() {\n    this.reset();\n    this.registerMiddlewares(this.preMiddlewares);\n    this.registerEndpoints();\n    this.registerMiddlewares(this.postMiddlewares);\n  }\n\n  registerMiddlewares(middlewares) {\n    middlewares.forEach(middleware => {\n      WebApp.connectHandlers.use(this.rootPath, middleware(this.getEndpointsOptions()));\n    });\n  }\n\n  registerEndpoints() {\n    const endpoints = Object.keys(this.endpoints);\n    endpoints.forEach(endpoint => {\n      const methods = Object.keys(this.endpoints[endpoint]);\n      methods.forEach(method => {\n        const finalEndpoint = this.makeEndpoint(endpoint);\n        const {\n          handler\n        } = this.endpoints[endpoint][method];\n        this.registerEndpoint(finalEndpoint, handler, method);\n      });\n    });\n  }\n\n  wrapHandler(handler) {\n    return (req, res, next) => {\n      Fiber(() => {\n        const {\n          headers = {}\n        } = req;\n        const {\n          host,\n          location\n        } = headers;\n        setClientMicroservice('api');\n        setClientUrl({\n          host,\n          href: location\n        });\n        setIsAPI();\n        setAPIUser(req.user);\n\n        try {\n          Promise.resolve().then(() => handler({\n            user: req.user,\n            body: req.body,\n            query: req.query,\n            params: req.params,\n            files: req.files\n          })).then(result => this.handleSuccess(result, req, res)).catch(next);\n        } catch (error) {\n          next(error);\n        }\n      }).run();\n    };\n  }\n\n  registerEndpoint(endpoint, handler, method) {\n    compose(WebApp.connectHandlers.use.bind(WebApp.connectHandlers), Meteor.bindEnvironment, connectRoute)(router => {\n      router[method.toLowerCase()](endpoint, this.wrapHandler(handler));\n    });\n  }\n\n  handleSuccess(result = '', req, res) {\n    const {\n      status\n    } = result;\n    const stringified = JSON.stringify(result); // LOGS\n\n    logRequest({\n      req,\n      result: stringified\n    });\n    trackRequest({\n      req,\n      result: stringified\n    });\n    res.writeHead(status || HTTP_STATUS_CODES.OK, {\n      'Content-Type': 'application/json'\n    });\n    res.write(stringified);\n    res.end();\n  }\n\n  addEndpoint(path, method, handler, options = {}) {\n    if (this.endpoints[path] && this.endpoints[path][method]) {\n      throw new Error(`Endpoint \"${path}\" for method \"${method}\" already exists in REST API`);\n    }\n\n    this.endpoints[path] = (0, _objectSpread2.default)({}, this.endpoints[path] || {}, {\n      [method]: {\n        handler,\n        options\n      }\n    });\n  }\n\n  getEndpointsOptions() {\n    return Object.keys(this.endpoints).reduce((options, path) => (0, _objectSpread2.default)({}, options, {\n      [this.makeEndpoint(path)]: Object.keys(this.endpoints[path]).reduce((methods, method) => (0, _objectSpread2.default)({}, methods, {\n        [method]: {\n          options: this.endpoints[path][method].options\n        }\n      }), {})\n    }), {});\n  }\n\n}","map":{"version":3,"sources":["imports/core/api/RESTAPI/server/RESTAPI.js"],"names":["constructor","rootPath","preMiddlewares","defaultMiddlewares","postMiddlewares","reset","WebApp","start","registerMiddlewares","middlewares","middleware","path","registerEndpoints","endpoints","Object","endpoint","methods","method","finalEndpoint","handler","wrapHandler","Fiber","headers","location","setClientMicroservice","setClientUrl","href","setIsAPI","setAPIUser","req","Promise","user","body","query","params","files","result","next","registerEndpoint","compose","Meteor","router","handleSuccess","status","stringified","JSON","logRequest","trackRequest","res","HTTP_STATUS_CODES","addEndpoint","options","getEndpointsOptions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAce,MAAA,OAAA,CAAc;AAC3BA,EAAAA,WAAW,CAAC;AACVC,IAAAA,QAAQ,GADE,MAAA;AAEVC,IAAAA,cAAc,GAAGC,kBAAkB,CAFzB,cAAA;AAGVC,IAAAA,eAAe,GAAGD,kBAAkB,CAACC;AAH3B,MAAD,EAAA,EAIH;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,cAAA,EAwBOO,IAAI,IAAI,KAAA,QAAA,GAxBf,IAAA,CAAA;;AACN,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,cAAA,GAAA,cAAA;AACA,SAAA,eAAA,GAAA,eAAA;AACA,SAAA,SAAA,GAAA,EAAA;AACD;;AAEDN,EAAAA,KAAK,GAAG;AACNC,IAAAA,MAAM,CAANA,eAAAA,CAAAA,KAAAA,GAAAA,EAAAA;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,SAAA,KAAA;AACA,SAAA,mBAAA,CAAyB,KAAzB,cAAA;AACA,SAAA,iBAAA;AACA,SAAA,mBAAA,CAAyB,KAAzB,eAAA;AACD;;AAEDC,EAAAA,mBAAmB,CAAA,WAAA,EAAc;AAC/BC,IAAAA,WAAW,CAAXA,OAAAA,CAAqBC,UAAD,IAAgB;AAClCJ,MAAAA,MAAM,CAANA,eAAAA,CAAAA,GAAAA,CAA2B,KAA3BA,QAAAA,EAA0CI,UAAU,CAAC,KAArDJ,mBAAqD,EAAD,CAApDA;AADFG,KAAAA;AAGD;;AAIDG,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,SAAS,GAAGC,MAAM,CAANA,IAAAA,CAAY,KAA9B,SAAkBA,CAAlB;AAEAD,IAAAA,SAAS,CAATA,OAAAA,CAAmBE,QAAD,IAAc;AAC9B,YAAMC,OAAO,GAAGF,MAAM,CAANA,IAAAA,CAAY,KAAA,SAAA,CAA5B,QAA4B,CAAZA,CAAhB;AAEAE,MAAAA,OAAO,CAAPA,OAAAA,CAAiBC,MAAD,IAAY;AAC1B,cAAMC,aAAa,GAAG,KAAA,YAAA,CAAtB,QAAsB,CAAtB;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAc,KAAA,SAAA,CAAA,QAAA,EAApB,MAAoB,CAApB;AAEA,aAAA,gBAAA,CAAA,aAAA,EAAA,OAAA,EAAA,MAAA;AAJFH,OAAAA;AAHFH,KAAAA;AAUD;;AAEDO,EAAAA,WAAW,CAAA,OAAA,EAAU;AACnB,WAAO,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,KAAoB;AACzBC,MAAAA,KAAK,CAAC,MAAM;AACV,cAAM;AAAEC,UAAAA,OAAO,GAAG;AAAZ,YAAN,GAAA;AACA,cAAM;AAAA,UAAA,IAAA;AAAQC,UAAAA;AAAR,YAAN,OAAA;AAEAC,QAAAA,qBAAqB,CAArBA,KAAqB,CAArBA;AACAC,QAAAA,YAAY,CAAC;AAAA,UAAA,IAAA;AAAQC,UAAAA,IAAI,EAAEH;AAAd,SAAD,CAAZE;AACAE,QAAAA,QAAQ;AACRC,QAAAA,UAAU,CAACC,GAAG,CAAdD,IAAU,CAAVA;;AAEA,YAAI;AACFE,UAAAA,OAAO,CAAPA,OAAAA,GAAAA,IAAAA,CACQ,MACJX,OAAO,CAAC;AACNY,YAAAA,IAAI,EAAEF,GAAG,CADH,IAAA;AAENG,YAAAA,IAAI,EAAEH,GAAG,CAFH,IAAA;AAGNI,YAAAA,KAAK,EAAEJ,GAAG,CAHJ,KAAA;AAINK,YAAAA,MAAM,EAAEL,GAAG,CAJL,MAAA;AAKNM,YAAAA,KAAK,EAAEN,GAAG,CAACM;AALL,WAAD,CAFXL,EAAAA,IAAAA,CASQM,MAAM,IAAI,KAAA,aAAA,CAAA,MAAA,EAAA,GAAA,EATlBN,GASkB,CATlBA,EAAAA,KAAAA,CAAAA,IAAAA;AADF,SAAA,CAYE,OAAA,KAAA,EAAc;AACdO,UAAAA,IAAI,CAAJA,KAAI,CAAJA;AACD;AAvBHhB,OAAK,CAALA,CAAAA,GAAAA;AADF,KAAA;AA2BD;;AAEDiB,EAAAA,gBAAgB,CAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAA4B;AAC1CC,IAAAA,OAAO,CACLjC,MAAM,CAANA,eAAAA,CAAAA,GAAAA,CAAAA,IAAAA,CAAgCA,MAAM,CADjC,eACLA,CADK,EAELkC,MAAM,CAFD,eAAA,EAAPD,YAAO,CAAPA,CAIGE,MAAD,IAAY;AACZA,MAAAA,MAAM,CAACxB,MAAM,CAAbwB,WAAOxB,EAAD,CAANwB,CAAAA,QAAAA,EAAuC,KAAA,WAAA,CAAvCA,OAAuC,CAAvCA;AALFF,KAAAA;AAOD;;AAEDG,EAAAA,aAAa,CAACN,MAAM,GAAP,EAAA,EAAA,GAAA,EAAA,GAAA,EAAwB;AACnC,UAAM;AAAEO,MAAAA;AAAF,QAAN,MAAA;AACA,UAAMC,WAAW,GAAGC,IAAI,CAAJA,SAAAA,CAFe,MAEfA,CAApB,CAFmC,CAInC;;AACAC,IAAAA,UAAU,CAAC;AAAA,MAAA,GAAA;AAAOV,MAAAA,MAAM,EAAEQ;AAAf,KAAD,CAAVE;AAEAC,IAAAA,YAAY,CAAC;AAAA,MAAA,GAAA;AAAOX,MAAAA,MAAM,EAAEQ;AAAf,KAAD,CAAZG;AAEAC,IAAAA,GAAG,CAAHA,SAAAA,CAAcL,MAAM,IAAIM,iBAAiB,CAAzCD,EAAAA,EAA8C;AAC5C,sBAAgB;AAD4B,KAA9CA;AAGAA,IAAAA,GAAG,CAAHA,KAAAA,CAAAA,WAAAA;AAEAA,IAAAA,GAAG,CAAHA,GAAAA;AACD;;AAEDE,EAAAA,WAAW,CAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EAAwBC,OAAO,GAA/B,EAAA,EAAsC;AAC/C,QAAI,KAAA,SAAA,CAAA,IAAA,KAAwB,KAAA,SAAA,CAAA,IAAA,EAA5B,MAA4B,CAA5B,EAA0D;AACxD,YAAM,IAAA,KAAA,CAAW,aAAYxC,IAAK,iBAAgBM,MAAlD,8BAAM,CAAN;AACD;;AAED,SAAA,SAAA,CAAA,IAAA,oCACM,KAAA,SAAA,CAAA,IAAA,KADiB,EAAvB;AAEE,OAAA,MAAA,GAAU;AAAA,QAAA,OAAA;AAAWkC,QAAAA;AAAX;AAFZ;AAID;;AAEDC,EAAAA,mBAAmB,GAAG;AACpB,WAAO,MAAM,CAAN,IAAA,CAAY,KAAZ,SAAA,EAAA,MAAA,CACL,CAAA,OAAA,EAAA,IAAA,qCAAoB,OAApB;AAEE,OAAC,KAAA,YAAA,CAAD,IAAC,CAAD,GAA2B,MAAM,CAAN,IAAA,CAAY,KAAA,SAAA,CAAZ,IAAY,CAAZ,EAAA,MAAA,CACzB,CAAA,OAAA,EAAA,MAAA,qCAAsB,OAAtB;AAEE,SAAA,MAAA,GAAU;AAAED,UAAAA,OAAO,EAAE,KAAA,SAAA,CAAA,IAAA,EAAA,MAAA,EAA6BA;AAAxC;AAFZ,QADyB,EAAA,EAAA;AAF7B,MADK,EAAP,EAAO,CAAP;AAaD;;AAhI0B","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { WebApp } from 'meteor/webapp';\nimport connectRoute from 'connect-route';\nimport Fiber from 'fibers';\nimport { compose } from 'recompose';\n\nimport * as defaultMiddlewares from './middlewares';\nimport { logRequest, trackRequest, setIsAPI, setAPIUser } from './helpers';\nimport { HTTP_STATUS_CODES } from './restApiConstants';\nimport {\n  setClientMicroservice,\n  setClientUrl,\n} from '../../../utils/server/getClientUrl';\n\nexport default class RESTAPI {\n  constructor({\n    rootPath = '/api',\n    preMiddlewares = defaultMiddlewares.preMiddlewares,\n    postMiddlewares = defaultMiddlewares.postMiddlewares,\n  } = {}) {\n    this.rootPath = rootPath;\n    this.preMiddlewares = preMiddlewares;\n    this.postMiddlewares = postMiddlewares;\n    this.endpoints = {};\n  }\n\n  reset() {\n    WebApp.connectHandlers.stack = [];\n  }\n\n  start() {\n    this.reset();\n    this.registerMiddlewares(this.preMiddlewares);\n    this.registerEndpoints();\n    this.registerMiddlewares(this.postMiddlewares);\n  }\n\n  registerMiddlewares(middlewares) {\n    middlewares.forEach((middleware) => {\n      WebApp.connectHandlers.use(this.rootPath, middleware(this.getEndpointsOptions()));\n    });\n  }\n\n  makeEndpoint = path => this.rootPath + path;\n\n  registerEndpoints() {\n    const endpoints = Object.keys(this.endpoints);\n\n    endpoints.forEach((endpoint) => {\n      const methods = Object.keys(this.endpoints[endpoint]);\n\n      methods.forEach((method) => {\n        const finalEndpoint = this.makeEndpoint(endpoint);\n        const { handler } = this.endpoints[endpoint][method];\n\n        this.registerEndpoint(finalEndpoint, handler, method);\n      });\n    });\n  }\n\n  wrapHandler(handler) {\n    return (req, res, next) => {\n      Fiber(() => {\n        const { headers = {} } = req;\n        const { host, location } = headers;\n\n        setClientMicroservice('api');\n        setClientUrl({ host, href: location });\n        setIsAPI();\n        setAPIUser(req.user);\n\n        try {\n          Promise.resolve()\n            .then(() =>\n              handler({\n                user: req.user,\n                body: req.body,\n                query: req.query,\n                params: req.params,\n                files: req.files,\n              }))\n            .then(result => this.handleSuccess(result, req, res))\n            .catch(next);\n        } catch (error) {\n          next(error);\n        }\n      }).run();\n    };\n  }\n\n  registerEndpoint(endpoint, handler, method) {\n    compose(\n      WebApp.connectHandlers.use.bind(WebApp.connectHandlers),\n      Meteor.bindEnvironment,\n      connectRoute,\n    )((router) => {\n      router[method.toLowerCase()](endpoint, this.wrapHandler(handler));\n    });\n  }\n\n  handleSuccess(result = '', req, res) {\n    const { status } = result;\n    const stringified = JSON.stringify(result);\n\n    // LOGS\n    logRequest({ req, result: stringified });\n\n    trackRequest({ req, result: stringified });\n\n    res.writeHead(status || HTTP_STATUS_CODES.OK, {\n      'Content-Type': 'application/json',\n    });\n    res.write(stringified);\n\n    res.end();\n  }\n\n  addEndpoint(path, method, handler, options = {}) {\n    if (this.endpoints[path] && this.endpoints[path][method]) {\n      throw new Error(`Endpoint \"${path}\" for method \"${method}\" already exists in REST API`);\n    }\n\n    this.endpoints[path] = {\n      ...(this.endpoints[path] || {}),\n      [method]: { handler, options },\n    };\n  }\n\n  getEndpointsOptions() {\n    return Object.keys(this.endpoints).reduce(\n      (options, path) => ({\n        ...options,\n        [this.makeEndpoint(path)]: Object.keys(this.endpoints[path]).reduce(\n          (methods, method) => ({\n            ...methods,\n            [method]: { options: this.endpoints[path][method].options },\n          }),\n          {},\n        ),\n      }),\n      {},\n    );\n  }\n}\n"]},"sourceType":"script","hash":"0e8f8d9487650a6c3c714be37b9d465a0c1dcda3"}
