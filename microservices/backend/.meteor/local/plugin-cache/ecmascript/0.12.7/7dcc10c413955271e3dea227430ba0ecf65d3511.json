{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/OfferList/test/client/makeFeedback.spec.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/OfferList/test/client/makeFeedback.spec.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/OfferList/test/client/makeFeedback.spec.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/OfferList/test/client/makeFeedback.spec.jsx"],"names":["React","expect","injectIntl","getMountedComponent","makeFeedback","FEEDBACK_OPTIONS","HtmlPreview","DummyComponentProps","intl","Object","model","offer","DummyComponent","formatMessage","component","props","Component","withRouter","describe","beforeEach","reset","it","skip","option","POSITIVE","lender","contact","firstName","loan","borrowers","name","user","assignedEmployee","property","address1","zipCode","city","createdAt","Date","text","includes","to","equal"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { injectIntl } from 'react-intl';\n\nimport { getMountedComponent } from '../../../../utils/testHelpers';\nimport { makeFeedback, FEEDBACK_OPTIONS } from '../../feedbackHelpers';\nimport HtmlPreview from '../../../HtmlPreview/HtmlPreview';\n\ntype DummyComponentProps = {\n  intl: Object,\n  model: Object,\n  offer: Object,\n};\n\nconst DummyComponent = ({\n  intl: { formatMessage },\n  model,\n  offer,\n}: DummyComponentProps) => (\n  <HtmlPreview value={makeFeedback({ model, offer, formatMessage })} />\n);\n\nconst component = props =>\n  getMountedComponent({\n    Component: injectIntl(DummyComponent),\n    props,\n    withRouter: false,\n  });\n\ndescribe('makeFeedback', () => {\n  beforeEach(() => {\n    getMountedComponent.reset();\n  });\n\n  // Not working during meteor tests\n  it.skip('renders the feedback with correct intl values', () => {\n    const model = { option: FEEDBACK_OPTIONS.POSITIVE };\n    const offer = {\n      lender: {\n        contact: { firstName: 'Bob' },\n        loan: {\n          borrowers: [{ name: 'John' }],\n          user: { assignedEmployee: { name: 'Julia' } },\n        },\n      },\n      property: {\n        address1: 'Rue du test 1',\n        zipCode: '1201',\n        city: 'Genève',\n      },\n      createdAt: new Date(),\n    };\n    expect(component({ model, offer })\n      .text()\n      .includes('Bob')).to.equal(true);\n    expect(component({ model, offer })\n      .text()\n      .includes('John')).to.equal(true);\n    expect(component({ model, offer })\n      .text()\n      .includes('Julia')).to.equal(true);\n    expect(component({ model, offer })\n      .text()\n      .includes('Rue du test 1, 1201 Genève')).to.equal(true);\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/OfferList/test/client/makeFeedback.spec.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/OfferList/test/client/makeFeedback.spec.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 1);\nlet injectIntl;\nmodule.link(\"react-intl\", {\n  injectIntl(v) {\n    injectIntl = v;\n  }\n\n}, 2);\nlet getMountedComponent;\nmodule.link(\"../../../../utils/testHelpers\", {\n  getMountedComponent(v) {\n    getMountedComponent = v;\n  }\n\n}, 3);\nlet makeFeedback, FEEDBACK_OPTIONS;\nmodule.link(\"../../feedbackHelpers\", {\n  makeFeedback(v) {\n    makeFeedback = v;\n  },\n\n  FEEDBACK_OPTIONS(v) {\n    FEEDBACK_OPTIONS = v;\n  }\n\n}, 4);\nlet HtmlPreview;\nmodule.link(\"../../../HtmlPreview/HtmlPreview\", {\n  default(v) {\n    HtmlPreview = v;\n  }\n\n}, 5);\n\nconst DummyComponent = (_ref) => {\n  let {\n    intl: {\n      formatMessage\n    },\n    model,\n    offer\n  } = _ref;\n  return React.createElement(HtmlPreview, {\n    value: makeFeedback({\n      model,\n      offer,\n      formatMessage\n    })\n  });\n};\n\nconst component = props => getMountedComponent({\n  Component: injectIntl(DummyComponent),\n  props,\n  withRouter: false\n});\n\ndescribe('makeFeedback', () => {\n  beforeEach(() => {\n    getMountedComponent.reset();\n  }); // Not working during meteor tests\n\n  it.skip('renders the feedback with correct intl values', () => {\n    const model = {\n      option: FEEDBACK_OPTIONS.POSITIVE\n    };\n    const offer = {\n      lender: {\n        contact: {\n          firstName: 'Bob'\n        },\n        loan: {\n          borrowers: [{\n            name: 'John'\n          }],\n          user: {\n            assignedEmployee: {\n              name: 'Julia'\n            }\n          }\n        }\n      },\n      property: {\n        address1: 'Rue du test 1',\n        zipCode: '1201',\n        city: 'Genève'\n      },\n      createdAt: new Date()\n    };\n    expect(component({\n      model,\n      offer\n    }).text().includes('Bob')).to.equal(true);\n    expect(component({\n      model,\n      offer\n    }).text().includes('John')).to.equal(true);\n    expect(component({\n      model,\n      offer\n    }).text().includes('Julia')).to.equal(true);\n    expect(component({\n      model,\n      offer\n    }).text().includes('Rue du test 1, 1201 Genève')).to.equal(true);\n  });\n});","map":{"version":3,"sources":["imports/core/components/OfferList/test/client/makeFeedback.spec.jsx"],"names":["DummyComponent","intl","formatMessage","offer","makeFeedback","component","props","getMountedComponent","Component","injectIntl","withRouter","describe","beforeEach","it","model","option","FEEDBACK_OPTIONS","POSITIVE","lender","contact","firstName","loan","borrowers","name","user","assignedEmployee","property","address1","zipCode","city","createdAt","expect"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { injectIntl } from 'react-intl';\n\nimport { getMountedComponent } from '../../../../utils/testHelpers';\nimport { makeFeedback, FEEDBACK_OPTIONS } from '../../feedbackHelpers';\nimport HtmlPreview from '../../../HtmlPreview/HtmlPreview';\n\ntype DummyComponentProps = {\n  intl: Object,\n  model: Object,\n  offer: Object,\n};\n\nconst DummyComponent = ({\n  intl: { formatMessage },\n  model,\n  offer,\n}: DummyComponentProps) => (\n  <HtmlPreview value={makeFeedback({ model, offer, formatMessage })} />\n);\n\nconst component = props =>\n  getMountedComponent({\n    Component: injectIntl(DummyComponent),\n    props,\n    withRouter: false,\n  });\n\ndescribe('makeFeedback', () => {\n  beforeEach(() => {\n    getMountedComponent.reset();\n  });\n\n  // Not working during meteor tests\n  it.skip('renders the feedback with correct intl values', () => {\n    const model = { option: FEEDBACK_OPTIONS.POSITIVE };\n    const offer = {\n      lender: {\n        contact: { firstName: 'Bob' },\n        loan: {\n          borrowers: [{ name: 'John' }],\n          user: { assignedEmployee: { name: 'Julia' } },\n        },\n      },\n      property: {\n        address1: 'Rue du test 1',\n        zipCode: '1201',\n        city: 'Genève',\n      },\n      createdAt: new Date(),\n    };\n    expect(component({ model, offer })\n      .text()\n      .includes('Bob')).to.equal(true);\n    expect(component({ model, offer })\n      .text()\n      .includes('John')).to.equal(true);\n    expect(component({ model, offer })\n      .text()\n      .includes('Julia')).to.equal(true);\n    expect(component({ model, offer })\n      .text()\n      .includes('Rue du test 1, 1201 Genève')).to.equal(true);\n  });\n});\n"]},"sourceType":"script","hash":"7dcc10c413955271e3dea227430ba0ecf65d3511"}
