{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/email/server/test/setupEmailTests.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/email/server/test/setupEmailTests.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/email/server/test/setupEmailTests.js","inputSourceMap":{"version":3,"sources":["imports/core/api/email/server/test/setupEmailTests.js"],"names":["Meteor","Mongo","isEmailTestEnv","emailTestCollection","POLLING_INTERVAL","TIMEOUT","Collection","methods","storeTestEmail","email","insert","getAllTestEmails","expected","timeout","pollingInterval","counter","Promise","resolve","interval","setInterval","emails","find","sort","date","fetch","length","clearInterval"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,cAAT;AAEA,IAAIC,mBAAJ,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG,GAAzB,C,CACA;AACA;;AACA,MAAMC,OAAO,GAAG,IAAhB;;AAEA,IAAIH,cAAJ,EAAoB;AAClBC,EAAAA,mBAAmB,GAAG,IAAIF,KAAK,CAACK,UAAV,CAAqB,qBAArB,CAAtB;AAEAN,EAAAA,MAAM,CAACO,OAAP,CAAe;AACbC,IAAAA,cAAc,CAACC,KAAD,EAAQ;AACpB,aAAON,mBAAmB,CAACO,MAApB,CAA2B,EAAE,GAAGD;AAAL,OAA3B,CAAP;AACD,KAHY;;AAIbE,IAAAA,gBAAgB,CAAC;AACfC,MAAAA,QAAQ,GAAG,CADI;AAEfC,MAAAA,OAAO,GAAGR,OAFK;AAGfS,MAAAA,eAAe,GAAGV;AAHH,QAIb,EAJY,EAIR;AACN;AACA;AACA,UAAIW,OAAO,GAAG,CAAd;AAEA,aAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,cAAMC,QAAQ,GAAGlB,MAAM,CAACmB,WAAP,CAAmB,MAAM;AACxCJ,UAAAA,OAAO,IAAI,CAAX;AAEA,gBAAMK,MAAM,GAAGjB,mBAAmB,CAC/BkB,IADY,CACP,EADO,EACH;AAAEC,YAAAA,IAAI,EAAE;AAAEC,cAAAA,IAAI,EAAE;AAAR;AAAR,WADG,EAEZC,KAFY,EAAf;;AAIA,cAAIJ,MAAM,IAAIA,MAAM,CAACK,MAAP,IAAiBb,QAA/B,EAAyC;AACvCZ,YAAAA,MAAM,CAAC0B,aAAP,CAAqBR,QAArB;AACAD,YAAAA,OAAO,CAACG,MAAD,CAAP;AACD;;AAED,cAAIL,OAAO,GAAGF,OAAO,GAAGC,eAAxB,EAAyC;AACvCG,YAAAA,OAAO,CAACG,MAAD,CAAP;AACD;AACF,SAfgB,EAedN,eAfc,CAAjB;AAgBD,OAjBM,CAAP;AAkBD;;AA/BY,GAAf;AAiCD;;AAED,eAAeX,mBAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { isEmailTestEnv } from '../EmailService';\n\nlet emailTestCollection;\n\n// Use high polling interval to catch errors when too many emails are sent\nconst POLLING_INTERVAL = 500;\n// Most tests have a 10'000 timeout, so let them have an extra\n// 2000ms to wrap up\nconst TIMEOUT = 8000;\n\nif (isEmailTestEnv) {\n  emailTestCollection = new Mongo.Collection('emailTestCollection');\n\n  Meteor.methods({\n    storeTestEmail(email) {\n      return emailTestCollection.insert({ ...email });\n    },\n    getAllTestEmails({\n      expected = 1,\n      timeout = TIMEOUT,\n      pollingInterval = POLLING_INTERVAL,\n    } = {}) {\n      // Because emails are sent asynchronously after the actions that trigger\n      // them, poll the DB for 10 seconds until something is found\n      let counter = 0;\n\n      return new Promise((resolve) => {\n        const interval = Meteor.setInterval(() => {\n          counter += 1;\n\n          const emails = emailTestCollection\n            .find({}, { sort: { date: 1 } })\n            .fetch();\n\n          if (emails && emails.length >= expected) {\n            Meteor.clearInterval(interval);\n            resolve(emails);\n          }\n\n          if (counter > timeout / pollingInterval) {\n            resolve(emails);\n          }\n        }, pollingInterval);\n      });\n    },\n  });\n}\n\nexport default emailTestCollection;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/email/server/test/setupEmailTests.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/email/server/test/setupEmailTests.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet isEmailTestEnv;\nmodule.link(\"../EmailService\", {\n  isEmailTestEnv(v) {\n    isEmailTestEnv = v;\n  }\n\n}, 2);\nlet emailTestCollection; // Use high polling interval to catch errors when too many emails are sent\n\nconst POLLING_INTERVAL = 500; // Most tests have a 10'000 timeout, so let them have an extra\n// 2000ms to wrap up\n\nconst TIMEOUT = 8000;\n\nif (isEmailTestEnv) {\n  emailTestCollection = new Mongo.Collection('emailTestCollection');\n  Meteor.methods({\n    storeTestEmail(email) {\n      return emailTestCollection.insert((0, _objectSpread2.default)({}, email));\n    },\n\n    getAllTestEmails({\n      expected = 1,\n      timeout = TIMEOUT,\n      pollingInterval = POLLING_INTERVAL\n    } = {}) {\n      // Because emails are sent asynchronously after the actions that trigger\n      // them, poll the DB for 10 seconds until something is found\n      let counter = 0;\n      return new Promise(resolve => {\n        const interval = Meteor.setInterval(() => {\n          counter += 1;\n          const emails = emailTestCollection.find({}, {\n            sort: {\n              date: 1\n            }\n          }).fetch();\n\n          if (emails && emails.length >= expected) {\n            Meteor.clearInterval(interval);\n            resolve(emails);\n          }\n\n          if (counter > timeout / pollingInterval) {\n            resolve(emails);\n          }\n        }, pollingInterval);\n      });\n    }\n\n  });\n}\n\nmodule.exportDefault(emailTestCollection);","map":{"version":3,"sources":["imports/core/api/email/server/test/setupEmailTests.js"],"names":["POLLING_INTERVAL","TIMEOUT","emailTestCollection","Mongo","Meteor","storeTestEmail","email","getAllTestEmails","expected","timeout","pollingInterval","counter","resolve","interval","emails","sort","date"],"mappings":";;;;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,cAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iBAAA,EAAA;AAAA,EAAA,cAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAIA,IAAA,mBAAA,C,CAEA;;AACA,MAAMA,gBAAgB,GAAtB,GAAA,C,CACA;AACA;;AACA,MAAMC,OAAO,GAAb,IAAA;;AAEA,IAAA,cAAA,EAAoB;AAClBC,EAAAA,mBAAmB,GAAG,IAAIC,KAAK,CAAT,UAAA,CAAtBD,qBAAsB,CAAtBA;AAEAE,EAAAA,MAAM,CAANA,OAAAA,CAAe;AACbC,IAAAA,cAAc,CAAA,KAAA,EAAQ;AACpB,aAAO,mBAAmB,CAAnB,MAAA,iCAAgCC,KAAhC,EAAP;AAFW,KAAA;;AAIbC,IAAAA,gBAAgB,CAAC;AACfC,MAAAA,QAAQ,GADO,CAAA;AAEfC,MAAAA,OAAO,GAFQ,OAAA;AAGfC,MAAAA,eAAe,GAAGV;AAHH,QAAD,EAAA,EAIR;AACN;AACA;AACA,UAAIW,OAAO,GAAX,CAAA;AAEA,aAAO,IAAA,OAAA,CAAaC,OAAD,IAAa;AAC9B,cAAMC,QAAQ,GAAG,MAAM,CAAN,WAAA,CAAmB,MAAM;AACxCF,UAAAA,OAAO,IAAPA,CAAAA;AAEA,gBAAMG,MAAM,GAAG,mBAAmB,CAAnB,IAAA,CAAA,EAAA,EACH;AAAEC,YAAAA,IAAI,EAAE;AAAEC,cAAAA,IAAI,EAAE;AAAR;AAAR,WADG,EAAf,KAAe,EAAf;;AAIA,cAAIF,MAAM,IAAIA,MAAM,CAANA,MAAAA,IAAd,QAAA,EAAyC;AACvCV,YAAAA,MAAM,CAANA,aAAAA,CAAAA,QAAAA;AACAQ,YAAAA,OAAO,CAAPA,MAAO,CAAPA;AACD;;AAED,cAAID,OAAO,GAAGF,OAAO,GAArB,eAAA,EAAyC;AACvCG,YAAAA,OAAO,CAAPA,MAAO,CAAPA;AACD;AAdc,SAAA,EAAjB,eAAiB,CAAjB;AADF,OAAO,CAAP;AAkBD;;AA/BY,GAAfR;AAiCD;;AAhDD,MAAA,CAAA,aAAA,CAkDA,mBAlDA","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { isEmailTestEnv } from '../EmailService';\n\nlet emailTestCollection;\n\n// Use high polling interval to catch errors when too many emails are sent\nconst POLLING_INTERVAL = 500;\n// Most tests have a 10'000 timeout, so let them have an extra\n// 2000ms to wrap up\nconst TIMEOUT = 8000;\n\nif (isEmailTestEnv) {\n  emailTestCollection = new Mongo.Collection('emailTestCollection');\n\n  Meteor.methods({\n    storeTestEmail(email) {\n      return emailTestCollection.insert({ ...email });\n    },\n    getAllTestEmails({\n      expected = 1,\n      timeout = TIMEOUT,\n      pollingInterval = POLLING_INTERVAL,\n    } = {}) {\n      // Because emails are sent asynchronously after the actions that trigger\n      // them, poll the DB for 10 seconds until something is found\n      let counter = 0;\n\n      return new Promise((resolve) => {\n        const interval = Meteor.setInterval(() => {\n          counter += 1;\n\n          const emails = emailTestCollection\n            .find({}, { sort: { date: 1 } })\n            .fetch();\n\n          if (emails && emails.length >= expected) {\n            Meteor.clearInterval(interval);\n            resolve(emails);\n          }\n\n          if (counter > timeout / pollingInterval) {\n            resolve(emails);\n          }\n        }, pollingInterval);\n      });\n    },\n  });\n}\n\nexport default emailTestCollection;\n"]},"sourceType":"script","hash":"99e7bafb0c4715cc44e8a006afc6ca79d7b95b68"}
