{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/redux/widget1/test/Widget1Suggestion.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/redux/widget1/test/Widget1Suggestion.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/redux/widget1/test/Widget1Suggestion.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/redux/widget1/test/Widget1Suggestion.spec.js"],"names":["expect","merge","widget1Suggesters","makeSuggestValue","PURCHASE_TYPE","SALARY","PROPERTY","FORTUNE","WANTED_LOAN","value","prepareState","overrides","widget1","purchaseType","ACQUISITION","property","auto","salary","fortune","currentLoan","wantedLoan","describe","suggesters","createSuggestValue","beforeEach","REFINANCING","it","to","equal","all","default","be","within"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\nimport merge from 'lodash/merge';\n\nimport widget1Suggesters, { makeSuggestValue } from '../widget1Suggestion';\nimport {\n  PURCHASE_TYPE,\n  SALARY,\n  PROPERTY,\n  FORTUNE,\n  WANTED_LOAN,\n} from '../widget1Constants';\n\nconst value = 100;\nconst prepareState = overrides => ({\n  widget1: merge(\n    {\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      property: { value, auto: false },\n      salary: { value, auto: false },\n      fortune: { value, auto: false },\n      currentLoan: { value, auto: false },\n      wantedLoan: { value, auto: false },\n    },\n    overrides,\n  ),\n});\n\ndescribe('suggestValue', () => {\n  let suggesters;\n  const createSuggestValue = () => makeSuggestValue(suggesters);\n\n  beforeEach(() => {\n    suggesters = {\n      [PURCHASE_TYPE.ACQUISITION]: {\n        [SALARY]: {},\n      },\n      [PURCHASE_TYPE.REFINANCING]: {},\n    };\n  });\n\n  it('should not suggest a value if it is currently manual', () => {\n    expect(createSuggestValue()('salary', prepareState())).to.equal(value);\n  });\n\n  it('should suggest a value with \"all\" if it is in auto and the others false', () => {\n    suggesters[PURCHASE_TYPE.ACQUISITION][SALARY].all = () => 1;\n    expect(createSuggestValue()('salary', prepareState({ salary: { auto: true } }))).to.equal(1);\n  });\n\n  it('should suggest a value with \"fortune\" if property is in auto', () => {\n    suggesters[PURCHASE_TYPE.ACQUISITION][SALARY].fortune = () => 1;\n    expect(createSuggestValue()(\n      'salary',\n      prepareState({ salary: { auto: true }, property: { auto: true } }),\n    )).to.equal(1);\n  });\n\n  it('should use the default suggester if none is found', () => {\n    suggesters[PURCHASE_TYPE.ACQUISITION][SALARY] = { default: () => 42 };\n    expect(createSuggestValue()(SALARY, prepareState({ salary: { auto: true } }))).to.equal(42);\n  });\n});\n\ndescribe('widget1Suggesters', () => {\n  describe('salary', () => {\n    it('suggests a salary with all', () => {\n      expect(widget1Suggesters(\n        SALARY,\n        prepareState({\n          salary: { auto: true },\n          property: { auto: false },\n          fortune: { auto: false },\n        }),\n      )).to.equal(5);\n    });\n\n    it('suggests a salary with all and proper values', () => {\n      expect(widget1Suggesters(\n        SALARY,\n        prepareState({\n          salary: { auto: true },\n          property: { auto: false, value: 1000000 },\n          fortune: { auto: false, value: 250000 },\n        }),\n        // + 1 here because of rounding issues\n      )).to.equal(180000 + 1);\n    });\n\n    it('suggests a salary with property', () => {\n      expect(widget1Suggesters(\n        SALARY,\n        prepareState({\n          salary: { auto: true },\n          property: { auto: false },\n          fortune: { auto: true },\n        }),\n      )).to.be.within(18, 18.1);\n    });\n\n    it('suggests a salary with fortune', () => {\n      expect(widget1Suggesters(\n        SALARY,\n        prepareState({\n          salary: { auto: true },\n          property: { auto: true },\n          fortune: { auto: false },\n        }),\n      )).to.be.within(72, 72.1);\n    });\n  });\n\n  describe('fortune', () => {\n    it('suggests a fortune with all', () => {\n      expect(widget1Suggesters(\n        FORTUNE,\n        prepareState({\n          salary: { auto: false },\n          property: { auto: false },\n          fortune: { auto: true },\n        }),\n      )).to.equal(25);\n    });\n\n    it('suggests a fortune with all and proper values', () => {\n      expect(widget1Suggesters(\n        FORTUNE,\n        prepareState({\n          property: { auto: false, value: 1000000 },\n          salary: { auto: false, value: 180000 },\n          fortune: { auto: true },\n        }),\n      )).to.equal(250000);\n    });\n\n    it('suggests a fortune with property', () => {\n      expect(widget1Suggesters(\n        FORTUNE,\n        prepareState({\n          salary: { auto: true },\n          property: { auto: false },\n          fortune: { auto: true },\n        }),\n      )).to.be.within(24.9, 25);\n    });\n\n    it('suggests a fortune with salary', () => {\n      expect(widget1Suggesters(\n        FORTUNE,\n        prepareState({\n          salary: { auto: false },\n          property: { auto: true },\n          fortune: { auto: true },\n        }),\n      )).to.be.within(138.9, 139);\n    });\n  });\n\n  describe('property', () => {\n    it('suggests a property with all', () => {\n      expect(widget1Suggesters(\n        PROPERTY,\n        prepareState({\n          salary: { auto: false },\n          property: { auto: true },\n          fortune: { auto: false },\n        }),\n      )).to.equal(400);\n    });\n\n    it('suggests a property with proper values', () => {\n      expect(widget1Suggesters(\n        PROPERTY,\n        prepareState({\n          salary: { auto: false, value: 180000 },\n          property: { auto: true },\n          fortune: { auto: false, value: 250000 },\n        }),\n      )).to.equal(1000000);\n    });\n\n    it('suggests a property with salary', () => {\n      expect(widget1Suggesters(\n        PROPERTY,\n        prepareState({\n          salary: { auto: false },\n          property: { auto: true },\n          fortune: { auto: true },\n        }),\n      )).to.equal(556);\n    });\n\n    it('suggests a property with fortune', () => {\n      expect(widget1Suggesters(\n        PROPERTY,\n        prepareState({\n          salary: { auto: true },\n          property: { auto: true },\n          fortune: { auto: false },\n        }),\n      )).to.be.within(400, 400.1);\n    });\n  });\n\n  describe('wantedLoan', () => {\n    it('suggests a wantedLoan with currentLoan', () => {\n      expect(widget1Suggesters(\n        WANTED_LOAN,\n        prepareState({\n          wantedLoan: { auto: true },\n          currentLoan: { auto: false, value: 42 },\n          fortune: { auto: false },\n          purchaseType: PURCHASE_TYPE.REFINANCING,\n        }),\n      )).to.equal(42);\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/redux/widget1/test/Widget1Suggestion.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/redux/widget1/test/Widget1Suggestion.spec.js"}},"code":"var expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 0);\nvar merge;\nmodule.link(\"lodash/merge\", {\n  \"default\": function (v) {\n    merge = v;\n  }\n}, 1);\nvar widget1Suggesters, makeSuggestValue;\nmodule.link(\"../widget1Suggestion\", {\n  \"default\": function (v) {\n    widget1Suggesters = v;\n  },\n  makeSuggestValue: function (v) {\n    makeSuggestValue = v;\n  }\n}, 2);\nvar PURCHASE_TYPE, SALARY, PROPERTY, FORTUNE, WANTED_LOAN;\nmodule.link(\"../widget1Constants\", {\n  PURCHASE_TYPE: function (v) {\n    PURCHASE_TYPE = v;\n  },\n  SALARY: function (v) {\n    SALARY = v;\n  },\n  PROPERTY: function (v) {\n    PROPERTY = v;\n  },\n  FORTUNE: function (v) {\n    FORTUNE = v;\n  },\n  WANTED_LOAN: function (v) {\n    WANTED_LOAN = v;\n  }\n}, 3);\nvar value = 100;\n\nvar prepareState = function (overrides) {\n  return {\n    widget1: merge({\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      property: {\n        value: value,\n        auto: false\n      },\n      salary: {\n        value: value,\n        auto: false\n      },\n      fortune: {\n        value: value,\n        auto: false\n      },\n      currentLoan: {\n        value: value,\n        auto: false\n      },\n      wantedLoan: {\n        value: value,\n        auto: false\n      }\n    }, overrides)\n  };\n};\n\ndescribe('suggestValue', function () {\n  var suggesters;\n\n  var createSuggestValue = function () {\n    return makeSuggestValue(suggesters);\n  };\n\n  beforeEach(function () {\n    var _PURCHASE_TYPE$ACQUIS, _suggesters;\n\n    suggesters = (_suggesters = {}, _suggesters[PURCHASE_TYPE.ACQUISITION] = (_PURCHASE_TYPE$ACQUIS = {}, _PURCHASE_TYPE$ACQUIS[SALARY] = {}, _PURCHASE_TYPE$ACQUIS), _suggesters[PURCHASE_TYPE.REFINANCING] = {}, _suggesters);\n  });\n  it('should not suggest a value if it is currently manual', function () {\n    expect(createSuggestValue()('salary', prepareState())).to.equal(value);\n  });\n  it('should suggest a value with \"all\" if it is in auto and the others false', function () {\n    suggesters[PURCHASE_TYPE.ACQUISITION][SALARY].all = function () {\n      return 1;\n    };\n\n    expect(createSuggestValue()('salary', prepareState({\n      salary: {\n        auto: true\n      }\n    }))).to.equal(1);\n  });\n  it('should suggest a value with \"fortune\" if property is in auto', function () {\n    suggesters[PURCHASE_TYPE.ACQUISITION][SALARY].fortune = function () {\n      return 1;\n    };\n\n    expect(createSuggestValue()('salary', prepareState({\n      salary: {\n        auto: true\n      },\n      property: {\n        auto: true\n      }\n    }))).to.equal(1);\n  });\n  it('should use the default suggester if none is found', function () {\n    suggesters[PURCHASE_TYPE.ACQUISITION][SALARY] = {\n      \"default\": function () {\n        return 42;\n      }\n    };\n    expect(createSuggestValue()(SALARY, prepareState({\n      salary: {\n        auto: true\n      }\n    }))).to.equal(42);\n  });\n});\ndescribe('widget1Suggesters', function () {\n  describe('salary', function () {\n    it('suggests a salary with all', function () {\n      expect(widget1Suggesters(SALARY, prepareState({\n        salary: {\n          auto: true\n        },\n        property: {\n          auto: false\n        },\n        fortune: {\n          auto: false\n        }\n      }))).to.equal(5);\n    });\n    it('suggests a salary with all and proper values', function () {\n      expect(widget1Suggesters(SALARY, prepareState({\n        salary: {\n          auto: true\n        },\n        property: {\n          auto: false,\n          value: 1000000\n        },\n        fortune: {\n          auto: false,\n          value: 250000\n        }\n      }) // + 1 here because of rounding issues\n      )).to.equal(180000 + 1);\n    });\n    it('suggests a salary with property', function () {\n      expect(widget1Suggesters(SALARY, prepareState({\n        salary: {\n          auto: true\n        },\n        property: {\n          auto: false\n        },\n        fortune: {\n          auto: true\n        }\n      }))).to.be.within(18, 18.1);\n    });\n    it('suggests a salary with fortune', function () {\n      expect(widget1Suggesters(SALARY, prepareState({\n        salary: {\n          auto: true\n        },\n        property: {\n          auto: true\n        },\n        fortune: {\n          auto: false\n        }\n      }))).to.be.within(72, 72.1);\n    });\n  });\n  describe('fortune', function () {\n    it('suggests a fortune with all', function () {\n      expect(widget1Suggesters(FORTUNE, prepareState({\n        salary: {\n          auto: false\n        },\n        property: {\n          auto: false\n        },\n        fortune: {\n          auto: true\n        }\n      }))).to.equal(25);\n    });\n    it('suggests a fortune with all and proper values', function () {\n      expect(widget1Suggesters(FORTUNE, prepareState({\n        property: {\n          auto: false,\n          value: 1000000\n        },\n        salary: {\n          auto: false,\n          value: 180000\n        },\n        fortune: {\n          auto: true\n        }\n      }))).to.equal(250000);\n    });\n    it('suggests a fortune with property', function () {\n      expect(widget1Suggesters(FORTUNE, prepareState({\n        salary: {\n          auto: true\n        },\n        property: {\n          auto: false\n        },\n        fortune: {\n          auto: true\n        }\n      }))).to.be.within(24.9, 25);\n    });\n    it('suggests a fortune with salary', function () {\n      expect(widget1Suggesters(FORTUNE, prepareState({\n        salary: {\n          auto: false\n        },\n        property: {\n          auto: true\n        },\n        fortune: {\n          auto: true\n        }\n      }))).to.be.within(138.9, 139);\n    });\n  });\n  describe('property', function () {\n    it('suggests a property with all', function () {\n      expect(widget1Suggesters(PROPERTY, prepareState({\n        salary: {\n          auto: false\n        },\n        property: {\n          auto: true\n        },\n        fortune: {\n          auto: false\n        }\n      }))).to.equal(400);\n    });\n    it('suggests a property with proper values', function () {\n      expect(widget1Suggesters(PROPERTY, prepareState({\n        salary: {\n          auto: false,\n          value: 180000\n        },\n        property: {\n          auto: true\n        },\n        fortune: {\n          auto: false,\n          value: 250000\n        }\n      }))).to.equal(1000000);\n    });\n    it('suggests a property with salary', function () {\n      expect(widget1Suggesters(PROPERTY, prepareState({\n        salary: {\n          auto: false\n        },\n        property: {\n          auto: true\n        },\n        fortune: {\n          auto: true\n        }\n      }))).to.equal(556);\n    });\n    it('suggests a property with fortune', function () {\n      expect(widget1Suggesters(PROPERTY, prepareState({\n        salary: {\n          auto: true\n        },\n        property: {\n          auto: true\n        },\n        fortune: {\n          auto: false\n        }\n      }))).to.be.within(400, 400.1);\n    });\n  });\n  describe('wantedLoan', function () {\n    it('suggests a wantedLoan with currentLoan', function () {\n      expect(widget1Suggesters(WANTED_LOAN, prepareState({\n        wantedLoan: {\n          auto: true\n        },\n        currentLoan: {\n          auto: false,\n          value: 42\n        },\n        fortune: {\n          auto: false\n        },\n        purchaseType: PURCHASE_TYPE.REFINANCING\n      }))).to.equal(42);\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/redux/widget1/test/Widget1Suggestion.spec.js"],"names":["value","prepareState","overrides","widget1","merge","purchaseType","PURCHASE_TYPE","property","auto","salary","fortune","currentLoan","wantedLoan","describe","createSuggestValue","makeSuggestValue","beforeEach","suggesters","it","expect","default","widget1Suggesters","REFINANCING"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\nimport merge from 'lodash/merge';\n\nimport widget1Suggesters, { makeSuggestValue } from '../widget1Suggestion';\nimport {\n  PURCHASE_TYPE,\n  SALARY,\n  PROPERTY,\n  FORTUNE,\n  WANTED_LOAN,\n} from '../widget1Constants';\n\nconst value = 100;\nconst prepareState = overrides => ({\n  widget1: merge(\n    {\n      purchaseType: PURCHASE_TYPE.ACQUISITION,\n      property: { value, auto: false },\n      salary: { value, auto: false },\n      fortune: { value, auto: false },\n      currentLoan: { value, auto: false },\n      wantedLoan: { value, auto: false },\n    },\n    overrides,\n  ),\n});\n\ndescribe('suggestValue', () => {\n  let suggesters;\n  const createSuggestValue = () => makeSuggestValue(suggesters);\n\n  beforeEach(() => {\n    suggesters = {\n      [PURCHASE_TYPE.ACQUISITION]: {\n        [SALARY]: {},\n      },\n      [PURCHASE_TYPE.REFINANCING]: {},\n    };\n  });\n\n  it('should not suggest a value if it is currently manual', () => {\n    expect(createSuggestValue()('salary', prepareState())).to.equal(value);\n  });\n\n  it('should suggest a value with \"all\" if it is in auto and the others false', () => {\n    suggesters[PURCHASE_TYPE.ACQUISITION][SALARY].all = () => 1;\n    expect(createSuggestValue()('salary', prepareState({ salary: { auto: true } }))).to.equal(1);\n  });\n\n  it('should suggest a value with \"fortune\" if property is in auto', () => {\n    suggesters[PURCHASE_TYPE.ACQUISITION][SALARY].fortune = () => 1;\n    expect(createSuggestValue()(\n      'salary',\n      prepareState({ salary: { auto: true }, property: { auto: true } }),\n    )).to.equal(1);\n  });\n\n  it('should use the default suggester if none is found', () => {\n    suggesters[PURCHASE_TYPE.ACQUISITION][SALARY] = { default: () => 42 };\n    expect(createSuggestValue()(SALARY, prepareState({ salary: { auto: true } }))).to.equal(42);\n  });\n});\n\ndescribe('widget1Suggesters', () => {\n  describe('salary', () => {\n    it('suggests a salary with all', () => {\n      expect(widget1Suggesters(\n        SALARY,\n        prepareState({\n          salary: { auto: true },\n          property: { auto: false },\n          fortune: { auto: false },\n        }),\n      )).to.equal(5);\n    });\n\n    it('suggests a salary with all and proper values', () => {\n      expect(widget1Suggesters(\n        SALARY,\n        prepareState({\n          salary: { auto: true },\n          property: { auto: false, value: 1000000 },\n          fortune: { auto: false, value: 250000 },\n        }),\n        // + 1 here because of rounding issues\n      )).to.equal(180000 + 1);\n    });\n\n    it('suggests a salary with property', () => {\n      expect(widget1Suggesters(\n        SALARY,\n        prepareState({\n          salary: { auto: true },\n          property: { auto: false },\n          fortune: { auto: true },\n        }),\n      )).to.be.within(18, 18.1);\n    });\n\n    it('suggests a salary with fortune', () => {\n      expect(widget1Suggesters(\n        SALARY,\n        prepareState({\n          salary: { auto: true },\n          property: { auto: true },\n          fortune: { auto: false },\n        }),\n      )).to.be.within(72, 72.1);\n    });\n  });\n\n  describe('fortune', () => {\n    it('suggests a fortune with all', () => {\n      expect(widget1Suggesters(\n        FORTUNE,\n        prepareState({\n          salary: { auto: false },\n          property: { auto: false },\n          fortune: { auto: true },\n        }),\n      )).to.equal(25);\n    });\n\n    it('suggests a fortune with all and proper values', () => {\n      expect(widget1Suggesters(\n        FORTUNE,\n        prepareState({\n          property: { auto: false, value: 1000000 },\n          salary: { auto: false, value: 180000 },\n          fortune: { auto: true },\n        }),\n      )).to.equal(250000);\n    });\n\n    it('suggests a fortune with property', () => {\n      expect(widget1Suggesters(\n        FORTUNE,\n        prepareState({\n          salary: { auto: true },\n          property: { auto: false },\n          fortune: { auto: true },\n        }),\n      )).to.be.within(24.9, 25);\n    });\n\n    it('suggests a fortune with salary', () => {\n      expect(widget1Suggesters(\n        FORTUNE,\n        prepareState({\n          salary: { auto: false },\n          property: { auto: true },\n          fortune: { auto: true },\n        }),\n      )).to.be.within(138.9, 139);\n    });\n  });\n\n  describe('property', () => {\n    it('suggests a property with all', () => {\n      expect(widget1Suggesters(\n        PROPERTY,\n        prepareState({\n          salary: { auto: false },\n          property: { auto: true },\n          fortune: { auto: false },\n        }),\n      )).to.equal(400);\n    });\n\n    it('suggests a property with proper values', () => {\n      expect(widget1Suggesters(\n        PROPERTY,\n        prepareState({\n          salary: { auto: false, value: 180000 },\n          property: { auto: true },\n          fortune: { auto: false, value: 250000 },\n        }),\n      )).to.equal(1000000);\n    });\n\n    it('suggests a property with salary', () => {\n      expect(widget1Suggesters(\n        PROPERTY,\n        prepareState({\n          salary: { auto: false },\n          property: { auto: true },\n          fortune: { auto: true },\n        }),\n      )).to.equal(556);\n    });\n\n    it('suggests a property with fortune', () => {\n      expect(widget1Suggesters(\n        PROPERTY,\n        prepareState({\n          salary: { auto: true },\n          property: { auto: true },\n          fortune: { auto: false },\n        }),\n      )).to.be.within(400, 400.1);\n    });\n  });\n\n  describe('wantedLoan', () => {\n    it('suggests a wantedLoan with currentLoan', () => {\n      expect(widget1Suggesters(\n        WANTED_LOAN,\n        prepareState({\n          wantedLoan: { auto: true },\n          currentLoan: { auto: false, value: 42 },\n          fortune: { auto: false },\n          purchaseType: PURCHASE_TYPE.REFINANCING,\n        }),\n      )).to.equal(42);\n    });\n  });\n});\n"]},"sourceType":"script","hash":"18906fdd95e0e2217c38bdfe1557b34877b98c6d"}
