{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/epotek:accounts-ui/imports/helpers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/epotek:accounts-ui/imports/helpers.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/epotek:accounts-ui/imports/helpers.js","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/epotek:accounts-ui/imports/helpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/epotek:accounts-ui/imports/helpers.js"}},"code":"module.export({\n  loginButtonsSession: () => loginButtonsSession,\n  STATES: () => STATES,\n  getLoginServices: () => getLoginServices,\n  hasPasswordService: () => hasPasswordService,\n  loginResultCallback: () => loginResultCallback,\n  passwordSignupFields: () => passwordSignupFields,\n  validateEmail: () => validateEmail,\n  validatePassword: () => validatePassword,\n  validateUsername: () => validateUsername,\n  redirect: () => redirect,\n  capitalize: () => capitalize\n});\nlet browserHistory;\n\ntry {\n  browserHistory = require('react-router').browserHistory;\n} catch (e) {}\n\nconst loginButtonsSession = Accounts._loginButtonsSession;\nconst STATES = {\n  SIGN_IN: Symbol('SIGN_IN'),\n  SIGN_UP: Symbol('SIGN_UP'),\n  PROFILE: Symbol('PROFILE'),\n  PASSWORD_CHANGE: Symbol('PASSWORD_CHANGE'),\n  PASSWORD_RESET: Symbol('PASSWORD_RESET'),\n  ENROLL_ACCOUNT: Symbol('ENROLL_ACCOUNT')\n};\n\nfunction getLoginServices() {\n  // First look for OAuth services.\n  const services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : []; // Be equally kind to all login services. This also preserves\n  // backwards-compatibility.\n\n  services.sort();\n  return services.map(function (name) {\n    return {\n      name: name\n    };\n  });\n}\n\n// Export getLoginServices using old style globals for accounts-base which\n// requires it.\nthis.getLoginServices = getLoginServices;\n\nfunction hasPasswordService() {\n  // First look for OAuth services.\n  return !!Package['accounts-password'];\n}\n\nfunction loginResultCallback(service, err) {\n  if (!err) {} else if (err instanceof Accounts.LoginCancelledError) {// do nothing\n  } else if (err instanceof ServiceConfiguration.ConfigError) {} else {//loginButtonsSession.errorMessage(err.reason || \"Unknown error\");\n  }\n\n  if (Meteor.isClient) {\n    if (typeof redirect === 'string') {\n      window.location.href = '/';\n    }\n\n    if (typeof service === 'function') {\n      service();\n    }\n  }\n}\n\nfunction passwordSignupFields() {\n  return Accounts.ui._options.passwordSignupFields || 'EMAIL_ONLY_NO_PASSWORD';\n}\n\nfunction validateEmail(email, showMessage, clearMessage) {\n  if (passwordSignupFields() === 'USERNAME_AND_OPTIONAL_EMAIL' && email === '') {\n    return true;\n  }\n\n  if (Accounts.ui._options.emailPattern.test(email)) {\n    return true;\n  } else if (!email || email.length === 0) {\n    showMessage('error.emailRequired', 'warning', false, 'email');\n    return false;\n  } else {\n    showMessage('error.accounts.Invalid email', 'warning', false, 'email');\n    return false;\n  }\n}\n\nfunction validatePassword(password = '', showMessage, clearMessage) {\n  if (password.length >= Accounts.ui._options.minimumPasswordLength) {\n    return true;\n  } else {\n    // const errMsg = T9n.get(\"error.minChar\").replace(/7/, Accounts.ui._options.minimumPasswordLength);\n    const errMsg = 'error.minChar';\n    showMessage(errMsg, 'warning', false, 'password');\n    return false;\n  }\n}\n\nfunction validateUsername(username, showMessage, clearMessage, formState) {\n  if (username) {\n    return true;\n  } else {\n    const fieldName = passwordSignupFields() === 'USERNAME_ONLY' || formState === STATES.SIGN_UP ? 'username' : 'usernameOrEmail';\n    showMessage('error.usernameRequired', 'warning', false, fieldName);\n    return false;\n  }\n}\n\nfunction redirect(redirect) {\n  if (Meteor.isClient) {\n    if (window.history) {\n      // Run after all app specific redirects, i.e. to the login screen.\n      Meteor.setTimeout(() => {\n        if (Package['kadira:flow-router']) {\n          Package['kadira:flow-router'].FlowRouter.go(redirect);\n        } else if (Package['kadira:flow-router-ssr']) {\n          Package['kadira:flow-router-ssr'].FlowRouter.go(redirect);\n        } else if (browserHistory) {\n          browserHistory.push(redirect);\n        } else {\n          window.history.pushState({}, 'redirect', redirect);\n        }\n      }, 100);\n    }\n  }\n}\n\nfunction capitalize(string) {\n  return string.replace(/\\-/, ' ').split(' ').map(word => {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }).join(' ');\n}","map":{"version":3,"sources":["packages/epotek:accounts-ui/imports/helpers.js"],"names":["module","export","loginButtonsSession","STATES","getLoginServices","hasPasswordService","loginResultCallback","passwordSignupFields","validateEmail","validatePassword","validateUsername","redirect","capitalize","browserHistory","require","e","Accounts","_loginButtonsSession","SIGN_IN","Symbol","SIGN_UP","PROFILE","PASSWORD_CHANGE","PASSWORD_RESET","ENROLL_ACCOUNT","services","Package","oauth","serviceNames","sort","map","name","service","err","LoginCancelledError","ServiceConfiguration","ConfigError","Meteor","isClient","window","location","href","ui","_options","email","showMessage","clearMessage","emailPattern","test","length","password","minimumPasswordLength","errMsg","username","formState","fieldName","history","setTimeout","FlowRouter","go","push","pushState","string","replace","split","word","charAt","toUpperCase","slice","join"],"mappings":"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","sourcesContent":["let browserHistory;\ntry {\n  browserHistory = require('react-router').browserHistory;\n} catch (e) {}\nexport const loginButtonsSession = Accounts._loginButtonsSession;\nexport const STATES = {\n  SIGN_IN: Symbol('SIGN_IN'),\n  SIGN_UP: Symbol('SIGN_UP'),\n  PROFILE: Symbol('PROFILE'),\n  PASSWORD_CHANGE: Symbol('PASSWORD_CHANGE'),\n  PASSWORD_RESET: Symbol('PASSWORD_RESET'),\n  ENROLL_ACCOUNT: Symbol('ENROLL_ACCOUNT')\n};\n\nexport function getLoginServices() {\n  // First look for OAuth services.\n  const services = Package['accounts-oauth']\n    ? Accounts.oauth.serviceNames()\n    : [];\n\n  // Be equally kind to all login services. This also preserves\n  // backwards-compatibility.\n  services.sort();\n\n  return services.map(function(name) {\n    return { name: name };\n  });\n}\n// Export getLoginServices using old style globals for accounts-base which\n// requires it.\nthis.getLoginServices = getLoginServices;\n\nexport function hasPasswordService() {\n  // First look for OAuth services.\n  return !!Package['accounts-password'];\n}\n\nexport function loginResultCallback(service, err) {\n  if (!err) {\n  } else if (err instanceof Accounts.LoginCancelledError) {\n    // do nothing\n  } else if (err instanceof ServiceConfiguration.ConfigError) {\n  } else {\n    //loginButtonsSession.errorMessage(err.reason || \"Unknown error\");\n  }\n\n  if (Meteor.isClient) {\n    if (typeof redirect === 'string') {\n      window.location.href = '/';\n    }\n\n    if (typeof service === 'function') {\n      service();\n    }\n  }\n}\n\nexport function passwordSignupFields() {\n  return Accounts.ui._options.passwordSignupFields || 'EMAIL_ONLY_NO_PASSWORD';\n}\n\nexport function validateEmail(email, showMessage, clearMessage) {\n  if (\n    passwordSignupFields() === 'USERNAME_AND_OPTIONAL_EMAIL' &&\n    email === ''\n  ) {\n    return true;\n  }\n  if (Accounts.ui._options.emailPattern.test(email)) {\n    return true;\n  } else if (!email || email.length === 0) {\n    showMessage('error.emailRequired', 'warning', false, 'email');\n    return false;\n  } else {\n    showMessage('error.accounts.Invalid email', 'warning', false, 'email');\n    return false;\n  }\n}\n\nexport function validatePassword(password = '', showMessage, clearMessage) {\n  if (password.length >= Accounts.ui._options.minimumPasswordLength) {\n    return true;\n  } else {\n    // const errMsg = T9n.get(\"error.minChar\").replace(/7/, Accounts.ui._options.minimumPasswordLength);\n    const errMsg = 'error.minChar';\n    showMessage(errMsg, 'warning', false, 'password');\n    return false;\n  }\n}\n\nexport function validateUsername(\n  username,\n  showMessage,\n  clearMessage,\n  formState\n) {\n  if (username) {\n    return true;\n  } else {\n    const fieldName =\n      passwordSignupFields() === 'USERNAME_ONLY' || formState === STATES.SIGN_UP\n        ? 'username'\n        : 'usernameOrEmail';\n    showMessage('error.usernameRequired', 'warning', false, fieldName);\n    return false;\n  }\n}\n\nexport function redirect(redirect) {\n  if (Meteor.isClient) {\n    if (window.history) {\n      // Run after all app specific redirects, i.e. to the login screen.\n      Meteor.setTimeout(() => {\n        if (Package['kadira:flow-router']) {\n          Package['kadira:flow-router'].FlowRouter.go(redirect);\n        } else if (Package['kadira:flow-router-ssr']) {\n          Package['kadira:flow-router-ssr'].FlowRouter.go(redirect);\n        } else if (browserHistory) {\n          browserHistory.push(redirect);\n        } else {\n          window.history.pushState({}, 'redirect', redirect);\n        }\n      }, 100);\n    }\n  }\n}\n\nexport function capitalize(string) {\n  return string\n    .replace(/\\-/, ' ')\n    .split(' ')\n    .map(word => {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    })\n    .join(' ');\n}\n"]},"sourceType":"script","hash":"8eb69503ddab90d066962c6aad45201c00480539"}
