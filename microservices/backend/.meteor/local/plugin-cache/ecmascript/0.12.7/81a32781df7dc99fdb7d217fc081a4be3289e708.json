{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Toggle/test/Toggle.spec.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/Toggle/test/Toggle.spec.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Toggle/test/Toggle.spec.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/Toggle/test/Toggle.spec.jsx"],"names":["React","expect","Switch","shallow","Toggle","requiredProps","toggle","onToggle","component","props","describe","it","labels","labelRight","find","length","to","equal","first","text","labelTop","labelLeft","at","prop"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,MAAvB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,OAAT;AACA,OAAOC,MAAP;AAEA,MAAMC,aAAa,GAAG;AAAEC,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAAnC,CAAtB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAIN,OAAO,CAAC,CAAC,MAAD,CAAQ,IAAIM,KAAJ,CAAR,GAAD,CAAlC;;AAEAC,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvBC,EAAAA,EAAE,CAAC,8BAAD,EAAiC,MAAM;AACvC,UAAMC,MAAM,GAAGJ,SAAS,CAAC,EACvB,GAAGH,aADoB;AAEvBQ,MAAAA,UAAU,EAAE;AAFW,KAAD,CAAT,CAGZC,IAHY,CAGP,eAHO,CAAf;AAIAb,IAAAA,MAAM,CAACW,MAAM,CAACG,MAAR,CAAN,CAAsBC,EAAtB,CAAyBC,KAAzB,CAA+B,CAA/B;AACAhB,IAAAA,MAAM,CAACW,MAAM,CAACM,KAAP,GAAeC,IAAf,EAAD,CAAN,CAA8BH,EAA9B,CAAiCC,KAAjC,CAAuC,aAAvC;AACD,GAPC,CAAF;AASAN,EAAAA,EAAE,CAAC,oCAAD,EAAuC,MAAM;AAC7C,UAAMF,KAAK,GAAG,EACZ,GAAGJ,aADS;AAEZe,MAAAA,QAAQ,EAAE,WAFE;AAGZC,MAAAA,SAAS,EAAE,YAHC;AAIZR,MAAAA,UAAU,EAAE;AAJA,KAAd;AAMA,UAAMD,MAAM,GAAGJ,SAAS,CAACC,KAAD,CAAT,CAAiBK,IAAjB,CAAsB,eAAtB,CAAf;AACAb,IAAAA,MAAM,CAACW,MAAM,CAACG,MAAR,CAAN,CAAsBC,EAAtB,CAAyBC,KAAzB,CAA+B,CAA/B;AACAhB,IAAAA,MAAM,CAACW,MAAM,CAACU,EAAP,CAAU,CAAV,EAAaH,IAAb,EAAD,CAAN,CAA4BH,EAA5B,CAA+BC,KAA/B,CAAqC,WAArC;AACAhB,IAAAA,MAAM,CAACW,MAAM,CAACU,EAAP,CAAU,CAAV,EAAaH,IAAb,EAAD,CAAN,CAA4BH,EAA5B,CAA+BC,KAA/B,CAAqC,YAArC;AACAhB,IAAAA,MAAM,CAACW,MAAM,CAACU,EAAP,CAAU,CAAV,EAAaH,IAAb,EAAD,CAAN,CAA4BH,EAA5B,CAA+BC,KAA/B,CAAqC,aAArC;AACD,GAZC,CAAF;AAcAN,EAAAA,EAAE,CAAC,6DAAD,EAAgE,MAAM;AACtE,UAAMJ,QAAQ,GAAG,MAAM,CAAE,CAAzB;;AACAN,IAAAA,MAAM,CAACO,SAAS,CAAC,EAAE,GAAGH,aAAL;AAAoBE,MAAAA;AAApB,KAAD,CAAT,CACJO,IADI,CACCZ,MADD,EAEJgB,KAFI,GAGJK,IAHI,CAGC,UAHD,CAAD,CAAN,CAGqBP,EAHrB,CAGwBC,KAHxB,CAG8BV,QAH9B;AAID,GANC,CAAF;AAOD,CA/BO,CAAR","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\n\nimport Switch from '@material-ui/core/Switch';\n\nimport { shallow } from 'core/utils/testHelpers/enzyme';\nimport Toggle from '../Toggle';\n\nconst requiredProps = { toggle: false, onToggle: () => {} };\n\nconst component = props => shallow(<Toggle {...props} />);\n\ndescribe('Toggle', () => {\n  it('renders only the right label', () => {\n    const labels = component({\n      ...requiredProps,\n      labelRight: 'Right Label',\n    }).find('.toggle-label');\n    expect(labels.length).to.equal(1);\n    expect(labels.first().text()).to.equal('Right Label');\n  });\n\n  it('renders top, left and right labels', () => {\n    const props = {\n      ...requiredProps,\n      labelTop: 'Top Label',\n      labelLeft: 'Left Label',\n      labelRight: 'Right Label',\n    };\n    const labels = component(props).find('.toggle-label');\n    expect(labels.length).to.equal(3);\n    expect(labels.at(0).text()).to.equal('Top Label');\n    expect(labels.at(1).text()).to.equal('Left Label');\n    expect(labels.at(2).text()).to.equal('Right Label');\n  });\n\n  it('passes the toggle callback function to the Switch component', () => {\n    const onToggle = () => {};\n    expect(component({ ...requiredProps, onToggle })\n      .find(Switch)\n      .first()\n      .prop('onChange')).to.equal(onToggle);\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Toggle/test/Toggle.spec.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Toggle/test/Toggle.spec.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 1);\nvar Switch;\nmodule.link(\"@material-ui/core/Switch\", {\n  \"default\": function (v) {\n    Switch = v;\n  }\n}, 2);\nvar shallow;\nmodule.link(\"../../../utils/testHelpers/enzyme\", {\n  shallow: function (v) {\n    shallow = v;\n  }\n}, 3);\nvar Toggle;\nmodule.link(\"../Toggle\", {\n  \"default\": function (v) {\n    Toggle = v;\n  }\n}, 4);\nvar requiredProps = {\n  toggle: false,\n  onToggle: function () {}\n};\n\nvar component = function (props) {\n  return shallow(React.createElement(Toggle, props));\n};\n\ndescribe('Toggle', function () {\n  it('renders only the right label', function () {\n    var labels = component((0, _objectSpread2.default)({}, requiredProps, {\n      labelRight: 'Right Label'\n    })).find('.toggle-label');\n    expect(labels.length).to.equal(1);\n    expect(labels.first().text()).to.equal('Right Label');\n  });\n  it('renders top, left and right labels', function () {\n    var props = (0, _objectSpread2.default)({}, requiredProps, {\n      labelTop: 'Top Label',\n      labelLeft: 'Left Label',\n      labelRight: 'Right Label'\n    });\n    var labels = component(props).find('.toggle-label');\n    expect(labels.length).to.equal(3);\n    expect(labels.at(0).text()).to.equal('Top Label');\n    expect(labels.at(1).text()).to.equal('Left Label');\n    expect(labels.at(2).text()).to.equal('Right Label');\n  });\n  it('passes the toggle callback function to the Switch component', function () {\n    var onToggle = function () {};\n\n    expect(component((0, _objectSpread2.default)({}, requiredProps, {\n      onToggle: onToggle\n    })).find(Switch).first().prop('onChange')).to.equal(onToggle);\n  });\n});","map":{"version":3,"sources":["imports/core/components/Toggle/test/Toggle.spec.jsx"],"names":["requiredProps","toggle","onToggle","component","props","shallow","describe","it","labels","labelRight","expect","labelTop","labelLeft"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\n\nimport Switch from '@material-ui/core/Switch';\n\nimport { shallow } from 'core/utils/testHelpers/enzyme';\nimport Toggle from '../Toggle';\n\nconst requiredProps = { toggle: false, onToggle: () => {} };\n\nconst component = props => shallow(<Toggle {...props} />);\n\ndescribe('Toggle', () => {\n  it('renders only the right label', () => {\n    const labels = component({\n      ...requiredProps,\n      labelRight: 'Right Label',\n    }).find('.toggle-label');\n    expect(labels.length).to.equal(1);\n    expect(labels.first().text()).to.equal('Right Label');\n  });\n\n  it('renders top, left and right labels', () => {\n    const props = {\n      ...requiredProps,\n      labelTop: 'Top Label',\n      labelLeft: 'Left Label',\n      labelRight: 'Right Label',\n    };\n    const labels = component(props).find('.toggle-label');\n    expect(labels.length).to.equal(3);\n    expect(labels.at(0).text()).to.equal('Top Label');\n    expect(labels.at(1).text()).to.equal('Left Label');\n    expect(labels.at(2).text()).to.equal('Right Label');\n  });\n\n  it('passes the toggle callback function to the Switch component', () => {\n    const onToggle = () => {};\n    expect(component({ ...requiredProps, onToggle })\n      .find(Switch)\n      .first()\n      .prop('onChange')).to.equal(onToggle);\n  });\n});\n"]},"sourceType":"script","hash":"81a32781df7dc99fdb7d217fc081a4be3289e708"}
