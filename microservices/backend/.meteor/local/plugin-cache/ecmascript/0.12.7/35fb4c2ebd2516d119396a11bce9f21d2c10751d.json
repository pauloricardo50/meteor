{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/users/methodDefinitions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/api/users/methodDefinitions.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/users/methodDefinitions.js","inputSourceMap":{"version":3,"sources":["imports/core/api/users/methodDefinitions.js"],"names":["check","Match","Meteor","Method","doesUserExist","name","params","email","String","sendVerificationLink","userId","Optional","assignAdminToUser","adminId","assignAdminToNewUser","setRole","role","adminCreateUser","options","Object","updateUser","object","getUserByPasswordResetToken","token","testCreateUser","user","removeUser","sendEnrollmentEmail","changeEmail","newEmail","userUpdateOrganisations","newOrganisations","Array","testUserAccount","password","generateApiKeyPair","proInviteUser","propertyIds","Maybe","promotionIds","properties","shareSolvency","OneOf","Boolean","undefined","getUserByEmail","setUserReferredBy","proId","setUserReferredByOrganisation","organisationId","proInviteUserToOrganisation","title","proSetShareCustomers","shareCustomers","anonymousCreateUser","loanId","firstName","lastName","phoneNumber","trackingId","referralId","referralExists","ref"],"mappings":"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","sourcesContent":["import { check, Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Method } from '../methods/methods';\n\nexport const doesUserExist = new Method({\n  name: 'doesUserExist',\n  params: {\n    email: String,\n  },\n});\n\nexport const sendVerificationLink = new Method({\n  name: 'sendVerificationLink',\n  params: {\n    userId: Match.Optional(String),\n  },\n});\n\nexport const assignAdminToUser = new Method({\n  name: 'assignAdminToUser',\n  params: {\n    userId: String,\n    adminId: String,\n  },\n});\n\nexport const assignAdminToNewUser = new Method({\n  name: 'assignAdminToNewUser',\n  params: {\n    userId: String,\n    adminId: String,\n  },\n});\n\nexport const setRole = new Method({\n  name: 'setRole',\n  params: {\n    userId: String,\n    role: String,\n  },\n});\n\nexport const adminCreateUser = new Method({\n  name: 'adminCreateUser',\n  params: {\n    options: Object,\n    role: String,\n  },\n});\n\nexport const updateUser = new Method({\n  name: 'updateUser',\n  params: {\n    userId: String,\n    object: Object,\n  },\n});\n\nexport const getUserByPasswordResetToken = new Method({\n  name: 'getUserByPasswordResetToken',\n  params: {\n    token: String,\n  },\n});\n\nexport const testCreateUser = new Method({\n  name: 'testCreateUser',\n  params: {\n    user: Object,\n  },\n});\n\nexport const removeUser = new Method({\n  name: 'removeUser',\n  params: {\n    userId: String,\n  },\n});\n\nexport const sendEnrollmentEmail = new Method({\n  name: 'sendEnrollmentEmail',\n  params: {\n    userId: String,\n  },\n});\n\nexport const changeEmail = new Method({\n  name: 'changeEmail',\n  params: {\n    userId: String,\n    newEmail: String,\n  },\n});\n\nexport const userUpdateOrganisations = new Method({\n  name: 'userUpdateOrganisations',\n  params: {\n    userId: String,\n    newOrganisations: Array,\n  },\n});\n\nexport const testUserAccount = new Method({\n  name: 'testUserAccount',\n  params: {\n    email: String,\n    password: String,\n    role: String,\n  },\n});\n\nexport const generateApiKeyPair = new Method({\n  name: 'generateApiKeyPair',\n  params: {\n    userId: String,\n  },\n});\n\nexport const proInviteUser = new Method({\n  name: 'proInviteUser',\n  params: {\n    user: Object,\n    propertyIds: Match.Maybe([String]),\n    promotionIds: Match.Maybe([String]),\n    properties: Match.Maybe(Array),\n    shareSolvency: Match.Maybe(Match.OneOf(Boolean, undefined)),\n  },\n});\n\nexport const getUserByEmail = new Method({\n  name: 'getUserByEmail',\n  params: {\n    email: String,\n  },\n});\n\nexport const setUserReferredBy = new Method({\n  name: 'setUserReferredBy',\n  params: {\n    userId: String,\n    proId: String,\n  },\n});\n\nexport const setUserReferredByOrganisation = new Method({\n  name: 'setUserReferredByOrganisation',\n  params: { userId: String, organisationId: String },\n});\n\nexport const proInviteUserToOrganisation = new Method({\n  name: 'proInviteUserToOrganisation',\n  params: { user: Object, organisationId: String, title: String },\n});\n\nexport const proSetShareCustomers = new Method({\n  name: 'proSetShareCustomers',\n  params: { userId: String, organisationId: String, shareCustomers: Boolean },\n});\n\nexport const anonymousCreateUser = new Method({\n  name: 'anonymousCreateUser',\n  params: {\n    loanId: Match.Maybe(String),\n    user: {\n      firstName: String,\n      lastName: String,\n      email: String,\n      phoneNumber: String,\n    },\n    trackingId: String,\n    referralId: Match.Maybe(String),\n  },\n});\n\nexport const referralExists = new Method({\n  name: 'referralExists',\n  params: {\n    ref: String,\n  },\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/users/methodDefinitions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/users/methodDefinitions.js"}},"code":"module.export({\n  doesUserExist: function () {\n    return doesUserExist;\n  },\n  sendVerificationLink: function () {\n    return sendVerificationLink;\n  },\n  assignAdminToUser: function () {\n    return assignAdminToUser;\n  },\n  assignAdminToNewUser: function () {\n    return assignAdminToNewUser;\n  },\n  setRole: function () {\n    return setRole;\n  },\n  adminCreateUser: function () {\n    return adminCreateUser;\n  },\n  updateUser: function () {\n    return updateUser;\n  },\n  getUserByPasswordResetToken: function () {\n    return getUserByPasswordResetToken;\n  },\n  testCreateUser: function () {\n    return testCreateUser;\n  },\n  removeUser: function () {\n    return removeUser;\n  },\n  sendEnrollmentEmail: function () {\n    return sendEnrollmentEmail;\n  },\n  changeEmail: function () {\n    return changeEmail;\n  },\n  userUpdateOrganisations: function () {\n    return userUpdateOrganisations;\n  },\n  testUserAccount: function () {\n    return testUserAccount;\n  },\n  generateApiKeyPair: function () {\n    return generateApiKeyPair;\n  },\n  proInviteUser: function () {\n    return proInviteUser;\n  },\n  getUserByEmail: function () {\n    return getUserByEmail;\n  },\n  setUserReferredBy: function () {\n    return setUserReferredBy;\n  },\n  setUserReferredByOrganisation: function () {\n    return setUserReferredByOrganisation;\n  },\n  proInviteUserToOrganisation: function () {\n    return proInviteUserToOrganisation;\n  },\n  proSetShareCustomers: function () {\n    return proSetShareCustomers;\n  },\n  anonymousCreateUser: function () {\n    return anonymousCreateUser;\n  },\n  referralExists: function () {\n    return referralExists;\n  }\n});\nvar check, Match;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Method;\nmodule.link(\"../methods/methods\", {\n  Method: function (v) {\n    Method = v;\n  }\n}, 2);\nvar doesUserExist = new Method({\n  name: 'doesUserExist',\n  params: {\n    email: String\n  }\n});\nvar sendVerificationLink = new Method({\n  name: 'sendVerificationLink',\n  params: {\n    userId: Match.Optional(String)\n  }\n});\nvar assignAdminToUser = new Method({\n  name: 'assignAdminToUser',\n  params: {\n    userId: String,\n    adminId: String\n  }\n});\nvar assignAdminToNewUser = new Method({\n  name: 'assignAdminToNewUser',\n  params: {\n    userId: String,\n    adminId: String\n  }\n});\nvar setRole = new Method({\n  name: 'setRole',\n  params: {\n    userId: String,\n    role: String\n  }\n});\nvar adminCreateUser = new Method({\n  name: 'adminCreateUser',\n  params: {\n    options: Object,\n    role: String\n  }\n});\nvar updateUser = new Method({\n  name: 'updateUser',\n  params: {\n    userId: String,\n    object: Object\n  }\n});\nvar getUserByPasswordResetToken = new Method({\n  name: 'getUserByPasswordResetToken',\n  params: {\n    token: String\n  }\n});\nvar testCreateUser = new Method({\n  name: 'testCreateUser',\n  params: {\n    user: Object\n  }\n});\nvar removeUser = new Method({\n  name: 'removeUser',\n  params: {\n    userId: String\n  }\n});\nvar sendEnrollmentEmail = new Method({\n  name: 'sendEnrollmentEmail',\n  params: {\n    userId: String\n  }\n});\nvar changeEmail = new Method({\n  name: 'changeEmail',\n  params: {\n    userId: String,\n    newEmail: String\n  }\n});\nvar userUpdateOrganisations = new Method({\n  name: 'userUpdateOrganisations',\n  params: {\n    userId: String,\n    newOrganisations: Array\n  }\n});\nvar testUserAccount = new Method({\n  name: 'testUserAccount',\n  params: {\n    email: String,\n    password: String,\n    role: String\n  }\n});\nvar generateApiKeyPair = new Method({\n  name: 'generateApiKeyPair',\n  params: {\n    userId: String\n  }\n});\nvar proInviteUser = new Method({\n  name: 'proInviteUser',\n  params: {\n    user: Object,\n    propertyIds: Match.Maybe([String]),\n    promotionIds: Match.Maybe([String]),\n    properties: Match.Maybe(Array),\n    shareSolvency: Match.Maybe(Match.OneOf(Boolean, undefined))\n  }\n});\nvar getUserByEmail = new Method({\n  name: 'getUserByEmail',\n  params: {\n    email: String\n  }\n});\nvar setUserReferredBy = new Method({\n  name: 'setUserReferredBy',\n  params: {\n    userId: String,\n    proId: String\n  }\n});\nvar setUserReferredByOrganisation = new Method({\n  name: 'setUserReferredByOrganisation',\n  params: {\n    userId: String,\n    organisationId: String\n  }\n});\nvar proInviteUserToOrganisation = new Method({\n  name: 'proInviteUserToOrganisation',\n  params: {\n    user: Object,\n    organisationId: String,\n    title: String\n  }\n});\nvar proSetShareCustomers = new Method({\n  name: 'proSetShareCustomers',\n  params: {\n    userId: String,\n    organisationId: String,\n    shareCustomers: Boolean\n  }\n});\nvar anonymousCreateUser = new Method({\n  name: 'anonymousCreateUser',\n  params: {\n    loanId: Match.Maybe(String),\n    user: {\n      firstName: String,\n      lastName: String,\n      email: String,\n      phoneNumber: String\n    },\n    trackingId: String,\n    referralId: Match.Maybe(String)\n  }\n});\nvar referralExists = new Method({\n  name: 'referralExists',\n  params: {\n    ref: String\n  }\n});","map":{"version":3,"sources":["imports/core/api/users/methodDefinitions.js"],"names":["doesUserExist","name","params","email","String","sendVerificationLink","userId","Match","assignAdminToUser","adminId","assignAdminToNewUser","setRole","role","adminCreateUser","options","updateUser","object","Object","getUserByPasswordResetToken","token","testCreateUser","user","removeUser","sendEnrollmentEmail","changeEmail","newEmail","userUpdateOrganisations","newOrganisations","Array","testUserAccount","password","generateApiKeyPair","proInviteUser","propertyIds","promotionIds","properties","shareSolvency","getUserByEmail","setUserReferredBy","proId","setUserReferredByOrganisation","organisationId","proInviteUserToOrganisation","title","proSetShareCustomers","shareCustomers","Boolean","anonymousCreateUser","loanId","firstName","lastName","phoneNumber","trackingId","referralId","referralExists","ref"],"mappings":"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","sourcesContent":["import { check, Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Method } from '../methods/methods';\n\nexport const doesUserExist = new Method({\n  name: 'doesUserExist',\n  params: {\n    email: String,\n  },\n});\n\nexport const sendVerificationLink = new Method({\n  name: 'sendVerificationLink',\n  params: {\n    userId: Match.Optional(String),\n  },\n});\n\nexport const assignAdminToUser = new Method({\n  name: 'assignAdminToUser',\n  params: {\n    userId: String,\n    adminId: String,\n  },\n});\n\nexport const assignAdminToNewUser = new Method({\n  name: 'assignAdminToNewUser',\n  params: {\n    userId: String,\n    adminId: String,\n  },\n});\n\nexport const setRole = new Method({\n  name: 'setRole',\n  params: {\n    userId: String,\n    role: String,\n  },\n});\n\nexport const adminCreateUser = new Method({\n  name: 'adminCreateUser',\n  params: {\n    options: Object,\n    role: String,\n  },\n});\n\nexport const updateUser = new Method({\n  name: 'updateUser',\n  params: {\n    userId: String,\n    object: Object,\n  },\n});\n\nexport const getUserByPasswordResetToken = new Method({\n  name: 'getUserByPasswordResetToken',\n  params: {\n    token: String,\n  },\n});\n\nexport const testCreateUser = new Method({\n  name: 'testCreateUser',\n  params: {\n    user: Object,\n  },\n});\n\nexport const removeUser = new Method({\n  name: 'removeUser',\n  params: {\n    userId: String,\n  },\n});\n\nexport const sendEnrollmentEmail = new Method({\n  name: 'sendEnrollmentEmail',\n  params: {\n    userId: String,\n  },\n});\n\nexport const changeEmail = new Method({\n  name: 'changeEmail',\n  params: {\n    userId: String,\n    newEmail: String,\n  },\n});\n\nexport const userUpdateOrganisations = new Method({\n  name: 'userUpdateOrganisations',\n  params: {\n    userId: String,\n    newOrganisations: Array,\n  },\n});\n\nexport const testUserAccount = new Method({\n  name: 'testUserAccount',\n  params: {\n    email: String,\n    password: String,\n    role: String,\n  },\n});\n\nexport const generateApiKeyPair = new Method({\n  name: 'generateApiKeyPair',\n  params: {\n    userId: String,\n  },\n});\n\nexport const proInviteUser = new Method({\n  name: 'proInviteUser',\n  params: {\n    user: Object,\n    propertyIds: Match.Maybe([String]),\n    promotionIds: Match.Maybe([String]),\n    properties: Match.Maybe(Array),\n    shareSolvency: Match.Maybe(Match.OneOf(Boolean, undefined)),\n  },\n});\n\nexport const getUserByEmail = new Method({\n  name: 'getUserByEmail',\n  params: {\n    email: String,\n  },\n});\n\nexport const setUserReferredBy = new Method({\n  name: 'setUserReferredBy',\n  params: {\n    userId: String,\n    proId: String,\n  },\n});\n\nexport const setUserReferredByOrganisation = new Method({\n  name: 'setUserReferredByOrganisation',\n  params: { userId: String, organisationId: String },\n});\n\nexport const proInviteUserToOrganisation = new Method({\n  name: 'proInviteUserToOrganisation',\n  params: { user: Object, organisationId: String, title: String },\n});\n\nexport const proSetShareCustomers = new Method({\n  name: 'proSetShareCustomers',\n  params: { userId: String, organisationId: String, shareCustomers: Boolean },\n});\n\nexport const anonymousCreateUser = new Method({\n  name: 'anonymousCreateUser',\n  params: {\n    loanId: Match.Maybe(String),\n    user: {\n      firstName: String,\n      lastName: String,\n      email: String,\n      phoneNumber: String,\n    },\n    trackingId: String,\n    referralId: Match.Maybe(String),\n  },\n});\n\nexport const referralExists = new Method({\n  name: 'referralExists',\n  params: {\n    ref: String,\n  },\n});\n"]},"sourceType":"script","hash":"35fb4c2ebd2516d119396a11bce9f21d2c10751d"}
