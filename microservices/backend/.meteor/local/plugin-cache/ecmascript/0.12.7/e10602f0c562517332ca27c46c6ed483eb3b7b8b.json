{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher-react/lib/withQueryContainer.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/cultofcoders:grapher-react/lib/withQueryContainer.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher-react/lib/withQueryContainer.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher-react/lib/withQueryContainer.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher-react/lib/withQueryContainer.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  default: () => withQueryContainer\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Query, NamedQuery;\nmodule.link(\"meteor/cultofcoders:grapher-react\", {\n  Query(v) {\n    Query = v;\n  },\n\n  NamedQuery(v) {\n    NamedQuery = v;\n  }\n\n}, 2);\nlet getDisplayName;\nmodule.link(\"./getDisplayName\", {\n  default(v) {\n    getDisplayName = v;\n  }\n\n}, 3);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 4);\nconst propTypes = {\n  grapher: PropTypes.shape({\n    isLoading: PropTypes.bool.isRequired,\n    error: PropTypes.object,\n    data: PropTypes.array,\n    query: PropTypes.oneOfType([PropTypes.instanceOf(Query), PropTypes.instanceOf(NamedQuery)])\n  }).isRequired,\n  config: PropTypes.object.isRequired,\n  props: PropTypes.object\n};\n\nfunction withQueryContainer(WrappedComponent) {\n  let GrapherQueryContainer = function (_ref) {\n    let {\n      grapher,\n      config,\n      query,\n      props\n    } = _ref;\n    const {\n      isLoading,\n      error,\n      data\n    } = grapher;\n\n    if (error && config.errorComponent) {\n      return React.createElement(config.errorComponent, {\n        error,\n        query\n      });\n    }\n\n    if (isLoading && config.loadingComponent) {\n      return React.createElement(config.loadingComponent, {\n        query\n      });\n    }\n\n    return React.createElement(WrappedComponent, (0, _objectSpread2.default)({}, props, {\n      isLoading: error ? false : isLoading,\n      error,\n      [config.dataProp]: config.single ? data[0] : data,\n      query\n    }));\n  };\n\n  GrapherQueryContainer.propTypes = propTypes;\n  GrapherQueryContainer.displayName = \"GrapherQuery(\".concat(getDisplayName(WrappedComponent), \")\");\n  return GrapherQueryContainer;\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher-react/lib/withQueryContainer.js"],"names":["module","export","default","withQueryContainer","React","link","v","PropTypes","Query","NamedQuery","getDisplayName","withTracker","propTypes","grapher","shape","isLoading","bool","isRequired","error","object","data","array","query","oneOfType","instanceOf","config","props","WrappedComponent","GrapherQueryContainer","errorComponent","createElement","loadingComponent","dataProp","single","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Query, NamedQuery} from 'meteor/cultofcoders:grapher-react';\nimport getDisplayName from './getDisplayName';\nimport {withTracker} from 'meteor/react-meteor-data';\n\nconst propTypes = {\n    grapher: PropTypes.shape({\n        isLoading: PropTypes.bool.isRequired,\n        error: PropTypes.object,\n        data: PropTypes.array,\n        query: PropTypes.oneOfType([\n            PropTypes.instanceOf(Query),\n            PropTypes.instanceOf(NamedQuery),\n        ])\n    }).isRequired,\n    config: PropTypes.object.isRequired,\n    props: PropTypes.object,\n};\n\nexport default function withQueryContainer(WrappedComponent) {\n    let GrapherQueryContainer = function({grapher, config, query, props}) {\n        const {isLoading, error, data} = grapher;\n\n        if (error && config.errorComponent) {\n            return React.createElement(config.errorComponent, {\n                error,\n                query,\n            })\n        }\n\n        if (isLoading && config.loadingComponent) {\n            return React.createElement(config.loadingComponent, {\n                query,\n            })\n        }\n\n        return React.createElement(WrappedComponent, {\n            ...props,\n            isLoading: error ? false : isLoading,\n            error,\n            [config.dataProp]: config.single ? data[0] : data,\n            query\n        })\n    };\n\n    GrapherQueryContainer.propTypes = propTypes;\n    GrapherQueryContainer.displayName = `GrapherQuery(${getDisplayName(WrappedComponent)})`;\n\n    return GrapherQueryContainer;\n}\n"]},"sourceType":"script","hash":"e10602f0c562517332ca27c46c6ed483eb3b7b8b"}
