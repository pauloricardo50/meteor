{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/insertProperty.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/insertProperty.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/insertProperty.js","inputSourceMap":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/insertProperty.js"],"names":["apiProperty","PropertyService","proPropertyInsert","withMeteorUserId","checkQuery","impersonateSchema","getImpersonateUserId","HTTP_STATUS_CODES","Security","insertPropertyAPI","user","_id","userId","body","property","query","impersonateUser","schema","externalId","propertyByExternalId","fetchOne","$filters","propertyId","impersonateUserId","displayProperty","properties","hasAccessToProperty","error","status","CONFLICT","message","run","then","insertedProperty"],"mappings":"AAAA,SAASA,WAAT;AACA,OAAOC,eAAP;AACA,SAASC,iBAAT;AACA,SAASC,gBAAT;AACA,SAASC,UAAT,EAAqBC,iBAArB,EAAwCC,oBAAxC;AACA,SAASC,iBAAT;AACA,OAAOC,QAAP;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GADmB;AAEzBC,EAAAA,IAAI,EAAEC,QAFmB;AAGzBC,EAAAA;AAHyB,CAAD,KAIpB;AACJ,QAAM;AAAE,wBAAoBC;AAAtB,MAA0CZ,UAAU,CAAC;AACzDW,IAAAA,KADyD;AAEzDE,IAAAA,MAAM,EAAEZ;AAFiD,GAAD,CAA1D;AAKA,QAAM;AAAEa,IAAAA;AAAF,MAAiBJ,QAAvB;;AAEA,MAAII,UAAJ,EAAgB;AACd,UAAMC,oBAAoB,GAAGlB,eAAe,CAACmB,QAAhB,CAAyB;AACpDC,MAAAA,QAAQ,EAAE;AAAEH,QAAAA;AAAF,OAD0C;AAEpD,SAAGlB,WAAW;AAFsC,KAAzB,CAA7B;;AAKA,QAAImB,oBAAJ,EAA0B;AACxB,YAAM;AAAER,QAAAA,GAAG,EAAEW;AAAP,UAAsBH,oBAA5B;AACA,aAAOhB,gBAAgB,CAAC;AAAES,QAAAA,MAAF;AAAUI,QAAAA;AAAV,OAAD,EAA8B,MAAM;AACzD,YAAIO,iBAAJ;AACA,YAAIC,eAAe,GAAG,IAAtB;;AACA,YAAIR,eAAJ,EAAqB;AACnBO,UAAAA,iBAAiB,GAAGjB,oBAAoB,CAAC;AAAEM,YAAAA,MAAF;AAAUI,YAAAA;AAAV,WAAD,CAAxC;AACD;;AAED,YAAI;AACFR,UAAAA,QAAQ,CAACiB,UAAT,CAAoBC,mBAApB,CAAwC;AACtCJ,YAAAA,UADsC;AAEtCV,YAAAA,MAAM,EAAEW,iBAAiB,IAAIX;AAFS,WAAxC;AAID,SALD,CAKE,OAAOe,KAAP,EAAc;AACdH,UAAAA,eAAe,GAAG,KAAlB;AACD;;AAED,eAAO;AACLI,UAAAA,MAAM,EAAErB,iBAAiB,CAACsB,QADrB;AAELC,UAAAA,OAAO,EAAG,+BAA8BZ,UAAW,oBAF9C;AAGL,cAAIM,eAAe,GAAG;AAAEV,YAAAA,QAAQ,EAAEK;AAAZ,WAAH,GAAwC,EAA3D;AAHK,SAAP;AAKD,OArBsB,CAAvB;AAsBD;AACF;;AAED,SAAOhB,gBAAgB,CAAC;AAAES,IAAAA,MAAF;AAAUI,IAAAA;AAAV,GAAD,EAA8B,MAAM;AACzD,QAAIO,iBAAJ;;AACA,QAAIP,eAAJ,EAAqB;AACnBO,MAAAA,iBAAiB,GAAGjB,oBAAoB,CAAC;AAAEM,QAAAA,MAAF;AAAUI,QAAAA;AAAV,OAAD,CAAxC;AACD;;AACD,WAAOd,iBAAiB,CACrB6B,GADI,CACA;AAAEnB,MAAAA,MAAM,EAAEW,iBAAiB,IAAIX,MAA/B;AAAuCE,MAAAA;AAAvC,KADA,EAEJkB,IAFI,CAEEV,UAAD,IAAgB;AACpB,YAAMW,gBAAgB,GAAGhC,eAAe,CAACmB,QAAhB,CAAyB;AAChDC,QAAAA,QAAQ,EAAE;AAAEV,UAAAA,GAAG,EAAEW;AAAP,SADsC;AAEhD,WAAGtB,WAAW;AAFkC,OAAzB,CAAzB;AAKA,aAAO;AACL8B,QAAAA,OAAO,EAAG,2CAA0CR,UAAW,GAD1D;AAELR,QAAAA,QAAQ,EAAEmB;AAFL,OAAP;AAID,KAZI,CAAP;AAaD,GAlBsB,CAAvB;AAmBD,CAhED;;AAkEA,eAAexB,iBAAf","sourcesContent":["import { apiProperty } from 'core/api/fragments';\nimport PropertyService from '../../../properties/server/PropertyService';\nimport { proPropertyInsert } from '../../../methods';\nimport { withMeteorUserId } from '../helpers';\nimport { checkQuery, impersonateSchema, getImpersonateUserId } from './helpers';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\nimport Security from '../../../security';\n\nconst insertPropertyAPI = ({\n  user: { _id: userId },\n  body: property,\n  query,\n}) => {\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const { externalId } = property;\n\n  if (externalId) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId },\n      ...apiProperty(),\n    });\n\n    if (propertyByExternalId) {\n      const { _id: propertyId } = propertyByExternalId;\n      return withMeteorUserId({ userId, impersonateUser }, () => {\n        let impersonateUserId;\n        let displayProperty = true;\n        if (impersonateUser) {\n          impersonateUserId = getImpersonateUserId({ userId, impersonateUser });\n        }\n\n        try {\n          Security.properties.hasAccessToProperty({\n            propertyId,\n            userId: impersonateUserId || userId,\n          });\n        } catch (error) {\n          displayProperty = false;\n        }\n\n        return {\n          status: HTTP_STATUS_CODES.CONFLICT,\n          message: `A property with externalId \"${externalId}\" already exists !`,\n          ...(displayProperty ? { property: propertyByExternalId } : {}),\n        };\n      });\n    }\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () => {\n    let impersonateUserId;\n    if (impersonateUser) {\n      impersonateUserId = getImpersonateUserId({ userId, impersonateUser });\n    }\n    return proPropertyInsert\n      .run({ userId: impersonateUserId || userId, property })\n      .then((propertyId) => {\n        const insertedProperty = PropertyService.fetchOne({\n          $filters: { _id: propertyId },\n          ...apiProperty(),\n        });\n\n        return {\n          message: `Successfully inserted property with id \"${propertyId}\"`,\n          property: insertedProperty,\n        };\n      });\n  });\n};\n\nexport default insertPropertyAPI;\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/insertProperty.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/insertProperty.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet apiProperty;\nmodule.link(\"../../../fragments\", {\n  apiProperty(v) {\n    apiProperty = v;\n  }\n\n}, 0);\nlet PropertyService;\nmodule.link(\"../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 1);\nlet proPropertyInsert;\nmodule.link(\"../../../methods\", {\n  proPropertyInsert(v) {\n    proPropertyInsert = v;\n  }\n\n}, 2);\nlet withMeteorUserId;\nmodule.link(\"../helpers\", {\n  withMeteorUserId(v) {\n    withMeteorUserId = v;\n  }\n\n}, 3);\nlet checkQuery, impersonateSchema, getImpersonateUserId;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  impersonateSchema(v) {\n    impersonateSchema = v;\n  },\n\n  getImpersonateUserId(v) {\n    getImpersonateUserId = v;\n  }\n\n}, 4);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 5);\nlet Security;\nmodule.link(\"../../../security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 6);\n\nconst insertPropertyAPI = ({\n  user: {\n    _id: userId\n  },\n  body: property,\n  query\n}) => {\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: impersonateSchema\n  });\n  const {\n    externalId\n  } = property;\n\n  if (externalId) {\n    const propertyByExternalId = PropertyService.fetchOne((0, _objectSpread2.default)({\n      $filters: {\n        externalId\n      }\n    }, apiProperty()));\n\n    if (propertyByExternalId) {\n      const {\n        _id: propertyId\n      } = propertyByExternalId;\n      return withMeteorUserId({\n        userId,\n        impersonateUser\n      }, () => {\n        let impersonateUserId;\n        let displayProperty = true;\n\n        if (impersonateUser) {\n          impersonateUserId = getImpersonateUserId({\n            userId,\n            impersonateUser\n          });\n        }\n\n        try {\n          Security.properties.hasAccessToProperty({\n            propertyId,\n            userId: impersonateUserId || userId\n          });\n        } catch (error) {\n          displayProperty = false;\n        }\n\n        return (0, _objectSpread2.default)({\n          status: HTTP_STATUS_CODES.CONFLICT,\n          message: `A property with externalId \"${externalId}\" already exists !`\n        }, displayProperty ? {\n          property: propertyByExternalId\n        } : {});\n      });\n    }\n  }\n\n  return withMeteorUserId({\n    userId,\n    impersonateUser\n  }, () => {\n    let impersonateUserId;\n\n    if (impersonateUser) {\n      impersonateUserId = getImpersonateUserId({\n        userId,\n        impersonateUser\n      });\n    }\n\n    return proPropertyInsert.run({\n      userId: impersonateUserId || userId,\n      property\n    }).then(propertyId => {\n      const insertedProperty = PropertyService.fetchOne((0, _objectSpread2.default)({\n        $filters: {\n          _id: propertyId\n        }\n      }, apiProperty()));\n      return {\n        message: `Successfully inserted property with id \"${propertyId}\"`,\n        property: insertedProperty\n      };\n    });\n  });\n};\n\nmodule.exportDefault(insertPropertyAPI);","map":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/insertProperty.js"],"names":["insertPropertyAPI","user","_id","userId","body","query","impersonateUser","checkQuery","schema","impersonateSchema","externalId","propertyByExternalId","$filters","apiProperty","propertyId","withMeteorUserId","displayProperty","impersonateUserId","getImpersonateUserId","Security","status","HTTP_STATUS_CODES","message","property","insertedProperty"],"mappings":";;;;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,4CAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA,EAAA,iBAAA,EAAA,oBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,oBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,oBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,qBAAA,EAAA;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,mBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAQA,MAAMA,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GADmB;AAEzBC,EAAAA,IAAI,EAFqB,QAAA;AAGzBC,EAAAA;AAHyB,CAAD,KAIpB;AACJ,QAAM;AAAE,wBAAoBC;AAAtB,MAA0CC,UAAU,CAAC;AAAA,IAAA,KAAA;AAEzDC,IAAAA,MAAM,EAAEC;AAFiD,GAAD,CAA1D;AAKA,QAAM;AAAEC,IAAAA;AAAF,MAAN,QAAA;;AAEA,MAAA,UAAA,EAAgB;AACd,UAAMC,oBAAoB,GAAG,eAAe,CAAf,QAAA;AAC3BC,MAAAA,QAAQ,EAAE;AAAEF,QAAAA;AAAF;AADiB,OAExBG,WAAW,EAFa,EAA7B;;AAKA,QAAA,oBAAA,EAA0B;AACxB,YAAM;AAAEX,QAAAA,GAAG,EAAEY;AAAP,UAAN,oBAAA;AACA,aAAOC,gBAAgB,CAAC;AAAA,QAAA,MAAA;AAAUT,QAAAA;AAAV,OAAD,EAA8B,MAAM;AACzD,YAAA,iBAAA;AACA,YAAIU,eAAe,GAAnB,IAAA;;AACA,YAAA,eAAA,EAAqB;AACnBC,UAAAA,iBAAiB,GAAGC,oBAAoB,CAAC;AAAA,YAAA,MAAA;AAAUZ,YAAAA;AAAV,WAAD,CAAxCW;AACD;;AAED,YAAI;AACFE,UAAAA,QAAQ,CAARA,UAAAA,CAAAA,mBAAAA,CAAwC;AAAA,YAAA,UAAA;AAEtChB,YAAAA,MAAM,EAAEc,iBAAiB,IAAId;AAFS,WAAxCgB;AADF,SAAA,CAKE,OAAA,KAAA,EAAc;AACdH,UAAAA,eAAe,GAAfA,KAAAA;AACD;;AAED;AACEI,UAAAA,MAAM,EAAEC,iBAAiB,CADpB,QAAP;AAEEC,UAAAA,OAAO,EAAG,+BAA8BZ,UAFnC;AAAP,WAGMM,eAAe,GAAG;AAAEO,UAAAA,QAAQ,EAAEZ;AAAZ,SAAH,GAAnB,EAHF;AAhBF,OAAuB,CAAvB;AAsBD;AACF;;AAED,SAAOI,gBAAgB,CAAC;AAAA,IAAA,MAAA;AAAUT,IAAAA;AAAV,GAAD,EAA8B,MAAM;AACzD,QAAA,iBAAA;;AACA,QAAA,eAAA,EAAqB;AACnBW,MAAAA,iBAAiB,GAAGC,oBAAoB,CAAC;AAAA,QAAA,MAAA;AAAUZ,QAAAA;AAAV,OAAD,CAAxCW;AACD;;AACD,WAAO,iBAAiB,CAAjB,GAAA,CACA;AAAEd,MAAAA,MAAM,EAAEc,iBAAiB,IAA3B,MAAA;AAAuCM,MAAAA;AAAvC,KADA,EAAA,IAAA,CAEET,UAAD,IAAgB;AACpB,YAAMU,gBAAgB,GAAG,eAAe,CAAf,QAAA;AACvBZ,QAAAA,QAAQ,EAAE;AAAEV,UAAAA,GAAG,EAAEY;AAAP;AADa,SAEpBD,WAAW,EAFS,EAAzB;AAKA,aAAO;AACLS,QAAAA,OAAO,EAAG,2CAA0CR,UAD/C,GAAA;AAELS,QAAAA,QAAQ,EAAEC;AAFL,OAAP;AARJ,KAAO,CAAP;AALF,GAAuB,CAAvB;AA7CF,CAAA;;AARA,MAAA,CAAA,aAAA,CA0EA,iBA1EA","sourcesContent":["import { apiProperty } from 'core/api/fragments';\nimport PropertyService from '../../../properties/server/PropertyService';\nimport { proPropertyInsert } from '../../../methods';\nimport { withMeteorUserId } from '../helpers';\nimport { checkQuery, impersonateSchema, getImpersonateUserId } from './helpers';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\nimport Security from '../../../security';\n\nconst insertPropertyAPI = ({\n  user: { _id: userId },\n  body: property,\n  query,\n}) => {\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const { externalId } = property;\n\n  if (externalId) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId },\n      ...apiProperty(),\n    });\n\n    if (propertyByExternalId) {\n      const { _id: propertyId } = propertyByExternalId;\n      return withMeteorUserId({ userId, impersonateUser }, () => {\n        let impersonateUserId;\n        let displayProperty = true;\n        if (impersonateUser) {\n          impersonateUserId = getImpersonateUserId({ userId, impersonateUser });\n        }\n\n        try {\n          Security.properties.hasAccessToProperty({\n            propertyId,\n            userId: impersonateUserId || userId,\n          });\n        } catch (error) {\n          displayProperty = false;\n        }\n\n        return {\n          status: HTTP_STATUS_CODES.CONFLICT,\n          message: `A property with externalId \"${externalId}\" already exists !`,\n          ...(displayProperty ? { property: propertyByExternalId } : {}),\n        };\n      });\n    }\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () => {\n    let impersonateUserId;\n    if (impersonateUser) {\n      impersonateUserId = getImpersonateUserId({ userId, impersonateUser });\n    }\n    return proPropertyInsert\n      .run({ userId: impersonateUserId || userId, property })\n      .then((propertyId) => {\n        const insertedProperty = PropertyService.fetchOne({\n          $filters: { _id: propertyId },\n          ...apiProperty(),\n        });\n\n        return {\n          message: `Successfully inserted property with id \"${propertyId}\"`,\n          property: insertedProperty,\n        };\n      });\n  });\n};\n\nexport default insertPropertyAPI;\n"]},"sourceType":"script","hash":"89fbecb13cedbf6979954e0c11fbe9d46c7936ed"}
