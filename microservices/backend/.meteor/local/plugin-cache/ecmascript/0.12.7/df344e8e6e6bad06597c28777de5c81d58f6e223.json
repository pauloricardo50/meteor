{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm/FormValidator.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/AutoForm/FormValidator.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm/FormValidator.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/AutoForm/FormValidator.jsx"],"names":["React","PropTypes","get","Checkbox","handleCheck","updateFunc","docId","inputProps","id","isInputChecked","object","styles","div","position","top","right","wrapper","FormValidator","props","admin","doc","checked","adminValidation","e","c","propTypes","bool","objectOf","any","isRequired","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAOC,QAAP;;AAEA,MAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,UAAU,EAAE;AAAEC,IAAAA;AAAF;AAAjC,CADkB,EAElBC,cAFkB,KAGf;AACH,QAAMC,MAAM,GAAG;AAAE,KAAE,mBAAkBF,EAAG,EAAvB,GAA2BC;AAA7B,GAAf;AACAJ,EAAAA,UAAU,CAAC;AAAEK,IAAAA,MAAF;AAAUF,IAAAA,EAAE,EAAEF;AAAd,GAAD,CAAV;AACD,CAND;;AAQA,MAAMK,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,GAAG,EAAE,KAFF;AAGHC,IAAAA,KAAK,EAAE;AAHJ,GADQ;AAMbC,EAAAA,OAAO,EAAE;AACPH,IAAAA,QAAQ,EAAE,UADH;AAEPE,IAAAA,KAAK,EAAE;AAFA;AANI,CAAf;;AAYA,MAAME,aAAa,GAAIC,KAAD,IAAW;AAC/B,MAAIV,EAAJ;AACA,QAAM;AAAEW,IAAAA,KAAF;AAASC,IAAAA,GAAT;AAAcb,IAAAA;AAAd,MAA6BW,KAAnC;;AACA,MAAI,CAACC,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AAED,MAAI,CAACZ,UAAL,EAAiB;AACfC,IAAAA,EAAE,GAAGU,KAAK,CAACV,EAAX;AACD,GAFD,MAEO;AACLA,IAAAA,EAAE,GAAGD,UAAU,CAACC,EAAhB;AACD;;AAED,QAAMa,OAAO,GAAG,CAAC,CAACnB,GAAG,CAACkB,GAAG,CAACE,eAAL,EAAsBd,EAAtB,CAArB;AAEA,SACE,CAAC,GAAD,CAAK,MAAM,CAACG,MAAM,CAACC,GAAR,CAAX;MACE,CAAC,GAAD,CAAK,MAAM,CAACD,MAAM,CAACK,OAAR,CAAX;QACE,CAAC,QAAD,CACE,MAAM,CAACK,OAAO,GAAG,QAAH,GAAc,SAAtB,CADR,CAEE,MAAM,CAACA,OAAD,CAFR,CAGE,SAAS,CAAC,CAACE,CAAD,EAAIC,CAAJ,KAAUpB,WAAW,CAACc,KAAD,EAAQM,CAAR,CAAtB,CAHX;MAKF,EAAE,GAAF;IACF,EAAE,GAAF,CATF;AAWD,CA1BD;;AA4BAP,aAAa,CAACQ,SAAd,GAA0B;AACxBN,EAAAA,KAAK,EAAElB,SAAS,CAACyB,IADO;AAExBN,EAAAA,GAAG,EAAEnB,SAAS,CAAC0B,QAAV,CAAmB1B,SAAS,CAAC2B,GAA7B,EAAkCC;AAFf,CAA1B;AAKAZ,aAAa,CAACa,YAAd,GAA6B;AAC3BX,EAAAA,KAAK,EAAE;AADoB,CAA7B;AAIA,eAAeF,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport Checkbox from 'core/components/Checkbox';\n\nconst handleCheck = (\n  { updateFunc, docId, inputProps: { id } },\n  isInputChecked,\n) => {\n  const object = { [`adminValidation.${id}`]: isInputChecked };\n  updateFunc({ object, id: docId });\n};\n\nconst styles = {\n  div: {\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n  },\n  wrapper: {\n    position: 'relative',\n    right: '-100%',\n  },\n};\n\nconst FormValidator = (props) => {\n  let id;\n  const { admin, doc, inputProps } = props;\n  if (!admin) {\n    return null;\n  }\n\n  if (!inputProps) {\n    id = props.id;\n  } else {\n    id = inputProps.id;\n  }\n\n  const checked = !!get(doc.adminValidation, id);\n\n  return (\n    <div style={styles.div}>\n      <div style={styles.wrapper}>\n        <Checkbox\n          label={checked ? 'ValidÃ©' : 'Valider'}\n          value={checked}\n          onChange={(e, c) => handleCheck(props, c)}\n        />\n      </div>\n    </div>\n  );\n};\n\nFormValidator.propTypes = {\n  admin: PropTypes.bool,\n  doc: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nFormValidator.defaultProps = {\n  admin: false,\n};\n\nexport default FormValidator;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm/FormValidator.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/AutoForm/FormValidator.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet get;\nmodule.link(\"lodash/get\", {\n  default(v) {\n    get = v;\n  }\n\n}, 2);\nlet Checkbox;\nmodule.link(\"../Checkbox\", {\n  default(v) {\n    Checkbox = v;\n  }\n\n}, 3);\n\nconst handleCheck = (_ref, isInputChecked) => {\n  let {\n    updateFunc,\n    docId,\n    inputProps: {\n      id\n    }\n  } = _ref;\n  const object = {\n    [\"adminValidation.\".concat(id)]: isInputChecked\n  };\n  updateFunc({\n    object,\n    id: docId\n  });\n};\n\nconst styles = {\n  div: {\n    position: 'absolute',\n    top: '0px',\n    right: '0px'\n  },\n  wrapper: {\n    position: 'relative',\n    right: '-100%'\n  }\n};\n\nconst FormValidator = props => {\n  let id;\n  const {\n    admin,\n    doc,\n    inputProps\n  } = props;\n\n  if (!admin) {\n    return null;\n  }\n\n  if (!inputProps) {\n    id = props.id;\n  } else {\n    id = inputProps.id;\n  }\n\n  const checked = !!get(doc.adminValidation, id);\n  return React.createElement(\"div\", {\n    style: styles.div\n  }, React.createElement(\"div\", {\n    style: styles.wrapper\n  }, React.createElement(Checkbox, {\n    label: checked ? 'ValidÃ©' : 'Valider',\n    value: checked,\n    onChange: (e, c) => handleCheck(props, c)\n  })));\n};\n\nFormValidator.propTypes = {\n  admin: PropTypes.bool,\n  doc: PropTypes.objectOf(PropTypes.any).isRequired\n};\nFormValidator.defaultProps = {\n  admin: false\n};\nmodule.exportDefault(FormValidator);","map":{"version":3,"sources":["imports/core/components/AutoForm/FormValidator.jsx"],"names":["React","handleCheck","inputProps","id","object","isInputChecked","updateFunc","docId","styles","div","position","top","right","wrapper","FormValidator","props","checked","get","doc","admin","PropTypes","isRequired"],"mappings":"AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,GAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,aAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAMA,MAAMC,WAAW,GAAG,OAAA,cAAA,KAGf;AAAA,MAFH;AAAA,IAAA,UAAA;AAAA,IAAA,KAAA;AAAqBC,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AAAjC,GAEG;AACH,QAAMC,MAAM,GAAG;AAAE,+BAAA,EAAA,IAA2BC;AAA7B,GAAf;AACAC,EAAAA,UAAU,CAAC;AAAA,IAAA,MAAA;AAAUH,IAAAA,EAAE,EAAEI;AAAd,GAAD,CAAVD;AALF,CAAA;;AAQA,MAAME,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EADL,UAAA;AAEHC,IAAAA,GAAG,EAFA,KAAA;AAGHC,IAAAA,KAAK,EAAE;AAHJ,GADQ;AAMbC,EAAAA,OAAO,EAAE;AACPH,IAAAA,QAAQ,EADD,UAAA;AAEPE,IAAAA,KAAK,EAAE;AAFA;AANI,CAAf;;AAYA,MAAME,aAAa,GAAIC,KAAD,IAAW;AAC/B,MAAA,EAAA;AACA,QAAM;AAAA,IAAA,KAAA;AAAA,IAAA,GAAA;AAAcb,IAAAA;AAAd,MAAN,KAAA;;AACA,MAAI,CAAJ,KAAA,EAAY;AACV,WAAA,IAAA;AACD;;AAED,MAAI,CAAJ,UAAA,EAAiB;AACfC,IAAAA,EAAE,GAAGY,KAAK,CAAVZ,EAAAA;AADF,GAAA,MAEO;AACLA,IAAAA,EAAE,GAAGD,UAAU,CAAfC,EAAAA;AACD;;AAED,QAAMa,OAAO,GAAG,CAAC,CAACC,GAAG,CAACC,GAAG,CAAJ,eAAA,EAArB,EAAqB,CAArB;AAEA,SACE;AAAK,IAAA,KAAA,EAAOV,MAAM,CAAlB;AAAA,KACE;AAAK,IAAA,KAAA,EAAOA,MAAM,CAAlB;AAAA,KACE,oBAAA,QAAA;AACE,IAAA,KAAA,EAAOQ,OAAO,GAAA,QAAA,GADhB,SAAA;AAEE,IAAA,KAAA,EAFF,OAAA;AAGE,IAAA,QAAA,EAAU,CAAA,CAAA,EAAA,CAAA,KAAUf,WAAW,CAAA,KAAA,EAHjC,CAGiC;AAHjC,IADF,CADF,CADF;AAfF,CAAA;;AA4BAa,aAAa,CAAbA,SAAAA,GAA0B;AACxBK,EAAAA,KAAK,EAAEC,SAAS,CADQ,IAAA;AAExBF,EAAAA,GAAG,EAAEE,SAAS,CAATA,QAAAA,CAAmBA,SAAS,CAA5BA,GAAAA,EAAkCC;AAFf,CAA1BP;AAKAA,aAAa,CAAbA,YAAAA,GAA6B;AAC3BK,EAAAA,KAAK,EAAE;AADoB,CAA7BL;AA3DA,MAAA,CAAOd,aAAP,CA+DA,aA/DA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport Checkbox from 'core/components/Checkbox';\n\nconst handleCheck = (\n  { updateFunc, docId, inputProps: { id } },\n  isInputChecked,\n) => {\n  const object = { [`adminValidation.${id}`]: isInputChecked };\n  updateFunc({ object, id: docId });\n};\n\nconst styles = {\n  div: {\n    position: 'absolute',\n    top: '0px',\n    right: '0px',\n  },\n  wrapper: {\n    position: 'relative',\n    right: '-100%',\n  },\n};\n\nconst FormValidator = (props) => {\n  let id;\n  const { admin, doc, inputProps } = props;\n  if (!admin) {\n    return null;\n  }\n\n  if (!inputProps) {\n    id = props.id;\n  } else {\n    id = inputProps.id;\n  }\n\n  const checked = !!get(doc.adminValidation, id);\n\n  return (\n    <div style={styles.div}>\n      <div style={styles.wrapper}>\n        <Checkbox\n          label={checked ? 'ValidÃ©' : 'Valider'}\n          value={checked}\n          onChange={(e, c) => handleCheck(props, c)}\n        />\n      </div>\n    </div>\n  );\n};\n\nFormValidator.propTypes = {\n  admin: PropTypes.bool,\n  doc: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nFormValidator.defaultProps = {\n  admin: false,\n};\n\nexport default FormValidator;\n"]},"sourceType":"script","hash":"df344e8e6e6bad06597c28777de5c81d58f6e223"}
