{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/redux/widget1/test/widget1Reducers.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/redux/widget1/test/widget1Reducers.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/redux/widget1/test/widget1Reducers.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/redux/widget1/test/widget1Reducers.spec.js"],"names":["expect","widget1","createWidget1ValueReducers","SET_VALUE","SUGGEST_VALUE","SET_AUTO","INCREASE_SLIDER_MAX","SET_ALLOW_EXTREME_LOAN","ALL_FIELDS","SALARY","FORTUNE","CURRENT_LOAN","describe","it","to","deep","equal","reduce","acc","name","value","auto","sliderMax","step","interestRate","purchaseType","finishedTutorial","useMaintenance","initialSliderMax","TEST","reducer","initialState","undefined","type","currentLoanReducer","allowExtremeLoan"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport widget1, { createWidget1ValueReducers } from '../widget1Reducers';\nimport {\n  SET_VALUE,\n  SUGGEST_VALUE,\n  SET_AUTO,\n  INCREASE_SLIDER_MAX,\n  SET_ALLOW_EXTREME_LOAN,\n} from '../widget1Types';\n\nimport { ALL_FIELDS, SALARY, FORTUNE, CURRENT_LOAN } from '../widget1Constants';\n\ndescribe('widget1 Reducer', () => {\n  it('should return the initial state', () => {\n    expect(widget1()).to.deep.equal({\n      ...ALL_FIELDS.reduce(\n        (acc, name) => ({\n          ...acc,\n          [name]: {\n            value: 0,\n            auto: false,\n            sliderMax: name === SALARY || name === FORTUNE ? 500000 : 2000000,\n          },\n        }),\n        {},\n      ),\n      step: 0,\n      interestRate: 0.015,\n      purchaseType: 'ACQUISITION',\n      finishedTutorial: false,\n      useMaintenance: true,\n    });\n  });\n\n  describe('widget1 value reducer', () => {\n    const initialSliderMax = 10;\n    const TEST = 'TEST';\n    const reducer = createWidget1ValueReducers([\n      { name: TEST, initialSliderMax },\n    ])[TEST];\n    const initialState = {\n      value: 0,\n      auto: false,\n      sliderMax: initialSliderMax,\n    };\n\n    it('should return the initial state', () => {\n      expect(reducer(undefined, {})).to.deep.equal(initialState);\n    });\n\n    describe('setValue action', () => {\n      it('should handle setValue and put auto to false', () => {\n        const value = 100;\n        expect(reducer({}, { type: SET_VALUE(TEST), value })).to.deep.equal({\n          value,\n          auto: false,\n        });\n      });\n\n      it('It should set auto to true and value to 0 if the value is set to 0 or falsy', () => {\n        let value = 0;\n        expect(reducer({}, { type: SET_VALUE(TEST), value })).to.deep.equal({\n          value: 0,\n          auto: true,\n        });\n        value = undefined;\n        expect(reducer({}, { type: SET_VALUE(TEST), value })).to.deep.equal({\n          value: 0,\n          auto: true,\n        });\n        value = false;\n        expect(reducer({}, { type: SET_VALUE(TEST), value })).to.deep.equal({\n          value: 0,\n          auto: true,\n        });\n      });\n\n      it('should not set auto to true for CURRENT_LOAN if it is set to 0', () => {\n        const currentLoanReducer = createWidget1ValueReducers([\n          { name: CURRENT_LOAN, initialSliderMax },\n        ])[CURRENT_LOAN];\n        const value = 0;\n        expect(currentLoanReducer({}, { type: SET_VALUE(CURRENT_LOAN), value })).to.deep.equal({\n          value: 0,\n          auto: false,\n        });\n      });\n\n      it('should allow the value to be an empty string, so that the user can keep typing', () => {\n        const value = '';\n        expect(reducer({}, { type: SET_VALUE(TEST), value })).to.deep.equal({\n          value,\n          auto: false,\n        });\n      });\n\n      it('rounds the value that is set', () => {\n        const value = 100.2;\n        expect(reducer({}, { type: SET_VALUE(TEST), value })).to.deep.equal({\n          value: 100,\n          auto: false,\n        });\n      });\n    });\n\n    describe('suggestValue action', () => {\n      it('sets the value without changing auto', () => {\n        const value = 100;\n        let auto = true;\n        expect(reducer({ auto }, { type: SUGGEST_VALUE(TEST), value })).to.deep.equal({\n          value,\n          auto,\n        });\n\n        auto = false;\n        expect(reducer({ auto }, { type: SUGGEST_VALUE(TEST), value })).to.deep.equal({\n          value,\n          auto,\n        });\n      });\n    });\n\n    describe('setAuto action', () => {\n      it('sets auto', () => {\n        let auto = true;\n        expect(reducer({}, { type: SET_AUTO(TEST), auto })).to.deep.equal({\n          auto,\n        });\n        auto = false;\n        expect(reducer({}, { type: SET_AUTO(TEST), auto })).to.deep.equal({\n          auto,\n        });\n      });\n\n      it('toggles auto if no value is provided', () => {\n        let auto = true;\n        expect(reducer({ auto }, { type: SET_AUTO(TEST) })).to.deep.equal({\n          auto: !auto,\n        });\n        auto = false;\n        expect(reducer({ auto }, { type: SET_AUTO(TEST) })).to.deep.equal({\n          auto: !auto,\n        });\n      });\n    });\n\n    describe('increaseSliderMax action', () => {\n      it('doubles sliderMax', () => {\n        expect(reducer({ sliderMax: 50 }, { type: INCREASE_SLIDER_MAX(TEST) })).to.deep.equal({\n          sliderMax: 2 * 50,\n        });\n      });\n\n      it('prevents a user from going above 100M', () => {\n        expect(reducer({ sliderMax: 50000001 }, { type: INCREASE_SLIDER_MAX(TEST) })).to.deep.equal({ sliderMax: 100000000 });\n      });\n    });\n\n    describe('setAllowExtremeLoan action', () => {\n      it('sets allowExtremeLoan to true', () => {\n        expect(reducer({}, { type: SET_ALLOW_EXTREME_LOAN(TEST) })).to.deep.equal({\n          allowExtremeLoan: true,\n        });\n      });\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/redux/widget1/test/widget1Reducers.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/redux/widget1/test/widget1Reducers.spec.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread3 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 0);\nvar widget1, createWidget1ValueReducers;\nmodule.link(\"../widget1Reducers\", {\n  \"default\": function (v) {\n    widget1 = v;\n  },\n  createWidget1ValueReducers: function (v) {\n    createWidget1ValueReducers = v;\n  }\n}, 1);\nvar SET_VALUE, SUGGEST_VALUE, SET_AUTO, INCREASE_SLIDER_MAX, SET_ALLOW_EXTREME_LOAN;\nmodule.link(\"../widget1Types\", {\n  SET_VALUE: function (v) {\n    SET_VALUE = v;\n  },\n  SUGGEST_VALUE: function (v) {\n    SUGGEST_VALUE = v;\n  },\n  SET_AUTO: function (v) {\n    SET_AUTO = v;\n  },\n  INCREASE_SLIDER_MAX: function (v) {\n    INCREASE_SLIDER_MAX = v;\n  },\n  SET_ALLOW_EXTREME_LOAN: function (v) {\n    SET_ALLOW_EXTREME_LOAN = v;\n  }\n}, 2);\nvar ALL_FIELDS, SALARY, FORTUNE, CURRENT_LOAN;\nmodule.link(\"../widget1Constants\", {\n  ALL_FIELDS: function (v) {\n    ALL_FIELDS = v;\n  },\n  SALARY: function (v) {\n    SALARY = v;\n  },\n  FORTUNE: function (v) {\n    FORTUNE = v;\n  },\n  CURRENT_LOAN: function (v) {\n    CURRENT_LOAN = v;\n  }\n}, 3);\ndescribe('widget1 Reducer', function () {\n  it('should return the initial state', function () {\n    expect(widget1()).to.deep.equal((0, _objectSpread3.default)({}, ALL_FIELDS.reduce(function (acc, name) {\n      var _objectSpread2;\n\n      return (0, _objectSpread3.default)({}, acc, (_objectSpread2 = {}, _objectSpread2[name] = {\n        value: 0,\n        auto: false,\n        sliderMax: name === SALARY || name === FORTUNE ? 500000 : 2000000\n      }, _objectSpread2));\n    }, {}), {\n      step: 0,\n      interestRate: 0.015,\n      purchaseType: 'ACQUISITION',\n      finishedTutorial: false,\n      useMaintenance: true\n    }));\n  });\n  describe('widget1 value reducer', function () {\n    var initialSliderMax = 10;\n    var TEST = 'TEST';\n    var reducer = createWidget1ValueReducers([{\n      name: TEST,\n      initialSliderMax: initialSliderMax\n    }])[TEST];\n    var initialState = {\n      value: 0,\n      auto: false,\n      sliderMax: initialSliderMax\n    };\n    it('should return the initial state', function () {\n      expect(reducer(undefined, {})).to.deep.equal(initialState);\n    });\n    describe('setValue action', function () {\n      it('should handle setValue and put auto to false', function () {\n        var value = 100;\n        expect(reducer({}, {\n          type: SET_VALUE(TEST),\n          value: value\n        })).to.deep.equal({\n          value: value,\n          auto: false\n        });\n      });\n      it('It should set auto to true and value to 0 if the value is set to 0 or falsy', function () {\n        var value = 0;\n        expect(reducer({}, {\n          type: SET_VALUE(TEST),\n          value: value\n        })).to.deep.equal({\n          value: 0,\n          auto: true\n        });\n        value = undefined;\n        expect(reducer({}, {\n          type: SET_VALUE(TEST),\n          value: value\n        })).to.deep.equal({\n          value: 0,\n          auto: true\n        });\n        value = false;\n        expect(reducer({}, {\n          type: SET_VALUE(TEST),\n          value: value\n        })).to.deep.equal({\n          value: 0,\n          auto: true\n        });\n      });\n      it('should not set auto to true for CURRENT_LOAN if it is set to 0', function () {\n        var currentLoanReducer = createWidget1ValueReducers([{\n          name: CURRENT_LOAN,\n          initialSliderMax: initialSliderMax\n        }])[CURRENT_LOAN];\n        var value = 0;\n        expect(currentLoanReducer({}, {\n          type: SET_VALUE(CURRENT_LOAN),\n          value: value\n        })).to.deep.equal({\n          value: 0,\n          auto: false\n        });\n      });\n      it('should allow the value to be an empty string, so that the user can keep typing', function () {\n        var value = '';\n        expect(reducer({}, {\n          type: SET_VALUE(TEST),\n          value: value\n        })).to.deep.equal({\n          value: value,\n          auto: false\n        });\n      });\n      it('rounds the value that is set', function () {\n        var value = 100.2;\n        expect(reducer({}, {\n          type: SET_VALUE(TEST),\n          value: value\n        })).to.deep.equal({\n          value: 100,\n          auto: false\n        });\n      });\n    });\n    describe('suggestValue action', function () {\n      it('sets the value without changing auto', function () {\n        var value = 100;\n        var auto = true;\n        expect(reducer({\n          auto: auto\n        }, {\n          type: SUGGEST_VALUE(TEST),\n          value: value\n        })).to.deep.equal({\n          value: value,\n          auto: auto\n        });\n        auto = false;\n        expect(reducer({\n          auto: auto\n        }, {\n          type: SUGGEST_VALUE(TEST),\n          value: value\n        })).to.deep.equal({\n          value: value,\n          auto: auto\n        });\n      });\n    });\n    describe('setAuto action', function () {\n      it('sets auto', function () {\n        var auto = true;\n        expect(reducer({}, {\n          type: SET_AUTO(TEST),\n          auto: auto\n        })).to.deep.equal({\n          auto: auto\n        });\n        auto = false;\n        expect(reducer({}, {\n          type: SET_AUTO(TEST),\n          auto: auto\n        })).to.deep.equal({\n          auto: auto\n        });\n      });\n      it('toggles auto if no value is provided', function () {\n        var auto = true;\n        expect(reducer({\n          auto: auto\n        }, {\n          type: SET_AUTO(TEST)\n        })).to.deep.equal({\n          auto: !auto\n        });\n        auto = false;\n        expect(reducer({\n          auto: auto\n        }, {\n          type: SET_AUTO(TEST)\n        })).to.deep.equal({\n          auto: !auto\n        });\n      });\n    });\n    describe('increaseSliderMax action', function () {\n      it('doubles sliderMax', function () {\n        expect(reducer({\n          sliderMax: 50\n        }, {\n          type: INCREASE_SLIDER_MAX(TEST)\n        })).to.deep.equal({\n          sliderMax: 2 * 50\n        });\n      });\n      it('prevents a user from going above 100M', function () {\n        expect(reducer({\n          sliderMax: 50000001\n        }, {\n          type: INCREASE_SLIDER_MAX(TEST)\n        })).to.deep.equal({\n          sliderMax: 100000000\n        });\n      });\n    });\n    describe('setAllowExtremeLoan action', function () {\n      it('sets allowExtremeLoan to true', function () {\n        expect(reducer({}, {\n          type: SET_ALLOW_EXTREME_LOAN(TEST)\n        })).to.deep.equal({\n          allowExtremeLoan: true\n        });\n      });\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/redux/widget1/test/widget1Reducers.spec.js"],"names":["describe","it","expect","widget1","value","auto","sliderMax","name","step","interestRate","purchaseType","finishedTutorial","useMaintenance","initialSliderMax","TEST","reducer","initialState","type","SET_VALUE","currentLoanReducer","SUGGEST_VALUE","SET_AUTO","INCREASE_SLIDER_MAX","SET_ALLOW_EXTREME_LOAN","allowExtremeLoan"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport widget1, { createWidget1ValueReducers } from '../widget1Reducers';\nimport {\n  SET_VALUE,\n  SUGGEST_VALUE,\n  SET_AUTO,\n  INCREASE_SLIDER_MAX,\n  SET_ALLOW_EXTREME_LOAN,\n} from '../widget1Types';\n\nimport { ALL_FIELDS, SALARY, FORTUNE, CURRENT_LOAN } from '../widget1Constants';\n\ndescribe('widget1 Reducer', () => {\n  it('should return the initial state', () => {\n    expect(widget1()).to.deep.equal({\n      ...ALL_FIELDS.reduce(\n        (acc, name) => ({\n          ...acc,\n          [name]: {\n            value: 0,\n            auto: false,\n            sliderMax: name === SALARY || name === FORTUNE ? 500000 : 2000000,\n          },\n        }),\n        {},\n      ),\n      step: 0,\n      interestRate: 0.015,\n      purchaseType: 'ACQUISITION',\n      finishedTutorial: false,\n      useMaintenance: true,\n    });\n  });\n\n  describe('widget1 value reducer', () => {\n    const initialSliderMax = 10;\n    const TEST = 'TEST';\n    const reducer = createWidget1ValueReducers([\n      { name: TEST, initialSliderMax },\n    ])[TEST];\n    const initialState = {\n      value: 0,\n      auto: false,\n      sliderMax: initialSliderMax,\n    };\n\n    it('should return the initial state', () => {\n      expect(reducer(undefined, {})).to.deep.equal(initialState);\n    });\n\n    describe('setValue action', () => {\n      it('should handle setValue and put auto to false', () => {\n        const value = 100;\n        expect(reducer({}, { type: SET_VALUE(TEST), value })).to.deep.equal({\n          value,\n          auto: false,\n        });\n      });\n\n      it('It should set auto to true and value to 0 if the value is set to 0 or falsy', () => {\n        let value = 0;\n        expect(reducer({}, { type: SET_VALUE(TEST), value })).to.deep.equal({\n          value: 0,\n          auto: true,\n        });\n        value = undefined;\n        expect(reducer({}, { type: SET_VALUE(TEST), value })).to.deep.equal({\n          value: 0,\n          auto: true,\n        });\n        value = false;\n        expect(reducer({}, { type: SET_VALUE(TEST), value })).to.deep.equal({\n          value: 0,\n          auto: true,\n        });\n      });\n\n      it('should not set auto to true for CURRENT_LOAN if it is set to 0', () => {\n        const currentLoanReducer = createWidget1ValueReducers([\n          { name: CURRENT_LOAN, initialSliderMax },\n        ])[CURRENT_LOAN];\n        const value = 0;\n        expect(currentLoanReducer({}, { type: SET_VALUE(CURRENT_LOAN), value })).to.deep.equal({\n          value: 0,\n          auto: false,\n        });\n      });\n\n      it('should allow the value to be an empty string, so that the user can keep typing', () => {\n        const value = '';\n        expect(reducer({}, { type: SET_VALUE(TEST), value })).to.deep.equal({\n          value,\n          auto: false,\n        });\n      });\n\n      it('rounds the value that is set', () => {\n        const value = 100.2;\n        expect(reducer({}, { type: SET_VALUE(TEST), value })).to.deep.equal({\n          value: 100,\n          auto: false,\n        });\n      });\n    });\n\n    describe('suggestValue action', () => {\n      it('sets the value without changing auto', () => {\n        const value = 100;\n        let auto = true;\n        expect(reducer({ auto }, { type: SUGGEST_VALUE(TEST), value })).to.deep.equal({\n          value,\n          auto,\n        });\n\n        auto = false;\n        expect(reducer({ auto }, { type: SUGGEST_VALUE(TEST), value })).to.deep.equal({\n          value,\n          auto,\n        });\n      });\n    });\n\n    describe('setAuto action', () => {\n      it('sets auto', () => {\n        let auto = true;\n        expect(reducer({}, { type: SET_AUTO(TEST), auto })).to.deep.equal({\n          auto,\n        });\n        auto = false;\n        expect(reducer({}, { type: SET_AUTO(TEST), auto })).to.deep.equal({\n          auto,\n        });\n      });\n\n      it('toggles auto if no value is provided', () => {\n        let auto = true;\n        expect(reducer({ auto }, { type: SET_AUTO(TEST) })).to.deep.equal({\n          auto: !auto,\n        });\n        auto = false;\n        expect(reducer({ auto }, { type: SET_AUTO(TEST) })).to.deep.equal({\n          auto: !auto,\n        });\n      });\n    });\n\n    describe('increaseSliderMax action', () => {\n      it('doubles sliderMax', () => {\n        expect(reducer({ sliderMax: 50 }, { type: INCREASE_SLIDER_MAX(TEST) })).to.deep.equal({\n          sliderMax: 2 * 50,\n        });\n      });\n\n      it('prevents a user from going above 100M', () => {\n        expect(reducer({ sliderMax: 50000001 }, { type: INCREASE_SLIDER_MAX(TEST) })).to.deep.equal({ sliderMax: 100000000 });\n      });\n    });\n\n    describe('setAllowExtremeLoan action', () => {\n      it('sets allowExtremeLoan to true', () => {\n        expect(reducer({}, { type: SET_ALLOW_EXTREME_LOAN(TEST) })).to.deep.equal({\n          allowExtremeLoan: true,\n        });\n      });\n    });\n  });\n});\n"]},"sourceType":"script","hash":"acc8f3e7c8fa1188fa61e8c6f561d9969856e5f5"}
