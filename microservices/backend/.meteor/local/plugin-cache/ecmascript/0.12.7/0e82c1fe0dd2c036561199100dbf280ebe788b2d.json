{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/test/routerUtils.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/utils/test/routerUtils.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/test/routerUtils.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/test/routerUtils.spec.js"],"names":["expect","createRoute","describe","it","to","equal","hello","yo"],"mappings":"AAAA;AACA,SAASA,MAAT,QAAuB,MAAvB;AAEA,SAASC,WAAT;AAEAC,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5BA,EAAAA,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5BC,IAAAA,EAAE,CAAC,0CAAD,EAA6C,MAAM;AACnDH,MAAAA,MAAM,CAACC,WAAW,CAAC,QAAD,EAAW;AAAE,kBAAU;AAAZ,OAAX,CAAZ,CAAN,CAAkDG,EAAlD,CAAqDC,KAArD,CAA2D,IAA3D;AACD,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,mDAAD,EAAsD,MAAM;AAC5DH,MAAAA,MAAM,CAACC,WAAW,CAAC,YAAD,EAAe;AAAE,kBAAU,IAAZ;AAAkB,eAAO;AAAzB,OAAf,CAAZ,CAAN,CAAqEG,EAArE,CAAwEC,KAAxE,CAA8E,SAA9E;AACD,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,kDAAD,EAAqD,MAAM;AAC3DH,MAAAA,MAAM,CAACC,WAAW,CAAC,IAAD,CAAZ,CAAN,CAA0BG,EAA1B,CAA6BC,KAA7B,CAAmC,IAAnC;AACD,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,qDAAD,EAAwD,MAAM;AAC9DH,MAAAA,MAAM,CAACC,WAAW,CAAC,QAAD,EAAW;AAAEK,QAAAA,KAAK,EAAE;AAAT,OAAX,CAAZ,CAAN,CAA+CF,EAA/C,CAAkDC,KAAlD,CAAwD,IAAxD;AACAL,MAAAA,MAAM,CAACC,WAAW,CAAC,YAAD,EAAe;AAAEK,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,EAAE,EAAE;AAAnB,OAAf,CAAZ,CAAN,CAA+DH,EAA/D,CAAkEC,KAAlE,CAAwE,SAAxE;AACD,KAHC,CAAF;AAKAF,IAAAA,EAAE,CAAC,6DAAD,EAAgE,MAAM;AACtEH,MAAAA,MAAM,CAACC,WAAW,CAAC,cAAD,EAAiB;AAAE,kBAAU;AAAZ,OAAjB,CAAZ,CAAN,CAAsDG,EAAtD,CAAyDC,KAAzD,CAA+D,OAA/D;AACD,KAFC,CAAF;AAGD,GArBO,CAAR;AAsBD,CAvBO,CAAR","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { createRoute } from '../routerUtils';\n\ndescribe('routerUtils', () => {\n  describe('createRoute', () => {\n    it('replaces wildcard params with real value', () => {\n      expect(createRoute(':hello', { ':hello': 'yo' })).to.equal('yo');\n    });\n\n    it('replaces multiple wildcard params with real value', () => {\n      expect(createRoute(':hello/:yo', { ':hello': 'yo', ':yo': 'dude' })).to.equal('yo/dude');\n    });\n\n    it('returns the initial path if no params are passed', () => {\n      expect(createRoute('yo')).to.equal('yo');\n    });\n\n    it('prefixes replacers with a colon if none is provided', () => {\n      expect(createRoute(':hello', { hello: 'yo' })).to.equal('yo');\n      expect(createRoute(':hello/:yo', { hello: 'yo', yo: 'dude' })).to.equal('yo/dude');\n    });\n\n    it('replaces wildcard params while removing interrogation marks', () => {\n      expect(createRoute('/abc/:hello?', { ':hello': '' })).to.equal('/abc/');\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/test/routerUtils.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/test/routerUtils.spec.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet createRoute;\nmodule.link(\"../routerUtils\", {\n  createRoute(v) {\n    createRoute = v;\n  }\n\n}, 1);\ndescribe('routerUtils', () => {\n  describe('createRoute', () => {\n    it('replaces wildcard params with real value', () => {\n      expect(createRoute(':hello', {\n        ':hello': 'yo'\n      })).to.equal('yo');\n    });\n    it('replaces multiple wildcard params with real value', () => {\n      expect(createRoute(':hello/:yo', {\n        ':hello': 'yo',\n        ':yo': 'dude'\n      })).to.equal('yo/dude');\n    });\n    it('returns the initial path if no params are passed', () => {\n      expect(createRoute('yo')).to.equal('yo');\n    });\n    it('prefixes replacers with a colon if none is provided', () => {\n      expect(createRoute(':hello', {\n        hello: 'yo'\n      })).to.equal('yo');\n      expect(createRoute(':hello/:yo', {\n        hello: 'yo',\n        yo: 'dude'\n      })).to.equal('yo/dude');\n    });\n    it('replaces wildcard params while removing interrogation marks', () => {\n      expect(createRoute('/abc/:hello?', {\n        ':hello': ''\n      })).to.equal('/abc/');\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/utils/test/routerUtils.spec.js"],"names":["describe","it","expect","createRoute","hello","yo"],"mappings":"AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAKAA,QAAQ,CAAA,aAAA,EAAgB,MAAM;AAC5BA,EAAAA,QAAQ,CAAA,aAAA,EAAgB,MAAM;AAC5BC,IAAAA,EAAE,CAAA,0CAAA,EAA6C,MAAM;AACnDC,MAAAA,MAAM,CAACC,WAAW,CAAA,QAAA,EAAW;AAAE,kBAAU;AAAZ,OAAX,CAAZ,CAAND,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,IAAAA;AADFD,KAAE,CAAFA;AAIAA,IAAAA,EAAE,CAAA,mDAAA,EAAsD,MAAM;AAC5DC,MAAAA,MAAM,CAACC,WAAW,CAAA,YAAA,EAAe;AAAE,kBAAF,IAAA;AAAkB,eAAO;AAAzB,OAAf,CAAZ,CAAND,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,SAAAA;AADFD,KAAE,CAAFA;AAIAA,IAAAA,EAAE,CAAA,kDAAA,EAAqD,MAAM;AAC3DC,MAAAA,MAAM,CAACC,WAAW,CAAlBD,IAAkB,CAAZ,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,IAAAA;AADFD,KAAE,CAAFA;AAIAA,IAAAA,EAAE,CAAA,qDAAA,EAAwD,MAAM;AAC9DC,MAAAA,MAAM,CAACC,WAAW,CAAA,QAAA,EAAW;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAX,CAAZ,CAANF,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,IAAAA;AACAA,MAAAA,MAAM,CAACC,WAAW,CAAA,YAAA,EAAe;AAAEC,QAAAA,KAAK,EAAP,IAAA;AAAeC,QAAAA,EAAE,EAAE;AAAnB,OAAf,CAAZ,CAANH,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,SAAAA;AAFFD,KAAE,CAAFA;AAKAA,IAAAA,EAAE,CAAA,6DAAA,EAAgE,MAAM;AACtEC,MAAAA,MAAM,CAACC,WAAW,CAAA,cAAA,EAAiB;AAAE,kBAAU;AAAZ,OAAjB,CAAZ,CAAND,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,OAAAA;AADFD,KAAE,CAAFA;AAlBFD,GAAQ,CAARA;AADFA,CAAQ,CAARA","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { createRoute } from '../routerUtils';\n\ndescribe('routerUtils', () => {\n  describe('createRoute', () => {\n    it('replaces wildcard params with real value', () => {\n      expect(createRoute(':hello', { ':hello': 'yo' })).to.equal('yo');\n    });\n\n    it('replaces multiple wildcard params with real value', () => {\n      expect(createRoute(':hello/:yo', { ':hello': 'yo', ':yo': 'dude' })).to.equal('yo/dude');\n    });\n\n    it('returns the initial path if no params are passed', () => {\n      expect(createRoute('yo')).to.equal('yo');\n    });\n\n    it('prefixes replacers with a colon if none is provided', () => {\n      expect(createRoute(':hello', { hello: 'yo' })).to.equal('yo');\n      expect(createRoute(':hello/:yo', { hello: 'yo', yo: 'dude' })).to.equal('yo/dude');\n    });\n\n    it('replaces wildcard params while removing interrogation marks', () => {\n      expect(createRoute('/abc/:hello?', { ':hello': '' })).to.equal('/abc/');\n    });\n  });\n});\n"]},"sourceType":"script","hash":"0e82c1fe0dd2c036561199100dbf280ebe788b2d"}
