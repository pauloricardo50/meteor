{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/test/loanFunctions.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/utils/test/loanFunctions.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/test/loanFunctions.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/test/loanFunctions.spec.js"],"names":["expect","formatLoanWithStructure","nextDueTaskReducer","TASK_STATUS","describe","it","selectedStructure","structures","id","hello","to","deep","include","equal","properties","_id","value","propertyId","property","offers","amortization","offerId","offer","undefined","promotionOptions","promotionLots","landValue","constructionValue","promotionOptionId","totalValue","loan","taskDate1","Date","setDate","getDate","taskDate2","tasksCache","dueAt","title","status","ACTIVE","CANCELLED","taskDate3","createdAt"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { formatLoanWithStructure, nextDueTaskReducer } from '../loanFunctions';\nimport { TASK_STATUS } from '../../api/constants';\n\ndescribe('Loan functions', () => {\n  describe('formatLoanWithStructure', () => {\n    it('sets the right structure', () => {\n      expect(formatLoanWithStructure({\n        selectedStructure: 'test',\n        structures: [{ id: 'test', hello: 'world' }],\n      })).to.deep.include({ id: 'test', hello: 'world' });\n    });\n\n    it('adds an empty structure if the structure was not found', () => {\n      expect(formatLoanWithStructure({\n        selectedStructure: 'test2',\n        structures: [{ id: 'test', hello: 'world' }],\n      })).to.deep.include({});\n    });\n\n    it('adds an empty structure if selectedStructure is not defined', () => {\n      expect(formatLoanWithStructure({\n        structures: [{ id: 'test', hello: 'world' }],\n      })).to.deep.equal({});\n    });\n\n    it('adds the right property if it exists', () => {\n      expect(formatLoanWithStructure({\n        properties: [{ _id: 'property1', value: 100 }],\n        selectedStructure: 'test',\n        structures: [{ id: 'test', propertyId: 'property1' }],\n      })).to.deep.include({\n        id: 'test',\n        propertyId: 'property1',\n        property: { _id: 'property1', value: 100 },\n      });\n    });\n\n    it('adds the right offer if it exists', () => {\n      expect(formatLoanWithStructure({\n        offers: [{ _id: 'offer1', amortization: 100 }],\n        selectedStructure: 'test',\n        structures: [{ id: 'test', offerId: 'offer1' }],\n      })).to.deep.include({\n        id: 'test',\n        offerId: 'offer1',\n        offer: { _id: 'offer1', amortization: 100 },\n      });\n    });\n\n    it('adds both offer and property', () => {\n      expect(formatLoanWithStructure({\n        offers: [{ _id: 'offer1', amortization: 100 }],\n        properties: [{ _id: 'property1', value: 100 }],\n        selectedStructure: 'test',\n        structures: [\n          { id: 'test', offerId: 'offer1', propertyId: 'property1' },\n        ],\n      })).to.deep.include({\n        id: 'test',\n        offerId: 'offer1',\n        propertyId: 'property1',\n        offer: { _id: 'offer1', amortization: 100 },\n        property: { _id: 'property1', value: 100 },\n      });\n    });\n\n    it('returns undefined if no structures exist', () => {\n      expect(formatLoanWithStructure({\n        selectedStructure: 'test',\n        structures: [],\n      })).to.deep.equal(undefined);\n    });\n\n    it('formats the promotionOption properly', () => {\n      expect(formatLoanWithStructure({\n        promotionOptions: [\n          {\n            _id: 'id',\n            value: 100,\n            promotionLots: [\n              { properties: [{ landValue: 50, constructionValue: 80 }] },\n            ],\n          },\n        ],\n        selectedStructure: 'test',\n        structures: [{ id: 'test', promotionOptionId: 'id' }],\n      })).to.deep.include({\n        id: 'test',\n        promotionOptionId: 'id',\n        property: {\n          _id: 'id',\n          value: 100,\n          totalValue: 100,\n          landValue: 50,\n          constructionValue: 80,\n          promotionLots: [\n            { properties: [{ landValue: 50, constructionValue: 80 }] },\n          ],\n        },\n      });\n    });\n  });\n\n  describe('nextDueTaskReducer', () => {\n    it('returns undefined if no dates exist', () => {\n      const loan = {};\n      expect(nextDueTaskReducer(loan)).to.equal(undefined);\n    });\n\n    it('gets the next task date', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const taskDate2 = new Date();\n      taskDate2.setDate(taskDate2.getDate() - 2);\n      const tasksCache = [\n        { dueAt: taskDate1, title: 'task A', status: TASK_STATUS.ACTIVE },\n        { dueAt: taskDate2, title: 'task B', status: TASK_STATUS.ACTIVE },\n      ];\n      const loan = { tasksCache };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        dueAt: taskDate2,\n        title: 'task B',\n      });\n    });\n\n    it('only returns active task dates', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const taskDate2 = new Date();\n      taskDate2.setDate(taskDate2.getDate() - 2);\n      const tasksCache = [\n        { dueAt: taskDate1, title: 'task A', status: TASK_STATUS.ACTIVE },\n        { dueAt: taskDate2, title: 'task B', status: TASK_STATUS.CANCELLED },\n      ];\n      const loan = { tasksCache };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        dueAt: taskDate1,\n        title: 'task A',\n        status: TASK_STATUS.ACTIVE,\n      });\n    });\n\n    it('puts tasks without due dates first', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const tasksCache = [\n        { dueAt: taskDate1, title: 'task A', status: TASK_STATUS.ACTIVE },\n        { title: 'task B', status: TASK_STATUS.ACTIVE },\n      ];\n      const loan = { tasksCache };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        title: 'task B',\n        status: TASK_STATUS.ACTIVE,\n      });\n    });\n\n    it('puts older tasks first', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const taskDate2 = new Date();\n      taskDate2.setDate(taskDate2.getDate() - 2);\n      const taskDate3 = new Date();\n      taskDate3.setDate(taskDate3.getDate() - 3);\n      const tasksCache = [\n        { dueAt: taskDate1, title: 'task A', status: TASK_STATUS.ACTIVE },\n        { createdAt: taskDate2, title: 'task B', status: TASK_STATUS.ACTIVE },\n        { createdAt: taskDate3, title: 'task C', status: TASK_STATUS.ACTIVE },\n      ];\n      const loan = { tasksCache };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        title: 'task C',\n        status: TASK_STATUS.ACTIVE,\n      });\n    });\n\n    it('puts older tasks first', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const taskDate2 = new Date();\n      taskDate2.setDate(taskDate2.getDate() - 2);\n      const taskDate3 = new Date();\n      taskDate3.setDate(taskDate3.getDate() - 3);\n      const tasksCache = [\n        { createdAt: taskDate2, title: 'task B', status: TASK_STATUS.ACTIVE },\n        { dueAt: taskDate1, title: 'task A', status: TASK_STATUS.ACTIVE },\n        { dueAt: taskDate3, title: 'task C', status: TASK_STATUS.ACTIVE },\n      ];\n      const loan = { tasksCache };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        title: 'task B',\n        status: TASK_STATUS.ACTIVE,\n      });\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/test/loanFunctions.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/test/loanFunctions.spec.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet formatLoanWithStructure, nextDueTaskReducer;\nmodule.link(\"../loanFunctions\", {\n  formatLoanWithStructure(v) {\n    formatLoanWithStructure = v;\n  },\n\n  nextDueTaskReducer(v) {\n    nextDueTaskReducer = v;\n  }\n\n}, 1);\nlet TASK_STATUS;\nmodule.link(\"../../api/constants\", {\n  TASK_STATUS(v) {\n    TASK_STATUS = v;\n  }\n\n}, 2);\ndescribe('Loan functions', () => {\n  describe('formatLoanWithStructure', () => {\n    it('sets the right structure', () => {\n      expect(formatLoanWithStructure({\n        selectedStructure: 'test',\n        structures: [{\n          id: 'test',\n          hello: 'world'\n        }]\n      })).to.deep.include({\n        id: 'test',\n        hello: 'world'\n      });\n    });\n    it('adds an empty structure if the structure was not found', () => {\n      expect(formatLoanWithStructure({\n        selectedStructure: 'test2',\n        structures: [{\n          id: 'test',\n          hello: 'world'\n        }]\n      })).to.deep.include({});\n    });\n    it('adds an empty structure if selectedStructure is not defined', () => {\n      expect(formatLoanWithStructure({\n        structures: [{\n          id: 'test',\n          hello: 'world'\n        }]\n      })).to.deep.equal({});\n    });\n    it('adds the right property if it exists', () => {\n      expect(formatLoanWithStructure({\n        properties: [{\n          _id: 'property1',\n          value: 100\n        }],\n        selectedStructure: 'test',\n        structures: [{\n          id: 'test',\n          propertyId: 'property1'\n        }]\n      })).to.deep.include({\n        id: 'test',\n        propertyId: 'property1',\n        property: {\n          _id: 'property1',\n          value: 100\n        }\n      });\n    });\n    it('adds the right offer if it exists', () => {\n      expect(formatLoanWithStructure({\n        offers: [{\n          _id: 'offer1',\n          amortization: 100\n        }],\n        selectedStructure: 'test',\n        structures: [{\n          id: 'test',\n          offerId: 'offer1'\n        }]\n      })).to.deep.include({\n        id: 'test',\n        offerId: 'offer1',\n        offer: {\n          _id: 'offer1',\n          amortization: 100\n        }\n      });\n    });\n    it('adds both offer and property', () => {\n      expect(formatLoanWithStructure({\n        offers: [{\n          _id: 'offer1',\n          amortization: 100\n        }],\n        properties: [{\n          _id: 'property1',\n          value: 100\n        }],\n        selectedStructure: 'test',\n        structures: [{\n          id: 'test',\n          offerId: 'offer1',\n          propertyId: 'property1'\n        }]\n      })).to.deep.include({\n        id: 'test',\n        offerId: 'offer1',\n        propertyId: 'property1',\n        offer: {\n          _id: 'offer1',\n          amortization: 100\n        },\n        property: {\n          _id: 'property1',\n          value: 100\n        }\n      });\n    });\n    it('returns undefined if no structures exist', () => {\n      expect(formatLoanWithStructure({\n        selectedStructure: 'test',\n        structures: []\n      })).to.deep.equal(undefined);\n    });\n    it('formats the promotionOption properly', () => {\n      expect(formatLoanWithStructure({\n        promotionOptions: [{\n          _id: 'id',\n          value: 100,\n          promotionLots: [{\n            properties: [{\n              landValue: 50,\n              constructionValue: 80\n            }]\n          }]\n        }],\n        selectedStructure: 'test',\n        structures: [{\n          id: 'test',\n          promotionOptionId: 'id'\n        }]\n      })).to.deep.include({\n        id: 'test',\n        promotionOptionId: 'id',\n        property: {\n          _id: 'id',\n          value: 100,\n          totalValue: 100,\n          landValue: 50,\n          constructionValue: 80,\n          promotionLots: [{\n            properties: [{\n              landValue: 50,\n              constructionValue: 80\n            }]\n          }]\n        }\n      });\n    });\n  });\n  describe('nextDueTaskReducer', () => {\n    it('returns undefined if no dates exist', () => {\n      const loan = {};\n      expect(nextDueTaskReducer(loan)).to.equal(undefined);\n    });\n    it('gets the next task date', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const taskDate2 = new Date();\n      taskDate2.setDate(taskDate2.getDate() - 2);\n      const tasksCache = [{\n        dueAt: taskDate1,\n        title: 'task A',\n        status: TASK_STATUS.ACTIVE\n      }, {\n        dueAt: taskDate2,\n        title: 'task B',\n        status: TASK_STATUS.ACTIVE\n      }];\n      const loan = {\n        tasksCache\n      };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        dueAt: taskDate2,\n        title: 'task B'\n      });\n    });\n    it('only returns active task dates', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const taskDate2 = new Date();\n      taskDate2.setDate(taskDate2.getDate() - 2);\n      const tasksCache = [{\n        dueAt: taskDate1,\n        title: 'task A',\n        status: TASK_STATUS.ACTIVE\n      }, {\n        dueAt: taskDate2,\n        title: 'task B',\n        status: TASK_STATUS.CANCELLED\n      }];\n      const loan = {\n        tasksCache\n      };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        dueAt: taskDate1,\n        title: 'task A',\n        status: TASK_STATUS.ACTIVE\n      });\n    });\n    it('puts tasks without due dates first', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const tasksCache = [{\n        dueAt: taskDate1,\n        title: 'task A',\n        status: TASK_STATUS.ACTIVE\n      }, {\n        title: 'task B',\n        status: TASK_STATUS.ACTIVE\n      }];\n      const loan = {\n        tasksCache\n      };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        title: 'task B',\n        status: TASK_STATUS.ACTIVE\n      });\n    });\n    it('puts older tasks first', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const taskDate2 = new Date();\n      taskDate2.setDate(taskDate2.getDate() - 2);\n      const taskDate3 = new Date();\n      taskDate3.setDate(taskDate3.getDate() - 3);\n      const tasksCache = [{\n        dueAt: taskDate1,\n        title: 'task A',\n        status: TASK_STATUS.ACTIVE\n      }, {\n        createdAt: taskDate2,\n        title: 'task B',\n        status: TASK_STATUS.ACTIVE\n      }, {\n        createdAt: taskDate3,\n        title: 'task C',\n        status: TASK_STATUS.ACTIVE\n      }];\n      const loan = {\n        tasksCache\n      };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        title: 'task C',\n        status: TASK_STATUS.ACTIVE\n      });\n    });\n    it('puts older tasks first', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const taskDate2 = new Date();\n      taskDate2.setDate(taskDate2.getDate() - 2);\n      const taskDate3 = new Date();\n      taskDate3.setDate(taskDate3.getDate() - 3);\n      const tasksCache = [{\n        createdAt: taskDate2,\n        title: 'task B',\n        status: TASK_STATUS.ACTIVE\n      }, {\n        dueAt: taskDate1,\n        title: 'task A',\n        status: TASK_STATUS.ACTIVE\n      }, {\n        dueAt: taskDate3,\n        title: 'task C',\n        status: TASK_STATUS.ACTIVE\n      }];\n      const loan = {\n        tasksCache\n      };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        title: 'task B',\n        status: TASK_STATUS.ACTIVE\n      });\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/utils/test/loanFunctions.spec.js"],"names":["describe","it","expect","formatLoanWithStructure","selectedStructure","structures","id","hello","properties","_id","value","propertyId","property","offers","amortization","offerId","offer","promotionOptions","promotionLots","landValue","constructionValue","promotionOptionId","totalValue","loan","nextDueTaskReducer","taskDate1","taskDate2","tasksCache","dueAt","title","status","TASK_STATUS","ACTIVE","CANCELLED","taskDate3","createdAt"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { formatLoanWithStructure, nextDueTaskReducer } from '../loanFunctions';\nimport { TASK_STATUS } from '../../api/constants';\n\ndescribe('Loan functions', () => {\n  describe('formatLoanWithStructure', () => {\n    it('sets the right structure', () => {\n      expect(formatLoanWithStructure({\n        selectedStructure: 'test',\n        structures: [{ id: 'test', hello: 'world' }],\n      })).to.deep.include({ id: 'test', hello: 'world' });\n    });\n\n    it('adds an empty structure if the structure was not found', () => {\n      expect(formatLoanWithStructure({\n        selectedStructure: 'test2',\n        structures: [{ id: 'test', hello: 'world' }],\n      })).to.deep.include({});\n    });\n\n    it('adds an empty structure if selectedStructure is not defined', () => {\n      expect(formatLoanWithStructure({\n        structures: [{ id: 'test', hello: 'world' }],\n      })).to.deep.equal({});\n    });\n\n    it('adds the right property if it exists', () => {\n      expect(formatLoanWithStructure({\n        properties: [{ _id: 'property1', value: 100 }],\n        selectedStructure: 'test',\n        structures: [{ id: 'test', propertyId: 'property1' }],\n      })).to.deep.include({\n        id: 'test',\n        propertyId: 'property1',\n        property: { _id: 'property1', value: 100 },\n      });\n    });\n\n    it('adds the right offer if it exists', () => {\n      expect(formatLoanWithStructure({\n        offers: [{ _id: 'offer1', amortization: 100 }],\n        selectedStructure: 'test',\n        structures: [{ id: 'test', offerId: 'offer1' }],\n      })).to.deep.include({\n        id: 'test',\n        offerId: 'offer1',\n        offer: { _id: 'offer1', amortization: 100 },\n      });\n    });\n\n    it('adds both offer and property', () => {\n      expect(formatLoanWithStructure({\n        offers: [{ _id: 'offer1', amortization: 100 }],\n        properties: [{ _id: 'property1', value: 100 }],\n        selectedStructure: 'test',\n        structures: [\n          { id: 'test', offerId: 'offer1', propertyId: 'property1' },\n        ],\n      })).to.deep.include({\n        id: 'test',\n        offerId: 'offer1',\n        propertyId: 'property1',\n        offer: { _id: 'offer1', amortization: 100 },\n        property: { _id: 'property1', value: 100 },\n      });\n    });\n\n    it('returns undefined if no structures exist', () => {\n      expect(formatLoanWithStructure({\n        selectedStructure: 'test',\n        structures: [],\n      })).to.deep.equal(undefined);\n    });\n\n    it('formats the promotionOption properly', () => {\n      expect(formatLoanWithStructure({\n        promotionOptions: [\n          {\n            _id: 'id',\n            value: 100,\n            promotionLots: [\n              { properties: [{ landValue: 50, constructionValue: 80 }] },\n            ],\n          },\n        ],\n        selectedStructure: 'test',\n        structures: [{ id: 'test', promotionOptionId: 'id' }],\n      })).to.deep.include({\n        id: 'test',\n        promotionOptionId: 'id',\n        property: {\n          _id: 'id',\n          value: 100,\n          totalValue: 100,\n          landValue: 50,\n          constructionValue: 80,\n          promotionLots: [\n            { properties: [{ landValue: 50, constructionValue: 80 }] },\n          ],\n        },\n      });\n    });\n  });\n\n  describe('nextDueTaskReducer', () => {\n    it('returns undefined if no dates exist', () => {\n      const loan = {};\n      expect(nextDueTaskReducer(loan)).to.equal(undefined);\n    });\n\n    it('gets the next task date', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const taskDate2 = new Date();\n      taskDate2.setDate(taskDate2.getDate() - 2);\n      const tasksCache = [\n        { dueAt: taskDate1, title: 'task A', status: TASK_STATUS.ACTIVE },\n        { dueAt: taskDate2, title: 'task B', status: TASK_STATUS.ACTIVE },\n      ];\n      const loan = { tasksCache };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        dueAt: taskDate2,\n        title: 'task B',\n      });\n    });\n\n    it('only returns active task dates', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const taskDate2 = new Date();\n      taskDate2.setDate(taskDate2.getDate() - 2);\n      const tasksCache = [\n        { dueAt: taskDate1, title: 'task A', status: TASK_STATUS.ACTIVE },\n        { dueAt: taskDate2, title: 'task B', status: TASK_STATUS.CANCELLED },\n      ];\n      const loan = { tasksCache };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        dueAt: taskDate1,\n        title: 'task A',\n        status: TASK_STATUS.ACTIVE,\n      });\n    });\n\n    it('puts tasks without due dates first', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const tasksCache = [\n        { dueAt: taskDate1, title: 'task A', status: TASK_STATUS.ACTIVE },\n        { title: 'task B', status: TASK_STATUS.ACTIVE },\n      ];\n      const loan = { tasksCache };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        title: 'task B',\n        status: TASK_STATUS.ACTIVE,\n      });\n    });\n\n    it('puts older tasks first', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const taskDate2 = new Date();\n      taskDate2.setDate(taskDate2.getDate() - 2);\n      const taskDate3 = new Date();\n      taskDate3.setDate(taskDate3.getDate() - 3);\n      const tasksCache = [\n        { dueAt: taskDate1, title: 'task A', status: TASK_STATUS.ACTIVE },\n        { createdAt: taskDate2, title: 'task B', status: TASK_STATUS.ACTIVE },\n        { createdAt: taskDate3, title: 'task C', status: TASK_STATUS.ACTIVE },\n      ];\n      const loan = { tasksCache };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        title: 'task C',\n        status: TASK_STATUS.ACTIVE,\n      });\n    });\n\n    it('puts older tasks first', () => {\n      const taskDate1 = new Date();\n      taskDate1.setDate(taskDate1.getDate() - 1);\n      const taskDate2 = new Date();\n      taskDate2.setDate(taskDate2.getDate() - 2);\n      const taskDate3 = new Date();\n      taskDate3.setDate(taskDate3.getDate() - 3);\n      const tasksCache = [\n        { createdAt: taskDate2, title: 'task B', status: TASK_STATUS.ACTIVE },\n        { dueAt: taskDate1, title: 'task A', status: TASK_STATUS.ACTIVE },\n        { dueAt: taskDate3, title: 'task C', status: TASK_STATUS.ACTIVE },\n      ];\n      const loan = { tasksCache };\n      expect(nextDueTaskReducer(loan)).to.deep.include({\n        title: 'task B',\n        status: TASK_STATUS.ACTIVE,\n      });\n    });\n  });\n});\n"]},"sourceType":"script","hash":"61bffa529382d31d9d7e825ba744eea85e2a6ff9"}
