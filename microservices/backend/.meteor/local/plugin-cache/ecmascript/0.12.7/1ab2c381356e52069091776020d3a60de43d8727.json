{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/vent/Vent.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/cultofcoders:redis-oplog/lib/vent/Vent.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/vent/Vent.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/vent/Vent.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:redis-oplog/lib/vent/Vent.js"}},"code":"module.export({\n  default: () => Vent\n});\nlet getRedisListener, getRedisPusher;\nmodule.link(\"../redis/getRedisClient\", {\n  getRedisListener(v) {\n    getRedisListener = v;\n  },\n\n  getRedisPusher(v) {\n    getRedisPusher = v;\n  }\n\n}, 0);\nlet VentConstants;\nmodule.link(\"../constants\", {\n  VentConstants(v) {\n    VentConstants = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 3);\nlet Config;\nmodule.link(\"../config\", {\n  default(v) {\n    Config = v;\n  }\n\n}, 4);\n\nclass Vent {\n  /**\n   * @param name\n   * @param fn\n   * @returns {*|any|Observable}\n   */\n  static publish(name, fn) {\n    // check initialization\n    if (!Config.isInitialized) {\n      throw new Meteor.Error('not-initialized', 'RedisOplog is not initialized at the time of defining this publish. Make sure you initialize it before');\n    }\n\n    if (_.isObject(name)) {\n      _.each(name, (fn, _name) => {\n        Vent.publish(_name, fn);\n      });\n\n      return;\n    } // validate if everything is in order\n\n\n    Vent._validateArguments(name, fn); // create the publication properly\n\n\n    return Vent._createPublishEndPoint(name, fn);\n  }\n  /**\n   * @param {string} channel\n   * @param {object} object\n   */\n\n\n  static emit(channel, object) {\n    const {\n      pubSubManager\n    } = Config;\n    pubSubManager.publish(channel, object);\n  }\n  /**\n   * Creates the publish endpoint\n   *\n   * @param name\n   * @param fn\n   * @returns {*|any|Observable}\n   * @private\n   */\n\n\n  static _createPublishEndPoint(name, fn) {\n    return Meteor.publish(name, function (collectionId, ...args) {\n      Vent._extendPublishContext(this, name, collectionId);\n\n      try {\n        fn.call(this, ...args);\n      } catch (e) {\n        // we do this because the errors in here are silenced\n        console.error(e);\n        throw e;\n      }\n\n      this.ready();\n    });\n  }\n  /**\n   * @param context\n   * @param name\n   * @param collectionId\n   * @private\n   */\n\n\n  static _extendPublishContext(context, name, collectionId) {\n    const channelHandlers = [];\n    const {\n      pubSubManager\n    } = Config;\n    Object.assign(context, {\n      on(channel, redisEventHandler) {\n        // create the handler for this channel\n        const handler = function (message) {\n          const data = redisEventHandler.call(context, message);\n\n          if (data) {\n            context._session.send({\n              msg: 'changed',\n              [VentConstants.PREFIX]: '1',\n              id: VentConstants.getPrefix(collectionId, name),\n              [VentConstants.EVENT_VARIABLE]: data\n            });\n          }\n        };\n\n        channelHandlers.push({\n          channel,\n          handler\n        });\n        pubSubManager.subscribe(channel, handler);\n      }\n\n    });\n    context.onStop(function () {\n      channelHandlers.forEach(({\n        channel,\n        handler\n      }) => {\n        pubSubManager.unsubscribe(channel, handler);\n      });\n    });\n  }\n  /**\n   * @param name\n   * @param fn\n   * @private\n   */\n\n\n  static _validateArguments(name, fn) {\n    // validate arguments\n    if (!_.isString(name)) {\n      if (!_.isObject(name)) {\n        throw new Meteor.Error('invalid-definition', 'Argument is invalid');\n      }\n    } else {\n      if (!_.isFunction(fn)) {\n        throw new Meteor.Error('invalid-definition', 'The second argument needs to be a function');\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:redis-oplog/lib/vent/Vent.js"],"names":["module","export","default","Vent","getRedisListener","getRedisPusher","link","v","VentConstants","Meteor","Random","Config","publish","name","fn","isInitialized","Error","_","isObject","each","_name","_validateArguments","_createPublishEndPoint","emit","channel","object","pubSubManager","collectionId","args","_extendPublishContext","call","e","console","error","ready","context","channelHandlers","Object","assign","on","redisEventHandler","handler","message","data","_session","send","msg","PREFIX","id","getPrefix","EVENT_VARIABLE","push","subscribe","onStop","forEach","unsubscribe","isString","isFunction"],"mappings":"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","sourcesContent":["import {getRedisListener, getRedisPusher} from '../redis/getRedisClient';\nimport {VentConstants} from '../constants';\nimport {Meteor} from 'meteor/meteor';\nimport {Random} from 'meteor/random';\nimport Config from '../config';\n\n// TODO:\n// Unify listening of events with RedisSubscriptionManager\n\nexport default class Vent {\n    /**\n     * @param name\n     * @param fn\n     * @returns {*|any|Observable}\n     */\n    static publish(name, fn) {\n        // check initialization\n        if (!Config.isInitialized) {\n            throw new Meteor.Error('not-initialized', 'RedisOplog is not initialized at the time of defining this publish. Make sure you initialize it before');\n        }\n\n        if (_.isObject(name)) {\n            _.each(name, (fn, _name) => {\n                Vent.publish(_name, fn);\n            });\n\n            return;\n        }\n\n        // validate if everything is in order\n        Vent._validateArguments(name, fn);\n\n        // create the publication properly\n        return Vent._createPublishEndPoint(name, fn);\n    }\n\n    /**\n     * @param {string} channel\n     * @param {object} object\n     */\n    static emit(channel, object) {\n        const {pubSubManager} = Config;\n\n        pubSubManager.publish(channel, object);\n    }\n\n    /**\n     * Creates the publish endpoint\n     *\n     * @param name\n     * @param fn\n     * @returns {*|any|Observable}\n     * @private\n     */\n    static _createPublishEndPoint(name, fn) {\n        return Meteor.publish(name, function (collectionId, ...args) {\n            Vent._extendPublishContext(this, name, collectionId);\n\n            try {\n                fn.call(this, ...args);\n            } catch (e) {\n                // we do this because the errors in here are silenced\n                console.error(e);\n                throw e;\n            }\n\n            this.ready();\n        });\n    }\n\n    /**\n     * @param context\n     * @param name\n     * @param collectionId\n     * @private\n     */\n    static _extendPublishContext(context, name, collectionId) {\n        const channelHandlers = [];\n        const { pubSubManager } = Config;\n\n        Object.assign(context, {\n            on(channel, redisEventHandler) {\n                // create the handler for this channel\n                const handler = function(message) {\n                    const data = redisEventHandler.call(context, message);\n\n                    if (data) {\n                        context._session.send({\n                            msg: 'changed',\n                            [VentConstants.PREFIX]: '1',\n                            id: VentConstants.getPrefix(collectionId, name),\n                            [VentConstants.EVENT_VARIABLE]: data\n                        });\n                    }\n                };\n                channelHandlers.push({ channel, handler });\n                pubSubManager.subscribe(channel, handler);\n            },\n        });\n\n        context.onStop(function () {\n            channelHandlers.forEach(({ channel, handler }) => {\n              pubSubManager.unsubscribe(channel, handler);\n            });\n        });\n    }\n\n    /**\n     * @param name\n     * @param fn\n     * @private\n     */\n    static _validateArguments(name, fn) {\n        // validate arguments\n        if (!_.isString(name)) {\n            if (!_.isObject(name)) {\n                throw new Meteor.Error('invalid-definition', 'Argument is invalid')\n            }\n\n        } else {\n            if (!_.isFunction(fn)) {\n                throw new Meteor.Error('invalid-definition', 'The second argument needs to be a function')\n            }\n        }\n    }\n}\n\n"]},"sourceType":"script","hash":"1ab2c381356e52069091776020d3a60de43d8727"}
