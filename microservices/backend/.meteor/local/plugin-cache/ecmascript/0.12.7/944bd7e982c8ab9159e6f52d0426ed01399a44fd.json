{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/server-render/server-register.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/server-render/server-register.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/server-render/server-register.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/server-render/server-register.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/server-render/server-register.js"}},"code":"let WebAppInternals;\nmodule.link(\"meteor/webapp\", {\n  WebAppInternals(v) {\n    WebAppInternals = v;\n  }\n\n}, 0);\nlet MagicString;\nmodule.link(\"magic-string\", {\n  default(v) {\n    MagicString = v;\n  }\n\n}, 1);\nlet SAXParser;\nmodule.link(\"parse5\", {\n  SAXParser(v) {\n    SAXParser = v;\n  }\n\n}, 2);\nlet createStream;\nmodule.link(\"combined-stream2\", {\n  create(v) {\n    createStream = v;\n  }\n\n}, 3);\nlet ServerSink, isReadable;\nmodule.link(\"./server-sink.js\", {\n  ServerSink(v) {\n    ServerSink = v;\n  },\n\n  isReadable(v) {\n    isReadable = v;\n  }\n\n}, 4);\nlet onPageLoad;\nmodule.link(\"./server.js\", {\n  onPageLoad(v) {\n    onPageLoad = v;\n  }\n\n}, 5);\nWebAppInternals.registerBoilerplateDataCallback(\"meteor/server-render\", (request, data, arch) => {\n  const sink = new ServerSink(request, arch);\n  return onPageLoad.chain(callback => callback(sink, request)).then(() => {\n    if (!sink.maybeMadeChanges) {\n      return false;\n    }\n\n    let reallyMadeChanges = false;\n\n    function rewrite(property) {\n      const html = data[property];\n\n      if (typeof html !== \"string\") {\n        return;\n      }\n\n      const magic = new MagicString(html);\n      const parser = new SAXParser({\n        locationInfo: true\n      });\n      data[property] = parser;\n\n      if (Object.keys(sink.htmlById).length) {\n        const stream = createStream();\n        let lastStart = magic.start;\n        parser.on(\"startTag\", (name, attrs, selfClosing, loc) => {\n          attrs.some(attr => {\n            if (attr.name === \"id\") {\n              let html = sink.htmlById[attr.value];\n\n              if (html) {\n                reallyMadeChanges = true;\n                const start = magic.slice(lastStart, loc.endOffset);\n                stream.append(Buffer.from(start, \"utf8\"));\n                stream.append(typeof html === \"string\" ? Buffer.from(html, \"utf8\") : html);\n                lastStart = loc.endOffset;\n              }\n\n              return true;\n            }\n          });\n        });\n        parser.on(\"endTag\", (name, location) => {\n          if (location.endOffset === html.length) {\n            // reached the end of the template\n            const end = magic.slice(lastStart);\n            stream.append(Buffer.from(end, \"utf8\"));\n          }\n        });\n        data[property] = stream;\n      }\n\n      parser.write(html, parser.end.bind(parser));\n    }\n\n    if (sink.head) {\n      data.dynamicHead = (data.dynamicHead || \"\") + sink.head;\n      reallyMadeChanges = true;\n    }\n\n    if (Object.keys(sink.htmlById).length > 0) {\n      // We don't currently allow injecting HTML into the <head> except\n      // by calling sink.appendHead(html).\n      rewrite(\"body\");\n      rewrite(\"dynamicBody\");\n    }\n\n    if (sink.body) {\n      data.dynamicBody = (data.dynamicBody || \"\") + sink.body;\n      reallyMadeChanges = true;\n    }\n\n    if (sink.statusCode) {\n      data.statusCode = sink.statusCode;\n      reallyMadeChanges = true;\n    }\n\n    if (Object.keys(sink.responseHeaders)) {\n      data.headers = sink.responseHeaders;\n      reallyMadeChanges = true;\n    }\n\n    return reallyMadeChanges;\n  });\n});","map":{"version":3,"sources":["packages/server-render/server-register.js"],"names":["WebAppInternals","module","link","v","MagicString","default","SAXParser","createStream","create","ServerSink","isReadable","onPageLoad","registerBoilerplateDataCallback","request","data","arch","sink","chain","callback","then","maybeMadeChanges","reallyMadeChanges","rewrite","property","html","magic","parser","locationInfo","Object","keys","htmlById","length","stream","lastStart","start","on","name","attrs","selfClosing","loc","some","attr","value","slice","endOffset","append","Buffer","from","location","end","write","bind","head","dynamicHead","body","dynamicBody","statusCode","responseHeaders","headers"],"mappings":"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","sourcesContent":["import { WebAppInternals } from \"meteor/webapp\";\nimport MagicString from \"magic-string\";\nimport { SAXParser } from \"parse5\";\nimport { create as createStream } from \"combined-stream2\";\nimport { ServerSink, isReadable } from \"./server-sink.js\";\nimport { onPageLoad } from \"./server.js\";\n\nWebAppInternals.registerBoilerplateDataCallback(\n  \"meteor/server-render\",\n  (request, data, arch) => {\n    const sink = new ServerSink(request, arch);\n\n    return onPageLoad.chain(\n      callback => callback(sink, request)\n    ).then(() => {\n      if (! sink.maybeMadeChanges) {\n        return false;\n      }\n\n      let reallyMadeChanges = false;\n\n      function rewrite(property) {\n        const html = data[property];\n        if (typeof html !== \"string\") {\n          return;\n        }\n\n        const magic = new MagicString(html);\n        const parser = new SAXParser({\n          locationInfo: true\n        });\n\n        data[property] = parser;\n\n        if (Object.keys(sink.htmlById).length) {\n          const stream = createStream();\n\n          let lastStart = magic.start;\n          parser.on(\"startTag\", (name, attrs, selfClosing, loc) => {\n            attrs.some(attr => {\n              if (attr.name === \"id\") {\n                let html = sink.htmlById[attr.value];\n                if (html) {\n                  reallyMadeChanges = true;\n                  const start = magic.slice(lastStart, loc.endOffset);\n                  stream.append(Buffer.from(start, \"utf8\"));\n                  stream.append(\n                    typeof html === \"string\"\n                      ? Buffer.from(html, \"utf8\")\n                      : html\n                  );\n                  lastStart = loc.endOffset;\n                }\n                return true;\n              }\n            });\n          });\n\n          parser.on(\"endTag\", (name, location) => {\n            if (location.endOffset === html.length) {\n              // reached the end of the template\n              const end = magic.slice(lastStart);\n              stream.append(Buffer.from(end, \"utf8\"));\n            }\n          })\n\n          data[property] = stream;\n        }\n\n        parser.write(html, parser.end.bind(parser));\n      }\n\n      if (sink.head) {\n        data.dynamicHead = (data.dynamicHead || \"\") + sink.head;\n        reallyMadeChanges = true;\n      }\n\n      if (Object.keys(sink.htmlById).length > 0) {\n        // We don't currently allow injecting HTML into the <head> except\n        // by calling sink.appendHead(html).\n        rewrite(\"body\");\n        rewrite(\"dynamicBody\");\n      }\n\n      if (sink.body) {\n        data.dynamicBody = (data.dynamicBody || \"\") + sink.body;\n        reallyMadeChanges = true;\n      }\n\n      if (sink.statusCode) {\n        data.statusCode = sink.statusCode;\n        reallyMadeChanges = true;\n      }\n\n      if (Object.keys(sink.responseHeaders)){\n        data.headers = sink.responseHeaders;\n        reallyMadeChanges = true;\n      }\n\n      return reallyMadeChanges;\n    });\n  }\n);\n"]},"sourceType":"script","hash":"944bd7e982c8ab9159e6f52d0426ed01399a44fd"}
