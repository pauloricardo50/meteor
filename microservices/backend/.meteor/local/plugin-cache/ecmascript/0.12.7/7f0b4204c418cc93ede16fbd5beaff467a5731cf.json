{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/loans/server/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/loans/server/methods.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/loans/server/methods.js","inputSourceMap":{"version":3,"sources":["imports/core/api/loans/server/methods.js"],"names":["Analytics","checkInsertUserId","EVENTS","Security","SecurityService","loanInsert","loanUpdate","loanDelete","requestLoanVerification","confirmClosing","pushLoanValue","popLoanValue","adminLoanInsert","addNewStructure","removeStructure","updateStructure","selectStructure","duplicateStructure","assignLoanToUser","switchBorrower","sendNegativeFeedbackToAllLenders","loanUpdatePromotionInvitedBy","reuseProperty","setMaxPropertyValueWithoutBorrowRatio","addNewMaxStructure","setLoanStep","loanShareSolvency","anonymousLoanInsert","userLoanInsert","loanInsertBorrowers","adminLoanReset","loanLinkPromotion","loanUnlinkPromotion","loanSetCreatedAtActivityDescription","loanSetStatus","STEPS","LOAN_STATUS","LoanService","setHandler","context","loan","userId","insert","loanId","object","loans","isAllowedToUpdate","update","isAllowedToDelete","remove","askVerification","checkCurrentUserIsAdmin","pushValue","popValue","adminLoanInsertHandler","adminUserId","checkUserIsAdmin","fullLoanInsert","test","proPropertyId","checkLoggedIn","insertPropertyLoan","propertyIds","displayWelcomeScreen","status","TEST","LEAD","addStructureHandler","removeStructureHandler","structureId","updateStructureHandler","structure","selectStructureHandler","duplicateStructureHandler","params","anonymous","fetchOne","$filters","_id","checkAnonymousLoan","unblock","updatePromotionInvitedBy","userAllowedSteps","SOLVENCY","REQUEST","includes","nextStep","setStep","shareSolvency","existingAnonymousLoanId","referralId","trackingId","properties","isAllowedToAddAnonymousLoan","propertyId","existingLoan","addPropertyToLoan","insertAnonymousLoan","analytics","track","LOAN_CREATED","insertBorrowers","resetLoan","linkPromotion","unlinkPromotion","setCreatedAtActivityDescription"],"mappings":"AAAA,OAAOA,SAAP;AACA,SAASC,iBAAT;AACA,OAAOC,MAAP;AAEA,OAAOC,QAAP;AACA,OAAOC,eAAP;AACA,SACEC,UADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,uBAJF,EAKEC,cALF,EAMEC,aANF,EAOEC,YAPF,EAQEC,eARF,EASEC,eATF,EAUEC,eAVF,EAWEC,eAXF,EAYEC,eAZF,EAaEC,kBAbF,EAcEC,gBAdF,EAeEC,cAfF,EAgBEC,gCAhBF,EAiBEC,4BAjBF,EAkBEC,aAlBF,EAmBEC,qCAnBF,EAoBEC,kBApBF,EAqBEC,WArBF,EAsBEC,iBAtBF,EAuBEC,mBAvBF,EAwBEC,cAxBF,EAyBEC,mBAzBF,EA0BEC,cA1BF,EA2BEC,iBA3BF,EA4BEC,mBA5BF,EA6BEC,mCA7BF,EA8BEC,aA9BF;AAgCA,SAASC,KAAT,EAAgBC,WAAhB;AACA,OAAOC,WAAP;AAEAhC,UAAU,CAACiC,UAAX,CAAsB,CAACC,OAAD,EAAU;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAV,KAA+B;AACnDA,EAAAA,MAAM,GAAGxC,iBAAiB,CAACwC,MAAD,CAA1B;AACA,SAAOJ,WAAW,CAACK,MAAZ,CAAmB;AAAEF,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAnB,CAAP;AACD,CAHD;AAKAnC,UAAU,CAACgC,UAAX,CAAsB,CAACC,OAAD,EAAU;AAAEI,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAV,KAAiC;AACrDxC,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwCH,MAAxC;AACA,SAAON,WAAW,CAACU,MAAZ,CAAmB;AAAEJ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAnB,CAAP;AACD,CAHD;AAKArC,UAAU,CAAC+B,UAAX,CAAsB,CAACC,OAAD,EAAU;AAAEI,EAAAA;AAAF,CAAV,KAAyB;AAC7CvC,EAAAA,eAAe,CAACyC,KAAhB,CAAsBG,iBAAtB,CAAwCL,MAAxC;AACA,SAAON,WAAW,CAACY,MAAZ,CAAmB;AAAEN,IAAAA;AAAF,GAAnB,CAAP;AACD,CAHD;AAKAnC,uBAAuB,CAAC8B,UAAxB,CAAmC,CAACC,OAAD,EAAU;AAAEI,EAAAA;AAAF,CAAV,KAAyB;AAC1DvC,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwCH,MAAxC;AACA,SAAON,WAAW,CAACa,eAAZ,CAA4B;AAAEP,IAAAA;AAAF,GAA5B,CAAP;AACD,CAHD;AAKAlC,cAAc,CAAC6B,UAAf,CAA0B,CAACC,OAAD,EAAU;AAAEI,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAV,KAAiC;AACzDxC,EAAAA,eAAe,CAAC+C,uBAAhB;AACA,SAAOd,WAAW,CAAC5B,cAAZ,CAA2B;AAAEkC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAA3B,CAAP;AACD,CAHD;AAKAlC,aAAa,CAAC4B,UAAd,CAAyB,CAACC,OAAD,EAAU;AAAEI,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAV,KAAiC;AACxDxC,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwCH,MAAxC;AACA,SAAON,WAAW,CAACe,SAAZ,CAAsB;AAAET,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAtB,CAAP;AACD,CAHD;AAKAjC,YAAY,CAAC2B,UAAb,CAAwB,CAACC,OAAD,EAAU;AAAEI,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAV,KAAiC;AACvDxC,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwCH,MAAxC;AACA,SAAON,WAAW,CAACgB,QAAZ,CAAqB;AAAEV,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAArB,CAAP;AACD,CAHD;AAKA,OAAO,MAAMU,sBAAsB,GAAG,CAAC;AAAEb,EAAAA,MAAM,EAAEc;AAAV,CAAD,EAA0B;AAAEd,EAAAA;AAAF,CAA1B,KAAyC;AAC7ErC,EAAAA,eAAe,CAACoD,gBAAhB,CAAiCD,WAAjC;AACA,SAAOlB,WAAW,CAACoB,cAAZ,CAA2B;AAAEhB,IAAAA;AAAF,GAA3B,CAAP;AACD,CAHM;AAIP7B,eAAe,CAAC0B,UAAhB,CAA2BgB,sBAA3B;AAEA1B,cAAc,CAACU,UAAf,CAA0B,CAAC;AAAEG,EAAAA;AAAF,CAAD,EAAa;AAAEiB,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,KAAyC;AACjEvD,EAAAA,eAAe,CAACwD,aAAhB;;AAEA,MAAID,aAAJ,EAAmB;AACjB,WAAOtB,WAAW,CAACwB,kBAAZ,CAA+B;AACpCpB,MAAAA,MADoC;AAEpCqB,MAAAA,WAAW,EAAE,CAACH,aAAD,CAFuB;AAGpCnB,MAAAA,IAAI,EAAE;AAAEuB,QAAAA,oBAAoB,EAAE;AAAxB;AAH8B,KAA/B,CAAP;AAKD;;AAED,SAAO1B,WAAW,CAACoB,cAAZ,CAA2B;AAChChB,IAAAA,MADgC;AAEhCD,IAAAA,IAAI,EAAE;AACJuB,MAAAA,oBAAoB,EAAE,KADlB;AAEJC,MAAAA,MAAM,EAAEN,IAAI,GAAGtB,WAAW,CAAC6B,IAAf,GAAsB7B,WAAW,CAAC8B;AAF1C;AAF0B,GAA3B,CAAP;AAOD,CAlBD;AAoBA,OAAO,MAAMC,mBAAmB,GAAG,CAAC5B,OAAD,EAAU;AAAEI,EAAAA;AAAF,CAAV,KAAyB;AAC1DvC,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwCH,MAAxC;AACA,SAAON,WAAW,CAACxB,eAAZ,CAA4B;AAAE8B,IAAAA;AAAF,GAA5B,CAAP;AACD,CAHM;AAIP9B,eAAe,CAACyB,UAAhB,CAA2B6B,mBAA3B;AAEA,OAAO,MAAMC,sBAAsB,GAAG,CAAC7B,OAAD,EAAU;AAAEI,EAAAA,MAAF;AAAU0B,EAAAA;AAAV,CAAV,KAAsC;AAC1EjE,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwCH,MAAxC;AACA,SAAON,WAAW,CAACvB,eAAZ,CAA4B;AAAE6B,IAAAA,MAAF;AAAU0B,IAAAA;AAAV,GAA5B,CAAP;AACD,CAHM;AAIPvD,eAAe,CAACwB,UAAhB,CAA2B8B,sBAA3B;AAEA,OAAO,MAAME,sBAAsB,GAAG,CACpC/B,OADoC,EAEpC;AAAEI,EAAAA,MAAF;AAAU0B,EAAAA,WAAV;AAAuBE,EAAAA;AAAvB,CAFoC,KAGjC;AACHnE,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwCH,MAAxC;AACA,SAAON,WAAW,CAACtB,eAAZ,CAA4B;AAAE4B,IAAAA,MAAF;AAAU0B,IAAAA,WAAV;AAAuBE,IAAAA;AAAvB,GAA5B,CAAP;AACD,CANM;AAOPxD,eAAe,CAACuB,UAAhB,CAA2BgC,sBAA3B;AAEA,OAAO,MAAME,sBAAsB,GAAG,CAACjC,OAAD,EAAU;AAAEI,EAAAA,MAAF;AAAU0B,EAAAA;AAAV,CAAV,KAAsC;AAC1EjE,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwCH,MAAxC;AACA,SAAON,WAAW,CAACrB,eAAZ,CAA4B;AAAE2B,IAAAA,MAAF;AAAU0B,IAAAA;AAAV,GAA5B,CAAP;AACD,CAHM;AAIPrD,eAAe,CAACsB,UAAhB,CAA2BkC,sBAA3B;AAEA,OAAO,MAAMC,yBAAyB,GAAG,CAAClC,OAAD,EAAU;AAAEI,EAAAA,MAAF;AAAU0B,EAAAA;AAAV,CAAV,KAAsC;AAC7EjE,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwCH,MAAxC;AACA,SAAON,WAAW,CAACpB,kBAAZ,CAA+B;AAAE0B,IAAAA,MAAF;AAAU0B,IAAAA;AAAV,GAA/B,CAAP;AACD,CAHM;AAIPpD,kBAAkB,CAACqB,UAAnB,CAA8BmC,yBAA9B;AAEAvD,gBAAgB,CAACoB,UAAjB,CAA4B,CAAC;AAAEG,EAAAA;AAAF,CAAD,EAAaiC,MAAb,KAAwB;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAAgBtC,WAAW,CAACuC,QAAZ,CAAqB;AACzCC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,GAAG,EAAEJ,MAAM,CAAC/B;AAAd,KAD+B;AAEzCgC,IAAAA,SAAS,EAAE;AAF8B,GAArB,CAAtB;;AAKA,MAAIA,SAAJ,EAAe;AACbvE,IAAAA,eAAe,CAACyC,KAAhB,CAAsBkC,kBAAtB,CAAyCL,MAAM,CAAC/B,MAAhD;AACD,GAFD,MAEO;AACLvC,IAAAA,eAAe,CAACoD,gBAAhB,CAAiCf,MAAjC;AACD;;AAEDJ,EAAAA,WAAW,CAACnB,gBAAZ,CAA6BwD,MAA7B;AACD,CAbD;AAeAvD,cAAc,CAACmB,UAAf,CAA0B,CAACC,OAAD,EAAUmC,MAAV,KAAqB;AAC7CtE,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwC4B,MAAM,CAAC/B,MAA/C;AACA,SAAON,WAAW,CAAClB,cAAZ,CAA2BuD,MAA3B,CAAP;AACD,CAHD;AAKAtD,gCAAgC,CAACkB,UAAjC,CAA4C,CAACC,OAAD,EAAUmC,MAAV,KAAqB;AAC/D,QAAM;AAAEjC,IAAAA;AAAF,MAAaF,OAAnB;AACApC,EAAAA,QAAQ,CAACqD,gBAAT,CAA0Bf,MAA1B;AACAF,EAAAA,OAAO,CAACyC,OAAR;AACA,SAAO3C,WAAW,CAACjB,gCAAZ,CAA6CsD,MAA7C,CAAP;AACD,CALD;AAOArD,4BAA4B,CAACiB,UAA7B,CAAwC,CAAC;AAAEG,EAAAA;AAAF,CAAD,EAAaiC,MAAb,KAAwB;AAC9DvE,EAAAA,QAAQ,CAACqD,gBAAT,CAA0Bf,MAA1B;AACAJ,EAAAA,WAAW,CAAC4C,wBAAZ,CAAqCP,MAArC;AACD,CAHD;AAKApD,aAAa,CAACgB,UAAd,CAAyB,CAACC,OAAD,EAAUmC,MAAV,KAAqB;AAC5CtE,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwC4B,MAAM,CAAC/B,MAA/C;AACAN,EAAAA,WAAW,CAACf,aAAZ,CAA0BoD,MAA1B;AACD,CAHD;AAKAnD,qCAAqC,CAACe,UAAtC,CAAiD,CAACC,OAAD,EAAUmC,MAAV,KAAqB;AACpEtE,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwC4B,MAAM,CAAC/B,MAA/C;AACA,SAAON,WAAW,CAACd,qCAAZ,CAAkDmD,MAAlD,CAAP;AACD,CAHD;AAKAlD,kBAAkB,CAACc,UAAnB,CAA8B,CAACC,OAAD,EAAUmC,MAAV,KAAqB;AACjDtE,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwC4B,MAAM,CAAC/B,MAA/C;AACA,SAAON,WAAW,CAACb,kBAAZ,CAA+BkD,MAA/B,CAAP;AACD,CAHD;AAKAjD,WAAW,CAACa,UAAZ,CAAuB,CAACC,OAAD,EAAUmC,MAAV,KAAqB;AAC1C,QAAMQ,gBAAgB,GAAG,CAAC/C,KAAK,CAACgD,QAAP,EAAiBhD,KAAK,CAACiD,OAAvB,CAAzB;;AAEA,MAAIF,gBAAgB,CAACG,QAAjB,CAA0BX,MAAM,CAACY,QAAjC,CAAJ,EAAgD;AAC9ClF,IAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwC4B,MAAM,CAAC/B,MAA/C;AACD,GAFD,MAEO;AACLxC,IAAAA,QAAQ,CAACqD,gBAAT,CAA0BjB,OAAO,CAACE,MAAlC;AACD;;AAEDF,EAAAA,OAAO,CAACyC,OAAR;AACA,SAAO3C,WAAW,CAACkD,OAAZ,CAAoBb,MAApB,CAAP;AACD,CAXD;AAaAhD,iBAAiB,CAACY,UAAlB,CAA6B,CAACC,OAAD,EAAUmC,MAAV,KAAqB;AAChD,QAAM;AAAE/B,IAAAA,MAAF;AAAU6C,IAAAA;AAAV,MAA4Bd,MAAlC;AACAtE,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwCH,MAAxC;AACA,SAAON,WAAW,CAACU,MAAZ,CAAmB;AACxBJ,IAAAA,MAAM,EAAE+B,MAAM,CAAC/B,MADS;AAExBC,IAAAA,MAAM,EAAE;AAAE4C,MAAAA;AAAF;AAFgB,GAAnB,CAAP;AAID,CAPD;AASA7D,mBAAmB,CAACW,UAApB,CAA+B,CAACC,OAAD,EAAUmC,MAAV,KAAqB;AAClD,QAAM;AACJf,IAAAA,aADI;AAEJ8B,IAAAA,uBAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA;AAJI,MAKFjB,MALJ;;AAMA,MAAIf,aAAJ,EAAmB;AACjBvD,IAAAA,eAAe,CAACwF,UAAhB,CAA2BC,2BAA3B,CAAuD;AACrDC,MAAAA,UAAU,EAAEnC;AADyC,KAAvD;AAGD;;AAED,MAAI8B,uBAAJ,EAA6B;AAC3B;AACA;AACA,QAAI9B,aAAJ,EAAmB;AACjB,YAAMoC,YAAY,GAAG1D,WAAW,CAACuC,QAAZ,CAAqB;AACxCC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAG,EAAEW;AAAP,SAD8B;AAExC3B,QAAAA,WAAW,EAAE;AAF2B,OAArB,CAArB;;AAKA,UACEiC,YAAY,IACTA,YAAY,CAACjC,WADhB,IAEG,CAACiC,YAAY,CAACjC,WAAb,CAAyBuB,QAAzB,CAAkC1B,aAAlC,CAHN,EAIE;AACA;AACAtB,QAAAA,WAAW,CAAC2D,iBAAZ,CAA8B;AAC5BrD,UAAAA,MAAM,EAAE8C,uBADoB;AAE5BK,UAAAA,UAAU,EAAEnC;AAFgB,SAA9B;AAID;AACF;;AAED,WAAO8B,uBAAP;AACD;;AAED,QAAM9C,MAAM,GAAGN,WAAW,CAAC4D,mBAAZ,CAAgCvB,MAAhC,CAAf;AACA,QAAMwB,SAAS,GAAG,IAAIlG,SAAJ,CAAcuC,OAAd,CAAlB;AACA2D,EAAAA,SAAS,CAACC,KAAV,CACEjG,MAAM,CAACkG,YADT,EAEE;AACEzD,IAAAA,MADF;AAEEmD,IAAAA,UAAU,EAAEnC,aAFd;AAGE+B,IAAAA,UAHF;AAIEf,IAAAA,SAAS,EAAE;AAJb,GAFF,EAQEgB,UARF;AAUA,SAAOhD,MAAP;AACD,CAnDD;AAqDAd,mBAAmB,CAACS,UAApB,CAA+B,CAACC,OAAD,EAAUmC,MAAV,KAAqB;AAClD,QAAM;AAAE/B,IAAAA;AAAF,MAAa+B,MAAnB;AACAtE,EAAAA,eAAe,CAACyC,KAAhB,CAAsBC,iBAAtB,CAAwCH,MAAxC;AACAN,EAAAA,WAAW,CAACgE,eAAZ,CAA4B3B,MAA5B;AACD,CAJD;AAMA5C,cAAc,CAACQ,UAAf,CAA0B,CAACC,OAAD,EAAUmC,MAAV,KAAqB;AAC7CtE,EAAAA,eAAe,CAAC+C,uBAAhB;AACA,SAAOd,WAAW,CAACiE,SAAZ,CAAsB5B,MAAtB,CAAP;AACD,CAHD;AAKA3C,iBAAiB,CAACO,UAAlB,CAA6B,CAAC;AAAEG,EAAAA;AAAF,CAAD,EAAaiC,MAAb,KAAwB;AACnDtE,EAAAA,eAAe,CAACoD,gBAAhB,CAAiCf,MAAjC;AACA,SAAOJ,WAAW,CAACkE,aAAZ,CAA0B7B,MAA1B,CAAP;AACD,CAHD;AAKA1C,mBAAmB,CAACM,UAApB,CAA+B,CAAC;AAAEG,EAAAA;AAAF,CAAD,EAAaiC,MAAb,KAAwB;AACrDtE,EAAAA,eAAe,CAACoD,gBAAhB,CAAiCf,MAAjC;AACA,SAAOJ,WAAW,CAACmE,eAAZ,CAA4B9B,MAA5B,CAAP;AACD,CAHD;AAKAzC,mCAAmC,CAACK,UAApC,CAA+C,CAAC;AAAEG,EAAAA;AAAF,CAAD,EAAaiC,MAAb,KAAwB;AACrEtE,EAAAA,eAAe,CAACoD,gBAAhB,CAAiCf,MAAjC;AACA,SAAOJ,WAAW,CAACoE,+BAAZ,CAA4C/B,MAA5C,CAAP;AACD,CAHD;AAKAxC,aAAa,CAACI,UAAd,CAAyB,CAAC;AAAEG,EAAAA;AAAF,CAAD,EAAaiC,MAAb,KAAwB;AAC/CtE,EAAAA,eAAe,CAACoD,gBAAhB,CAAiCf,MAAjC;AACA,SAAOJ,WAAW,CAACU,MAAZ,CAAmB2B,MAAnB,CAAP;AACD,CAHD","sourcesContent":["import Analytics from '../../analytics/server/Analytics';\nimport { checkInsertUserId } from '../../helpers/server/methodServerHelpers';\nimport EVENTS from '../../analytics/events';\n\nimport Security from '../../security/Security';\nimport SecurityService from '../../security';\nimport {\n  loanInsert,\n  loanUpdate,\n  loanDelete,\n  requestLoanVerification,\n  confirmClosing,\n  pushLoanValue,\n  popLoanValue,\n  adminLoanInsert,\n  addNewStructure,\n  removeStructure,\n  updateStructure,\n  selectStructure,\n  duplicateStructure,\n  assignLoanToUser,\n  switchBorrower,\n  sendNegativeFeedbackToAllLenders,\n  loanUpdatePromotionInvitedBy,\n  reuseProperty,\n  setMaxPropertyValueWithoutBorrowRatio,\n  addNewMaxStructure,\n  setLoanStep,\n  loanShareSolvency,\n  anonymousLoanInsert,\n  userLoanInsert,\n  loanInsertBorrowers,\n  adminLoanReset,\n  loanLinkPromotion,\n  loanUnlinkPromotion,\n  loanSetCreatedAtActivityDescription,\n  loanSetStatus,\n} from '../methodDefinitions';\nimport { STEPS, LOAN_STATUS } from '../loanConstants';\nimport LoanService from './LoanService';\n\nloanInsert.setHandler((context, { loan, userId }) => {\n  userId = checkInsertUserId(userId);\n  return LoanService.insert({ loan, userId });\n});\n\nloanUpdate.setHandler((context, { loanId, object }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.update({ loanId, object });\n});\n\nloanDelete.setHandler((context, { loanId }) => {\n  SecurityService.loans.isAllowedToDelete(loanId);\n  return LoanService.remove({ loanId });\n});\n\nrequestLoanVerification.setHandler((context, { loanId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.askVerification({ loanId });\n});\n\nconfirmClosing.setHandler((context, { loanId, object }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LoanService.confirmClosing({ loanId, object });\n});\n\npushLoanValue.setHandler((context, { loanId, object }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.pushValue({ loanId, object });\n});\n\npopLoanValue.setHandler((context, { loanId, object }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.popValue({ loanId, object });\n});\n\nexport const adminLoanInsertHandler = ({ userId: adminUserId }, { userId }) => {\n  SecurityService.checkUserIsAdmin(adminUserId);\n  return LoanService.fullLoanInsert({ userId });\n};\nadminLoanInsert.setHandler(adminLoanInsertHandler);\n\nuserLoanInsert.setHandler(({ userId }, { test, proPropertyId }) => {\n  SecurityService.checkLoggedIn();\n\n  if (proPropertyId) {\n    return LoanService.insertPropertyLoan({\n      userId,\n      propertyIds: [proPropertyId],\n      loan: { displayWelcomeScreen: false },\n    });\n  }\n\n  return LoanService.fullLoanInsert({\n    userId,\n    loan: {\n      displayWelcomeScreen: false,\n      status: test ? LOAN_STATUS.TEST : LOAN_STATUS.LEAD,\n    },\n  });\n});\n\nexport const addStructureHandler = (context, { loanId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.addNewStructure({ loanId });\n};\naddNewStructure.setHandler(addStructureHandler);\n\nexport const removeStructureHandler = (context, { loanId, structureId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.removeStructure({ loanId, structureId });\n};\nremoveStructure.setHandler(removeStructureHandler);\n\nexport const updateStructureHandler = (\n  context,\n  { loanId, structureId, structure },\n) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.updateStructure({ loanId, structureId, structure });\n};\nupdateStructure.setHandler(updateStructureHandler);\n\nexport const selectStructureHandler = (context, { loanId, structureId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.selectStructure({ loanId, structureId });\n};\nselectStructure.setHandler(selectStructureHandler);\n\nexport const duplicateStructureHandler = (context, { loanId, structureId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.duplicateStructure({ loanId, structureId });\n};\nduplicateStructure.setHandler(duplicateStructureHandler);\n\nassignLoanToUser.setHandler(({ userId }, params) => {\n  const { anonymous } = LoanService.fetchOne({\n    $filters: { _id: params.loanId },\n    anonymous: 1,\n  });\n\n  if (anonymous) {\n    SecurityService.loans.checkAnonymousLoan(params.loanId);\n  } else {\n    SecurityService.checkUserIsAdmin(userId);\n  }\n\n  LoanService.assignLoanToUser(params);\n});\n\nswitchBorrower.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.switchBorrower(params);\n});\n\nsendNegativeFeedbackToAllLenders.setHandler((context, params) => {\n  const { userId } = context;\n  Security.checkUserIsAdmin(userId);\n  context.unblock();\n  return LoanService.sendNegativeFeedbackToAllLenders(params);\n});\n\nloanUpdatePromotionInvitedBy.setHandler(({ userId }, params) => {\n  Security.checkUserIsAdmin(userId);\n  LoanService.updatePromotionInvitedBy(params);\n});\n\nreuseProperty.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  LoanService.reuseProperty(params);\n});\n\nsetMaxPropertyValueWithoutBorrowRatio.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.setMaxPropertyValueWithoutBorrowRatio(params);\n});\n\naddNewMaxStructure.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.addNewMaxStructure(params);\n});\n\nsetLoanStep.setHandler((context, params) => {\n  const userAllowedSteps = [STEPS.SOLVENCY, STEPS.REQUEST];\n\n  if (userAllowedSteps.includes(params.nextStep)) {\n    SecurityService.loans.isAllowedToUpdate(params.loanId);\n  } else {\n    Security.checkUserIsAdmin(context.userId);\n  }\n\n  context.unblock();\n  return LoanService.setStep(params);\n});\n\nloanShareSolvency.setHandler((context, params) => {\n  const { loanId, shareSolvency } = params;\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.update({\n    loanId: params.loanId,\n    object: { shareSolvency },\n  });\n});\n\nanonymousLoanInsert.setHandler((context, params) => {\n  const {\n    proPropertyId,\n    existingAnonymousLoanId,\n    referralId,\n    trackingId,\n  } = params;\n  if (proPropertyId) {\n    SecurityService.properties.isAllowedToAddAnonymousLoan({\n      propertyId: proPropertyId,\n    });\n  }\n\n  if (existingAnonymousLoanId) {\n    // If an anonymous loan exists on the client, don't add another one\n    // If a new property is requested on it, add it to the existing loan\n    if (proPropertyId) {\n      const existingLoan = LoanService.fetchOne({\n        $filters: { _id: existingAnonymousLoanId },\n        propertyIds: 1,\n      });\n\n      if (\n        existingLoan\n        && existingLoan.propertyIds\n        && !existingLoan.propertyIds.includes(proPropertyId)\n      ) {\n        // TODO: Quentin, track this\n        LoanService.addPropertyToLoan({\n          loanId: existingAnonymousLoanId,\n          propertyId: proPropertyId,\n        });\n      }\n    }\n\n    return existingAnonymousLoanId;\n  }\n\n  const loanId = LoanService.insertAnonymousLoan(params);\n  const analytics = new Analytics(context);\n  analytics.track(\n    EVENTS.LOAN_CREATED,\n    {\n      loanId,\n      propertyId: proPropertyId,\n      referralId,\n      anonymous: true,\n    },\n    trackingId,\n  );\n  return loanId;\n});\n\nloanInsertBorrowers.setHandler((context, params) => {\n  const { loanId } = params;\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  LoanService.insertBorrowers(params);\n});\n\nadminLoanReset.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LoanService.resetLoan(params);\n});\n\nloanLinkPromotion.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.linkPromotion(params);\n});\n\nloanUnlinkPromotion.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.unlinkPromotion(params);\n});\n\nloanSetCreatedAtActivityDescription.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.setCreatedAtActivityDescription(params);\n});\n\nloanSetStatus.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.update(params);\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/loans/server/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/loans/server/methods.js"}},"code":"module.export({\n  adminLoanInsertHandler: () => adminLoanInsertHandler,\n  addStructureHandler: () => addStructureHandler,\n  removeStructureHandler: () => removeStructureHandler,\n  updateStructureHandler: () => updateStructureHandler,\n  selectStructureHandler: () => selectStructureHandler,\n  duplicateStructureHandler: () => duplicateStructureHandler\n});\nlet Analytics;\nmodule.link(\"../../analytics/server/Analytics\", {\n  default(v) {\n    Analytics = v;\n  }\n\n}, 0);\nlet checkInsertUserId;\nmodule.link(\"../../helpers/server/methodServerHelpers\", {\n  checkInsertUserId(v) {\n    checkInsertUserId = v;\n  }\n\n}, 1);\nlet EVENTS;\nmodule.link(\"../../analytics/events\", {\n  default(v) {\n    EVENTS = v;\n  }\n\n}, 2);\nlet Security;\nmodule.link(\"../../security/Security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 3);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 4);\nlet loanInsert, loanUpdate, loanDelete, requestLoanVerification, confirmClosing, pushLoanValue, popLoanValue, adminLoanInsert, addNewStructure, removeStructure, updateStructure, selectStructure, duplicateStructure, assignLoanToUser, switchBorrower, sendNegativeFeedbackToAllLenders, loanUpdatePromotionInvitedBy, reuseProperty, setMaxPropertyValueWithoutBorrowRatio, addNewMaxStructure, setLoanStep, loanShareSolvency, anonymousLoanInsert, userLoanInsert, loanInsertBorrowers, adminLoanReset, loanLinkPromotion, loanUnlinkPromotion, loanSetCreatedAtActivityDescription, loanSetStatus;\nmodule.link(\"../methodDefinitions\", {\n  loanInsert(v) {\n    loanInsert = v;\n  },\n\n  loanUpdate(v) {\n    loanUpdate = v;\n  },\n\n  loanDelete(v) {\n    loanDelete = v;\n  },\n\n  requestLoanVerification(v) {\n    requestLoanVerification = v;\n  },\n\n  confirmClosing(v) {\n    confirmClosing = v;\n  },\n\n  pushLoanValue(v) {\n    pushLoanValue = v;\n  },\n\n  popLoanValue(v) {\n    popLoanValue = v;\n  },\n\n  adminLoanInsert(v) {\n    adminLoanInsert = v;\n  },\n\n  addNewStructure(v) {\n    addNewStructure = v;\n  },\n\n  removeStructure(v) {\n    removeStructure = v;\n  },\n\n  updateStructure(v) {\n    updateStructure = v;\n  },\n\n  selectStructure(v) {\n    selectStructure = v;\n  },\n\n  duplicateStructure(v) {\n    duplicateStructure = v;\n  },\n\n  assignLoanToUser(v) {\n    assignLoanToUser = v;\n  },\n\n  switchBorrower(v) {\n    switchBorrower = v;\n  },\n\n  sendNegativeFeedbackToAllLenders(v) {\n    sendNegativeFeedbackToAllLenders = v;\n  },\n\n  loanUpdatePromotionInvitedBy(v) {\n    loanUpdatePromotionInvitedBy = v;\n  },\n\n  reuseProperty(v) {\n    reuseProperty = v;\n  },\n\n  setMaxPropertyValueWithoutBorrowRatio(v) {\n    setMaxPropertyValueWithoutBorrowRatio = v;\n  },\n\n  addNewMaxStructure(v) {\n    addNewMaxStructure = v;\n  },\n\n  setLoanStep(v) {\n    setLoanStep = v;\n  },\n\n  loanShareSolvency(v) {\n    loanShareSolvency = v;\n  },\n\n  anonymousLoanInsert(v) {\n    anonymousLoanInsert = v;\n  },\n\n  userLoanInsert(v) {\n    userLoanInsert = v;\n  },\n\n  loanInsertBorrowers(v) {\n    loanInsertBorrowers = v;\n  },\n\n  adminLoanReset(v) {\n    adminLoanReset = v;\n  },\n\n  loanLinkPromotion(v) {\n    loanLinkPromotion = v;\n  },\n\n  loanUnlinkPromotion(v) {\n    loanUnlinkPromotion = v;\n  },\n\n  loanSetCreatedAtActivityDescription(v) {\n    loanSetCreatedAtActivityDescription = v;\n  },\n\n  loanSetStatus(v) {\n    loanSetStatus = v;\n  }\n\n}, 5);\nlet STEPS, LOAN_STATUS;\nmodule.link(\"../loanConstants\", {\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  LOAN_STATUS(v) {\n    LOAN_STATUS = v;\n  }\n\n}, 6);\nlet LoanService;\nmodule.link(\"./LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 7);\nloanInsert.setHandler((context, {\n  loan,\n  userId\n}) => {\n  userId = checkInsertUserId(userId);\n  return LoanService.insert({\n    loan,\n    userId\n  });\n});\nloanUpdate.setHandler((context, {\n  loanId,\n  object\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.update({\n    loanId,\n    object\n  });\n});\nloanDelete.setHandler((context, {\n  loanId\n}) => {\n  SecurityService.loans.isAllowedToDelete(loanId);\n  return LoanService.remove({\n    loanId\n  });\n});\nrequestLoanVerification.setHandler((context, {\n  loanId\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.askVerification({\n    loanId\n  });\n});\nconfirmClosing.setHandler((context, {\n  loanId,\n  object\n}) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LoanService.confirmClosing({\n    loanId,\n    object\n  });\n});\npushLoanValue.setHandler((context, {\n  loanId,\n  object\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.pushValue({\n    loanId,\n    object\n  });\n});\npopLoanValue.setHandler((context, {\n  loanId,\n  object\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.popValue({\n    loanId,\n    object\n  });\n});\n\nconst adminLoanInsertHandler = ({\n  userId: adminUserId\n}, {\n  userId\n}) => {\n  SecurityService.checkUserIsAdmin(adminUserId);\n  return LoanService.fullLoanInsert({\n    userId\n  });\n};\n\nadminLoanInsert.setHandler(adminLoanInsertHandler);\nuserLoanInsert.setHandler(({\n  userId\n}, {\n  test,\n  proPropertyId\n}) => {\n  SecurityService.checkLoggedIn();\n\n  if (proPropertyId) {\n    return LoanService.insertPropertyLoan({\n      userId,\n      propertyIds: [proPropertyId],\n      loan: {\n        displayWelcomeScreen: false\n      }\n    });\n  }\n\n  return LoanService.fullLoanInsert({\n    userId,\n    loan: {\n      displayWelcomeScreen: false,\n      status: test ? LOAN_STATUS.TEST : LOAN_STATUS.LEAD\n    }\n  });\n});\n\nconst addStructureHandler = (context, {\n  loanId\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.addNewStructure({\n    loanId\n  });\n};\n\naddNewStructure.setHandler(addStructureHandler);\n\nconst removeStructureHandler = (context, {\n  loanId,\n  structureId\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.removeStructure({\n    loanId,\n    structureId\n  });\n};\n\nremoveStructure.setHandler(removeStructureHandler);\n\nconst updateStructureHandler = (context, {\n  loanId,\n  structureId,\n  structure\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.updateStructure({\n    loanId,\n    structureId,\n    structure\n  });\n};\n\nupdateStructure.setHandler(updateStructureHandler);\n\nconst selectStructureHandler = (context, {\n  loanId,\n  structureId\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.selectStructure({\n    loanId,\n    structureId\n  });\n};\n\nselectStructure.setHandler(selectStructureHandler);\n\nconst duplicateStructureHandler = (context, {\n  loanId,\n  structureId\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.duplicateStructure({\n    loanId,\n    structureId\n  });\n};\n\nduplicateStructure.setHandler(duplicateStructureHandler);\nassignLoanToUser.setHandler(({\n  userId\n}, params) => {\n  const {\n    anonymous\n  } = LoanService.fetchOne({\n    $filters: {\n      _id: params.loanId\n    },\n    anonymous: 1\n  });\n\n  if (anonymous) {\n    SecurityService.loans.checkAnonymousLoan(params.loanId);\n  } else {\n    SecurityService.checkUserIsAdmin(userId);\n  }\n\n  LoanService.assignLoanToUser(params);\n});\nswitchBorrower.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.switchBorrower(params);\n});\nsendNegativeFeedbackToAllLenders.setHandler((context, params) => {\n  const {\n    userId\n  } = context;\n  Security.checkUserIsAdmin(userId);\n  context.unblock();\n  return LoanService.sendNegativeFeedbackToAllLenders(params);\n});\nloanUpdatePromotionInvitedBy.setHandler(({\n  userId\n}, params) => {\n  Security.checkUserIsAdmin(userId);\n  LoanService.updatePromotionInvitedBy(params);\n});\nreuseProperty.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  LoanService.reuseProperty(params);\n});\nsetMaxPropertyValueWithoutBorrowRatio.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.setMaxPropertyValueWithoutBorrowRatio(params);\n});\naddNewMaxStructure.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.addNewMaxStructure(params);\n});\nsetLoanStep.setHandler((context, params) => {\n  const userAllowedSteps = [STEPS.SOLVENCY, STEPS.REQUEST];\n\n  if (userAllowedSteps.includes(params.nextStep)) {\n    SecurityService.loans.isAllowedToUpdate(params.loanId);\n  } else {\n    Security.checkUserIsAdmin(context.userId);\n  }\n\n  context.unblock();\n  return LoanService.setStep(params);\n});\nloanShareSolvency.setHandler((context, params) => {\n  const {\n    loanId,\n    shareSolvency\n  } = params;\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.update({\n    loanId: params.loanId,\n    object: {\n      shareSolvency\n    }\n  });\n});\nanonymousLoanInsert.setHandler((context, params) => {\n  const {\n    proPropertyId,\n    existingAnonymousLoanId,\n    referralId,\n    trackingId\n  } = params;\n\n  if (proPropertyId) {\n    SecurityService.properties.isAllowedToAddAnonymousLoan({\n      propertyId: proPropertyId\n    });\n  }\n\n  if (existingAnonymousLoanId) {\n    // If an anonymous loan exists on the client, don't add another one\n    // If a new property is requested on it, add it to the existing loan\n    if (proPropertyId) {\n      const existingLoan = LoanService.fetchOne({\n        $filters: {\n          _id: existingAnonymousLoanId\n        },\n        propertyIds: 1\n      });\n\n      if (existingLoan && existingLoan.propertyIds && !existingLoan.propertyIds.includes(proPropertyId)) {\n        // TODO: Quentin, track this\n        LoanService.addPropertyToLoan({\n          loanId: existingAnonymousLoanId,\n          propertyId: proPropertyId\n        });\n      }\n    }\n\n    return existingAnonymousLoanId;\n  }\n\n  const loanId = LoanService.insertAnonymousLoan(params);\n  const analytics = new Analytics(context);\n  analytics.track(EVENTS.LOAN_CREATED, {\n    loanId,\n    propertyId: proPropertyId,\n    referralId,\n    anonymous: true\n  }, trackingId);\n  return loanId;\n});\nloanInsertBorrowers.setHandler((context, params) => {\n  const {\n    loanId\n  } = params;\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  LoanService.insertBorrowers(params);\n});\nadminLoanReset.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LoanService.resetLoan(params);\n});\nloanLinkPromotion.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.linkPromotion(params);\n});\nloanUnlinkPromotion.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.unlinkPromotion(params);\n});\nloanSetCreatedAtActivityDescription.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.setCreatedAtActivityDescription(params);\n});\nloanSetStatus.setHandler(({\n  userId\n}, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.update(params);\n});","map":{"version":3,"sources":["imports/core/api/loans/server/methods.js"],"names":["Analytics","loanInsert","userId","checkInsertUserId","loanUpdate","object","SecurityService","loanDelete","loanId","requestLoanVerification","confirmClosing","pushLoanValue","popLoanValue","adminLoanInsertHandler","adminUserId","adminLoanInsert","userLoanInsert","proPropertyId","propertyIds","loan","displayWelcomeScreen","status","test","LOAN_STATUS","LEAD","addStructureHandler","addNewStructure","removeStructureHandler","structureId","removeStructure","updateStructureHandler","structure","updateStructure","selectStructureHandler","selectStructure","duplicateStructureHandler","duplicateStructure","assignLoanToUser","anonymous","$filters","_id","params","LoanService","switchBorrower","sendNegativeFeedbackToAllLenders","Security","context","loanUpdatePromotionInvitedBy","reuseProperty","setMaxPropertyValueWithoutBorrowRatio","addNewMaxStructure","setLoanStep","userAllowedSteps","STEPS","loanShareSolvency","shareSolvency","anonymousLoanInsert","trackingId","propertyId","existingLoan","existingAnonymousLoanId","analytics","EVENTS","loanInsertBorrowers","adminLoanReset","loanLinkPromotion","loanUnlinkPromotion","loanSetCreatedAtActivityDescription","loanSetStatus"],"mappings":"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","sourcesContent":["import Analytics from '../../analytics/server/Analytics';\nimport { checkInsertUserId } from '../../helpers/server/methodServerHelpers';\nimport EVENTS from '../../analytics/events';\n\nimport Security from '../../security/Security';\nimport SecurityService from '../../security';\nimport {\n  loanInsert,\n  loanUpdate,\n  loanDelete,\n  requestLoanVerification,\n  confirmClosing,\n  pushLoanValue,\n  popLoanValue,\n  adminLoanInsert,\n  addNewStructure,\n  removeStructure,\n  updateStructure,\n  selectStructure,\n  duplicateStructure,\n  assignLoanToUser,\n  switchBorrower,\n  sendNegativeFeedbackToAllLenders,\n  loanUpdatePromotionInvitedBy,\n  reuseProperty,\n  setMaxPropertyValueWithoutBorrowRatio,\n  addNewMaxStructure,\n  setLoanStep,\n  loanShareSolvency,\n  anonymousLoanInsert,\n  userLoanInsert,\n  loanInsertBorrowers,\n  adminLoanReset,\n  loanLinkPromotion,\n  loanUnlinkPromotion,\n  loanSetCreatedAtActivityDescription,\n  loanSetStatus,\n} from '../methodDefinitions';\nimport { STEPS, LOAN_STATUS } from '../loanConstants';\nimport LoanService from './LoanService';\n\nloanInsert.setHandler((context, { loan, userId }) => {\n  userId = checkInsertUserId(userId);\n  return LoanService.insert({ loan, userId });\n});\n\nloanUpdate.setHandler((context, { loanId, object }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.update({ loanId, object });\n});\n\nloanDelete.setHandler((context, { loanId }) => {\n  SecurityService.loans.isAllowedToDelete(loanId);\n  return LoanService.remove({ loanId });\n});\n\nrequestLoanVerification.setHandler((context, { loanId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.askVerification({ loanId });\n});\n\nconfirmClosing.setHandler((context, { loanId, object }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LoanService.confirmClosing({ loanId, object });\n});\n\npushLoanValue.setHandler((context, { loanId, object }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.pushValue({ loanId, object });\n});\n\npopLoanValue.setHandler((context, { loanId, object }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.popValue({ loanId, object });\n});\n\nexport const adminLoanInsertHandler = ({ userId: adminUserId }, { userId }) => {\n  SecurityService.checkUserIsAdmin(adminUserId);\n  return LoanService.fullLoanInsert({ userId });\n};\nadminLoanInsert.setHandler(adminLoanInsertHandler);\n\nuserLoanInsert.setHandler(({ userId }, { test, proPropertyId }) => {\n  SecurityService.checkLoggedIn();\n\n  if (proPropertyId) {\n    return LoanService.insertPropertyLoan({\n      userId,\n      propertyIds: [proPropertyId],\n      loan: { displayWelcomeScreen: false },\n    });\n  }\n\n  return LoanService.fullLoanInsert({\n    userId,\n    loan: {\n      displayWelcomeScreen: false,\n      status: test ? LOAN_STATUS.TEST : LOAN_STATUS.LEAD,\n    },\n  });\n});\n\nexport const addStructureHandler = (context, { loanId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.addNewStructure({ loanId });\n};\naddNewStructure.setHandler(addStructureHandler);\n\nexport const removeStructureHandler = (context, { loanId, structureId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.removeStructure({ loanId, structureId });\n};\nremoveStructure.setHandler(removeStructureHandler);\n\nexport const updateStructureHandler = (\n  context,\n  { loanId, structureId, structure },\n) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.updateStructure({ loanId, structureId, structure });\n};\nupdateStructure.setHandler(updateStructureHandler);\n\nexport const selectStructureHandler = (context, { loanId, structureId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.selectStructure({ loanId, structureId });\n};\nselectStructure.setHandler(selectStructureHandler);\n\nexport const duplicateStructureHandler = (context, { loanId, structureId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.duplicateStructure({ loanId, structureId });\n};\nduplicateStructure.setHandler(duplicateStructureHandler);\n\nassignLoanToUser.setHandler(({ userId }, params) => {\n  const { anonymous } = LoanService.fetchOne({\n    $filters: { _id: params.loanId },\n    anonymous: 1,\n  });\n\n  if (anonymous) {\n    SecurityService.loans.checkAnonymousLoan(params.loanId);\n  } else {\n    SecurityService.checkUserIsAdmin(userId);\n  }\n\n  LoanService.assignLoanToUser(params);\n});\n\nswitchBorrower.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.switchBorrower(params);\n});\n\nsendNegativeFeedbackToAllLenders.setHandler((context, params) => {\n  const { userId } = context;\n  Security.checkUserIsAdmin(userId);\n  context.unblock();\n  return LoanService.sendNegativeFeedbackToAllLenders(params);\n});\n\nloanUpdatePromotionInvitedBy.setHandler(({ userId }, params) => {\n  Security.checkUserIsAdmin(userId);\n  LoanService.updatePromotionInvitedBy(params);\n});\n\nreuseProperty.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  LoanService.reuseProperty(params);\n});\n\nsetMaxPropertyValueWithoutBorrowRatio.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.setMaxPropertyValueWithoutBorrowRatio(params);\n});\n\naddNewMaxStructure.setHandler((context, params) => {\n  SecurityService.loans.isAllowedToUpdate(params.loanId);\n  return LoanService.addNewMaxStructure(params);\n});\n\nsetLoanStep.setHandler((context, params) => {\n  const userAllowedSteps = [STEPS.SOLVENCY, STEPS.REQUEST];\n\n  if (userAllowedSteps.includes(params.nextStep)) {\n    SecurityService.loans.isAllowedToUpdate(params.loanId);\n  } else {\n    Security.checkUserIsAdmin(context.userId);\n  }\n\n  context.unblock();\n  return LoanService.setStep(params);\n});\n\nloanShareSolvency.setHandler((context, params) => {\n  const { loanId, shareSolvency } = params;\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  return LoanService.update({\n    loanId: params.loanId,\n    object: { shareSolvency },\n  });\n});\n\nanonymousLoanInsert.setHandler((context, params) => {\n  const {\n    proPropertyId,\n    existingAnonymousLoanId,\n    referralId,\n    trackingId,\n  } = params;\n  if (proPropertyId) {\n    SecurityService.properties.isAllowedToAddAnonymousLoan({\n      propertyId: proPropertyId,\n    });\n  }\n\n  if (existingAnonymousLoanId) {\n    // If an anonymous loan exists on the client, don't add another one\n    // If a new property is requested on it, add it to the existing loan\n    if (proPropertyId) {\n      const existingLoan = LoanService.fetchOne({\n        $filters: { _id: existingAnonymousLoanId },\n        propertyIds: 1,\n      });\n\n      if (\n        existingLoan\n        && existingLoan.propertyIds\n        && !existingLoan.propertyIds.includes(proPropertyId)\n      ) {\n        // TODO: Quentin, track this\n        LoanService.addPropertyToLoan({\n          loanId: existingAnonymousLoanId,\n          propertyId: proPropertyId,\n        });\n      }\n    }\n\n    return existingAnonymousLoanId;\n  }\n\n  const loanId = LoanService.insertAnonymousLoan(params);\n  const analytics = new Analytics(context);\n  analytics.track(\n    EVENTS.LOAN_CREATED,\n    {\n      loanId,\n      propertyId: proPropertyId,\n      referralId,\n      anonymous: true,\n    },\n    trackingId,\n  );\n  return loanId;\n});\n\nloanInsertBorrowers.setHandler((context, params) => {\n  const { loanId } = params;\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  LoanService.insertBorrowers(params);\n});\n\nadminLoanReset.setHandler((context, params) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return LoanService.resetLoan(params);\n});\n\nloanLinkPromotion.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.linkPromotion(params);\n});\n\nloanUnlinkPromotion.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.unlinkPromotion(params);\n});\n\nloanSetCreatedAtActivityDescription.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.setCreatedAtActivityDescription(params);\n});\n\nloanSetStatus.setHandler(({ userId }, params) => {\n  SecurityService.checkUserIsAdmin(userId);\n  return LoanService.update(params);\n});\n"]},"sourceType":"script","hash":"7f0b4204c418cc93ede16fbd5beaff467a5731cf"}
