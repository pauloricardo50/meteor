{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/router.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/lmieulet:meteor-coverage/server/router.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/router.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/router.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/lmieulet:meteor-coverage/server/router.js"}},"code":"let Handlers;\nmodule.link(\"./handlers\", {\n  default(v) {\n    Handlers = v;\n  }\n\n}, 0);\nlet Conf;\nmodule.link(\"./context/conf\", {\n  default(v) {\n    Conf = v;\n  }\n\n}, 1);\nlet bodyParser;\nmodule.link(\"body-parser\", {\n  default(v) {\n    bodyParser = v;\n  }\n\n}, 2);\nlet url;\nmodule.link(\"url\", {\n  default(v) {\n    url = v;\n  }\n\n}, 3);\n\nconst handleRequest = method => (path, cb) => {\n  WebApp.rawConnectHandlers.use(path, (req, res, next) => {\n    if (req.method !== method) {\n      next();\n      return;\n    }\n\n    const queryString = url.parse(req.url).query || '';\n    const queryParams = {\n      query: {}\n    };\n    queryString.split('&').forEach(pair => {\n      queryParams.query[pair.split('=')[0]] = pair.split('=')[1];\n    });\n    Promise.resolve().then(() => new Promise(resolve => {\n      bodyParser.urlencoded({\n        extended: false\n      })(req, res, resolve);\n    })).then(() => new Promise(resolve => {\n      bodyParser.json({\n        limit: '30mb'\n      }).call(null, req, res, resolve);\n    })).then(() => cb(queryParams, req, res, next)).catch(e => {\n      console.log('Exception undandled:');\n      console.log(e.stack);\n      next();\n    });\n  });\n};\n\nmodule.exportDefault(class {\n  constructor() {\n    if (Conf.IS_COVERAGE_ACTIVE) {\n      this.bindRoutes();\n    }\n  }\n\n  bindRoutes() {\n    // Show static assets\n    handleRequest('GET')('/coverage/asset', (params, req, res, next) => {\n      params.filename = url.parse(req.url).path.match(/(\\/([^\\/]+))?/)[2];\n      Handlers.getAsset(params, req, res, next);\n    }); // export coverage to file\n\n    handleRequest('GET')('/coverage/export', (params, req, res, next) => {\n      params.type = url.parse(req.url).path.match(/(\\/([^\\/]+))?/)[2];\n      Handlers.exportFile(params, req, res, next);\n    });\n    handleRequest('GET')('/coverage/import', Handlers.importCoverage); // merge client coverage posted from browser\n\n    handleRequest('POST')('/coverage/client', Handlers.addClientCoverage);\n    handleRequest('GET')('/coverage', Handlers.showCoverage);\n  }\n\n});","map":{"version":3,"sources":["packages/lmieulet:meteor-coverage/server/router.js"],"names":["Handlers","module","link","default","v","Conf","bodyParser","url","handleRequest","method","path","cb","WebApp","rawConnectHandlers","use","req","res","next","queryString","parse","query","queryParams","split","forEach","pair","Promise","resolve","then","urlencoded","extended","json","limit","call","catch","e","console","log","stack","exportDefault","constructor","IS_COVERAGE_ACTIVE","bindRoutes","params","filename","match","getAsset","type","exportFile","importCoverage","addClientCoverage","showCoverage"],"mappings":"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","sourcesContent":["import Handlers from './handlers';\nimport Conf from './context/conf';\nimport bodyParser from 'body-parser';\nimport url from 'url';\n\nconst handleRequest = (method) => (path, cb) => {\n  WebApp.rawConnectHandlers.use(path, (req, res, next) => {\n    if (req.method !== method) {\n      next();\n      return;\n    }\n\n    const queryString = url.parse(req.url).query || '';\n    const queryParams = { query: {} };\n    queryString.split('&').forEach((pair) => {\n      queryParams.query[pair.split('=')[0]] = pair.split('=')[1];\n    });\n\n    Promise.resolve()\n      .then(() => new Promise(resolve => {\n        bodyParser.urlencoded({ extended: false })(req, res, resolve);\n      }))\n      .then(() => new Promise(resolve => {\n        bodyParser.json({ limit: '30mb' }).call(null, req, res, resolve);\n      }))\n      .then(() => cb(queryParams, req, res, next))\n      .catch((e) => {\n        console.log('Exception undandled:');\n        console.log(e.stack);\n\n        next();\n      });\n  });\n};\n\nexport default class {\n  constructor() {\n    if (Conf.IS_COVERAGE_ACTIVE) {\n      this.bindRoutes();\n    }\n  }\n\n  bindRoutes() {\n    // Show static assets\n    handleRequest('GET')('/coverage/asset', (params, req, res, next) => {\n      params.filename = url.parse(req.url).path.match(/(\\/([^\\/]+))?/)[2];\n      Handlers.getAsset(params, req, res, next);\n    });\n\n    // export coverage to file\n    handleRequest('GET')('/coverage/export', (params, req, res, next) => {\n      params.type = url.parse(req.url).path.match(/(\\/([^\\/]+))?/)[2];\n      Handlers.exportFile(params, req, res, next);\n    });\n\n    handleRequest('GET')('/coverage/import', Handlers.importCoverage);\n\n    // merge client coverage posted from browser\n    handleRequest('POST')('/coverage/client', Handlers.addClientCoverage);\n\n    handleRequest('GET')('/coverage', Handlers.showCoverage);\n  }\n}\n"]},"sourceType":"script","hash":"59f882f66ac6bc93ea2f94224cb4c23a9ed51307"}
