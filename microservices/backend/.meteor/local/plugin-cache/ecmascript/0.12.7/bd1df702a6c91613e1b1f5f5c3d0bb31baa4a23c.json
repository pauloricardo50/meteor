{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/tasks/server/taskListeners.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/tasks/server/taskListeners.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/tasks/server/taskListeners.js","inputSourceMap":{"version":3,"sources":["imports/core/api/tasks/server/taskListeners.js"],"names":["UserService","ServerEventService","requestLoanVerification","adminCreateUser","anonymousCreateUser","LOANS_COLLECTION","USERS_COLLECTION","TaskService","addAfterMethodListener","params","loanId","insert","object","title","docId","collection","result","userId","user","fetchOne","$filters","_id","assignedEmployeeId"],"mappings":"AAAA,OAAOA,WAAP;AACA,OAAOC,kBAAP;AACA,SACEC,uBADF,EAEEC,eAFF,EAGEC,mBAHF;AAKA,SAASC,gBAAT,EAA2BC,gBAA3B;AACA,OAAOC,WAAP;AAEAN,kBAAkB,CAACO,sBAAnB,CACEN,uBADF,EAEE,CAAC;AAAEO,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF;AAAV,CAAD,KAA4B;AAC1BH,EAAAA,WAAW,CAACI,MAAZ,CAAmB;AACjBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,kCADD;AAENC,MAAAA,KAAK,EAAEJ,MAFD;AAGNK,MAAAA,UAAU,EAAEV;AAHN;AADS,GAAnB;AAOD,CAVH;AAaAJ,kBAAkB,CAACO,sBAAnB,CACE,CAACL,eAAD,EAAkBC,mBAAlB,CADF,EAEE,CAAC;AAAEY,EAAAA,MAAM,EAAEC;AAAV,CAAD,KAAwB;AACtB,MAAIA,MAAJ,EAAY;AACV,UAAMC,IAAI,GAAGlB,WAAW,CAACmB,QAAZ,CAAqB;AAChCC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAEJ;AAAP,OADsB;AAEhCK,MAAAA,kBAAkB,EAAE;AAFY,KAArB,CAAb;;AAKA,QAAIJ,IAAI,IAAI,CAACA,IAAI,CAACI,kBAAlB,EAAsC;AACpCf,MAAAA,WAAW,CAACI,MAAZ,CAAmB;AACjBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,wBADD;AAENC,UAAAA,KAAK,EAAEG,MAFD;AAGNF,UAAAA,UAAU,EAAET;AAHN;AADS,OAAnB;AAOD,KARD,MAQO;AACLC,MAAAA,WAAW,CAACI,MAAZ,CAAmB;AACjBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,qCADD;AAENC,UAAAA,KAAK,EAAEG,MAFD;AAGNF,UAAAA,UAAU,EAAET;AAHN;AADS,OAAnB;AAOD;AACF;AACF,CA3BH","sourcesContent":["import UserService from '../../users/server/UserService';\nimport ServerEventService from '../../events/server/ServerEventService';\nimport {\n  requestLoanVerification,\n  adminCreateUser,\n  anonymousCreateUser,\n} from '../../methods';\nimport { LOANS_COLLECTION, USERS_COLLECTION } from '../../constants';\nimport TaskService from './TaskService';\n\nServerEventService.addAfterMethodListener(\n  requestLoanVerification,\n  ({ params: { loanId } }) => {\n    TaskService.insert({\n      object: {\n        title: 'Vérification du dossier demandée',\n        docId: loanId,\n        collection: LOANS_COLLECTION,\n      },\n    });\n  },\n);\n\nServerEventService.addAfterMethodListener(\n  [adminCreateUser, anonymousCreateUser],\n  ({ result: userId }) => {\n    if (userId) {\n      const user = UserService.fetchOne({\n        $filters: { _id: userId },\n        assignedEmployeeId: 1,\n      });\n\n      if (user && !user.assignedEmployeeId) {\n        TaskService.insert({\n          object: {\n            title: 'Assigner un conseiller',\n            docId: userId,\n            collection: USERS_COLLECTION,\n          },\n        });\n      } else {\n        TaskService.insert({\n          object: {\n            title: 'Nouvel utilisateur: prendre contact',\n            docId: userId,\n            collection: USERS_COLLECTION,\n          },\n        });\n      }\n    }\n  },\n);\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/tasks/server/taskListeners.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/tasks/server/taskListeners.js"}},"code":"let UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 0);\nlet ServerEventService;\nmodule.link(\"../../events/server/ServerEventService\", {\n  default(v) {\n    ServerEventService = v;\n  }\n\n}, 1);\nlet requestLoanVerification, adminCreateUser, anonymousCreateUser;\nmodule.link(\"../../methods\", {\n  requestLoanVerification(v) {\n    requestLoanVerification = v;\n  },\n\n  adminCreateUser(v) {\n    adminCreateUser = v;\n  },\n\n  anonymousCreateUser(v) {\n    anonymousCreateUser = v;\n  }\n\n}, 2);\nlet LOANS_COLLECTION, USERS_COLLECTION;\nmodule.link(\"../../constants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  },\n\n  USERS_COLLECTION(v) {\n    USERS_COLLECTION = v;\n  }\n\n}, 3);\nlet TaskService;\nmodule.link(\"./TaskService\", {\n  default(v) {\n    TaskService = v;\n  }\n\n}, 4);\nServerEventService.addAfterMethodListener(requestLoanVerification, ({\n  params: {\n    loanId\n  }\n}) => {\n  TaskService.insert({\n    object: {\n      title: 'Vérification du dossier demandée',\n      docId: loanId,\n      collection: LOANS_COLLECTION\n    }\n  });\n});\nServerEventService.addAfterMethodListener([adminCreateUser, anonymousCreateUser], ({\n  result: userId\n}) => {\n  if (userId) {\n    const user = UserService.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      assignedEmployeeId: 1\n    });\n\n    if (user && !user.assignedEmployeeId) {\n      TaskService.insert({\n        object: {\n          title: 'Assigner un conseiller',\n          docId: userId,\n          collection: USERS_COLLECTION\n        }\n      });\n    } else {\n      TaskService.insert({\n        object: {\n          title: 'Nouvel utilisateur: prendre contact',\n          docId: userId,\n          collection: USERS_COLLECTION\n        }\n      });\n    }\n  }\n});","map":{"version":3,"sources":["imports/core/api/tasks/server/taskListeners.js"],"names":["ServerEventService","params","loanId","TaskService","object","title","docId","collection","LOANS_COLLECTION","result","userId","user","$filters","_id","assignedEmployeeId","USERS_COLLECTION"],"mappings":"AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,uBAAA,EAAA,eAAA,EAAA,mBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,uBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,uBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,mBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA,EAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iBAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAUAA,kBAAkB,CAAlBA,sBAAAA,CAAAA,uBAAAA,EAEE,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF;AAAV,CAAD,KAA4B;AAC1BC,EAAAA,WAAW,CAAXA,MAAAA,CAAmB;AACjBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EADC,kCAAA;AAENC,MAAAA,KAAK,EAFC,MAAA;AAGNC,MAAAA,UAAU,EAAEC;AAHN;AADS,GAAnBL;AAHJH,CAAAA;AAaAA,kBAAkB,CAAlBA,sBAAAA,CACE,CAAA,eAAA,EADFA,mBACE,CADFA,EAEE,CAAC;AAAES,EAAAA,MAAM,EAAEC;AAAV,CAAD,KAAwB;AACtB,MAAA,MAAA,EAAY;AACV,UAAMC,IAAI,GAAG,WAAW,CAAX,QAAA,CAAqB;AAChCC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAEH;AAAP,OADsB;AAEhCI,MAAAA,kBAAkB,EAAE;AAFY,KAArB,CAAb;;AAKA,QAAIH,IAAI,IAAI,CAACA,IAAI,CAAjB,kBAAA,EAAsC;AACpCR,MAAAA,WAAW,CAAXA,MAAAA,CAAmB;AACjBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EADC,wBAAA;AAENC,UAAAA,KAAK,EAFC,MAAA;AAGNC,UAAAA,UAAU,EAAEQ;AAHN;AADS,OAAnBZ;AADF,KAAA,MAQO;AACLA,MAAAA,WAAW,CAAXA,MAAAA,CAAmB;AACjBC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EADC,qCAAA;AAENC,UAAAA,KAAK,EAFC,MAAA;AAGNC,UAAAA,UAAU,EAAEQ;AAHN;AADS,OAAnBZ;AAOD;AACF;AA1BLH,CAAAA","sourcesContent":["import UserService from '../../users/server/UserService';\nimport ServerEventService from '../../events/server/ServerEventService';\nimport {\n  requestLoanVerification,\n  adminCreateUser,\n  anonymousCreateUser,\n} from '../../methods';\nimport { LOANS_COLLECTION, USERS_COLLECTION } from '../../constants';\nimport TaskService from './TaskService';\n\nServerEventService.addAfterMethodListener(\n  requestLoanVerification,\n  ({ params: { loanId } }) => {\n    TaskService.insert({\n      object: {\n        title: 'Vérification du dossier demandée',\n        docId: loanId,\n        collection: LOANS_COLLECTION,\n      },\n    });\n  },\n);\n\nServerEventService.addAfterMethodListener(\n  [adminCreateUser, anonymousCreateUser],\n  ({ result: userId }) => {\n    if (userId) {\n      const user = UserService.fetchOne({\n        $filters: { _id: userId },\n        assignedEmployeeId: 1,\n      });\n\n      if (user && !user.assignedEmployeeId) {\n        TaskService.insert({\n          object: {\n            title: 'Assigner un conseiller',\n            docId: userId,\n            collection: USERS_COLLECTION,\n          },\n        });\n      } else {\n        TaskService.insert({\n          object: {\n            title: 'Nouvel utilisateur: prendre contact',\n            docId: userId,\n            collection: USERS_COLLECTION,\n          },\n        });\n      }\n    }\n  },\n);\n"]},"sourceType":"script","hash":"bd1df702a6c91613e1b1f5f5c3d0bb31baa4a23c"}
