{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/uploadFile.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/uploadFile.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/uploadFile.js","inputSourceMap":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/uploadFile.js"],"names":["Meteor","SimpleSchema","PROPERTY_DOCUMENTS","FileService","Security","PropertyService","PROPERTIES_COLLECTION","withMeteorUserId","checkQuery","impersonateSchema","getImpersonateUserId","HTTP_STATUS_CODES","bodySchema","propertyId","String","category","type","allowedValues","Object","values","custom","field","includes","value","undefined","uploadFileAPI","req","files","file","user","_id","userId","query","body","impersonateUser","schema","cleanBody","clean","validate","error","Error","exists","propertyByExternalId","fetchOne","$filters","externalId","NOT_FOUND","impersonateUserId","properties","isAllowedToManageDocuments","FORBIDDEN","docId","id","collection"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport SimpleSchema from 'simpl-schema';\n\nimport { PROPERTY_DOCUMENTS } from '../../../files/fileConstants';\nimport FileService from '../../../files/server/FileService';\nimport Security from '../../../security';\nimport PropertyService from '../../../properties/server/PropertyService';\nimport { PROPERTIES_COLLECTION } from '../../../properties/propertyConstants';\nimport { withMeteorUserId } from '../helpers';\nimport {\n  checkQuery,\n  impersonateSchema,\n  getImpersonateUserId,\n} from './helpers';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\n\nconst bodySchema = new SimpleSchema({\n  propertyId: String,\n  category: {\n    type: String,\n    allowedValues: [...Object.values(PROPERTY_DOCUMENTS)],\n    custom() {\n      if (this.field('propertyId')) {\n        return Object.values(PROPERTY_DOCUMENTS).includes(this.value)\n          ? undefined\n          : 'invalidCategory';\n      }\n    },\n  },\n});\n\nconst uploadFileAPI = (req) => {\n  const {\n    files: { file } = {},\n    user: { _id: userId },\n    query,\n    body,\n  } = req;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const cleanBody = bodySchema.clean(body);\n  try {\n    bodySchema.validate(cleanBody);\n  } catch (error) {\n    throw new Meteor.Error(error);\n  }\n\n  const { category } = cleanBody;\n  let { propertyId } = cleanBody;\n\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId: propertyId },\n    });\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.NOT_FOUND,\n        `No property found for id \"${propertyId}\"`,\n      );\n    }\n  }\n\n  if (!file) {\n    throw new Meteor.Error('No file uploaded');\n  }\n  return withMeteorUserId({ userId, impersonateUser }, () => {\n    let impersonateUserId;\n    if (impersonateUser) {\n      impersonateUserId = getImpersonateUserId({ userId, impersonateUser });\n    }\n\n    try {\n      Security.properties.isAllowedToManageDocuments({\n        userId: impersonateUserId || userId,\n        propertyId,\n      });\n    } catch (error) {\n      throw new Meteor.Error(HTTP_STATUS_CODES.FORBIDDEN, error);\n    }\n\n    return FileService.uploadFileAPI({\n      file,\n      docId: propertyId,\n      id: category,\n      collection: PROPERTIES_COLLECTION,\n    });\n  });\n};\n\nexport default uploadFileAPI;\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/uploadFile.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/uploadFile.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet PROPERTY_DOCUMENTS;\nmodule.link(\"../../../files/fileConstants\", {\n  PROPERTY_DOCUMENTS(v) {\n    PROPERTY_DOCUMENTS = v;\n  }\n\n}, 2);\nlet FileService;\nmodule.link(\"../../../files/server/FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 3);\nlet Security;\nmodule.link(\"../../../security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 4);\nlet PropertyService;\nmodule.link(\"../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 5);\nlet PROPERTIES_COLLECTION;\nmodule.link(\"../../../properties/propertyConstants\", {\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  }\n\n}, 6);\nlet withMeteorUserId;\nmodule.link(\"../helpers\", {\n  withMeteorUserId(v) {\n    withMeteorUserId = v;\n  }\n\n}, 7);\nlet checkQuery, impersonateSchema, getImpersonateUserId;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  impersonateSchema(v) {\n    impersonateSchema = v;\n  },\n\n  getImpersonateUserId(v) {\n    getImpersonateUserId = v;\n  }\n\n}, 8);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 9);\nconst bodySchema = new SimpleSchema({\n  propertyId: String,\n  category: {\n    type: String,\n    allowedValues: [...Object.values(PROPERTY_DOCUMENTS)],\n\n    custom() {\n      if (this.field('propertyId')) {\n        return Object.values(PROPERTY_DOCUMENTS).includes(this.value) ? undefined : 'invalidCategory';\n      }\n    }\n\n  }\n});\n\nconst uploadFileAPI = req => {\n  const {\n    files: {\n      file\n    } = {},\n    user: {\n      _id: userId\n    },\n    query,\n    body\n  } = req;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: impersonateSchema\n  });\n  const cleanBody = bodySchema.clean(body);\n\n  try {\n    bodySchema.validate(cleanBody);\n  } catch (error) {\n    throw new Meteor.Error(error);\n  }\n\n  const {\n    category\n  } = cleanBody;\n  let {\n    propertyId\n  } = cleanBody;\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: {\n        externalId: propertyId\n      }\n    });\n\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(HTTP_STATUS_CODES.NOT_FOUND, `No property found for id \"${propertyId}\"`);\n    }\n  }\n\n  if (!file) {\n    throw new Meteor.Error('No file uploaded');\n  }\n\n  return withMeteorUserId({\n    userId,\n    impersonateUser\n  }, () => {\n    let impersonateUserId;\n\n    if (impersonateUser) {\n      impersonateUserId = getImpersonateUserId({\n        userId,\n        impersonateUser\n      });\n    }\n\n    try {\n      Security.properties.isAllowedToManageDocuments({\n        userId: impersonateUserId || userId,\n        propertyId\n      });\n    } catch (error) {\n      throw new Meteor.Error(HTTP_STATUS_CODES.FORBIDDEN, error);\n    }\n\n    return FileService.uploadFileAPI({\n      file,\n      docId: propertyId,\n      id: category,\n      collection: PROPERTIES_COLLECTION\n    });\n  });\n};\n\nmodule.exportDefault(uploadFileAPI);","map":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/uploadFile.js"],"names":["bodySchema","propertyId","category","type","allowedValues","Object","custom","uploadFileAPI","req","files","file","user","_id","userId","body","impersonateUser","checkQuery","schema","impersonateSchema","cleanBody","Meteor","exists","PropertyService","propertyByExternalId","$filters","externalId","HTTP_STATUS_CODES","withMeteorUserId","impersonateUserId","getImpersonateUserId","Security","docId","id","collection","PROPERTIES_COLLECTION"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport SimpleSchema from 'simpl-schema';\n\nimport { PROPERTY_DOCUMENTS } from '../../../files/fileConstants';\nimport FileService from '../../../files/server/FileService';\nimport Security from '../../../security';\nimport PropertyService from '../../../properties/server/PropertyService';\nimport { PROPERTIES_COLLECTION } from '../../../properties/propertyConstants';\nimport { withMeteorUserId } from '../helpers';\nimport {\n  checkQuery,\n  impersonateSchema,\n  getImpersonateUserId,\n} from './helpers';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\n\nconst bodySchema = new SimpleSchema({\n  propertyId: String,\n  category: {\n    type: String,\n    allowedValues: [...Object.values(PROPERTY_DOCUMENTS)],\n    custom() {\n      if (this.field('propertyId')) {\n        return Object.values(PROPERTY_DOCUMENTS).includes(this.value)\n          ? undefined\n          : 'invalidCategory';\n      }\n    },\n  },\n});\n\nconst uploadFileAPI = (req) => {\n  const {\n    files: { file } = {},\n    user: { _id: userId },\n    query,\n    body,\n  } = req;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const cleanBody = bodySchema.clean(body);\n  try {\n    bodySchema.validate(cleanBody);\n  } catch (error) {\n    throw new Meteor.Error(error);\n  }\n\n  const { category } = cleanBody;\n  let { propertyId } = cleanBody;\n\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId: propertyId },\n    });\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.NOT_FOUND,\n        `No property found for id \"${propertyId}\"`,\n      );\n    }\n  }\n\n  if (!file) {\n    throw new Meteor.Error('No file uploaded');\n  }\n  return withMeteorUserId({ userId, impersonateUser }, () => {\n    let impersonateUserId;\n    if (impersonateUser) {\n      impersonateUserId = getImpersonateUserId({ userId, impersonateUser });\n    }\n\n    try {\n      Security.properties.isAllowedToManageDocuments({\n        userId: impersonateUserId || userId,\n        propertyId,\n      });\n    } catch (error) {\n      throw new Meteor.Error(HTTP_STATUS_CODES.FORBIDDEN, error);\n    }\n\n    return FileService.uploadFileAPI({\n      file,\n      docId: propertyId,\n      id: category,\n      collection: PROPERTIES_COLLECTION,\n    });\n  });\n};\n\nexport default uploadFileAPI;\n"]},"sourceType":"script","hash":"fcc76abe13aad37560f99bab934256cb12f41da2"}
