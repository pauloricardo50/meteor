{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/TranchePickerDialog.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/TranchePicker/TranchePickerDialog.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/TranchePickerDialog.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/TranchePicker/TranchePickerDialog.jsx"],"names":["React","TranchePicker","DialogSimple","Button","TranchePickerContainer","TranchePickerDialogProps","tranchesAreValid","tranches","sum","reduce","total","value","sumIsOne","allTypesAreDefined","every","type","TranchePickerDialog","title","handleSave","disabled","props","handleClose"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,OAAOC,sBAAP;AAEA,KAAKC,wBAAL,GAAgC,EAAhC;;AAEA,MAAMC,gBAAgB,GAAIC,QAAD,IAAc;AACrC,QAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgB,CAACC,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,KAAsBD,KAAK,GAAGC,KAA9C,EAAqD,CAArD,CAAZ;AACA,QAAMC,QAAQ,GAAGJ,GAAG,KAAK,CAAzB;AACA,QAAMK,kBAAkB,GAAGN,QAAQ,CAACO,KAAT,CAAe,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc,CAAC,CAACA,IAA/B,CAA3B;AAEA,SAAOH,QAAQ,IAAIC,kBAAnB;AACD,CAND;;AAQA,MAAMG,mBAAmB,GAAG,CAAC;AAC3BC,EAAAA,KAD2B;AAE3BV,EAAAA,QAF2B;AAG3BW,EAAAA,UAH2B;AAI3BC,EAAAA,QAJ2B;AAK3B,KAAGC;AALwB,CAM5B,EAAEf,wBANyB,KAO1B,CAAC,YAAD,CACE,MAAM,CAACY,KAAD,CADR,CAEE,QAAQ,CAACI,WAAW,IAAI,CACtB,CAAC,MAAD,CAAQ,IAAI,QAAZ,CAAqB,QAAQ,CAACA,WAAD,CAA7B;;MAEA,EAAE,MAAF,CAHsB,EAItB,CAAC,MAAD,CACE,IAAI,MADN,CAEE,QAAQ,CAAC,MAAM;AACbH,EAAAA,UAAU,CAACX,QAAD,CAAV;AACAc,EAAAA,WAAW;AACZ,CAHO,CAFV,CAME,SAAS,CAACF,QAAQ,IAAI,CAACb,gBAAgB,CAACC,QAAD,CAA9B,CANX;;MASA,EAAE,MAAF,CAbsB,CAAhB,CAFV,CAiBE,MAAM,kBAjBR,CAkBE,OAlBF,CAmBE,OAAO,CAAC,KAAD,CAnBT;IAqBE,CAAC,aAAD,CAAe,IAAIa,KAAJ,CAAf,CAA0B,SAAS,CAACb,QAAD,CAAnC;EACF,EAAE,YAAF,CA7BF;;AAgCA,eAAeH,sBAAsB,CAACY,mBAAD,CAArC","sourcesContent":["// @flow\nimport React from 'react';\nimport { TranchePicker } from './TranchePicker';\nimport DialogSimple from '../DialogSimple';\nimport Button from '../Button';\nimport TranchePickerContainer from './TranchePickerContainer';\n\ntype TranchePickerDialogProps = {};\n\nconst tranchesAreValid = (tranches) => {\n  const sum = tranches.reduce((total, { value }) => total + value, 0);\n  const sumIsOne = sum === 1;\n  const allTypesAreDefined = tranches.every(({ type }) => !!type);\n\n  return sumIsOne && allTypesAreDefined;\n};\n\nconst TranchePickerDialog = ({\n  title,\n  tranches,\n  handleSave,\n  disabled,\n  ...props\n}: TranchePickerDialogProps) => (\n  <DialogSimple\n    title={title}\n    actions={handleClose => [\n      <Button key=\"cancel\" onClick={handleClose}>\n        Annuler\n      </Button>,\n      <Button\n        key=\"save\"\n        onClick={() => {\n          handleSave(tranches);\n          handleClose();\n        }}\n        disabled={disabled || !tranchesAreValid(tranches)}\n      >\n        Enregistrer\n      </Button>,\n    ]}\n    label=\"Choisir tranches\"\n    primary\n    raised={false}\n  >\n    <TranchePicker {...props} tranches={tranches} />\n  </DialogSimple>\n);\n\nexport default TranchePickerContainer(TranchePickerDialog);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/TranchePickerDialog.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/TranchePicker/TranchePickerDialog.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar TranchePicker;\nmodule.link(\"./TranchePicker\", {\n  TranchePicker: function (v) {\n    TranchePicker = v;\n  }\n}, 1);\nvar DialogSimple;\nmodule.link(\"../DialogSimple\", {\n  \"default\": function (v) {\n    DialogSimple = v;\n  }\n}, 2);\nvar Button;\nmodule.link(\"../Button\", {\n  \"default\": function (v) {\n    Button = v;\n  }\n}, 3);\nvar TranchePickerContainer;\nmodule.link(\"./TranchePickerContainer\", {\n  \"default\": function (v) {\n    TranchePickerContainer = v;\n  }\n}, 4);\n\nvar tranchesAreValid = function (tranches) {\n  var sum = tranches.reduce(function (total, _ref) {\n    var value = _ref.value;\n    return total + value;\n  }, 0);\n  var sumIsOne = sum === 1;\n  var allTypesAreDefined = tranches.every(function (_ref2) {\n    var type = _ref2.type;\n    return !!type;\n  });\n  return sumIsOne && allTypesAreDefined;\n};\n\nvar TranchePickerDialog = function (_ref3) {\n  var title = _ref3.title,\n      tranches = _ref3.tranches,\n      handleSave = _ref3.handleSave,\n      disabled = _ref3.disabled,\n      props = (0, _objectWithoutProperties2.default)(_ref3, [\"title\", \"tranches\", \"handleSave\", \"disabled\"]);\n  return React.createElement(DialogSimple, {\n    title: title,\n    actions: function (handleClose) {\n      return [React.createElement(Button, {\n        key: \"cancel\",\n        onClick: handleClose\n      }, \"Annuler\"), React.createElement(Button, {\n        key: \"save\",\n        onClick: function () {\n          handleSave(tranches);\n          handleClose();\n        },\n        disabled: disabled || !tranchesAreValid(tranches)\n      }, \"Enregistrer\")];\n    },\n    label: \"Choisir tranches\",\n    primary: true,\n    raised: false\n  }, React.createElement(TranchePicker, (0, _extends2.default)({}, props, {\n    tranches: tranches\n  })));\n};\n\nmodule.exportDefault(TranchePickerContainer(TranchePickerDialog));","map":{"version":3,"sources":["imports/core/components/TranchePicker/TranchePickerDialog.jsx"],"names":["tranchesAreValid","tranches","sum","value","total","sumIsOne","allTypesAreDefined","type","TranchePickerDialog","props","handleClose","handleSave","disabled","TranchePickerContainer"],"mappings":";;;;;;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iBAAA,EAAA;AAAA,EAAA,aAAA,YAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iBAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,sBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,sBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AASA,IAAMA,gBAAgB,GAAIC,UAAAA,QAAD,EAAc;AACrC,MAAMC,GAAG,GAAGD,QAAQ,CAARA,MAAAA,CAAgB,UAAA,KAAA;AAAA,QAAUE,KAAV,QAAUA,KAAV;AAAA,WAAsBC,KAAK,GAA3CH,KAAgB;AAAA,GAAhBA,EAAZ,CAAYA,CAAZ;AACA,MAAMI,QAAQ,GAAGH,GAAG,KAApB,CAAA;AACA,MAAMI,kBAAkB,GAAG,QAAQ,CAAR,KAAA,CAAe;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WAAc,CAAC,CAAzD,IAA0C;AAAA,GAAf,CAA3B;AAEA,SAAOF,QAAQ,IAAf,kBAAA;AALF,CAAA;;AAQA,IAAMG,mBAAmB,GAAG;AAAA,MAAC,KAAD,SAAC,KAAD;AAAA,MAAC,QAAD,SAAC,QAAD;AAAA,MAAC,UAAD,SAAC,UAAD;AAAA,MAAC,QAAD,SAAC,QAAD;AAAA,MAKvBC,KALuB;AAAA,SAO1B,oBAAA,YAAA;AACE,IAAA,KAAA,EADF,KAAA;AAEE,IAAA,OAAA,EAASC,UAAAA,WAAW;AAAA,aAAI,CACtB,oBAAA,MAAA;AAAQ,QAAA,GAAA,EAAR,QAAA;AAAqB,QAAA,OAAA,EAArB;AAAA,mBADsB,EAItB,oBAAA,MAAA;AACE,QAAA,GAAA,EADF,MAAA;AAEE,QAAA,OAAA,EAAS,YAAM;AACbC,UAAAA,UAAU,CAAVA,QAAU,CAAVA;AACAD,UAAAA,WAAW;AAJf,SAAA;AAME,QAAA,QAAA,EAAUE,QAAQ,IAAI,CAACZ,gBAAgB,CANzC,QAMyC;AANzC,uBAJsB,CAAJ;AAAA,KAFtB;AAiBE,IAAA,KAAA,EAjBF,kBAAA;AAkBE,IAAA,OAlBF,MAAA;AAmBE,IAAA,MAAA,EAnBF;AAAA,KAqBE,oBAAA,aAAA,6BAAA,KAAA;AAA0B,IAAA,QAAA,EAA1B;AAAA,KArBF,CAP0B;AAAA,CAA5B;;AAjBA,MAAA,CAAA,aAAA,CAiDea,sBAAsB,CAArC,mBAAqC,CAjDrC","sourcesContent":["// @flow\nimport React from 'react';\nimport { TranchePicker } from './TranchePicker';\nimport DialogSimple from '../DialogSimple';\nimport Button from '../Button';\nimport TranchePickerContainer from './TranchePickerContainer';\n\ntype TranchePickerDialogProps = {};\n\nconst tranchesAreValid = (tranches) => {\n  const sum = tranches.reduce((total, { value }) => total + value, 0);\n  const sumIsOne = sum === 1;\n  const allTypesAreDefined = tranches.every(({ type }) => !!type);\n\n  return sumIsOne && allTypesAreDefined;\n};\n\nconst TranchePickerDialog = ({\n  title,\n  tranches,\n  handleSave,\n  disabled,\n  ...props\n}: TranchePickerDialogProps) => (\n  <DialogSimple\n    title={title}\n    actions={handleClose => [\n      <Button key=\"cancel\" onClick={handleClose}>\n        Annuler\n      </Button>,\n      <Button\n        key=\"save\"\n        onClick={() => {\n          handleSave(tranches);\n          handleClose();\n        }}\n        disabled={disabled || !tranchesAreValid(tranches)}\n      >\n        Enregistrer\n      </Button>,\n    ]}\n    label=\"Choisir tranches\"\n    primary\n    raised={false}\n  >\n    <TranchePicker {...props} tranches={tranches} />\n  </DialogSimple>\n);\n\nexport default TranchePickerContainer(TranchePickerDialog);\n"]},"sourceType":"script","hash":"16abf1c1093a613686f258a23259d061ebae34e7"}
