{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/13.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/migrations/server/test/13.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/13.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/migrations/server/test/13.test.js"],"names":["expect","resetDatabase","up","down","Loans","Borrowers","describe","timeout","beforeEach","it","rawCollection","insert","_id","name","find","fetch","forEach","documents","to","equal","undefined","deep","stuff","yo"],"mappings":"AAAA;;AACA;AACA,SAASA,MAAT,QAAuB,MAAvB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,EAAT,EAAaC,IAAb;AACA,SAASC,KAAT,EAAgBC,SAAhB;AAEAC,QAAQ,CAAC,cAAD,EAAiB,YAAY;AACnC,OAAKC,OAAL,CAAa,KAAb;AAEAC,EAAAA,UAAU,CAAC,MAAM;AACfP,IAAAA,aAAa;AACd,GAFS,CAAV;AAIAK,EAAAA,QAAQ,CAAC,IAAD,EAAO,MAAM;AACnBG,IAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAY;AAC/D,YAAML,KAAK,CAACM,aAAN,GAAsBC,MAAtB,CAA6B;AACjCC,QAAAA,GAAG,EAAE,OAD4B;AAEjCC,QAAAA,IAAI,EAAE;AAF2B,OAA7B,CAAN;AAKA,YAAMT,KAAK,CAACM,aAAN,GAAsBC,MAAtB,CAA6B;AACjCC,QAAAA,GAAG,EAAE,OAD4B;AAEjCC,QAAAA,IAAI,EAAE;AAF2B,OAA7B,CAAN;AAKAT,MAAAA,KAAK,CAACU,IAAN,CAAW,EAAX,EACGC,KADH,GAEGC,OAFH,CAEW,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAmB;AAC1BjB,QAAAA,MAAM,CAACiB,SAAD,CAAN,CAAkBC,EAAlB,CAAqBC,KAArB,CAA2BC,SAA3B;AACD,OAJH;AAMA,YAAMlB,EAAE,EAAR;AAEAE,MAAAA,KAAK,CAACU,IAAN,CAAW,EAAX,EACGC,KADH,GAEGC,OAFH,CAEW,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAmB;AAC1BjB,QAAAA,MAAM,CAACiB,SAAD,CAAN,CAAkBC,EAAlB,CAAqBG,IAArB,CAA0BF,KAA1B,CAAgC,EAAhC;AACD,OAJH;AAKD,KAxBC,CAAF;AAyBD,GA1BO,CAAR;AA4BAb,EAAAA,QAAQ,CAAC,MAAD,EAAS,MAAM;AACrBG,IAAAA,EAAE,CAAC,wCAAD,EAA2C,YAAY;AACvD,YAAMJ,SAAS,CAACK,aAAV,GAA0BC,MAA1B,CAAiC;AACrCC,QAAAA,GAAG,EAAE,MADgC;AAErCK,QAAAA,SAAS,EAAE;AAAEK,UAAAA,KAAK,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN;AAAT;AAF0B,OAAjC,CAAN;AAKA,YAAMpB,IAAI,EAAV;AAEAE,MAAAA,SAAS,CAACS,IAAV,CAAe,EAAf,EACGC,KADH,GAEGC,OAFH,CAEW,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAmB;AAC1BjB,QAAAA,MAAM,CAACiB,SAAD,CAAN,CAAkBC,EAAlB,CAAqBC,KAArB,CAA2BC,SAA3B;AACD,OAJH;AAKD,KAbC,CAAF;AAcD,GAfO,CAAR;AAgBD,CAnDO,CAAR","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { up, down } from '../13';\nimport { Loans, Borrowers } from '../../..';\n\ndescribe('Migration 13', function () {\n  this.timeout(10000);\n  \n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('up', () => {\n    it('adds an empty object on all relevant documents', async () => {\n      await Loans.rawCollection().insert({\n        _id: 'test1',\n        name: '18-0001',\n      });\n\n      await Loans.rawCollection().insert({\n        _id: 'test2',\n        name: '18-0002',\n      });\n\n      Loans.find({})\n        .fetch()\n        .forEach(({ documents }) => {\n          expect(documents).to.equal(undefined);\n        });\n\n      await up();\n\n      Loans.find({})\n        .fetch()\n        .forEach(({ documents }) => {\n          expect(documents).to.deep.equal({});\n        });\n    });\n  });\n\n  describe('down', () => {\n    it('removes documents from all collections', async () => {\n      await Borrowers.rawCollection().insert({\n        _id: 'test',\n        documents: { stuff: { yo: 'dude' } },\n      });\n\n      await down();\n\n      Borrowers.find({})\n        .fetch()\n        .forEach(({ documents }) => {\n          expect(documents).to.equal(undefined);\n        });\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/13.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/migrations/server/test/13.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 1);\nlet up, down;\nmodule.link(\"../13\", {\n  up(v) {\n    up = v;\n  },\n\n  down(v) {\n    down = v;\n  }\n\n}, 2);\nlet Loans, Borrowers;\nmodule.link(\"../../..\", {\n  Loans(v) {\n    Loans = v;\n  },\n\n  Borrowers(v) {\n    Borrowers = v;\n  }\n\n}, 3);\ndescribe('Migration 13', function () {\n  this.timeout(10000);\n  beforeEach(() => {\n    resetDatabase();\n  });\n  describe('up', () => {\n    it('adds an empty object on all relevant documents', () => Promise.asyncApply(() => {\n      Promise.await(Loans.rawCollection().insert({\n        _id: 'test1',\n        name: '18-0001'\n      }));\n      Promise.await(Loans.rawCollection().insert({\n        _id: 'test2',\n        name: '18-0002'\n      }));\n      Loans.find({}).fetch().forEach(({\n        documents\n      }) => {\n        expect(documents).to.equal(undefined);\n      });\n      Promise.await(up());\n      Loans.find({}).fetch().forEach(({\n        documents\n      }) => {\n        expect(documents).to.deep.equal({});\n      });\n    }));\n  });\n  describe('down', () => {\n    it('removes documents from all collections', () => Promise.asyncApply(() => {\n      Promise.await(Borrowers.rawCollection().insert({\n        _id: 'test',\n        documents: {\n          stuff: {\n            yo: 'dude'\n          }\n        }\n      }));\n      Promise.await(down());\n      Borrowers.find({}).fetch().forEach(({\n        documents\n      }) => {\n        expect(documents).to.equal(undefined);\n      });\n    }));\n  });\n});","map":{"version":3,"sources":["imports/core/api/migrations/server/test/13.test.js"],"names":["describe","beforeEach","resetDatabase","it","_id","name","Loans","documents","expect","up","stuff","yo","down","Borrowers"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { up, down } from '../13';\nimport { Loans, Borrowers } from '../../..';\n\ndescribe('Migration 13', function () {\n  this.timeout(10000);\n  \n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('up', () => {\n    it('adds an empty object on all relevant documents', async () => {\n      await Loans.rawCollection().insert({\n        _id: 'test1',\n        name: '18-0001',\n      });\n\n      await Loans.rawCollection().insert({\n        _id: 'test2',\n        name: '18-0002',\n      });\n\n      Loans.find({})\n        .fetch()\n        .forEach(({ documents }) => {\n          expect(documents).to.equal(undefined);\n        });\n\n      await up();\n\n      Loans.find({})\n        .fetch()\n        .forEach(({ documents }) => {\n          expect(documents).to.deep.equal({});\n        });\n    });\n  });\n\n  describe('down', () => {\n    it('removes documents from all collections', async () => {\n      await Borrowers.rawCollection().insert({\n        _id: 'test',\n        documents: { stuff: { yo: 'dude' } },\n      });\n\n      await down();\n\n      Borrowers.find({})\n        .fetch()\n        .forEach(({ documents }) => {\n          expect(documents).to.equal(undefined);\n        });\n    });\n  });\n});\n"]},"sourceType":"script","hash":"5f7160a300df55d0f4077be28f63c9ddcc220fb8"}
