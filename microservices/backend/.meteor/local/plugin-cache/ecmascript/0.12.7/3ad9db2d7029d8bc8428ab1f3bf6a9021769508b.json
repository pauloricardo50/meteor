{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/client/test/TranchePickerContainer.test.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/TranchePicker/client/test/TranchePickerContainer.test.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/client/test/TranchePickerContainer.test.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/TranchePicker/client/test/TranchePickerContainer.test.jsx"],"names":["React","expect","IntlProvider","intlShape","mount","DefaultTranchePicker","TranchePicker","Tranche","describe","props","intl","defaultLocale","getChildContext","component","context","childContextTypes","beforeEach","types","it","wrapper","button","find","first","length","to","equal","simulate","initialTranches","value","type","deleteButton","input","prop","update","tranches","deep","select","onChange","firstTranche","map","id"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { IntlProvider, intlShape } from 'react-intl';\nimport { mount } from 'core/utils/testHelpers/enzyme';\n\nimport DefaultTranchePicker, { TranchePicker } from '../../TranchePicker';\nimport Tranche from '../../Tranche';\n\ndescribe('TranchePicker', () => {\n  let props;\n  const { intl } = new IntlProvider({ defaultLocale: 'fr' }).getChildContext();\n  const component = () =>\n    mount(<DefaultTranchePicker {...props} />, {\n      context: { intl },\n      childContextTypes: { intl: intlShape },\n    });\n\n  beforeEach(() => {\n    props = { types: ['interest10', 'interest2', 'interest5'] };\n  });\n\n  it('adds a tranche', () => {\n    const wrapper = component();\n    const button = wrapper.find('.add').first();\n\n    expect(wrapper.find('.tranche').length).to.equal(0);\n\n    button.simulate('click');\n\n    expect(wrapper.find('.tranche').length).to.equal(1);\n  });\n\n  it('removes a tranche', () => {\n    props.initialTranches = [{ value: 1, type: 'test' }];\n    const wrapper = component();\n    const deleteButton = wrapper.find('.delete').first();\n\n    expect(wrapper.find('.tranche').length).to.equal(1);\n\n    deleteButton.simulate('click');\n\n    expect(wrapper.find('.tranche').length).to.equal(0);\n  });\n\n  it('edits a tranche with an input', () => {\n    props.initialTranches = [{ value: 1, type: 'test' }];\n    const wrapper = component();\n    let input = wrapper.find('.value').first();\n\n    expect(input.prop('value')).to.equal(1);\n\n    input.prop('onChange')(0.8);\n\n    wrapper.update();\n    input = wrapper.find('.value').first();\n\n    expect(input.prop('value')).to.equal(0.8);\n    expect(wrapper.find(TranchePicker).props().tranches).to.deep.equal([\n      { value: 0.8, type: 'test' },\n    ]);\n  });\n\n  it('edits type with the Select field', () => {\n    props.initialTranches = [{ value: 1, type: 'type1' }];\n    const wrapper = component();\n    let select = wrapper.find('.select').first();\n\n    expect(select.prop('value')).to.equal('type1');\n\n    select.props().onChange(null, 'type2');\n\n    wrapper.update();\n    select = wrapper.find('.select').first();\n\n    expect(select.prop('value')).to.equal('type2');\n    expect(wrapper.find(TranchePicker).props().tranches).to.deep.equal([\n      { value: 1, type: 'type2' },\n    ]);\n  });\n\n  it('filters options passed to a tranche', () => {\n    props.initialTranches = [\n      { value: 1, type: 'interest2' },\n      { value: 1, type: 'interest5' },\n    ];\n    const wrapper = component();\n    const firstTranche = wrapper.find(Tranche).first();\n\n    expect(firstTranche.prop('options').map(({ id }) => id)).to.deep.equal([\n      'interest2',\n      'interest10',\n    ]);\n  });\n\n  it('sorts options properly', () => {\n    props.types = [\n      'interest20',\n      'interest15',\n      'interest5',\n      'interest10',\n      'interest2',\n    ];\n    props.initialTranches = [{ value: 1, type: 'interest2' }];\n    const wrapper = component();\n    const firstTranche = wrapper.find(Tranche).first();\n\n    expect(firstTranche.prop('options').map(({ id }) => id)).to.deep.equal([\n      'interest2',\n      'interest5',\n      'interest10',\n      'interest15',\n      'interest20',\n    ]);\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/client/test/TranchePickerContainer.test.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/TranchePicker/client/test/TranchePickerContainer.test.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 1);\nlet IntlProvider, intlShape;\nmodule.link(\"react-intl\", {\n  IntlProvider(v) {\n    IntlProvider = v;\n  },\n\n  intlShape(v) {\n    intlShape = v;\n  }\n\n}, 2);\nlet mount;\nmodule.link(\"../../../../utils/testHelpers/enzyme\", {\n  mount(v) {\n    mount = v;\n  }\n\n}, 3);\nlet DefaultTranchePicker, TranchePicker;\nmodule.link(\"../../TranchePicker\", {\n  default(v) {\n    DefaultTranchePicker = v;\n  },\n\n  TranchePicker(v) {\n    TranchePicker = v;\n  }\n\n}, 4);\nlet Tranche;\nmodule.link(\"../../Tranche\", {\n  default(v) {\n    Tranche = v;\n  }\n\n}, 5);\ndescribe('TranchePicker', () => {\n  let props;\n  const {\n    intl\n  } = new IntlProvider({\n    defaultLocale: 'fr'\n  }).getChildContext();\n\n  const component = () => mount(React.createElement(DefaultTranchePicker, props), {\n    context: {\n      intl\n    },\n    childContextTypes: {\n      intl: intlShape\n    }\n  });\n\n  beforeEach(() => {\n    props = {\n      types: ['interest10', 'interest2', 'interest5']\n    };\n  });\n  it('adds a tranche', () => {\n    const wrapper = component();\n    const button = wrapper.find('.add').first();\n    expect(wrapper.find('.tranche').length).to.equal(0);\n    button.simulate('click');\n    expect(wrapper.find('.tranche').length).to.equal(1);\n  });\n  it('removes a tranche', () => {\n    props.initialTranches = [{\n      value: 1,\n      type: 'test'\n    }];\n    const wrapper = component();\n    const deleteButton = wrapper.find('.delete').first();\n    expect(wrapper.find('.tranche').length).to.equal(1);\n    deleteButton.simulate('click');\n    expect(wrapper.find('.tranche').length).to.equal(0);\n  });\n  it('edits a tranche with an input', () => {\n    props.initialTranches = [{\n      value: 1,\n      type: 'test'\n    }];\n    const wrapper = component();\n    let input = wrapper.find('.value').first();\n    expect(input.prop('value')).to.equal(1);\n    input.prop('onChange')(0.8);\n    wrapper.update();\n    input = wrapper.find('.value').first();\n    expect(input.prop('value')).to.equal(0.8);\n    expect(wrapper.find(TranchePicker).props().tranches).to.deep.equal([{\n      value: 0.8,\n      type: 'test'\n    }]);\n  });\n  it('edits type with the Select field', () => {\n    props.initialTranches = [{\n      value: 1,\n      type: 'type1'\n    }];\n    const wrapper = component();\n    let select = wrapper.find('.select').first();\n    expect(select.prop('value')).to.equal('type1');\n    select.props().onChange(null, 'type2');\n    wrapper.update();\n    select = wrapper.find('.select').first();\n    expect(select.prop('value')).to.equal('type2');\n    expect(wrapper.find(TranchePicker).props().tranches).to.deep.equal([{\n      value: 1,\n      type: 'type2'\n    }]);\n  });\n  it('filters options passed to a tranche', () => {\n    props.initialTranches = [{\n      value: 1,\n      type: 'interest2'\n    }, {\n      value: 1,\n      type: 'interest5'\n    }];\n    const wrapper = component();\n    const firstTranche = wrapper.find(Tranche).first();\n    expect(firstTranche.prop('options').map((_ref) => {\n      let {\n        id\n      } = _ref;\n      return id;\n    })).to.deep.equal(['interest2', 'interest10']);\n  });\n  it('sorts options properly', () => {\n    props.types = ['interest20', 'interest15', 'interest5', 'interest10', 'interest2'];\n    props.initialTranches = [{\n      value: 1,\n      type: 'interest2'\n    }];\n    const wrapper = component();\n    const firstTranche = wrapper.find(Tranche).first();\n    expect(firstTranche.prop('options').map((_ref2) => {\n      let {\n        id\n      } = _ref2;\n      return id;\n    })).to.deep.equal(['interest2', 'interest5', 'interest10', 'interest15', 'interest20']);\n  });\n});","map":{"version":3,"sources":["imports/core/components/TranchePicker/client/test/TranchePickerContainer.test.jsx"],"names":["describe","intl","defaultLocale","component","mount","context","childContextTypes","intlShape","beforeEach","props","types","it","wrapper","button","expect","value","type","deleteButton","input","select","firstTranche","id"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { IntlProvider, intlShape } from 'react-intl';\nimport { mount } from 'core/utils/testHelpers/enzyme';\n\nimport DefaultTranchePicker, { TranchePicker } from '../../TranchePicker';\nimport Tranche from '../../Tranche';\n\ndescribe('TranchePicker', () => {\n  let props;\n  const { intl } = new IntlProvider({ defaultLocale: 'fr' }).getChildContext();\n  const component = () =>\n    mount(<DefaultTranchePicker {...props} />, {\n      context: { intl },\n      childContextTypes: { intl: intlShape },\n    });\n\n  beforeEach(() => {\n    props = { types: ['interest10', 'interest2', 'interest5'] };\n  });\n\n  it('adds a tranche', () => {\n    const wrapper = component();\n    const button = wrapper.find('.add').first();\n\n    expect(wrapper.find('.tranche').length).to.equal(0);\n\n    button.simulate('click');\n\n    expect(wrapper.find('.tranche').length).to.equal(1);\n  });\n\n  it('removes a tranche', () => {\n    props.initialTranches = [{ value: 1, type: 'test' }];\n    const wrapper = component();\n    const deleteButton = wrapper.find('.delete').first();\n\n    expect(wrapper.find('.tranche').length).to.equal(1);\n\n    deleteButton.simulate('click');\n\n    expect(wrapper.find('.tranche').length).to.equal(0);\n  });\n\n  it('edits a tranche with an input', () => {\n    props.initialTranches = [{ value: 1, type: 'test' }];\n    const wrapper = component();\n    let input = wrapper.find('.value').first();\n\n    expect(input.prop('value')).to.equal(1);\n\n    input.prop('onChange')(0.8);\n\n    wrapper.update();\n    input = wrapper.find('.value').first();\n\n    expect(input.prop('value')).to.equal(0.8);\n    expect(wrapper.find(TranchePicker).props().tranches).to.deep.equal([\n      { value: 0.8, type: 'test' },\n    ]);\n  });\n\n  it('edits type with the Select field', () => {\n    props.initialTranches = [{ value: 1, type: 'type1' }];\n    const wrapper = component();\n    let select = wrapper.find('.select').first();\n\n    expect(select.prop('value')).to.equal('type1');\n\n    select.props().onChange(null, 'type2');\n\n    wrapper.update();\n    select = wrapper.find('.select').first();\n\n    expect(select.prop('value')).to.equal('type2');\n    expect(wrapper.find(TranchePicker).props().tranches).to.deep.equal([\n      { value: 1, type: 'type2' },\n    ]);\n  });\n\n  it('filters options passed to a tranche', () => {\n    props.initialTranches = [\n      { value: 1, type: 'interest2' },\n      { value: 1, type: 'interest5' },\n    ];\n    const wrapper = component();\n    const firstTranche = wrapper.find(Tranche).first();\n\n    expect(firstTranche.prop('options').map(({ id }) => id)).to.deep.equal([\n      'interest2',\n      'interest10',\n    ]);\n  });\n\n  it('sorts options properly', () => {\n    props.types = [\n      'interest20',\n      'interest15',\n      'interest5',\n      'interest10',\n      'interest2',\n    ];\n    props.initialTranches = [{ value: 1, type: 'interest2' }];\n    const wrapper = component();\n    const firstTranche = wrapper.find(Tranche).first();\n\n    expect(firstTranche.prop('options').map(({ id }) => id)).to.deep.equal([\n      'interest2',\n      'interest5',\n      'interest10',\n      'interest15',\n      'interest20',\n    ]);\n  });\n});\n"]},"sourceType":"script","hash":"3ad9db2d7029d8bc8428ab1f3bf6a9021769508b"}
