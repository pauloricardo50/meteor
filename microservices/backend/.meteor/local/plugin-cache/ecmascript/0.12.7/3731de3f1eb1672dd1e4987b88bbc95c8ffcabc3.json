{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/mongo/extendMongoCollection.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/cultofcoders:redis-oplog/lib/mongo/extendMongoCollection.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/mongo/extendMongoCollection.js","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/mongo/extendMongoCollection.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:redis-oplog/lib/mongo/extendMongoCollection.js"}},"code":"let Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 1);\nlet extendObserveChanges;\nmodule.link(\"./extendObserveChanges\", {\n  default(v) {\n    extendObserveChanges = v;\n  }\n\n}, 2);\n\nlet _validatedInsert;\n\nmodule.link(\"./allow-deny/validatedInsert\", {\n  default(v) {\n    _validatedInsert = v;\n  }\n\n}, 3);\n\nlet _validatedUpdate;\n\nmodule.link(\"./allow-deny/validatedUpdate\", {\n  default(v) {\n    _validatedUpdate = v;\n  }\n\n}, 4);\n\nlet _validatedRemove;\n\nmodule.link(\"./allow-deny/validatedRemove\", {\n  default(v) {\n    _validatedRemove = v;\n  }\n\n}, 5);\nlet Mutator;\nmodule.link(\"./Mutator\", {\n  default(v) {\n    Mutator = v;\n  }\n\n}, 6);\nmodule.exportDefault(() => {\n  const Originals = {\n    insert: Mongo.Collection.prototype.insert,\n    update: Mongo.Collection.prototype.update,\n    remove: Mongo.Collection.prototype.remove,\n    find: Mongo.Collection.prototype.find\n  };\n  Mutator.init();\n\n  _.extend(Mongo.Collection.prototype, {\n    find(...args) {\n      var cursor = Originals.find.call(this, ...args);\n      extendObserveChanges(cursor, ...args);\n      return cursor;\n    },\n\n    /**\n     * @param data\n     * @param config\n     * @returns {*}\n     */\n    insert(data, config) {\n      return Mutator.insert.call(this, Originals, data, config);\n    },\n\n    /**\n     * @param selector\n     * @param modifier\n     * @param config\n     * @param callback\n     * @returns {*}\n     */\n    update(selector, modifier, config, callback) {\n      return Mutator.update.call(this, Originals, selector, modifier, config, callback);\n    },\n\n    /**\n     * @param selector\n     * @param config\n     * @returns {*}\n     */\n    remove(selector, config) {\n      return Mutator.remove.call(this, Originals, selector, config);\n    },\n\n    _validatedInsert,\n    _validatedUpdate,\n    _validatedRemove,\n\n    /**\n     * Configure defaults for your collection\n     *\n     * @param {function} mutation\n     * @param {function} cursor\n     */\n    configureRedisOplog({\n      mutation,\n      cursor\n    }) {\n      this._redisOplog = {};\n\n      if (mutation) {\n        if (!_.isFunction(mutation)) {\n          throw new Meteor.Error('To configure defaults for the collection, \"mutation\" needs to be a function');\n        }\n\n        this._redisOplog.mutation = mutation;\n      }\n\n      if (cursor) {\n        if (!_.isFunction(cursor)) {\n          throw new Meteor.Error('To configure defaults for the collection, \"cursor\" needs to be a function');\n        }\n\n        this._redisOplog.cursor = cursor;\n      }\n    }\n\n  });\n});","map":{"version":3,"sources":["packages/cultofcoders:redis-oplog/lib/mongo/extendMongoCollection.js"],"names":["Mongo","module","link","v","_","extendObserveChanges","default","_validatedInsert","_validatedUpdate","_validatedRemove","Mutator","exportDefault","Originals","insert","Collection","prototype","update","remove","find","init","extend","args","cursor","call","data","config","selector","modifier","callback","configureRedisOplog","mutation","_redisOplog","isFunction","Meteor","Error"],"mappings":"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","sourcesContent":["import {Mongo} from 'meteor/mongo';\nimport {_} from 'meteor/underscore';\nimport extendObserveChanges from './extendObserveChanges';\nimport _validatedInsert from './allow-deny/validatedInsert'\nimport _validatedUpdate from './allow-deny/validatedUpdate'\nimport _validatedRemove from './allow-deny/validatedRemove'\nimport Mutator from './Mutator';\n\nexport default () => {\n    const Originals = {\n        insert: Mongo.Collection.prototype.insert,\n        update: Mongo.Collection.prototype.update,\n        remove: Mongo.Collection.prototype.remove,\n        find: Mongo.Collection.prototype.find,\n    };\n\n    Mutator.init();\n\n    _.extend(Mongo.Collection.prototype, {\n        find(...args) {\n            var cursor = Originals.find.call(this, ...args);\n\n            extendObserveChanges(cursor, ...args);\n\n            return cursor;\n        },\n\n        /**\n         * @param data\n         * @param config\n         * @returns {*}\n         */\n        insert(data, config) {\n            return Mutator.insert.call(this, Originals, data, config);\n        },\n\n        /**\n         * @param selector\n         * @param modifier\n         * @param config\n         * @param callback\n         * @returns {*}\n         */\n        update(selector, modifier, config, callback) {\n            return Mutator.update.call(this, Originals, selector, modifier, config, callback);\n        },\n\n        /**\n         * @param selector\n         * @param config\n         * @returns {*}\n         */\n        remove(selector, config) {\n            return Mutator.remove.call(this, Originals, selector, config);\n        },\n\n        _validatedInsert,\n        _validatedUpdate,\n        _validatedRemove,\n\n        /**\n         * Configure defaults for your collection\n         *\n         * @param {function} mutation\n         * @param {function} cursor\n         */\n        configureRedisOplog({mutation, cursor}) {\n            this._redisOplog = {};\n            if (mutation) {\n                if (!_.isFunction(mutation)) {\n                    throw new Meteor.Error('To configure defaults for the collection, \"mutation\" needs to be a function')\n                }\n\n                this._redisOplog.mutation = mutation;\n            }\n            if (cursor) {\n                if (!_.isFunction(cursor)) {\n                    throw new Meteor.Error('To configure defaults for the collection, \"cursor\" needs to be a function')\n                }\n\n                this._redisOplog.cursor = cursor;\n            }\n        }\n    });\n}\n"]},"sourceType":"script","hash":"3731de3f1eb1672dd1e4987b88bbc95c8ffcabc3"}
