{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/files/server/S3Service.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/files/server/S3Service.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/files/server/S3Service.js","inputSourceMap":{"version":3,"sources":["imports/core/api/files/server/S3Service.js"],"names":["Meteor","AWS","Roles","Loans","Borrowers","Properties","Promotions","TEST_BUCKET_NAME","S3_ENDPOINT","OBJECT_STORAGE_PATH","PROPERTY_CATEGORY","API_KEY","SECRET_KEY","settings","exoscale","S3Service","constructor","config","update","accessKeyId","secretAccessKey","s3","S3","signatureVersion","endpoint","isTest","isAppTest","params","Bucket","storage","bucketName","extraParams","key","loggedInUser","userId","userIsInRole","keyId","split","loanFound","findOne","_id","borrowerFound","property","category","USER","Error","promotionFound","binaryData","Key","Metadata","ACL","callS3Method","Body","keys","Delete","Objects","map","prefix","listObjects","then","results","deleteObjects","Prefix","Contents","Promise","all","object","headObject","ContentDisposition","name","decodeURIComponent","match","url","buildFileUrl","methodName","promisify","makeParams","resolve","reject","err","data","newMetadata","oldMetaData","copyObject","CopySource","MetadataDirective","file","getSignedUrl","Expires","setupS3","setBucket"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport AWS from 'aws-sdk';\nimport { Roles } from 'meteor/alanning:roles';\nimport { Loans, Borrowers, Properties, Promotions } from '../..';\nimport {\n  TEST_BUCKET_NAME,\n  S3_ENDPOINT,\n  OBJECT_STORAGE_PATH,\n} from '../fileConstants';\nimport { PROPERTY_CATEGORY } from '../../constants';\n\nconst { API_KEY, SECRET_KEY } = Meteor.settings.exoscale;\n\nclass S3Service {\n  constructor() {\n    this.setupS3();\n    this.setBucket();\n  }\n\n  setupS3 = () => {\n    // API Ref: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html\n    AWS.config.update({ accessKeyId: API_KEY, secretAccessKey: SECRET_KEY });\n    this.s3 = new AWS.S3({ signatureVersion: 'v4', endpoint: S3_ENDPOINT });\n  };\n\n  setBucket = () => {\n    if (Meteor.isTest || Meteor.isAppTest) {\n      this.params = { Bucket: TEST_BUCKET_NAME };\n    } else {\n      this.params = { Bucket: Meteor.settings.storage.bucketName };\n    }\n  };\n\n  makeParams = (extraParams = {}) => ({ ...this.params, ...extraParams });\n\n  isAllowedToAccess = (key) => {\n    const loggedInUser = Meteor.userId();\n    if (\n      Roles.userIsInRole(loggedInUser, 'admin')\n      || Roles.userIsInRole(loggedInUser, 'dev')\n    ) {\n      return true;\n    }\n\n    // Check if this user is the owner of the document\n    const keyId = key.split('/')[0];\n    const loanFound = !!Loans.findOne({\n      _id: keyId,\n      userId: loggedInUser,\n    });\n\n    if (loanFound) {\n      return true;\n    }\n\n    const borrowerFound = !!Borrowers.findOne({\n      _id: keyId,\n      userId: loggedInUser,\n    });\n\n    if (borrowerFound) {\n      return true;\n    }\n\n    const property = Properties.findOne({ _id: keyId });\n\n    if (property) {\n      if (!property.category || property.category === PROPERTY_CATEGORY.USER) {\n        if (property.userId === loggedInUser) {\n          return true;\n        }\n        throw new Meteor.Error('Unauthorized download');\n      }\n\n      return true;\n    }\n\n    const promotionFound = !!Promotions.findOne({ _id: keyId });\n\n    if (promotionFound) {\n      return true;\n    }\n\n    throw new Meteor.Error('Unauthorized download');\n  };\n\n  putObject = (binaryData, Key, Metadata, ACL = 'bucket-owner-full-control') =>\n    this.callS3Method('putObject', {\n      Body: binaryData,\n      Key,\n      Metadata,\n      ACL,\n    });\n\n  deleteObject = Key => this.callS3Method('deleteObject', { Key });\n\n  deleteObjects = keys =>\n    this.callS3Method('deleteObjects', {\n      Delete: { Objects: keys.map(Key => ({ Key })) },\n    });\n\n  deleteObjectsWithPrefix = prefix =>\n    this.listObjects(prefix)\n      .then(results => results.map(({ Key }) => Key))\n      .then(this.deleteObjects);\n\n  getObject = Key => this.callS3Method('getObject', { Key });\n\n  listObjects = Prefix =>\n    this.callS3Method('listObjectsV2', { Prefix }).then(results => results.Contents);\n\n  listObjectsWithMetadata = Prefix =>\n    this.listObjects(Prefix).then(results =>\n      Promise.all(results.map(object =>\n        this.headObject(object.Key).then(({ Metadata, ContentDisposition }) => {\n          const name = ContentDisposition\n                && decodeURIComponent(ContentDisposition.match(/filename=\"(.*)\"/)[1]);\n          return {\n            ...object,\n            ...Metadata,\n            url: this.buildFileUrl(object),\n            name,\n          };\n        }))));\n\n  copyObject = params => this.callS3Method('copyObject', params);\n\n  headObject = Key => this.callS3Method('headObject', { Key });\n\n  callS3Method = (methodName, params) =>\n    this.promisify(methodName, this.makeParams(params));\n\n  promisify = (methodName, params) =>\n    new Promise((resolve, reject) =>\n      this.s3[methodName](params, (err, data) =>\n        (err ? reject(err) : resolve(data))));\n\n  updateMetadata = (key, newMetadata) =>\n    this.headObject(key).then(({ Metadata: oldMetaData }) =>\n      this.copyObject({\n        Key: key,\n        Metadata: { ...oldMetaData, ...newMetadata },\n        CopySource: `/${this.params.Bucket}/${key}`,\n        MetadataDirective: 'REPLACE',\n      }));\n\n  buildFileUrl = file => `${OBJECT_STORAGE_PATH}/${file.Key}`;\n\n  makeSignedUrl = Key =>\n    this.s3.getSignedUrl('getObject', {\n      Bucket: this.params.Bucket,\n      Key,\n      Expires: 180,\n    });\n}\n\nexport default new S3Service();\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/files/server/S3Service.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/files/server/S3Service.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet AWS;\nmodule.link(\"aws-sdk\", {\n  default(v) {\n    AWS = v;\n  }\n\n}, 1);\nlet Roles;\nmodule.link(\"meteor/alanning:roles\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 2);\nlet Loans, Borrowers, Properties, Promotions;\nmodule.link(\"../..\", {\n  Loans(v) {\n    Loans = v;\n  },\n\n  Borrowers(v) {\n    Borrowers = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Promotions(v) {\n    Promotions = v;\n  }\n\n}, 3);\nlet TEST_BUCKET_NAME, S3_ENDPOINT, OBJECT_STORAGE_PATH;\nmodule.link(\"../fileConstants\", {\n  TEST_BUCKET_NAME(v) {\n    TEST_BUCKET_NAME = v;\n  },\n\n  S3_ENDPOINT(v) {\n    S3_ENDPOINT = v;\n  },\n\n  OBJECT_STORAGE_PATH(v) {\n    OBJECT_STORAGE_PATH = v;\n  }\n\n}, 4);\nlet PROPERTY_CATEGORY;\nmodule.link(\"../../constants\", {\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 5);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst {\n  API_KEY,\n  SECRET_KEY\n} = Meteor.settings.exoscale;\n\nclass S3Service {\n  constructor() {\n    _defineProperty(this, \"setupS3\", () => {\n      // API Ref: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html\n      AWS.config.update({\n        accessKeyId: API_KEY,\n        secretAccessKey: SECRET_KEY\n      });\n      this.s3 = new AWS.S3({\n        signatureVersion: 'v4',\n        endpoint: S3_ENDPOINT\n      });\n    });\n\n    _defineProperty(this, \"setBucket\", () => {\n      if (Meteor.isTest || Meteor.isAppTest) {\n        this.params = {\n          Bucket: TEST_BUCKET_NAME\n        };\n      } else {\n        this.params = {\n          Bucket: Meteor.settings.storage.bucketName\n        };\n      }\n    });\n\n    _defineProperty(this, \"makeParams\", (extraParams = {}) => (0, _objectSpread2.default)({}, this.params, extraParams));\n\n    _defineProperty(this, \"isAllowedToAccess\", key => {\n      const loggedInUser = Meteor.userId();\n\n      if (Roles.userIsInRole(loggedInUser, 'admin') || Roles.userIsInRole(loggedInUser, 'dev')) {\n        return true;\n      } // Check if this user is the owner of the document\n\n\n      const keyId = key.split('/')[0];\n      const loanFound = !!Loans.findOne({\n        _id: keyId,\n        userId: loggedInUser\n      });\n\n      if (loanFound) {\n        return true;\n      }\n\n      const borrowerFound = !!Borrowers.findOne({\n        _id: keyId,\n        userId: loggedInUser\n      });\n\n      if (borrowerFound) {\n        return true;\n      }\n\n      const property = Properties.findOne({\n        _id: keyId\n      });\n\n      if (property) {\n        if (!property.category || property.category === PROPERTY_CATEGORY.USER) {\n          if (property.userId === loggedInUser) {\n            return true;\n          }\n\n          throw new Meteor.Error('Unauthorized download');\n        }\n\n        return true;\n      }\n\n      const promotionFound = !!Promotions.findOne({\n        _id: keyId\n      });\n\n      if (promotionFound) {\n        return true;\n      }\n\n      throw new Meteor.Error('Unauthorized download');\n    });\n\n    _defineProperty(this, \"putObject\", (binaryData, Key, Metadata, ACL = 'bucket-owner-full-control') => this.callS3Method('putObject', {\n      Body: binaryData,\n      Key,\n      Metadata,\n      ACL\n    }));\n\n    _defineProperty(this, \"deleteObject\", Key => this.callS3Method('deleteObject', {\n      Key\n    }));\n\n    _defineProperty(this, \"deleteObjects\", keys => this.callS3Method('deleteObjects', {\n      Delete: {\n        Objects: keys.map(Key => ({\n          Key\n        }))\n      }\n    }));\n\n    _defineProperty(this, \"deleteObjectsWithPrefix\", prefix => this.listObjects(prefix).then(results => results.map(({\n      Key\n    }) => Key)).then(this.deleteObjects));\n\n    _defineProperty(this, \"getObject\", Key => this.callS3Method('getObject', {\n      Key\n    }));\n\n    _defineProperty(this, \"listObjects\", Prefix => this.callS3Method('listObjectsV2', {\n      Prefix\n    }).then(results => results.Contents));\n\n    _defineProperty(this, \"listObjectsWithMetadata\", Prefix => this.listObjects(Prefix).then(results => Promise.all(results.map(object => this.headObject(object.Key).then(({\n      Metadata,\n      ContentDisposition\n    }) => {\n      const name = ContentDisposition && decodeURIComponent(ContentDisposition.match(/filename=\"(.*)\"/)[1]);\n      return (0, _objectSpread2.default)({}, object, Metadata, {\n        url: this.buildFileUrl(object),\n        name\n      });\n    })))));\n\n    _defineProperty(this, \"copyObject\", params => this.callS3Method('copyObject', params));\n\n    _defineProperty(this, \"headObject\", Key => this.callS3Method('headObject', {\n      Key\n    }));\n\n    _defineProperty(this, \"callS3Method\", (methodName, params) => this.promisify(methodName, this.makeParams(params)));\n\n    _defineProperty(this, \"promisify\", (methodName, params) => new Promise((resolve, reject) => this.s3[methodName](params, (err, data) => err ? reject(err) : resolve(data))));\n\n    _defineProperty(this, \"updateMetadata\", (key, newMetadata) => this.headObject(key).then(({\n      Metadata: oldMetaData\n    }) => this.copyObject({\n      Key: key,\n      Metadata: (0, _objectSpread2.default)({}, oldMetaData, newMetadata),\n      CopySource: `/${this.params.Bucket}/${key}`,\n      MetadataDirective: 'REPLACE'\n    })));\n\n    _defineProperty(this, \"buildFileUrl\", file => `${OBJECT_STORAGE_PATH}/${file.Key}`);\n\n    _defineProperty(this, \"makeSignedUrl\", Key => this.s3.getSignedUrl('getObject', {\n      Bucket: this.params.Bucket,\n      Key,\n      Expires: 180\n    }));\n\n    this.setupS3();\n    this.setBucket();\n  }\n\n}\n\nmodule.exportDefault(new S3Service());","map":{"version":3,"sources":["imports/core/api/files/server/S3Service.js"],"names":["SECRET_KEY","Meteor","constructor","AWS","accessKeyId","secretAccessKey","signatureVersion","endpoint","S3_ENDPOINT","Bucket","TEST_BUCKET_NAME","bucketName","extraParams","key","loggedInUser","Roles","keyId","loanFound","_id","userId","borrowerFound","property","PROPERTY_CATEGORY","promotionFound","ACL","Body","Key","keys","Delete","Objects","prefix","results","Prefix","object","ContentDisposition","name","decodeURIComponent","url","params","err","reject","resolve","Metadata","oldMetaData","newMetadata","CopySource","MetadataDirective","file","OBJECT_STORAGE_PATH","Expires"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport AWS from 'aws-sdk';\nimport { Roles } from 'meteor/alanning:roles';\nimport { Loans, Borrowers, Properties, Promotions } from '../..';\nimport {\n  TEST_BUCKET_NAME,\n  S3_ENDPOINT,\n  OBJECT_STORAGE_PATH,\n} from '../fileConstants';\nimport { PROPERTY_CATEGORY } from '../../constants';\n\nconst { API_KEY, SECRET_KEY } = Meteor.settings.exoscale;\n\nclass S3Service {\n  constructor() {\n    this.setupS3();\n    this.setBucket();\n  }\n\n  setupS3 = () => {\n    // API Ref: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html\n    AWS.config.update({ accessKeyId: API_KEY, secretAccessKey: SECRET_KEY });\n    this.s3 = new AWS.S3({ signatureVersion: 'v4', endpoint: S3_ENDPOINT });\n  };\n\n  setBucket = () => {\n    if (Meteor.isTest || Meteor.isAppTest) {\n      this.params = { Bucket: TEST_BUCKET_NAME };\n    } else {\n      this.params = { Bucket: Meteor.settings.storage.bucketName };\n    }\n  };\n\n  makeParams = (extraParams = {}) => ({ ...this.params, ...extraParams });\n\n  isAllowedToAccess = (key) => {\n    const loggedInUser = Meteor.userId();\n    if (\n      Roles.userIsInRole(loggedInUser, 'admin')\n      || Roles.userIsInRole(loggedInUser, 'dev')\n    ) {\n      return true;\n    }\n\n    // Check if this user is the owner of the document\n    const keyId = key.split('/')[0];\n    const loanFound = !!Loans.findOne({\n      _id: keyId,\n      userId: loggedInUser,\n    });\n\n    if (loanFound) {\n      return true;\n    }\n\n    const borrowerFound = !!Borrowers.findOne({\n      _id: keyId,\n      userId: loggedInUser,\n    });\n\n    if (borrowerFound) {\n      return true;\n    }\n\n    const property = Properties.findOne({ _id: keyId });\n\n    if (property) {\n      if (!property.category || property.category === PROPERTY_CATEGORY.USER) {\n        if (property.userId === loggedInUser) {\n          return true;\n        }\n        throw new Meteor.Error('Unauthorized download');\n      }\n\n      return true;\n    }\n\n    const promotionFound = !!Promotions.findOne({ _id: keyId });\n\n    if (promotionFound) {\n      return true;\n    }\n\n    throw new Meteor.Error('Unauthorized download');\n  };\n\n  putObject = (binaryData, Key, Metadata, ACL = 'bucket-owner-full-control') =>\n    this.callS3Method('putObject', {\n      Body: binaryData,\n      Key,\n      Metadata,\n      ACL,\n    });\n\n  deleteObject = Key => this.callS3Method('deleteObject', { Key });\n\n  deleteObjects = keys =>\n    this.callS3Method('deleteObjects', {\n      Delete: { Objects: keys.map(Key => ({ Key })) },\n    });\n\n  deleteObjectsWithPrefix = prefix =>\n    this.listObjects(prefix)\n      .then(results => results.map(({ Key }) => Key))\n      .then(this.deleteObjects);\n\n  getObject = Key => this.callS3Method('getObject', { Key });\n\n  listObjects = Prefix =>\n    this.callS3Method('listObjectsV2', { Prefix }).then(results => results.Contents);\n\n  listObjectsWithMetadata = Prefix =>\n    this.listObjects(Prefix).then(results =>\n      Promise.all(results.map(object =>\n        this.headObject(object.Key).then(({ Metadata, ContentDisposition }) => {\n          const name = ContentDisposition\n                && decodeURIComponent(ContentDisposition.match(/filename=\"(.*)\"/)[1]);\n          return {\n            ...object,\n            ...Metadata,\n            url: this.buildFileUrl(object),\n            name,\n          };\n        }))));\n\n  copyObject = params => this.callS3Method('copyObject', params);\n\n  headObject = Key => this.callS3Method('headObject', { Key });\n\n  callS3Method = (methodName, params) =>\n    this.promisify(methodName, this.makeParams(params));\n\n  promisify = (methodName, params) =>\n    new Promise((resolve, reject) =>\n      this.s3[methodName](params, (err, data) =>\n        (err ? reject(err) : resolve(data))));\n\n  updateMetadata = (key, newMetadata) =>\n    this.headObject(key).then(({ Metadata: oldMetaData }) =>\n      this.copyObject({\n        Key: key,\n        Metadata: { ...oldMetaData, ...newMetadata },\n        CopySource: `/${this.params.Bucket}/${key}`,\n        MetadataDirective: 'REPLACE',\n      }));\n\n  buildFileUrl = file => `${OBJECT_STORAGE_PATH}/${file.Key}`;\n\n  makeSignedUrl = Key =>\n    this.s3.getSignedUrl('getObject', {\n      Bucket: this.params.Bucket,\n      Key,\n      Expires: 180,\n    });\n}\n\nexport default new S3Service();\n"]},"sourceType":"script","hash":"e5e196d3ca3844df17d1e56160b063ecf8207843"}
