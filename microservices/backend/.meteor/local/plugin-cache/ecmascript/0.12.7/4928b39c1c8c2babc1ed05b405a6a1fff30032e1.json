{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/methods/server/serverMethodsConfig.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/methods/server/serverMethodsConfig.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/methods/server/serverMethodsConfig.js","inputSourceMap":{"version":3,"sources":["imports/core/api/methods/server/serverMethodsConfig.js"],"names":["Meteor","SlackService","ServerEventService","Method","logMethod","context","config","params","result","error","isProduction","isStaging","isDevEnvironment","console","log","name","userId","addAfterExecution","sendError","additionalData","data","emitMethod"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AAEA,OAAOC,YAAP;AACA,OAAOC,kBAAP;AACA,SAASC,MAAT;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA,MAA3B;AAAmCC,EAAAA;AAAnC,CAAD,KAAgD;AAChE,MAAIT,MAAM,CAACU,YAAP,IAAuBV,MAAM,CAACW,SAA9B,IAA2CX,MAAM,CAACY,gBAAtD,EAAwE;AACtEC,IAAAA,OAAO,CAACC,GAAR,CAAY,2DAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBR,MAAM,CAACS,IAAK,SAAzC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,MAA9B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BT,OAAO,CAACW,MAAtC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BN,MAA9B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BL,KAA7B;AACD;AACF,CATD;;AAWAN,MAAM,CAACc,iBAAP,CAAyB,CAAC;AAAEZ,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA,MAA3B;AAAmCC,EAAAA;AAAnC,CAAD,KAAgD;AACvEL,EAAAA,SAAS,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,MAA3B;AAAmCC,IAAAA;AAAnC,GAAD,CAAT;;AAEA,MAAIA,KAAJ,EAAW;AACTR,IAAAA,YAAY,CAACiB,SAAb,CAAuB;AACrBT,MAAAA,KADqB;AAErBU,MAAAA,cAAc,EAAE,CACb,mCAAkCb,MAAM,CAACS,IAAK,GADjC,EAEd;AAAEA,QAAAA,IAAI,EAAE,SAAR;AAAmBK,QAAAA,IAAI,EAAEf;AAAzB,OAFc,EAGd;AAAEU,QAAAA,IAAI,EAAE,QAAR;AAAkBK,QAAAA,IAAI,EAAEb;AAAxB,OAHc,CAFK;AAOrBS,MAAAA,MAAM,EAAEX,OAAO,CAACW;AAPK,KAAvB;AASD;;AAED,MAAI,CAACP,KAAL,EAAY;AACVP,IAAAA,kBAAkB,CAACmB,UAAnB,CAA8Bf,MAA9B,EAAsC;AACpCD,MAAAA,OADoC;AAEpCC,MAAAA,MAFoC;AAGpCC,MAAAA,MAHoC;AAIpCC,MAAAA,MAJoC;AAKpCC,MAAAA;AALoC,KAAtC;AAOD;AACF,CAxBD","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport SlackService from '../../slack/server/SlackService';\nimport ServerEventService from '../../events/server/ServerEventService';\nimport { Method } from '../methods';\n\nconst logMethod = ({ context, config, params, result, error }) => {\n  if (Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment) {\n    console.log('---------------------- METHOD CALL ----------------------');\n    console.log(`METHOD Method ${config.name} called`);\n    console.log('METHOD Params:', params);\n    console.log('METHOD userId:', context.userId);\n    console.log('METHOD result:', result);\n    console.log('METHOD error:', error);\n  }\n};\n\nMethod.addAfterExecution(({ context, config, params, result, error }) => {\n  logMethod({ context, config, params, result, error });\n\n  if (error) {\n    SlackService.sendError({\n      error,\n      additionalData: [\n        `Server method error in method: \"${config.name}\"`,\n        { name: 'context', data: context },\n        { name: 'params', data: params },\n      ],\n      userId: context.userId,\n    });\n  }\n\n  if (!error) {\n    ServerEventService.emitMethod(config, {\n      context,\n      config,\n      params,\n      result,\n      error,\n    });\n  }\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/methods/server/serverMethodsConfig.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/methods/server/serverMethodsConfig.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SlackService;\nmodule.link(\"../../slack/server/SlackService\", {\n  default(v) {\n    SlackService = v;\n  }\n\n}, 1);\nlet ServerEventService;\nmodule.link(\"../../events/server/ServerEventService\", {\n  default(v) {\n    ServerEventService = v;\n  }\n\n}, 2);\nlet Method;\nmodule.link(\"../methods\", {\n  Method(v) {\n    Method = v;\n  }\n\n}, 3);\n\nconst logMethod = ({\n  context,\n  config,\n  params,\n  result,\n  error\n}) => {\n  if (Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment) {\n    console.log('---------------------- METHOD CALL ----------------------');\n    console.log(`METHOD Method ${config.name} called`);\n    console.log('METHOD Params:', params);\n    console.log('METHOD userId:', context.userId);\n    console.log('METHOD result:', result);\n    console.log('METHOD error:', error);\n  }\n};\n\nMethod.addAfterExecution(({\n  context,\n  config,\n  params,\n  result,\n  error\n}) => {\n  logMethod({\n    context,\n    config,\n    params,\n    result,\n    error\n  });\n\n  if (error) {\n    SlackService.sendError({\n      error,\n      additionalData: [`Server method error in method: \"${config.name}\"`, {\n        name: 'context',\n        data: context\n      }, {\n        name: 'params',\n        data: params\n      }],\n      userId: context.userId\n    });\n  }\n\n  if (!error) {\n    ServerEventService.emitMethod(config, {\n      context,\n      config,\n      params,\n      result,\n      error\n    });\n  }\n});","map":{"version":3,"sources":["imports/core/api/methods/server/serverMethodsConfig.js"],"names":["logMethod","error","Meteor","console","config","name","context","Method","SlackService","additionalData","data","params","userId","ServerEventService"],"mappings":"AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAMA,MAAMA,SAAS,GAAG,CAAC;AAAA,EAAA,OAAA;AAAA,EAAA,MAAA;AAAA,EAAA,MAAA;AAAA,EAAA,MAAA;AAAmCC,EAAAA;AAAnC,CAAD,KAAgD;AAChE,MAAIC,MAAM,CAANA,YAAAA,IAAuBA,MAAM,CAA7BA,SAAAA,IAA2CA,MAAM,CAArD,gBAAA,EAAwE;AACtEC,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,2DAAAA;AACAA,IAAAA,OAAO,CAAPA,GAAAA,CAAa,iBAAgBC,MAAM,CAACC,IAApCF,SAAAA;AACAA,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,gBAAAA,EAAAA,MAAAA;AACAA,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,gBAAAA,EAA8BG,OAAO,CAArCH,MAAAA;AACAA,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,gBAAAA,EAAAA,MAAAA;AACAA,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,eAAAA,EAAAA,KAAAA;AACD;AARH,CAAA;;AAWAI,MAAM,CAANA,iBAAAA,CAAyB,CAAC;AAAA,EAAA,OAAA;AAAA,EAAA,MAAA;AAAA,EAAA,MAAA;AAAA,EAAA,MAAA;AAAmCN,EAAAA;AAAnC,CAAD,KAAgD;AACvED,EAAAA,SAAS,CAAC;AAAA,IAAA,OAAA;AAAA,IAAA,MAAA;AAAA,IAAA,MAAA;AAAA,IAAA,MAAA;AAAmCC,IAAAA;AAAnC,GAAD,CAATD;;AAEA,MAAA,KAAA,EAAW;AACTQ,IAAAA,YAAY,CAAZA,SAAAA,CAAuB;AAAA,MAAA,KAAA;AAErBC,MAAAA,cAAc,EAAE,CACb,mCAAkCL,MAAM,CAACC,IAD5B,GAAA,EAEd;AAAEA,QAAAA,IAAI,EAAN,SAAA;AAAmBK,QAAAA,IAAI,EAAEJ;AAAzB,OAFc,EAGd;AAAED,QAAAA,IAAI,EAAN,QAAA;AAAkBK,QAAAA,IAAI,EAAEC;AAAxB,OAHc,CAFK;AAOrBC,MAAAA,MAAM,EAAEN,OAAO,CAACM;AAPK,KAAvBJ;AASD;;AAED,MAAI,CAAJ,KAAA,EAAY;AACVK,IAAAA,kBAAkB,CAAlBA,UAAAA,CAAAA,MAAAA,EAAsC;AAAA,MAAA,OAAA;AAAA,MAAA,MAAA;AAAA,MAAA,MAAA;AAAA,MAAA,MAAA;AAKpCZ,MAAAA;AALoC,KAAtCY;AAOD;AAvBHN,CAAAA","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport SlackService from '../../slack/server/SlackService';\nimport ServerEventService from '../../events/server/ServerEventService';\nimport { Method } from '../methods';\n\nconst logMethod = ({ context, config, params, result, error }) => {\n  if (Meteor.isProduction || Meteor.isStaging || Meteor.isDevEnvironment) {\n    console.log('---------------------- METHOD CALL ----------------------');\n    console.log(`METHOD Method ${config.name} called`);\n    console.log('METHOD Params:', params);\n    console.log('METHOD userId:', context.userId);\n    console.log('METHOD result:', result);\n    console.log('METHOD error:', error);\n  }\n};\n\nMethod.addAfterExecution(({ context, config, params, result, error }) => {\n  logMethod({ context, config, params, result, error });\n\n  if (error) {\n    SlackService.sendError({\n      error,\n      additionalData: [\n        `Server method error in method: \"${config.name}\"`,\n        { name: 'context', data: context },\n        { name: 'params', data: params },\n      ],\n      userId: context.userId,\n    });\n  }\n\n  if (!error) {\n    ServerEventService.emitMethod(config, {\n      context,\n      config,\n      params,\n      result,\n      error,\n    });\n  }\n});\n"]},"sourceType":"script","hash":"4928b39c1c8c2babc1ed05b405a6a1fff30032e1"}
