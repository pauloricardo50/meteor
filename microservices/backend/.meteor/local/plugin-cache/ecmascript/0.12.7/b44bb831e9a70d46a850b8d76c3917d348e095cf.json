{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/promotions/promotionClientHelpers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/promotions/promotionClientHelpers.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/promotions/promotionClientHelpers.js","inputSourceMap":{"version":3,"sources":["imports/core/api/promotions/promotionClientHelpers.js"],"names":["PROMOTION_INVITED_BY_TYPE","PROMOTION_LOT_STATUS","getCurrentUserPermissionsForPromotion","currentUser","promotions","promotionId","promotion","find","_id","$metadata","permissions","getPromotionCustomerOwnerType","invitedBy","userId","organisations","USER","organisationUserIds","reduce","userIds","users","map","includes","ORGANISATION","ANY","clientGetBestPromotionLotStatus","promotionOptions","loanId","myPromotionLotStatuses","arr","promotionLots","filter","attributedToLink","status","indexOf","SOLD","BOOKED","AVAILABLE","shouldHideForLotStatus","forLotStatus","promotionLotStatus","isAttributed","shouldAnonymize","customerOwnerType","displayCustomerNames","shouldHide"],"mappings":"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","sourcesContent":["import { PROMOTION_INVITED_BY_TYPE } from './promotionConstants';\nimport { PROMOTION_LOT_STATUS } from '../promotionLots/promotionLotConstants';\n\nexport const getCurrentUserPermissionsForPromotion = ({\n  currentUser: { promotions = [] } = {},\n  promotionId,\n}) => {\n  const promotion = promotions.find(({ _id }) => _id === promotionId);\n  return promotion && promotion.$metadata.permissions;\n};\n\nexport const getPromotionCustomerOwnerType = ({ invitedBy, currentUser }) => {\n  const { _id: userId, organisations = [] } = currentUser;\n\n  // Is invited by nobody\n  if (!invitedBy) {\n    return null;\n  }\n\n  // Is invited by user\n  if (invitedBy === userId) {\n    return PROMOTION_INVITED_BY_TYPE.USER;\n  }\n\n  const organisationUserIds = organisations.reduce(\n    (userIds, { users = [] }) => [...userIds, ...users.map(({ _id }) => _id)],\n    [],\n  );\n\n  // Is invited by organisation\n  if (organisationUserIds.includes(invitedBy)) {\n    return PROMOTION_INVITED_BY_TYPE.ORGANISATION;\n  }\n\n  // Is invited by someone else\n  return PROMOTION_INVITED_BY_TYPE.ANY;\n};\n\nexport const clientGetBestPromotionLotStatus = (promotionOptions, loanId) => {\n  const myPromotionLotStatuses = promotionOptions\n    .reduce((arr, { promotionLots }) => [...arr, ...promotionLots], [])\n    .filter(({ attributedToLink = {} }) => attributedToLink._id === loanId)\n    .map(({ status }) => status);\n\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.SOLD) >= 0) {\n    return PROMOTION_LOT_STATUS.SOLD;\n  }\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.BOOKED) >= 0) {\n    return PROMOTION_LOT_STATUS.BOOKED;\n  }\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.AVAILABLE) >= 0) {\n    return PROMOTION_LOT_STATUS.AVAILABLE;\n  }\n\n  // return undefined if no promotion lots are attributed to this user\n};\n\nconst shouldHideForLotStatus = (\n  { forLotStatus = [] },\n  promotionLotStatus,\n  isAttributed,\n) => {\n  if (\n    promotionLotStatus === PROMOTION_LOT_STATUS.AVAILABLE\n    && forLotStatus.includes(promotionLotStatus)\n  ) {\n    return false;\n  }\n\n  // For status BOOKED and SOLD, we check that it is attributed\n  if (forLotStatus.includes(promotionLotStatus) && isAttributed) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const shouldAnonymize = ({\n  customerOwnerType,\n  permissions,\n  promotionLotStatus = PROMOTION_LOT_STATUS.AVAILABLE,\n  isAttributed,\n}) => {\n  const { displayCustomerNames } = permissions;\n\n  if (displayCustomerNames === false || !customerOwnerType) {\n    return true;\n  }\n\n  const shouldHide = shouldHideForLotStatus(\n    displayCustomerNames,\n    promotionLotStatus,\n    isAttributed,\n  );\n\n  if (displayCustomerNames.invitedBy === PROMOTION_INVITED_BY_TYPE.ANY) {\n    return shouldHide;\n  }\n\n  switch (customerOwnerType) {\n  case PROMOTION_INVITED_BY_TYPE.USER:\n    return (\n      shouldHide\n        || ![\n          PROMOTION_INVITED_BY_TYPE.USER,\n          PROMOTION_INVITED_BY_TYPE.ORGANISATION,\n        ].includes(displayCustomerNames.invitedBy)\n    );\n  case PROMOTION_INVITED_BY_TYPE.ORGANISATION:\n    return (\n      shouldHide\n        || displayCustomerNames.invitedBy\n          !== PROMOTION_INVITED_BY_TYPE.ORGANISATION\n    );\n  default:\n    return true;\n  }\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/promotions/promotionClientHelpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/promotions/promotionClientHelpers.js"}},"code":"module.export({\n  getCurrentUserPermissionsForPromotion: () => getCurrentUserPermissionsForPromotion,\n  getPromotionCustomerOwnerType: () => getPromotionCustomerOwnerType,\n  clientGetBestPromotionLotStatus: () => clientGetBestPromotionLotStatus,\n  shouldAnonymize: () => shouldAnonymize\n});\nlet PROMOTION_INVITED_BY_TYPE;\nmodule.link(\"./promotionConstants\", {\n  PROMOTION_INVITED_BY_TYPE(v) {\n    PROMOTION_INVITED_BY_TYPE = v;\n  }\n\n}, 0);\nlet PROMOTION_LOT_STATUS;\nmodule.link(\"../promotionLots/promotionLotConstants\", {\n  PROMOTION_LOT_STATUS(v) {\n    PROMOTION_LOT_STATUS = v;\n  }\n\n}, 1);\n\nconst getCurrentUserPermissionsForPromotion = ({\n  currentUser: {\n    promotions = []\n  } = {},\n  promotionId\n}) => {\n  const promotion = promotions.find(({\n    _id\n  }) => _id === promotionId);\n  return promotion && promotion.$metadata.permissions;\n};\n\nconst getPromotionCustomerOwnerType = ({\n  invitedBy,\n  currentUser\n}) => {\n  const {\n    _id: userId,\n    organisations = []\n  } = currentUser; // Is invited by nobody\n\n  if (!invitedBy) {\n    return null;\n  } // Is invited by user\n\n\n  if (invitedBy === userId) {\n    return PROMOTION_INVITED_BY_TYPE.USER;\n  }\n\n  const organisationUserIds = organisations.reduce((userIds, {\n    users = []\n  }) => [...userIds, ...users.map(({\n    _id\n  }) => _id)], []); // Is invited by organisation\n\n  if (organisationUserIds.includes(invitedBy)) {\n    return PROMOTION_INVITED_BY_TYPE.ORGANISATION;\n  } // Is invited by someone else\n\n\n  return PROMOTION_INVITED_BY_TYPE.ANY;\n};\n\nconst clientGetBestPromotionLotStatus = (promotionOptions, loanId) => {\n  const myPromotionLotStatuses = promotionOptions.reduce((arr, {\n    promotionLots\n  }) => [...arr, ...promotionLots], []).filter(({\n    attributedToLink = {}\n  }) => attributedToLink._id === loanId).map(({\n    status\n  }) => status);\n\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.SOLD) >= 0) {\n    return PROMOTION_LOT_STATUS.SOLD;\n  }\n\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.BOOKED) >= 0) {\n    return PROMOTION_LOT_STATUS.BOOKED;\n  }\n\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.AVAILABLE) >= 0) {\n    return PROMOTION_LOT_STATUS.AVAILABLE;\n  } // return undefined if no promotion lots are attributed to this user\n\n};\n\nconst shouldHideForLotStatus = ({\n  forLotStatus = []\n}, promotionLotStatus, isAttributed) => {\n  if (promotionLotStatus === PROMOTION_LOT_STATUS.AVAILABLE && forLotStatus.includes(promotionLotStatus)) {\n    return false;\n  } // For status BOOKED and SOLD, we check that it is attributed\n\n\n  if (forLotStatus.includes(promotionLotStatus) && isAttributed) {\n    return false;\n  }\n\n  return true;\n};\n\nconst shouldAnonymize = ({\n  customerOwnerType,\n  permissions,\n  promotionLotStatus = PROMOTION_LOT_STATUS.AVAILABLE,\n  isAttributed\n}) => {\n  const {\n    displayCustomerNames\n  } = permissions;\n\n  if (displayCustomerNames === false || !customerOwnerType) {\n    return true;\n  }\n\n  const shouldHide = shouldHideForLotStatus(displayCustomerNames, promotionLotStatus, isAttributed);\n\n  if (displayCustomerNames.invitedBy === PROMOTION_INVITED_BY_TYPE.ANY) {\n    return shouldHide;\n  }\n\n  switch (customerOwnerType) {\n    case PROMOTION_INVITED_BY_TYPE.USER:\n      return shouldHide || ![PROMOTION_INVITED_BY_TYPE.USER, PROMOTION_INVITED_BY_TYPE.ORGANISATION].includes(displayCustomerNames.invitedBy);\n\n    case PROMOTION_INVITED_BY_TYPE.ORGANISATION:\n      return shouldHide || displayCustomerNames.invitedBy !== PROMOTION_INVITED_BY_TYPE.ORGANISATION;\n\n    default:\n      return true;\n  }\n};","map":{"version":3,"sources":["imports/core/api/promotions/promotionClientHelpers.js"],"names":["PROMOTION_INVITED_BY_TYPE","getCurrentUserPermissionsForPromotion","currentUser","promotions","promotionId","promotion","_id","getPromotionCustomerOwnerType","organisations","invitedBy","organisationUserIds","users","clientGetBestPromotionLotStatus","myPromotionLotStatuses","promotionLots","attributedToLink","status","PROMOTION_LOT_STATUS","shouldHideForLotStatus","forLotStatus","promotionLotStatus","shouldAnonymize","isAttributed","displayCustomerNames","shouldHide"],"mappings":"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","sourcesContent":["import { PROMOTION_INVITED_BY_TYPE } from './promotionConstants';\nimport { PROMOTION_LOT_STATUS } from '../promotionLots/promotionLotConstants';\n\nexport const getCurrentUserPermissionsForPromotion = ({\n  currentUser: { promotions = [] } = {},\n  promotionId,\n}) => {\n  const promotion = promotions.find(({ _id }) => _id === promotionId);\n  return promotion && promotion.$metadata.permissions;\n};\n\nexport const getPromotionCustomerOwnerType = ({ invitedBy, currentUser }) => {\n  const { _id: userId, organisations = [] } = currentUser;\n\n  // Is invited by nobody\n  if (!invitedBy) {\n    return null;\n  }\n\n  // Is invited by user\n  if (invitedBy === userId) {\n    return PROMOTION_INVITED_BY_TYPE.USER;\n  }\n\n  const organisationUserIds = organisations.reduce(\n    (userIds, { users = [] }) => [...userIds, ...users.map(({ _id }) => _id)],\n    [],\n  );\n\n  // Is invited by organisation\n  if (organisationUserIds.includes(invitedBy)) {\n    return PROMOTION_INVITED_BY_TYPE.ORGANISATION;\n  }\n\n  // Is invited by someone else\n  return PROMOTION_INVITED_BY_TYPE.ANY;\n};\n\nexport const clientGetBestPromotionLotStatus = (promotionOptions, loanId) => {\n  const myPromotionLotStatuses = promotionOptions\n    .reduce((arr, { promotionLots }) => [...arr, ...promotionLots], [])\n    .filter(({ attributedToLink = {} }) => attributedToLink._id === loanId)\n    .map(({ status }) => status);\n\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.SOLD) >= 0) {\n    return PROMOTION_LOT_STATUS.SOLD;\n  }\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.BOOKED) >= 0) {\n    return PROMOTION_LOT_STATUS.BOOKED;\n  }\n  if (myPromotionLotStatuses.indexOf(PROMOTION_LOT_STATUS.AVAILABLE) >= 0) {\n    return PROMOTION_LOT_STATUS.AVAILABLE;\n  }\n\n  // return undefined if no promotion lots are attributed to this user\n};\n\nconst shouldHideForLotStatus = (\n  { forLotStatus = [] },\n  promotionLotStatus,\n  isAttributed,\n) => {\n  if (\n    promotionLotStatus === PROMOTION_LOT_STATUS.AVAILABLE\n    && forLotStatus.includes(promotionLotStatus)\n  ) {\n    return false;\n  }\n\n  // For status BOOKED and SOLD, we check that it is attributed\n  if (forLotStatus.includes(promotionLotStatus) && isAttributed) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const shouldAnonymize = ({\n  customerOwnerType,\n  permissions,\n  promotionLotStatus = PROMOTION_LOT_STATUS.AVAILABLE,\n  isAttributed,\n}) => {\n  const { displayCustomerNames } = permissions;\n\n  if (displayCustomerNames === false || !customerOwnerType) {\n    return true;\n  }\n\n  const shouldHide = shouldHideForLotStatus(\n    displayCustomerNames,\n    promotionLotStatus,\n    isAttributed,\n  );\n\n  if (displayCustomerNames.invitedBy === PROMOTION_INVITED_BY_TYPE.ANY) {\n    return shouldHide;\n  }\n\n  switch (customerOwnerType) {\n  case PROMOTION_INVITED_BY_TYPE.USER:\n    return (\n      shouldHide\n        || ![\n          PROMOTION_INVITED_BY_TYPE.USER,\n          PROMOTION_INVITED_BY_TYPE.ORGANISATION,\n        ].includes(displayCustomerNames.invitedBy)\n    );\n  case PROMOTION_INVITED_BY_TYPE.ORGANISATION:\n    return (\n      shouldHide\n        || displayCustomerNames.invitedBy\n          !== PROMOTION_INVITED_BY_TYPE.ORGANISATION\n    );\n  default:\n    return true;\n  }\n};\n"]},"sourceType":"script","hash":"b44bb831e9a70d46a850b8d76c3917d348e095cf"}
