{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/promotions/server/test/promotionServerHelpers.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/promotions/server/test/promotionServerHelpers.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/promotions/server/test/promotionServerHelpers.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/promotions/server/test/promotionServerHelpers.test.js"],"names":["expect","resetDatabase","generator","getBestPromotionLotStatus","describe","beforeEach","it","properties","_id","loans","promotionOptions","promotionLots","status","propertyLinks","attributedTo","loanId","to","equal"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport generator from 'core/api/factories/index';\nimport { getBestPromotionLotStatus } from '../promotionServerHelpers';\n\ndescribe('promotionServerHelpers', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('getBestPromotionLotStatus', () => {\n    it('finds the best status of any promotionLot', () => {\n      generator({\n        properties: { _id: 'prop' },\n        loans: {\n          _id: 'loanId',\n          promotionOptions: [\n            {\n              promotionLots: {\n                status: 'SOLD',\n                propertyLinks: [{ _id: 'prop' }],\n                attributedTo: { _id: 'loanId' },\n              },\n            },\n            {\n              promotionLots: {\n                status: 'AVAILABLE',\n                propertyLinks: [{ _id: 'prop' }],\n                attributedTo: { _id: 'loanId' },\n              },\n            },\n          ],\n        },\n      });\n\n      expect(getBestPromotionLotStatus({ loanId: 'loanId' })).to.equal('SOLD');\n    });\n\n    it('finds the best status of any promotionLot 2', () => {\n      generator({\n        properties: { _id: 'prop' },\n        loans: {\n          _id: 'loanId',\n          promotionOptions: [\n            {\n              promotionLots: {\n                status: 'SOLD',\n                propertyLinks: [{ _id: 'prop' }],\n                attributedTo: { _id: 'loanId2' },\n              },\n            },\n            {\n              promotionLots: {\n                status: 'AVAILABLE',\n                propertyLinks: [{ _id: 'prop' }],\n                attributedTo: { _id: 'loanId' },\n              },\n            },\n          ],\n        },\n      });\n\n      expect(getBestPromotionLotStatus({ loanId: 'loanId' })).to.equal('AVAILABLE');\n    });\n\n    it('finds the best status of any promotionLot 3', () => {\n      generator({\n        properties: { _id: 'prop' },\n        loans: {\n          _id: 'loanId',\n          promotionOptions: [\n            {\n              promotionLots: {\n                status: 'BOOKED',\n                propertyLinks: [{ _id: 'prop' }],\n                attributedTo: { _id: 'loanId' },\n              },\n            },\n          ],\n        },\n      });\n\n      expect(getBestPromotionLotStatus({ loanId: 'loanId' })).to.equal('BOOKED');\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/promotions/server/test/promotionServerHelpers.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/promotions/server/test/promotionServerHelpers.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 1);\nlet generator;\nmodule.link(\"../../../factories\", {\n  default(v) {\n    generator = v;\n  }\n\n}, 2);\nlet getBestPromotionLotStatus;\nmodule.link(\"../promotionServerHelpers\", {\n  getBestPromotionLotStatus(v) {\n    getBestPromotionLotStatus = v;\n  }\n\n}, 3);\ndescribe('promotionServerHelpers', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n  describe('getBestPromotionLotStatus', () => {\n    it('finds the best status of any promotionLot', () => {\n      generator({\n        properties: {\n          _id: 'prop'\n        },\n        loans: {\n          _id: 'loanId',\n          promotionOptions: [{\n            promotionLots: {\n              status: 'SOLD',\n              propertyLinks: [{\n                _id: 'prop'\n              }],\n              attributedTo: {\n                _id: 'loanId'\n              }\n            }\n          }, {\n            promotionLots: {\n              status: 'AVAILABLE',\n              propertyLinks: [{\n                _id: 'prop'\n              }],\n              attributedTo: {\n                _id: 'loanId'\n              }\n            }\n          }]\n        }\n      });\n      expect(getBestPromotionLotStatus({\n        loanId: 'loanId'\n      })).to.equal('SOLD');\n    });\n    it('finds the best status of any promotionLot 2', () => {\n      generator({\n        properties: {\n          _id: 'prop'\n        },\n        loans: {\n          _id: 'loanId',\n          promotionOptions: [{\n            promotionLots: {\n              status: 'SOLD',\n              propertyLinks: [{\n                _id: 'prop'\n              }],\n              attributedTo: {\n                _id: 'loanId2'\n              }\n            }\n          }, {\n            promotionLots: {\n              status: 'AVAILABLE',\n              propertyLinks: [{\n                _id: 'prop'\n              }],\n              attributedTo: {\n                _id: 'loanId'\n              }\n            }\n          }]\n        }\n      });\n      expect(getBestPromotionLotStatus({\n        loanId: 'loanId'\n      })).to.equal('AVAILABLE');\n    });\n    it('finds the best status of any promotionLot 3', () => {\n      generator({\n        properties: {\n          _id: 'prop'\n        },\n        loans: {\n          _id: 'loanId',\n          promotionOptions: [{\n            promotionLots: {\n              status: 'BOOKED',\n              propertyLinks: [{\n                _id: 'prop'\n              }],\n              attributedTo: {\n                _id: 'loanId'\n              }\n            }\n          }]\n        }\n      });\n      expect(getBestPromotionLotStatus({\n        loanId: 'loanId'\n      })).to.equal('BOOKED');\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/api/promotions/server/test/promotionServerHelpers.test.js"],"names":["describe","beforeEach","resetDatabase","it","generator","properties","_id","loans","promotionOptions","promotionLots","status","propertyLinks","attributedTo","expect","getBestPromotionLotStatus","loanId"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport generator from 'core/api/factories/index';\nimport { getBestPromotionLotStatus } from '../promotionServerHelpers';\n\ndescribe('promotionServerHelpers', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('getBestPromotionLotStatus', () => {\n    it('finds the best status of any promotionLot', () => {\n      generator({\n        properties: { _id: 'prop' },\n        loans: {\n          _id: 'loanId',\n          promotionOptions: [\n            {\n              promotionLots: {\n                status: 'SOLD',\n                propertyLinks: [{ _id: 'prop' }],\n                attributedTo: { _id: 'loanId' },\n              },\n            },\n            {\n              promotionLots: {\n                status: 'AVAILABLE',\n                propertyLinks: [{ _id: 'prop' }],\n                attributedTo: { _id: 'loanId' },\n              },\n            },\n          ],\n        },\n      });\n\n      expect(getBestPromotionLotStatus({ loanId: 'loanId' })).to.equal('SOLD');\n    });\n\n    it('finds the best status of any promotionLot 2', () => {\n      generator({\n        properties: { _id: 'prop' },\n        loans: {\n          _id: 'loanId',\n          promotionOptions: [\n            {\n              promotionLots: {\n                status: 'SOLD',\n                propertyLinks: [{ _id: 'prop' }],\n                attributedTo: { _id: 'loanId2' },\n              },\n            },\n            {\n              promotionLots: {\n                status: 'AVAILABLE',\n                propertyLinks: [{ _id: 'prop' }],\n                attributedTo: { _id: 'loanId' },\n              },\n            },\n          ],\n        },\n      });\n\n      expect(getBestPromotionLotStatus({ loanId: 'loanId' })).to.equal('AVAILABLE');\n    });\n\n    it('finds the best status of any promotionLot 3', () => {\n      generator({\n        properties: { _id: 'prop' },\n        loans: {\n          _id: 'loanId',\n          promotionOptions: [\n            {\n              promotionLots: {\n                status: 'BOOKED',\n                propertyLinks: [{ _id: 'prop' }],\n                attributedTo: { _id: 'loanId' },\n              },\n            },\n          ],\n        },\n      });\n\n      expect(getBestPromotionLotStatus({ loanId: 'loanId' })).to.equal('BOOKED');\n    });\n  });\n});\n"]},"sourceType":"script","hash":"716361d34c095788c93eb1678f492716b82fb959"}
