{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/ContactButton/ContactButtonOverlay.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/ContactButton/ContactButtonOverlay.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/ContactButton/ContactButtonOverlay.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/ContactButton/ContactButtonOverlay.jsx"],"names":["React","cx","Icon","T","ContactButtonContent","ContactButtonOverlayProps","staff","name","email","phoneNumber","src","openContact","ContactButtonOverlay","gender","closed"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,IAAP;AACA,OAAOC,CAAP;AAEA,OAAOC,oBAAP;AAEA,KAAKC,yBAAL,GAAiC;AAC/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,MADD;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,WAAW,EAAE,MAHR;AAILC,IAAAA,GAAG,EAAE,MAJA;AAAA,GADwB;AAO/BC,EAAAA,WAAW,EAAE,OAPkB;AAAA,CAAjC;;AAUA,MAAMC,oBAAoB,GAAG,CAAC;AAC5BN,EAAAA,KAAK,EAAE;AAAEI,IAAAA,GAAF;AAAOH,IAAAA,IAAP;AAAaE,IAAAA,WAAb;AAA0BD,IAAAA,KAA1B;AAAiCK,IAAAA;AAAjC,MAA4C,EADvB;AAE5BF,EAAAA;AAF4B,CAG7B,EAAEN,yBAH0B,KAI3B,CAAC,GAAD,CACE,UAAU,CAACJ,EAAE,CAAC,gDAAD,EAAmD;AAC9Da,EAAAA,MAAM,EAAE,CAACH;AADqD,CAAnD,CAAH,CADZ;IAKE,CAAC,GAAD,CAAK,UAAU,KAAf;MACE,CAAC,GAAD,CAAK,IAAI,CAACD,GAAD,CAAT,CAAe,IAAI,CAACH,IAAD,CAAnB;MACA,CAAC,GAAD,CAAK,UAAU,MAAf;QACE,CAAC,EAAD,CAAI,UAAU,iCAAd,CAAgD,CAACA,IAAD,CAAM,EAAE,EAAF;QACtD,CAAC,CAAD,CAAG,UAAU,WAAb;UACE,CAAC,CAAD,CAAG,GAAG,2BAAN,CAAkC,OAAO,CAAC;AAAEM,UAAAA;AAAF,SAAD,CAAzC;QACF,EAAE,CAAF;MACF,EAAE,GAAF;IACF,EAAE,GAAF;IACA,CAAC,EAAD;IACA,CAAC,oBAAD,CACE,QAAQ,uBADV,CAEE,KAAK,CAAC,CAAC,IAAD,CAAM,KAAK,OAAX,CAAmB,UAAU,MAA7B,GAAD,CAFP,CAGE,KAAK,CAAE,OAAMJ,WAAY,EAApB,CAHP,CAIE,MAAM,CAACA,WAAD,CAJR;IAMA,CAAC,oBAAD,CACE,QAAQ,uBADV,CAEE,KAAK,CAAC,CAAC,IAAD,CAAM,KAAK,MAAX,CAAkB,UAAU,MAA5B,GAAD,CAFP,CAGE,KAAK,CAAE,UAASD,KAAM,EAAjB,CAHP,CAIE,MAAM,CAACA,KAAD,CAJR;EAMF,EAAE,GAAF,CA/BF;;AAkCA,eAAeI,oBAAf","sourcesContent":["// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport Icon from 'core/components/Icon';\nimport T from 'core/components/Translation';\n\nimport ContactButtonContent from './ContactButtonContent';\n\ntype ContactButtonOverlayProps = {\n  staff: {\n    name: string,\n    email: string,\n    phoneNumber: string,\n    src: string,\n  },\n  openContact: boolean,\n};\n\nconst ContactButtonOverlay = ({\n  staff: { src, name, phoneNumber, email, gender } = {},\n  openContact,\n}: ContactButtonOverlayProps) => (\n  <div\n    className={cx('card1 shadow-2 card-top contact-button-overlay', {\n      closed: !openContact,\n    })}\n  >\n    <div className=\"top\">\n      <img src={src} alt={name} />\n      <div className=\"text\">\n        <h4 className=\"fixed-size no-margin staff-name\">{name}</h4>\n        <p className=\"secondary\">\n          <T id=\"ContactButton.yourAdvisor\" values={{ gender }} />\n        </p>\n      </div>\n    </div>\n    <hr />\n    <ContactButtonContent\n      titleId=\"ContactButton.byPhone\"\n      icon={<Icon type=\"phone\" className=\"icon\" />}\n      href={`tel:${phoneNumber}`}\n      label={phoneNumber}\n    />\n    <ContactButtonContent\n      titleId=\"ContactButton.byEmail\"\n      icon={<Icon type=\"mail\" className=\"icon\" />}\n      href={`mailto:${email}`}\n      label={email}\n    />\n  </div>\n);\n\nexport default ContactButtonOverlay;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/ContactButton/ContactButtonOverlay.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/ContactButton/ContactButtonOverlay.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet cx;\nmodule.link(\"classnames\", {\n  default(v) {\n    cx = v;\n  }\n\n}, 1);\nlet Icon;\nmodule.link(\"../Icon\", {\n  default(v) {\n    Icon = v;\n  }\n\n}, 2);\nlet T;\nmodule.link(\"../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 3);\nlet ContactButtonContent;\nmodule.link(\"./ContactButtonContent\", {\n  default(v) {\n    ContactButtonContent = v;\n  }\n\n}, 4);\n\nconst ContactButtonOverlay = (_ref) => {\n  let {\n    staff: {\n      src,\n      name,\n      phoneNumber,\n      email,\n      gender\n    } = {},\n    openContact\n  } = _ref;\n  return React.createElement(\"div\", {\n    className: cx('card1 shadow-2 card-top contact-button-overlay', {\n      closed: !openContact\n    })\n  }, React.createElement(\"div\", {\n    className: \"top\"\n  }, React.createElement(\"img\", {\n    src: src,\n    alt: name\n  }), React.createElement(\"div\", {\n    className: \"text\"\n  }, React.createElement(\"h4\", {\n    className: \"fixed-size no-margin staff-name\"\n  }, name), React.createElement(\"p\", {\n    className: \"secondary\"\n  }, React.createElement(T, {\n    id: \"ContactButton.yourAdvisor\",\n    values: {\n      gender\n    }\n  })))), React.createElement(\"hr\", null), React.createElement(ContactButtonContent, {\n    titleId: \"ContactButton.byPhone\",\n    icon: React.createElement(Icon, {\n      type: \"phone\",\n      className: \"icon\"\n    }),\n    href: \"tel:\".concat(phoneNumber),\n    label: phoneNumber\n  }), React.createElement(ContactButtonContent, {\n    titleId: \"ContactButton.byEmail\",\n    icon: React.createElement(Icon, {\n      type: \"mail\",\n      className: \"icon\"\n    }),\n    href: \"mailto:\".concat(email),\n    label: email\n  }));\n};\n\nmodule.exportDefault(ContactButtonOverlay);","map":{"version":3,"sources":["imports/core/components/ContactButton/ContactButtonOverlay.jsx"],"names":["ContactButtonOverlay","staff","gender","openContact","cx","closed"],"mappings":"AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,EAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,EAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,IAAA;AAAA,MAAA,CAAA,IAAA,CAAA,SAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,CAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,CAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,oBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,oBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAkBA,MAAMA,oBAAoB,GAAG;AAAA,MAAC;AAC5BC,IAAAA,KAAK,EAAE;AAAA,MAAA,GAAA;AAAA,MAAA,IAAA;AAAA,MAAA,WAAA;AAAA,MAAA,KAAA;AAAiCC,MAAAA;AAAjC,QADqB,EAAA;AAE5BC,IAAAA;AAF4B,GAAD;AAAA,SAI3B;AACE,IAAA,SAAA,EAAWC,EAAE,CAAA,gDAAA,EAAmD;AAC9DC,MAAAA,MAAM,EAAE,CAACF;AADqD,KAAnD;AADf,KAKE;AAAK,IAAA,SAAA,EAAL;AAAA,KACE;AAAK,IAAA,GAAA,EAAL,GAAA;AAAe,IAAA,GAAA,EAAf;AAAA,IADF,EAEE;AAAK,IAAA,SAAA,EAAL;AAAA,KACE;AAAI,IAAA,SAAA,EAAJ;AAAA,KAAgD,IAAhD,CADF,EAEE;AAAG,IAAA,SAAA,EAAH;AAAA,KACE,oBAAA,CAAA;AAAG,IAAA,EAAA,EAAH,2BAAA;AAAkC,IAAA,MAAA,EAAQ;AAAED,MAAAA;AAAF;AAA1C,IADF,CAFF,CAFF,CALF,EAcE,+BAdF,EAeE,oBAAA,oBAAA;AACE,IAAA,OAAA,EADF,uBAAA;AAEE,IAAA,IAAA,EAAM,oBAAA,IAAA;AAAM,MAAA,IAAA,EAAN,OAAA;AAAmB,MAAA,SAAA,EAF3B;AAEQ,MAFR;AAGE,IAAA,IAAA,gBAHF,WAGE,CAHF;AAIE,IAAA,KAAA,EAJF;AAAA,IAfF,EAqBE,oBAAA,oBAAA;AACE,IAAA,OAAA,EADF,uBAAA;AAEE,IAAA,IAAA,EAAM,oBAAA,IAAA;AAAM,MAAA,IAAA,EAAN,MAAA;AAAkB,MAAA,SAAA,EAF1B;AAEQ,MAFR;AAGE,IAAA,IAAA,mBAHF,KAGE,CAHF;AAIE,IAAA,KAAA,EAJF;AAAA,IArBF,CAJ2B;AAAA,CAA7B;;AAlBA,MAAA,CAAA,aAAA,CAoDA,oBApDA","sourcesContent":["// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport Icon from 'core/components/Icon';\nimport T from 'core/components/Translation';\n\nimport ContactButtonContent from './ContactButtonContent';\n\ntype ContactButtonOverlayProps = {\n  staff: {\n    name: string,\n    email: string,\n    phoneNumber: string,\n    src: string,\n  },\n  openContact: boolean,\n};\n\nconst ContactButtonOverlay = ({\n  staff: { src, name, phoneNumber, email, gender } = {},\n  openContact,\n}: ContactButtonOverlayProps) => (\n  <div\n    className={cx('card1 shadow-2 card-top contact-button-overlay', {\n      closed: !openContact,\n    })}\n  >\n    <div className=\"top\">\n      <img src={src} alt={name} />\n      <div className=\"text\">\n        <h4 className=\"fixed-size no-margin staff-name\">{name}</h4>\n        <p className=\"secondary\">\n          <T id=\"ContactButton.yourAdvisor\" values={{ gender }} />\n        </p>\n      </div>\n    </div>\n    <hr />\n    <ContactButtonContent\n      titleId=\"ContactButton.byPhone\"\n      icon={<Icon type=\"phone\" className=\"icon\" />}\n      href={`tel:${phoneNumber}`}\n      label={phoneNumber}\n    />\n    <ContactButtonContent\n      titleId=\"ContactButton.byEmail\"\n      icon={<Icon type=\"mail\" className=\"icon\" />}\n      href={`mailto:${email}`}\n      label={email}\n    />\n  </div>\n);\n\nexport default ContactButtonOverlay;\n"]},"sourceType":"script","hash":"0fa8adefa301c357be822ac3d7501aa28d119faa"}
