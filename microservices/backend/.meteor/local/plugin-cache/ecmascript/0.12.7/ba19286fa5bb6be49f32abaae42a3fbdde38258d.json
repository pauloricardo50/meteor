{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/TranchePickerContainer.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/TranchePicker/TranchePickerContainer.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/TranchePickerContainer.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/TranchePicker/TranchePickerContainer.jsx"],"names":["React","withStateHandlers","compose","withProps","INTEREST_RATES","T","TranchePickerContainer","initialTranches","tranches","addTranche","value","type","removeTranche","typeToRemove","filter","setValue","reduce","acc","tranche","setType","oldType","newType","types","Object","values","options","map","id","label"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,OAA5B,EAAqCC,SAArC,QAAsD,WAAtD;AACA,SAASC,cAAT;AACA,OAAOC,CAAP;AAEA,MAAMC,sBAAsB,GAAGJ,OAAO,CACpCD,iBAAiB,CACf,CAAC;AAAEM,EAAAA,eAAe,GAAG;AAApB,CAAD,MAA+B;AAAEC,EAAAA,QAAQ,EAAED;AAAZ,CAA/B,CADe,EAEf;AACEE,EAAAA,UAAU,EAAE,CAAC;AAAED,IAAAA;AAAF,GAAD,KAAkB,OAAO;AACnCA,IAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAc;AAAEE,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,IAAI,EAAE;AAAlB,KAAd;AADyB,GAAP,CADhC;AAIEC,EAAAA,aAAa,EAAE,CAAC;AAAEJ,IAAAA;AAAF,GAAD,KAAkBK,YAAY,KAAK;AAChDL,IAAAA,QAAQ,EAAEA,QAAQ,CAACM,MAAT,CAAgB,CAAC;AAAEH,MAAAA;AAAF,KAAD,KAAcA,IAAI,KAAKE,YAAvC;AADsC,GAAL,CAJ/C;AAOEE,EAAAA,QAAQ,EAAE,CAAC;AAAEP,IAAAA;AAAF,GAAD,KAAkB,CAACG,IAAD,EAAOD,KAAP,MAAkB;AAC5CF,IAAAA,QAAQ,EAAEA,QAAQ,CAACQ,MAAT,CACR,CAACC,GAAD,EAAMC,OAAN,KACGA,OAAO,CAACP,IAAR,KAAiBA,IAAjB,GACG,CAAC,GAAGM,GAAJ,EAAS,EAAE,GAAGC,OAAL;AAAcR,MAAAA;AAAd,KAAT,CADH,GAEG,CAAC,GAAGO,GAAJ,EAASC,OAAT,CAJE,EAKR,EALQ;AADkC,GAAlB,CAP9B;AAgBEC,EAAAA,OAAO,EAAE,CAAC;AAAEX,IAAAA;AAAF,GAAD,KAAkB,CAACY,OAAD,EAAUC,OAAV,MAAuB;AAChDb,IAAAA,QAAQ,EAAEA,QAAQ,CAACQ,MAAT,CACR,CAACC,GAAD,EAAMC,OAAN,KACGA,OAAO,CAACP,IAAR,KAAiBS,OAAjB,GACG,CAAC,GAAGH,GAAJ,EAAS,EAAE,GAAGC,OAAL;AAAcP,MAAAA,IAAI,EAAEU;AAApB,KAAT,CADH,GAEG,CAAC,GAAGJ,GAAJ,EAASC,OAAT,CAJE,EAKR,EALQ;AADsC,GAAvB;AAhB7B,CAFe,CADmB,EA8BpCf,SAAS,CAAC,CAAC;AAAEmB,EAAAA,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcpB,cAAd;AAAV,CAAD,MAAgD;AACxDqB,EAAAA,OAAO,EAAEH,KAAK,CAACI,GAAN,CAAUf,IAAI,KAAK;AAC1BgB,IAAAA,EAAE,EAAEhB,IADsB;AAE1BiB,IAAAA,KAAK,EAAE,CAAC,CAAD,CAAG,GAAG,CAAE,kBAAiBjB,IAAK,EAAxB,CAAN;AAFmB,GAAL,CAAd;AAD+C,CAAhD,CAAD,CA9B2B,CAAtC;AAsCA,eAAeL,sBAAf","sourcesContent":["import React from 'react';\nimport { withStateHandlers, compose, withProps } from 'recompose';\nimport { INTEREST_RATES } from '../../api/constants';\nimport T from '../Translation';\n\nconst TranchePickerContainer = compose(\n  withStateHandlers(\n    ({ initialTranches = [] }) => ({ tranches: initialTranches }),\n    {\n      addTranche: ({ tranches }) => () => ({\n        tranches: [...tranches, { value: 0, type: '' }],\n      }),\n      removeTranche: ({ tranches }) => typeToRemove => ({\n        tranches: tranches.filter(({ type }) => type !== typeToRemove),\n      }),\n      setValue: ({ tranches }) => (type, value) => ({\n        tranches: tranches.reduce(\n          (acc, tranche) =>\n            (tranche.type === type\n              ? [...acc, { ...tranche, value }]\n              : [...acc, tranche]),\n          [],\n        ),\n      }),\n      setType: ({ tranches }) => (oldType, newType) => ({\n        tranches: tranches.reduce(\n          (acc, tranche) =>\n            (tranche.type === oldType\n              ? [...acc, { ...tranche, type: newType }]\n              : [...acc, tranche]),\n          [],\n        ),\n      }),\n    },\n  ),\n  withProps(({ types = Object.values(INTEREST_RATES) }) => ({\n    options: types.map(type => ({\n      id: type,\n      label: <T id={`InterestsTable.${type}`} />,\n    })),\n  })),\n);\n\nexport default TranchePickerContainer;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/TranchePickerContainer.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/TranchePicker/TranchePickerContainer.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar withStateHandlers, compose, withProps;\nmodule.link(\"recompose\", {\n  withStateHandlers: function (v) {\n    withStateHandlers = v;\n  },\n  compose: function (v) {\n    compose = v;\n  },\n  withProps: function (v) {\n    withProps = v;\n  }\n}, 1);\nvar INTEREST_RATES;\nmodule.link(\"../../api/constants\", {\n  INTEREST_RATES: function (v) {\n    INTEREST_RATES = v;\n  }\n}, 2);\nvar T;\nmodule.link(\"../Translation\", {\n  \"default\": function (v) {\n    T = v;\n  }\n}, 3);\nvar TranchePickerContainer = compose(withStateHandlers(function (_ref) {\n  var _ref$initialTranches = _ref.initialTranches,\n      initialTranches = _ref$initialTranches === void 0 ? [] : _ref$initialTranches;\n  return {\n    tranches: initialTranches\n  };\n}, {\n  addTranche: function (_ref2) {\n    var tranches = _ref2.tranches;\n    return function () {\n      return {\n        tranches: [].concat((0, _toConsumableArray2.default)(tranches), [{\n          value: 0,\n          type: ''\n        }])\n      };\n    };\n  },\n  removeTranche: function (_ref3) {\n    var tranches = _ref3.tranches;\n    return function (typeToRemove) {\n      return {\n        tranches: tranches.filter(function (_ref4) {\n          var type = _ref4.type;\n          return type !== typeToRemove;\n        })\n      };\n    };\n  },\n  setValue: function (_ref5) {\n    var tranches = _ref5.tranches;\n    return function (type, value) {\n      return {\n        tranches: tranches.reduce(function (acc, tranche) {\n          return tranche.type === type ? [].concat((0, _toConsumableArray2.default)(acc), [(0, _objectSpread2.default)({}, tranche, {\n            value: value\n          })]) : [].concat((0, _toConsumableArray2.default)(acc), [tranche]);\n        }, [])\n      };\n    };\n  },\n  setType: function (_ref6) {\n    var tranches = _ref6.tranches;\n    return function (oldType, newType) {\n      return {\n        tranches: tranches.reduce(function (acc, tranche) {\n          return tranche.type === oldType ? [].concat((0, _toConsumableArray2.default)(acc), [(0, _objectSpread2.default)({}, tranche, {\n            type: newType\n          })]) : [].concat((0, _toConsumableArray2.default)(acc), [tranche]);\n        }, [])\n      };\n    };\n  }\n}), withProps(function (_ref7) {\n  var _ref7$types = _ref7.types,\n      types = _ref7$types === void 0 ? Object.values(INTEREST_RATES) : _ref7$types;\n  return {\n    options: types.map(function (type) {\n      return {\n        id: type,\n        label: React.createElement(T, {\n          id: \"InterestsTable.\" + type\n        })\n      };\n    })\n  };\n}));\nmodule.exportDefault(TranchePickerContainer);","map":{"version":3,"sources":["imports/core/components/TranchePicker/TranchePickerContainer.jsx"],"names":["React","TranchePickerContainer","compose","withStateHandlers","initialTranches","tranches","addTranche","value","type","removeTranche","typeToRemove","setValue","setType","newType","withProps","types","Object","options","id","label"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStateHandlers, compose, withProps } from 'recompose';\nimport { INTEREST_RATES } from '../../api/constants';\nimport T from '../Translation';\n\nconst TranchePickerContainer = compose(\n  withStateHandlers(\n    ({ initialTranches = [] }) => ({ tranches: initialTranches }),\n    {\n      addTranche: ({ tranches }) => () => ({\n        tranches: [...tranches, { value: 0, type: '' }],\n      }),\n      removeTranche: ({ tranches }) => typeToRemove => ({\n        tranches: tranches.filter(({ type }) => type !== typeToRemove),\n      }),\n      setValue: ({ tranches }) => (type, value) => ({\n        tranches: tranches.reduce(\n          (acc, tranche) =>\n            (tranche.type === type\n              ? [...acc, { ...tranche, value }]\n              : [...acc, tranche]),\n          [],\n        ),\n      }),\n      setType: ({ tranches }) => (oldType, newType) => ({\n        tranches: tranches.reduce(\n          (acc, tranche) =>\n            (tranche.type === oldType\n              ? [...acc, { ...tranche, type: newType }]\n              : [...acc, tranche]),\n          [],\n        ),\n      }),\n    },\n  ),\n  withProps(({ types = Object.values(INTEREST_RATES) }) => ({\n    options: types.map(type => ({\n      id: type,\n      label: <T id={`InterestsTable.${type}`} />,\n    })),\n  })),\n);\n\nexport default TranchePickerContainer;\n"]},"sourceType":"script","hash":"ba19286fa5bb6be49f32abaae42a3fbdde38258d"}
