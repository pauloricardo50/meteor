{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/server/test/methodServerHelpers.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/helpers/server/test/methodServerHelpers.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/server/test/methodServerHelpers.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/helpers/server/test/methodServerHelpers.test.js"],"names":["expect","Meteor","Factory","resetDatabase","sinon","checkInsertUserId","describe","userId","user","admin","adminId","beforeEach","create","_id","stub","callsFake","afterEach","restore","it","to","equal","testUserId","throw"],"mappings":"AAAA;AACA,SAASA,MAAT,QAAuB,MAAvB;AAEA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT;AAEAC,QAAQ,CAAC,qBAAD,EAAwB,MAAM;AACpCA,EAAAA,QAAQ,CAAC,mBAAD,EAAsB,MAAM;AAClC,QAAIC,MAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,KAAJ;AACA,QAAIC,OAAJ;AAEAC,IAAAA,UAAU,CAAC,MAAM;AACfR,MAAAA,aAAa;AACbK,MAAAA,IAAI,GAAGN,OAAO,CAACU,MAAR,CAAe,MAAf,CAAP;AACAH,MAAAA,KAAK,GAAGP,OAAO,CAACU,MAAR,CAAe,OAAf,CAAR;AACAL,MAAAA,MAAM,GAAGC,IAAI,CAACK,GAAd;AACAH,MAAAA,OAAO,GAAGD,KAAK,CAACI,GAAhB;AACAT,MAAAA,KAAK,CAACU,IAAN,CAAWb,MAAX,EAAmB,QAAnB,EAA6Bc,SAA7B,CAAuC,MAAMR,MAA7C;AACD,KAPS,CAAV;AASAS,IAAAA,SAAS,CAAC,MAAM;AACdf,MAAAA,MAAM,CAACM,MAAP,CAAcU,OAAd;AACD,KAFQ,CAAT;AAIAC,IAAAA,EAAE,CAAC,qDAAD,EAAwD,MAAM;AAC9DlB,MAAAA,MAAM,CAACK,iBAAiB,EAAlB,CAAN,CAA4Bc,EAA5B,CAA+BC,KAA/B,CAAqCb,MAArC;AACD,KAFC,CAAF;AAIAW,IAAAA,EAAE,CAAC,8DAAD,EAAiE,MAAM;AACvEjB,MAAAA,MAAM,CAACM,MAAP,CAAcU,OAAd;AACAb,MAAAA,KAAK,CAACU,IAAN,CAAWb,MAAX,EAAmB,QAAnB,EAA6Bc,SAA7B,CAAuC,MAAML,OAA7C;AACA,YAAMW,UAAU,GAAG,MAAnB;AACArB,MAAAA,MAAM,CAACK,iBAAiB,CAACgB,UAAD,CAAlB,CAAN,CAAsCF,EAAtC,CAAyCC,KAAzC,CAA+CC,UAA/C;AACD,KALC,CAAF;AAOAH,IAAAA,EAAE,CAAC,sEAAD,EAAyE,MAAM;AAC/E,YAAMG,UAAU,GAAG,MAAnB;AACArB,MAAAA,MAAM,CAAC,MAAMK,iBAAiB,CAACgB,UAAD,CAAxB,CAAN,CAA4CF,EAA5C,CAA+CG,KAA/C,CAAqD,gBAArD;AACD,KAHC,CAAF;AAKAJ,IAAAA,EAAE,CAAC,6CAAD,EAAgD,MAAM;AACtDlB,MAAAA,MAAM,CAAC,MAAMK,iBAAiB,CAAC,KAAD,CAAxB,CAAN,CAAuCc,EAAvC,CAA0CG,KAA1C,CAAgD,gBAAhD;AACAtB,MAAAA,MAAM,CAAC,MAAMK,iBAAiB,CAAC,IAAD,CAAxB,CAAN,CAAsCc,EAAtC,CAAyCG,KAAzC,CAA+C,gBAA/C;AACAtB,MAAAA,MAAM,CAAC,MAAMK,iBAAiB,CAAC,CAAD,CAAxB,CAAN,CAAmCc,EAAnC,CAAsCG,KAAtC,CAA4C,gBAA5C;AACD,KAJC,CAAF;AAKD,GAxCO,CAAR;AAyCD,CA1CO,CAAR","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { Meteor } from 'meteor/meteor';\nimport { Factory } from 'meteor/dburles:factory';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\nimport sinon from 'sinon';\nimport { checkInsertUserId } from '../methodServerHelpers';\n\ndescribe('methodServerHelpers', () => {\n  describe('checkInsertUserId', () => {\n    let userId;\n    let user;\n    let admin;\n    let adminId;\n\n    beforeEach(() => {\n      resetDatabase();\n      user = Factory.create('user');\n      admin = Factory.create('admin');\n      userId = user._id;\n      adminId = admin._id;\n      sinon.stub(Meteor, 'userId').callsFake(() => userId);\n    });\n\n    afterEach(() => {\n      Meteor.userId.restore();\n    });\n\n    it('returns the logged in user if no argument is passed', () => {\n      expect(checkInsertUserId()).to.equal(userId);\n    });\n\n    it('returns the first argument if the logged in user is an admin', () => {\n      Meteor.userId.restore();\n      sinon.stub(Meteor, 'userId').callsFake(() => adminId);\n      const testUserId = 'test';\n      expect(checkInsertUserId(testUserId)).to.equal(testUserId);\n    });\n\n    it('throws if a userId is passed and the logged in user is a role===user', () => {\n      const testUserId = 'test';\n      expect(() => checkInsertUserId(testUserId)).to.throw('NOT_AUTHORIZED');\n    });\n\n    it('throws if userId is falsy but not undefined', () => {\n      expect(() => checkInsertUserId(false)).to.throw('NOT_AUTHORIZED');\n      expect(() => checkInsertUserId(null)).to.throw('NOT_AUTHORIZED');\n      expect(() => checkInsertUserId(0)).to.throw('NOT_AUTHORIZED');\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/server/test/methodServerHelpers.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/helpers/server/test/methodServerHelpers.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Factory;\nmodule.link(\"meteor/dburles:factory\", {\n  Factory(v) {\n    Factory = v;\n  }\n\n}, 2);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 3);\nlet sinon;\nmodule.link(\"sinon\", {\n  default(v) {\n    sinon = v;\n  }\n\n}, 4);\nlet checkInsertUserId;\nmodule.link(\"../methodServerHelpers\", {\n  checkInsertUserId(v) {\n    checkInsertUserId = v;\n  }\n\n}, 5);\ndescribe('methodServerHelpers', () => {\n  describe('checkInsertUserId', () => {\n    let userId;\n    let user;\n    let admin;\n    let adminId;\n    beforeEach(() => {\n      resetDatabase();\n      user = Factory.create('user');\n      admin = Factory.create('admin');\n      userId = user._id;\n      adminId = admin._id;\n      sinon.stub(Meteor, 'userId').callsFake(() => userId);\n    });\n    afterEach(() => {\n      Meteor.userId.restore();\n    });\n    it('returns the logged in user if no argument is passed', () => {\n      expect(checkInsertUserId()).to.equal(userId);\n    });\n    it('returns the first argument if the logged in user is an admin', () => {\n      Meteor.userId.restore();\n      sinon.stub(Meteor, 'userId').callsFake(() => adminId);\n      const testUserId = 'test';\n      expect(checkInsertUserId(testUserId)).to.equal(testUserId);\n    });\n    it('throws if a userId is passed and the logged in user is a role===user', () => {\n      const testUserId = 'test';\n      expect(() => checkInsertUserId(testUserId)).to.throw('NOT_AUTHORIZED');\n    });\n    it('throws if userId is falsy but not undefined', () => {\n      expect(() => checkInsertUserId(false)).to.throw('NOT_AUTHORIZED');\n      expect(() => checkInsertUserId(null)).to.throw('NOT_AUTHORIZED');\n      expect(() => checkInsertUserId(0)).to.throw('NOT_AUTHORIZED');\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/api/helpers/server/test/methodServerHelpers.test.js"],"names":["describe","beforeEach","resetDatabase","user","Factory","admin","userId","adminId","sinon","afterEach","Meteor","it","expect","checkInsertUserId","testUserId"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { Meteor } from 'meteor/meteor';\nimport { Factory } from 'meteor/dburles:factory';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\nimport sinon from 'sinon';\nimport { checkInsertUserId } from '../methodServerHelpers';\n\ndescribe('methodServerHelpers', () => {\n  describe('checkInsertUserId', () => {\n    let userId;\n    let user;\n    let admin;\n    let adminId;\n\n    beforeEach(() => {\n      resetDatabase();\n      user = Factory.create('user');\n      admin = Factory.create('admin');\n      userId = user._id;\n      adminId = admin._id;\n      sinon.stub(Meteor, 'userId').callsFake(() => userId);\n    });\n\n    afterEach(() => {\n      Meteor.userId.restore();\n    });\n\n    it('returns the logged in user if no argument is passed', () => {\n      expect(checkInsertUserId()).to.equal(userId);\n    });\n\n    it('returns the first argument if the logged in user is an admin', () => {\n      Meteor.userId.restore();\n      sinon.stub(Meteor, 'userId').callsFake(() => adminId);\n      const testUserId = 'test';\n      expect(checkInsertUserId(testUserId)).to.equal(testUserId);\n    });\n\n    it('throws if a userId is passed and the logged in user is a role===user', () => {\n      const testUserId = 'test';\n      expect(() => checkInsertUserId(testUserId)).to.throw('NOT_AUTHORIZED');\n    });\n\n    it('throws if userId is falsy but not undefined', () => {\n      expect(() => checkInsertUserId(false)).to.throw('NOT_AUTHORIZED');\n      expect(() => checkInsertUserId(null)).to.throw('NOT_AUTHORIZED');\n      expect(() => checkInsertUserId(0)).to.throw('NOT_AUTHORIZED');\n    });\n  });\n});\n"]},"sourceType":"script","hash":"58cc1a82f1114a3a387af801c78bc62ba5178246"}
