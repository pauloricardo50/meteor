{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/AutoFormComponents.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/AutoForm2/AutoFormComponents.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/AutoFormComponents.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/AutoForm2/AutoFormComponents.jsx"],"names":["React","useState","intlShape","compose","getContext","connectField","nothing","AutoField","BoolField","DateField","PercentField","CUSTOM_AUTOFIELD_TYPES","COMPONENT_TYPES","FIELDS_TO_IGNORE","CustomSelectField","OptimizedListField","CustomNestField","getLabel","getPlaceholder","MoneyInput","HtmlPreview","ignoreProps","container","OptimizedMoneyInput","OptimizedDateField","OptimizedPercentField","OptimizedBoolField","determineComponentFromProps","allowedValues","customAllowedValues","field","uniforms","fieldType","Component","type","SELECT","props","variant","DATE","placeholder","PERCENT","MONEY","margin","MONEY_DECIMAL","decimal","HTML_PREVIEW","Array","ARRAY","Object","Boolean","render","RENDER","makeCustomAutoField","labels","intlPrefix","CustomAutoField","schema","model","state","submitting","condition","customAutoValue","getField","name","additionalProps","autoValue","label","parent","Number","slice","value","shrink","contextTypes","intl","includeInChain","includeParent"],"mappings":"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","sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { intlShape } from 'react-intl';\nimport { compose, getContext } from 'recompose';\nimport connectField from 'uniforms/connectField';\nimport nothing from 'uniforms/nothing';\nimport AutoField from 'uniforms-material/AutoField';\nimport BoolField from 'uniforms-material/BoolField';\n\nimport DateField from '../DateField';\nimport { PercentField } from '../PercentInput';\nimport {\n  CUSTOM_AUTOFIELD_TYPES,\n  COMPONENT_TYPES,\n  FIELDS_TO_IGNORE,\n} from './constants';\nimport CustomSelectField from './CustomSelectField';\nimport { OptimizedListField } from './CustomListField';\nimport CustomNestField from './CustomNestField';\nimport { getLabel, getPlaceholder } from './autoFormHelpers';\nimport MoneyInput from '../MoneyInput';\nimport HtmlPreview from '../HtmlPreview';\nimport { ignoreProps } from '../../containers/updateForProps';\n\nconst container = ignoreProps(FIELDS_TO_IGNORE);\n\nconst OptimizedMoneyInput = container(MoneyInput);\nconst OptimizedDateField = container(DateField);\nconst OptimizedPercentField = container(PercentField);\nconst OptimizedBoolField = container(BoolField);\n\nconst determineComponentFromProps = ({\n  allowedValues,\n  customAllowedValues,\n  field: { uniforms },\n  fieldType,\n}) => {\n  if (allowedValues || customAllowedValues) {\n    return {\n      Component: CustomSelectField,\n      type: COMPONENT_TYPES.SELECT,\n      props: { variant: 'outlined' },\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.DATE) {\n    return {\n      Component: OptimizedDateField,\n      type: COMPONENT_TYPES.DATE,\n      props: { placeholder: null, variant: 'outlined' },\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.PERCENT) {\n    return { Component: OptimizedPercentField, type: COMPONENT_TYPES.PERCENT };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.MONEY) {\n    return {\n      Component: OptimizedMoneyInput,\n      type: COMPONENT_TYPES.MONEY,\n      props: { margin: 'normal', variant: 'outlined' },\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.MONEY_DECIMAL) {\n    return {\n      Component: OptimizedMoneyInput,\n      type: COMPONENT_TYPES.MONEY,\n      props: { margin: 'normal', decimal: true, variant: 'outlined' },\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.HTML_PREVIEW) {\n    return {\n      Component: HtmlPreview,\n      type: COMPONENT_TYPES.HTML_PREVIEW,\n      props: { placeholder: null },\n    };\n  }\n\n  if (fieldType === Array) {\n    return { Component: OptimizedListField, type: COMPONENT_TYPES.ARRAY };\n  }\n\n  if (fieldType === Object) {\n    return { Component: CustomNestField, type: COMPONENT_TYPES.ARRAY };\n  }\n\n  if (fieldType === Boolean) {\n    return { Component: OptimizedBoolField };\n  }\n\n  if (uniforms && uniforms.render) {\n    return {\n      Component: uniforms.render,\n      type: COMPONENT_TYPES.RENDER,\n      props: { placeholder: null },\n    };\n  }\n\n  return { Component: false, type: null, props: { variant: 'outlined' } };\n};\n\nexport const makeCustomAutoField = ({ labels = {}, intlPrefix } = {}) => {\n  const CustomAutoField = (\n    props,\n    {\n      uniforms: {\n        schema,\n        model,\n        state: { submitting },\n      },\n    },\n  ) => {\n    const { condition, customAllowedValues, customAutoValue } = schema.getField(props.name);\n    const { allowedValues, field, fieldType, margin = 'normal' } = props;\n    let [{ Component, type, props: additionalProps = {} }] = useState(determineComponentFromProps({\n      allowedValues,\n      customAllowedValues,\n      field,\n      fieldType,\n    }));\n\n    Component = Component || AutoField;\n\n    let autoValue;\n\n    if (typeof customAutoValue === 'function') {\n      autoValue = customAutoValue(model);\n    }\n\n    // Don't recalculate these\n    const [label] = useState(getLabel({\n      ...props,\n      ...additionalProps,\n      intlPrefix,\n      label: labels[props.name],\n    }));\n    const [placeholder] = useState(getPlaceholder({ ...props, ...additionalProps, intlPrefix, type }));\n\n    if (\n      typeof condition === 'function'\n      && !condition(model, props.parent && Number(props.parent.name.slice(-1)))\n    ) {\n      return nothing;\n    }\n\n    return (\n      <Component\n        {...additionalProps}\n        {...props}\n        {...(autoValue ? { value: autoValue } : {})}\n        model={model}\n        submitting={submitting}\n        customAllowedValues={customAllowedValues}\n        label={label}\n        placeholder={placeholder}\n        InputLabelProps={{ shrink: true }}\n        margin={margin}\n      />\n    );\n  };\n\n  CustomAutoField.contextTypes = AutoField.contextTypes;\n\n  return compose(\n    getContext({ intl: intlShape, ...AutoField.contextTypes }),\n    connectField,\n  )(CustomAutoField, { includeInChain: false, includeParent: true });\n};\n\nexport const CustomAutoField = makeCustomAutoField({});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/AutoFormComponents.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/AutoForm2/AutoFormComponents.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  makeCustomAutoField: () => makeCustomAutoField,\n  CustomAutoField: () => CustomAutoField\n});\nlet React, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 0);\nlet intlShape;\nmodule.link(\"react-intl\", {\n  intlShape(v) {\n    intlShape = v;\n  }\n\n}, 1);\nlet compose, getContext;\nmodule.link(\"recompose\", {\n  compose(v) {\n    compose = v;\n  },\n\n  getContext(v) {\n    getContext = v;\n  }\n\n}, 2);\nlet connectField;\nmodule.link(\"uniforms/connectField\", {\n  default(v) {\n    connectField = v;\n  }\n\n}, 3);\nlet nothing;\nmodule.link(\"uniforms/nothing\", {\n  default(v) {\n    nothing = v;\n  }\n\n}, 4);\nlet AutoField;\nmodule.link(\"uniforms-material/AutoField\", {\n  default(v) {\n    AutoField = v;\n  }\n\n}, 5);\nlet BoolField;\nmodule.link(\"uniforms-material/BoolField\", {\n  default(v) {\n    BoolField = v;\n  }\n\n}, 6);\nlet DateField;\nmodule.link(\"../DateField\", {\n  default(v) {\n    DateField = v;\n  }\n\n}, 7);\nlet PercentField;\nmodule.link(\"../PercentInput\", {\n  PercentField(v) {\n    PercentField = v;\n  }\n\n}, 8);\nlet CUSTOM_AUTOFIELD_TYPES, COMPONENT_TYPES, FIELDS_TO_IGNORE;\nmodule.link(\"./constants\", {\n  CUSTOM_AUTOFIELD_TYPES(v) {\n    CUSTOM_AUTOFIELD_TYPES = v;\n  },\n\n  COMPONENT_TYPES(v) {\n    COMPONENT_TYPES = v;\n  },\n\n  FIELDS_TO_IGNORE(v) {\n    FIELDS_TO_IGNORE = v;\n  }\n\n}, 9);\nlet CustomSelectField;\nmodule.link(\"./CustomSelectField\", {\n  default(v) {\n    CustomSelectField = v;\n  }\n\n}, 10);\nlet OptimizedListField;\nmodule.link(\"./CustomListField\", {\n  OptimizedListField(v) {\n    OptimizedListField = v;\n  }\n\n}, 11);\nlet CustomNestField;\nmodule.link(\"./CustomNestField\", {\n  default(v) {\n    CustomNestField = v;\n  }\n\n}, 12);\nlet getLabel, getPlaceholder;\nmodule.link(\"./autoFormHelpers\", {\n  getLabel(v) {\n    getLabel = v;\n  },\n\n  getPlaceholder(v) {\n    getPlaceholder = v;\n  }\n\n}, 13);\nlet MoneyInput;\nmodule.link(\"../MoneyInput\", {\n  default(v) {\n    MoneyInput = v;\n  }\n\n}, 14);\nlet HtmlPreview;\nmodule.link(\"../HtmlPreview\", {\n  default(v) {\n    HtmlPreview = v;\n  }\n\n}, 15);\nlet ignoreProps;\nmodule.link(\"../../containers/updateForProps\", {\n  ignoreProps(v) {\n    ignoreProps = v;\n  }\n\n}, 16);\nconst container = ignoreProps(FIELDS_TO_IGNORE);\nconst OptimizedMoneyInput = container(MoneyInput);\nconst OptimizedDateField = container(DateField);\nconst OptimizedPercentField = container(PercentField);\nconst OptimizedBoolField = container(BoolField);\n\nconst determineComponentFromProps = (_ref) => {\n  let {\n    allowedValues,\n    customAllowedValues,\n    field: {\n      uniforms\n    },\n    fieldType\n  } = _ref;\n\n  if (allowedValues || customAllowedValues) {\n    return {\n      Component: CustomSelectField,\n      type: COMPONENT_TYPES.SELECT,\n      props: {\n        variant: 'outlined'\n      }\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.DATE) {\n    return {\n      Component: OptimizedDateField,\n      type: COMPONENT_TYPES.DATE,\n      props: {\n        placeholder: null,\n        variant: 'outlined'\n      }\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.PERCENT) {\n    return {\n      Component: OptimizedPercentField,\n      type: COMPONENT_TYPES.PERCENT\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.MONEY) {\n    return {\n      Component: OptimizedMoneyInput,\n      type: COMPONENT_TYPES.MONEY,\n      props: {\n        margin: 'normal',\n        variant: 'outlined'\n      }\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.MONEY_DECIMAL) {\n    return {\n      Component: OptimizedMoneyInput,\n      type: COMPONENT_TYPES.MONEY,\n      props: {\n        margin: 'normal',\n        decimal: true,\n        variant: 'outlined'\n      }\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.HTML_PREVIEW) {\n    return {\n      Component: HtmlPreview,\n      type: COMPONENT_TYPES.HTML_PREVIEW,\n      props: {\n        placeholder: null\n      }\n    };\n  }\n\n  if (fieldType === Array) {\n    return {\n      Component: OptimizedListField,\n      type: COMPONENT_TYPES.ARRAY\n    };\n  }\n\n  if (fieldType === Object) {\n    return {\n      Component: CustomNestField,\n      type: COMPONENT_TYPES.ARRAY\n    };\n  }\n\n  if (fieldType === Boolean) {\n    return {\n      Component: OptimizedBoolField\n    };\n  }\n\n  if (uniforms && uniforms.render) {\n    return {\n      Component: uniforms.render,\n      type: COMPONENT_TYPES.RENDER,\n      props: {\n        placeholder: null\n      }\n    };\n  }\n\n  return {\n    Component: false,\n    type: null,\n    props: {\n      variant: 'outlined'\n    }\n  };\n};\n\nconst makeCustomAutoField = function () {\n  let {\n    labels = {},\n    intlPrefix\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const CustomAutoField = (props, _ref2) => {\n    let {\n      uniforms: {\n        schema,\n        model,\n        state: {\n          submitting\n        }\n      }\n    } = _ref2;\n    const {\n      condition,\n      customAllowedValues,\n      customAutoValue\n    } = schema.getField(props.name);\n    const {\n      allowedValues,\n      field,\n      fieldType,\n      margin = 'normal'\n    } = props;\n    let [{\n      Component,\n      type,\n      props: additionalProps = {}\n    }] = useState(determineComponentFromProps({\n      allowedValues,\n      customAllowedValues,\n      field,\n      fieldType\n    }));\n    Component = Component || AutoField;\n    let autoValue;\n\n    if (typeof customAutoValue === 'function') {\n      autoValue = customAutoValue(model);\n    } // Don't recalculate these\n\n\n    const [label] = useState(getLabel((0, _objectSpread2.default)({}, props, additionalProps, {\n      intlPrefix,\n      label: labels[props.name]\n    })));\n    const [placeholder] = useState(getPlaceholder((0, _objectSpread2.default)({}, props, additionalProps, {\n      intlPrefix,\n      type\n    })));\n\n    if (typeof condition === 'function' && !condition(model, props.parent && Number(props.parent.name.slice(-1)))) {\n      return nothing;\n    }\n\n    return React.createElement(Component, (0, _extends2.default)({}, additionalProps, props, autoValue ? {\n      value: autoValue\n    } : {}, {\n      model: model,\n      submitting: submitting,\n      customAllowedValues: customAllowedValues,\n      label: label,\n      placeholder: placeholder,\n      InputLabelProps: {\n        shrink: true\n      },\n      margin: margin\n    }));\n  };\n\n  CustomAutoField.contextTypes = AutoField.contextTypes;\n  return compose(getContext((0, _objectSpread2.default)({\n    intl: intlShape\n  }, AutoField.contextTypes)), connectField)(CustomAutoField, {\n    includeInChain: false,\n    includeParent: true\n  });\n};\n\nconst CustomAutoField = makeCustomAutoField({});","map":{"version":3,"sources":["imports/core/components/AutoForm2/AutoFormComponents.jsx"],"names":["container","ignoreProps","OptimizedMoneyInput","OptimizedDateField","OptimizedPercentField","OptimizedBoolField","determineComponentFromProps","field","uniforms","fieldType","allowedValues","Component","type","COMPONENT_TYPES","props","variant","CUSTOM_AUTOFIELD_TYPES","placeholder","PERCENT","margin","decimal","ARRAY","makeCustomAutoField","labels","intlPrefix","CustomAutoField","state","submitting","customAutoValue","schema","additionalProps","useState","autoValue","getLabel","label","getPlaceholder","condition","Number","value","shrink","AutoField","getContext","intl","contextTypes","includeInChain","includeParent"],"mappings":"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","sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { intlShape } from 'react-intl';\nimport { compose, getContext } from 'recompose';\nimport connectField from 'uniforms/connectField';\nimport nothing from 'uniforms/nothing';\nimport AutoField from 'uniforms-material/AutoField';\nimport BoolField from 'uniforms-material/BoolField';\n\nimport DateField from '../DateField';\nimport { PercentField } from '../PercentInput';\nimport {\n  CUSTOM_AUTOFIELD_TYPES,\n  COMPONENT_TYPES,\n  FIELDS_TO_IGNORE,\n} from './constants';\nimport CustomSelectField from './CustomSelectField';\nimport { OptimizedListField } from './CustomListField';\nimport CustomNestField from './CustomNestField';\nimport { getLabel, getPlaceholder } from './autoFormHelpers';\nimport MoneyInput from '../MoneyInput';\nimport HtmlPreview from '../HtmlPreview';\nimport { ignoreProps } from '../../containers/updateForProps';\n\nconst container = ignoreProps(FIELDS_TO_IGNORE);\n\nconst OptimizedMoneyInput = container(MoneyInput);\nconst OptimizedDateField = container(DateField);\nconst OptimizedPercentField = container(PercentField);\nconst OptimizedBoolField = container(BoolField);\n\nconst determineComponentFromProps = ({\n  allowedValues,\n  customAllowedValues,\n  field: { uniforms },\n  fieldType,\n}) => {\n  if (allowedValues || customAllowedValues) {\n    return {\n      Component: CustomSelectField,\n      type: COMPONENT_TYPES.SELECT,\n      props: { variant: 'outlined' },\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.DATE) {\n    return {\n      Component: OptimizedDateField,\n      type: COMPONENT_TYPES.DATE,\n      props: { placeholder: null, variant: 'outlined' },\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.PERCENT) {\n    return { Component: OptimizedPercentField, type: COMPONENT_TYPES.PERCENT };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.MONEY) {\n    return {\n      Component: OptimizedMoneyInput,\n      type: COMPONENT_TYPES.MONEY,\n      props: { margin: 'normal', variant: 'outlined' },\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.MONEY_DECIMAL) {\n    return {\n      Component: OptimizedMoneyInput,\n      type: COMPONENT_TYPES.MONEY,\n      props: { margin: 'normal', decimal: true, variant: 'outlined' },\n    };\n  }\n\n  if (uniforms && uniforms.type === CUSTOM_AUTOFIELD_TYPES.HTML_PREVIEW) {\n    return {\n      Component: HtmlPreview,\n      type: COMPONENT_TYPES.HTML_PREVIEW,\n      props: { placeholder: null },\n    };\n  }\n\n  if (fieldType === Array) {\n    return { Component: OptimizedListField, type: COMPONENT_TYPES.ARRAY };\n  }\n\n  if (fieldType === Object) {\n    return { Component: CustomNestField, type: COMPONENT_TYPES.ARRAY };\n  }\n\n  if (fieldType === Boolean) {\n    return { Component: OptimizedBoolField };\n  }\n\n  if (uniforms && uniforms.render) {\n    return {\n      Component: uniforms.render,\n      type: COMPONENT_TYPES.RENDER,\n      props: { placeholder: null },\n    };\n  }\n\n  return { Component: false, type: null, props: { variant: 'outlined' } };\n};\n\nexport const makeCustomAutoField = ({ labels = {}, intlPrefix } = {}) => {\n  const CustomAutoField = (\n    props,\n    {\n      uniforms: {\n        schema,\n        model,\n        state: { submitting },\n      },\n    },\n  ) => {\n    const { condition, customAllowedValues, customAutoValue } = schema.getField(props.name);\n    const { allowedValues, field, fieldType, margin = 'normal' } = props;\n    let [{ Component, type, props: additionalProps = {} }] = useState(determineComponentFromProps({\n      allowedValues,\n      customAllowedValues,\n      field,\n      fieldType,\n    }));\n\n    Component = Component || AutoField;\n\n    let autoValue;\n\n    if (typeof customAutoValue === 'function') {\n      autoValue = customAutoValue(model);\n    }\n\n    // Don't recalculate these\n    const [label] = useState(getLabel({\n      ...props,\n      ...additionalProps,\n      intlPrefix,\n      label: labels[props.name],\n    }));\n    const [placeholder] = useState(getPlaceholder({ ...props, ...additionalProps, intlPrefix, type }));\n\n    if (\n      typeof condition === 'function'\n      && !condition(model, props.parent && Number(props.parent.name.slice(-1)))\n    ) {\n      return nothing;\n    }\n\n    return (\n      <Component\n        {...additionalProps}\n        {...props}\n        {...(autoValue ? { value: autoValue } : {})}\n        model={model}\n        submitting={submitting}\n        customAllowedValues={customAllowedValues}\n        label={label}\n        placeholder={placeholder}\n        InputLabelProps={{ shrink: true }}\n        margin={margin}\n      />\n    );\n  };\n\n  CustomAutoField.contextTypes = AutoField.contextTypes;\n\n  return compose(\n    getContext({ intl: intlShape, ...AutoField.contextTypes }),\n    connectField,\n  )(CustomAutoField, { includeInChain: false, includeParent: true });\n};\n\nexport const CustomAutoField = makeCustomAutoField({});\n"]},"sourceType":"script","hash":"91f2d141655f081037082c4665b215c62e6e8459"}
