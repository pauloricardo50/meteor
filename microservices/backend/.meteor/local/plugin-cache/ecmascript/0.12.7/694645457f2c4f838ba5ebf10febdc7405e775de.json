{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/notaryFees/NotaryFeesCalculator.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/utils/notaryFees/NotaryFeesCalculator.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/notaryFees/NotaryFeesCalculator.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/notaryFees/NotaryFeesCalculator.js"],"names":["cantonConfigs","Calculator","NOTARY_FEES","PURCHASE_TYPE","roundToCents","val","Number","toFixed","roundObjectKeys","obj","Object","keys","reduce","newObj","key","NotaryFeesCalculator","constructor","canton","init","config","assign","hasDetailedConfig","shouldUseConstructionMath","loan","structureId","hasDetailedValue","hasDetailedPropertyValue","shouldUseConstructionNotaryFees","getNotaryFeesForLoan","propertyValue","selectPropertyValue","getDefaultFees","residenceType","mortgageNoteIncrease","getMortgageNoteIncrease","buyersContractFees","mortgageNoteFees","deductions","getDeductions","propertyTransferTax","propertyRegistrationTax","roundedResult","total","estimate","getNotaryFeesWithoutLoan","buyersContractFeesAcquisition","purchaseType","REFINANCING","landValue","constructionValue","additionalMargin","selectProperty","buyersContractFeesConstruction","notaryIncomeFromProperty","landRegistryPropertyTax","additionalFees","propertyConstructionTax","mortgageNoteRegistrationTax","notaryIncomeFromMortgageNote","landRegistryMortgageNoteTax","buyersContractDeductions","transferTax","mortgageNoteDeductions"],"mappings":"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","sourcesContent":["import * as cantonConfigs from './cantonConfigs';\nimport Calculator from '../Calculator';\nimport { NOTARY_FEES } from '../../config/financeConstants';\nimport { PURCHASE_TYPE } from '../../api/constants';\n\nconst roundToCents = val => Number(val.toFixed(2));\n\nconst roundObjectKeys = obj =>\n  Object.keys(obj).reduce(\n    (newObj, key) => ({\n      ...newObj,\n      [key]: typeof obj[key] === 'number' ? roundToCents(obj[key]) : obj[key],\n    }),\n    {},\n  );\n\nclass NotaryFeesCalculator {\n  constructor({ canton }) {\n    this.init(canton);\n  }\n\n  init(canton) {\n    const config = cantonConfigs[canton];\n    this.canton = canton;\n\n    Object.assign(this, config);\n  }\n\n  hasDetailedConfig() {\n    return cantonConfigs[this.canton];\n  }\n\n  shouldUseConstructionMath({ loan, structureId }) {\n    const hasDetailedValue = Calculator.hasDetailedPropertyValue({\n      loan,\n      structureId,\n    });\n    const shouldUseConstructionNotaryFees = Calculator.shouldUseConstructionNotaryFees({ loan, structureId });\n\n    return hasDetailedValue && shouldUseConstructionNotaryFees;\n  }\n\n  getNotaryFeesForLoan({ loan, structureId }) {\n    const propertyValue = Calculator.selectPropertyValue({ loan, structureId });\n\n    if (!this.hasDetailedConfig()) {\n      return this.getDefaultFees({ propertyValue });\n    }\n\n    const { residenceType } = loan;\n\n    const mortgageNoteIncrease = Calculator.getMortgageNoteIncrease({\n      loan,\n      structureId,\n    });\n\n    // Acte d'achat\n    const buyersContractFees = this.buyersContractFees({ loan, structureId });\n\n    // Cédule hypothécaire\n    const mortgageNoteFees = this.mortgageNoteFees({ mortgageNoteIncrease });\n\n    // Déductions\n    const deductions = this.getDeductions({\n      propertyValue,\n      mortgageNoteFees,\n      residenceType,\n      mortgageNoteIncrease,\n      propertyTransferTax: buyersContractFees.propertyRegistrationTax,\n    });\n\n    const roundedResult = roundObjectKeys({\n      total:\n        buyersContractFees.total + mortgageNoteFees.total - deductions.total,\n      buyersContractFees: roundObjectKeys(buyersContractFees),\n      mortgageNoteFees: roundObjectKeys(mortgageNoteFees),\n      deductions: roundObjectKeys(deductions),\n      canton: this.canton,\n      estimate: false,\n    });\n\n    return roundedResult;\n  }\n\n  getNotaryFeesWithoutLoan({\n    propertyValue,\n    mortgageNoteIncrease,\n    residenceType,\n  }) {\n    if (!this.hasDetailedConfig()) {\n      return this.getDefaultFees({ propertyValue });\n    }\n\n    // Acte d'achat\n    const buyersContractFees = this.buyersContractFeesAcquisition({\n      propertyValue,\n    });\n\n    // Cédule hypothécaire\n    const mortgageNoteFees = this.mortgageNoteFees({ mortgageNoteIncrease });\n\n    // Déductions\n    const deductions = this.getDeductions({\n      propertyValue,\n      mortgageNoteIncrease,\n      residenceType,\n      propertyTransferTax: this.propertyRegistrationTax({ propertyValue }),\n    });\n\n    const roundedResult = roundObjectKeys({\n      total:\n        buyersContractFees.total + mortgageNoteFees.total - deductions.total,\n      buyersContractFees: roundObjectKeys(buyersContractFees),\n      mortgageNoteFees: roundObjectKeys(mortgageNoteFees),\n      deductions: roundObjectKeys(deductions),\n      canton: this.canton,\n      estimate: false,\n    });\n\n    return roundedResult;\n  }\n\n  buyersContractFees({ loan, structureId }) {\n    if (loan.purchaseType === PURCHASE_TYPE.REFINANCING) {\n      return { total: 0 };\n    }\n\n    if (this.shouldUseConstructionMath({ loan, structureId })) {\n      const {\n        landValue = 0,\n        constructionValue = 0,\n        additionalMargin = 0,\n      } = Calculator.selectProperty({ loan, structureId });\n      return this.buyersContractFeesConstruction({\n        landValue,\n        constructionValue,\n        additionalMargin,\n      });\n    }\n\n    const propertyValue = Calculator.selectPropertyValue({ loan, structureId });\n    return this.buyersContractFeesAcquisition({ propertyValue });\n  }\n\n  buyersContractFeesAcquisition({ propertyValue }) {\n    // Frais d'enregistrement/Droits de mutation\n    const propertyRegistrationTax = this.propertyRegistrationTax({\n      propertyValue,\n    });\n    // Emoluments du notaire\n    const notaryIncomeFromProperty = this.notaryIncomeFromProperty({\n      propertyValue,\n    });\n    // Registre foncier\n    const landRegistryPropertyTax = this.landRegistryPropertyTax({\n      propertyValue,\n    });\n    // Frais du notaire additionnels estimés\n    const additionalFees = this.additionalFees();\n\n    return {\n      total:\n        propertyRegistrationTax\n        + notaryIncomeFromProperty\n        + landRegistryPropertyTax\n        + additionalFees,\n      propertyRegistrationTax,\n      landRegistryPropertyTax,\n      notaryIncomeFromProperty,\n      additionalFees,\n    };\n  }\n\n  buyersContractFeesConstruction({\n    landValue,\n    constructionValue,\n    additionalMargin,\n  }) {\n    // Frais d'enregistrement/Droits de mutation\n    const propertyRegistrationTax = this.propertyRegistrationTax({\n      propertyValue: landValue + additionalMargin,\n    });\n\n    // Emoluments du notaire\n    const notaryIncomeFromProperty = this.notaryIncomeFromProperty({\n      propertyValue: landValue + additionalMargin,\n    });\n\n    // Registre foncier\n    const landRegistryPropertyTax = this.landRegistryPropertyTax({\n      propertyValue: landValue + additionalMargin,\n    });\n\n    // Contrat de construction\n    const propertyConstructionTax = this.propertyConstructionTax({\n      constructionValue,\n    });\n\n    // Frais du notaire additionnels estimés\n    const additionalFees = this.additionalFees();\n\n    return {\n      total:\n        propertyRegistrationTax\n        + notaryIncomeFromProperty\n        + landRegistryPropertyTax\n        + propertyConstructionTax\n        + additionalFees,\n      propertyRegistrationTax,\n      propertyConstructionTax,\n      landRegistryPropertyTax,\n      notaryIncomeFromProperty,\n      additionalFees,\n    };\n  }\n\n  mortgageNoteFees({ mortgageNoteIncrease }) {\n    // Frais d'enregistrement\n    const mortgageNoteRegistrationTax = this.mortgageNoteRegistrationTax({\n      mortgageNoteIncrease,\n    });\n    // Emoluments du notaire\n    const notaryIncomeFromMortgageNote = this.notaryIncomeFromMortgageNote({\n      mortgageNoteIncrease,\n    });\n    // Registre foncier\n    const landRegistryMortgageNoteTax = this.landRegistryMortgageNoteTax({\n      mortgageNoteIncrease,\n    });\n    // Frais du notaire additionnels estimés\n    // Nuls si aucune cédule nécessaire\n    const additionalFees = mortgageNoteIncrease > 0 ? this.additionalFees() : 0;\n\n    return {\n      total:\n        mortgageNoteRegistrationTax\n        + landRegistryMortgageNoteTax\n        + notaryIncomeFromMortgageNote\n        + additionalFees,\n      mortgageNoteRegistrationTax,\n      landRegistryMortgageNoteTax,\n      notaryIncomeFromMortgageNote,\n      additionalFees,\n    };\n  }\n\n  getDeductions({\n    propertyValue,\n    mortgageNoteIncrease,\n    residenceType,\n    propertyTransferTax,\n  }) {\n    const buyersContractDeductions = this.buyersContractDeductions\n      ? this.buyersContractDeductions({\n        residenceType,\n        propertyValue,\n        transferTax: propertyTransferTax,\n      })\n      : 0;\n\n    const mortgageNoteDeductions = this.mortgageNoteDeductions\n      ? this.mortgageNoteDeductions({\n        residenceType,\n        propertyValue,\n        mortgageNoteRegistrationTax: this.mortgageNoteRegistrationTax({\n          mortgageNoteIncrease,\n        }),\n      })\n      : 0;\n\n    return {\n      buyersContractDeductions,\n      mortgageNoteDeductions,\n      total: buyersContractDeductions + mortgageNoteDeductions,\n    };\n  }\n\n  getDefaultFees({ propertyValue }) {\n    return {\n      total: propertyValue * NOTARY_FEES,\n      canton: this.canton,\n      estimate: true,\n    };\n  }\n}\n\nexport default NotaryFeesCalculator;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/notaryFees/NotaryFeesCalculator.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/notaryFees/NotaryFeesCalculator.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread3 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar cantonConfigs;\nmodule.link(\"./cantonConfigs\", {\n  \"*\": function (v) {\n    cantonConfigs = v;\n  }\n}, 0);\nvar Calculator;\nmodule.link(\"../Calculator\", {\n  \"default\": function (v) {\n    Calculator = v;\n  }\n}, 1);\nvar NOTARY_FEES;\nmodule.link(\"../../config/financeConstants\", {\n  NOTARY_FEES: function (v) {\n    NOTARY_FEES = v;\n  }\n}, 2);\nvar PURCHASE_TYPE;\nmodule.link(\"../../api/constants\", {\n  PURCHASE_TYPE: function (v) {\n    PURCHASE_TYPE = v;\n  }\n}, 3);\n\nvar roundToCents = function (val) {\n  return Number(val.toFixed(2));\n};\n\nvar roundObjectKeys = function (obj) {\n  return Object.keys(obj).reduce(function (newObj, key) {\n    var _objectSpread2;\n\n    return (0, _objectSpread3.default)({}, newObj, (_objectSpread2 = {}, _objectSpread2[key] = typeof obj[key] === 'number' ? roundToCents(obj[key]) : obj[key], _objectSpread2));\n  }, {});\n};\n\nvar NotaryFeesCalculator =\n/*#__PURE__*/\nfunction () {\n  function NotaryFeesCalculator(_ref) {\n    var canton = _ref.canton;\n    this.init(canton);\n  }\n\n  var _proto = NotaryFeesCalculator.prototype;\n\n  _proto.init = function () {\n    function init(canton) {\n      var config = cantonConfigs[canton];\n      this.canton = canton;\n      Object.assign(this, config);\n    }\n\n    return init;\n  }();\n\n  _proto.hasDetailedConfig = function () {\n    function hasDetailedConfig() {\n      return cantonConfigs[this.canton];\n    }\n\n    return hasDetailedConfig;\n  }();\n\n  _proto.shouldUseConstructionMath = function () {\n    function shouldUseConstructionMath(_ref2) {\n      var loan = _ref2.loan,\n          structureId = _ref2.structureId;\n      var hasDetailedValue = Calculator.hasDetailedPropertyValue({\n        loan: loan,\n        structureId: structureId\n      });\n      var shouldUseConstructionNotaryFees = Calculator.shouldUseConstructionNotaryFees({\n        loan: loan,\n        structureId: structureId\n      });\n      return hasDetailedValue && shouldUseConstructionNotaryFees;\n    }\n\n    return shouldUseConstructionMath;\n  }();\n\n  _proto.getNotaryFeesForLoan = function () {\n    function getNotaryFeesForLoan(_ref3) {\n      var loan = _ref3.loan,\n          structureId = _ref3.structureId;\n      var propertyValue = Calculator.selectPropertyValue({\n        loan: loan,\n        structureId: structureId\n      });\n\n      if (!this.hasDetailedConfig()) {\n        return this.getDefaultFees({\n          propertyValue: propertyValue\n        });\n      }\n\n      var residenceType = loan.residenceType;\n      var mortgageNoteIncrease = Calculator.getMortgageNoteIncrease({\n        loan: loan,\n        structureId: structureId\n      }); // Acte d'achat\n\n      var buyersContractFees = this.buyersContractFees({\n        loan: loan,\n        structureId: structureId\n      }); // Cédule hypothécaire\n\n      var mortgageNoteFees = this.mortgageNoteFees({\n        mortgageNoteIncrease: mortgageNoteIncrease\n      }); // Déductions\n\n      var deductions = this.getDeductions({\n        propertyValue: propertyValue,\n        mortgageNoteFees: mortgageNoteFees,\n        residenceType: residenceType,\n        mortgageNoteIncrease: mortgageNoteIncrease,\n        propertyTransferTax: buyersContractFees.propertyRegistrationTax\n      });\n      var roundedResult = roundObjectKeys({\n        total: buyersContractFees.total + mortgageNoteFees.total - deductions.total,\n        buyersContractFees: roundObjectKeys(buyersContractFees),\n        mortgageNoteFees: roundObjectKeys(mortgageNoteFees),\n        deductions: roundObjectKeys(deductions),\n        canton: this.canton,\n        estimate: false\n      });\n      return roundedResult;\n    }\n\n    return getNotaryFeesForLoan;\n  }();\n\n  _proto.getNotaryFeesWithoutLoan = function () {\n    function getNotaryFeesWithoutLoan(_ref4) {\n      var propertyValue = _ref4.propertyValue,\n          mortgageNoteIncrease = _ref4.mortgageNoteIncrease,\n          residenceType = _ref4.residenceType;\n\n      if (!this.hasDetailedConfig()) {\n        return this.getDefaultFees({\n          propertyValue: propertyValue\n        });\n      } // Acte d'achat\n\n\n      var buyersContractFees = this.buyersContractFeesAcquisition({\n        propertyValue: propertyValue\n      }); // Cédule hypothécaire\n\n      var mortgageNoteFees = this.mortgageNoteFees({\n        mortgageNoteIncrease: mortgageNoteIncrease\n      }); // Déductions\n\n      var deductions = this.getDeductions({\n        propertyValue: propertyValue,\n        mortgageNoteIncrease: mortgageNoteIncrease,\n        residenceType: residenceType,\n        propertyTransferTax: this.propertyRegistrationTax({\n          propertyValue: propertyValue\n        })\n      });\n      var roundedResult = roundObjectKeys({\n        total: buyersContractFees.total + mortgageNoteFees.total - deductions.total,\n        buyersContractFees: roundObjectKeys(buyersContractFees),\n        mortgageNoteFees: roundObjectKeys(mortgageNoteFees),\n        deductions: roundObjectKeys(deductions),\n        canton: this.canton,\n        estimate: false\n      });\n      return roundedResult;\n    }\n\n    return getNotaryFeesWithoutLoan;\n  }();\n\n  _proto.buyersContractFees = function () {\n    function buyersContractFees(_ref5) {\n      var loan = _ref5.loan,\n          structureId = _ref5.structureId;\n\n      if (loan.purchaseType === PURCHASE_TYPE.REFINANCING) {\n        return {\n          total: 0\n        };\n      }\n\n      if (this.shouldUseConstructionMath({\n        loan: loan,\n        structureId: structureId\n      })) {\n        var _Calculator$selectPro = Calculator.selectProperty({\n          loan: loan,\n          structureId: structureId\n        }),\n            _Calculator$selectPro2 = _Calculator$selectPro.landValue,\n            landValue = _Calculator$selectPro2 === void 0 ? 0 : _Calculator$selectPro2,\n            _Calculator$selectPro3 = _Calculator$selectPro.constructionValue,\n            constructionValue = _Calculator$selectPro3 === void 0 ? 0 : _Calculator$selectPro3,\n            _Calculator$selectPro4 = _Calculator$selectPro.additionalMargin,\n            additionalMargin = _Calculator$selectPro4 === void 0 ? 0 : _Calculator$selectPro4;\n\n        return this.buyersContractFeesConstruction({\n          landValue: landValue,\n          constructionValue: constructionValue,\n          additionalMargin: additionalMargin\n        });\n      }\n\n      var propertyValue = Calculator.selectPropertyValue({\n        loan: loan,\n        structureId: structureId\n      });\n      return this.buyersContractFeesAcquisition({\n        propertyValue: propertyValue\n      });\n    }\n\n    return buyersContractFees;\n  }();\n\n  _proto.buyersContractFeesAcquisition = function () {\n    function buyersContractFeesAcquisition(_ref6) {\n      var propertyValue = _ref6.propertyValue;\n      // Frais d'enregistrement/Droits de mutation\n      var propertyRegistrationTax = this.propertyRegistrationTax({\n        propertyValue: propertyValue\n      }); // Emoluments du notaire\n\n      var notaryIncomeFromProperty = this.notaryIncomeFromProperty({\n        propertyValue: propertyValue\n      }); // Registre foncier\n\n      var landRegistryPropertyTax = this.landRegistryPropertyTax({\n        propertyValue: propertyValue\n      }); // Frais du notaire additionnels estimés\n\n      var additionalFees = this.additionalFees();\n      return {\n        total: propertyRegistrationTax + notaryIncomeFromProperty + landRegistryPropertyTax + additionalFees,\n        propertyRegistrationTax: propertyRegistrationTax,\n        landRegistryPropertyTax: landRegistryPropertyTax,\n        notaryIncomeFromProperty: notaryIncomeFromProperty,\n        additionalFees: additionalFees\n      };\n    }\n\n    return buyersContractFeesAcquisition;\n  }();\n\n  _proto.buyersContractFeesConstruction = function () {\n    function buyersContractFeesConstruction(_ref7) {\n      var landValue = _ref7.landValue,\n          constructionValue = _ref7.constructionValue,\n          additionalMargin = _ref7.additionalMargin;\n      // Frais d'enregistrement/Droits de mutation\n      var propertyRegistrationTax = this.propertyRegistrationTax({\n        propertyValue: landValue + additionalMargin\n      }); // Emoluments du notaire\n\n      var notaryIncomeFromProperty = this.notaryIncomeFromProperty({\n        propertyValue: landValue + additionalMargin\n      }); // Registre foncier\n\n      var landRegistryPropertyTax = this.landRegistryPropertyTax({\n        propertyValue: landValue + additionalMargin\n      }); // Contrat de construction\n\n      var propertyConstructionTax = this.propertyConstructionTax({\n        constructionValue: constructionValue\n      }); // Frais du notaire additionnels estimés\n\n      var additionalFees = this.additionalFees();\n      return {\n        total: propertyRegistrationTax + notaryIncomeFromProperty + landRegistryPropertyTax + propertyConstructionTax + additionalFees,\n        propertyRegistrationTax: propertyRegistrationTax,\n        propertyConstructionTax: propertyConstructionTax,\n        landRegistryPropertyTax: landRegistryPropertyTax,\n        notaryIncomeFromProperty: notaryIncomeFromProperty,\n        additionalFees: additionalFees\n      };\n    }\n\n    return buyersContractFeesConstruction;\n  }();\n\n  _proto.mortgageNoteFees = function () {\n    function mortgageNoteFees(_ref8) {\n      var mortgageNoteIncrease = _ref8.mortgageNoteIncrease;\n      // Frais d'enregistrement\n      var mortgageNoteRegistrationTax = this.mortgageNoteRegistrationTax({\n        mortgageNoteIncrease: mortgageNoteIncrease\n      }); // Emoluments du notaire\n\n      var notaryIncomeFromMortgageNote = this.notaryIncomeFromMortgageNote({\n        mortgageNoteIncrease: mortgageNoteIncrease\n      }); // Registre foncier\n\n      var landRegistryMortgageNoteTax = this.landRegistryMortgageNoteTax({\n        mortgageNoteIncrease: mortgageNoteIncrease\n      }); // Frais du notaire additionnels estimés\n      // Nuls si aucune cédule nécessaire\n\n      var additionalFees = mortgageNoteIncrease > 0 ? this.additionalFees() : 0;\n      return {\n        total: mortgageNoteRegistrationTax + landRegistryMortgageNoteTax + notaryIncomeFromMortgageNote + additionalFees,\n        mortgageNoteRegistrationTax: mortgageNoteRegistrationTax,\n        landRegistryMortgageNoteTax: landRegistryMortgageNoteTax,\n        notaryIncomeFromMortgageNote: notaryIncomeFromMortgageNote,\n        additionalFees: additionalFees\n      };\n    }\n\n    return mortgageNoteFees;\n  }();\n\n  _proto.getDeductions = function () {\n    function getDeductions(_ref9) {\n      var propertyValue = _ref9.propertyValue,\n          mortgageNoteIncrease = _ref9.mortgageNoteIncrease,\n          residenceType = _ref9.residenceType,\n          propertyTransferTax = _ref9.propertyTransferTax;\n      var buyersContractDeductions = this.buyersContractDeductions ? this.buyersContractDeductions({\n        residenceType: residenceType,\n        propertyValue: propertyValue,\n        transferTax: propertyTransferTax\n      }) : 0;\n      var mortgageNoteDeductions = this.mortgageNoteDeductions ? this.mortgageNoteDeductions({\n        residenceType: residenceType,\n        propertyValue: propertyValue,\n        mortgageNoteRegistrationTax: this.mortgageNoteRegistrationTax({\n          mortgageNoteIncrease: mortgageNoteIncrease\n        })\n      }) : 0;\n      return {\n        buyersContractDeductions: buyersContractDeductions,\n        mortgageNoteDeductions: mortgageNoteDeductions,\n        total: buyersContractDeductions + mortgageNoteDeductions\n      };\n    }\n\n    return getDeductions;\n  }();\n\n  _proto.getDefaultFees = function () {\n    function getDefaultFees(_ref10) {\n      var propertyValue = _ref10.propertyValue;\n      return {\n        total: propertyValue * NOTARY_FEES,\n        canton: this.canton,\n        estimate: true\n      };\n    }\n\n    return getDefaultFees;\n  }();\n\n  return NotaryFeesCalculator;\n}();\n\nmodule.exportDefault(NotaryFeesCalculator);","map":{"version":3,"sources":["imports/core/utils/notaryFees/NotaryFeesCalculator.js"],"names":["cantonConfigs","roundToCents","val","Number","roundObjectKeys","obj","constructor","canton","init","config","Object","hasDetailedConfig","shouldUseConstructionMath","structureId","hasDetailedValue","loan","shouldUseConstructionNotaryFees","getNotaryFeesForLoan","propertyValue","residenceType","mortgageNoteIncrease","buyersContractFees","mortgageNoteFees","deductions","propertyTransferTax","propertyRegistrationTax","roundedResult","total","estimate","getNotaryFeesWithoutLoan","PURCHASE_TYPE","landValue","constructionValue","additionalMargin","buyersContractFeesAcquisition","notaryIncomeFromProperty","landRegistryPropertyTax","additionalFees","buyersContractFeesConstruction","propertyConstructionTax","mortgageNoteRegistrationTax","notaryIncomeFromMortgageNote","landRegistryMortgageNoteTax","getDeductions","buyersContractDeductions","transferTax","mortgageNoteDeductions","getDefaultFees"],"mappings":"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","sourcesContent":["import * as cantonConfigs from './cantonConfigs';\nimport Calculator from '../Calculator';\nimport { NOTARY_FEES } from '../../config/financeConstants';\nimport { PURCHASE_TYPE } from '../../api/constants';\n\nconst roundToCents = val => Number(val.toFixed(2));\n\nconst roundObjectKeys = obj =>\n  Object.keys(obj).reduce(\n    (newObj, key) => ({\n      ...newObj,\n      [key]: typeof obj[key] === 'number' ? roundToCents(obj[key]) : obj[key],\n    }),\n    {},\n  );\n\nclass NotaryFeesCalculator {\n  constructor({ canton }) {\n    this.init(canton);\n  }\n\n  init(canton) {\n    const config = cantonConfigs[canton];\n    this.canton = canton;\n\n    Object.assign(this, config);\n  }\n\n  hasDetailedConfig() {\n    return cantonConfigs[this.canton];\n  }\n\n  shouldUseConstructionMath({ loan, structureId }) {\n    const hasDetailedValue = Calculator.hasDetailedPropertyValue({\n      loan,\n      structureId,\n    });\n    const shouldUseConstructionNotaryFees = Calculator.shouldUseConstructionNotaryFees({ loan, structureId });\n\n    return hasDetailedValue && shouldUseConstructionNotaryFees;\n  }\n\n  getNotaryFeesForLoan({ loan, structureId }) {\n    const propertyValue = Calculator.selectPropertyValue({ loan, structureId });\n\n    if (!this.hasDetailedConfig()) {\n      return this.getDefaultFees({ propertyValue });\n    }\n\n    const { residenceType } = loan;\n\n    const mortgageNoteIncrease = Calculator.getMortgageNoteIncrease({\n      loan,\n      structureId,\n    });\n\n    // Acte d'achat\n    const buyersContractFees = this.buyersContractFees({ loan, structureId });\n\n    // Cédule hypothécaire\n    const mortgageNoteFees = this.mortgageNoteFees({ mortgageNoteIncrease });\n\n    // Déductions\n    const deductions = this.getDeductions({\n      propertyValue,\n      mortgageNoteFees,\n      residenceType,\n      mortgageNoteIncrease,\n      propertyTransferTax: buyersContractFees.propertyRegistrationTax,\n    });\n\n    const roundedResult = roundObjectKeys({\n      total:\n        buyersContractFees.total + mortgageNoteFees.total - deductions.total,\n      buyersContractFees: roundObjectKeys(buyersContractFees),\n      mortgageNoteFees: roundObjectKeys(mortgageNoteFees),\n      deductions: roundObjectKeys(deductions),\n      canton: this.canton,\n      estimate: false,\n    });\n\n    return roundedResult;\n  }\n\n  getNotaryFeesWithoutLoan({\n    propertyValue,\n    mortgageNoteIncrease,\n    residenceType,\n  }) {\n    if (!this.hasDetailedConfig()) {\n      return this.getDefaultFees({ propertyValue });\n    }\n\n    // Acte d'achat\n    const buyersContractFees = this.buyersContractFeesAcquisition({\n      propertyValue,\n    });\n\n    // Cédule hypothécaire\n    const mortgageNoteFees = this.mortgageNoteFees({ mortgageNoteIncrease });\n\n    // Déductions\n    const deductions = this.getDeductions({\n      propertyValue,\n      mortgageNoteIncrease,\n      residenceType,\n      propertyTransferTax: this.propertyRegistrationTax({ propertyValue }),\n    });\n\n    const roundedResult = roundObjectKeys({\n      total:\n        buyersContractFees.total + mortgageNoteFees.total - deductions.total,\n      buyersContractFees: roundObjectKeys(buyersContractFees),\n      mortgageNoteFees: roundObjectKeys(mortgageNoteFees),\n      deductions: roundObjectKeys(deductions),\n      canton: this.canton,\n      estimate: false,\n    });\n\n    return roundedResult;\n  }\n\n  buyersContractFees({ loan, structureId }) {\n    if (loan.purchaseType === PURCHASE_TYPE.REFINANCING) {\n      return { total: 0 };\n    }\n\n    if (this.shouldUseConstructionMath({ loan, structureId })) {\n      const {\n        landValue = 0,\n        constructionValue = 0,\n        additionalMargin = 0,\n      } = Calculator.selectProperty({ loan, structureId });\n      return this.buyersContractFeesConstruction({\n        landValue,\n        constructionValue,\n        additionalMargin,\n      });\n    }\n\n    const propertyValue = Calculator.selectPropertyValue({ loan, structureId });\n    return this.buyersContractFeesAcquisition({ propertyValue });\n  }\n\n  buyersContractFeesAcquisition({ propertyValue }) {\n    // Frais d'enregistrement/Droits de mutation\n    const propertyRegistrationTax = this.propertyRegistrationTax({\n      propertyValue,\n    });\n    // Emoluments du notaire\n    const notaryIncomeFromProperty = this.notaryIncomeFromProperty({\n      propertyValue,\n    });\n    // Registre foncier\n    const landRegistryPropertyTax = this.landRegistryPropertyTax({\n      propertyValue,\n    });\n    // Frais du notaire additionnels estimés\n    const additionalFees = this.additionalFees();\n\n    return {\n      total:\n        propertyRegistrationTax\n        + notaryIncomeFromProperty\n        + landRegistryPropertyTax\n        + additionalFees,\n      propertyRegistrationTax,\n      landRegistryPropertyTax,\n      notaryIncomeFromProperty,\n      additionalFees,\n    };\n  }\n\n  buyersContractFeesConstruction({\n    landValue,\n    constructionValue,\n    additionalMargin,\n  }) {\n    // Frais d'enregistrement/Droits de mutation\n    const propertyRegistrationTax = this.propertyRegistrationTax({\n      propertyValue: landValue + additionalMargin,\n    });\n\n    // Emoluments du notaire\n    const notaryIncomeFromProperty = this.notaryIncomeFromProperty({\n      propertyValue: landValue + additionalMargin,\n    });\n\n    // Registre foncier\n    const landRegistryPropertyTax = this.landRegistryPropertyTax({\n      propertyValue: landValue + additionalMargin,\n    });\n\n    // Contrat de construction\n    const propertyConstructionTax = this.propertyConstructionTax({\n      constructionValue,\n    });\n\n    // Frais du notaire additionnels estimés\n    const additionalFees = this.additionalFees();\n\n    return {\n      total:\n        propertyRegistrationTax\n        + notaryIncomeFromProperty\n        + landRegistryPropertyTax\n        + propertyConstructionTax\n        + additionalFees,\n      propertyRegistrationTax,\n      propertyConstructionTax,\n      landRegistryPropertyTax,\n      notaryIncomeFromProperty,\n      additionalFees,\n    };\n  }\n\n  mortgageNoteFees({ mortgageNoteIncrease }) {\n    // Frais d'enregistrement\n    const mortgageNoteRegistrationTax = this.mortgageNoteRegistrationTax({\n      mortgageNoteIncrease,\n    });\n    // Emoluments du notaire\n    const notaryIncomeFromMortgageNote = this.notaryIncomeFromMortgageNote({\n      mortgageNoteIncrease,\n    });\n    // Registre foncier\n    const landRegistryMortgageNoteTax = this.landRegistryMortgageNoteTax({\n      mortgageNoteIncrease,\n    });\n    // Frais du notaire additionnels estimés\n    // Nuls si aucune cédule nécessaire\n    const additionalFees = mortgageNoteIncrease > 0 ? this.additionalFees() : 0;\n\n    return {\n      total:\n        mortgageNoteRegistrationTax\n        + landRegistryMortgageNoteTax\n        + notaryIncomeFromMortgageNote\n        + additionalFees,\n      mortgageNoteRegistrationTax,\n      landRegistryMortgageNoteTax,\n      notaryIncomeFromMortgageNote,\n      additionalFees,\n    };\n  }\n\n  getDeductions({\n    propertyValue,\n    mortgageNoteIncrease,\n    residenceType,\n    propertyTransferTax,\n  }) {\n    const buyersContractDeductions = this.buyersContractDeductions\n      ? this.buyersContractDeductions({\n        residenceType,\n        propertyValue,\n        transferTax: propertyTransferTax,\n      })\n      : 0;\n\n    const mortgageNoteDeductions = this.mortgageNoteDeductions\n      ? this.mortgageNoteDeductions({\n        residenceType,\n        propertyValue,\n        mortgageNoteRegistrationTax: this.mortgageNoteRegistrationTax({\n          mortgageNoteIncrease,\n        }),\n      })\n      : 0;\n\n    return {\n      buyersContractDeductions,\n      mortgageNoteDeductions,\n      total: buyersContractDeductions + mortgageNoteDeductions,\n    };\n  }\n\n  getDefaultFees({ propertyValue }) {\n    return {\n      total: propertyValue * NOTARY_FEES,\n      canton: this.canton,\n      estimate: true,\n    };\n  }\n}\n\nexport default NotaryFeesCalculator;\n"]},"sourceType":"script","hash":"694645457f2c4f838ba5ebf10febdc7405e775de"}
