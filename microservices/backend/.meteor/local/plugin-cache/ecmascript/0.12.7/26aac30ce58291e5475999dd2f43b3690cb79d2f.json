{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/RemainingOwnFundsTable.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/RemainingOwnFundsTable.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/RemainingOwnFundsTable.jsx","inputSourceMap":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/RemainingOwnFundsTable.jsx"],"names":["React","T","toMoney","OWN_FUNDS_TYPES","PdfTable","ROW_TYPES","RemainingOwnFundsTableProps","oneBorrowerHasOwnFunds","borrowers","type","filter","borrower","valueForType","Array","isArray","length","remainingFundsTableData","loan","structureId","calculator","Object","values","BANK_FORTUNE","THIRD_PARTY_FORTUNE","includes","map","label","data","getRemainingFundsOfType","condition","style","textAlign","getRemainingOwnFundsRows","colspan","TITLE","getTotalRemainingFunds","SUM","RemainingOwnFundsTable"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\n\nimport T from '../../../../../../components/Translation';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport { OWN_FUNDS_TYPES } from '../../../../../borrowers/borrowerConstants';\nimport PdfTable from '../../PdfTable';\nimport { ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype RemainingOwnFundsTableProps = {};\n\nconst oneBorrowerHasOwnFunds = ({ borrowers }, type) =>\n  borrowers.filter((borrower) => {\n    const valueForType = borrower[type];\n    if (Array.isArray(valueForType)) {\n      return valueForType.length > 0;\n    }\n    return !!valueForType;\n  }).length > 0;\n\nconst remainingFundsTableData = ({ loan, structureId, calculator }) =>\n  Object.values(OWN_FUNDS_TYPES)\n    .filter(type =>\n      ![\n        OWN_FUNDS_TYPES.BANK_FORTUNE,\n        OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n      ].includes(type))\n    .map(type => ({\n      label: <T id={`PDF.ownFund.${type}`} />,\n      data: toMoney(calculator.getRemainingFundsOfType({ loan, type, structureId })),\n      condition: oneBorrowerHasOwnFunds(loan, type),\n      style: { textAlign: 'right' },\n    }));\n\nconst getRemainingOwnFundsRows = ({ loan, structureId, calculator }) => [\n  {\n    label: (\n      <T id=\"PDF.projectInfos.structure.postDisbursementSituation.title\" />\n    ),\n    colspan: 2,\n    type: ROW_TYPES.TITLE,\n  },\n  {\n    label: <T id=\"PDF.ownFund.bankFortune\" />,\n    data: toMoney(calculator.getRemainingFundsOfType({\n      loan,\n      structureId,\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n    })),\n  },\n  ...remainingFundsTableData({ loan, structureId, calculator }),\n  {\n    label: (\n      <T id=\"PDF.projectInfos.structure.postDisbursementSituation.total\" />\n    ),\n    data: toMoney(calculator.getTotalRemainingFunds({ loan, structureId })),\n    type: ROW_TYPES.SUM,\n  },\n];\n\nconst RemainingOwnFundsTable = ({\n  loan,\n  structureId,\n  calculator,\n}: RemainingOwnFundsTableProps) => (\n  <PdfTable\n    className=\"remaining-own-funds-table\"\n    rows={getRemainingOwnFundsRows({ loan, structureId, calculator })}\n    columnOptions={[{}, { style: { textAlign: 'right' } }]}\n  />\n);\n\nexport default RemainingOwnFundsTable;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/RemainingOwnFundsTable.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/RemainingOwnFundsTable.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 1);\nlet toMoney;\nmodule.link(\"../../../../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 2);\nlet OWN_FUNDS_TYPES;\nmodule.link(\"../../../../../borrowers/borrowerConstants\", {\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  }\n\n}, 3);\nlet PdfTable;\nmodule.link(\"../../PdfTable\", {\n  default(v) {\n    PdfTable = v;\n  }\n\n}, 4);\nlet ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 5);\n\nconst oneBorrowerHasOwnFunds = ({\n  borrowers\n}, type) => borrowers.filter(borrower => {\n  const valueForType = borrower[type];\n\n  if (Array.isArray(valueForType)) {\n    return valueForType.length > 0;\n  }\n\n  return !!valueForType;\n}).length > 0;\n\nconst remainingFundsTableData = ({\n  loan,\n  structureId,\n  calculator\n}) => Object.values(OWN_FUNDS_TYPES).filter(type => ![OWN_FUNDS_TYPES.BANK_FORTUNE, OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE].includes(type)).map(type => ({\n  label: React.createElement(T, {\n    id: `PDF.ownFund.${type}`\n  }),\n  data: toMoney(calculator.getRemainingFundsOfType({\n    loan,\n    type,\n    structureId\n  })),\n  condition: oneBorrowerHasOwnFunds(loan, type),\n  style: {\n    textAlign: 'right'\n  }\n}));\n\nconst getRemainingOwnFundsRows = ({\n  loan,\n  structureId,\n  calculator\n}) => [{\n  label: React.createElement(T, {\n    id: \"PDF.projectInfos.structure.postDisbursementSituation.title\"\n  }),\n  colspan: 2,\n  type: ROW_TYPES.TITLE\n}, {\n  label: React.createElement(T, {\n    id: \"PDF.ownFund.bankFortune\"\n  }),\n  data: toMoney(calculator.getRemainingFundsOfType({\n    loan,\n    structureId,\n    type: OWN_FUNDS_TYPES.BANK_FORTUNE\n  }))\n}, ...remainingFundsTableData({\n  loan,\n  structureId,\n  calculator\n}), {\n  label: React.createElement(T, {\n    id: \"PDF.projectInfos.structure.postDisbursementSituation.total\"\n  }),\n  data: toMoney(calculator.getTotalRemainingFunds({\n    loan,\n    structureId\n  })),\n  type: ROW_TYPES.SUM\n}];\n\nconst RemainingOwnFundsTable = ({\n  loan,\n  structureId,\n  calculator\n}) => React.createElement(PdfTable, {\n  className: \"remaining-own-funds-table\",\n  rows: getRemainingOwnFundsRows({\n    loan,\n    structureId,\n    calculator\n  }),\n  columnOptions: [{}, {\n    style: {\n      textAlign: 'right'\n    }\n  }]\n});\n\nmodule.exportDefault(RemainingOwnFundsTable);","map":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/pages/StructurePdfPage/RemainingOwnFundsTable.jsx"],"names":["oneBorrowerHasOwnFunds","borrowers","borrower","valueForType","Array","remainingFundsTableData","calculator","type","OWN_FUNDS_TYPES","label","data","toMoney","structureId","condition","style","textAlign","getRemainingOwnFundsRows","colspan","ROW_TYPES","TITLE","BANK_FORTUNE","SUM","RemainingOwnFundsTable"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\n\nimport T from '../../../../../../components/Translation';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport { OWN_FUNDS_TYPES } from '../../../../../borrowers/borrowerConstants';\nimport PdfTable from '../../PdfTable';\nimport { ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype RemainingOwnFundsTableProps = {};\n\nconst oneBorrowerHasOwnFunds = ({ borrowers }, type) =>\n  borrowers.filter((borrower) => {\n    const valueForType = borrower[type];\n    if (Array.isArray(valueForType)) {\n      return valueForType.length > 0;\n    }\n    return !!valueForType;\n  }).length > 0;\n\nconst remainingFundsTableData = ({ loan, structureId, calculator }) =>\n  Object.values(OWN_FUNDS_TYPES)\n    .filter(type =>\n      ![\n        OWN_FUNDS_TYPES.BANK_FORTUNE,\n        OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n      ].includes(type))\n    .map(type => ({\n      label: <T id={`PDF.ownFund.${type}`} />,\n      data: toMoney(calculator.getRemainingFundsOfType({ loan, type, structureId })),\n      condition: oneBorrowerHasOwnFunds(loan, type),\n      style: { textAlign: 'right' },\n    }));\n\nconst getRemainingOwnFundsRows = ({ loan, structureId, calculator }) => [\n  {\n    label: (\n      <T id=\"PDF.projectInfos.structure.postDisbursementSituation.title\" />\n    ),\n    colspan: 2,\n    type: ROW_TYPES.TITLE,\n  },\n  {\n    label: <T id=\"PDF.ownFund.bankFortune\" />,\n    data: toMoney(calculator.getRemainingFundsOfType({\n      loan,\n      structureId,\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n    })),\n  },\n  ...remainingFundsTableData({ loan, structureId, calculator }),\n  {\n    label: (\n      <T id=\"PDF.projectInfos.structure.postDisbursementSituation.total\" />\n    ),\n    data: toMoney(calculator.getTotalRemainingFunds({ loan, structureId })),\n    type: ROW_TYPES.SUM,\n  },\n];\n\nconst RemainingOwnFundsTable = ({\n  loan,\n  structureId,\n  calculator,\n}: RemainingOwnFundsTableProps) => (\n  <PdfTable\n    className=\"remaining-own-funds-table\"\n    rows={getRemainingOwnFundsRows({ loan, structureId, calculator })}\n    columnOptions={[{}, { style: { textAlign: 'right' } }]}\n  />\n);\n\nexport default RemainingOwnFundsTable;\n"]},"sourceType":"script","hash":"26aac30ce58291e5475999dd2f43b3690cb79d2f"}
