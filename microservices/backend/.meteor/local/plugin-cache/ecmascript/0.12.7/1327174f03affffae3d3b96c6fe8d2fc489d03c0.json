{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecapInfo.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecapInfo.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecapInfo.jsx","inputSourceMap":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecapInfo.jsx"],"names":["React","cx","moment","T","PdfTable","getBorrowersInfos","shouldRenderArray","ROW_TYPES","BorrowersRecapInfoProps","getBorrowersInfosArray","borrowers","calculator","borrowersInfos","label","data","name","type","TITLE","className","address","birthDate","map","date","index","age","format","childrenCount","children","condition","company","civilStatus","status","BorrowersRecapInfo","anonymous","twoBorrowers","style","textAlign"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport moment from 'moment';\n\nimport T from 'core/components/Translation';\nimport PdfTable from '../../PdfTable';\nimport { getBorrowersInfos, shouldRenderArray } from './borrowersRecapHelpers';\nimport { ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype BorrowersRecapInfoProps = {};\n\nconst getBorrowersInfosArray = ({ borrowers, calculator }) => {\n  const borrowersInfos = getBorrowersInfos(borrowers, calculator);\n\n  return [\n    {\n      label: <T id=\"PDF.borrowersInfos.category.general\" />,\n      data: borrowersInfos.name,\n      type: ROW_TYPES.TITLE,\n      className: 'borrower-table-title-row',\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.address\" />,\n      data: borrowersInfos.address,\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.age\" />,\n      data: borrowersInfos.birthDate.map((date, index) => {\n        if (!date) {\n          return '-';\n        }\n\n        return (\n          <span key={index}>\n            {borrowersInfos.age[index]}&nbsp;(\n            {moment(date).format('DD.MM.YYYY')})\n          </span>\n        );\n      }),\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.children\" />,\n      data: borrowersInfos.childrenCount.map(children => children || '-'),\n      condition: shouldRenderArray(borrowersInfos.childrenCount),\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.company\" />,\n      data: borrowersInfos.company.map(company => company || '-'),\n      condition: shouldRenderArray(borrowersInfos.company),\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.civilStatus\" />,\n      data: borrowersInfos.civilStatus.map(status =>\n        (status && <T id={`PDF.borrowersInfos.civilStatus.${status}`} />)\n          || '-'),\n\n      condition: shouldRenderArray(borrowersInfos.civilStatus),\n    },\n  ];\n};\n\nconst BorrowersRecapInfo = ({\n  anonymous,\n  borrowers,\n  calculator,\n  twoBorrowers,\n}: BorrowersRecapInfoProps) => (\n  <PdfTable\n    className={cx('borrowers-recap info', { twoBorrowers })}\n    rows={getBorrowersInfosArray({ borrowers, anonymous, calculator })}\n    columnOptions={[\n      {},\n      { style: { textAlign: 'right' } },\n      { style: { textAlign: 'right' } },\n    ]}\n  />\n);\n\nexport default BorrowersRecapInfo;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecapInfo.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecapInfo.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet cx;\nmodule.link(\"classnames\", {\n  default(v) {\n    cx = v;\n  }\n\n}, 1);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 2);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 3);\nlet PdfTable;\nmodule.link(\"../../PdfTable\", {\n  default(v) {\n    PdfTable = v;\n  }\n\n}, 4);\nlet getBorrowersInfos, shouldRenderArray;\nmodule.link(\"./borrowersRecapHelpers\", {\n  getBorrowersInfos(v) {\n    getBorrowersInfos = v;\n  },\n\n  shouldRenderArray(v) {\n    shouldRenderArray = v;\n  }\n\n}, 5);\nlet ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 6);\n\nconst getBorrowersInfosArray = ({\n  borrowers,\n  calculator\n}) => {\n  const borrowersInfos = getBorrowersInfos(borrowers, calculator);\n  return [{\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.category.general\"\n    }),\n    data: borrowersInfos.name,\n    type: ROW_TYPES.TITLE,\n    className: 'borrower-table-title-row'\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.address\"\n    }),\n    data: borrowersInfos.address\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.age\"\n    }),\n    data: borrowersInfos.birthDate.map((date, index) => {\n      if (!date) {\n        return '-';\n      }\n\n      return React.createElement(\"span\", {\n        key: index\n      }, borrowersInfos.age[index], \"\\xA0(\", moment(date).format('DD.MM.YYYY'), \")\");\n    })\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.children\"\n    }),\n    data: borrowersInfos.childrenCount.map(children => children || '-'),\n    condition: shouldRenderArray(borrowersInfos.childrenCount)\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.company\"\n    }),\n    data: borrowersInfos.company.map(company => company || '-'),\n    condition: shouldRenderArray(borrowersInfos.company)\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.borrowersInfos.civilStatus\"\n    }),\n    data: borrowersInfos.civilStatus.map(status => status && React.createElement(T, {\n      id: `PDF.borrowersInfos.civilStatus.${status}`\n    }) || '-'),\n    condition: shouldRenderArray(borrowersInfos.civilStatus)\n  }];\n};\n\nconst BorrowersRecapInfo = ({\n  anonymous,\n  borrowers,\n  calculator,\n  twoBorrowers\n}) => React.createElement(PdfTable, {\n  className: cx('borrowers-recap info', {\n    twoBorrowers\n  }),\n  rows: getBorrowersInfosArray({\n    borrowers,\n    anonymous,\n    calculator\n  }),\n  columnOptions: [{}, {\n    style: {\n      textAlign: 'right'\n    }\n  }, {\n    style: {\n      textAlign: 'right'\n    }\n  }]\n});\n\nmodule.exportDefault(BorrowersRecapInfo);","map":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/pages/BorrowersPdfPage/BorrowersRecapInfo.jsx"],"names":["getBorrowersInfosArray","calculator","borrowersInfos","getBorrowersInfos","label","data","type","ROW_TYPES","className","address","moment","children","condition","shouldRenderArray","company","status","BorrowersRecapInfo","twoBorrowers","cx","style","textAlign"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport cx from 'classnames';\nimport moment from 'moment';\n\nimport T from 'core/components/Translation';\nimport PdfTable from '../../PdfTable';\nimport { getBorrowersInfos, shouldRenderArray } from './borrowersRecapHelpers';\nimport { ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype BorrowersRecapInfoProps = {};\n\nconst getBorrowersInfosArray = ({ borrowers, calculator }) => {\n  const borrowersInfos = getBorrowersInfos(borrowers, calculator);\n\n  return [\n    {\n      label: <T id=\"PDF.borrowersInfos.category.general\" />,\n      data: borrowersInfos.name,\n      type: ROW_TYPES.TITLE,\n      className: 'borrower-table-title-row',\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.address\" />,\n      data: borrowersInfos.address,\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.age\" />,\n      data: borrowersInfos.birthDate.map((date, index) => {\n        if (!date) {\n          return '-';\n        }\n\n        return (\n          <span key={index}>\n            {borrowersInfos.age[index]}&nbsp;(\n            {moment(date).format('DD.MM.YYYY')})\n          </span>\n        );\n      }),\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.children\" />,\n      data: borrowersInfos.childrenCount.map(children => children || '-'),\n      condition: shouldRenderArray(borrowersInfos.childrenCount),\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.company\" />,\n      data: borrowersInfos.company.map(company => company || '-'),\n      condition: shouldRenderArray(borrowersInfos.company),\n    },\n    {\n      label: <T id=\"PDF.borrowersInfos.civilStatus\" />,\n      data: borrowersInfos.civilStatus.map(status =>\n        (status && <T id={`PDF.borrowersInfos.civilStatus.${status}`} />)\n          || '-'),\n\n      condition: shouldRenderArray(borrowersInfos.civilStatus),\n    },\n  ];\n};\n\nconst BorrowersRecapInfo = ({\n  anonymous,\n  borrowers,\n  calculator,\n  twoBorrowers,\n}: BorrowersRecapInfoProps) => (\n  <PdfTable\n    className={cx('borrowers-recap info', { twoBorrowers })}\n    rows={getBorrowersInfosArray({ borrowers, anonymous, calculator })}\n    columnOptions={[\n      {},\n      { style: { textAlign: 'right' } },\n      { style: { textAlign: 'right' } },\n    ]}\n  />\n);\n\nexport default BorrowersRecapInfo;\n"]},"sourceType":"script","hash":"1327174f03affffae3d3b96c6fe8d2fc489d03c0"}
