{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/LenderRulesInitializator.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/utils/Calculator/LenderRulesInitializator.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/LenderRulesInitializator.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/Calculator/LenderRulesInitializator.js"],"names":["parseFilter","getMatchingRules","LENDER_RULES_VARIABLES","OWN_FUNDS_TYPES","withLenderRulesInitializator","SuperClass","constructor","settings","lenderRules","organisationName","length","organisation","name","initialize","loan","structureId","sortedlenderRules","sort","order","orderA","orderB","setOrganisationName","ruleOrigin","matchedRules","globalRules","getGlobalLenderRules","applyRules","primaryRules","getPrimaryLenderRules","secondaryRules","getSecondaryLenderRules","cleanUpUnusedRules","storeRuleOrigin","rules","lenderRulesId","Object","keys","forEach","ruleName","getOriginOfRule","find","_id","getLenderRulesVariables","RESIDENCE_TYPE","residenceType","CANTON","selectPropertyKey","key","WANTED_LOAN","selectStructureKey","PROPERTY_VALUE","selectPropertyValue","INSIDE_AREA","BANK_FORTUNE","getFortune","BORROW_RATIO","getBorrowRatio","INCOME","getTotalIncome","PROPERTY_TYPE","ZIP_CODE","REMAINING_BANK_FORTUNE","getRemainingFundsOfType","type","filter","and","matchingRules","lenderRulesIsSecondary","map","some","variable","includes","names","x","rulesToApply","rule","undefined","maxIncomeRatioTight","maxBorrowRatioWithPledge"],"mappings":"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","sourcesContent":["import { parseFilter } from 'core/api/lenderRules/helpers';\nimport { getMatchingRules } from '../../api/lenderRules/helpers';\nimport { LENDER_RULES_VARIABLES, OWN_FUNDS_TYPES } from '../../api/constants';\n\n// @flow\n\nexport const withLenderRulesInitializator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    constructor(settings) {\n      super(settings);\n      this.initialize(settings);\n    }\n\n    initialize({ loan, structureId, lenderRules = [] }) {\n      if (!(loan && lenderRules && lenderRules.length > 0)) {\n        return;\n      }\n\n      const sortedlenderRules = lenderRules.sort(({ order: orderA }, { order: orderB }) => orderA - orderB);\n\n      // Store the rules for retrieval later\n      this.lenderRules = sortedlenderRules;\n      this.setOrganisationName(sortedlenderRules);\n      this.ruleOrigin = {};\n      this.matchedRules = [];\n\n      // Global rules\n      const globalRules = this.getGlobalLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules,\n      });\n      this.applyRules(globalRules);\n\n      // Primary rules depend only on raw data\n      const primaryRules = this.getPrimaryLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules,\n      });\n      this.applyRules(primaryRules);\n\n      // Secondary rules depend on what is calculated with the rules applied from the primary rules\n      const secondaryRules = this.getSecondaryLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules,\n      });\n      this.applyRules(secondaryRules);\n\n      this.cleanUpUnusedRules();\n    }\n\n    setOrganisationName = (lenderRules) => {\n      this.organisationName = lenderRules.length\n        ? lenderRules[0].organisation && lenderRules[0].organisation.name\n        : null;\n    };\n\n    storeRuleOrigin(rules, lenderRulesId) {\n      Object.keys(rules).forEach((ruleName) => {\n        this.ruleOrigin[ruleName] = lenderRulesId;\n      });\n    }\n\n    getOriginOfRule(ruleName) {\n      const lenderRulesId = this.ruleOrigin[ruleName];\n      const lenderRules = this.lenderRules.find(({ _id }) => _id === lenderRulesId);\n      return lenderRules;\n    }\n\n    getLenderRulesVariables({ loan, structureId }) {\n      return {\n        [LENDER_RULES_VARIABLES.RESIDENCE_TYPE]: loan.residenceType,\n        [LENDER_RULES_VARIABLES.CANTON]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.CANTON,\n        }),\n        [LENDER_RULES_VARIABLES.WANTED_LOAN]: this.selectStructureKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.WANTED_LOAN,\n        }),\n        [LENDER_RULES_VARIABLES.PROPERTY_VALUE]: this.selectPropertyValue({\n          loan,\n          structureId,\n        }),\n        [LENDER_RULES_VARIABLES.INSIDE_AREA]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.INSIDE_AREA,\n        }),\n        [LENDER_RULES_VARIABLES.BANK_FORTUNE]: this.getFortune({ loan }),\n        [LENDER_RULES_VARIABLES.BORROW_RATIO]: this.getBorrowRatio({\n          loan,\n          structureId,\n        }),\n        [LENDER_RULES_VARIABLES.INCOME]: this.getTotalIncome({ loan }),\n        [LENDER_RULES_VARIABLES.PROPERTY_TYPE]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.PROPERTY_TYPE,\n        }),\n        [LENDER_RULES_VARIABLES.ZIP_CODE]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.ZIP_CODE,\n        }),\n        [LENDER_RULES_VARIABLES.REMAINING_BANK_FORTUNE]: this.getRemainingFundsOfType({\n          loan,\n          structureId,\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n        }),\n      };\n    }\n\n    getGlobalLenderRules({ lenderRules }) {\n      const globalRules = lenderRules.filter(({ filter }) =>\n        filter.and && filter.and.length === 1 && filter.and[0] === true);\n      const matchingRules = getMatchingRules(\n        globalRules,\n        {},\n        this.storeRuleOrigin,\n      );\n      return matchingRules;\n    }\n\n    getPrimaryLenderRules({ loan, structureId, lenderRules }) {\n      const primaryRules = lenderRules.filter(rules => !this.lenderRulesIsSecondary(rules));\n      const matchingRules = getMatchingRules(\n        primaryRules,\n        this.getLenderRulesVariables({ loan, structureId }),\n        this.storeRuleOrigin,\n      );\n      return matchingRules;\n    }\n\n    // Gets the secondary lender rules that require other lender rules to\n    // already have been applied\n    getSecondaryLenderRules({ loan, structureId, lenderRules }) {\n      const secondaryRules = lenderRules.filter(this.lenderRulesIsSecondary);\n      const matchingRules = getMatchingRules(\n        secondaryRules,\n        this.getLenderRulesVariables({ loan, structureId }),\n        this.storeRuleOrigin,\n      );\n      return matchingRules;\n    }\n\n    lenderRulesIsSecondary({ filter }) {\n      return filter.and\n        .map(parseFilter)\n        .some(({ variable }) =>\n          [\n            LENDER_RULES_VARIABLES.BORROW_RATIO,\n            LENDER_RULES_VARIABLES.INCOME,\n          ].includes(variable));\n    }\n\n    applyRules(rules) {\n      if (rules.names) {\n        this.matchedRules = [\n          ...this.matchedRules,\n          ...rules.names.filter(x => x),\n        ];\n      }\n\n      const rulesToApply = [\n        'adminComments',\n        'allowPledge',\n        'amortizationGoal',\n        'amortizationYears',\n        'bonusAlgorithm',\n        'bonusConsideration',\n        'bonusHistoryToConsider',\n        'companyIncomeConsideration',\n        'companyIncomeHistoryToConsider',\n        'dividendsConsideration',\n        'dividendsHistoryToConsider',\n        'expensesSubtractFromIncome',\n        'fortuneReturnsRatio',\n        'incomeConsiderationType',\n        'investmentIncomeConsideration',\n        'maxBorrowRatio',\n        'maxIncomeRatio',\n        'pdfComments',\n        'pensionIncomeConsideration',\n        'realEstateIncomeAlgorithm',\n        'realEstateIncomeConsideration',\n        'realEstateIncomeConsiderationType',\n        'theoreticalInterestRate',\n        'theoreticalInterestRate2ndRank',\n        'theoreticalMaintenanceRate',\n      ];\n\n      rulesToApply.forEach((rule) => {\n        if (rules[rule] !== undefined && rules[rule] !== null) {\n          this[rule] = rules[rule];\n        }\n      });\n    }\n\n    cleanUpUnusedRules() {\n      this.maxIncomeRatioTight = 0;\n      this.maxBorrowRatioWithPledge = 0;\n    }\n  };\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/LenderRulesInitializator.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/Calculator/LenderRulesInitializator.js"}},"code":"module.export({\n  withLenderRulesInitializator: () => withLenderRulesInitializator\n});\nlet parseFilter;\nmodule.link(\"../../api/lenderRules/helpers\", {\n  parseFilter(v) {\n    parseFilter = v;\n  }\n\n}, 0);\nlet getMatchingRules;\nmodule.link(\"../../api/lenderRules/helpers\", {\n  getMatchingRules(v) {\n    getMatchingRules = v;\n  }\n\n}, 1);\nlet LENDER_RULES_VARIABLES, OWN_FUNDS_TYPES;\nmodule.link(\"../../api/constants\", {\n  LENDER_RULES_VARIABLES(v) {\n    LENDER_RULES_VARIABLES = v;\n  },\n\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  }\n\n}, 2);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst withLenderRulesInitializator = (SuperClass = class {}) => {\n  var _temp;\n\n  return _temp = class extends SuperClass {\n    constructor(settings) {\n      super(settings);\n\n      _defineProperty(this, \"setOrganisationName\", lenderRules => {\n        this.organisationName = lenderRules.length ? lenderRules[0].organisation && lenderRules[0].organisation.name : null;\n      });\n\n      this.initialize(settings);\n    }\n\n    initialize({\n      loan,\n      structureId,\n      lenderRules = []\n    }) {\n      if (!(loan && lenderRules && lenderRules.length > 0)) {\n        return;\n      }\n\n      const sortedlenderRules = lenderRules.sort(({\n        order: orderA\n      }, {\n        order: orderB\n      }) => orderA - orderB); // Store the rules for retrieval later\n\n      this.lenderRules = sortedlenderRules;\n      this.setOrganisationName(sortedlenderRules);\n      this.ruleOrigin = {};\n      this.matchedRules = []; // Global rules\n\n      const globalRules = this.getGlobalLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules\n      });\n      this.applyRules(globalRules); // Primary rules depend only on raw data\n\n      const primaryRules = this.getPrimaryLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules\n      });\n      this.applyRules(primaryRules); // Secondary rules depend on what is calculated with the rules applied from the primary rules\n\n      const secondaryRules = this.getSecondaryLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules\n      });\n      this.applyRules(secondaryRules);\n      this.cleanUpUnusedRules();\n    }\n\n    storeRuleOrigin(rules, lenderRulesId) {\n      Object.keys(rules).forEach(ruleName => {\n        this.ruleOrigin[ruleName] = lenderRulesId;\n      });\n    }\n\n    getOriginOfRule(ruleName) {\n      const lenderRulesId = this.ruleOrigin[ruleName];\n      const lenderRules = this.lenderRules.find(({\n        _id\n      }) => _id === lenderRulesId);\n      return lenderRules;\n    }\n\n    getLenderRulesVariables({\n      loan,\n      structureId\n    }) {\n      return {\n        [LENDER_RULES_VARIABLES.RESIDENCE_TYPE]: loan.residenceType,\n        [LENDER_RULES_VARIABLES.CANTON]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.CANTON\n        }),\n        [LENDER_RULES_VARIABLES.WANTED_LOAN]: this.selectStructureKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.WANTED_LOAN\n        }),\n        [LENDER_RULES_VARIABLES.PROPERTY_VALUE]: this.selectPropertyValue({\n          loan,\n          structureId\n        }),\n        [LENDER_RULES_VARIABLES.INSIDE_AREA]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.INSIDE_AREA\n        }),\n        [LENDER_RULES_VARIABLES.BANK_FORTUNE]: this.getFortune({\n          loan\n        }),\n        [LENDER_RULES_VARIABLES.BORROW_RATIO]: this.getBorrowRatio({\n          loan,\n          structureId\n        }),\n        [LENDER_RULES_VARIABLES.INCOME]: this.getTotalIncome({\n          loan\n        }),\n        [LENDER_RULES_VARIABLES.PROPERTY_TYPE]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.PROPERTY_TYPE\n        }),\n        [LENDER_RULES_VARIABLES.ZIP_CODE]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.ZIP_CODE\n        }),\n        [LENDER_RULES_VARIABLES.REMAINING_BANK_FORTUNE]: this.getRemainingFundsOfType({\n          loan,\n          structureId,\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE\n        })\n      };\n    }\n\n    getGlobalLenderRules({\n      lenderRules\n    }) {\n      const globalRules = lenderRules.filter(({\n        filter\n      }) => filter.and && filter.and.length === 1 && filter.and[0] === true);\n      const matchingRules = getMatchingRules(globalRules, {}, this.storeRuleOrigin);\n      return matchingRules;\n    }\n\n    getPrimaryLenderRules({\n      loan,\n      structureId,\n      lenderRules\n    }) {\n      const primaryRules = lenderRules.filter(rules => !this.lenderRulesIsSecondary(rules));\n      const matchingRules = getMatchingRules(primaryRules, this.getLenderRulesVariables({\n        loan,\n        structureId\n      }), this.storeRuleOrigin);\n      return matchingRules;\n    } // Gets the secondary lender rules that require other lender rules to\n    // already have been applied\n\n\n    getSecondaryLenderRules({\n      loan,\n      structureId,\n      lenderRules\n    }) {\n      const secondaryRules = lenderRules.filter(this.lenderRulesIsSecondary);\n      const matchingRules = getMatchingRules(secondaryRules, this.getLenderRulesVariables({\n        loan,\n        structureId\n      }), this.storeRuleOrigin);\n      return matchingRules;\n    }\n\n    lenderRulesIsSecondary({\n      filter\n    }) {\n      return filter.and.map(parseFilter).some(({\n        variable\n      }) => [LENDER_RULES_VARIABLES.BORROW_RATIO, LENDER_RULES_VARIABLES.INCOME].includes(variable));\n    }\n\n    applyRules(rules) {\n      if (rules.names) {\n        this.matchedRules = [...this.matchedRules, ...rules.names.filter(x => x)];\n      }\n\n      const rulesToApply = ['adminComments', 'allowPledge', 'amortizationGoal', 'amortizationYears', 'bonusAlgorithm', 'bonusConsideration', 'bonusHistoryToConsider', 'companyIncomeConsideration', 'companyIncomeHistoryToConsider', 'dividendsConsideration', 'dividendsHistoryToConsider', 'expensesSubtractFromIncome', 'fortuneReturnsRatio', 'incomeConsiderationType', 'investmentIncomeConsideration', 'maxBorrowRatio', 'maxIncomeRatio', 'pdfComments', 'pensionIncomeConsideration', 'realEstateIncomeAlgorithm', 'realEstateIncomeConsideration', 'realEstateIncomeConsiderationType', 'theoreticalInterestRate', 'theoreticalInterestRate2ndRank', 'theoreticalMaintenanceRate'];\n      rulesToApply.forEach(rule => {\n        if (rules[rule] !== undefined && rules[rule] !== null) {\n          this[rule] = rules[rule];\n        }\n      });\n    }\n\n    cleanUpUnusedRules() {\n      this.maxIncomeRatioTight = 0;\n      this.maxBorrowRatioWithPledge = 0;\n    }\n\n  }, _temp;\n};","map":{"version":3,"sources":["imports/core/utils/Calculator/LenderRulesInitializator.js"],"names":["withLenderRulesInitializator","SuperClass","constructor","initialize","lenderRules","loan","sortedlenderRules","order","orderA","orderB","globalRules","primaryRules","secondaryRules","storeRuleOrigin","Object","ruleName","getOriginOfRule","lenderRulesId","_id","getLenderRulesVariables","structureId","LENDER_RULES_VARIABLES","key","CANTON","WANTED_LOAN","INSIDE_AREA","PROPERTY_TYPE","ZIP_CODE","type","OWN_FUNDS_TYPES","BANK_FORTUNE","getGlobalLenderRules","filter","matchingRules","getMatchingRules","getPrimaryLenderRules","rules","getSecondaryLenderRules","lenderRulesIsSecondary","variable","applyRules","x","rulesToApply","rule","cleanUpUnusedRules"],"mappings":"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","sourcesContent":["import { parseFilter } from 'core/api/lenderRules/helpers';\nimport { getMatchingRules } from '../../api/lenderRules/helpers';\nimport { LENDER_RULES_VARIABLES, OWN_FUNDS_TYPES } from '../../api/constants';\n\n// @flow\n\nexport const withLenderRulesInitializator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    constructor(settings) {\n      super(settings);\n      this.initialize(settings);\n    }\n\n    initialize({ loan, structureId, lenderRules = [] }) {\n      if (!(loan && lenderRules && lenderRules.length > 0)) {\n        return;\n      }\n\n      const sortedlenderRules = lenderRules.sort(({ order: orderA }, { order: orderB }) => orderA - orderB);\n\n      // Store the rules for retrieval later\n      this.lenderRules = sortedlenderRules;\n      this.setOrganisationName(sortedlenderRules);\n      this.ruleOrigin = {};\n      this.matchedRules = [];\n\n      // Global rules\n      const globalRules = this.getGlobalLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules,\n      });\n      this.applyRules(globalRules);\n\n      // Primary rules depend only on raw data\n      const primaryRules = this.getPrimaryLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules,\n      });\n      this.applyRules(primaryRules);\n\n      // Secondary rules depend on what is calculated with the rules applied from the primary rules\n      const secondaryRules = this.getSecondaryLenderRules({\n        loan,\n        structureId,\n        lenderRules: sortedlenderRules,\n      });\n      this.applyRules(secondaryRules);\n\n      this.cleanUpUnusedRules();\n    }\n\n    setOrganisationName = (lenderRules) => {\n      this.organisationName = lenderRules.length\n        ? lenderRules[0].organisation && lenderRules[0].organisation.name\n        : null;\n    };\n\n    storeRuleOrigin(rules, lenderRulesId) {\n      Object.keys(rules).forEach((ruleName) => {\n        this.ruleOrigin[ruleName] = lenderRulesId;\n      });\n    }\n\n    getOriginOfRule(ruleName) {\n      const lenderRulesId = this.ruleOrigin[ruleName];\n      const lenderRules = this.lenderRules.find(({ _id }) => _id === lenderRulesId);\n      return lenderRules;\n    }\n\n    getLenderRulesVariables({ loan, structureId }) {\n      return {\n        [LENDER_RULES_VARIABLES.RESIDENCE_TYPE]: loan.residenceType,\n        [LENDER_RULES_VARIABLES.CANTON]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.CANTON,\n        }),\n        [LENDER_RULES_VARIABLES.WANTED_LOAN]: this.selectStructureKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.WANTED_LOAN,\n        }),\n        [LENDER_RULES_VARIABLES.PROPERTY_VALUE]: this.selectPropertyValue({\n          loan,\n          structureId,\n        }),\n        [LENDER_RULES_VARIABLES.INSIDE_AREA]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.INSIDE_AREA,\n        }),\n        [LENDER_RULES_VARIABLES.BANK_FORTUNE]: this.getFortune({ loan }),\n        [LENDER_RULES_VARIABLES.BORROW_RATIO]: this.getBorrowRatio({\n          loan,\n          structureId,\n        }),\n        [LENDER_RULES_VARIABLES.INCOME]: this.getTotalIncome({ loan }),\n        [LENDER_RULES_VARIABLES.PROPERTY_TYPE]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.PROPERTY_TYPE,\n        }),\n        [LENDER_RULES_VARIABLES.ZIP_CODE]: this.selectPropertyKey({\n          loan,\n          structureId,\n          key: LENDER_RULES_VARIABLES.ZIP_CODE,\n        }),\n        [LENDER_RULES_VARIABLES.REMAINING_BANK_FORTUNE]: this.getRemainingFundsOfType({\n          loan,\n          structureId,\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n        }),\n      };\n    }\n\n    getGlobalLenderRules({ lenderRules }) {\n      const globalRules = lenderRules.filter(({ filter }) =>\n        filter.and && filter.and.length === 1 && filter.and[0] === true);\n      const matchingRules = getMatchingRules(\n        globalRules,\n        {},\n        this.storeRuleOrigin,\n      );\n      return matchingRules;\n    }\n\n    getPrimaryLenderRules({ loan, structureId, lenderRules }) {\n      const primaryRules = lenderRules.filter(rules => !this.lenderRulesIsSecondary(rules));\n      const matchingRules = getMatchingRules(\n        primaryRules,\n        this.getLenderRulesVariables({ loan, structureId }),\n        this.storeRuleOrigin,\n      );\n      return matchingRules;\n    }\n\n    // Gets the secondary lender rules that require other lender rules to\n    // already have been applied\n    getSecondaryLenderRules({ loan, structureId, lenderRules }) {\n      const secondaryRules = lenderRules.filter(this.lenderRulesIsSecondary);\n      const matchingRules = getMatchingRules(\n        secondaryRules,\n        this.getLenderRulesVariables({ loan, structureId }),\n        this.storeRuleOrigin,\n      );\n      return matchingRules;\n    }\n\n    lenderRulesIsSecondary({ filter }) {\n      return filter.and\n        .map(parseFilter)\n        .some(({ variable }) =>\n          [\n            LENDER_RULES_VARIABLES.BORROW_RATIO,\n            LENDER_RULES_VARIABLES.INCOME,\n          ].includes(variable));\n    }\n\n    applyRules(rules) {\n      if (rules.names) {\n        this.matchedRules = [\n          ...this.matchedRules,\n          ...rules.names.filter(x => x),\n        ];\n      }\n\n      const rulesToApply = [\n        'adminComments',\n        'allowPledge',\n        'amortizationGoal',\n        'amortizationYears',\n        'bonusAlgorithm',\n        'bonusConsideration',\n        'bonusHistoryToConsider',\n        'companyIncomeConsideration',\n        'companyIncomeHistoryToConsider',\n        'dividendsConsideration',\n        'dividendsHistoryToConsider',\n        'expensesSubtractFromIncome',\n        'fortuneReturnsRatio',\n        'incomeConsiderationType',\n        'investmentIncomeConsideration',\n        'maxBorrowRatio',\n        'maxIncomeRatio',\n        'pdfComments',\n        'pensionIncomeConsideration',\n        'realEstateIncomeAlgorithm',\n        'realEstateIncomeConsideration',\n        'realEstateIncomeConsiderationType',\n        'theoreticalInterestRate',\n        'theoreticalInterestRate2ndRank',\n        'theoreticalMaintenanceRate',\n      ];\n\n      rulesToApply.forEach((rule) => {\n        if (rules[rule] !== undefined && rules[rule] !== null) {\n          this[rule] = rules[rule];\n        }\n      });\n    }\n\n    cleanUpUnusedRules() {\n      this.maxIncomeRatioTight = 0;\n      this.maxBorrowRatioWithPledge = 0;\n    }\n  };\n"]},"sourceType":"script","hash":"cba1414a4da03bc13ea30d879f235adda5ec6bf4"}
