{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/reactFunctions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/utils/reactFunctions.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/reactFunctions.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/reactFunctions.js"],"names":["React","renderComponent","get","childrenToComponent","children","props","Children","map","child","cloneElement","renderObjectOrFunction","objectOrFunction","isEqual","a","b","Array","isArray","length","every","item","i","Error","arePathsEqual","paths","object1","object2","path","arePathsUnequal","testFunc","args"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,MAAMC,mBAAmB,GAAGC,QAAQ,IAAIC,KAAK,IAClDL,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA6BI,KAAK,IAAIR,KAAK,CAACS,YAAN,CAAmBD,KAAnB,EAA0BH,KAA1B,CAAtC,CADK;AAGP,OAAO,MAAMK,sBAAsB,GAAGC,gBAAgB,IACpDV,eAAe,CAAC,OAAOU,gBAAP,KAA4B,UAA5B,GACZA,gBADY,GAEZ,MAAMA,gBAFK,CADV;;AAKP,MAAMC,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,MAAIC,KAAK,CAACC,OAAN,CAAcH,CAAd,KAAoBE,KAAK,CAACC,OAAN,CAAcF,CAAd,CAAxB,EAA0C;AACxC,QAAID,CAAC,CAACI,MAAF,KAAaH,CAAC,CAACG,MAAnB,EAA2B;AACzB,aAAO,KAAP;AACD;;AAED,WAAOJ,CAAC,CAACK,KAAF,CAAQ,CAACC,IAAD,EAAOC,CAAP,KAAaR,OAAO,CAACO,IAAD,EAAOL,CAAC,CAACM,CAAD,CAAR,CAA5B,CAAP;AACD;;AAED,MACG,OAAOP,CAAP,KAAa,QAAb,IAAyBA,CAAC,KAAK,IAAhC,IACI,OAAOC,CAAP,KAAa,QAAb,IAAyBA,CAAC,KAAK,IAFrC,EAGE;AACA,UAAM,IAAIO,KAAJ,CAAU,sEAAV,CAAN;AACD,GAduB,CAgBxB;;;AACA,SAAOR,CAAC,KAAKC,CAAb;AACD,CAlBD;;AAoBA,OAAO,MAAMQ,aAAa,GAAGC,KAAK,IAAI,CAACC,OAAD,EAAUC,OAAV,KACpCF,KAAK,CAACL,KAAN,CAAYQ,IAAI,IAAId,OAAO,CAACV,GAAG,CAACsB,OAAD,EAAUE,IAAV,CAAJ,EAAqBxB,GAAG,CAACuB,OAAD,EAAUC,IAAV,CAAxB,CAA3B,CADK;AAGP,OAAO,MAAMC,eAAe,GAAIJ,KAAD,IAAW;AACxC,QAAMK,QAAQ,GAAGN,aAAa,CAACC,KAAD,CAA9B;AACA,SAAO,CAAC,GAAGM,IAAJ,KAAa,CAACD,QAAQ,CAAC,GAAGC,IAAJ,CAA7B;AACD,CAHM","sourcesContent":["import React from 'react';\nimport { renderComponent } from 'recompose';\nimport get from 'lodash/get';\n\nexport const childrenToComponent = children => props =>\n  React.Children.map(children, child => React.cloneElement(child, props));\n\nexport const renderObjectOrFunction = objectOrFunction =>\n  renderComponent(typeof objectOrFunction === 'function'\n    ? objectOrFunction\n    : () => objectOrFunction);\n\nconst isEqual = (a, b) => {\n  if (Array.isArray(a) || Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return a.every((item, i) => isEqual(item, b[i]));\n  }\n\n  if (\n    (typeof a === 'object' && a !== null)\n    || (typeof b === 'object' && b !== null)\n  ) {\n    throw new Error('Should not compare objects between each other, use a more nested key');\n  }\n\n  // Ignore edge cases, normally our props should never be NaN or Infinity\n  return a === b;\n};\n\nexport const arePathsEqual = paths => (object1, object2) =>\n  paths.every(path => isEqual(get(object1, path), get(object2, path)));\n\nexport const arePathsUnequal = (paths) => {\n  const testFunc = arePathsEqual(paths);\n  return (...args) => !testFunc(...args);\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/reactFunctions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/reactFunctions.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nmodule.export({\n  childrenToComponent: function () {\n    return childrenToComponent;\n  },\n  renderObjectOrFunction: function () {\n    return renderObjectOrFunction;\n  },\n  arePathsEqual: function () {\n    return arePathsEqual;\n  },\n  arePathsUnequal: function () {\n    return arePathsUnequal;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar renderComponent;\nmodule.link(\"recompose\", {\n  renderComponent: function (v) {\n    renderComponent = v;\n  }\n}, 1);\nvar get;\nmodule.link(\"lodash/get\", {\n  \"default\": function (v) {\n    get = v;\n  }\n}, 2);\n\nvar childrenToComponent = function (children) {\n  return function (props) {\n    return React.Children.map(children, function (child) {\n      return React.cloneElement(child, props);\n    });\n  };\n};\n\nvar renderObjectOrFunction = function (objectOrFunction) {\n  return renderComponent(typeof objectOrFunction === 'function' ? objectOrFunction : function () {\n    return objectOrFunction;\n  });\n};\n\nvar isEqual = function (a, b) {\n  if (Array.isArray(a) || Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return a.every(function (item, i) {\n      return isEqual(item, b[i]);\n    });\n  }\n\n  if ((0, _typeof2.default)(a) === 'object' && a !== null || (0, _typeof2.default)(b) === 'object' && b !== null) {\n    throw new Error('Should not compare objects between each other, use a more nested key');\n  } // Ignore edge cases, normally our props should never be NaN or Infinity\n\n\n  return a === b;\n};\n\nvar arePathsEqual = function (paths) {\n  return function (object1, object2) {\n    return paths.every(function (path) {\n      return isEqual(get(object1, path), get(object2, path));\n    });\n  };\n};\n\nvar arePathsUnequal = function (paths) {\n  var testFunc = arePathsEqual(paths);\n  return function () {\n    return !testFunc.apply(void 0, arguments);\n  };\n};","map":{"version":3,"sources":["imports/core/utils/reactFunctions.js"],"names":["childrenToComponent","children","props","React","child","renderObjectOrFunction","objectOrFunction","renderComponent","isEqual","Array","a","b","arePathsEqual","paths","path","get","arePathsUnequal","testFunc"],"mappings":";;;;AAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,mBAAA,EAAA;AAAA,WAAA,mBAAA;AAAA,GAAA;AAAA,EAAA,sBAAA,EAAA;AAAA,WAAA,sBAAA;AAAA,GAAA;AAAA,EAAA,aAAA,EAAA;AAAA,WAAA,aAAA;AAAA,GAAA;AAAA,EAAA,eAAA,EAAA;AAAA,WAAA,eAAA;AAAA;AAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,eAAA,YAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,GAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAIO,IAAMA,mBAAmB,GAAGC,UAAAA,QAAQ;AAAA,SAAIC,UAAAA,KAAK;AAAA,WAClDC,KAAK,CAALA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAA6BC,UAAAA,KAAK;AAAA,aAAID,KAAK,CAALA,YAAAA,CAAAA,KAAAA,EADjC,KACiCA,CAAJ;AAAA,KAAlCA,CADkD;AAAA,GAAT;AAAA,CAApC;;AAGA,IAAME,sBAAsB,GAAGC,UAAAA,gBAAgB;AAAA,SACpDC,eAAe,CAAC,OAAA,gBAAA,KAAA,UAAA,GAAA,gBAAA,GAEZ;AAAA,WAHC,gBAGD;AAAA,GAFW,CADqC;AAAA,CAA/C;;AAKP,IAAMC,OAAO,GAAG,UAAA,CAAA,EAAA,CAAA,EAAU;AACxB,MAAIC,KAAK,CAALA,OAAAA,CAAAA,CAAAA,KAAoBA,KAAK,CAALA,OAAAA,CAAxB,CAAwBA,CAAxB,EAA0C;AACxC,QAAIC,CAAC,CAADA,MAAAA,KAAaC,CAAC,CAAlB,MAAA,EAA2B;AACzB,aAAA,KAAA;AACD;;AAED,WAAOD,CAAC,CAADA,KAAAA,CAAQ,UAAA,IAAA,EAAA,CAAA;AAAA,aAAaF,OAAO,CAAA,IAAA,EAAOG,CAAC,CAA3C,CAA2C,CAAR,CAApB;AAAA,KAARD,CAAP;AACD;;AAED,MACG,sBAAA,CAAA,MAAA,QAAA,IAAyBA,CAAC,KAA3B,IAAC,IACG,sBAAA,CAAA,MAAA,QAAA,IAAyBC,CAAC,KAFhC,IAAA,EAGE;AACA,UAAM,IAAA,KAAA,CAAN,sEAAM,CAAN;AAbsB,GAAA,CAgBxB;;;AACA,SAAOD,CAAC,KAAR,CAAA;AAjBF,CAAA;;AAoBO,IAAME,aAAa,GAAGC,UAAAA,KAAK;AAAA,SAAI,UAAA,OAAA,EAAA,OAAA;AAAA,WACpCA,KAAK,CAALA,KAAAA,CAAYC,UAAAA,IAAI;AAAA,aAAIN,OAAO,CAACO,GAAG,CAAA,OAAA,EAAJ,IAAI,CAAJ,EAAqBA,GAAG,CAAA,OAAA,EAD9C,IAC8C,CAAxB,CAAX;AAAA,KAAhBF,CADoC;AAAA,GAAJ;AAAA,CAA3B;;AAGA,IAAMG,eAAe,GAAIH,UAAAA,KAAD,EAAW;AACxC,MAAMI,QAAQ,GAAGL,aAAa,CAA9B,KAA8B,CAA9B;AACA,SAAO;AAAA,WAAa,CAACK,QAArB,MAAqBA,mBAAd;AAAA,GAAP;AAFK,CAAA","sourcesContent":["import React from 'react';\nimport { renderComponent } from 'recompose';\nimport get from 'lodash/get';\n\nexport const childrenToComponent = children => props =>\n  React.Children.map(children, child => React.cloneElement(child, props));\n\nexport const renderObjectOrFunction = objectOrFunction =>\n  renderComponent(typeof objectOrFunction === 'function'\n    ? objectOrFunction\n    : () => objectOrFunction);\n\nconst isEqual = (a, b) => {\n  if (Array.isArray(a) || Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return a.every((item, i) => isEqual(item, b[i]));\n  }\n\n  if (\n    (typeof a === 'object' && a !== null)\n    || (typeof b === 'object' && b !== null)\n  ) {\n    throw new Error('Should not compare objects between each other, use a more nested key');\n  }\n\n  // Ignore edge cases, normally our props should never be NaN or Infinity\n  return a === b;\n};\n\nexport const arePathsEqual = paths => (object1, object2) =>\n  paths.every(path => isEqual(get(object1, path), get(object2, path)));\n\nexport const arePathsUnequal = (paths) => {\n  const testFunc = arePathsEqual(paths);\n  return (...args) => !testFunc(...args);\n};\n"]},"sourceType":"script","hash":"8bd0ef293b1deeafc5e055d8735e7b1d59602d69"}
