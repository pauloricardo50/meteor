{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/security/collections/PropertySecurity.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/security/collections/PropertySecurity.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/security/collections/PropertySecurity.js","inputSourceMap":{"version":3,"sources":["imports/core/api/security/collections/PropertySecurity.js"],"names":["Meteor","HTTP_STATUS_CODES","Security","Properties","Promotions","UserService","ROLES","PromotionSecurity","PropertyService","PROPERTY_CATEGORY","isAllowedToViewProProperty","isAllowedToModifyProProperty","isAllowedToInviteCustomersToProProperty","isAllowedToInviteProUsersToProProperty","isAllowedToRemoveCustomerFromProProperty","isAllowedToBookProProperty","isAllowedToBookProPropertyToCustomer","isAllowedToSellProProperty","isAllowedToSellProPropertyToCustomer","isAllowedToManageProPropertyPermissions","LoanService","getProPropertyCustomerOwnerType","PropertySecurity","getProperty","propertyId","property","fetchOne","$filters","_id","category","loans","user","status","userId","userLinks","users","getCurrentUser","currentUser","organisations","properties","permissions","getLoan","loanId","loan","getObjects","objects","checkPermissions","checkingFunction","errorMessage","hasMinimumRole","role","ADMIN","Error","NOT_FOUND","handleUnauthorized","isAllowedToInsert","checkLoggedIn","isPromotionLot","PROMOTION","checkBelongsToPromotion","promotion","findOne","isAllowedToModify","promotionId","isProUserAllowedToUpdate","PRO","isAllowedToUpdate","checkOwnership","isAllowedToDelete","hasAccessToProperty","isAllowedToView","error","hasProperty","isPropertyPublic","checkPropertyIsPublic","isAllowedToManageDocuments","isAllowedToInviteCustomers","isAllowedToInviteProUsers","isAllowedToRemoveCustomer","customerOwnerType","customerId","isAllowedToBook","isAllowedToBookToCustomer","isAllowedToCancelBooking","isAllowedToSell","isAllowedToSellToCustomer","isAllowedToManagePermissions","isAllowedToAddAnonymousLoan"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { HTTP_STATUS_CODES } from 'core/api/RESTAPI/server/restApiConstants';\nimport Security from '../Security';\nimport { Properties, Promotions } from '../..';\nimport UserService from '../../users/server/UserService';\nimport { ROLES } from '../../users/userConstants';\nimport PromotionSecurity from './PromotionSecurity';\nimport PropertyService from '../../properties/server/PropertyService';\nimport { PROPERTY_CATEGORY } from '../../properties/propertyConstants';\nimport {\n  isAllowedToViewProProperty,\n  isAllowedToModifyProProperty,\n  isAllowedToInviteCustomersToProProperty,\n  isAllowedToInviteProUsersToProProperty,\n  isAllowedToRemoveCustomerFromProProperty,\n  isAllowedToBookProProperty,\n  isAllowedToBookProPropertyToCustomer,\n  isAllowedToSellProProperty,\n  isAllowedToSellProPropertyToCustomer,\n  isAllowedToManageProPropertyPermissions,\n} from '../clientSecurityHelpers';\nimport LoanService from '../../loans/server/LoanService';\nimport { getProPropertyCustomerOwnerType } from '../../properties/server/propertyServerHelpers';\n\nclass PropertySecurity {\n  static getProperty({ propertyId }) {\n    const property = PropertyService.fetchOne({\n      $filters: { _id: propertyId },\n      category: 1,\n      loans: { user: { _id: 1 } },\n      status: 1,\n      userId: 1,\n      userLinks: { _id: 1 },\n      users: { _id: 1 },\n    });\n\n    return property;\n  }\n\n  static getCurrentUser({ userId }) {\n    const currentUser = UserService.fetchOne({\n      $filters: { _id: userId },\n      organisations: { users: { _id: 1 } },\n      properties: { _id: 1, permissions: 1, status: 1 },\n    });\n\n    return currentUser;\n  }\n\n  static getLoan({ loanId }) {\n    const loan = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      user: { _id: 1 },\n    });\n\n    return loan;\n  }\n\n  static getObjects({ propertyId, userId, loanId }) {\n    const objects = {};\n    if (propertyId) {\n      objects.property = this.getProperty({ propertyId });\n    }\n    if (userId) {\n      objects.currentUser = this.getCurrentUser({ userId });\n    }\n    if (loanId) {\n      objects.loan = this.getLoan({ loanId });\n    }\n    return objects;\n  }\n\n  static checkPermissions({\n    propertyId,\n    userId,\n    checkingFunction,\n    errorMessage,\n  }) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    const { property, currentUser } = this.getObjects({ propertyId, userId });\n\n    if (!property) {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.NOT_FOUND,\n        `Property with id \"${propertyId}\" not found`,\n      );\n    }\n\n    if (!checkingFunction({ property, currentUser })) {\n      Security.handleUnauthorized(errorMessage || 'Checking permissions');\n    }\n  }\n\n  static isAllowedToInsert() {\n    Security.checkLoggedIn();\n  }\n\n  static isPromotionLot(propertyId) {\n    const { category } = PropertyService.fetchOne({\n      $filters: { _id: propertyId },\n      category: 1,\n    });\n\n    return category === PROPERTY_CATEGORY.PROMOTION;\n  }\n\n  static checkBelongsToPromotion(propertyId, userId) {\n    const promotion = Promotions.findOne({ 'propertyLinks._id': propertyId });\n    if (promotion) {\n      PromotionSecurity.isAllowedToModify({\n        promotionId: promotion._id,\n        userId,\n      });\n      return;\n    }\n\n    Security.handleUnauthorized('Not allowed to modify promotion property');\n  }\n\n  static isProUserAllowedToUpdate({ propertyId, userId }) {\n    const { category } = Properties.findOne(propertyId);\n    if (category === PROPERTY_CATEGORY.PRO) {\n      this.checkPermissions({\n        propertyId,\n        userId,\n        checkingFunction: isAllowedToModifyProProperty,\n        errorMessage: 'Vous ne pouvez pas modifier ce bien immobilier',\n      });\n    } else if (category === PROPERTY_CATEGORY.PROMOTION) {\n      this.checkBelongsToPromotion(propertyId, userId);\n    } else {\n      Security.handleUnauthorized('Vous ne pouvez pas modifier ce bien immobilier');\n    }\n  }\n\n  static isAllowedToUpdate(propertyId, userId) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    if (Security.hasMinimumRole({ role: ROLES.PRO, userId })) {\n      this.isProUserAllowedToUpdate({ propertyId, userId });\n    } else {\n      const property = Properties.findOne(propertyId);\n      Security.checkOwnership(property, userId);\n    }\n  }\n\n  static isAllowedToDelete(propertyId, userId) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    const property = Properties.findOne(propertyId);\n    Security.checkOwnership(property);\n  }\n\n  static hasAccessToProperty({ propertyId, userId }) {\n    try {\n      this.isAllowedToView({ propertyId, userId });\n      return;\n    } catch (error) {\n      const hasProperty = UserService.hasProperty({ userId, propertyId });\n\n      if (!hasProperty) {\n        Security.handleUnauthorized(\"Vous n'avez pas accès à ce bien immobilier\");\n      }\n    }\n  }\n\n  static isPropertyPublic({ propertyId }) {\n    const property = PropertyService.fetchOne({\n      $filters: { _id: propertyId },\n      category: 1,\n    });\n\n    return property && property.category === PROPERTY_CATEGORY.PRO;\n  }\n\n  static checkPropertyIsPublic({ propertyId }) {\n    if (!this.isPropertyPublic({ propertyId })) {\n      Security.handleUnauthorized();\n    }\n  }\n\n  static isAllowedToView({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToViewProProperty,\n      errorMessage: \"Vous n'avez pas accès à ce bien immobilier\",\n    });\n  }\n\n  static isAllowedToManageDocuments({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToModifyProProperty,\n      errorMessage:\n        'Vous ne pouvez pas gérer les documents de ce bien immobilier',\n    });\n  }\n\n  static isAllowedToInviteCustomers({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToInviteCustomersToProProperty,\n      errorMessage:\n        'Vous ne pouvez pas inviter de clients sur ce bien immobilier',\n    });\n  }\n\n  static isAllowedToInviteProUsers({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToInviteProUsersToProProperty,\n      errorMessage:\n        \"Vous ne pouvez pas inviter d'utilisateurs sur ce bien immobilier\",\n    });\n  }\n\n  static isAllowedToRemoveCustomer({ userId, propertyId, loanId }) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    const { property, currentUser, loan } = this.getObjects({\n      propertyId,\n      userId,\n      loanId,\n    });\n\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId,\n    });\n\n    if (\n      !isAllowedToRemoveCustomerFromProProperty({\n        property,\n        currentUser,\n        customerOwnerType,\n      })\n    ) {\n      Security.handleUnauthorized('Vous ne pouvez pas supprimer ce client de ce bien immobilier');\n    }\n  }\n\n  static isAllowedToBook({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToBookProProperty,\n      errorMessage: 'Vous ne pouvez pas réserver ce bien immobilier',\n    });\n  }\n\n  static isAllowedToBookToCustomer({ propertyId, loanId, userId }) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    const { property, currentUser, loan } = this.getObjects({\n      propertyId,\n      userId,\n      loanId,\n    });\n\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId,\n    });\n\n    if (\n      !isAllowedToBookProPropertyToCustomer({\n        property,\n        currentUser,\n        customerOwnerType,\n      })\n    ) {\n      Security.handleUnauthorized('Vous ne pouvez pas réserver ce bien immobilier à ce client');\n    }\n  }\n\n  static isAllowedToCancelBooking({ propertyId, loanId, userId }) {\n    // TODO\n  }\n\n  static isAllowedToSell({ propertyId, userId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToSellProProperty,\n      errorMessage: 'Vous ne pouvez pas vendre ce bien immobilier',\n    });\n  }\n\n  static isAllowedToSellToCustomer({ propertyId, loanId, userId }) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n    const { property, currentUser, loan } = this.getObjects({\n      propertyId,\n      userId,\n      loanId,\n    });\n\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId,\n    });\n\n    if (\n      !isAllowedToSellProPropertyToCustomer({\n        property,\n        currentUser,\n        customerOwnerType,\n      })\n    ) {\n      Security.handleUnauthorized('Vous ne pouvez pas vendre ce bien immobilier à ce client');\n    }\n  }\n\n  static isAllowedToManagePermissions({ propertyId, userId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToManageProPropertyPermissions,\n      errorMessage:\n        'Vous ne pouvez pas gérer les permissions sur ce bien immobilier',\n    });\n  }\n\n  static isAllowedToAddAnonymousLoan({ propertyId }) {\n    const property = this.getProperty({ propertyId });\n\n    if (!property || property.category !== PROPERTY_CATEGORY.PRO) {\n      Security.handleUnauthorized('Unauthorized propertyId');\n    }\n  }\n}\n\nexport default PropertySecurity;\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/security/collections/PropertySecurity.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/security/collections/PropertySecurity.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../../RESTAPI/server/restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 1);\nlet Security;\nmodule.link(\"../Security\", {\n  default(v) {\n    Security = v;\n  }\n\n}, 2);\nlet Properties, Promotions;\nmodule.link(\"../..\", {\n  Properties(v) {\n    Properties = v;\n  },\n\n  Promotions(v) {\n    Promotions = v;\n  }\n\n}, 3);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 4);\nlet ROLES;\nmodule.link(\"../../users/userConstants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 5);\nlet PromotionSecurity;\nmodule.link(\"./PromotionSecurity\", {\n  default(v) {\n    PromotionSecurity = v;\n  }\n\n}, 6);\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 7);\nlet PROPERTY_CATEGORY;\nmodule.link(\"../../properties/propertyConstants\", {\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 8);\nlet isAllowedToViewProProperty, isAllowedToModifyProProperty, isAllowedToInviteCustomersToProProperty, isAllowedToInviteProUsersToProProperty, isAllowedToRemoveCustomerFromProProperty, isAllowedToBookProProperty, isAllowedToBookProPropertyToCustomer, isAllowedToSellProProperty, isAllowedToSellProPropertyToCustomer, isAllowedToManageProPropertyPermissions;\nmodule.link(\"../clientSecurityHelpers\", {\n  isAllowedToViewProProperty(v) {\n    isAllowedToViewProProperty = v;\n  },\n\n  isAllowedToModifyProProperty(v) {\n    isAllowedToModifyProProperty = v;\n  },\n\n  isAllowedToInviteCustomersToProProperty(v) {\n    isAllowedToInviteCustomersToProProperty = v;\n  },\n\n  isAllowedToInviteProUsersToProProperty(v) {\n    isAllowedToInviteProUsersToProProperty = v;\n  },\n\n  isAllowedToRemoveCustomerFromProProperty(v) {\n    isAllowedToRemoveCustomerFromProProperty = v;\n  },\n\n  isAllowedToBookProProperty(v) {\n    isAllowedToBookProProperty = v;\n  },\n\n  isAllowedToBookProPropertyToCustomer(v) {\n    isAllowedToBookProPropertyToCustomer = v;\n  },\n\n  isAllowedToSellProProperty(v) {\n    isAllowedToSellProProperty = v;\n  },\n\n  isAllowedToSellProPropertyToCustomer(v) {\n    isAllowedToSellProPropertyToCustomer = v;\n  },\n\n  isAllowedToManageProPropertyPermissions(v) {\n    isAllowedToManageProPropertyPermissions = v;\n  }\n\n}, 9);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 10);\nlet getProPropertyCustomerOwnerType;\nmodule.link(\"../../properties/server/propertyServerHelpers\", {\n  getProPropertyCustomerOwnerType(v) {\n    getProPropertyCustomerOwnerType = v;\n  }\n\n}, 11);\n\nclass PropertySecurity {\n  static getProperty({\n    propertyId\n  }) {\n    const property = PropertyService.fetchOne({\n      $filters: {\n        _id: propertyId\n      },\n      category: 1,\n      loans: {\n        user: {\n          _id: 1\n        }\n      },\n      status: 1,\n      userId: 1,\n      userLinks: {\n        _id: 1\n      },\n      users: {\n        _id: 1\n      }\n    });\n    return property;\n  }\n\n  static getCurrentUser({\n    userId\n  }) {\n    const currentUser = UserService.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      organisations: {\n        users: {\n          _id: 1\n        }\n      },\n      properties: {\n        _id: 1,\n        permissions: 1,\n        status: 1\n      }\n    });\n    return currentUser;\n  }\n\n  static getLoan({\n    loanId\n  }) {\n    const loan = LoanService.fetchOne({\n      $filters: {\n        _id: loanId\n      },\n      user: {\n        _id: 1\n      }\n    });\n    return loan;\n  }\n\n  static getObjects({\n    propertyId,\n    userId,\n    loanId\n  }) {\n    const objects = {};\n\n    if (propertyId) {\n      objects.property = this.getProperty({\n        propertyId\n      });\n    }\n\n    if (userId) {\n      objects.currentUser = this.getCurrentUser({\n        userId\n      });\n    }\n\n    if (loanId) {\n      objects.loan = this.getLoan({\n        loanId\n      });\n    }\n\n    return objects;\n  }\n\n  static checkPermissions({\n    propertyId,\n    userId,\n    checkingFunction,\n    errorMessage\n  }) {\n    if (Security.hasMinimumRole({\n      role: ROLES.ADMIN,\n      userId\n    })) {\n      return;\n    }\n\n    const {\n      property,\n      currentUser\n    } = this.getObjects({\n      propertyId,\n      userId\n    });\n\n    if (!property) {\n      throw new Meteor.Error(HTTP_STATUS_CODES.NOT_FOUND, `Property with id \"${propertyId}\" not found`);\n    }\n\n    if (!checkingFunction({\n      property,\n      currentUser\n    })) {\n      Security.handleUnauthorized(errorMessage || 'Checking permissions');\n    }\n  }\n\n  static isAllowedToInsert() {\n    Security.checkLoggedIn();\n  }\n\n  static isPromotionLot(propertyId) {\n    const {\n      category\n    } = PropertyService.fetchOne({\n      $filters: {\n        _id: propertyId\n      },\n      category: 1\n    });\n    return category === PROPERTY_CATEGORY.PROMOTION;\n  }\n\n  static checkBelongsToPromotion(propertyId, userId) {\n    const promotion = Promotions.findOne({\n      'propertyLinks._id': propertyId\n    });\n\n    if (promotion) {\n      PromotionSecurity.isAllowedToModify({\n        promotionId: promotion._id,\n        userId\n      });\n      return;\n    }\n\n    Security.handleUnauthorized('Not allowed to modify promotion property');\n  }\n\n  static isProUserAllowedToUpdate({\n    propertyId,\n    userId\n  }) {\n    const {\n      category\n    } = Properties.findOne(propertyId);\n\n    if (category === PROPERTY_CATEGORY.PRO) {\n      this.checkPermissions({\n        propertyId,\n        userId,\n        checkingFunction: isAllowedToModifyProProperty,\n        errorMessage: 'Vous ne pouvez pas modifier ce bien immobilier'\n      });\n    } else if (category === PROPERTY_CATEGORY.PROMOTION) {\n      this.checkBelongsToPromotion(propertyId, userId);\n    } else {\n      Security.handleUnauthorized('Vous ne pouvez pas modifier ce bien immobilier');\n    }\n  }\n\n  static isAllowedToUpdate(propertyId, userId) {\n    if (Security.hasMinimumRole({\n      role: ROLES.ADMIN,\n      userId\n    })) {\n      return;\n    }\n\n    if (Security.hasMinimumRole({\n      role: ROLES.PRO,\n      userId\n    })) {\n      this.isProUserAllowedToUpdate({\n        propertyId,\n        userId\n      });\n    } else {\n      const property = Properties.findOne(propertyId);\n      Security.checkOwnership(property, userId);\n    }\n  }\n\n  static isAllowedToDelete(propertyId, userId) {\n    if (Security.hasMinimumRole({\n      role: ROLES.ADMIN,\n      userId\n    })) {\n      return;\n    }\n\n    const property = Properties.findOne(propertyId);\n    Security.checkOwnership(property);\n  }\n\n  static hasAccessToProperty({\n    propertyId,\n    userId\n  }) {\n    try {\n      this.isAllowedToView({\n        propertyId,\n        userId\n      });\n      return;\n    } catch (error) {\n      const hasProperty = UserService.hasProperty({\n        userId,\n        propertyId\n      });\n\n      if (!hasProperty) {\n        Security.handleUnauthorized(\"Vous n'avez pas accès à ce bien immobilier\");\n      }\n    }\n  }\n\n  static isPropertyPublic({\n    propertyId\n  }) {\n    const property = PropertyService.fetchOne({\n      $filters: {\n        _id: propertyId\n      },\n      category: 1\n    });\n    return property && property.category === PROPERTY_CATEGORY.PRO;\n  }\n\n  static checkPropertyIsPublic({\n    propertyId\n  }) {\n    if (!this.isPropertyPublic({\n      propertyId\n    })) {\n      Security.handleUnauthorized();\n    }\n  }\n\n  static isAllowedToView({\n    userId,\n    propertyId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToViewProProperty,\n      errorMessage: \"Vous n'avez pas accès à ce bien immobilier\"\n    });\n  }\n\n  static isAllowedToManageDocuments({\n    userId,\n    propertyId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToModifyProProperty,\n      errorMessage: 'Vous ne pouvez pas gérer les documents de ce bien immobilier'\n    });\n  }\n\n  static isAllowedToInviteCustomers({\n    userId,\n    propertyId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToInviteCustomersToProProperty,\n      errorMessage: 'Vous ne pouvez pas inviter de clients sur ce bien immobilier'\n    });\n  }\n\n  static isAllowedToInviteProUsers({\n    userId,\n    propertyId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToInviteProUsersToProProperty,\n      errorMessage: \"Vous ne pouvez pas inviter d'utilisateurs sur ce bien immobilier\"\n    });\n  }\n\n  static isAllowedToRemoveCustomer({\n    userId,\n    propertyId,\n    loanId\n  }) {\n    if (Security.hasMinimumRole({\n      role: ROLES.ADMIN,\n      userId\n    })) {\n      return;\n    }\n\n    const {\n      property,\n      currentUser,\n      loan\n    } = this.getObjects({\n      propertyId,\n      userId,\n      loanId\n    });\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId\n    });\n\n    if (!isAllowedToRemoveCustomerFromProProperty({\n      property,\n      currentUser,\n      customerOwnerType\n    })) {\n      Security.handleUnauthorized('Vous ne pouvez pas supprimer ce client de ce bien immobilier');\n    }\n  }\n\n  static isAllowedToBook({\n    userId,\n    propertyId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToBookProProperty,\n      errorMessage: 'Vous ne pouvez pas réserver ce bien immobilier'\n    });\n  }\n\n  static isAllowedToBookToCustomer({\n    propertyId,\n    loanId,\n    userId\n  }) {\n    if (Security.hasMinimumRole({\n      role: ROLES.ADMIN,\n      userId\n    })) {\n      return;\n    }\n\n    const {\n      property,\n      currentUser,\n      loan\n    } = this.getObjects({\n      propertyId,\n      userId,\n      loanId\n    });\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId\n    });\n\n    if (!isAllowedToBookProPropertyToCustomer({\n      property,\n      currentUser,\n      customerOwnerType\n    })) {\n      Security.handleUnauthorized('Vous ne pouvez pas réserver ce bien immobilier à ce client');\n    }\n  }\n\n  static isAllowedToCancelBooking({\n    propertyId,\n    loanId,\n    userId\n  }) {// TODO\n  }\n\n  static isAllowedToSell({\n    propertyId,\n    userId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToSellProProperty,\n      errorMessage: 'Vous ne pouvez pas vendre ce bien immobilier'\n    });\n  }\n\n  static isAllowedToSellToCustomer({\n    propertyId,\n    loanId,\n    userId\n  }) {\n    if (Security.hasMinimumRole({\n      role: ROLES.ADMIN,\n      userId\n    })) {\n      return;\n    }\n\n    const {\n      property,\n      currentUser,\n      loan\n    } = this.getObjects({\n      propertyId,\n      userId,\n      loanId\n    });\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId\n    });\n\n    if (!isAllowedToSellProPropertyToCustomer({\n      property,\n      currentUser,\n      customerOwnerType\n    })) {\n      Security.handleUnauthorized('Vous ne pouvez pas vendre ce bien immobilier à ce client');\n    }\n  }\n\n  static isAllowedToManagePermissions({\n    propertyId,\n    userId\n  }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToManageProPropertyPermissions,\n      errorMessage: 'Vous ne pouvez pas gérer les permissions sur ce bien immobilier'\n    });\n  }\n\n  static isAllowedToAddAnonymousLoan({\n    propertyId\n  }) {\n    const property = this.getProperty({\n      propertyId\n    });\n\n    if (!property || property.category !== PROPERTY_CATEGORY.PRO) {\n      Security.handleUnauthorized('Unauthorized propertyId');\n    }\n  }\n\n}\n\nmodule.exportDefault(PropertySecurity);","map":{"version":3,"sources":["imports/core/api/security/collections/PropertySecurity.js"],"names":["propertyId","property","$filters","_id","category","loans","user","status","userId","userLinks","users","currentUser","organisations","properties","permissions","loanId","loan","objects","errorMessage","role","ROLES","Meteor","HTTP_STATUS_CODES","checkingFunction","Security","PROPERTY_CATEGORY","promotion","PromotionSecurity","promotionId","Properties","hasProperty","customerOwnerType","getProPropertyCustomerOwnerType","customerId","isAllowedToRemoveCustomerFromProProperty","isAllowedToBookProPropertyToCustomer","isAllowedToSellProPropertyToCustomer"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { HTTP_STATUS_CODES } from 'core/api/RESTAPI/server/restApiConstants';\nimport Security from '../Security';\nimport { Properties, Promotions } from '../..';\nimport UserService from '../../users/server/UserService';\nimport { ROLES } from '../../users/userConstants';\nimport PromotionSecurity from './PromotionSecurity';\nimport PropertyService from '../../properties/server/PropertyService';\nimport { PROPERTY_CATEGORY } from '../../properties/propertyConstants';\nimport {\n  isAllowedToViewProProperty,\n  isAllowedToModifyProProperty,\n  isAllowedToInviteCustomersToProProperty,\n  isAllowedToInviteProUsersToProProperty,\n  isAllowedToRemoveCustomerFromProProperty,\n  isAllowedToBookProProperty,\n  isAllowedToBookProPropertyToCustomer,\n  isAllowedToSellProProperty,\n  isAllowedToSellProPropertyToCustomer,\n  isAllowedToManageProPropertyPermissions,\n} from '../clientSecurityHelpers';\nimport LoanService from '../../loans/server/LoanService';\nimport { getProPropertyCustomerOwnerType } from '../../properties/server/propertyServerHelpers';\n\nclass PropertySecurity {\n  static getProperty({ propertyId }) {\n    const property = PropertyService.fetchOne({\n      $filters: { _id: propertyId },\n      category: 1,\n      loans: { user: { _id: 1 } },\n      status: 1,\n      userId: 1,\n      userLinks: { _id: 1 },\n      users: { _id: 1 },\n    });\n\n    return property;\n  }\n\n  static getCurrentUser({ userId }) {\n    const currentUser = UserService.fetchOne({\n      $filters: { _id: userId },\n      organisations: { users: { _id: 1 } },\n      properties: { _id: 1, permissions: 1, status: 1 },\n    });\n\n    return currentUser;\n  }\n\n  static getLoan({ loanId }) {\n    const loan = LoanService.fetchOne({\n      $filters: { _id: loanId },\n      user: { _id: 1 },\n    });\n\n    return loan;\n  }\n\n  static getObjects({ propertyId, userId, loanId }) {\n    const objects = {};\n    if (propertyId) {\n      objects.property = this.getProperty({ propertyId });\n    }\n    if (userId) {\n      objects.currentUser = this.getCurrentUser({ userId });\n    }\n    if (loanId) {\n      objects.loan = this.getLoan({ loanId });\n    }\n    return objects;\n  }\n\n  static checkPermissions({\n    propertyId,\n    userId,\n    checkingFunction,\n    errorMessage,\n  }) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    const { property, currentUser } = this.getObjects({ propertyId, userId });\n\n    if (!property) {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.NOT_FOUND,\n        `Property with id \"${propertyId}\" not found`,\n      );\n    }\n\n    if (!checkingFunction({ property, currentUser })) {\n      Security.handleUnauthorized(errorMessage || 'Checking permissions');\n    }\n  }\n\n  static isAllowedToInsert() {\n    Security.checkLoggedIn();\n  }\n\n  static isPromotionLot(propertyId) {\n    const { category } = PropertyService.fetchOne({\n      $filters: { _id: propertyId },\n      category: 1,\n    });\n\n    return category === PROPERTY_CATEGORY.PROMOTION;\n  }\n\n  static checkBelongsToPromotion(propertyId, userId) {\n    const promotion = Promotions.findOne({ 'propertyLinks._id': propertyId });\n    if (promotion) {\n      PromotionSecurity.isAllowedToModify({\n        promotionId: promotion._id,\n        userId,\n      });\n      return;\n    }\n\n    Security.handleUnauthorized('Not allowed to modify promotion property');\n  }\n\n  static isProUserAllowedToUpdate({ propertyId, userId }) {\n    const { category } = Properties.findOne(propertyId);\n    if (category === PROPERTY_CATEGORY.PRO) {\n      this.checkPermissions({\n        propertyId,\n        userId,\n        checkingFunction: isAllowedToModifyProProperty,\n        errorMessage: 'Vous ne pouvez pas modifier ce bien immobilier',\n      });\n    } else if (category === PROPERTY_CATEGORY.PROMOTION) {\n      this.checkBelongsToPromotion(propertyId, userId);\n    } else {\n      Security.handleUnauthorized('Vous ne pouvez pas modifier ce bien immobilier');\n    }\n  }\n\n  static isAllowedToUpdate(propertyId, userId) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    if (Security.hasMinimumRole({ role: ROLES.PRO, userId })) {\n      this.isProUserAllowedToUpdate({ propertyId, userId });\n    } else {\n      const property = Properties.findOne(propertyId);\n      Security.checkOwnership(property, userId);\n    }\n  }\n\n  static isAllowedToDelete(propertyId, userId) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    const property = Properties.findOne(propertyId);\n    Security.checkOwnership(property);\n  }\n\n  static hasAccessToProperty({ propertyId, userId }) {\n    try {\n      this.isAllowedToView({ propertyId, userId });\n      return;\n    } catch (error) {\n      const hasProperty = UserService.hasProperty({ userId, propertyId });\n\n      if (!hasProperty) {\n        Security.handleUnauthorized(\"Vous n'avez pas accès à ce bien immobilier\");\n      }\n    }\n  }\n\n  static isPropertyPublic({ propertyId }) {\n    const property = PropertyService.fetchOne({\n      $filters: { _id: propertyId },\n      category: 1,\n    });\n\n    return property && property.category === PROPERTY_CATEGORY.PRO;\n  }\n\n  static checkPropertyIsPublic({ propertyId }) {\n    if (!this.isPropertyPublic({ propertyId })) {\n      Security.handleUnauthorized();\n    }\n  }\n\n  static isAllowedToView({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToViewProProperty,\n      errorMessage: \"Vous n'avez pas accès à ce bien immobilier\",\n    });\n  }\n\n  static isAllowedToManageDocuments({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToModifyProProperty,\n      errorMessage:\n        'Vous ne pouvez pas gérer les documents de ce bien immobilier',\n    });\n  }\n\n  static isAllowedToInviteCustomers({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToInviteCustomersToProProperty,\n      errorMessage:\n        'Vous ne pouvez pas inviter de clients sur ce bien immobilier',\n    });\n  }\n\n  static isAllowedToInviteProUsers({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToInviteProUsersToProProperty,\n      errorMessage:\n        \"Vous ne pouvez pas inviter d'utilisateurs sur ce bien immobilier\",\n    });\n  }\n\n  static isAllowedToRemoveCustomer({ userId, propertyId, loanId }) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    const { property, currentUser, loan } = this.getObjects({\n      propertyId,\n      userId,\n      loanId,\n    });\n\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId,\n    });\n\n    if (\n      !isAllowedToRemoveCustomerFromProProperty({\n        property,\n        currentUser,\n        customerOwnerType,\n      })\n    ) {\n      Security.handleUnauthorized('Vous ne pouvez pas supprimer ce client de ce bien immobilier');\n    }\n  }\n\n  static isAllowedToBook({ userId, propertyId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToBookProProperty,\n      errorMessage: 'Vous ne pouvez pas réserver ce bien immobilier',\n    });\n  }\n\n  static isAllowedToBookToCustomer({ propertyId, loanId, userId }) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n\n    const { property, currentUser, loan } = this.getObjects({\n      propertyId,\n      userId,\n      loanId,\n    });\n\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId,\n    });\n\n    if (\n      !isAllowedToBookProPropertyToCustomer({\n        property,\n        currentUser,\n        customerOwnerType,\n      })\n    ) {\n      Security.handleUnauthorized('Vous ne pouvez pas réserver ce bien immobilier à ce client');\n    }\n  }\n\n  static isAllowedToCancelBooking({ propertyId, loanId, userId }) {\n    // TODO\n  }\n\n  static isAllowedToSell({ propertyId, userId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToSellProProperty,\n      errorMessage: 'Vous ne pouvez pas vendre ce bien immobilier',\n    });\n  }\n\n  static isAllowedToSellToCustomer({ propertyId, loanId, userId }) {\n    if (Security.hasMinimumRole({ role: ROLES.ADMIN, userId })) {\n      return;\n    }\n    const { property, currentUser, loan } = this.getObjects({\n      propertyId,\n      userId,\n      loanId,\n    });\n\n    const customerOwnerType = getProPropertyCustomerOwnerType({\n      customerId: loan.user._id,\n      userId,\n      propertyId,\n    });\n\n    if (\n      !isAllowedToSellProPropertyToCustomer({\n        property,\n        currentUser,\n        customerOwnerType,\n      })\n    ) {\n      Security.handleUnauthorized('Vous ne pouvez pas vendre ce bien immobilier à ce client');\n    }\n  }\n\n  static isAllowedToManagePermissions({ propertyId, userId }) {\n    this.checkPermissions({\n      propertyId,\n      userId,\n      checkingFunction: isAllowedToManageProPropertyPermissions,\n      errorMessage:\n        'Vous ne pouvez pas gérer les permissions sur ce bien immobilier',\n    });\n  }\n\n  static isAllowedToAddAnonymousLoan({ propertyId }) {\n    const property = this.getProperty({ propertyId });\n\n    if (!property || property.category !== PROPERTY_CATEGORY.PRO) {\n      Security.handleUnauthorized('Unauthorized propertyId');\n    }\n  }\n}\n\nexport default PropertySecurity;\n"]},"sourceType":"script","hash":"1258ef86670527a75e7b7d0eb8f7d082044f0565"}
