{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/containers/withMatchParam.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/containers/withMatchParam.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/containers/withMatchParam.js","inputSourceMap":{"version":3,"sources":["imports/core/containers/withMatchParam.js"],"names":["withRouter","matchPath","isArray","compose","mapProps","paramName","path","passProps","match","history","location","rest","realMatch","pathname","exact","strict","reduce","acc","param","params","paramNameFromProps"],"mappings":"AAAA;AACA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,WAAlC,C,CAEA;AACA;AACA;;AACA,gBAAe,CACbC,SAAS,EAAE,SAAS,QAAT,IAAqB,MAAM,MAA3B,CADE,EAEbC,IAFa,EAGb;AAAEC,EAAAA;AAAF,IAAgB,EAHH,KAKbJ,OAAO,CACLH,UADK,EAELI,QAAQ,CAAC,CAAC;AAAEI,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,QAAlB;AAA4B,KAAGC;AAA/B,CAAD,KAA2C;AAClD,MAAIC,SAAJ;;AACA,MAAIN,IAAJ,EAAU;AACRM,IAAAA,SAAS,GAAGX,SAAS,CAACQ,OAAO,CAACC,QAAR,CAAiBG,QAAlB,EAA4B;AAC/CP,MAAAA,IAD+C;AAE/CQ,MAAAA,KAAK,EAAE,KAFwC;AAG/CC,MAAAA,MAAM,EAAE;AAHuC,KAA5B,CAArB;AAKD,GAND,MAMO;AACLH,IAAAA,SAAS,GAAGJ,KAAZ;AACD;;AAED,MAAI,CAACI,SAAL,EAAgB;AACd,WAAO,EAAE,GAAGD;AAAL,KAAP;AACD;;AAED,MAAIT,OAAO,CAACG,SAAD,CAAX,EAAwB;AACtB,WAAOA,SAAS,CAACW,MAAV,CACL,CAACC,GAAD,EAAMC,KAAN,MAAiB,EAAE,GAAGD,GAAL;AAAU,OAACC,KAAD,GAASN,SAAS,CAACO,MAAV,CAAiBD,KAAjB;AAAnB,KAAjB,CADK,EAEL,EAAE,GAAGP;AAAL,KAFK,CAAP;AAID;;AAED,MAAI,OAAON,SAAP,KAAqB,UAAzB,EAAqC;AACnC,UAAMe,kBAAkB,GAAGf,SAAS,CAACM,IAAD,CAApC;AACA,WAAO;AACL,OAACS,kBAAD,GAAsBR,SAAS,CAACO,MAAV,CAAiBC,kBAAjB,CADjB;AAEL,SAAGT;AAFE,KAAP;AAID;;AAED,MAAIJ,SAAJ,EAAe;AACb,WAAO;AACLC,MAAAA,KADK;AAELC,MAAAA,OAFK;AAGLC,MAAAA,QAHK;AAIL,OAACL,SAAD,GAAaO,SAAS,CAACO,MAAV,CAAiBd,SAAjB,CAJR;AAKL,SAAGM;AALE,KAAP;AAOD;;AAED,SAAO;AAAE,KAACN,SAAD,GAAaO,SAAS,CAACO,MAAV,CAAiBd,SAAjB,CAAf;AAA4C,OAAGM;AAA/C,GAAP;AACD,CA1CO,CAFH,CALT","sourcesContent":["// @flow\nimport { withRouter, matchPath } from 'react-router-dom';\nimport isArray from 'lodash/isArray';\nimport { compose, mapProps } from 'recompose';\n\n// Lets you pass a param as a string, or an array of params, and you will get\n// them as simple props from react-router, instead of drilling down\n// match.params.paramName\nexport default (\n  paramName: string | string[] | (() => string),\n  path,\n  { passProps } = {},\n) =>\n  compose(\n    withRouter,\n    mapProps(({ match, history, location, ...rest }) => {\n      let realMatch;\n      if (path) {\n        realMatch = matchPath(history.location.pathname, {\n          path,\n          exact: false,\n          strict: false,\n        });\n      } else {\n        realMatch = match;\n      }\n\n      if (!realMatch) {\n        return { ...rest };\n      }\n\n      if (isArray(paramName)) {\n        return paramName.reduce(\n          (acc, param) => ({ ...acc, [param]: realMatch.params[param] }),\n          { ...rest },\n        );\n      }\n\n      if (typeof paramName === 'function') {\n        const paramNameFromProps = paramName(rest);\n        return {\n          [paramNameFromProps]: realMatch.params[paramNameFromProps],\n          ...rest,\n        };\n      }\n\n      if (passProps) {\n        return {\n          match,\n          history,\n          location,\n          [paramName]: realMatch.params[paramName],\n          ...rest,\n        };\n      }\n\n      return { [paramName]: realMatch.params[paramName], ...rest };\n    }),\n  );\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/containers/withMatchParam.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/containers/withMatchParam.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread6 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar withRouter, matchPath;\nmodule.link(\"react-router-dom\", {\n  withRouter: function (v) {\n    withRouter = v;\n  },\n  matchPath: function (v) {\n    matchPath = v;\n  }\n}, 0);\nvar isArray;\nmodule.link(\"lodash/isArray\", {\n  \"default\": function (v) {\n    isArray = v;\n  }\n}, 1);\nvar compose, mapProps;\nmodule.link(\"recompose\", {\n  compose: function (v) {\n    compose = v;\n  },\n  mapProps: function (v) {\n    mapProps = v;\n  }\n}, 2);\nmodule.exportDefault(function (paramName, path) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      passProps = _ref.passProps;\n\n  return compose(withRouter, mapProps(function (_ref2) {\n    var _objectSpread5;\n\n    var match = _ref2.match,\n        history = _ref2.history,\n        location = _ref2.location,\n        rest = (0, _objectWithoutProperties2.default)(_ref2, [\"match\", \"history\", \"location\"]);\n    var realMatch;\n\n    if (path) {\n      realMatch = matchPath(history.location.pathname, {\n        path: path,\n        exact: false,\n        strict: false\n      });\n    } else {\n      realMatch = match;\n    }\n\n    if (!realMatch) {\n      return (0, _objectSpread6.default)({}, rest);\n    }\n\n    if (isArray(paramName)) {\n      return paramName.reduce(function (acc, param) {\n        var _objectSpread2;\n\n        return (0, _objectSpread6.default)({}, acc, (_objectSpread2 = {}, _objectSpread2[param] = realMatch.params[param], _objectSpread2));\n      }, (0, _objectSpread6.default)({}, rest));\n    }\n\n    if (typeof paramName === 'function') {\n      var _objectSpread3;\n\n      var paramNameFromProps = paramName(rest);\n      return (0, _objectSpread6.default)((_objectSpread3 = {}, _objectSpread3[paramNameFromProps] = realMatch.params[paramNameFromProps], _objectSpread3), rest);\n    }\n\n    if (passProps) {\n      var _objectSpread4;\n\n      return (0, _objectSpread6.default)((_objectSpread4 = {\n        match: match,\n        history: history,\n        location: location\n      }, _objectSpread4[paramName] = realMatch.params[paramName], _objectSpread4), rest);\n    }\n\n    return (0, _objectSpread6.default)((_objectSpread5 = {}, _objectSpread5[paramName] = realMatch.params[paramName], _objectSpread5), rest);\n  }));\n});","map":{"version":3,"sources":["imports/core/containers/withMatchParam.js"],"names":["passProps","compose","mapProps","rest","realMatch","matchPath","history","path","exact","strict","isArray","paramNameFromProps","paramName","match","location"],"mappings":";;;;;;AAAA,IAAA,UAAA,EAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,EAAA,UAAA,YAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA,GAAA;AAAA,EAAA,SAAA,YAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA,EAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,YAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA,GAAA;AAAA,EAAA,QAAA,YAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,MAAA,CAAA,aAAA,CAQe,UAAA,SAAA,EAAA,IAAA;AAAA,iFAAA,EAAA;AAAA,MAGXA,SAHW,QAGXA,SAHW;;AAAA,SAKbC,OAAO,CAAA,UAAA,EAELC,QAAQ,CAAC,iBAA2C;AAAA;;AAAA,QAA1C,KAA0C,SAA1C,KAA0C;AAAA,QAA1C,OAA0C,SAA1C,OAA0C;AAAA,QAA1C,QAA0C,SAA1C,QAA0C;AAAA,QAAXC,IAAW;AAClD,QAAA,SAAA;;AACA,QAAA,IAAA,EAAU;AACRC,MAAAA,SAAS,GAAGC,SAAS,CAACC,OAAO,CAAPA,QAAAA,CAAD,QAAA,EAA4B;AAC/CC,QAAAA,IAD+C,EAC/CA,IAD+C;AAE/CC,QAAAA,KAAK,EAF0C,KAAA;AAG/CC,QAAAA,MAAM,EAAE;AAHuC,OAA5B,CAArBL;AADF,KAAA,MAMO;AACLA,MAAAA,SAAS,GAATA,KAAAA;AACD;;AAED,QAAI,CAAJ,SAAA,EAAgB;AACd,6CAAYD,IAAZ;AACD;;AAED,QAAIO,OAAO,CAAX,SAAW,CAAX,EAAwB;AACtB,aAAO,SAAS,CAAT,MAAA,CACL,UAAA,GAAA,EAAA,KAAA;AAAA;;AAAA,+CAAiB,GAAjB,uCAA2B,KAA3B,IAAoCN,SAAS,CAATA,MAAAA,CAAAA,KAAAA,CAApC;AAAA,OADK,kCAEAD,IAFA,EAAP;AAID;;AAED,QAAI,OAAA,SAAA,KAAJ,UAAA,EAAqC;AAAA;;AACnC,UAAMQ,kBAAkB,GAAGC,SAAS,CAApC,IAAoC,CAApC;AACA,8EACE,kBADF,IACwBR,SAAS,CAATA,MAAAA,CADjB,kBACiBA,CADxB,mBAEKD,IAFL;AAID;;AAED,QAAA,SAAA,EAAe;AAAA;;AACb;AACEU,QAAAA,KADK,EACLA,KADF;AAEEP,QAAAA,OAFK,EAELA,OAFF;AAGEQ,QAAAA,QAHK,EAGLA;AAHF,wBAIE,SAJF,IAIeV,SAAS,CAATA,MAAAA,CAJR,SAIQA,CAJf,mBAKKD,IALL;AAOD;;AAED,4EAAS,SAAT,IAAsBC,SAAS,CAATA,MAAAA,CAAf,SAAeA,CAAtB,mBAAsDD,IAAtD;AAhDN,GAOY,CAFH,CALM;AAAA,CARf","sourcesContent":["// @flow\nimport { withRouter, matchPath } from 'react-router-dom';\nimport isArray from 'lodash/isArray';\nimport { compose, mapProps } from 'recompose';\n\n// Lets you pass a param as a string, or an array of params, and you will get\n// them as simple props from react-router, instead of drilling down\n// match.params.paramName\nexport default (\n  paramName: string | string[] | (() => string),\n  path,\n  { passProps } = {},\n) =>\n  compose(\n    withRouter,\n    mapProps(({ match, history, location, ...rest }) => {\n      let realMatch;\n      if (path) {\n        realMatch = matchPath(history.location.pathname, {\n          path,\n          exact: false,\n          strict: false,\n        });\n      } else {\n        realMatch = match;\n      }\n\n      if (!realMatch) {\n        return { ...rest };\n      }\n\n      if (isArray(paramName)) {\n        return paramName.reduce(\n          (acc, param) => ({ ...acc, [param]: realMatch.params[param] }),\n          { ...rest },\n        );\n      }\n\n      if (typeof paramName === 'function') {\n        const paramNameFromProps = paramName(rest);\n        return {\n          [paramNameFromProps]: realMatch.params[paramNameFromProps],\n          ...rest,\n        };\n      }\n\n      if (passProps) {\n        return {\n          match,\n          history,\n          location,\n          [paramName]: realMatch.params[paramName],\n          ...rest,\n        };\n      }\n\n      return { [paramName]: realMatch.params[paramName], ...rest };\n    }),\n  );\n"]},"sourceType":"script","hash":"2740d6abefd5f827c8081c007162bb37653cbbf3"}
