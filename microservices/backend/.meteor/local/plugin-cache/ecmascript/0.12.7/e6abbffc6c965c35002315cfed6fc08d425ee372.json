{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/autoFormHelpers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/AutoForm2/autoFormHelpers.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/autoFormHelpers.js","inputSourceMap":{"version":3,"sources":["imports/core/components/AutoForm2/autoFormHelpers.js"],"names":["React","T","COMPONENT_TYPES","formatStringId","intlId","name","intlPrefix","parent","start","end","nameWithoutDots","replace","nameWithoutDot2","flowProps","arr","reduce","val","i","oneIsNull","some","getLabel","field","uniforms","overrideLabel","label","isListField","placeholdersAreEnabled","placeholder","getPlaceholder","fieldType","intl","formatMessage","type","placeholderPrefix","SELECT","Boolean","Date","Array","undefined","PERCENT","id"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport T from '../Translation';\nimport { COMPONENT_TYPES } from './constants';\n\nconst formatStringId = ({ intlId, name, intlPrefix, parent }) => {\n  const start = `${intlPrefix || 'Forms'}.`;\n  let end = name;\n\n  if (parent) {\n    const nameWithoutDots = name.replace(/\\.\\d+$/g, '');\n    const nameWithoutDot2 = nameWithoutDots.replace(/\\.\\d+\\./g, '.');\n    end = nameWithoutDot2;\n  }\n\n  if (intlId) {\n    end = intlId;\n  }\n\n  return start + end;\n};\n\nconst flowProps = arr =>\n  arr.reduce((val, i) => {\n    if (val === null) {\n      return null;\n    }\n    if (val) {\n      return val;\n    }\n\n    return i;\n  }, '');\n\nconst oneIsNull = arr => arr.some(i => i === null);\n\nexport const getLabel = ({\n  name,\n  field: { uniforms },\n  overrideLabel,\n  intlId,\n  intlPrefix,\n  label,\n  isListField,\n  parent,\n}) => {\n  if (label === null) {\n    return null;\n  }\n\n  if (isListField) {\n    return null;\n  }\n\n  return flowProps([\n    overrideLabel,\n    label,\n    uniforms && uniforms.label,\n    <T id={formatStringId({ intlPrefix, intlId, name, parent })} />,\n  ]);\n};\n\nconst placeholdersAreEnabled = ({ placeholder, parent }) => {\n  if (parent) {\n    return parent.placeholder !== '';\n  }\n\n  return placeholder !== '';\n};\n\nexport const getPlaceholder = ({\n  field: { uniforms },\n  fieldType,\n  intl: { formatMessage },\n  intlId,\n  intlPrefix,\n  name,\n  placeholder,\n  type,\n  parent,\n}) => {\n  let placeholderPrefix = 'p.ex: ';\n\n  // Doesn't make sense to add example prefix on select field\n  if (type === COMPONENT_TYPES.SELECT) {\n    placeholderPrefix = '';\n  }\n\n  if (fieldType === Boolean || fieldType === Date) {\n    return '';\n  }\n\n  if (fieldType === Array) {\n    return placeholder;\n  }\n\n  if (uniforms && uniforms.placeholder !== undefined) {\n    return uniforms.placeholder\n      ? `${placeholderPrefix}${uniforms.placeholder}`\n      : uniforms.placeholder;\n  }\n  // When you set placeholder to `false`, it sets the default placeholder to\n  // an empty string\n  if (!placeholdersAreEnabled({ placeholder, parent })) {\n    return '';\n  }\n\n  if (oneIsNull([placeholder, uniforms && uniforms.placeholder])) {\n    return '';\n  }\n\n  // Let select fields manage their own null states\n  if (type === COMPONENT_TYPES.PERCENT) {\n    return '';\n  }\n\n  return `${placeholderPrefix}${formatMessage({\n    id: `${formatStringId({\n      intlPrefix,\n      intlId,\n      name,\n      parent,\n    })}.placeholder`,\n  })}`;\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/autoFormHelpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/AutoForm2/autoFormHelpers.js"}},"code":"module.export({\n  getLabel: function () {\n    return getLabel;\n  },\n  getPlaceholder: function () {\n    return getPlaceholder;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar T;\nmodule.link(\"../Translation\", {\n  \"default\": function (v) {\n    T = v;\n  }\n}, 1);\nvar COMPONENT_TYPES;\nmodule.link(\"./constants\", {\n  COMPONENT_TYPES: function (v) {\n    COMPONENT_TYPES = v;\n  }\n}, 2);\n\nvar formatStringId = function (_ref) {\n  var intlId = _ref.intlId,\n      name = _ref.name,\n      intlPrefix = _ref.intlPrefix,\n      parent = _ref.parent;\n  var start = (intlPrefix || 'Forms') + \".\";\n  var end = name;\n\n  if (parent) {\n    var nameWithoutDots = name.replace(/\\.\\d+$/g, '');\n    var nameWithoutDot2 = nameWithoutDots.replace(/\\.\\d+\\./g, '.');\n    end = nameWithoutDot2;\n  }\n\n  if (intlId) {\n    end = intlId;\n  }\n\n  return start + end;\n};\n\nvar flowProps = function (arr) {\n  return arr.reduce(function (val, i) {\n    if (val === null) {\n      return null;\n    }\n\n    if (val) {\n      return val;\n    }\n\n    return i;\n  }, '');\n};\n\nvar oneIsNull = function (arr) {\n  return arr.some(function (i) {\n    return i === null;\n  });\n};\n\nvar getLabel = function (_ref2) {\n  var name = _ref2.name,\n      uniforms = _ref2.field.uniforms,\n      overrideLabel = _ref2.overrideLabel,\n      intlId = _ref2.intlId,\n      intlPrefix = _ref2.intlPrefix,\n      label = _ref2.label,\n      isListField = _ref2.isListField,\n      parent = _ref2.parent;\n\n  if (label === null) {\n    return null;\n  }\n\n  if (isListField) {\n    return null;\n  }\n\n  return flowProps([overrideLabel, label, uniforms && uniforms.label, React.createElement(T, {\n    id: formatStringId({\n      intlPrefix: intlPrefix,\n      intlId: intlId,\n      name: name,\n      parent: parent\n    })\n  })]);\n};\n\nvar placeholdersAreEnabled = function (_ref3) {\n  var placeholder = _ref3.placeholder,\n      parent = _ref3.parent;\n\n  if (parent) {\n    return parent.placeholder !== '';\n  }\n\n  return placeholder !== '';\n};\n\nvar getPlaceholder = function (_ref4) {\n  var uniforms = _ref4.field.uniforms,\n      fieldType = _ref4.fieldType,\n      formatMessage = _ref4.intl.formatMessage,\n      intlId = _ref4.intlId,\n      intlPrefix = _ref4.intlPrefix,\n      name = _ref4.name,\n      placeholder = _ref4.placeholder,\n      type = _ref4.type,\n      parent = _ref4.parent;\n  var placeholderPrefix = 'p.ex: '; // Doesn't make sense to add example prefix on select field\n\n  if (type === COMPONENT_TYPES.SELECT) {\n    placeholderPrefix = '';\n  }\n\n  if (fieldType === Boolean || fieldType === Date) {\n    return '';\n  }\n\n  if (fieldType === Array) {\n    return placeholder;\n  }\n\n  if (uniforms && uniforms.placeholder !== undefined) {\n    return uniforms.placeholder ? \"\" + placeholderPrefix + uniforms.placeholder : uniforms.placeholder;\n  } // When you set placeholder to `false`, it sets the default placeholder to\n  // an empty string\n\n\n  if (!placeholdersAreEnabled({\n    placeholder: placeholder,\n    parent: parent\n  })) {\n    return '';\n  }\n\n  if (oneIsNull([placeholder, uniforms && uniforms.placeholder])) {\n    return '';\n  } // Let select fields manage their own null states\n\n\n  if (type === COMPONENT_TYPES.PERCENT) {\n    return '';\n  }\n\n  return \"\" + placeholderPrefix + formatMessage({\n    id: formatStringId({\n      intlPrefix: intlPrefix,\n      intlId: intlId,\n      name: name,\n      parent: parent\n    }) + \".placeholder\"\n  });\n};","map":{"version":3,"sources":["imports/core/components/AutoForm2/autoFormHelpers.js"],"names":["formatStringId","parent","start","intlPrefix","end","nameWithoutDots","name","nameWithoutDot2","flowProps","arr","val","oneIsNull","i","getLabel","field","uniforms","label","intlId","placeholdersAreEnabled","placeholder","getPlaceholder","intl","formatMessage","placeholderPrefix","type","COMPONENT_TYPES","fieldType","id"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport T from '../Translation';\nimport { COMPONENT_TYPES } from './constants';\n\nconst formatStringId = ({ intlId, name, intlPrefix, parent }) => {\n  const start = `${intlPrefix || 'Forms'}.`;\n  let end = name;\n\n  if (parent) {\n    const nameWithoutDots = name.replace(/\\.\\d+$/g, '');\n    const nameWithoutDot2 = nameWithoutDots.replace(/\\.\\d+\\./g, '.');\n    end = nameWithoutDot2;\n  }\n\n  if (intlId) {\n    end = intlId;\n  }\n\n  return start + end;\n};\n\nconst flowProps = arr =>\n  arr.reduce((val, i) => {\n    if (val === null) {\n      return null;\n    }\n    if (val) {\n      return val;\n    }\n\n    return i;\n  }, '');\n\nconst oneIsNull = arr => arr.some(i => i === null);\n\nexport const getLabel = ({\n  name,\n  field: { uniforms },\n  overrideLabel,\n  intlId,\n  intlPrefix,\n  label,\n  isListField,\n  parent,\n}) => {\n  if (label === null) {\n    return null;\n  }\n\n  if (isListField) {\n    return null;\n  }\n\n  return flowProps([\n    overrideLabel,\n    label,\n    uniforms && uniforms.label,\n    <T id={formatStringId({ intlPrefix, intlId, name, parent })} />,\n  ]);\n};\n\nconst placeholdersAreEnabled = ({ placeholder, parent }) => {\n  if (parent) {\n    return parent.placeholder !== '';\n  }\n\n  return placeholder !== '';\n};\n\nexport const getPlaceholder = ({\n  field: { uniforms },\n  fieldType,\n  intl: { formatMessage },\n  intlId,\n  intlPrefix,\n  name,\n  placeholder,\n  type,\n  parent,\n}) => {\n  let placeholderPrefix = 'p.ex: ';\n\n  // Doesn't make sense to add example prefix on select field\n  if (type === COMPONENT_TYPES.SELECT) {\n    placeholderPrefix = '';\n  }\n\n  if (fieldType === Boolean || fieldType === Date) {\n    return '';\n  }\n\n  if (fieldType === Array) {\n    return placeholder;\n  }\n\n  if (uniforms && uniforms.placeholder !== undefined) {\n    return uniforms.placeholder\n      ? `${placeholderPrefix}${uniforms.placeholder}`\n      : uniforms.placeholder;\n  }\n  // When you set placeholder to `false`, it sets the default placeholder to\n  // an empty string\n  if (!placeholdersAreEnabled({ placeholder, parent })) {\n    return '';\n  }\n\n  if (oneIsNull([placeholder, uniforms && uniforms.placeholder])) {\n    return '';\n  }\n\n  // Let select fields manage their own null states\n  if (type === COMPONENT_TYPES.PERCENT) {\n    return '';\n  }\n\n  return `${placeholderPrefix}${formatMessage({\n    id: `${formatStringId({\n      intlPrefix,\n      intlId,\n      name,\n      parent,\n    })}.placeholder`,\n  })}`;\n};\n"]},"sourceType":"script","hash":"e6abbffc6c965c35002315cfed6fc08d425ee372"}
