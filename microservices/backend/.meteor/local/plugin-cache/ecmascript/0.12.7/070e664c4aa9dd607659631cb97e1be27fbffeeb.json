{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/CantonField/CantonField.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/components/CantonField/CantonField.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/CantonField/CantonField.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/CantonField/CantonField.jsx"],"names":["React","injectIntl","T","AutoFormTextInput","CANTONS","CantonFieldProps","canton","String","intl","Object","CantonField","formatMessage","currentValue","id","label","style","width","maxWidth","readOnly","required","todo","multiline","Promise","resolve"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAOC,CAAP;AACA,OAAOC,iBAAP;AACA,SAASC,OAAT;AAEA,KAAKC,gBAAL,GAAwB;AACtBC,EAAAA,MAAM,EAAEC,MADc;AAEtBC,EAAAA,IAAI,EAAEC,MAFgB;AAAA,CAAxB;;AAKA,MAAMC,WAAW,GAAG,CAAC;AAAEJ,EAAAA,MAAF;AAAUE,EAAAA,IAAI,EAAE;AAAEG,IAAAA;AAAF;AAAhB,CAAmC,EAAEN,gBAAtC,KAClB,CAAC,iBAAD,CACE,WAAW,CAAC;AACVO,EAAAA,YAAY,EACVR,OAAO,CAACE,MAAD,CAAP,IAAmBK,aAAa,CAAC;AAAEE,IAAAA,EAAE,EAAE;AAAN,GAAD,CAFxB;AAGVC,EAAAA,KAAK,EAAE,CAAC,CAAD,CAAG,GAAG,cAAN,GAHG;AAIVC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GAJG;AAKVC,EAAAA,QAAQ,EAAE,IALA;AAMVC,EAAAA,QAAQ,EAAE,IANA;AAOVC,EAAAA,IAAI,EAAE,CAACd,MAPG;AAQVe,EAAAA,SAAS,EAAE;AARD,CAAD,CADb,CAWE,YAXF,CAYE,qBAZF,CAaE,WAAW,CAAC,MAAMC,OAAO,CAACC,OAAR,EAAP,CAbb,GADF;;AAkBA,eAAetB,UAAU,CAACS,WAAD,CAAzB","sourcesContent":["// @flow\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport T from '../Translation';\nimport AutoFormTextInput from '../AutoForm/AutoFormTextInput';\nimport { CANTONS } from '../../api/constants';\n\ntype CantonFieldProps = {\n  canton: String,\n  intl: Object,\n};\n\nconst CantonField = ({ canton, intl: { formatMessage } }: CantonFieldProps) => (\n  <AutoFormTextInput\n    inputProps={{\n      currentValue:\n        CANTONS[canton] || formatMessage({ id: 'Forms.canton.placeholder' }),\n      label: <T id=\"Forms.canton\" />,\n      style: { width: '100%', maxWidth: '400px' },\n      readOnly: true,\n      required: true,\n      todo: !canton,\n      multiline: true,\n    }}\n    saveOnChange\n    showValidIconOnChange\n    updateFunc={() => Promise.resolve()}\n  />\n);\n\nexport default injectIntl(CantonField);\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/CantonField/CantonField.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/CantonField/CantonField.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet injectIntl;\nmodule.link(\"react-intl\", {\n  injectIntl(v) {\n    injectIntl = v;\n  }\n\n}, 1);\nlet T;\nmodule.link(\"../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 2);\nlet AutoFormTextInput;\nmodule.link(\"../AutoForm/AutoFormTextInput\", {\n  default(v) {\n    AutoFormTextInput = v;\n  }\n\n}, 3);\nlet CANTONS;\nmodule.link(\"../../api/constants\", {\n  CANTONS(v) {\n    CANTONS = v;\n  }\n\n}, 4);\n\nconst CantonField = ({\n  canton,\n  intl: {\n    formatMessage\n  }\n}) => React.createElement(AutoFormTextInput, {\n  inputProps: {\n    currentValue: CANTONS[canton] || formatMessage({\n      id: 'Forms.canton.placeholder'\n    }),\n    label: React.createElement(T, {\n      id: \"Forms.canton\"\n    }),\n    style: {\n      width: '100%',\n      maxWidth: '400px'\n    },\n    readOnly: true,\n    required: true,\n    todo: !canton,\n    multiline: true\n  },\n  saveOnChange: true,\n  showValidIconOnChange: true,\n  updateFunc: () => Promise.resolve()\n});\n\nmodule.exportDefault(injectIntl(CantonField));","map":{"version":3,"sources":["imports/core/components/CantonField/CantonField.jsx"],"names":["CantonField","intl","formatMessage","currentValue","CANTONS","id","label","style","width","maxWidth","readOnly","required","todo","multiline","Promise","injectIntl"],"mappings":"AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,CAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,CAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+BAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,qBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAaA,MAAMA,WAAW,GAAG,CAAC;AAAA,EAAA,MAAA;AAAUC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAhB,CAAD,KAClB,oBAAA,iBAAA;AACE,EAAA,UAAA,EAAY;AACVC,IAAAA,YAAY,EACVC,OAAO,CAAPA,MAAO,CAAPA,IAAmBF,aAAa,CAAC;AAAEG,MAAAA,EAAE,EAAE;AAAN,KAAD,CAFxB;AAGVC,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EAHA;AAGH,MAHG;AAIVC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAP,MAAA;AAAiBC,MAAAA,QAAQ,EAAE;AAA3B,KAJG;AAKVC,IAAAA,QAAQ,EALE,IAAA;AAMVC,IAAAA,QAAQ,EANE,IAAA;AAOVC,IAAAA,IAAI,EAAE,CAPI,MAAA;AAQVC,IAAAA,SAAS,EAAE;AARD,GADd;AAWE,EAAA,YAXF,MAAA;AAYE,EAAA,qBAZF,MAAA;AAaE,EAAA,UAAA,EAAY,MAAMC,OAAO,CAd7B,OAcsBA;AAbpB,EADF;;AAbA,MAAA,CAAA,aAAA,CA+BeC,UAAU,CAAzB,WAAyB,CA/BzB","sourcesContent":["// @flow\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport T from '../Translation';\nimport AutoFormTextInput from '../AutoForm/AutoFormTextInput';\nimport { CANTONS } from '../../api/constants';\n\ntype CantonFieldProps = {\n  canton: String,\n  intl: Object,\n};\n\nconst CantonField = ({ canton, intl: { formatMessage } }: CantonFieldProps) => (\n  <AutoFormTextInput\n    inputProps={{\n      currentValue:\n        CANTONS[canton] || formatMessage({ id: 'Forms.canton.placeholder' }),\n      label: <T id=\"Forms.canton\" />,\n      style: { width: '100%', maxWidth: '400px' },\n      readOnly: true,\n      required: true,\n      todo: !canton,\n      multiline: true,\n    }}\n    saveOnChange\n    showValidIconOnChange\n    updateFunc={() => Promise.resolve()}\n  />\n);\n\nexport default injectIntl(CantonField);\n"]},"sourceType":"script","hash":"070e664c4aa9dd607659631cb97e1be27fbffeeb"}
