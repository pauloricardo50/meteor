{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/mortgageNotes/server/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/mortgageNotes/server/methods.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/mortgageNotes/server/methods.js","inputSourceMap":{"version":3,"sources":["imports/core/api/mortgageNotes/server/methods.js"],"names":["SecurityService","mortgageNoteInsert","mortgageNoteRemove","mortgageNoteUpdate","MortgageNoteService","setHandler","userId","params","propertyId","properties","isAllowedToUpdate","borrowerId","borrowers","insert","mortgageNoteId","borrower","property","fetchOne","$filters","_id","remove","object","_update","id"],"mappings":"AAAA,OAAOA,eAAP;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,kBAHF;AAKA,OAAOC,mBAAP;AAEAH,kBAAkB,CAACI,UAAnB,CAA8B,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAaC,MAAb,KAAwB;AACpD,MAAIA,MAAM,CAACC,UAAX,EAAuB;AACrBR,IAAAA,eAAe,CAACS,UAAhB,CAA2BC,iBAA3B,CAA6CH,MAAM,CAACC,UAApD,EAAgEF,MAAhE;AACD;;AACD,MAAIC,MAAM,CAACI,UAAX,EAAuB;AACrBX,IAAAA,eAAe,CAACY,SAAhB,CAA0BF,iBAA1B,CAA4CH,MAAM,CAACI,UAAnD,EAA+DL,MAA/D;AACD;;AACDF,EAAAA,mBAAmB,CAACS,MAApB,CAA2BN,MAA3B;AACD,CARD;AAUAL,kBAAkB,CAACG,UAAnB,CAA8B,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAa;AAAEQ,EAAAA;AAAF,CAAb,KAAoC;AAChE,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBZ,mBAAmB,CAACa,QAApB,CAA6B;AAC1DC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,GAAG,EAAEL;AAAP;AADgD,GAA7B,CAA/B;;AAGA,MAAIE,QAAJ,EAAc;AACZhB,IAAAA,eAAe,CAACS,UAAhB,CAA2BC,iBAA3B,CAA6CM,QAAQ,CAACG,GAAtD,EAA2Db,MAA3D;AACD;;AACD,MAAIS,QAAJ,EAAc;AACZf,IAAAA,eAAe,CAACY,SAAhB,CAA0BF,iBAA1B,CAA4CK,QAAQ,CAACI,GAArD,EAA0Db,MAA1D;AACD;;AAED,SAAOF,mBAAmB,CAACgB,MAApB,CAA2BN,cAA3B,CAAP;AACD,CAZD;AAcAX,kBAAkB,CAACE,UAAnB,CAA8B,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAa;AAAEQ,EAAAA,cAAF;AAAkBO,EAAAA;AAAlB,CAAb,KAA4C;AACxE,QAAM;AAAEN,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBZ,mBAAmB,CAACa,QAApB,CAA6B;AAC1DC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,GAAG,EAAEL;AAAP,KADgD;AAE1DC,IAAAA,QAAQ,EAAE;AAAEI,MAAAA,GAAG,EAAE;AAAP,KAFgD;AAG1DH,IAAAA,QAAQ,EAAE;AAAEG,MAAAA,GAAG,EAAE;AAAP;AAHgD,GAA7B,CAA/B;;AAKA,MAAIH,QAAJ,EAAc;AACZhB,IAAAA,eAAe,CAACS,UAAhB,CAA2BC,iBAA3B,CAA6CM,QAAQ,CAACG,GAAtD,EAA2Db,MAA3D;AACD;;AACD,MAAIS,QAAJ,EAAc;AACZf,IAAAA,eAAe,CAACY,SAAhB,CAA0BF,iBAA1B,CAA4CK,QAAQ,CAACI,GAArD,EAA0Db,MAA1D;AACD;;AAED,SAAOF,mBAAmB,CAACkB,OAApB,CAA4B;AAAEC,IAAAA,EAAE,EAAET,cAAN;AAAsBO,IAAAA;AAAtB,GAA5B,CAAP;AACD,CAdD","sourcesContent":["import SecurityService from '../../security';\nimport {\n  mortgageNoteInsert,\n  mortgageNoteRemove,\n  mortgageNoteUpdate,\n} from '../methodDefinitions';\nimport MortgageNoteService from './MortgageNoteService';\n\nmortgageNoteInsert.setHandler(({ userId }, params) => {\n  if (params.propertyId) {\n    SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  }\n  if (params.borrowerId) {\n    SecurityService.borrowers.isAllowedToUpdate(params.borrowerId, userId);\n  }\n  MortgageNoteService.insert(params);\n});\n\nmortgageNoteRemove.setHandler(({ userId }, { mortgageNoteId }) => {\n  const { borrower, property } = MortgageNoteService.fetchOne({\n    $filters: { _id: mortgageNoteId },\n  });\n  if (property) {\n    SecurityService.properties.isAllowedToUpdate(property._id, userId);\n  }\n  if (borrower) {\n    SecurityService.borrowers.isAllowedToUpdate(borrower._id, userId);\n  }\n\n  return MortgageNoteService.remove(mortgageNoteId);\n});\n\nmortgageNoteUpdate.setHandler(({ userId }, { mortgageNoteId, object }) => {\n  const { borrower, property } = MortgageNoteService.fetchOne({\n    $filters: { _id: mortgageNoteId },\n    borrower: { _id: 1 },\n    property: { _id: 1 },\n  });\n  if (property) {\n    SecurityService.properties.isAllowedToUpdate(property._id, userId);\n  }\n  if (borrower) {\n    SecurityService.borrowers.isAllowedToUpdate(borrower._id, userId);\n  }\n\n  return MortgageNoteService._update({ id: mortgageNoteId, object });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/mortgageNotes/server/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/mortgageNotes/server/methods.js"}},"code":"let SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 0);\nlet mortgageNoteInsert, mortgageNoteRemove, mortgageNoteUpdate;\nmodule.link(\"../methodDefinitions\", {\n  mortgageNoteInsert(v) {\n    mortgageNoteInsert = v;\n  },\n\n  mortgageNoteRemove(v) {\n    mortgageNoteRemove = v;\n  },\n\n  mortgageNoteUpdate(v) {\n    mortgageNoteUpdate = v;\n  }\n\n}, 1);\nlet MortgageNoteService;\nmodule.link(\"./MortgageNoteService\", {\n  default(v) {\n    MortgageNoteService = v;\n  }\n\n}, 2);\nmortgageNoteInsert.setHandler(({\n  userId\n}, params) => {\n  if (params.propertyId) {\n    SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  }\n\n  if (params.borrowerId) {\n    SecurityService.borrowers.isAllowedToUpdate(params.borrowerId, userId);\n  }\n\n  MortgageNoteService.insert(params);\n});\nmortgageNoteRemove.setHandler(({\n  userId\n}, {\n  mortgageNoteId\n}) => {\n  const {\n    borrower,\n    property\n  } = MortgageNoteService.fetchOne({\n    $filters: {\n      _id: mortgageNoteId\n    }\n  });\n\n  if (property) {\n    SecurityService.properties.isAllowedToUpdate(property._id, userId);\n  }\n\n  if (borrower) {\n    SecurityService.borrowers.isAllowedToUpdate(borrower._id, userId);\n  }\n\n  return MortgageNoteService.remove(mortgageNoteId);\n});\nmortgageNoteUpdate.setHandler(({\n  userId\n}, {\n  mortgageNoteId,\n  object\n}) => {\n  const {\n    borrower,\n    property\n  } = MortgageNoteService.fetchOne({\n    $filters: {\n      _id: mortgageNoteId\n    },\n    borrower: {\n      _id: 1\n    },\n    property: {\n      _id: 1\n    }\n  });\n\n  if (property) {\n    SecurityService.properties.isAllowedToUpdate(property._id, userId);\n  }\n\n  if (borrower) {\n    SecurityService.borrowers.isAllowedToUpdate(borrower._id, userId);\n  }\n\n  return MortgageNoteService._update({\n    id: mortgageNoteId,\n    object\n  });\n});","map":{"version":3,"sources":["imports/core/api/mortgageNotes/server/methods.js"],"names":["mortgageNoteInsert","userId","params","SecurityService","MortgageNoteService","mortgageNoteRemove","mortgageNoteId","property","$filters","_id","borrower","mortgageNoteUpdate","object","id"],"mappings":"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","sourcesContent":["import SecurityService from '../../security';\nimport {\n  mortgageNoteInsert,\n  mortgageNoteRemove,\n  mortgageNoteUpdate,\n} from '../methodDefinitions';\nimport MortgageNoteService from './MortgageNoteService';\n\nmortgageNoteInsert.setHandler(({ userId }, params) => {\n  if (params.propertyId) {\n    SecurityService.properties.isAllowedToUpdate(params.propertyId, userId);\n  }\n  if (params.borrowerId) {\n    SecurityService.borrowers.isAllowedToUpdate(params.borrowerId, userId);\n  }\n  MortgageNoteService.insert(params);\n});\n\nmortgageNoteRemove.setHandler(({ userId }, { mortgageNoteId }) => {\n  const { borrower, property } = MortgageNoteService.fetchOne({\n    $filters: { _id: mortgageNoteId },\n  });\n  if (property) {\n    SecurityService.properties.isAllowedToUpdate(property._id, userId);\n  }\n  if (borrower) {\n    SecurityService.borrowers.isAllowedToUpdate(borrower._id, userId);\n  }\n\n  return MortgageNoteService.remove(mortgageNoteId);\n});\n\nmortgageNoteUpdate.setHandler(({ userId }, { mortgageNoteId, object }) => {\n  const { borrower, property } = MortgageNoteService.fetchOne({\n    $filters: { _id: mortgageNoteId },\n    borrower: { _id: 1 },\n    property: { _id: 1 },\n  });\n  if (property) {\n    SecurityService.properties.isAllowedToUpdate(property._id, userId);\n  }\n  if (borrower) {\n    SecurityService.borrowers.isAllowedToUpdate(borrower._id, userId);\n  }\n\n  return MortgageNoteService._update({ id: mortgageNoteId, object });\n});\n"]},"sourceType":"script","hash":"194ba54db5bdc2a259ef3e772dda5bddd114c692"}
