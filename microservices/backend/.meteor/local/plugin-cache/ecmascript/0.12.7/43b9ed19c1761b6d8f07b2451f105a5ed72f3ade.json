{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/cache/mongoIdMap.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/cultofcoders:redis-oplog/lib/cache/mongoIdMap.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/cache/mongoIdMap.js","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/cache/mongoIdMap.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:redis-oplog/lib/cache/mongoIdMap.js"}},"code":"module.export({\n  MongoIDMap: () => MongoIDMap\n});\nlet MongoID;\nmodule.link(\"meteor/mongo-id\", {\n  MongoID(v) {\n    MongoID = v;\n  }\n\n}, 0);\n\nclass MongoIDMap {\n  constructor(idStringify, idParse) {\n    this._internal = new Map();\n    this._idStringify = idStringify || MongoID.idStringify;\n    this._idParse = idParse || MongoID.idParse;\n  }\n\n  get(id) {\n    const key = this._idStringify(id);\n\n    return this._internal.get(key);\n  }\n\n  pop(id) {\n    const key = this._idStringify(id);\n\n    const ret = this._internal.get(key);\n\n    this._internal.delete(key);\n\n    return ret;\n  }\n\n  set(id, value) {\n    const key = this._idStringify(id);\n\n    this._internal.set(key, value);\n  }\n\n  setDefault(id, def) {\n    const key = this._idStringify(id);\n\n    if (this._internal.has(key)) {\n      return this._internal.get(key);\n    }\n\n    this._internal.set(key, def);\n\n    return def;\n  }\n\n  remove(id) {\n    const key = this._idStringify(id);\n\n    this._internal.delete(key);\n  }\n\n  has(id) {\n    const key = this._idStringify(id);\n\n    return this._internal.has(key);\n  }\n\n  size() {\n    return this._internal.size;\n  }\n\n  empty() {\n    return this._internal.size === 0;\n  }\n\n  clear() {\n    this._internal.clear();\n  }\n\n  keys() {\n    return Array.from(this._internal.keys()).map(key => this._idParse(key));\n  }\n\n  forEach(iterator) {\n    this._internal.forEach((value, key) => {\n      iterator.call(null, value, this._idParse(key));\n    });\n  }\n\n  compareWith(other, callbacks) {\n    // operate on the _internal maps to avoid overhead of parsing id's.\n    const leftMap = this._internal;\n    const rightMap = other._internal;\n    leftMap.forEach((leftValue, key) => {\n      const rightValue = rightMap.get(key);\n      if (rightValue != null) callbacks.both && callbacks.both(this._idParse(key), leftValue, rightValue);else callbacks.leftOnly && callbacks.leftOnly(this._idParse(key), leftValue);\n    });\n\n    if (callbacks.rightOnly) {\n      rightMap.forEach((rightValue, key) => {\n        if (!leftMap.has(key)) callbacks.rightOnly(this._idParse(key), rightValue);\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:redis-oplog/lib/cache/mongoIdMap.js"],"names":["module","export","MongoIDMap","MongoID","link","v","constructor","idStringify","idParse","_internal","Map","_idStringify","_idParse","get","id","key","pop","ret","delete","set","value","setDefault","def","has","remove","size","empty","clear","keys","Array","from","map","forEach","iterator","call","compareWith","other","callbacks","leftMap","rightMap","leftValue","rightValue","both","leftOnly","rightOnly"],"mappings":"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","sourcesContent":["import { MongoID } from 'meteor/mongo-id';\n\nexport class MongoIDMap {\n\n    constructor(idStringify, idParse) {\n        this._internal = new Map();\n        this._idStringify = idStringify || MongoID.idStringify;\n        this._idParse = idParse || MongoID.idParse;\n    }\n\n    get(id) {\n        const key = this._idStringify(id);\n        return this._internal.get(key);\n    }\n\n    pop(id) {\n        const key = this._idStringify(id);\n        const ret = this._internal.get(key);\n        this._internal.delete(key);\n        return ret;\n    }\n\n    set(id, value) {\n        const key = this._idStringify(id);\n        this._internal.set(key, value);\n    }\n\n    setDefault(id, def) {\n        const key = this._idStringify(id);\n        if (this._internal.has(key)) {\n            return this._internal.get(key);\n        }\n        this._internal.set(key, def);\n        return def;\n    }\n\n    remove(id) {\n        const key = this._idStringify(id);\n        this._internal.delete(key);\n    }\n\n    has(id) {\n        const key = this._idStringify(id);\n        return this._internal.has(key);\n    }\n\n    size() {\n        return this._internal.size;\n    }\n\n    empty() {\n        return this._internal.size === 0;\n    }\n\n    clear() {\n        this._internal.clear();\n    }\n\n    keys() {\n        return Array.from(this._internal.keys()).map(key => this._idParse(key))\n    }\n\n    forEach(iterator) {\n        this._internal.forEach((value, key) => {\n            iterator.call(null, value, this._idParse(key));\n        });\n    }\n\n    compareWith(other, callbacks) {\n        // operate on the _internal maps to avoid overhead of parsing id's.\n        const leftMap = this._internal;\n        const rightMap = other._internal;\n\n        leftMap.forEach((leftValue, key) => {\n            const rightValue = rightMap.get(key);\n            if (rightValue != null)\n                callbacks.both && callbacks.both(this._idParse(key), leftValue, rightValue);\n            else\n                callbacks.leftOnly && callbacks.leftOnly(this._idParse(key), leftValue);\n        });\n        if (callbacks.rightOnly) {\n            rightMap.forEach((rightValue, key) => {\n                if (!leftMap.has(key))\n                    callbacks.rightOnly(this._idParse(key), rightValue);\n            });\n        }\n\n    }\n}\n"]},"sourceType":"script","hash":"43b9ed19c1761b6d8f07b2451f105a5ed72f3ade"}
