{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/epotek:accounts-ui/imports/api/server/loginWithoutPassword.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/epotek:accounts-ui/imports/api/server/loginWithoutPassword.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/epotek:accounts-ui/imports/api/server/loginWithoutPassword.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/epotek:accounts-ui/imports/api/server/loginWithoutPassword.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/epotek:accounts-ui/imports/api/server/loginWithoutPassword.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\n///\n/// LOGIN WITHOUT PASSWORD\n///\n// Method called by a user to request a password reset email. This is\n// the start of the reset process.\nMeteor.methods({\n  loginWithoutPassword: function ({\n    email,\n    username = null\n  }) {\n    if (username !== null) {\n      check(username, String);\n      var user = Meteor.users.findOne({\n        $or: [{\n          username: username,\n          'emails.address': {\n            $exists: 1\n          }\n        }, {\n          'emails.address': email\n        }]\n      });\n      if (!user) throw new Meteor.Error(403, 'User not found');\n      email = user.emails[0].address;\n    } else {\n      check(email, String);\n      var user = Meteor.users.findOne({\n        'emails.address': email\n      });\n      if (!user) throw new Meteor.Error(403, 'User not found');\n    }\n\n    if (Accounts.ui._options.requireEmailVerification) {\n      if (!user.emails[0].verified) {\n        throw new Meteor.Error(403, 'Email not verified');\n      }\n    }\n\n    Accounts.sendLoginEmail(user._id, email);\n  }\n});\n/**\n * @summary Send an email with a link the user can use verify their email address.\n * @locus Server\n * @param {String} userId The id of the user to send email to.\n * @param {String} [email] Optional. Which address of the user's to send the email to. This address must be in the user's `emails` list. Defaults to the first unverified email in the list.\n */\n\nAccounts.sendLoginEmail = function (userId, address) {\n  // XXX Also generate a link using which someone can delete this\n  // account if they own said address but weren't those who created\n  // this account.\n  // Make sure the user exists, and address is one of their addresses.\n  var user = Meteor.users.findOne(userId);\n  if (!user) throw new Error(\"Can't find user\"); // pick the first unverified address if we weren't passed an address.\n\n  if (!address) {\n    var email = (user.emails || []).find(({\n      verified\n    }) => !verified);\n    address = (email || {}).address;\n  } // make sure we have a valid address\n\n\n  if (!address || !(user.emails || []).map(({\n    address\n  }) => address).includes(address)) throw new Error('No such email address for user.');\n  var tokenRecord = {\n    token: Random.secret(),\n    address: address,\n    when: new Date()\n  };\n  Meteor.users.update({\n    _id: userId\n  }, {\n    $push: {\n      'services.email.verificationTokens': tokenRecord\n    }\n  }); // before passing to template, update user object with new token\n\n  Meteor._ensure(user, 'services', 'email');\n\n  if (!user.services.email.verificationTokens) {\n    user.services.email.verificationTokens = [];\n  }\n\n  user.services.email.verificationTokens.push(tokenRecord);\n  var loginUrl = Accounts.urls.verifyEmail(tokenRecord.token);\n  var options = {\n    to: address,\n    from: Accounts.emailTemplates.loginNoPassword.from ? Accounts.emailTemplates.loginNoPassword.from(user) : Accounts.emailTemplates.from,\n    subject: Accounts.emailTemplates.loginNoPassword.subject(user)\n  };\n\n  if (typeof Accounts.emailTemplates.loginNoPassword.text === 'function') {\n    options.text = Accounts.emailTemplates.loginNoPassword.text(user, loginUrl);\n  }\n\n  if (typeof Accounts.emailTemplates.loginNoPassword.html === 'function') options.html = Accounts.emailTemplates.loginNoPassword.html(user, loginUrl);\n\n  if (typeof Accounts.emailTemplates.headers === 'object') {\n    options.headers = Accounts.emailTemplates.headers;\n  }\n\n  Email.send(options);\n}; // Check for installed accounts-password dependency.\n\n\nif (Accounts.emailTemplates) {\n  Accounts.emailTemplates.loginNoPassword = {\n    subject: function (user) {\n      return 'Login on ' + Accounts.emailTemplates.siteName;\n    },\n    text: function (user, url) {\n      var greeting = user.profile && user.profile.name ? 'Hello ' + user.profile.name + ',' : 'Hello,';\n      return `${greeting}\nTo login, simply click the link below.\n${url}\nThanks.\n`;\n    }\n  };\n}","map":{"version":3,"sources":["packages/epotek:accounts-ui/imports/api/server/loginWithoutPassword.js"],"names":["Meteor","module","link","v","Accounts","methods","loginWithoutPassword","email","username","check","String","user","users","findOne","$or","$exists","Error","emails","address","ui","_options","requireEmailVerification","verified","sendLoginEmail","_id","userId","find","map","includes","tokenRecord","token","Random","secret","when","Date","update","$push","_ensure","services","verificationTokens","push","loginUrl","urls","verifyEmail","options","to","from","emailTemplates","loginNoPassword","subject","text","html","headers","Email","send","siteName","url","greeting","profile","name"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\n\n///\n/// LOGIN WITHOUT PASSWORD\n///\n\n// Method called by a user to request a password reset email. This is\n// the start of the reset process.\nMeteor.methods({\n  loginWithoutPassword: function({ email, username = null }) {\n    if (username !== null) {\n      check(username, String);\n\n      var user = Meteor.users.findOne({\n        $or: [\n          {\n            username: username,\n            'emails.address': { $exists: 1 }\n          },\n          {\n            'emails.address': email\n          }\n        ]\n      });\n      if (!user) throw new Meteor.Error(403, 'User not found');\n\n      email = user.emails[0].address;\n    } else {\n      check(email, String);\n\n      var user = Meteor.users.findOne({ 'emails.address': email });\n      if (!user) throw new Meteor.Error(403, 'User not found');\n    }\n\n    if (Accounts.ui._options.requireEmailVerification) {\n      if (!user.emails[0].verified) {\n        throw new Meteor.Error(403, 'Email not verified');\n      }\n    }\n\n    Accounts.sendLoginEmail(user._id, email);\n  }\n});\n\n/**\n * @summary Send an email with a link the user can use verify their email address.\n * @locus Server\n * @param {String} userId The id of the user to send email to.\n * @param {String} [email] Optional. Which address of the user's to send the email to. This address must be in the user's `emails` list. Defaults to the first unverified email in the list.\n */\nAccounts.sendLoginEmail = function(userId, address) {\n  // XXX Also generate a link using which someone can delete this\n  // account if they own said address but weren't those who created\n  // this account.\n\n  // Make sure the user exists, and address is one of their addresses.\n  var user = Meteor.users.findOne(userId);\n  if (!user) throw new Error(\"Can't find user\");\n  // pick the first unverified address if we weren't passed an address.\n  if (!address) {\n    var email = (user.emails || []).find(({ verified }) => !verified);\n    address = (email || {}).address;\n  }\n  // make sure we have a valid address\n  if (\n    !address ||\n    !(user.emails || []).map(({ address }) => address).includes(address)\n  )\n    throw new Error('No such email address for user.');\n\n  var tokenRecord = {\n    token: Random.secret(),\n    address: address,\n    when: new Date()\n  };\n  Meteor.users.update(\n    { _id: userId },\n    { $push: { 'services.email.verificationTokens': tokenRecord } }\n  );\n\n  // before passing to template, update user object with new token\n  Meteor._ensure(user, 'services', 'email');\n  if (!user.services.email.verificationTokens) {\n    user.services.email.verificationTokens = [];\n  }\n  user.services.email.verificationTokens.push(tokenRecord);\n\n  var loginUrl = Accounts.urls.verifyEmail(tokenRecord.token);\n\n  var options = {\n    to: address,\n    from: Accounts.emailTemplates.loginNoPassword.from\n      ? Accounts.emailTemplates.loginNoPassword.from(user)\n      : Accounts.emailTemplates.from,\n    subject: Accounts.emailTemplates.loginNoPassword.subject(user)\n  };\n\n  if (typeof Accounts.emailTemplates.loginNoPassword.text === 'function') {\n    options.text = Accounts.emailTemplates.loginNoPassword.text(user, loginUrl);\n  }\n\n  if (typeof Accounts.emailTemplates.loginNoPassword.html === 'function')\n    options.html = Accounts.emailTemplates.loginNoPassword.html(user, loginUrl);\n\n  if (typeof Accounts.emailTemplates.headers === 'object') {\n    options.headers = Accounts.emailTemplates.headers;\n  }\n\n  Email.send(options);\n};\n\n// Check for installed accounts-password dependency.\nif (Accounts.emailTemplates) {\n  Accounts.emailTemplates.loginNoPassword = {\n    subject: function(user) {\n      return 'Login on ' + Accounts.emailTemplates.siteName;\n    },\n    text: function(user, url) {\n      var greeting =\n        user.profile && user.profile.name\n          ? 'Hello ' + user.profile.name + ','\n          : 'Hello,';\n      return `${greeting}\nTo login, simply click the link below.\n${url}\nThanks.\n`;\n    }\n  };\n}\n"]},"sourceType":"script","hash":"c08581236e0337d6bcf8f528fe5b459c28df19c9"}
