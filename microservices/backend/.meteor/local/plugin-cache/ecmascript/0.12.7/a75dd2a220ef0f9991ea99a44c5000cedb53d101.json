{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/PasswordResetPage/test/client/PasswordResetPage.test.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/PasswordResetPage/test/client/PasswordResetPage.test.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/PasswordResetPage/test/client/PasswordResetPage.test.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/PasswordResetPage/test/client/PasswordResetPage.test.jsx"],"names":["Random","React","expect","Redirect","resetDatabase","testCreateUser","shallow","getMountedComponent","pollUntilReady","Loading","PasswordResetPage","PasswordResetPageDumb","describe","props","component","Component","withRouter","shallowComponent","beforeEach","reset","token","id","email","it","firstName","lastName","run","user","services","password","roles","error","console","log","update","find","length","then","contains","to","equal","message","context","first","disabled","newPassword","newPassword2","submitting","loading"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { Random } from 'meteor/random';\n\nimport React from 'react';\nimport { expect } from 'chai';\nimport { Redirect } from 'react-router-dom';\n\nimport { resetDatabase } from 'core/utils/testHelpers/testHelpers';\nimport { testCreateUser } from '../../../../api';\nimport { shallow, getMountedComponent } from '../../../../utils/testHelpers';\nimport pollUntilReady from '../../../../utils/pollUntilReady';\nimport Loading from '../../../Loading/Loading';\nimport PasswordResetPage, {\n  PasswordResetPage as PasswordResetPageDumb,\n} from '../../PasswordResetPage';\n\ndescribe('PasswordResetPage', () => {\n  let props;\n  const component = () =>\n    getMountedComponent({\n      Component: PasswordResetPage,\n      props,\n      withRouter: true,\n    });\n  const shallowComponent = () => shallow(<PasswordResetPageDumb {...props} />);\n\n  beforeEach(() => {\n    getMountedComponent.reset();\n    props = { token: Random.id(), email: 'john.doe@test.com' };\n    return resetDatabase();\n  });\n\n  it('renders the name', async () => {\n    const { email, token } = props;\n    const firstName = 'John';\n    const lastName = 'Doe';\n\n    // FIXME: testCreateUser is called twice\n    try {\n      await testCreateUser.run({\n        user: {\n          email,\n          firstName,\n          lastName,\n          services: { password: { reset: { token } } },\n          roles: ['user'],\n        },\n      });\n    } catch (error) {\n      console.log('error:', error);\n    }\n\n    return pollUntilReady(() => {\n      component().update();\n      return !component().find(Loading).length;\n    }, 10).then(() => expect(component().contains('John Doe')).to.equal(true));\n  });\n\n  it('Redirects to the login page if there is an error', () => {\n    props.error = { message: 'Test error' };\n\n    expect(shallowComponent().find(Redirect).length).to.equal(1);\n  });\n\n  context('disables submit button when', () => {\n    it('new password is not set', () => {\n      props.user = { id: 'userId' };\n\n      expect(shallowComponent()\n        .find('[type=\"submit\"]')\n        .first()\n        .props().disabled).to.equal(true);\n    });\n\n    it('passwords do not match', () => {\n      props.newPassword = 'password1';\n      props.newPassword2 = 'password2';\n      props.user = { id: 'userId' };\n\n      expect(shallowComponent()\n        .find('[type=\"submit\"]')\n        .first()\n        .props().disabled).to.equal(true);\n    });\n  });\n\n  it('loads while submitting', () => {\n    const password = 'password';\n    props.submitting = true;\n    props.newPassword = password;\n    props.newPassword2 = password;\n    props.user = { id: 'userId' };\n\n    expect(shallowComponent()\n      .find('[type=\"submit\"]')\n      .first()\n      .props().loading).to.equal(true);\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/PasswordResetPage/test/client/PasswordResetPage.test.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/PasswordResetPage/test/client/PasswordResetPage.test.jsx"}},"code":"let Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 2);\nlet Redirect;\nmodule.link(\"react-router-dom\", {\n  Redirect(v) {\n    Redirect = v;\n  }\n\n}, 3);\nlet resetDatabase;\nmodule.link(\"../../../../utils/testHelpers/testHelpers\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 4);\nlet testCreateUser;\nmodule.link(\"../../../../api\", {\n  testCreateUser(v) {\n    testCreateUser = v;\n  }\n\n}, 5);\nlet shallow, getMountedComponent;\nmodule.link(\"../../../../utils/testHelpers\", {\n  shallow(v) {\n    shallow = v;\n  },\n\n  getMountedComponent(v) {\n    getMountedComponent = v;\n  }\n\n}, 6);\nlet pollUntilReady;\nmodule.link(\"../../../../utils/pollUntilReady\", {\n  default(v) {\n    pollUntilReady = v;\n  }\n\n}, 7);\nlet Loading;\nmodule.link(\"../../../Loading/Loading\", {\n  default(v) {\n    Loading = v;\n  }\n\n}, 8);\nlet PasswordResetPage, PasswordResetPageDumb;\nmodule.link(\"../../PasswordResetPage\", {\n  default(v) {\n    PasswordResetPage = v;\n  },\n\n  PasswordResetPage(v) {\n    PasswordResetPageDumb = v;\n  }\n\n}, 9);\ndescribe('PasswordResetPage', () => {\n  let props;\n\n  const component = () => getMountedComponent({\n    Component: PasswordResetPage,\n    props,\n    withRouter: true\n  });\n\n  const shallowComponent = () => shallow(React.createElement(PasswordResetPageDumb, props));\n\n  beforeEach(() => {\n    getMountedComponent.reset();\n    props = {\n      token: Random.id(),\n      email: 'john.doe@test.com'\n    };\n    return resetDatabase();\n  });\n  it('renders the name', async () => {\n    const {\n      email,\n      token\n    } = props;\n    const firstName = 'John';\n    const lastName = 'Doe'; // FIXME: testCreateUser is called twice\n\n    try {\n      await testCreateUser.run({\n        user: {\n          email,\n          firstName,\n          lastName,\n          services: {\n            password: {\n              reset: {\n                token\n              }\n            }\n          },\n          roles: ['user']\n        }\n      });\n    } catch (error) {\n      console.log('error:', error);\n    }\n\n    return pollUntilReady(() => {\n      component().update();\n      return !component().find(Loading).length;\n    }, 10).then(() => expect(component().contains('John Doe')).to.equal(true));\n  });\n  it('Redirects to the login page if there is an error', () => {\n    props.error = {\n      message: 'Test error'\n    };\n    expect(shallowComponent().find(Redirect).length).to.equal(1);\n  });\n  context('disables submit button when', () => {\n    it('new password is not set', () => {\n      props.user = {\n        id: 'userId'\n      };\n      expect(shallowComponent().find('[type=\"submit\"]').first().props().disabled).to.equal(true);\n    });\n    it('passwords do not match', () => {\n      props.newPassword = 'password1';\n      props.newPassword2 = 'password2';\n      props.user = {\n        id: 'userId'\n      };\n      expect(shallowComponent().find('[type=\"submit\"]').first().props().disabled).to.equal(true);\n    });\n  });\n  it('loads while submitting', () => {\n    const password = 'password';\n    props.submitting = true;\n    props.newPassword = password;\n    props.newPassword2 = password;\n    props.user = {\n      id: 'userId'\n    };\n    expect(shallowComponent().find('[type=\"submit\"]').first().props().loading).to.equal(true);\n  });\n});","map":{"version":3,"sources":["imports/core/components/PasswordResetPage/test/client/PasswordResetPage.test.jsx"],"names":["describe","component","getMountedComponent","Component","withRouter","shallowComponent","shallow","beforeEach","props","token","Random","email","resetDatabase","it","firstName","lastName","user","services","password","reset","roles","console","expect","message","context","id"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { Random } from 'meteor/random';\n\nimport React from 'react';\nimport { expect } from 'chai';\nimport { Redirect } from 'react-router-dom';\n\nimport { resetDatabase } from 'core/utils/testHelpers/testHelpers';\nimport { testCreateUser } from '../../../../api';\nimport { shallow, getMountedComponent } from '../../../../utils/testHelpers';\nimport pollUntilReady from '../../../../utils/pollUntilReady';\nimport Loading from '../../../Loading/Loading';\nimport PasswordResetPage, {\n  PasswordResetPage as PasswordResetPageDumb,\n} from '../../PasswordResetPage';\n\ndescribe('PasswordResetPage', () => {\n  let props;\n  const component = () =>\n    getMountedComponent({\n      Component: PasswordResetPage,\n      props,\n      withRouter: true,\n    });\n  const shallowComponent = () => shallow(<PasswordResetPageDumb {...props} />);\n\n  beforeEach(() => {\n    getMountedComponent.reset();\n    props = { token: Random.id(), email: 'john.doe@test.com' };\n    return resetDatabase();\n  });\n\n  it('renders the name', async () => {\n    const { email, token } = props;\n    const firstName = 'John';\n    const lastName = 'Doe';\n\n    // FIXME: testCreateUser is called twice\n    try {\n      await testCreateUser.run({\n        user: {\n          email,\n          firstName,\n          lastName,\n          services: { password: { reset: { token } } },\n          roles: ['user'],\n        },\n      });\n    } catch (error) {\n      console.log('error:', error);\n    }\n\n    return pollUntilReady(() => {\n      component().update();\n      return !component().find(Loading).length;\n    }, 10).then(() => expect(component().contains('John Doe')).to.equal(true));\n  });\n\n  it('Redirects to the login page if there is an error', () => {\n    props.error = { message: 'Test error' };\n\n    expect(shallowComponent().find(Redirect).length).to.equal(1);\n  });\n\n  context('disables submit button when', () => {\n    it('new password is not set', () => {\n      props.user = { id: 'userId' };\n\n      expect(shallowComponent()\n        .find('[type=\"submit\"]')\n        .first()\n        .props().disabled).to.equal(true);\n    });\n\n    it('passwords do not match', () => {\n      props.newPassword = 'password1';\n      props.newPassword2 = 'password2';\n      props.user = { id: 'userId' };\n\n      expect(shallowComponent()\n        .find('[type=\"submit\"]')\n        .first()\n        .props().disabled).to.equal(true);\n    });\n  });\n\n  it('loads while submitting', () => {\n    const password = 'password';\n    props.submitting = true;\n    props.newPassword = password;\n    props.newPassword2 = password;\n    props.user = { id: 'userId' };\n\n    expect(shallowComponent()\n      .find('[type=\"submit\"]')\n      .first()\n      .props().loading).to.equal(true);\n  });\n});\n"]},"sourceType":"script","hash":"a75dd2a220ef0f9991ea99a44c5000cedb53d101"}
