{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/PropertyCalculator.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/utils/Calculator/PropertyCalculator.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/PropertyCalculator.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/Calculator/PropertyCalculator.js"],"names":["getPropertyArray","getPropertyLoanArray","getPercent","getCountedArray","getMissingFieldIds","filesPercent","getMissingDocumentIds","getPropertyDocuments","MiddlewareManager","withPropertyCalculator","SuperClass","constructor","config","initPropertyCalculator","propertyMiddleware","middlewareManager","applyToAllMethods","propertyPercent","loan","structureId","property","borrowers","structure","selectStructure","propertyToCalculateWith","formArray1","formArray2","getPropAndWork","propertyValue","selectPropertyValue","propertyWork","selectStructureKey","key","getPropertyWork","selectPropertyWork","getPropertyFilesProgress","doc","fileArray","id","_id","getPropertyCompletion","selectedProperty","selectProperty","formsProgress","filesProgress","getMissingPropertyFields","getMissingPropertyDocuments","hasDetailedPropertyValue","propertyExactValue","selectPropertyKey","landValue","constructionValue","isPromotionProperty","promotionOptionId"],"mappings":"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","sourcesContent":["// @flow\nimport {\n  getPropertyArray,\n  getPropertyLoanArray,\n} from '../../arrays/PropertyFormArray';\nimport { getPercent } from '../general';\nimport { getCountedArray, getMissingFieldIds } from '../formArrayHelpers';\nimport {\n  filesPercent,\n  getMissingDocumentIds,\n} from '../../api/files/fileHelpers';\nimport { getPropertyDocuments } from '../../api/files/documents';\nimport MiddlewareManager from '../MiddlewareManager';\n\nexport const withPropertyCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    constructor(config) {\n      super(config);\n      this.initPropertyCalculator(config);\n    }\n\n    initPropertyCalculator(config) {\n      if (config && config.propertyMiddleware) {\n        const middlewareManager = new MiddlewareManager(this);\n        middlewareManager.applyToAllMethods([config.propertyMiddleware]);\n      }\n    }\n\n    propertyPercent({ loan, structureId, property }) {\n      const { borrowers } = loan;\n      const structure = this.selectStructure({ loan, structureId });\n      const propertyToCalculateWith = property || structure.property;\n\n      if (!propertyToCalculateWith) {\n        return 0;\n      }\n\n      const formArray1 = getPropertyArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n      const formArray2 = getPropertyLoanArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n\n      return getPercent([\n        ...getCountedArray(formArray1, propertyToCalculateWith),\n        ...getCountedArray(formArray2, loan),\n      ]);\n    }\n\n    getPropAndWork({ loan, structureId }) {\n      const propertyValue = this.selectPropertyValue({ loan, structureId });\n      const propertyWork = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'propertyWork',\n      }) || 0;\n      return super.getPropAndWork({ propertyValue, propertyWork });\n    }\n\n    getPropertyWork({ loan, structureId }) {\n      return this.selectPropertyWork({ loan, structureId });\n    }\n\n    getPropertyFilesProgress({ loan, structureId, property }) {\n      const structure = this.selectStructure({ loan, structureId });\n      const propertyToCalculateWith = property || structure.property;\n\n      if (!propertyToCalculateWith) {\n        return 0;\n      }\n\n      return filesPercent({\n        doc: propertyToCalculateWith,\n        fileArray: getPropertyDocuments({\n          loan,\n          id: propertyToCalculateWith._id,\n        }),\n      });\n    }\n\n    getPropertyCompletion({ loan, structureId, property }) {\n      const { borrowers } = loan;\n      const selectedProperty = this.selectProperty({ loan, structureId });\n      const propertyToCalculateWith = property || selectedProperty;\n\n      const formsProgress = this.propertyPercent({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n      const filesProgress = this.getPropertyFilesProgress({\n        loan,\n        property: propertyToCalculateWith,\n      });\n\n      return (formsProgress + filesProgress) / 2;\n    }\n\n    getMissingPropertyFields({ loan, structureId, property }) {\n      const { borrowers } = loan;\n      const selectedProperty = this.selectProperty({ loan, structureId });\n\n      const propertyToCalculateWith = property || selectedProperty;\n\n      const formArray1 = getPropertyArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n      const formArray2 = getPropertyLoanArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n\n      return [\n        ...getMissingFieldIds(formArray1, propertyToCalculateWith),\n        ...getMissingFieldIds(formArray2, loan),\n      ];\n    }\n\n    getMissingPropertyDocuments({ loan, structureId, property }) {\n      const selectedProperty = this.selectProperty({ loan, structureId });\n      const propertyToCalculateWith = property || selectedProperty;\n\n      return getMissingDocumentIds({\n        doc: propertyToCalculateWith,\n        fileArray: getPropertyDocuments({\n          loan,\n          id: propertyToCalculateWith._id,\n        }),\n      });\n    }\n\n    hasDetailedPropertyValue({ loan, structureId }) {\n      const propertyExactValue = this.selectPropertyKey({\n        key: 'value',\n        loan,\n        structureId,\n      });\n      const landValue = this.selectPropertyKey({\n        key: 'landValue',\n        loan,\n        structureId,\n      });\n      const constructionValue = this.selectPropertyKey({\n        key: 'constructionValue',\n        loan,\n        structureId,\n      });\n\n      return !propertyExactValue || !!(landValue && constructionValue);\n    }\n\n    isPromotionProperty({ loan, structureId }) {\n      const structure = this.selectStructure({ loan, structureId });\n      return !!structure.promotionOptionId;\n    }\n  };\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/PropertyCalculator.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/Calculator/PropertyCalculator.js"}},"code":"module.export({\n  withPropertyCalculator: () => withPropertyCalculator\n});\nlet getPropertyArray, getPropertyLoanArray;\nmodule.link(\"../../arrays/PropertyFormArray\", {\n  getPropertyArray(v) {\n    getPropertyArray = v;\n  },\n\n  getPropertyLoanArray(v) {\n    getPropertyLoanArray = v;\n  }\n\n}, 0);\nlet getPercent;\nmodule.link(\"../general\", {\n  getPercent(v) {\n    getPercent = v;\n  }\n\n}, 1);\nlet getCountedArray, getMissingFieldIds;\nmodule.link(\"../formArrayHelpers\", {\n  getCountedArray(v) {\n    getCountedArray = v;\n  },\n\n  getMissingFieldIds(v) {\n    getMissingFieldIds = v;\n  }\n\n}, 2);\nlet filesPercent, getMissingDocumentIds;\nmodule.link(\"../../api/files/fileHelpers\", {\n  filesPercent(v) {\n    filesPercent = v;\n  },\n\n  getMissingDocumentIds(v) {\n    getMissingDocumentIds = v;\n  }\n\n}, 3);\nlet getPropertyDocuments;\nmodule.link(\"../../api/files/documents\", {\n  getPropertyDocuments(v) {\n    getPropertyDocuments = v;\n  }\n\n}, 4);\nlet MiddlewareManager;\nmodule.link(\"../MiddlewareManager\", {\n  default(v) {\n    MiddlewareManager = v;\n  }\n\n}, 5);\n\nconst withPropertyCalculator = function () {\n  let SuperClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : class {};\n  return class extends SuperClass {\n    constructor(config) {\n      super(config);\n      this.initPropertyCalculator(config);\n    }\n\n    initPropertyCalculator(config) {\n      if (config && config.propertyMiddleware) {\n        const middlewareManager = new MiddlewareManager(this);\n        middlewareManager.applyToAllMethods([config.propertyMiddleware]);\n      }\n    }\n\n    propertyPercent(_ref) {\n      let {\n        loan,\n        structureId,\n        property\n      } = _ref;\n      const {\n        borrowers\n      } = loan;\n      const structure = this.selectStructure({\n        loan,\n        structureId\n      });\n      const propertyToCalculateWith = property || structure.property;\n\n      if (!propertyToCalculateWith) {\n        return 0;\n      }\n\n      const formArray1 = getPropertyArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith\n      });\n      const formArray2 = getPropertyLoanArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith\n      });\n      return getPercent([...getCountedArray(formArray1, propertyToCalculateWith), ...getCountedArray(formArray2, loan)]);\n    }\n\n    getPropAndWork(_ref2) {\n      let {\n        loan,\n        structureId\n      } = _ref2;\n      const propertyValue = this.selectPropertyValue({\n        loan,\n        structureId\n      });\n      const propertyWork = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'propertyWork'\n      }) || 0;\n      return super.getPropAndWork({\n        propertyValue,\n        propertyWork\n      });\n    }\n\n    getPropertyWork(_ref3) {\n      let {\n        loan,\n        structureId\n      } = _ref3;\n      return this.selectPropertyWork({\n        loan,\n        structureId\n      });\n    }\n\n    getPropertyFilesProgress(_ref4) {\n      let {\n        loan,\n        structureId,\n        property\n      } = _ref4;\n      const structure = this.selectStructure({\n        loan,\n        structureId\n      });\n      const propertyToCalculateWith = property || structure.property;\n\n      if (!propertyToCalculateWith) {\n        return 0;\n      }\n\n      return filesPercent({\n        doc: propertyToCalculateWith,\n        fileArray: getPropertyDocuments({\n          loan,\n          id: propertyToCalculateWith._id\n        })\n      });\n    }\n\n    getPropertyCompletion(_ref5) {\n      let {\n        loan,\n        structureId,\n        property\n      } = _ref5;\n      const {\n        borrowers\n      } = loan;\n      const selectedProperty = this.selectProperty({\n        loan,\n        structureId\n      });\n      const propertyToCalculateWith = property || selectedProperty;\n      const formsProgress = this.propertyPercent({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith\n      });\n      const filesProgress = this.getPropertyFilesProgress({\n        loan,\n        property: propertyToCalculateWith\n      });\n      return (formsProgress + filesProgress) / 2;\n    }\n\n    getMissingPropertyFields(_ref6) {\n      let {\n        loan,\n        structureId,\n        property\n      } = _ref6;\n      const {\n        borrowers\n      } = loan;\n      const selectedProperty = this.selectProperty({\n        loan,\n        structureId\n      });\n      const propertyToCalculateWith = property || selectedProperty;\n      const formArray1 = getPropertyArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith\n      });\n      const formArray2 = getPropertyLoanArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith\n      });\n      return [...getMissingFieldIds(formArray1, propertyToCalculateWith), ...getMissingFieldIds(formArray2, loan)];\n    }\n\n    getMissingPropertyDocuments(_ref7) {\n      let {\n        loan,\n        structureId,\n        property\n      } = _ref7;\n      const selectedProperty = this.selectProperty({\n        loan,\n        structureId\n      });\n      const propertyToCalculateWith = property || selectedProperty;\n      return getMissingDocumentIds({\n        doc: propertyToCalculateWith,\n        fileArray: getPropertyDocuments({\n          loan,\n          id: propertyToCalculateWith._id\n        })\n      });\n    }\n\n    hasDetailedPropertyValue(_ref8) {\n      let {\n        loan,\n        structureId\n      } = _ref8;\n      const propertyExactValue = this.selectPropertyKey({\n        key: 'value',\n        loan,\n        structureId\n      });\n      const landValue = this.selectPropertyKey({\n        key: 'landValue',\n        loan,\n        structureId\n      });\n      const constructionValue = this.selectPropertyKey({\n        key: 'constructionValue',\n        loan,\n        structureId\n      });\n      return !propertyExactValue || !!(landValue && constructionValue);\n    }\n\n    isPromotionProperty(_ref9) {\n      let {\n        loan,\n        structureId\n      } = _ref9;\n      const structure = this.selectStructure({\n        loan,\n        structureId\n      });\n      return !!structure.promotionOptionId;\n    }\n\n  };\n};","map":{"version":3,"sources":["imports/core/utils/Calculator/PropertyCalculator.js"],"names":["withPropertyCalculator","SuperClass","constructor","initPropertyCalculator","config","middlewareManager","propertyPercent","property","borrowers","structure","structureId","propertyToCalculateWith","formArray1","getPropertyArray","formArray2","getPropertyLoanArray","getPercent","getCountedArray","getPropAndWork","propertyValue","propertyWork","key","getPropertyWork","getPropertyFilesProgress","filesPercent","doc","fileArray","getPropertyDocuments","id","_id","getPropertyCompletion","selectedProperty","formsProgress","filesProgress","getMissingPropertyFields","getMissingFieldIds","getMissingPropertyDocuments","getMissingDocumentIds","hasDetailedPropertyValue","propertyExactValue","landValue","constructionValue","isPromotionProperty"],"mappings":"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","sourcesContent":["// @flow\nimport {\n  getPropertyArray,\n  getPropertyLoanArray,\n} from '../../arrays/PropertyFormArray';\nimport { getPercent } from '../general';\nimport { getCountedArray, getMissingFieldIds } from '../formArrayHelpers';\nimport {\n  filesPercent,\n  getMissingDocumentIds,\n} from '../../api/files/fileHelpers';\nimport { getPropertyDocuments } from '../../api/files/documents';\nimport MiddlewareManager from '../MiddlewareManager';\n\nexport const withPropertyCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    constructor(config) {\n      super(config);\n      this.initPropertyCalculator(config);\n    }\n\n    initPropertyCalculator(config) {\n      if (config && config.propertyMiddleware) {\n        const middlewareManager = new MiddlewareManager(this);\n        middlewareManager.applyToAllMethods([config.propertyMiddleware]);\n      }\n    }\n\n    propertyPercent({ loan, structureId, property }) {\n      const { borrowers } = loan;\n      const structure = this.selectStructure({ loan, structureId });\n      const propertyToCalculateWith = property || structure.property;\n\n      if (!propertyToCalculateWith) {\n        return 0;\n      }\n\n      const formArray1 = getPropertyArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n      const formArray2 = getPropertyLoanArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n\n      return getPercent([\n        ...getCountedArray(formArray1, propertyToCalculateWith),\n        ...getCountedArray(formArray2, loan),\n      ]);\n    }\n\n    getPropAndWork({ loan, structureId }) {\n      const propertyValue = this.selectPropertyValue({ loan, structureId });\n      const propertyWork = this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'propertyWork',\n      }) || 0;\n      return super.getPropAndWork({ propertyValue, propertyWork });\n    }\n\n    getPropertyWork({ loan, structureId }) {\n      return this.selectPropertyWork({ loan, structureId });\n    }\n\n    getPropertyFilesProgress({ loan, structureId, property }) {\n      const structure = this.selectStructure({ loan, structureId });\n      const propertyToCalculateWith = property || structure.property;\n\n      if (!propertyToCalculateWith) {\n        return 0;\n      }\n\n      return filesPercent({\n        doc: propertyToCalculateWith,\n        fileArray: getPropertyDocuments({\n          loan,\n          id: propertyToCalculateWith._id,\n        }),\n      });\n    }\n\n    getPropertyCompletion({ loan, structureId, property }) {\n      const { borrowers } = loan;\n      const selectedProperty = this.selectProperty({ loan, structureId });\n      const propertyToCalculateWith = property || selectedProperty;\n\n      const formsProgress = this.propertyPercent({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n      const filesProgress = this.getPropertyFilesProgress({\n        loan,\n        property: propertyToCalculateWith,\n      });\n\n      return (formsProgress + filesProgress) / 2;\n    }\n\n    getMissingPropertyFields({ loan, structureId, property }) {\n      const { borrowers } = loan;\n      const selectedProperty = this.selectProperty({ loan, structureId });\n\n      const propertyToCalculateWith = property || selectedProperty;\n\n      const formArray1 = getPropertyArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n      const formArray2 = getPropertyLoanArray({\n        loan,\n        borrowers,\n        property: propertyToCalculateWith,\n      });\n\n      return [\n        ...getMissingFieldIds(formArray1, propertyToCalculateWith),\n        ...getMissingFieldIds(formArray2, loan),\n      ];\n    }\n\n    getMissingPropertyDocuments({ loan, structureId, property }) {\n      const selectedProperty = this.selectProperty({ loan, structureId });\n      const propertyToCalculateWith = property || selectedProperty;\n\n      return getMissingDocumentIds({\n        doc: propertyToCalculateWith,\n        fileArray: getPropertyDocuments({\n          loan,\n          id: propertyToCalculateWith._id,\n        }),\n      });\n    }\n\n    hasDetailedPropertyValue({ loan, structureId }) {\n      const propertyExactValue = this.selectPropertyKey({\n        key: 'value',\n        loan,\n        structureId,\n      });\n      const landValue = this.selectPropertyKey({\n        key: 'landValue',\n        loan,\n        structureId,\n      });\n      const constructionValue = this.selectPropertyKey({\n        key: 'constructionValue',\n        loan,\n        structureId,\n      });\n\n      return !propertyExactValue || !!(landValue && constructionValue);\n    }\n\n    isPromotionProperty({ loan, structureId }) {\n      const structure = this.selectStructure({ loan, structureId });\n      return !!structure.promotionOptionId;\n    }\n  };\n"]},"sourceType":"script","hash":"e9ec7e29ea6c88c8be386ffaf4451142739f0e9c"}
