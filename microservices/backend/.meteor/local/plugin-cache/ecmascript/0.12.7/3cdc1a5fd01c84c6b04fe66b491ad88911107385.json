{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/promotionOptions/server/exposures.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/promotionOptions/server/exposures.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/promotionOptions/server/exposures.js","inputSourceMap":{"version":3,"sources":["imports/core/api/promotionOptions/server/exposures.js"],"names":["Match","makePromotionOptionAnonymizer","exposeQuery","SecurityService","appPromotionOption","proPromotionOptions","query","overrides","firewall","userId","promotionOptionId","promotions","hasAccessToPromotionOption","embody","body","$filter","filters","params","_id","validateParams","String","promotionOptionIds","checkUserIsPro","forEach","isAllowedToViewPromotionOption","isUserAdmin","anonymize","embodyParams","$in","$postFilter","promotionOptions","map","Maybe","Boolean"],"mappings":"AAAA,SAASA,KAAT,QAAsB,cAAtB;AAEA,SAASC,6BAAT;AACA,SAASC,WAAT;AACA,OAAOC,eAAP;AACA,SAASC,kBAAT,EAA6BC,mBAA7B;AAEAH,WAAW,CAAC;AACVI,EAAAA,KAAK,EAAEF,kBADG;AAEVG,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,CAACC,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,EAAgC;AACtCP,MAAAA,eAAe,CAACQ,UAAhB,CAA2BC,0BAA3B,CAAsD;AACpDF,QAAAA,iBADoD;AAEpDD,QAAAA;AAFoD,OAAtD;AAID,KANQ;;AAOTI,IAAAA,MAAM,EAAGC,IAAD,IAAU;AAChBA,MAAAA,IAAI,CAACC,OAAL,GAAe,CAAC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,MAAM,EAAE;AAAEP,UAAAA;AAAF;AAAnB,OAAD,KAAgD;AAC7DM,QAAAA,OAAO,CAACE,GAAR,GAAcR,iBAAd;AACD,OAFD;AAGD,KAXQ;AAYTS,IAAAA,cAAc,EAAE;AAAET,MAAAA,iBAAiB,EAAEU;AAArB;AAZP;AAFD,CAAD,CAAX;AAkBAlB,WAAW,CAAC;AACVI,EAAAA,KAAK,EAAED,mBADG;AAEVE,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,CAACC,MAAD,EAASQ,MAAT,EAAiB;AACvB,YAAM;AAAEI,QAAAA;AAAF,UAAyBJ,MAA/B;AACAA,MAAAA,MAAM,CAACR,MAAP,GAAgBA,MAAhB;AACAN,MAAAA,eAAe,CAACmB,cAAhB,CAA+Bb,MAA/B;AACAY,MAAAA,kBAAkB,CAACE,OAAnB,CAA4Bb,iBAAD,IAAuB;AAChDP,QAAAA,eAAe,CAACQ,UAAhB,CAA2Ba,8BAA3B,CAA0D;AACxDd,UAAAA,iBADwD;AAExDD,UAAAA;AAFwD,SAA1D;AAID,OALD;;AAMA,UAAI,CAACN,eAAe,CAACsB,WAAhB,CAA4BhB,MAA5B,CAAL,EAA0C;AACxCQ,QAAAA,MAAM,CAACS,SAAP,GAAmB,IAAnB;AACD;AACF,KAdQ;;AAeTb,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOa,YAAP,KAAwB;AAC9Bb,MAAAA,IAAI,CAACC,OAAL,GAAe,CAAC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAD,KAAyB;AACtC,cAAM;AAAEI,UAAAA,kBAAkB,GAAG;AAAvB,YAA8BJ,MAApC;AACAD,QAAAA,OAAO,CAACE,GAAR,GAAc;AAAEU,UAAAA,GAAG,EAAEP;AAAP,SAAd;AACD,OAHD;;AAKAP,MAAAA,IAAI,CAACe,WAAL,GAAmB,CAACC,gBAAgB,GAAG,EAApB,EAAwBb,MAAxB,KAAmC;AACpD,cAAM;AAAES,UAAAA,SAAS,GAAG,KAAd;AAAqBjB,UAAAA;AAArB,YAAgCQ,MAAtC;AACA,eAAOS,SAAS,GACZI,gBAAgB,CAACC,GAAjB,CAAqB9B,6BAA6B,CAAC;AAAEQ,UAAAA;AAAF,SAAD,CAAlD,CADY,GAEZqB,gBAFJ;AAGD,OALD;AAMD,KA3BQ;AA4BTX,IAAAA,cAAc,EAAE;AACdE,MAAAA,kBAAkB,EAAE,CAACD,MAAD,CADN;AAEdX,MAAAA,MAAM,EAAEW,MAFM;AAGdM,MAAAA,SAAS,EAAE1B,KAAK,CAACgC,KAAN,CAAYC,OAAZ;AAHG;AA5BP;AAFD,CAAD,CAAX","sourcesContent":["import { Match } from 'meteor/check';\n\nimport { makePromotionOptionAnonymizer } from '../../promotions/server/promotionServerHelpers';\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport SecurityService from '../../security';\nimport { appPromotionOption, proPromotionOptions } from '../queries';\n\nexposeQuery({\n  query: appPromotionOption,\n  overrides: {\n    firewall(userId, { promotionOptionId }) {\n      SecurityService.promotions.hasAccessToPromotionOption({\n        promotionOptionId,\n        userId,\n      });\n    },\n    embody: (body) => {\n      body.$filter = ({ filters, params: { promotionOptionId } }) => {\n        filters._id = promotionOptionId;\n      };\n    },\n    validateParams: { promotionOptionId: String },\n  },\n});\n\nexposeQuery({\n  query: proPromotionOptions,\n  overrides: {\n    firewall(userId, params) {\n      const { promotionOptionIds } = params;\n      params.userId = userId;\n      SecurityService.checkUserIsPro(userId);\n      promotionOptionIds.forEach((promotionOptionId) => {\n        SecurityService.promotions.isAllowedToViewPromotionOption({\n          promotionOptionId,\n          userId,\n        });\n      });\n      if (!SecurityService.isUserAdmin(userId)) {\n        params.anonymize = true;\n      }\n    },\n    embody: (body, embodyParams) => {\n      body.$filter = ({ filters, params }) => {\n        const { promotionOptionIds = [] } = params;\n        filters._id = { $in: promotionOptionIds };\n      };\n\n      body.$postFilter = (promotionOptions = [], params) => {\n        const { anonymize = false, userId } = params;\n        return anonymize\n          ? promotionOptions.map(makePromotionOptionAnonymizer({ userId }))\n          : promotionOptions;\n      };\n    },\n    validateParams: {\n      promotionOptionIds: [String],\n      userId: String,\n      anonymize: Match.Maybe(Boolean),\n    },\n  },\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/promotionOptions/server/exposures.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/promotionOptions/server/exposures.js"}},"code":"let Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet makePromotionOptionAnonymizer;\nmodule.link(\"../../promotions/server/promotionServerHelpers\", {\n  makePromotionOptionAnonymizer(v) {\n    makePromotionOptionAnonymizer = v;\n  }\n\n}, 1);\nlet exposeQuery;\nmodule.link(\"../../queries/queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 2);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 3);\nlet appPromotionOption, proPromotionOptions;\nmodule.link(\"../queries\", {\n  appPromotionOption(v) {\n    appPromotionOption = v;\n  },\n\n  proPromotionOptions(v) {\n    proPromotionOptions = v;\n  }\n\n}, 4);\nexposeQuery({\n  query: appPromotionOption,\n  overrides: {\n    firewall(userId, {\n      promotionOptionId\n    }) {\n      SecurityService.promotions.hasAccessToPromotionOption({\n        promotionOptionId,\n        userId\n      });\n    },\n\n    embody: body => {\n      body.$filter = ({\n        filters,\n        params: {\n          promotionOptionId\n        }\n      }) => {\n        filters._id = promotionOptionId;\n      };\n    },\n    validateParams: {\n      promotionOptionId: String\n    }\n  }\n});\nexposeQuery({\n  query: proPromotionOptions,\n  overrides: {\n    firewall(userId, params) {\n      const {\n        promotionOptionIds\n      } = params;\n      params.userId = userId;\n      SecurityService.checkUserIsPro(userId);\n      promotionOptionIds.forEach(promotionOptionId => {\n        SecurityService.promotions.isAllowedToViewPromotionOption({\n          promotionOptionId,\n          userId\n        });\n      });\n\n      if (!SecurityService.isUserAdmin(userId)) {\n        params.anonymize = true;\n      }\n    },\n\n    embody: (body, embodyParams) => {\n      body.$filter = ({\n        filters,\n        params\n      }) => {\n        const {\n          promotionOptionIds = []\n        } = params;\n        filters._id = {\n          $in: promotionOptionIds\n        };\n      };\n\n      body.$postFilter = (promotionOptions = [], params) => {\n        const {\n          anonymize = false,\n          userId\n        } = params;\n        return anonymize ? promotionOptions.map(makePromotionOptionAnonymizer({\n          userId\n        })) : promotionOptions;\n      };\n    },\n    validateParams: {\n      promotionOptionIds: [String],\n      userId: String,\n      anonymize: Match.Maybe(Boolean)\n    }\n  }\n});","map":{"version":3,"sources":["imports/core/api/promotionOptions/server/exposures.js"],"names":["exposeQuery","query","overrides","firewall","promotionOptionId","SecurityService","userId","embody","body","params","filters","validateParams","String","promotionOptionIds","$in","promotionOptions","anonymize","makePromotionOptionAnonymizer","Match"],"mappings":"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","sourcesContent":["import { Match } from 'meteor/check';\n\nimport { makePromotionOptionAnonymizer } from '../../promotions/server/promotionServerHelpers';\nimport { exposeQuery } from '../../queries/queryHelpers';\nimport SecurityService from '../../security';\nimport { appPromotionOption, proPromotionOptions } from '../queries';\n\nexposeQuery({\n  query: appPromotionOption,\n  overrides: {\n    firewall(userId, { promotionOptionId }) {\n      SecurityService.promotions.hasAccessToPromotionOption({\n        promotionOptionId,\n        userId,\n      });\n    },\n    embody: (body) => {\n      body.$filter = ({ filters, params: { promotionOptionId } }) => {\n        filters._id = promotionOptionId;\n      };\n    },\n    validateParams: { promotionOptionId: String },\n  },\n});\n\nexposeQuery({\n  query: proPromotionOptions,\n  overrides: {\n    firewall(userId, params) {\n      const { promotionOptionIds } = params;\n      params.userId = userId;\n      SecurityService.checkUserIsPro(userId);\n      promotionOptionIds.forEach((promotionOptionId) => {\n        SecurityService.promotions.isAllowedToViewPromotionOption({\n          promotionOptionId,\n          userId,\n        });\n      });\n      if (!SecurityService.isUserAdmin(userId)) {\n        params.anonymize = true;\n      }\n    },\n    embody: (body, embodyParams) => {\n      body.$filter = ({ filters, params }) => {\n        const { promotionOptionIds = [] } = params;\n        filters._id = { $in: promotionOptionIds };\n      };\n\n      body.$postFilter = (promotionOptions = [], params) => {\n        const { anonymize = false, userId } = params;\n        return anonymize\n          ? promotionOptions.map(makePromotionOptionAnonymizer({ userId }))\n          : promotionOptions;\n      };\n    },\n    validateParams: {\n      promotionOptionIds: [String],\n      userId: String,\n      anonymize: Match.Maybe(Boolean),\n    },\n  },\n});\n"]},"sourceType":"script","hash":"3cdc1a5fd01c84c6b04fe66b491ad88911107385"}
