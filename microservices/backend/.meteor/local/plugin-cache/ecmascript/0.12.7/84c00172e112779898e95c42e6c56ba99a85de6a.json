{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/widget1/Widget1SingleInput/test/Widget1SingleInputSlider.spec.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/components/widget1/Widget1SingleInput/test/Widget1SingleInputSlider.spec.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/widget1/Widget1SingleInput/test/Widget1SingleInputSlider.spec.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/widget1/Widget1SingleInput/test/Widget1SingleInputSlider.spec.jsx"],"names":["React","expect","shallow","Slider","IconButton","Widget1SingleInputSlider","describe","props","component","beforeEach","it","find","length","to","equal","value","sliderMax","undefined","allowExtremeLoan","isLoanValue","tooltip","id","include","not"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'core/utils/testHelpers/enzyme';\n\nimport Slider from 'core/components/Material/Slider';\nimport IconButton from 'core/components/IconButton';\nimport Widget1SingleInputSlider from '../Widget1SingleInputSlider';\n\ndescribe('Widget1SingleInputSlider', () => {\n  let props;\n  const component = () => shallow(<Widget1SingleInputSlider {...props} />);\n\n  beforeEach(() => {\n    props = {};\n  });\n\n  it('should render a Slider', () => {\n    expect(component().find(Slider).length).to.equal(1);\n  });\n\n  it('should pass the value to the slider', () => {\n    props.value = 100;\n    props.sliderMax = 150;\n    expect(component()\n      .find(Slider)\n      .props().value).to.equal(100);\n  });\n\n  it('should pass a value of 0 to slider if value is falsy', () => {\n    props.value = '';\n    expect(component()\n      .find(Slider)\n      .props().value).to.equal(0);\n    props.value = undefined;\n    expect(component()\n      .find(Slider)\n      .props().value).to.equal(0);\n    props.value = null;\n    expect(component()\n      .find(Slider)\n      .props().value).to.equal(0);\n  });\n\n  it('should pass the sliderMax to the Slider if the value is larger', () => {\n    props.value = 100;\n    props.sliderMax = 50;\n    expect(component()\n      .find(Slider)\n      .props().value).to.equal(50);\n  });\n\n  it('should render an IconButton if value is large than sliderMax', () => {\n    props.sliderMax = 1;\n    props.value = 2;\n    expect(component().find(IconButton).length).to.equal(1);\n  });\n\n  it('should render an IconButton if value is at least 90% of sliderMax', () => {\n    props.sliderMax = 1;\n    props.value = 0.95;\n    expect(component().find(IconButton).length).to.equal(1);\n  });\n\n  it('should not render an IconButton if sliderMax is 0', () => {\n    props.sliderMax = 0;\n    expect(component().find(IconButton).length).to.equal(0);\n  });\n\n  it('should not render an IconButton if value is smaller than sliderMax', () => {\n    props.sliderMax = 2;\n    props.value = 1;\n    expect(component().find(IconButton).length).to.equal(0);\n  });\n\n  it('should not render an IconButton if sliderMax is allowExtremeLoan is true', () => {\n    props.sliderMax = 1;\n    props.value = 2;\n    props.allowExtremeLoan = true;\n    expect(component().find(IconButton).length).to.equal(0);\n  });\n\n  it('should use a special tooltip on the button if this is a loanValue', () => {\n    props.sliderMax = 1;\n    props.value = 2;\n    props.isLoanValue = true;\n\n    expect(component()\n      .find(IconButton)\n      .props().tooltip.props.id).to.include('buttonTooltipLoan');\n\n    props.isLoanValue = false;\n    expect(component()\n      .find(IconButton)\n      .props().tooltip.props.id).to.not.include('buttonTooltipLoan');\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/widget1/Widget1SingleInput/test/Widget1SingleInputSlider.spec.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/widget1/Widget1SingleInput/test/Widget1SingleInputSlider.spec.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 1);\nlet shallow;\nmodule.link(\"../../../../utils/testHelpers/enzyme\", {\n  shallow(v) {\n    shallow = v;\n  }\n\n}, 2);\nlet Slider;\nmodule.link(\"../../../Material/Slider\", {\n  default(v) {\n    Slider = v;\n  }\n\n}, 3);\nlet IconButton;\nmodule.link(\"../../../IconButton\", {\n  default(v) {\n    IconButton = v;\n  }\n\n}, 4);\nlet Widget1SingleInputSlider;\nmodule.link(\"../Widget1SingleInputSlider\", {\n  default(v) {\n    Widget1SingleInputSlider = v;\n  }\n\n}, 5);\ndescribe('Widget1SingleInputSlider', () => {\n  let props;\n\n  const component = () => shallow(React.createElement(Widget1SingleInputSlider, props));\n\n  beforeEach(() => {\n    props = {};\n  });\n  it('should render a Slider', () => {\n    expect(component().find(Slider).length).to.equal(1);\n  });\n  it('should pass the value to the slider', () => {\n    props.value = 100;\n    props.sliderMax = 150;\n    expect(component().find(Slider).props().value).to.equal(100);\n  });\n  it('should pass a value of 0 to slider if value is falsy', () => {\n    props.value = '';\n    expect(component().find(Slider).props().value).to.equal(0);\n    props.value = undefined;\n    expect(component().find(Slider).props().value).to.equal(0);\n    props.value = null;\n    expect(component().find(Slider).props().value).to.equal(0);\n  });\n  it('should pass the sliderMax to the Slider if the value is larger', () => {\n    props.value = 100;\n    props.sliderMax = 50;\n    expect(component().find(Slider).props().value).to.equal(50);\n  });\n  it('should render an IconButton if value is large than sliderMax', () => {\n    props.sliderMax = 1;\n    props.value = 2;\n    expect(component().find(IconButton).length).to.equal(1);\n  });\n  it('should render an IconButton if value is at least 90% of sliderMax', () => {\n    props.sliderMax = 1;\n    props.value = 0.95;\n    expect(component().find(IconButton).length).to.equal(1);\n  });\n  it('should not render an IconButton if sliderMax is 0', () => {\n    props.sliderMax = 0;\n    expect(component().find(IconButton).length).to.equal(0);\n  });\n  it('should not render an IconButton if value is smaller than sliderMax', () => {\n    props.sliderMax = 2;\n    props.value = 1;\n    expect(component().find(IconButton).length).to.equal(0);\n  });\n  it('should not render an IconButton if sliderMax is allowExtremeLoan is true', () => {\n    props.sliderMax = 1;\n    props.value = 2;\n    props.allowExtremeLoan = true;\n    expect(component().find(IconButton).length).to.equal(0);\n  });\n  it('should use a special tooltip on the button if this is a loanValue', () => {\n    props.sliderMax = 1;\n    props.value = 2;\n    props.isLoanValue = true;\n    expect(component().find(IconButton).props().tooltip.props.id).to.include('buttonTooltipLoan');\n    props.isLoanValue = false;\n    expect(component().find(IconButton).props().tooltip.props.id).to.not.include('buttonTooltipLoan');\n  });\n});","map":{"version":3,"sources":["imports/core/components/widget1/Widget1SingleInput/test/Widget1SingleInputSlider.spec.jsx"],"names":["describe","component","shallow","beforeEach","props","it","expect"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'core/utils/testHelpers/enzyme';\n\nimport Slider from 'core/components/Material/Slider';\nimport IconButton from 'core/components/IconButton';\nimport Widget1SingleInputSlider from '../Widget1SingleInputSlider';\n\ndescribe('Widget1SingleInputSlider', () => {\n  let props;\n  const component = () => shallow(<Widget1SingleInputSlider {...props} />);\n\n  beforeEach(() => {\n    props = {};\n  });\n\n  it('should render a Slider', () => {\n    expect(component().find(Slider).length).to.equal(1);\n  });\n\n  it('should pass the value to the slider', () => {\n    props.value = 100;\n    props.sliderMax = 150;\n    expect(component()\n      .find(Slider)\n      .props().value).to.equal(100);\n  });\n\n  it('should pass a value of 0 to slider if value is falsy', () => {\n    props.value = '';\n    expect(component()\n      .find(Slider)\n      .props().value).to.equal(0);\n    props.value = undefined;\n    expect(component()\n      .find(Slider)\n      .props().value).to.equal(0);\n    props.value = null;\n    expect(component()\n      .find(Slider)\n      .props().value).to.equal(0);\n  });\n\n  it('should pass the sliderMax to the Slider if the value is larger', () => {\n    props.value = 100;\n    props.sliderMax = 50;\n    expect(component()\n      .find(Slider)\n      .props().value).to.equal(50);\n  });\n\n  it('should render an IconButton if value is large than sliderMax', () => {\n    props.sliderMax = 1;\n    props.value = 2;\n    expect(component().find(IconButton).length).to.equal(1);\n  });\n\n  it('should render an IconButton if value is at least 90% of sliderMax', () => {\n    props.sliderMax = 1;\n    props.value = 0.95;\n    expect(component().find(IconButton).length).to.equal(1);\n  });\n\n  it('should not render an IconButton if sliderMax is 0', () => {\n    props.sliderMax = 0;\n    expect(component().find(IconButton).length).to.equal(0);\n  });\n\n  it('should not render an IconButton if value is smaller than sliderMax', () => {\n    props.sliderMax = 2;\n    props.value = 1;\n    expect(component().find(IconButton).length).to.equal(0);\n  });\n\n  it('should not render an IconButton if sliderMax is allowExtremeLoan is true', () => {\n    props.sliderMax = 1;\n    props.value = 2;\n    props.allowExtremeLoan = true;\n    expect(component().find(IconButton).length).to.equal(0);\n  });\n\n  it('should use a special tooltip on the button if this is a loanValue', () => {\n    props.sliderMax = 1;\n    props.value = 2;\n    props.isLoanValue = true;\n\n    expect(component()\n      .find(IconButton)\n      .props().tooltip.props.id).to.include('buttonTooltipLoan');\n\n    props.isLoanValue = false;\n    expect(component()\n      .find(IconButton)\n      .props().tooltip.props.id).to.not.include('buttonTooltipLoan');\n  });\n});\n"]},"sourceType":"script","hash":"84c00172e112779898e95c42e6c56ba99a85de6a"}
