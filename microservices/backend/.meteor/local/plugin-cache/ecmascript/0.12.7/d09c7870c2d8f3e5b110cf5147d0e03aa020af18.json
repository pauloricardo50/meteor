{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/userFixtures.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/fixtures/userFixtures.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/userFixtures.js","inputSourceMap":{"version":3,"sources":["imports/core/fixtures/userFixtures.js"],"names":["Accounts","Roles","faker","USER_PASSWORD","UserService","createUser","email","role","password","userId","setUserRoles","createFakeUsers","count","currentUserEmail","insertedUsers","i","newUserId","update","object","firstName","name","lastName","push","addUser","data","phoneNumbers","phone","phoneNumber","createDevs","currentEmail","devs","filter","map","obj","createAdmins","getFakeUsersIds","regex","allUsers","getAll","fakeUserIds","user","test","emails","address","fakeUser","_id"],"mappings":"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","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\nimport { Roles } from 'meteor/alanning:roles';\n\nimport faker from 'faker/locale/fr';\n\nimport { USER_PASSWORD } from './fixtureConstants';\nimport UserService from '../api/users/server/UserService';\n\nexport const createUser = (email, role, password) => {\n  const userId = Accounts.createUser({\n    email,\n    password: password || USER_PASSWORD,\n  });\n  Roles.setUserRoles(userId, [role]);\n\n  return userId;\n};\n\nexport const createFakeUsers = (count, role, currentUserEmail = '') => {\n  const insertedUsers = [];\n  for (let i = 0; i < count; i += 1) {\n    const email = `${role}-${i + 1}@e-potek.ch`;\n    if (email !== currentUserEmail) {\n      const newUserId = createUser(email, role);\n\n      UserService.update({\n        userId: newUserId,\n        object: {\n          firstName: faker.name.firstName(),\n          lastName: faker.name.lastName(),\n        },\n      });\n      insertedUsers.push(newUserId);\n    }\n  }\n  return insertedUsers;\n};\n\nexport const addUser = ({ email, role, password = USER_PASSWORD, ...data }) => {\n  const newUserId = createUser(email, role, password);\n  UserService.update({\n    userId: newUserId,\n    object: {\n      ...data,\n      phoneNumbers: [faker.phone.phoneNumber()],\n      'emails.0.verified': true,\n    },\n  });\n  return newUserId;\n};\n\nexport const createDevs = (currentEmail) => {\n  const devs = [\n    {\n      email: 'florian@e-potek.ch',\n      firstName: 'Florian',\n      lastName: 'Bienefelt',\n    },\n    {\n      email: 'quentin@e-potek.ch',\n      firstName: 'Quentin',\n      lastName: 'Herzig',\n    },\n  ];\n  return devs\n    .filter(({ email }) => email !== currentEmail)\n    .map(obj => ({ ...obj, role: 'dev' }))\n    .map(addUser);\n};\n\nexport const createAdmins = () => {\n  const devs = [\n    {\n      email: 'lydia@e-potek.ch',\n      firstName: 'Lydia',\n      lastName: 'Abraha',\n    },\n    {\n      email: 'yannis@e-potek.ch',\n      firstName: 'Yannis',\n      lastName: 'Eggert',\n    },\n    {\n      email: 'jeanluc@e-potek.ch',\n      firstName: 'Jean-luc',\n      lastName: 'Kringel',\n    },\n  ];\n  return devs.map(obj => ({ ...obj, role: 'admin' })).map(addUser);\n};\n\nexport const getFakeUsersIds = () => {\n  const regex = /^(admin|dev|user)-[1-9]|10@e-potek.ch/;\n  const allUsers = UserService.getAll();\n  const fakeUserIds = allUsers\n    .filter(user => regex.test(user.emails[0].address))\n    .map(fakeUser => fakeUser._id);\n  return fakeUserIds;\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/userFixtures.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/fixtures/userFixtures.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  createUser: () => createUser,\n  createFakeUsers: () => createFakeUsers,\n  addUser: () => addUser,\n  createDevs: () => createDevs,\n  createAdmins: () => createAdmins,\n  getFakeUsersIds: () => getFakeUsersIds\n});\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nlet Roles;\nmodule.link(\"meteor/alanning:roles\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 1);\nlet faker;\nmodule.link(\"faker/locale/fr\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 2);\nlet USER_PASSWORD;\nmodule.link(\"./fixtureConstants\", {\n  USER_PASSWORD(v) {\n    USER_PASSWORD = v;\n  }\n\n}, 3);\nlet UserService;\nmodule.link(\"../api/users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 4);\n\nconst createUser = (email, role, password) => {\n  const userId = Accounts.createUser({\n    email,\n    password: password || USER_PASSWORD\n  });\n  Roles.setUserRoles(userId, [role]);\n  return userId;\n};\n\nconst createFakeUsers = (count, role, currentUserEmail = '') => {\n  const insertedUsers = [];\n\n  for (let i = 0; i < count; i += 1) {\n    const email = `${role}-${i + 1}@e-potek.ch`;\n\n    if (email !== currentUserEmail) {\n      const newUserId = createUser(email, role);\n      UserService.update({\n        userId: newUserId,\n        object: {\n          firstName: faker.name.firstName(),\n          lastName: faker.name.lastName()\n        }\n      });\n      insertedUsers.push(newUserId);\n    }\n  }\n\n  return insertedUsers;\n};\n\nconst addUser = (_ref) => {\n  let {\n    email,\n    role,\n    password = USER_PASSWORD\n  } = _ref,\n      data = (0, _objectWithoutProperties2.default)(_ref, [\"email\", \"role\", \"password\"]);\n  const newUserId = createUser(email, role, password);\n  UserService.update({\n    userId: newUserId,\n    object: (0, _objectSpread2.default)({}, data, {\n      phoneNumbers: [faker.phone.phoneNumber()],\n      'emails.0.verified': true\n    })\n  });\n  return newUserId;\n};\n\nconst createDevs = currentEmail => {\n  const devs = [{\n    email: 'florian@e-potek.ch',\n    firstName: 'Florian',\n    lastName: 'Bienefelt'\n  }, {\n    email: 'quentin@e-potek.ch',\n    firstName: 'Quentin',\n    lastName: 'Herzig'\n  }];\n  return devs.filter(({\n    email\n  }) => email !== currentEmail).map(obj => (0, _objectSpread2.default)({}, obj, {\n    role: 'dev'\n  })).map(addUser);\n};\n\nconst createAdmins = () => {\n  const devs = [{\n    email: 'lydia@e-potek.ch',\n    firstName: 'Lydia',\n    lastName: 'Abraha'\n  }, {\n    email: 'yannis@e-potek.ch',\n    firstName: 'Yannis',\n    lastName: 'Eggert'\n  }, {\n    email: 'jeanluc@e-potek.ch',\n    firstName: 'Jean-luc',\n    lastName: 'Kringel'\n  }];\n  return devs.map(obj => (0, _objectSpread2.default)({}, obj, {\n    role: 'admin'\n  })).map(addUser);\n};\n\nconst getFakeUsersIds = () => {\n  const regex = /^(admin|dev|user)-[1-9]|10@e-potek.ch/;\n  const allUsers = UserService.getAll();\n  const fakeUserIds = allUsers.filter(user => regex.test(user.emails[0].address)).map(fakeUser => fakeUser._id);\n  return fakeUserIds;\n};","map":{"version":3,"sources":["imports/core/fixtures/userFixtures.js"],"names":["Accounts","createUser","userId","password","USER_PASSWORD","Roles","createFakeUsers","currentUserEmail","insertedUsers","i","email","role","newUserId","UserService","object","firstName","faker","lastName","addUser","data","phoneNumbers","createDevs","currentEmail","devs","obj","createAdmins","getFakeUsersIds","regex","allUsers","fakeUserIds","user","fakeUser"],"mappings":"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","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\nimport { Roles } from 'meteor/alanning:roles';\n\nimport faker from 'faker/locale/fr';\n\nimport { USER_PASSWORD } from './fixtureConstants';\nimport UserService from '../api/users/server/UserService';\n\nexport const createUser = (email, role, password) => {\n  const userId = Accounts.createUser({\n    email,\n    password: password || USER_PASSWORD,\n  });\n  Roles.setUserRoles(userId, [role]);\n\n  return userId;\n};\n\nexport const createFakeUsers = (count, role, currentUserEmail = '') => {\n  const insertedUsers = [];\n  for (let i = 0; i < count; i += 1) {\n    const email = `${role}-${i + 1}@e-potek.ch`;\n    if (email !== currentUserEmail) {\n      const newUserId = createUser(email, role);\n\n      UserService.update({\n        userId: newUserId,\n        object: {\n          firstName: faker.name.firstName(),\n          lastName: faker.name.lastName(),\n        },\n      });\n      insertedUsers.push(newUserId);\n    }\n  }\n  return insertedUsers;\n};\n\nexport const addUser = ({ email, role, password = USER_PASSWORD, ...data }) => {\n  const newUserId = createUser(email, role, password);\n  UserService.update({\n    userId: newUserId,\n    object: {\n      ...data,\n      phoneNumbers: [faker.phone.phoneNumber()],\n      'emails.0.verified': true,\n    },\n  });\n  return newUserId;\n};\n\nexport const createDevs = (currentEmail) => {\n  const devs = [\n    {\n      email: 'florian@e-potek.ch',\n      firstName: 'Florian',\n      lastName: 'Bienefelt',\n    },\n    {\n      email: 'quentin@e-potek.ch',\n      firstName: 'Quentin',\n      lastName: 'Herzig',\n    },\n  ];\n  return devs\n    .filter(({ email }) => email !== currentEmail)\n    .map(obj => ({ ...obj, role: 'dev' }))\n    .map(addUser);\n};\n\nexport const createAdmins = () => {\n  const devs = [\n    {\n      email: 'lydia@e-potek.ch',\n      firstName: 'Lydia',\n      lastName: 'Abraha',\n    },\n    {\n      email: 'yannis@e-potek.ch',\n      firstName: 'Yannis',\n      lastName: 'Eggert',\n    },\n    {\n      email: 'jeanluc@e-potek.ch',\n      firstName: 'Jean-luc',\n      lastName: 'Kringel',\n    },\n  ];\n  return devs.map(obj => ({ ...obj, role: 'admin' })).map(addUser);\n};\n\nexport const getFakeUsersIds = () => {\n  const regex = /^(admin|dev|user)-[1-9]|10@e-potek.ch/;\n  const allUsers = UserService.getAll();\n  const fakeUserIds = allUsers\n    .filter(user => regex.test(user.emails[0].address))\n    .map(fakeUser => fakeUser._id);\n  return fakeUserIds;\n};\n"]},"sourceType":"script","hash":"d09c7870c2d8f3e5b110cf5147d0e03aa020af18"}
