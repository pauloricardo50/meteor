{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/organisations/organisations.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/organisations/organisations.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/organisations/organisations.js","inputSourceMap":{"version":3,"sources":["imports/core/api/organisations/organisations.js"],"names":["Mongo","SimpleSchema","address","percentageField","moneyField","documentsField","ORGANISATIONS_COLLECTION","ORGANISATION_TYPES","ORGANISATION_FEATURES","ORGANISATION_TAGS","Organisations","Collection","deny","insert","update","remove","allow","OrganisationSchema","name","type","String","uniforms","placeholder","unique","allowedValues","Object","values","displayEmpty","features","Array","optional","defaultValue","logo","contactIds","Boolean","tags","userLinks","commissionRates","documents","lenderRulesCount","Number","attachSchema"],"mappings":"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","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nimport SimpleSchema from 'simpl-schema';\n\nimport {\n  address,\n  percentageField,\n  moneyField,\n  documentsField,\n} from '../helpers/sharedSchemas';\nimport {\n  ORGANISATIONS_COLLECTION,\n  ORGANISATION_TYPES,\n  ORGANISATION_FEATURES,\n  ORGANISATION_TAGS,\n} from './organisationConstants';\n\n// console.trace();\n\nconst Organisations = new Mongo.Collection(ORGANISATIONS_COLLECTION);\n\nOrganisations.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nOrganisations.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nexport const OrganisationSchema = new SimpleSchema({\n  name: {\n    type: String,\n    uniforms: { placeholder: 'Cr√©dit Suisse' },\n    unique: true,\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(ORGANISATION_TYPES),\n    uniforms: { displayEmpty: false },\n  },\n  features: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: { placeholder: null },\n  },\n  'features.$': {\n    type: String,\n    allowedValues: Object.values(ORGANISATION_FEATURES),\n  },\n  logo: {\n    type: String,\n    optional: true,\n  },\n  ...address,\n  contactIds: { type: Array, defaultValue: [] },\n  'contactIds.$': Object,\n  'contactIds.$._id': { type: String, optional: true },\n  'contactIds.$.title': { type: String, optional: true },\n  'contactIds.$.useSameAddress': { type: Boolean, optional: true },\n  tags: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: { placeholder: null },\n  },\n  'tags.$': { type: String, allowedValues: Object.values(ORGANISATION_TAGS) },\n  userLinks: { type: Array, defaultValue: [] },\n  'userLinks.$': Object,\n  'userLinks.$._id': { type: String, optional: true },\n  'userLinks.$.title': { type: String, optional: true },\n  'userLinks.$.isMain': { type: Boolean, optional: true },\n  'userLinks.$.shareCustomers': { type: Boolean, optional: true },\n  commissionRates: { type: Array, defaultValue: [] },\n  'commissionRates.$': Object,\n  'commissionRates.$.rate': percentageField,\n  'commissionRates.$.threshold': moneyField,\n  documents: documentsField,\n  lenderRulesCount: { type: Number, optional: true },\n});\n\nOrganisations.attachSchema(OrganisationSchema);\nexport default Organisations;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/organisations/organisations.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/organisations/organisations.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  OrganisationSchema: () => OrganisationSchema\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet address, percentageField, moneyField, documentsField;\nmodule.link(\"../helpers/sharedSchemas\", {\n  address(v) {\n    address = v;\n  },\n\n  percentageField(v) {\n    percentageField = v;\n  },\n\n  moneyField(v) {\n    moneyField = v;\n  },\n\n  documentsField(v) {\n    documentsField = v;\n  }\n\n}, 2);\nlet ORGANISATIONS_COLLECTION, ORGANISATION_TYPES, ORGANISATION_FEATURES, ORGANISATION_TAGS;\nmodule.link(\"./organisationConstants\", {\n  ORGANISATIONS_COLLECTION(v) {\n    ORGANISATIONS_COLLECTION = v;\n  },\n\n  ORGANISATION_TYPES(v) {\n    ORGANISATION_TYPES = v;\n  },\n\n  ORGANISATION_FEATURES(v) {\n    ORGANISATION_FEATURES = v;\n  },\n\n  ORGANISATION_TAGS(v) {\n    ORGANISATION_TAGS = v;\n  }\n\n}, 3);\n// console.trace();\nconst Organisations = new Mongo.Collection(ORGANISATIONS_COLLECTION);\nOrganisations.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\nOrganisations.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\nconst OrganisationSchema = new SimpleSchema((0, _objectSpread2.default)({\n  name: {\n    type: String,\n    uniforms: {\n      placeholder: 'Cr√©dit Suisse'\n    },\n    unique: true\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(ORGANISATION_TYPES),\n    uniforms: {\n      displayEmpty: false\n    }\n  },\n  features: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: {\n      placeholder: null\n    }\n  },\n  'features.$': {\n    type: String,\n    allowedValues: Object.values(ORGANISATION_FEATURES)\n  },\n  logo: {\n    type: String,\n    optional: true\n  }\n}, address, {\n  contactIds: {\n    type: Array,\n    defaultValue: []\n  },\n  'contactIds.$': Object,\n  'contactIds.$._id': {\n    type: String,\n    optional: true\n  },\n  'contactIds.$.title': {\n    type: String,\n    optional: true\n  },\n  'contactIds.$.useSameAddress': {\n    type: Boolean,\n    optional: true\n  },\n  tags: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: {\n      placeholder: null\n    }\n  },\n  'tags.$': {\n    type: String,\n    allowedValues: Object.values(ORGANISATION_TAGS)\n  },\n  userLinks: {\n    type: Array,\n    defaultValue: []\n  },\n  'userLinks.$': Object,\n  'userLinks.$._id': {\n    type: String,\n    optional: true\n  },\n  'userLinks.$.title': {\n    type: String,\n    optional: true\n  },\n  'userLinks.$.isMain': {\n    type: Boolean,\n    optional: true\n  },\n  'userLinks.$.shareCustomers': {\n    type: Boolean,\n    optional: true\n  },\n  commissionRates: {\n    type: Array,\n    defaultValue: []\n  },\n  'commissionRates.$': Object,\n  'commissionRates.$.rate': percentageField,\n  'commissionRates.$.threshold': moneyField,\n  documents: documentsField,\n  lenderRulesCount: {\n    type: Number,\n    optional: true\n  }\n}));\nOrganisations.attachSchema(OrganisationSchema);\nmodule.exportDefault(Organisations);","map":{"version":3,"sources":["imports/core/api/organisations/organisations.js"],"names":["Organisations","Mongo","insert","update","remove","OrganisationSchema","name","type","uniforms","placeholder","unique","allowedValues","Object","displayEmpty","features","optional","defaultValue","logo","contactIds","tags","userLinks","commissionRates","documents","lenderRulesCount"],"mappings":"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","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nimport SimpleSchema from 'simpl-schema';\n\nimport {\n  address,\n  percentageField,\n  moneyField,\n  documentsField,\n} from '../helpers/sharedSchemas';\nimport {\n  ORGANISATIONS_COLLECTION,\n  ORGANISATION_TYPES,\n  ORGANISATION_FEATURES,\n  ORGANISATION_TAGS,\n} from './organisationConstants';\n\n// console.trace();\n\nconst Organisations = new Mongo.Collection(ORGANISATIONS_COLLECTION);\n\nOrganisations.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true,\n});\n\nOrganisations.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false,\n});\n\nexport const OrganisationSchema = new SimpleSchema({\n  name: {\n    type: String,\n    uniforms: { placeholder: 'Cr√©dit Suisse' },\n    unique: true,\n  },\n  type: {\n    type: String,\n    allowedValues: Object.values(ORGANISATION_TYPES),\n    uniforms: { displayEmpty: false },\n  },\n  features: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: { placeholder: null },\n  },\n  'features.$': {\n    type: String,\n    allowedValues: Object.values(ORGANISATION_FEATURES),\n  },\n  logo: {\n    type: String,\n    optional: true,\n  },\n  ...address,\n  contactIds: { type: Array, defaultValue: [] },\n  'contactIds.$': Object,\n  'contactIds.$._id': { type: String, optional: true },\n  'contactIds.$.title': { type: String, optional: true },\n  'contactIds.$.useSameAddress': { type: Boolean, optional: true },\n  tags: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: { placeholder: null },\n  },\n  'tags.$': { type: String, allowedValues: Object.values(ORGANISATION_TAGS) },\n  userLinks: { type: Array, defaultValue: [] },\n  'userLinks.$': Object,\n  'userLinks.$._id': { type: String, optional: true },\n  'userLinks.$.title': { type: String, optional: true },\n  'userLinks.$.isMain': { type: Boolean, optional: true },\n  'userLinks.$.shareCustomers': { type: Boolean, optional: true },\n  commissionRates: { type: Array, defaultValue: [] },\n  'commissionRates.$': Object,\n  'commissionRates.$.rate': percentageField,\n  'commissionRates.$.threshold': moneyField,\n  documents: documentsField,\n  lenderRulesCount: { type: Number, optional: true },\n});\n\nOrganisations.attachSchema(OrganisationSchema);\nexport default Organisations;\n"]},"sourceType":"script","hash":"52daed38df57c2820d225659382e04e3bd9966e9"}
