{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/email/server/mandrill.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/email/server/mandrill.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/email/server/mandrill.js","inputSourceMap":{"version":3,"sources":["imports/core/api/email/server/mandrill.js"],"names":["Mandrill","Meteor","logError","getEmailFooter","isEmailTestEnv","skipEmails","setupMandrill","key","settings","mandrill","MANDRILL_API_KEY_TEST","MANDRILL_API_KEY","config","username","MANDRILL_LOGIN","port","host","getSimpleMandrillTemplate","templateName","footerType","allowUnsubscribe","variables","template_name","template_content","name","content","merge_vars","getMandrillTemplate","recipientAddress","recipientName","senderAddress","senderName","subject","sendAt","templateContent","replyTo","bccAddress","message","from_email","from_name","to","email","global_merge_vars","headers","bcc_address","send_at","toISOString","undefined","renderMandrillTemplate","mandrillTemplate","templates","render","sendMandrillTemplate","Promise","resolve","reject","messages","sendTemplate","error","result","run","JSON","parse","stringify","Object","getOwnPropertyNames","additionalData","data","getDate30DaysAgo","date","Date","setDate","getDate","dateString","split","getEmailsForAddress","search","query","date_from","statusCode"],"mappings":"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","sourcesContent":["import { Mandrill } from 'meteor/wylio:mandrill';\nimport { Meteor } from 'meteor/meteor';\n\nimport { logError } from 'core/api/methods/index';\nimport { getEmailFooter } from './emailHelpers';\nimport { isEmailTestEnv, skipEmails } from './EmailService';\n\nexport const setupMandrill = () => {\n  let key = '';\n  if (isEmailTestEnv) {\n    key = Meteor.settings.mandrill.MANDRILL_API_KEY_TEST;\n  } else {\n    key = Meteor.settings.mandrill.MANDRILL_API_KEY;\n  }\n\n  Mandrill.config({\n    username: Meteor.settings.mandrill.MANDRILL_LOGIN, // the email address you log into Mandrill with. Only used to set MAIL_URL.\n    key, // get your Mandrill key from https://mandrillapp.com/settings/index\n    port: 587, // defaults to 465 for SMTP over TLS\n    host: 'smtps.mandrillapp.com', // the SMTP host\n    // baseUrl: 'https://mandrillapp.com/api/1.0/'  // update this in case Mandrill changes its API endpoint URL or version\n  });\n};\n\n// Used for Meteor Accounts emails\nexport const getSimpleMandrillTemplate = ({\n  templateName,\n  footerType,\n  allowUnsubscribe,\n  variables,\n}) => ({\n  template_name: templateName,\n  template_content: [\n    { name: 'footer', content: getEmailFooter(footerType, allowUnsubscribe) },\n  ],\n  merge_vars: variables,\n});\n\n// Used for all other emails\nexport const getMandrillTemplate = ({\n  templateName,\n  footerType,\n  allowUnsubscribe,\n  variables,\n  recipientAddress,\n  recipientName,\n  senderAddress,\n  senderName,\n  subject,\n  sendAt,\n  templateContent = [],\n  replyTo,\n  bccAddress,\n}) => ({\n  template_name: templateName,\n  template_content: [\n    { name: 'footer', content: getEmailFooter(footerType, allowUnsubscribe) },\n    ...templateContent,\n  ],\n  message: {\n    from_email: senderAddress,\n    from_name: senderName,\n    subject,\n    to: [{ email: recipientAddress, name: recipientName }],\n    global_merge_vars: variables,\n    headers: { 'Reply-To': replyTo || senderAddress },\n    bcc_address: bccAddress,\n  },\n  send_at: sendAt ? sendAt.toISOString() : undefined,\n});\n\nexport const renderMandrillTemplate = mandrillTemplate =>\n  Mandrill.templates.render(mandrillTemplate);\n\nexport const sendMandrillTemplate = (mandrillTemplate) => {\n  if (skipEmails) {\n    return Promise.resolve();\n  }\n\n  return new Promise((resolve, reject) => {\n    Mandrill.messages.sendTemplate(mandrillTemplate, (error, result) => {\n      if (error) {\n        logError.run({\n          error: JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error))),\n          additionalData: ['Mandrill error'],\n        });\n        reject(error);\n      }\n      resolve(result.data[0]);\n    });\n  });\n};\n\nconst getDate30DaysAgo = () => {\n  const date = new Date();\n  date.setDate(date.getDate() - 30);\n  const dateString = date.toISOString().split('T')[0];\n  return dateString;\n};\n\nexport const getEmailsForAddress = email =>\n  new Promise((resolve, reject) =>\n    Mandrill.messages.search(\n      { query: `email:${email}`, date_from: getDate30DaysAgo() },\n      (error, result) => {\n        if (error) {\n          logError.run({\n            error: JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error))),\n            additionalData: ['Mandrill error'],\n          });\n          resolve(error);\n        } else if (result.statusCode !== 200) {\n          resolve(result);\n        }\n        resolve(result.data);\n      },\n    ));\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/email/server/mandrill.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/email/server/mandrill.js"}},"code":"module.export({\n  setupMandrill: () => setupMandrill,\n  getSimpleMandrillTemplate: () => getSimpleMandrillTemplate,\n  getMandrillTemplate: () => getMandrillTemplate,\n  renderMandrillTemplate: () => renderMandrillTemplate,\n  sendMandrillTemplate: () => sendMandrillTemplate,\n  getEmailsForAddress: () => getEmailsForAddress\n});\nlet Mandrill;\nmodule.link(\"meteor/wylio:mandrill\", {\n  Mandrill(v) {\n    Mandrill = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet logError;\nmodule.link(\"../../methods\", {\n  logError(v) {\n    logError = v;\n  }\n\n}, 2);\nlet getEmailFooter;\nmodule.link(\"./emailHelpers\", {\n  getEmailFooter(v) {\n    getEmailFooter = v;\n  }\n\n}, 3);\nlet isEmailTestEnv, skipEmails;\nmodule.link(\"./EmailService\", {\n  isEmailTestEnv(v) {\n    isEmailTestEnv = v;\n  },\n\n  skipEmails(v) {\n    skipEmails = v;\n  }\n\n}, 4);\n\nconst setupMandrill = () => {\n  let key = '';\n\n  if (isEmailTestEnv) {\n    key = Meteor.settings.mandrill.MANDRILL_API_KEY_TEST;\n  } else {\n    key = Meteor.settings.mandrill.MANDRILL_API_KEY;\n  }\n\n  Mandrill.config({\n    username: Meteor.settings.mandrill.MANDRILL_LOGIN,\n    // the email address you log into Mandrill with. Only used to set MAIL_URL.\n    key,\n    // get your Mandrill key from https://mandrillapp.com/settings/index\n    port: 587,\n    // defaults to 465 for SMTP over TLS\n    host: 'smtps.mandrillapp.com' // the SMTP host\n    // baseUrl: 'https://mandrillapp.com/api/1.0/'  // update this in case Mandrill changes its API endpoint URL or version\n\n  });\n};\n\nconst getSimpleMandrillTemplate = ({\n  templateName,\n  footerType,\n  allowUnsubscribe,\n  variables\n}) => ({\n  template_name: templateName,\n  template_content: [{\n    name: 'footer',\n    content: getEmailFooter(footerType, allowUnsubscribe)\n  }],\n  merge_vars: variables\n});\n\nconst getMandrillTemplate = ({\n  templateName,\n  footerType,\n  allowUnsubscribe,\n  variables,\n  recipientAddress,\n  recipientName,\n  senderAddress,\n  senderName,\n  subject,\n  sendAt,\n  templateContent = [],\n  replyTo,\n  bccAddress\n}) => ({\n  template_name: templateName,\n  template_content: [{\n    name: 'footer',\n    content: getEmailFooter(footerType, allowUnsubscribe)\n  }, ...templateContent],\n  message: {\n    from_email: senderAddress,\n    from_name: senderName,\n    subject,\n    to: [{\n      email: recipientAddress,\n      name: recipientName\n    }],\n    global_merge_vars: variables,\n    headers: {\n      'Reply-To': replyTo || senderAddress\n    },\n    bcc_address: bccAddress\n  },\n  send_at: sendAt ? sendAt.toISOString() : undefined\n});\n\nconst renderMandrillTemplate = mandrillTemplate => Mandrill.templates.render(mandrillTemplate);\n\nconst sendMandrillTemplate = mandrillTemplate => {\n  if (skipEmails) {\n    return Promise.resolve();\n  }\n\n  return new Promise((resolve, reject) => {\n    Mandrill.messages.sendTemplate(mandrillTemplate, (error, result) => {\n      if (error) {\n        logError.run({\n          error: JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error))),\n          additionalData: ['Mandrill error']\n        });\n        reject(error);\n      }\n\n      resolve(result.data[0]);\n    });\n  });\n};\n\nconst getDate30DaysAgo = () => {\n  const date = new Date();\n  date.setDate(date.getDate() - 30);\n  const dateString = date.toISOString().split('T')[0];\n  return dateString;\n};\n\nconst getEmailsForAddress = email => new Promise((resolve, reject) => Mandrill.messages.search({\n  query: `email:${email}`,\n  date_from: getDate30DaysAgo()\n}, (error, result) => {\n  if (error) {\n    logError.run({\n      error: JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error))),\n      additionalData: ['Mandrill error']\n    });\n    resolve(error);\n  } else if (result.statusCode !== 200) {\n    resolve(result);\n  }\n\n  resolve(result.data);\n}));","map":{"version":3,"sources":["imports/core/api/email/server/mandrill.js"],"names":["Mandrill","setupMandrill","key","Meteor","username","port","host","getSimpleMandrillTemplate","variables","template_name","template_content","name","content","getEmailFooter","merge_vars","getMandrillTemplate","templateContent","bccAddress","message","from_email","from_name","to","email","recipientName","global_merge_vars","headers","replyTo","senderAddress","bcc_address","send_at","sendAt","undefined","renderMandrillTemplate","mandrillTemplate","sendMandrillTemplate","Promise","logError","error","JSON","Object","additionalData","reject","resolve","result","getDate30DaysAgo","date","dateString","getEmailsForAddress","query","date_from"],"mappings":"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","sourcesContent":["import { Mandrill } from 'meteor/wylio:mandrill';\nimport { Meteor } from 'meteor/meteor';\n\nimport { logError } from 'core/api/methods/index';\nimport { getEmailFooter } from './emailHelpers';\nimport { isEmailTestEnv, skipEmails } from './EmailService';\n\nexport const setupMandrill = () => {\n  let key = '';\n  if (isEmailTestEnv) {\n    key = Meteor.settings.mandrill.MANDRILL_API_KEY_TEST;\n  } else {\n    key = Meteor.settings.mandrill.MANDRILL_API_KEY;\n  }\n\n  Mandrill.config({\n    username: Meteor.settings.mandrill.MANDRILL_LOGIN, // the email address you log into Mandrill with. Only used to set MAIL_URL.\n    key, // get your Mandrill key from https://mandrillapp.com/settings/index\n    port: 587, // defaults to 465 for SMTP over TLS\n    host: 'smtps.mandrillapp.com', // the SMTP host\n    // baseUrl: 'https://mandrillapp.com/api/1.0/'  // update this in case Mandrill changes its API endpoint URL or version\n  });\n};\n\n// Used for Meteor Accounts emails\nexport const getSimpleMandrillTemplate = ({\n  templateName,\n  footerType,\n  allowUnsubscribe,\n  variables,\n}) => ({\n  template_name: templateName,\n  template_content: [\n    { name: 'footer', content: getEmailFooter(footerType, allowUnsubscribe) },\n  ],\n  merge_vars: variables,\n});\n\n// Used for all other emails\nexport const getMandrillTemplate = ({\n  templateName,\n  footerType,\n  allowUnsubscribe,\n  variables,\n  recipientAddress,\n  recipientName,\n  senderAddress,\n  senderName,\n  subject,\n  sendAt,\n  templateContent = [],\n  replyTo,\n  bccAddress,\n}) => ({\n  template_name: templateName,\n  template_content: [\n    { name: 'footer', content: getEmailFooter(footerType, allowUnsubscribe) },\n    ...templateContent,\n  ],\n  message: {\n    from_email: senderAddress,\n    from_name: senderName,\n    subject,\n    to: [{ email: recipientAddress, name: recipientName }],\n    global_merge_vars: variables,\n    headers: { 'Reply-To': replyTo || senderAddress },\n    bcc_address: bccAddress,\n  },\n  send_at: sendAt ? sendAt.toISOString() : undefined,\n});\n\nexport const renderMandrillTemplate = mandrillTemplate =>\n  Mandrill.templates.render(mandrillTemplate);\n\nexport const sendMandrillTemplate = (mandrillTemplate) => {\n  if (skipEmails) {\n    return Promise.resolve();\n  }\n\n  return new Promise((resolve, reject) => {\n    Mandrill.messages.sendTemplate(mandrillTemplate, (error, result) => {\n      if (error) {\n        logError.run({\n          error: JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error))),\n          additionalData: ['Mandrill error'],\n        });\n        reject(error);\n      }\n      resolve(result.data[0]);\n    });\n  });\n};\n\nconst getDate30DaysAgo = () => {\n  const date = new Date();\n  date.setDate(date.getDate() - 30);\n  const dateString = date.toISOString().split('T')[0];\n  return dateString;\n};\n\nexport const getEmailsForAddress = email =>\n  new Promise((resolve, reject) =>\n    Mandrill.messages.search(\n      { query: `email:${email}`, date_from: getDate30DaysAgo() },\n      (error, result) => {\n        if (error) {\n          logError.run({\n            error: JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error))),\n            additionalData: ['Mandrill error'],\n          });\n          resolve(error);\n        } else if (result.statusCode !== 200) {\n          resolve(result);\n        }\n        resolve(result.data);\n      },\n    ));\n"]},"sourceType":"script","hash":"5ec4101693bd6b11b30a356509d3b31af488160b"}
