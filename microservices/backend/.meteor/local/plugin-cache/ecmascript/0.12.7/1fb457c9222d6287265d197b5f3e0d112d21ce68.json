{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/tooltips.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/arrays/tooltips.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/tooltips.js","inputSourceMap":{"version":3,"sources":["imports/core/arrays/tooltips.js"],"names":["TOOLTIP_LISTS","GENERAL","OFFER_TABLE","DEV","WIDGET1","generalTooltips","finma","id","double","widget1Tooltips","revenus","bonus","gratification","emprunteurs","emprunteur","offerTableTooltips","montant","libor","amortissement","expertise","conditions","devTooltips","match1","match2","tooltips","list","Error","tooltipsById","listId","ids","split","length","join"],"mappings":"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","sourcesContent":["export const TOOLTIP_LISTS = {\n  GENERAL: 'GENERAL',\n  OFFER_TABLE: 'OFFER_TABLE',\n  DEV: 'DEV',\n  WIDGET1: 'WIDGET1',\n};\n\n// Write the keys in lowercase\n// If `double` is true, it means there need to be 2 strings for the\n// \"Learn More\" part.\nexport const generalTooltips = {\n  finma: { id: 'finma', double: true },\n\n  \"taux d'effort\": { id: 'incomeRatio', double: true },\n  \"taux d'avance\": { id: 'borrowRatio', double: true },\n};\n\nexport const widget1Tooltips = {\n  'plan financier': { id: 'financialPlan', double: true },\n  'structure de financement': { id: 'financialPlan', double: true },\n\n  'charges / revenus': { id: 'incomeRatio', double: true },\n  \"taux d'effort\": { id: 'incomeRatio', double: true },\n\n  'revenus annuels bruts': { id: 'income', double: true },\n  'salaire brut': { id: 'income', double: true },\n  revenus: { id: 'income', double: true },\n\n  bonus: { id: 'bonus', double: true },\n  gratification: { id: 'bonus', double: true },\n\n  emprunteurs: { id: 'borrower' },\n  emprunteur: { id: 'borrower' },\n\n  finma: { id: 'finma', double: true },\n\n  'prêteurs intéressés': { id: 'interestedLenders' },\n\n  \"prêt / prix d'achat\": { id: 'borrowRatio', double: true },\n  \"taux d'avance\": { id: 'borrowRatio', double: true },\n};\n\nexport const offerTableTooltips = {\n  montant: { id: 'offerTable.amount' },\n  libor: { id: 'offerTable.libor' },\n  '2 ans': { id: 'offerTable.2' },\n  '5 ans': { id: 'offerTable.5' },\n  '10 ans': { id: 'offerTable.10' },\n  amortissement: { id: 'offerTable.amortization' },\n  expertise: { id: 'offerTable.expertise' },\n  conditions: { id: 'offerTable.conditions' },\n};\n\nexport const devTooltips = {\n  match1: { id: 'id1' },\n  match2: { id: 'id2' },\n};\n\nexport const tooltips = (list) => {\n  switch (list) {\n  case TOOLTIP_LISTS.GENERAL:\n    return generalTooltips;\n  case TOOLTIP_LISTS.OFFER_TABLE:\n    return offerTableTooltips;\n  case TOOLTIP_LISTS.DEV:\n    return devTooltips;\n  case TOOLTIP_LISTS.WIDGET1:\n    return widget1Tooltips;\n  default:\n    throw new Error(`Unknown tooltip list: \"${list}\"`);\n  }\n};\n\nexport const tooltipsById = (id) => {\n  if (typeof id !== 'string') {\n    throw new Error('not a string');\n  }\n  const [listId, ...ids] = id.split('.');\n\n  if (ids.length < 1 || ids[0] === '') {\n    throw Error('Wrong id given for tooltips, requires 2 strings separated by a .');\n  }\n\n  const list = tooltips(listId);\n\n  return list[ids.join('.')];\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/tooltips.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/arrays/tooltips.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nmodule.export({\n  TOOLTIP_LISTS: function () {\n    return TOOLTIP_LISTS;\n  },\n  generalTooltips: function () {\n    return generalTooltips;\n  },\n  widget1Tooltips: function () {\n    return widget1Tooltips;\n  },\n  offerTableTooltips: function () {\n    return offerTableTooltips;\n  },\n  devTooltips: function () {\n    return devTooltips;\n  },\n  tooltips: function () {\n    return tooltips;\n  },\n  tooltipsById: function () {\n    return tooltipsById;\n  }\n});\nvar TOOLTIP_LISTS = {\n  GENERAL: 'GENERAL',\n  OFFER_TABLE: 'OFFER_TABLE',\n  DEV: 'DEV',\n  WIDGET1: 'WIDGET1'\n};\nvar generalTooltips = {\n  finma: {\n    id: 'finma',\n    \"double\": true\n  },\n  \"taux d'effort\": {\n    id: 'incomeRatio',\n    \"double\": true\n  },\n  \"taux d'avance\": {\n    id: 'borrowRatio',\n    \"double\": true\n  }\n};\nvar widget1Tooltips = {\n  'plan financier': {\n    id: 'financialPlan',\n    \"double\": true\n  },\n  'structure de financement': {\n    id: 'financialPlan',\n    \"double\": true\n  },\n  'charges / revenus': {\n    id: 'incomeRatio',\n    \"double\": true\n  },\n  \"taux d'effort\": {\n    id: 'incomeRatio',\n    \"double\": true\n  },\n  'revenus annuels bruts': {\n    id: 'income',\n    \"double\": true\n  },\n  'salaire brut': {\n    id: 'income',\n    \"double\": true\n  },\n  revenus: {\n    id: 'income',\n    \"double\": true\n  },\n  bonus: {\n    id: 'bonus',\n    \"double\": true\n  },\n  gratification: {\n    id: 'bonus',\n    \"double\": true\n  },\n  emprunteurs: {\n    id: 'borrower'\n  },\n  emprunteur: {\n    id: 'borrower'\n  },\n  finma: {\n    id: 'finma',\n    \"double\": true\n  },\n  'prêteurs intéressés': {\n    id: 'interestedLenders'\n  },\n  \"prêt / prix d'achat\": {\n    id: 'borrowRatio',\n    \"double\": true\n  },\n  \"taux d'avance\": {\n    id: 'borrowRatio',\n    \"double\": true\n  }\n};\nvar offerTableTooltips = {\n  montant: {\n    id: 'offerTable.amount'\n  },\n  libor: {\n    id: 'offerTable.libor'\n  },\n  '2 ans': {\n    id: 'offerTable.2'\n  },\n  '5 ans': {\n    id: 'offerTable.5'\n  },\n  '10 ans': {\n    id: 'offerTable.10'\n  },\n  amortissement: {\n    id: 'offerTable.amortization'\n  },\n  expertise: {\n    id: 'offerTable.expertise'\n  },\n  conditions: {\n    id: 'offerTable.conditions'\n  }\n};\nvar devTooltips = {\n  match1: {\n    id: 'id1'\n  },\n  match2: {\n    id: 'id2'\n  }\n};\n\nvar tooltips = function (list) {\n  switch (list) {\n    case TOOLTIP_LISTS.GENERAL:\n      return generalTooltips;\n\n    case TOOLTIP_LISTS.OFFER_TABLE:\n      return offerTableTooltips;\n\n    case TOOLTIP_LISTS.DEV:\n      return devTooltips;\n\n    case TOOLTIP_LISTS.WIDGET1:\n      return widget1Tooltips;\n\n    default:\n      throw new Error(\"Unknown tooltip list: \\\"\" + list + \"\\\"\");\n  }\n};\n\nvar tooltipsById = function (id) {\n  if (typeof id !== 'string') {\n    throw new Error('not a string');\n  }\n\n  var _id$split = id.split('.'),\n      _id$split2 = (0, _toArray2.default)(_id$split),\n      listId = _id$split2[0],\n      ids = _id$split2.slice(1);\n\n  if (ids.length < 1 || ids[0] === '') {\n    throw Error('Wrong id given for tooltips, requires 2 strings separated by a .');\n  }\n\n  var list = tooltips(listId);\n  return list[ids.join('.')];\n};","map":{"version":3,"sources":["imports/core/arrays/tooltips.js"],"names":["TOOLTIP_LISTS","GENERAL","OFFER_TABLE","DEV","WIDGET1","generalTooltips","finma","id","double","widget1Tooltips","revenus","bonus","gratification","emprunteurs","emprunteur","offerTableTooltips","montant","libor","amortissement","expertise","conditions","devTooltips","match1","match2","tooltips","list","tooltipsById","ids","Error"],"mappings":"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","sourcesContent":["export const TOOLTIP_LISTS = {\n  GENERAL: 'GENERAL',\n  OFFER_TABLE: 'OFFER_TABLE',\n  DEV: 'DEV',\n  WIDGET1: 'WIDGET1',\n};\n\n// Write the keys in lowercase\n// If `double` is true, it means there need to be 2 strings for the\n// \"Learn More\" part.\nexport const generalTooltips = {\n  finma: { id: 'finma', double: true },\n\n  \"taux d'effort\": { id: 'incomeRatio', double: true },\n  \"taux d'avance\": { id: 'borrowRatio', double: true },\n};\n\nexport const widget1Tooltips = {\n  'plan financier': { id: 'financialPlan', double: true },\n  'structure de financement': { id: 'financialPlan', double: true },\n\n  'charges / revenus': { id: 'incomeRatio', double: true },\n  \"taux d'effort\": { id: 'incomeRatio', double: true },\n\n  'revenus annuels bruts': { id: 'income', double: true },\n  'salaire brut': { id: 'income', double: true },\n  revenus: { id: 'income', double: true },\n\n  bonus: { id: 'bonus', double: true },\n  gratification: { id: 'bonus', double: true },\n\n  emprunteurs: { id: 'borrower' },\n  emprunteur: { id: 'borrower' },\n\n  finma: { id: 'finma', double: true },\n\n  'prêteurs intéressés': { id: 'interestedLenders' },\n\n  \"prêt / prix d'achat\": { id: 'borrowRatio', double: true },\n  \"taux d'avance\": { id: 'borrowRatio', double: true },\n};\n\nexport const offerTableTooltips = {\n  montant: { id: 'offerTable.amount' },\n  libor: { id: 'offerTable.libor' },\n  '2 ans': { id: 'offerTable.2' },\n  '5 ans': { id: 'offerTable.5' },\n  '10 ans': { id: 'offerTable.10' },\n  amortissement: { id: 'offerTable.amortization' },\n  expertise: { id: 'offerTable.expertise' },\n  conditions: { id: 'offerTable.conditions' },\n};\n\nexport const devTooltips = {\n  match1: { id: 'id1' },\n  match2: { id: 'id2' },\n};\n\nexport const tooltips = (list) => {\n  switch (list) {\n  case TOOLTIP_LISTS.GENERAL:\n    return generalTooltips;\n  case TOOLTIP_LISTS.OFFER_TABLE:\n    return offerTableTooltips;\n  case TOOLTIP_LISTS.DEV:\n    return devTooltips;\n  case TOOLTIP_LISTS.WIDGET1:\n    return widget1Tooltips;\n  default:\n    throw new Error(`Unknown tooltip list: \"${list}\"`);\n  }\n};\n\nexport const tooltipsById = (id) => {\n  if (typeof id !== 'string') {\n    throw new Error('not a string');\n  }\n  const [listId, ...ids] = id.split('.');\n\n  if (ids.length < 1 || ids[0] === '') {\n    throw Error('Wrong id given for tooltips, requires 2 strings separated by a .');\n  }\n\n  const list = tooltips(listId);\n\n  return list[ids.join('.')];\n};\n"]},"sourceType":"script","hash":"1fb457c9222d6287265d197b5f3e0d112d21ce68"}
