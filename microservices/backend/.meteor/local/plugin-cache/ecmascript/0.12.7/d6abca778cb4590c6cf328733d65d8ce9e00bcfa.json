{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/lenders/server/LenderService.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/lenders/server/LenderService.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/lenders/server/LenderService.js","inputSourceMap":{"version":3,"sources":["imports/core/api/lenders/server/LenderService.js"],"names":["Meteor","Lenders","CollectionService","OrganisationService","LenderService","constructor","insert","lender","contactId","organisationId","loanId","data","existingLender","fetchOne","$filters","organisationLink","loanLink","Error","lenderId","addLink","id","linkName","linkId","contacts","_id","length","linkOrganisationAndContact","removeLink","remove"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AAEA,OAAOC,OAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,mBAAP;;AAEA,MAAMC,aAAN,SAA4BF,iBAA5B,CAA8C;AAC5CG,EAAAA,WAAW,GAAG;AACZ,UAAMJ,OAAN;AACD;;AAEDK,EAAAA,MAAM,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA;AAArB,GAAD,EAAwC;AAC5C,UAAM;AAAEC,MAAAA,MAAF;AAAU,SAAGC;AAAb,QAAsBJ,MAA5B;AAEA,UAAMK,cAAc,GAAG,KAAKC,QAAL,CAAc;AACnCC,MAAAA,QAAQ,EAAE;AACR,wBAAgBJ,MADR;AAER,gCAAwBD;AAFhB,OADyB;AAKnCM,MAAAA,gBAAgB,EAAE,CALiB;AAMnCC,MAAAA,QAAQ,EAAE;AANyB,KAAd,CAAvB;;AASA,QAAIJ,cAAJ,EAAoB;AAClB,YAAM,IAAIZ,MAAM,CAACiB,KAAX,CAAiB,yCAAjB,CAAN;AACD;;AAED,UAAMC,QAAQ,GAAG,MAAMZ,MAAN,CAAaK,IAAb,CAAjB;AACA,SAAKQ,OAAL,CAAa;AAAEC,MAAAA,EAAE,EAAEF,QAAN;AAAgBG,MAAAA,QAAQ,EAAE,MAA1B;AAAkCC,MAAAA,MAAM,EAAEZ;AAA1C,KAAb,EAjB4C,CAmB5C;;AACA,QAAI,CAACF,SAAD,IAAcC,cAAlB,EAAkC;AAChC,YAAM;AAAEc,QAAAA;AAAF,UAAepB,mBAAmB,CAACU,QAApB,CAA6B;AAChDC,QAAAA,QAAQ,EAAE;AAAEU,UAAAA,GAAG,EAAEf;AAAP,SADsC;AAEhDc,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP;AAFsC,OAA7B,CAArB;;AAKA,UAAID,QAAQ,IAAIA,QAAQ,CAACE,MAAT,GAAkB,CAAlC,EAAqC;AACnCjB,QAAAA,SAAS,GAAGe,QAAQ,CAAC,CAAD,CAAR,CAAYC,GAAxB;AACD;AACF;;AAED,SAAKE,0BAAL,CAAgC;AAAER,MAAAA,QAAF;AAAYT,MAAAA,cAAZ;AAA4BD,MAAAA;AAA5B,KAAhC;AACA,WAAOU,QAAP;AACD;;AAEDQ,EAAAA,0BAA0B,CAAC;AAAER,IAAAA,QAAF;AAAYT,IAAAA,cAAZ;AAA4BD,IAAAA;AAA5B,GAAD,EAA0C;AAClE,QAAIC,cAAJ,EAAoB;AAClB,WAAKU,OAAL,CAAa;AACXC,QAAAA,EAAE,EAAEF,QADO;AAEXG,QAAAA,QAAQ,EAAE,cAFC;AAGXC,QAAAA,MAAM,EAAEb;AAHG,OAAb;AAKD;;AACD,QAAID,SAAJ,EAAe;AACb,WAAKW,OAAL,CAAa;AACXC,QAAAA,EAAE,EAAEF,QADO;AAEXG,QAAAA,QAAQ,EAAE,SAFC;AAGXC,QAAAA,MAAM,EAAEd;AAHG,OAAb;AAKD,KAND,MAMO;AACL,WAAKmB,UAAL,CAAgB;AAAEP,QAAAA,EAAE,EAAEF,QAAN;AAAgBG,QAAAA,QAAQ,EAAE;AAA1B,OAAhB;AACD;AACF;;AAEDO,EAAAA,MAAM,CAAC;AAAEV,IAAAA;AAAF,GAAD,EAAe;AACnB,UAAMU,MAAN,CAAaV,QAAb;AACD;;AA7D2C;;AAgE9C,eAAe,IAAId,aAAJ,EAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport Lenders from '../lenders';\nimport CollectionService from '../../helpers/CollectionService';\nimport OrganisationService from '../../organisations/server/OrganisationService';\n\nclass LenderService extends CollectionService {\n  constructor() {\n    super(Lenders);\n  }\n\n  insert({ lender, contactId, organisationId }) {\n    const { loanId, ...data } = lender;\n\n    const existingLender = this.fetchOne({\n      $filters: {\n        'loanLink._id': loanId,\n        'organisationLink._id': organisationId,\n      },\n      organisationLink: 1,\n      loanLink: 1,\n    });\n\n    if (existingLender) {\n      throw new Meteor.Error('Peut pas ajouter le même prêteur 2 fois');\n    }\n\n    const lenderId = super.insert(data);\n    this.addLink({ id: lenderId, linkName: 'loan', linkId: loanId });\n\n    // If no contact is set, fetch first contact of organisation\n    if (!contactId && organisationId) {\n      const { contacts } = OrganisationService.fetchOne({\n        $filters: { _id: organisationId },\n        contacts: { _id: 1 },\n      });\n\n      if (contacts && contacts.length > 0) {\n        contactId = contacts[0]._id;\n      }\n    }\n\n    this.linkOrganisationAndContact({ lenderId, organisationId, contactId });\n    return lenderId;\n  }\n\n  linkOrganisationAndContact({ lenderId, organisationId, contactId }) {\n    if (organisationId) {\n      this.addLink({\n        id: lenderId,\n        linkName: 'organisation',\n        linkId: organisationId,\n      });\n    }\n    if (contactId) {\n      this.addLink({\n        id: lenderId,\n        linkName: 'contact',\n        linkId: contactId,\n      });\n    } else {\n      this.removeLink({ id: lenderId, linkName: 'contact' });\n    }\n  }\n\n  remove({ lenderId }) {\n    super.remove(lenderId);\n  }\n}\n\nexport default new LenderService();\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/lenders/server/LenderService.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/lenders/server/LenderService.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Lenders;\nmodule.link(\"../lenders\", {\n  default(v) {\n    Lenders = v;\n  }\n\n}, 1);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 2);\nlet OrganisationService;\nmodule.link(\"../../organisations/server/OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 3);\n\nclass LenderService extends CollectionService {\n  constructor() {\n    super(Lenders);\n  }\n\n  insert({\n    lender,\n    contactId,\n    organisationId\n  }) {\n    const {\n      loanId\n    } = lender,\n          data = (0, _objectWithoutProperties2.default)(lender, [\"loanId\"]);\n    const existingLender = this.fetchOne({\n      $filters: {\n        'loanLink._id': loanId,\n        'organisationLink._id': organisationId\n      },\n      organisationLink: 1,\n      loanLink: 1\n    });\n\n    if (existingLender) {\n      throw new Meteor.Error('Peut pas ajouter le même prêteur 2 fois');\n    }\n\n    const lenderId = super.insert(data);\n    this.addLink({\n      id: lenderId,\n      linkName: 'loan',\n      linkId: loanId\n    }); // If no contact is set, fetch first contact of organisation\n\n    if (!contactId && organisationId) {\n      const {\n        contacts\n      } = OrganisationService.fetchOne({\n        $filters: {\n          _id: organisationId\n        },\n        contacts: {\n          _id: 1\n        }\n      });\n\n      if (contacts && contacts.length > 0) {\n        contactId = contacts[0]._id;\n      }\n    }\n\n    this.linkOrganisationAndContact({\n      lenderId,\n      organisationId,\n      contactId\n    });\n    return lenderId;\n  }\n\n  linkOrganisationAndContact({\n    lenderId,\n    organisationId,\n    contactId\n  }) {\n    if (organisationId) {\n      this.addLink({\n        id: lenderId,\n        linkName: 'organisation',\n        linkId: organisationId\n      });\n    }\n\n    if (contactId) {\n      this.addLink({\n        id: lenderId,\n        linkName: 'contact',\n        linkId: contactId\n      });\n    } else {\n      this.removeLink({\n        id: lenderId,\n        linkName: 'contact'\n      });\n    }\n  }\n\n  remove({\n    lenderId\n  }) {\n    super.remove(lenderId);\n  }\n\n}\n\nmodule.exportDefault(new LenderService());","map":{"version":3,"sources":["imports/core/api/lenders/server/LenderService.js"],"names":["constructor","insert","organisationId","data","existingLender","$filters","organisationLink","loanLink","Meteor","lenderId","id","linkName","linkId","loanId","contacts","_id","contactId","linkOrganisationAndContact","remove"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport Lenders from '../lenders';\nimport CollectionService from '../../helpers/CollectionService';\nimport OrganisationService from '../../organisations/server/OrganisationService';\n\nclass LenderService extends CollectionService {\n  constructor() {\n    super(Lenders);\n  }\n\n  insert({ lender, contactId, organisationId }) {\n    const { loanId, ...data } = lender;\n\n    const existingLender = this.fetchOne({\n      $filters: {\n        'loanLink._id': loanId,\n        'organisationLink._id': organisationId,\n      },\n      organisationLink: 1,\n      loanLink: 1,\n    });\n\n    if (existingLender) {\n      throw new Meteor.Error('Peut pas ajouter le même prêteur 2 fois');\n    }\n\n    const lenderId = super.insert(data);\n    this.addLink({ id: lenderId, linkName: 'loan', linkId: loanId });\n\n    // If no contact is set, fetch first contact of organisation\n    if (!contactId && organisationId) {\n      const { contacts } = OrganisationService.fetchOne({\n        $filters: { _id: organisationId },\n        contacts: { _id: 1 },\n      });\n\n      if (contacts && contacts.length > 0) {\n        contactId = contacts[0]._id;\n      }\n    }\n\n    this.linkOrganisationAndContact({ lenderId, organisationId, contactId });\n    return lenderId;\n  }\n\n  linkOrganisationAndContact({ lenderId, organisationId, contactId }) {\n    if (organisationId) {\n      this.addLink({\n        id: lenderId,\n        linkName: 'organisation',\n        linkId: organisationId,\n      });\n    }\n    if (contactId) {\n      this.addLink({\n        id: lenderId,\n        linkName: 'contact',\n        linkId: contactId,\n      });\n    } else {\n      this.removeLink({ id: lenderId, linkName: 'contact' });\n    }\n  }\n\n  remove({ lenderId }) {\n    super.remove(lenderId);\n  }\n}\n\nexport default new LenderService();\n"]},"sourceType":"script","hash":"d6abca778cb4590c6cf328733d65d8ce9e00bcfa"}
