{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/queries/test/server/serverQueries.app-test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/queries/test/server/serverQueries.app-test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/queries/test/server/serverQueries.app-test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/queries/test/server/serverQueries.app-test.js"],"names":["Match","query1","query2","query3","query4","testCollectionInsert","exposeQuery","TestCollection","require","default","setHandler","context","params","insert","query","overrides","firewall","userId","embody","body","$options","sort","value","limit","$filters","$gt","validateParams","name","Maybe","String","options","allowFilterById"],"mappings":"AAAA;AACA,SAASA,KAAT,QAAsB,cAAtB;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,oBALF;AAOA,SAASC,WAAT;;AAEA,MAAMC,cAAc,GAAGC,OAAO,0BAAP,CAAkCC,OAAzD;;AAEAJ,oBAAoB,CAACK,UAArB,CAAgC,CAACC,OAAD,EAAUC,MAAV,KAC9BL,cAAc,CAACM,MAAf,CAAsBD,MAAtB,CADF;AAGAN,WAAW,CAAC;AACVQ,EAAAA,KAAK,EAAEb,MADG;AAEVc,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,CAACC,MAAD,EAASL,MAAT,KAAoB,IADrB;AAETM,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOP,MAAP,KAAkB;AACxBO,MAAAA,IAAI,CAACC,QAAL,GAAgB;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAR;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAhB;AACAJ,MAAAA,IAAI,CAACK,QAAL,GAAgB;AAAEF,QAAAA,KAAK,EAAE;AAAEG,UAAAA,GAAG,EAAE;AAAP;AAAT,OAAhB;AACD,KALQ;AAMTC,IAAAA,cAAc,EAAE;AAAEC,MAAAA,IAAI,EAAE3B,KAAK,CAAC4B,KAAN,CAAYC,MAAZ;AAAR;AANP;AAFD,CAAD,CAAX;AAYAvB,WAAW,CAAC;AACVQ,EAAAA,KAAK,EAAEZ,MADG;AAEVa,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,CAACC,MAAD,EAASL,MAAT,KAAoB,IADrB;AAETM,IAAAA,MAAM,EAAGC,IAAD,IAAU;AAChBA,MAAAA,IAAI,CAACC,QAAL,GAAgB;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAR;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAhB;AACAJ,MAAAA,IAAI,CAACK,QAAL,GAAgB;AAAEF,QAAAA,KAAK,EAAE;AAAEG,UAAAA,GAAG,EAAE;AAAP;AAAT,OAAhB;AACD,KALQ;AAMTC,IAAAA,cAAc,EAAE;AAAEC,MAAAA,IAAI,EAAE3B,KAAK,CAAC4B,KAAN,CAAYC,MAAZ;AAAR;AANP,GAFD;AAUVC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,eAAe,EAAE;AAAnB;AAVC,CAAD,CAAX;AAaAzB,WAAW,CAAC;AAAEQ,EAAAA,KAAK,EAAEX;AAAT,CAAD,CAAX;AAEAG,WAAW,CAAC;AACVQ,EAAAA,KAAK,EAAEV,MADG;AAEVW,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,CAACC,MAAD,EAASL,MAAT,KAAoB,IADrB;AAETM,IAAAA,MAAM,EAAGC,IAAD,IAAU;AAChBA,MAAAA,IAAI,CAACC,QAAL,GAAgB;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAR;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAAhB;AACAJ,MAAAA,IAAI,CAACK,QAAL,GAAgB;AAAEF,QAAAA,KAAK,EAAE;AAAEG,UAAAA,GAAG,EAAE;AAAP;AAAT,OAAhB;AACD,KALQ;AAMTC,IAAAA,cAAc,EAAE;AAAEC,MAAAA,IAAI,EAAE3B,KAAK,CAAC4B,KAAN,CAAYC,MAAZ;AAAR;AANP,GAFD;AAUVC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,eAAe,EAAE;AAAnB;AAVC,CAAD,CAAX,C,CAaA;AACA;AACA","sourcesContent":["/* eslint-env mocha */\nimport { Match } from 'meteor/check';\nimport {\n  query1,\n  query2,\n  query3,\n  query4,\n  testCollectionInsert,\n} from '../collection.app-test';\nimport { exposeQuery } from '../../queryHelpers';\n\nconst TestCollection = require('../collection.app-test').default;\n\ntestCollectionInsert.setHandler((context, params) =>\n  TestCollection.insert(params));\n\nexposeQuery({\n  query: query1,\n  overrides: {\n    firewall: (userId, params) => null,\n    embody: (body, params) => {\n      body.$options = { sort: { value: 1 }, limit: 10 };\n      body.$filters = { value: { $gt: 30 } };\n    },\n    validateParams: { name: Match.Maybe(String) },\n  },\n});\n\nexposeQuery({\n  query: query2,\n  overrides: {\n    firewall: (userId, params) => null,\n    embody: (body) => {\n      body.$options = { sort: { value: 1 }, limit: 10 };\n      body.$filters = { value: { $gt: 20 } };\n    },\n    validateParams: { name: Match.Maybe(String) },\n  },\n  options: { allowFilterById: true },\n});\n\nexposeQuery({ query: query3 });\n\nexposeQuery({\n  query: query4,\n  overrides: {\n    firewall: (userId, params) => null,\n    embody: (body) => {\n      body.$options = { sort: { value: 1 }, limit: 10 };\n      body.$filters = { value: { $gt: 20 } };\n    },\n    validateParams: { name: Match.Maybe(String) },\n  },\n  options: { allowFilterById: true },\n});\n\n// describe.only('test', () => {\n//   it('test', () => {});\n// });\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/queries/test/server/serverQueries.app-test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/queries/test/server/serverQueries.app-test.js"}},"code":"let Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet query1, query2, query3, query4, testCollectionInsert;\nmodule.link(\"../collection.app-test\", {\n  query1(v) {\n    query1 = v;\n  },\n\n  query2(v) {\n    query2 = v;\n  },\n\n  query3(v) {\n    query3 = v;\n  },\n\n  query4(v) {\n    query4 = v;\n  },\n\n  testCollectionInsert(v) {\n    testCollectionInsert = v;\n  }\n\n}, 1);\nlet exposeQuery;\nmodule.link(\"../../queryHelpers\", {\n  exposeQuery(v) {\n    exposeQuery = v;\n  }\n\n}, 2);\n\nconst TestCollection = require(\"../collection.app-test\").default;\n\ntestCollectionInsert.setHandler((context, params) => TestCollection.insert(params));\nexposeQuery({\n  query: query1,\n  overrides: {\n    firewall: (userId, params) => null,\n    embody: (body, params) => {\n      body.$options = {\n        sort: {\n          value: 1\n        },\n        limit: 10\n      };\n      body.$filters = {\n        value: {\n          $gt: 30\n        }\n      };\n    },\n    validateParams: {\n      name: Match.Maybe(String)\n    }\n  }\n});\nexposeQuery({\n  query: query2,\n  overrides: {\n    firewall: (userId, params) => null,\n    embody: body => {\n      body.$options = {\n        sort: {\n          value: 1\n        },\n        limit: 10\n      };\n      body.$filters = {\n        value: {\n          $gt: 20\n        }\n      };\n    },\n    validateParams: {\n      name: Match.Maybe(String)\n    }\n  },\n  options: {\n    allowFilterById: true\n  }\n});\nexposeQuery({\n  query: query3\n});\nexposeQuery({\n  query: query4,\n  overrides: {\n    firewall: (userId, params) => null,\n    embody: body => {\n      body.$options = {\n        sort: {\n          value: 1\n        },\n        limit: 10\n      };\n      body.$filters = {\n        value: {\n          $gt: 20\n        }\n      };\n    },\n    validateParams: {\n      name: Match.Maybe(String)\n    }\n  },\n  options: {\n    allowFilterById: true\n  }\n}); // describe.only('test', () => {\n//   it('test', () => {});\n// });","map":{"version":3,"sources":["imports/core/api/queries/test/server/serverQueries.app-test.js"],"names":["TestCollection","require","testCollectionInsert","exposeQuery","query","overrides","firewall","embody","body","sort","value","limit","$gt","validateParams","name","Match","options","allowFilterById","query3"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { Match } from 'meteor/check';\nimport {\n  query1,\n  query2,\n  query3,\n  query4,\n  testCollectionInsert,\n} from '../collection.app-test';\nimport { exposeQuery } from '../../queryHelpers';\n\nconst TestCollection = require('../collection.app-test').default;\n\ntestCollectionInsert.setHandler((context, params) =>\n  TestCollection.insert(params));\n\nexposeQuery({\n  query: query1,\n  overrides: {\n    firewall: (userId, params) => null,\n    embody: (body, params) => {\n      body.$options = { sort: { value: 1 }, limit: 10 };\n      body.$filters = { value: { $gt: 30 } };\n    },\n    validateParams: { name: Match.Maybe(String) },\n  },\n});\n\nexposeQuery({\n  query: query2,\n  overrides: {\n    firewall: (userId, params) => null,\n    embody: (body) => {\n      body.$options = { sort: { value: 1 }, limit: 10 };\n      body.$filters = { value: { $gt: 20 } };\n    },\n    validateParams: { name: Match.Maybe(String) },\n  },\n  options: { allowFilterById: true },\n});\n\nexposeQuery({ query: query3 });\n\nexposeQuery({\n  query: query4,\n  overrides: {\n    firewall: (userId, params) => null,\n    embody: (body) => {\n      body.$options = { sort: { value: 1 }, limit: 10 };\n      body.$filters = { value: { $gt: 20 } };\n    },\n    validateParams: { name: Match.Maybe(String) },\n  },\n  options: { allowFilterById: true },\n});\n\n// describe.only('test', () => {\n//   it('test', () => {});\n// });\n"]},"sourceType":"script","hash":"6c0164aa80c58520837f7c658223a708faec9da0"}
