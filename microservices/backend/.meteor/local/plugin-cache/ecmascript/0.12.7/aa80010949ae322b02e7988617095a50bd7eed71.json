{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/revenues/server/RevenueService.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/revenues/server/RevenueService.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/revenues/server/RevenueService.js","inputSourceMap":{"version":3,"sources":["imports/core/api/revenues/server/RevenueService.js"],"names":["COMMISSION_STATUS","Revenues","CollectionService","LoanService","REVENUE_STATUS","RevenueService","constructor","insert","revenue","loanId","revenueId","collection","addLink","id","linkName","linkId","remove","getGeneratedRevenues","organisationId","revenues","fetch","$filters","$and","status","CLOSED","organisationLinks","$elemMatch","_id","amount","reduce","total","sharedAmount","length","consolidateRevenue","paidAt","_update","object","consolidateCommission","commissionRate","updateLinkMetadata","metadata","PAID"],"mappings":"AAAA,SAASA,iBAAT;AACA,OAAOC,QAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,WAAP;AACA,SAASC,cAAT;;AAEA,MAAMC,cAAN,SAA6BH,iBAA7B,CAA+C;AAC7CI,EAAAA,WAAW,GAAG;AACZ,UAAML,QAAN;AACD;;AAEDM,EAAAA,MAAM,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAsB;AAC1B,UAAMC,SAAS,GAAG,KAAKC,UAAL,CAAgBJ,MAAhB,CAAuBC,OAAvB,CAAlB;;AAEA,QAAIC,MAAJ,EAAY;AACVN,MAAAA,WAAW,CAACS,OAAZ,CAAoB;AAClBC,QAAAA,EAAE,EAAEJ,MADc;AAElBK,QAAAA,QAAQ,EAAE,UAFQ;AAGlBC,QAAAA,MAAM,EAAEL;AAHU,OAApB;AAKD;;AAED,WAAOA,SAAP;AACD;;AAEDM,EAAAA,MAAM,CAAC;AAAEN,IAAAA;AAAF,GAAD,EAAgB;AACpB,WAAO,MAAMM,MAAN,CAAaN,SAAb,CAAP;AACD;;AAEDO,EAAAA,oBAAoB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAqB;AACvC,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAW;AAC1BC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE,CACJ;AAAEC,UAAAA,MAAM,EAAEnB,cAAc,CAACoB;AAAzB,SADI,EAEJ;AAAEC,UAAAA,iBAAiB,EAAE;AAAEC,YAAAA,UAAU,EAAE;AAAEC,cAAAA,GAAG,EAAET;AAAP;AAAd;AAArB,SAFI;AADE,OADgB;AAO1BU,MAAAA,MAAM,EAAE,CAPkB;AAQ1BH,MAAAA,iBAAiB,EAAE,CARO;AAS1BF,MAAAA,MAAM,EAAE;AATkB,KAAX,CAAjB;AAYA,WAAOJ,QAAQ,CAACU,MAAT,CAAgB,CAACC,KAAD,EAAQ;AAAEF,MAAAA,MAAF;AAAUH,MAAAA;AAAV,KAAR,KAA0C;AAC/D,YAAMM,YAAY,GAAGH,MAAM,GAAGH,iBAAiB,CAACO,MAAhD;AAEA,aAAOF,KAAK,GAAGC,YAAf;AACD,KAJM,EAIJ,CAJI,CAAP;AAKD;;AAEDE,EAAAA,kBAAkB,CAAC;AAAEvB,IAAAA,SAAF;AAAakB,IAAAA,MAAb;AAAqBM,IAAAA;AAArB,GAAD,EAAgC;AAChD,WAAO,KAAKC,OAAL,CAAa;AAClBtB,MAAAA,EAAE,EAAEH,SADc;AAElB0B,MAAAA,MAAM,EAAE;AACNR,QAAAA,MADM;AAENM,QAAAA,MAFM;AAGNX,QAAAA,MAAM,EAAEnB,cAAc,CAACoB;AAHjB;AAFU,KAAb,CAAP;AAQD;;AAEDa,EAAAA,qBAAqB,CAAC;AAAE3B,IAAAA,SAAF;AAAaQ,IAAAA,cAAb;AAA6BgB,IAAAA,MAA7B;AAAqCI,IAAAA;AAArC,GAAD,EAAwD;AAC3E,WAAO,KAAKC,kBAAL,CAAwB;AAC7B1B,MAAAA,EAAE,EAAEH,SADyB;AAE7BI,MAAAA,QAAQ,EAAE,eAFmB;AAG7BC,MAAAA,MAAM,EAAEG,cAHqB;AAI7BsB,MAAAA,QAAQ,EAAE;AAAEN,QAAAA,MAAF;AAAUX,QAAAA,MAAM,EAAEvB,iBAAiB,CAACyC,IAApC;AAA0CH,QAAAA;AAA1C;AAJmB,KAAxB,CAAP;AAMD;;AA7D4C;;AAgE/C,eAAe,IAAIjC,cAAJ,EAAf","sourcesContent":["import { COMMISSION_STATUS } from 'imports/core/api/constants';\nimport Revenues from '../revenues';\nimport CollectionService from '../../helpers/CollectionService';\nimport LoanService from '../../loans/server/LoanService';\nimport { REVENUE_STATUS } from '../revenueConstants';\n\nclass RevenueService extends CollectionService {\n  constructor() {\n    super(Revenues);\n  }\n\n  insert({ revenue, loanId }) {\n    const revenueId = this.collection.insert(revenue);\n\n    if (loanId) {\n      LoanService.addLink({\n        id: loanId,\n        linkName: 'revenues',\n        linkId: revenueId,\n      });\n    }\n\n    return revenueId;\n  }\n\n  remove({ revenueId }) {\n    return super.remove(revenueId);\n  }\n\n  getGeneratedRevenues({ organisationId }) {\n    const revenues = this.fetch({\n      $filters: {\n        $and: [\n          { status: REVENUE_STATUS.CLOSED },\n          { organisationLinks: { $elemMatch: { _id: organisationId } } },\n        ],\n      },\n      amount: 1,\n      organisationLinks: 1,\n      status: 1,\n    });\n\n    return revenues.reduce((total, { amount, organisationLinks }) => {\n      const sharedAmount = amount / organisationLinks.length;\n\n      return total + sharedAmount;\n    }, 0);\n  }\n\n  consolidateRevenue({ revenueId, amount, paidAt }) {\n    return this._update({\n      id: revenueId,\n      object: {\n        amount,\n        paidAt,\n        status: REVENUE_STATUS.CLOSED,\n      },\n    });\n  }\n\n  consolidateCommission({ revenueId, organisationId, paidAt, commissionRate }) {\n    return this.updateLinkMetadata({\n      id: revenueId,\n      linkName: 'organisations',\n      linkId: organisationId,\n      metadata: { paidAt, status: COMMISSION_STATUS.PAID, commissionRate },\n    });\n  }\n}\n\nexport default new RevenueService();\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/revenues/server/RevenueService.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/revenues/server/RevenueService.js"}},"code":"let COMMISSION_STATUS;\nmodule.link(\"../../constants\", {\n  COMMISSION_STATUS(v) {\n    COMMISSION_STATUS = v;\n  }\n\n}, 0);\nlet Revenues;\nmodule.link(\"../revenues\", {\n  default(v) {\n    Revenues = v;\n  }\n\n}, 1);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 2);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 3);\nlet REVENUE_STATUS;\nmodule.link(\"../revenueConstants\", {\n  REVENUE_STATUS(v) {\n    REVENUE_STATUS = v;\n  }\n\n}, 4);\n\nclass RevenueService extends CollectionService {\n  constructor() {\n    super(Revenues);\n  }\n\n  insert({\n    revenue,\n    loanId\n  }) {\n    const revenueId = this.collection.insert(revenue);\n\n    if (loanId) {\n      LoanService.addLink({\n        id: loanId,\n        linkName: 'revenues',\n        linkId: revenueId\n      });\n    }\n\n    return revenueId;\n  }\n\n  remove({\n    revenueId\n  }) {\n    return super.remove(revenueId);\n  }\n\n  getGeneratedRevenues({\n    organisationId\n  }) {\n    const revenues = this.fetch({\n      $filters: {\n        $and: [{\n          status: REVENUE_STATUS.CLOSED\n        }, {\n          organisationLinks: {\n            $elemMatch: {\n              _id: organisationId\n            }\n          }\n        }]\n      },\n      amount: 1,\n      organisationLinks: 1,\n      status: 1\n    });\n    return revenues.reduce((total, {\n      amount,\n      organisationLinks\n    }) => {\n      const sharedAmount = amount / organisationLinks.length;\n      return total + sharedAmount;\n    }, 0);\n  }\n\n  consolidateRevenue({\n    revenueId,\n    amount,\n    paidAt\n  }) {\n    return this._update({\n      id: revenueId,\n      object: {\n        amount,\n        paidAt,\n        status: REVENUE_STATUS.CLOSED\n      }\n    });\n  }\n\n  consolidateCommission({\n    revenueId,\n    organisationId,\n    paidAt,\n    commissionRate\n  }) {\n    return this.updateLinkMetadata({\n      id: revenueId,\n      linkName: 'organisations',\n      linkId: organisationId,\n      metadata: {\n        paidAt,\n        status: COMMISSION_STATUS.PAID,\n        commissionRate\n      }\n    });\n  }\n\n}\n\nmodule.exportDefault(new RevenueService());","map":{"version":3,"sources":["imports/core/api/revenues/server/RevenueService.js"],"names":["constructor","insert","loanId","revenueId","LoanService","id","linkName","linkId","remove","getGeneratedRevenues","organisationId","revenues","$filters","$and","status","REVENUE_STATUS","CLOSED","organisationLinks","$elemMatch","_id","amount","sharedAmount","total","consolidateRevenue","paidAt","object","consolidateCommission","commissionRate","metadata","COMMISSION_STATUS"],"mappings":"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","sourcesContent":["import { COMMISSION_STATUS } from 'imports/core/api/constants';\nimport Revenues from '../revenues';\nimport CollectionService from '../../helpers/CollectionService';\nimport LoanService from '../../loans/server/LoanService';\nimport { REVENUE_STATUS } from '../revenueConstants';\n\nclass RevenueService extends CollectionService {\n  constructor() {\n    super(Revenues);\n  }\n\n  insert({ revenue, loanId }) {\n    const revenueId = this.collection.insert(revenue);\n\n    if (loanId) {\n      LoanService.addLink({\n        id: loanId,\n        linkName: 'revenues',\n        linkId: revenueId,\n      });\n    }\n\n    return revenueId;\n  }\n\n  remove({ revenueId }) {\n    return super.remove(revenueId);\n  }\n\n  getGeneratedRevenues({ organisationId }) {\n    const revenues = this.fetch({\n      $filters: {\n        $and: [\n          { status: REVENUE_STATUS.CLOSED },\n          { organisationLinks: { $elemMatch: { _id: organisationId } } },\n        ],\n      },\n      amount: 1,\n      organisationLinks: 1,\n      status: 1,\n    });\n\n    return revenues.reduce((total, { amount, organisationLinks }) => {\n      const sharedAmount = amount / organisationLinks.length;\n\n      return total + sharedAmount;\n    }, 0);\n  }\n\n  consolidateRevenue({ revenueId, amount, paidAt }) {\n    return this._update({\n      id: revenueId,\n      object: {\n        amount,\n        paidAt,\n        status: REVENUE_STATUS.CLOSED,\n      },\n    });\n  }\n\n  consolidateCommission({ revenueId, organisationId, paidAt, commissionRate }) {\n    return this.updateLinkMetadata({\n      id: revenueId,\n      linkName: 'organisations',\n      linkId: organisationId,\n      metadata: { paidAt, status: COMMISSION_STATUS.PAID, commissionRate },\n    });\n  }\n}\n\nexport default new RevenueService();\n"]},"sourceType":"script","hash":"aa80010949ae322b02e7988617095a50bd7eed71"}
