{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/17.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/migrations/server/test/17.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/17.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/migrations/server/test/17.test.js"],"names":["expect","resetDatabase","ACTIVITY_TYPES","Activities","Loans","Users","up","describe","beforeEach","it","rawCollection","insert","_id","name","closingDate","Date","createdAt","signingDate","find","forEach","loan","to","equal","undefined","activities","fetch","length","activity","loanLink","events","filter","type","EVENT","server","SERVER","assignedEmployeeId","userId","event","createdBy"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { ACTIVITY_TYPES } from '../../../activities/activityConstants';\nimport Activities from '../../../activities';\nimport Loans from '../../../loans';\nimport Users from '../../../users';\nimport { up } from '../17';\n\ndescribe('Migration 17', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('up', () => {\n    it('removes closing and signing dates', async () => {\n      await Loans.rawCollection().insert({\n        _id: '1',\n        name: 'a',\n        closingDate: new Date(),\n        createdAt: new Date(),\n      });\n      await Loans.rawCollection().insert({\n        _id: '2',\n        name: 'b',\n        signingDate: new Date(),\n        createdAt: new Date(),\n      });\n\n      await up();\n\n      Loans.find().forEach((loan) => {\n        expect(loan.closingDate).to.equal(undefined);\n        expect(loan.signingDate).to.equal(undefined);\n      });\n    });\n\n    it('Adds up to 3 activities for a loan', async () => {\n      await Loans.rawCollection().insert({\n        _id: '1',\n        createdAt: new Date(),\n        signingDate: new Date(),\n        closingDate: new Date(),\n      });\n\n      await up();\n\n      const activities = Activities.find().fetch();\n      expect(activities.length).to.equal(3);\n\n      activities.forEach((activity) => {\n        expect(activity.loanLink._id).to.equal('1');\n      });\n\n      const events = activities.filter(({ type }) => type === ACTIVITY_TYPES.EVENT);\n      expect(events.length).to.equal(2);\n\n      const server = activities.filter(({ type }) => type === ACTIVITY_TYPES.SERVER);\n      expect(server.length).to.equal(1);\n    });\n\n    it('Adds 2 activities for a loan', async () => {\n      await Loans.rawCollection().insert({\n        _id: '1',\n        createdAt: new Date(),\n        signingDate: new Date(),\n      });\n\n      await up();\n\n      const activities = Activities.find().fetch();\n      expect(activities.length).to.equal(2);\n\n      activities.forEach((activity) => {\n        expect(activity.loanLink._id).to.equal('1');\n      });\n\n      const events = activities.filter(({ type }) => type === ACTIVITY_TYPES.EVENT);\n      expect(events.length).to.equal(1);\n\n      const server = activities.filter(({ type }) => type === ACTIVITY_TYPES.SERVER);\n      expect(server.length).to.equal(1);\n    });\n\n    it('adds the assignee on the activity as creator', async () => {\n      await Users.rawCollection().insert({\n        _id: '2',\n      });\n      await Users.rawCollection().insert({\n        _id: '3',\n        assignedEmployeeId: '2',\n      });\n      await Loans.rawCollection().insert({\n        _id: '1',\n        userId: '3',\n        createdAt: new Date(),\n        signingDate: new Date(),\n        closingDate: new Date(),\n      });\n\n      await up();\n\n      const activities = Activities.find().fetch();\n\n      const events = activities.filter(({ type }) => type === ACTIVITY_TYPES.EVENT);\n      expect(events.length).to.equal(2);\n\n      events.forEach((event) => {\n        expect(event.createdBy).to.equal('2');\n      });\n    });\n  });\n\n  describe('down', () => {});\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/17.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/migrations/server/test/17.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 1);\nlet ACTIVITY_TYPES;\nmodule.link(\"../../../activities/activityConstants\", {\n  ACTIVITY_TYPES(v) {\n    ACTIVITY_TYPES = v;\n  }\n\n}, 2);\nlet Activities;\nmodule.link(\"../../../activities\", {\n  default(v) {\n    Activities = v;\n  }\n\n}, 3);\nlet Loans;\nmodule.link(\"../../../loans\", {\n  default(v) {\n    Loans = v;\n  }\n\n}, 4);\nlet Users;\nmodule.link(\"../../../users\", {\n  default(v) {\n    Users = v;\n  }\n\n}, 5);\nlet up;\nmodule.link(\"../17\", {\n  up(v) {\n    up = v;\n  }\n\n}, 6);\ndescribe('Migration 17', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n  describe('up', () => {\n    it('removes closing and signing dates', () => Promise.asyncApply(() => {\n      Promise.await(Loans.rawCollection().insert({\n        _id: '1',\n        name: 'a',\n        closingDate: new Date(),\n        createdAt: new Date()\n      }));\n      Promise.await(Loans.rawCollection().insert({\n        _id: '2',\n        name: 'b',\n        signingDate: new Date(),\n        createdAt: new Date()\n      }));\n      Promise.await(up());\n      Loans.find().forEach(loan => {\n        expect(loan.closingDate).to.equal(undefined);\n        expect(loan.signingDate).to.equal(undefined);\n      });\n    }));\n    it('Adds up to 3 activities for a loan', () => Promise.asyncApply(() => {\n      Promise.await(Loans.rawCollection().insert({\n        _id: '1',\n        createdAt: new Date(),\n        signingDate: new Date(),\n        closingDate: new Date()\n      }));\n      Promise.await(up());\n      const activities = Activities.find().fetch();\n      expect(activities.length).to.equal(3);\n      activities.forEach(activity => {\n        expect(activity.loanLink._id).to.equal('1');\n      });\n      const events = activities.filter(({\n        type\n      }) => type === ACTIVITY_TYPES.EVENT);\n      expect(events.length).to.equal(2);\n      const server = activities.filter(({\n        type\n      }) => type === ACTIVITY_TYPES.SERVER);\n      expect(server.length).to.equal(1);\n    }));\n    it('Adds 2 activities for a loan', () => Promise.asyncApply(() => {\n      Promise.await(Loans.rawCollection().insert({\n        _id: '1',\n        createdAt: new Date(),\n        signingDate: new Date()\n      }));\n      Promise.await(up());\n      const activities = Activities.find().fetch();\n      expect(activities.length).to.equal(2);\n      activities.forEach(activity => {\n        expect(activity.loanLink._id).to.equal('1');\n      });\n      const events = activities.filter(({\n        type\n      }) => type === ACTIVITY_TYPES.EVENT);\n      expect(events.length).to.equal(1);\n      const server = activities.filter(({\n        type\n      }) => type === ACTIVITY_TYPES.SERVER);\n      expect(server.length).to.equal(1);\n    }));\n    it('adds the assignee on the activity as creator', () => Promise.asyncApply(() => {\n      Promise.await(Users.rawCollection().insert({\n        _id: '2'\n      }));\n      Promise.await(Users.rawCollection().insert({\n        _id: '3',\n        assignedEmployeeId: '2'\n      }));\n      Promise.await(Loans.rawCollection().insert({\n        _id: '1',\n        userId: '3',\n        createdAt: new Date(),\n        signingDate: new Date(),\n        closingDate: new Date()\n      }));\n      Promise.await(up());\n      const activities = Activities.find().fetch();\n      const events = activities.filter(({\n        type\n      }) => type === ACTIVITY_TYPES.EVENT);\n      expect(events.length).to.equal(2);\n      events.forEach(event => {\n        expect(event.createdBy).to.equal('2');\n      });\n    }));\n  });\n  describe('down', () => {});\n});","map":{"version":3,"sources":["imports/core/api/migrations/server/test/17.test.js"],"names":["describe","beforeEach","resetDatabase","it","_id","name","closingDate","createdAt","signingDate","up","Loans","loan","expect","activities","Activities","activity","events","type","ACTIVITY_TYPES","server","assignedEmployeeId","userId","event"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { ACTIVITY_TYPES } from '../../../activities/activityConstants';\nimport Activities from '../../../activities';\nimport Loans from '../../../loans';\nimport Users from '../../../users';\nimport { up } from '../17';\n\ndescribe('Migration 17', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('up', () => {\n    it('removes closing and signing dates', async () => {\n      await Loans.rawCollection().insert({\n        _id: '1',\n        name: 'a',\n        closingDate: new Date(),\n        createdAt: new Date(),\n      });\n      await Loans.rawCollection().insert({\n        _id: '2',\n        name: 'b',\n        signingDate: new Date(),\n        createdAt: new Date(),\n      });\n\n      await up();\n\n      Loans.find().forEach((loan) => {\n        expect(loan.closingDate).to.equal(undefined);\n        expect(loan.signingDate).to.equal(undefined);\n      });\n    });\n\n    it('Adds up to 3 activities for a loan', async () => {\n      await Loans.rawCollection().insert({\n        _id: '1',\n        createdAt: new Date(),\n        signingDate: new Date(),\n        closingDate: new Date(),\n      });\n\n      await up();\n\n      const activities = Activities.find().fetch();\n      expect(activities.length).to.equal(3);\n\n      activities.forEach((activity) => {\n        expect(activity.loanLink._id).to.equal('1');\n      });\n\n      const events = activities.filter(({ type }) => type === ACTIVITY_TYPES.EVENT);\n      expect(events.length).to.equal(2);\n\n      const server = activities.filter(({ type }) => type === ACTIVITY_TYPES.SERVER);\n      expect(server.length).to.equal(1);\n    });\n\n    it('Adds 2 activities for a loan', async () => {\n      await Loans.rawCollection().insert({\n        _id: '1',\n        createdAt: new Date(),\n        signingDate: new Date(),\n      });\n\n      await up();\n\n      const activities = Activities.find().fetch();\n      expect(activities.length).to.equal(2);\n\n      activities.forEach((activity) => {\n        expect(activity.loanLink._id).to.equal('1');\n      });\n\n      const events = activities.filter(({ type }) => type === ACTIVITY_TYPES.EVENT);\n      expect(events.length).to.equal(1);\n\n      const server = activities.filter(({ type }) => type === ACTIVITY_TYPES.SERVER);\n      expect(server.length).to.equal(1);\n    });\n\n    it('adds the assignee on the activity as creator', async () => {\n      await Users.rawCollection().insert({\n        _id: '2',\n      });\n      await Users.rawCollection().insert({\n        _id: '3',\n        assignedEmployeeId: '2',\n      });\n      await Loans.rawCollection().insert({\n        _id: '1',\n        userId: '3',\n        createdAt: new Date(),\n        signingDate: new Date(),\n        closingDate: new Date(),\n      });\n\n      await up();\n\n      const activities = Activities.find().fetch();\n\n      const events = activities.filter(({ type }) => type === ACTIVITY_TYPES.EVENT);\n      expect(events.length).to.equal(2);\n\n      events.forEach((event) => {\n        expect(event.createdBy).to.equal('2');\n      });\n    });\n  });\n\n  describe('down', () => {});\n});\n"]},"sourceType":"script","hash":"98b74a563792b40e881c32bac0fe391e0586e0e8"}
