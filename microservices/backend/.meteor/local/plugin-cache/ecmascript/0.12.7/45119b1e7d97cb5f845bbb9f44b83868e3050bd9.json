{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/slack/server/slackNotificationHelpers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/slack/server/slackNotificationHelpers.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/slack/server/slackNotificationHelpers.js","inputSourceMap":{"version":3,"sources":["imports/core/api/slack/server/slackNotificationHelpers.js"],"names":["PropertyService","PromotionService","promotionInviteNotification","propertyInviteNotification","sendPropertyInvitations","propertyIds","currentUser","invitedUser","forEach","id","property","fetchOne","$filters","$or","_id","externalId","address1","user","sendPromotionInvitations","promotionIds","promotion","name","assignedEmployee","email"],"mappings":"AAAA,OAAOA,eAAP;AACA,OAAOC,gBAAP;AAEA,SACEC,2BADF,EAEEC,0BAFF;AAKA,OAAO,MAAMC,uBAAuB,GAAG,CACrCC,WADqC,EAErCC,WAFqC,EAGrCC,WAHqC,KAIlC;AACHF,EAAAA,WAAW,CAACG,OAAZ,CAAqBC,EAAD,IAAQ;AAC1B,UAAMC,QAAQ,GAAGV,eAAe,CAACW,QAAhB,CAAyB;AACxCC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAC;AAAEC,UAAAA,GAAG,EAAEL;AAAP,SAAD,EAAc;AAAEM,UAAAA,UAAU,EAAEN;AAAd,SAAd;AAAP,OAD8B;AAExCO,MAAAA,QAAQ,EAAE;AAF8B,KAAzB,CAAjB;AAIAb,IAAAA,0BAA0B,CAAC;AACzBG,MAAAA,WADyB;AAEzBW,MAAAA,IAAI,EAAEV,WAFmB;AAGzBG,MAAAA;AAHyB,KAAD,CAA1B;AAKD,GAVD;AAWD,CAhBM;AAkBP,OAAO,MAAMQ,wBAAwB,GAAG,CACtCC,YADsC,EAEtCb,WAFsC,EAGtCC,WAHsC,KAInC;AACHY,EAAAA,YAAY,CAACX,OAAb,CAAsBC,EAAD,IAAQ;AAC3B,UAAMW,SAAS,GAAGnB,gBAAgB,CAACU,QAAjB,CAA0B;AAC1CC,MAAAA,QAAQ,EAAE;AAAEE,QAAAA,GAAG,EAAEL;AAAP,OADgC;AAE1CY,MAAAA,IAAI,EAAE,CAFoC;AAG1CC,MAAAA,gBAAgB,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAHwB,KAA1B,CAAlB;AAKArB,IAAAA,2BAA2B,CAAC;AAAEI,MAAAA,WAAF;AAAec,MAAAA,SAAf;AAA0BH,MAAAA,IAAI,EAAEV;AAAhC,KAAD,CAA3B;AACD,GAPD;AAQD,CAbM","sourcesContent":["import PropertyService from '../../properties/server/PropertyService';\nimport PromotionService from '../../promotions/server/PromotionService';\n\nimport {\n  promotionInviteNotification,\n  propertyInviteNotification,\n} from './slackNotifications';\n\nexport const sendPropertyInvitations = (\n  propertyIds,\n  currentUser,\n  invitedUser,\n) => {\n  propertyIds.forEach((id) => {\n    const property = PropertyService.fetchOne({\n      $filters: { $or: [{ _id: id }, { externalId: id }] },\n      address1: 1,\n    });\n    propertyInviteNotification({\n      currentUser,\n      user: invitedUser,\n      property,\n    });\n  });\n};\n\nexport const sendPromotionInvitations = (\n  promotionIds,\n  currentUser,\n  invitedUser,\n) => {\n  promotionIds.forEach((id) => {\n    const promotion = PromotionService.fetchOne({\n      $filters: { _id: id },\n      name: 1,\n      assignedEmployee: { email: 1 },\n    });\n    promotionInviteNotification({ currentUser, promotion, user: invitedUser });\n  });\n};\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/slack/server/slackNotificationHelpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/slack/server/slackNotificationHelpers.js"}},"code":"module.export({\n  sendPropertyInvitations: () => sendPropertyInvitations,\n  sendPromotionInvitations: () => sendPromotionInvitations\n});\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 0);\nlet PromotionService;\nmodule.link(\"../../promotions/server/PromotionService\", {\n  default(v) {\n    PromotionService = v;\n  }\n\n}, 1);\nlet promotionInviteNotification, propertyInviteNotification;\nmodule.link(\"./slackNotifications\", {\n  promotionInviteNotification(v) {\n    promotionInviteNotification = v;\n  },\n\n  propertyInviteNotification(v) {\n    propertyInviteNotification = v;\n  }\n\n}, 2);\n\nconst sendPropertyInvitations = (propertyIds, currentUser, invitedUser) => {\n  propertyIds.forEach(id => {\n    const property = PropertyService.fetchOne({\n      $filters: {\n        $or: [{\n          _id: id\n        }, {\n          externalId: id\n        }]\n      },\n      address1: 1\n    });\n    propertyInviteNotification({\n      currentUser,\n      user: invitedUser,\n      property\n    });\n  });\n};\n\nconst sendPromotionInvitations = (promotionIds, currentUser, invitedUser) => {\n  promotionIds.forEach(id => {\n    const promotion = PromotionService.fetchOne({\n      $filters: {\n        _id: id\n      },\n      name: 1,\n      assignedEmployee: {\n        email: 1\n      }\n    });\n    promotionInviteNotification({\n      currentUser,\n      promotion,\n      user: invitedUser\n    });\n  });\n};","map":{"version":3,"sources":["imports/core/api/slack/server/slackNotificationHelpers.js"],"names":["PropertyService","sendPropertyInvitations","propertyIds","id","property","$filters","$or","_id","externalId","address1","propertyInviteNotification","user","sendPromotionInvitations","promotionIds","promotion","name","assignedEmployee","email","promotionInviteNotification","invitedUser"],"mappings":"AAAA,MAAA,CAAOA,MAAP,CAAOA;AAAP,EAAA,uBAAA,EAAA,MAAA,uBAAOA;AAAP,EAAA,wBAAA,EAAA,MAAA;AAAOA,CAAP;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0CAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,2BAAA,EAAA,0BAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,EAAA;AAAA,EAAA,2BAAA,CAAA,CAAA,EAAA;AAAA,IAAA,2BAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,0BAAA,CAAA,CAAA,EAAA;AAAA,IAAA,0BAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAQO,MAAMC,uBAAuB,GAAG,CAAA,WAAA,EAAA,WAAA,EAAA,WAAA,KAIlC;AACHC,EAAAA,WAAW,CAAXA,OAAAA,CAAqBC,EAAD,IAAQ;AAC1B,UAAMC,QAAQ,GAAG,eAAe,CAAf,QAAA,CAAyB;AACxCC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAC;AAAEC,UAAAA,GAAG,EAAEJ;AAAP,SAAD,EAAc;AAAEK,UAAAA,UAAU,EAAEL;AAAd,SAAd;AAAP,OAD8B;AAExCM,MAAAA,QAAQ,EAAE;AAF8B,KAAzB,CAAjB;AAIAC,IAAAA,0BAA0B,CAAC;AAAA,MAAA,WAAA;AAEzBC,MAAAA,IAAI,EAFqB,WAAA;AAGzBP,MAAAA;AAHyB,KAAD,CAA1BM;AALFR,GAAAA;AALK,CAAA;;AAkBA,MAAMU,wBAAwB,GAAG,CAAA,YAAA,EAAA,WAAA,EAAA,WAAA,KAInC;AACHC,EAAAA,YAAY,CAAZA,OAAAA,CAAsBV,EAAD,IAAQ;AAC3B,UAAMW,SAAS,GAAG,gBAAgB,CAAhB,QAAA,CAA0B;AAC1CT,MAAAA,QAAQ,EAAE;AAAEE,QAAAA,GAAG,EAAEJ;AAAP,OADgC;AAE1CY,MAAAA,IAAI,EAFsC,CAAA;AAG1CC,MAAAA,gBAAgB,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAHwB,KAA1B,CAAlB;AAKAC,IAAAA,2BAA2B,CAAC;AAAA,MAAA,WAAA;AAAA,MAAA,SAAA;AAA0BP,MAAAA,IAAI,EAAEQ;AAAhC,KAAD,CAA3BD;AANFL,GAAAA;AALK,CAAA","sourcesContent":["import PropertyService from '../../properties/server/PropertyService';\nimport PromotionService from '../../promotions/server/PromotionService';\n\nimport {\n  promotionInviteNotification,\n  propertyInviteNotification,\n} from './slackNotifications';\n\nexport const sendPropertyInvitations = (\n  propertyIds,\n  currentUser,\n  invitedUser,\n) => {\n  propertyIds.forEach((id) => {\n    const property = PropertyService.fetchOne({\n      $filters: { $or: [{ _id: id }, { externalId: id }] },\n      address1: 1,\n    });\n    propertyInviteNotification({\n      currentUser,\n      user: invitedUser,\n      property,\n    });\n  });\n};\n\nexport const sendPromotionInvitations = (\n  promotionIds,\n  currentUser,\n  invitedUser,\n) => {\n  promotionIds.forEach((id) => {\n    const promotion = PromotionService.fetchOne({\n      $filters: { _id: id },\n      name: 1,\n      assignedEmployee: { email: 1 },\n    });\n    promotionInviteNotification({ currentUser, promotion, user: invitedUser });\n  });\n};\n"]},"sourceType":"script","hash":"45119b1e7d97cb5f845bbb9f44b83868e3050bd9"}
