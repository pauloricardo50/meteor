{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/sharedHooks.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/helpers/sharedHooks.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/sharedHooks.js","inputSourceMap":{"version":3,"sources":["imports/core/api/helpers/sharedHooks.js"],"names":["Mongo","getOldCustomDocuments","additionalDocuments","initialDocuments","conditionalDocuments","filter","document","requiredByAdmin","undefined","some","id","map","keepInitialDocuments","otherInitialDocuments","otherAdditionalDocuments","getDocumentsToAdd","doc","reduce","docs","condition","find","additionalDocument","additionalDocumentsHook","collection","userId","documents","length","oldCustomDocuments","documentsToAdd","Collection","get","direct","update","_id","$set"],"mappings":"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","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nconst getOldCustomDocuments = ({\n  additionalDocuments,\n  initialDocuments,\n  conditionalDocuments,\n}) =>\n  additionalDocuments\n    .filter(document =>\n      document.requiredByAdmin === undefined\n        && !initialDocuments.some(({ id }) => id === document.id)\n        && !conditionalDocuments.some(({ id }) => id === document.id))\n    .map(document => ({ ...document, requiredByAdmin: true }));\n\nconst keepInitialDocuments = ({ additionalDocuments, initialDocuments }) =>\n  additionalDocuments.filter(document =>\n    initialDocuments.some(({ id }) => id === document.id && document.requiredByAdmin === undefined));\n\nconst otherInitialDocuments = ({ initialDocuments, additionalDocuments }) =>\n  initialDocuments.filter(({ id }) => !additionalDocuments.some(document => document.id === id));\n\nconst otherAdditionalDocuments = ({ additionalDocuments }) =>\n  additionalDocuments.filter(({ requiredByAdmin }) => requiredByAdmin !== undefined);\n\nconst getDocumentsToAdd = ({\n  additionalDocuments,\n  conditionalDocuments,\n  doc,\n}) =>\n  conditionalDocuments.reduce((docs, { id, condition }) => {\n    const document = additionalDocuments.find(additionalDocument => additionalDocument.id === id);\n\n    if (document && document.requiredByAdmin !== undefined) {\n      return docs;\n    }\n    // Insert conditional documents\n    if (condition({ doc })) {\n      return [...docs, { id }];\n    }\n\n    return docs;\n  }, []);\n\nexport const additionalDocumentsHook = ({\n  collection,\n  initialDocuments,\n  conditionalDocuments,\n}) => (userId, doc) => {\n  let documents = [];\n  const { additionalDocuments = [] } = doc || {};\n  if (additionalDocuments.length === 0) {\n    documents = initialDocuments;\n  } else {\n    const oldCustomDocuments = getOldCustomDocuments({\n      additionalDocuments,\n      initialDocuments,\n      conditionalDocuments,\n    });\n\n    documents = keepInitialDocuments({ additionalDocuments, initialDocuments });\n\n    documents = [\n      ...otherInitialDocuments({ initialDocuments, additionalDocuments }),\n      ...oldCustomDocuments,\n      ...documents,\n      ...otherAdditionalDocuments({ additionalDocuments }),\n    ];\n  }\n\n  // Check conditional documents\n  const documentsToAdd = getDocumentsToAdd({\n    additionalDocuments,\n    conditionalDocuments,\n    doc,\n  });\n\n  documents = [...documents, ...documentsToAdd];\n\n  // Update document\n  Mongo.Collection.get(collection).direct.update(doc._id, {\n    $set: { additionalDocuments: documents },\n  });\n};\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/sharedHooks.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/helpers/sharedHooks.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  additionalDocumentsHook: () => additionalDocumentsHook\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\n\nconst getOldCustomDocuments = ({\n  additionalDocuments,\n  initialDocuments,\n  conditionalDocuments\n}) => additionalDocuments.filter(document => document.requiredByAdmin === undefined && !initialDocuments.some(({\n  id\n}) => id === document.id) && !conditionalDocuments.some(({\n  id\n}) => id === document.id)).map(document => (0, _objectSpread2.default)({}, document, {\n  requiredByAdmin: true\n}));\n\nconst keepInitialDocuments = ({\n  additionalDocuments,\n  initialDocuments\n}) => additionalDocuments.filter(document => initialDocuments.some(({\n  id\n}) => id === document.id && document.requiredByAdmin === undefined));\n\nconst otherInitialDocuments = ({\n  initialDocuments,\n  additionalDocuments\n}) => initialDocuments.filter(({\n  id\n}) => !additionalDocuments.some(document => document.id === id));\n\nconst otherAdditionalDocuments = ({\n  additionalDocuments\n}) => additionalDocuments.filter(({\n  requiredByAdmin\n}) => requiredByAdmin !== undefined);\n\nconst getDocumentsToAdd = ({\n  additionalDocuments,\n  conditionalDocuments,\n  doc\n}) => conditionalDocuments.reduce((docs, {\n  id,\n  condition\n}) => {\n  const document = additionalDocuments.find(additionalDocument => additionalDocument.id === id);\n\n  if (document && document.requiredByAdmin !== undefined) {\n    return docs;\n  } // Insert conditional documents\n\n\n  if (condition({\n    doc\n  })) {\n    return [...docs, {\n      id\n    }];\n  }\n\n  return docs;\n}, []);\n\nconst additionalDocumentsHook = ({\n  collection,\n  initialDocuments,\n  conditionalDocuments\n}) => (userId, doc) => {\n  let documents = [];\n  const {\n    additionalDocuments = []\n  } = doc || {};\n\n  if (additionalDocuments.length === 0) {\n    documents = initialDocuments;\n  } else {\n    const oldCustomDocuments = getOldCustomDocuments({\n      additionalDocuments,\n      initialDocuments,\n      conditionalDocuments\n    });\n    documents = keepInitialDocuments({\n      additionalDocuments,\n      initialDocuments\n    });\n    documents = [...otherInitialDocuments({\n      initialDocuments,\n      additionalDocuments\n    }), ...oldCustomDocuments, ...documents, ...otherAdditionalDocuments({\n      additionalDocuments\n    })];\n  } // Check conditional documents\n\n\n  const documentsToAdd = getDocumentsToAdd({\n    additionalDocuments,\n    conditionalDocuments,\n    doc\n  });\n  documents = [...documents, ...documentsToAdd]; // Update document\n\n  Mongo.Collection.get(collection).direct.update(doc._id, {\n    $set: {\n      additionalDocuments: documents\n    }\n  });\n};","map":{"version":3,"sources":["imports/core/api/helpers/sharedHooks.js"],"names":["getOldCustomDocuments","conditionalDocuments","document","id","requiredByAdmin","keepInitialDocuments","initialDocuments","additionalDocuments","otherInitialDocuments","otherAdditionalDocuments","getDocumentsToAdd","doc","condition","additionalDocument","additionalDocumentsHook","documents","oldCustomDocuments","documentsToAdd","Mongo","$set"],"mappings":"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","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nconst getOldCustomDocuments = ({\n  additionalDocuments,\n  initialDocuments,\n  conditionalDocuments,\n}) =>\n  additionalDocuments\n    .filter(document =>\n      document.requiredByAdmin === undefined\n        && !initialDocuments.some(({ id }) => id === document.id)\n        && !conditionalDocuments.some(({ id }) => id === document.id))\n    .map(document => ({ ...document, requiredByAdmin: true }));\n\nconst keepInitialDocuments = ({ additionalDocuments, initialDocuments }) =>\n  additionalDocuments.filter(document =>\n    initialDocuments.some(({ id }) => id === document.id && document.requiredByAdmin === undefined));\n\nconst otherInitialDocuments = ({ initialDocuments, additionalDocuments }) =>\n  initialDocuments.filter(({ id }) => !additionalDocuments.some(document => document.id === id));\n\nconst otherAdditionalDocuments = ({ additionalDocuments }) =>\n  additionalDocuments.filter(({ requiredByAdmin }) => requiredByAdmin !== undefined);\n\nconst getDocumentsToAdd = ({\n  additionalDocuments,\n  conditionalDocuments,\n  doc,\n}) =>\n  conditionalDocuments.reduce((docs, { id, condition }) => {\n    const document = additionalDocuments.find(additionalDocument => additionalDocument.id === id);\n\n    if (document && document.requiredByAdmin !== undefined) {\n      return docs;\n    }\n    // Insert conditional documents\n    if (condition({ doc })) {\n      return [...docs, { id }];\n    }\n\n    return docs;\n  }, []);\n\nexport const additionalDocumentsHook = ({\n  collection,\n  initialDocuments,\n  conditionalDocuments,\n}) => (userId, doc) => {\n  let documents = [];\n  const { additionalDocuments = [] } = doc || {};\n  if (additionalDocuments.length === 0) {\n    documents = initialDocuments;\n  } else {\n    const oldCustomDocuments = getOldCustomDocuments({\n      additionalDocuments,\n      initialDocuments,\n      conditionalDocuments,\n    });\n\n    documents = keepInitialDocuments({ additionalDocuments, initialDocuments });\n\n    documents = [\n      ...otherInitialDocuments({ initialDocuments, additionalDocuments }),\n      ...oldCustomDocuments,\n      ...documents,\n      ...otherAdditionalDocuments({ additionalDocuments }),\n    ];\n  }\n\n  // Check conditional documents\n  const documentsToAdd = getDocumentsToAdd({\n    additionalDocuments,\n    conditionalDocuments,\n    doc,\n  });\n\n  documents = [...documents, ...documentsToAdd];\n\n  // Update document\n  Mongo.Collection.get(collection).direct.update(doc._id, {\n    $set: { additionalDocuments: documents },\n  });\n};\n"]},"sourceType":"script","hash":"ca47c681dfdd6a868a913efbb9f7f46284e17d81"}
