{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/ContactButton/test/client/ContactButton.spec.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/ContactButton/test/client/ContactButton.spec.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/ContactButton/test/client/ContactButton.spec.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/ContactButton/test/client/ContactButton.spec.jsx"],"names":["expect","getMountedComponent","employees","ContactButton","withContactButtonProvider","describe","props","component","Component","beforeEach","reset","open","staff","it","find","hasClass","to","equal","simulate","text","name","contains","phoneNumber","email"],"mappings":"AAAA;;AACA;AACA,SAASA,MAAT,QAAuB,MAAvB;AACA,SAASC,mBAAT;AACA,OAAOC,SAAP;AAEA,SAASC,aAAT;AACA,SAASC,yBAAT;AAEAC,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC9B,MAAIC,KAAJ;;AACA,QAAMC,SAAS,GAAG,MAChBN,mBAAmB,CAAC;AAClBO,IAAAA,SAAS,EAAEJ,yBAAyB,CAACD,aAAD,CADlB;AAElBG,IAAAA;AAFkB,GAAD,CADrB;;AAMAG,EAAAA,UAAU,CAAC,MAAM;AACfR,IAAAA,mBAAmB,CAACS,KAApB;AACAJ,IAAAA,KAAK,GAAG;AACNK,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,KAAK,EAAEV,SAAS,CAAC,CAAD;AAFV,KAAR;AAID,GANS,CAAV;AAQAW,EAAAA,EAAE,CAAC,4BAAD,EAA+B,MAAM;AACrCb,IAAAA,MAAM,CAACO,SAAS,GACbO,IADI,CACC,yBADD,EAEJC,QAFI,CAEK,QAFL,CAAD,CAAN,CAEuBC,EAFvB,CAE0BC,KAF1B,CAEgC,IAFhC;AAGD,GAJC,CAAF;AAMAJ,EAAAA,EAAE,CAAC,4BAAD,EAA+B,MAAM;AACrCb,IAAAA,MAAM,CAACO,SAAS,GACbO,IADI,CACC,yBADD,EAEJC,QAFI,CAEK,QAFL,CAAD,CAAN,CAEuBC,EAFvB,CAE0BC,KAF1B,CAEgC,IAFhC;AAIAV,IAAAA,SAAS,GACNO,IADH,CACQ,QADR,EAEGI,QAFH,CAEY,OAFZ;AAIAlB,IAAAA,MAAM,CAACO,SAAS,GACbO,IADI,CACC,yBADD,EAEJC,QAFI,CAEK,QAFL,CAAD,CAAN,CAEuBC,EAFvB,CAE0BC,KAF1B,CAEgC,KAFhC;AAGD,GAZC,CAAF;AAcAZ,EAAAA,QAAQ,CAAC,qBAAD,EAAwB,MAAM;AACpCQ,IAAAA,EAAE,CAAC,MAAD,EAAS,MAAM;AACfb,MAAAA,MAAM,CAACO,SAAS,GACbO,IADI,CACC,aADD,EAEJK,IAFI,EAAD,CAAN,CAEWH,EAFX,CAEcC,KAFd,CAEoBf,SAAS,CAAC,CAAD,CAAT,CAAakB,IAFjC;AAGD,KAJC,CAAF;AAMAP,IAAAA,EAAE,CAAC,aAAD,EAAgB,MAAM;AACtBb,MAAAA,MAAM,CAACO,SAAS,GAAGc,QAAZ,CAAqBnB,SAAS,CAAC,CAAD,CAAT,CAAaoB,WAAlC,CAAD,CAAN,CAAuDN,EAAvD,CAA0DC,KAA1D,CAAgE,IAAhE;AACD,KAFC,CAAF;AAIAJ,IAAAA,EAAE,CAAC,MAAD,EAAS,MAAM;AACfb,MAAAA,MAAM,CAACO,SAAS,GAAGc,QAAZ,CAAqBnB,SAAS,CAAC,CAAD,CAAT,CAAaqB,KAAlC,CAAD,CAAN,CAAiDP,EAAjD,CAAoDC,KAApD,CAA0D,IAA1D;AACD,KAFC,CAAF;AAGD,GAdO,CAAR;AAeD,CAnDO,CAAR","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { getMountedComponent } from '../../../../utils/testHelpers';\nimport employees from '../../../../arrays/epotekEmployees';\n\nimport { ContactButton } from '../../ContactButton';\nimport { withContactButtonProvider } from '../../ContactButtonContext';\n\ndescribe('ContactButton', () => {\n  let props;\n  const component = () =>\n    getMountedComponent({\n      Component: withContactButtonProvider(ContactButton),\n      props,\n    });\n\n  beforeEach(() => {\n    getMountedComponent.reset();\n    props = {\n      open: false,\n      staff: employees[0],\n    };\n  });\n\n  it('renders the closed version', () => {\n    expect(component()\n      .find('.contact-button-overlay')\n      .hasClass('closed')).to.equal(true);\n  });\n\n  it('renders the opened version', () => {\n    expect(component()\n      .find('.contact-button-overlay')\n      .hasClass('closed')).to.equal(true);\n\n    component()\n      .find('button')\n      .simulate('click');\n\n    expect(component()\n      .find('.contact-button-overlay')\n      .hasClass('closed')).to.equal(false);\n  });\n\n  describe('renders staff value', () => {\n    it('name', () => {\n      expect(component()\n        .find('.staff-name')\n        .text()).to.equal(employees[0].name);\n    });\n\n    it('phoneNumber', () => {\n      expect(component().contains(employees[0].phoneNumber)).to.equal(true);\n    });\n\n    it('mail', () => {\n      expect(component().contains(employees[0].email)).to.equal(true);\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/ContactButton/test/client/ContactButton.spec.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/ContactButton/test/client/ContactButton.spec.jsx"}},"code":"var expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 0);\nvar getMountedComponent;\nmodule.link(\"../../../../utils/testHelpers\", {\n  getMountedComponent: function (v) {\n    getMountedComponent = v;\n  }\n}, 1);\nvar employees;\nmodule.link(\"../../../../arrays/epotekEmployees\", {\n  \"default\": function (v) {\n    employees = v;\n  }\n}, 2);\nvar ContactButton;\nmodule.link(\"../../ContactButton\", {\n  ContactButton: function (v) {\n    ContactButton = v;\n  }\n}, 3);\nvar withContactButtonProvider;\nmodule.link(\"../../ContactButtonContext\", {\n  withContactButtonProvider: function (v) {\n    withContactButtonProvider = v;\n  }\n}, 4);\ndescribe('ContactButton', function () {\n  var props;\n\n  var component = function () {\n    return getMountedComponent({\n      Component: withContactButtonProvider(ContactButton),\n      props: props\n    });\n  };\n\n  beforeEach(function () {\n    getMountedComponent.reset();\n    props = {\n      open: false,\n      staff: employees[0]\n    };\n  });\n  it('renders the closed version', function () {\n    expect(component().find('.contact-button-overlay').hasClass('closed')).to.equal(true);\n  });\n  it('renders the opened version', function () {\n    expect(component().find('.contact-button-overlay').hasClass('closed')).to.equal(true);\n    component().find('button').simulate('click');\n    expect(component().find('.contact-button-overlay').hasClass('closed')).to.equal(false);\n  });\n  describe('renders staff value', function () {\n    it('name', function () {\n      expect(component().find('.staff-name').text()).to.equal(employees[0].name);\n    });\n    it('phoneNumber', function () {\n      expect(component().contains(employees[0].phoneNumber)).to.equal(true);\n    });\n    it('mail', function () {\n      expect(component().contains(employees[0].email)).to.equal(true);\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/components/ContactButton/test/client/ContactButton.spec.jsx"],"names":["describe","component","getMountedComponent","Component","withContactButtonProvider","props","beforeEach","open","staff","employees","it","expect"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { getMountedComponent } from '../../../../utils/testHelpers';\nimport employees from '../../../../arrays/epotekEmployees';\n\nimport { ContactButton } from '../../ContactButton';\nimport { withContactButtonProvider } from '../../ContactButtonContext';\n\ndescribe('ContactButton', () => {\n  let props;\n  const component = () =>\n    getMountedComponent({\n      Component: withContactButtonProvider(ContactButton),\n      props,\n    });\n\n  beforeEach(() => {\n    getMountedComponent.reset();\n    props = {\n      open: false,\n      staff: employees[0],\n    };\n  });\n\n  it('renders the closed version', () => {\n    expect(component()\n      .find('.contact-button-overlay')\n      .hasClass('closed')).to.equal(true);\n  });\n\n  it('renders the opened version', () => {\n    expect(component()\n      .find('.contact-button-overlay')\n      .hasClass('closed')).to.equal(true);\n\n    component()\n      .find('button')\n      .simulate('click');\n\n    expect(component()\n      .find('.contact-button-overlay')\n      .hasClass('closed')).to.equal(false);\n  });\n\n  describe('renders staff value', () => {\n    it('name', () => {\n      expect(component()\n        .find('.staff-name')\n        .text()).to.equal(employees[0].name);\n    });\n\n    it('phoneNumber', () => {\n      expect(component().contains(employees[0].phoneNumber)).to.equal(true);\n    });\n\n    it('mail', () => {\n      expect(component().contains(employees[0].email)).to.equal(true);\n    });\n  });\n});\n"]},"sourceType":"script","hash":"d3e76b57b5e607d74c6234e258826ddf8491f47f"}
