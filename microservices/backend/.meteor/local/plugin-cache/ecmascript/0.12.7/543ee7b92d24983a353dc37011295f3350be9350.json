{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/Selector.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/utils/Calculator/Selector.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/Selector.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/Calculator/Selector.js"],"names":["createSelector","EMPTY_STRUCTURE","withSelector","SuperClass","makeSelectStructureKey","selectProperty","loan","structureId","propertyId","structure","promotionOptionId","selectStructure","property","properties","find","_id","promotionOption","formatPromotionOptionIntoProperty","promotionOptions","selectOffer","offers","offerId","offer","undefined","structures","id","selectedStructure","makeSelectPropertyKey","key","Function","selectStructureKey","selectPropertyKey","selectPropertyValue","userLoan","structurePropertyValue","selectPropertyWork","selectLoanValue"],"mappings":";;AAAA;AACA,SAASA,cAAT,QAA+B,UAA/B;AAEA,SAASC,eAAT;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,UAAU,GAAG,MAAM,EAApB;AAAA;;AAAA,iBAC1B,cAAcA,UAAd,CAAyB;AAAA;AAAA;;AAAA,2CAoHT,KAAKC,sBAAL,CAA4B,aAA5B,CApHS;AAAA;;AACvBC,IAAAA,cAAc,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAwB,EAAzB,EAA6B;AACzC,UAAIC,UAAU,GAAGF,IAAI,CAACG,SAAL,IAAkBH,IAAI,CAACG,SAAL,CAAeD,UAAlD;AACA,UAAIE,iBAAiB,GAAGJ,IAAI,CAACG,SAAL,IAAkBH,IAAI,CAACG,SAAL,CAAeC,iBAAzD;AACA,YAAMD,SAAS,GAAG,KAAKE,eAAL,CAAqB;AAAEL,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAArB,CAAlB;;AAEA,UAAI,CAACA,WAAL,EAAkB;AAChB,YAAIE,SAAS,CAACG,QAAd,EAAwB;AACtB,iBAAOH,SAAS,CAACG,QAAjB;AACD;;AACD,YAAIH,SAAS,CAACD,UAAd,EAA0B;AACxB,iBAAOF,IAAI,CAACO,UAAL,CAAgBC,IAAhB,CAAqB,CAAC;AAAEC,YAAAA;AAAF,WAAD,KAAaA,GAAG,KAAKN,SAAS,CAACD,UAApD,CAAP;AACD;;AACD,YAAIC,SAAS,CAACO,eAAd,EAA+B;AAC7B,iBAAO,KAAKC,iCAAL,CAAuCR,SAAS,CAACO,eAAjD,CAAP;AACD;;AACD,YAAIP,SAAS,CAACC,iBAAd,EAAiC;AAC/B,gBAAMM,eAAe,GAAGV,IAAI,CAACY,gBAAL,CAAsBJ,IAAtB,CAA2B,CAAC;AAAEC,YAAAA;AAAF,WAAD,KAAaA,GAAG,KAAKN,SAAS,CAACC,iBAA1D,CAAxB;AACA,iBAAO,KAAKO,iCAAL,CAAuCD,eAAvC,CAAP;AACD;;AAED,eAAO,EAAP;AACD;;AAED,UAAIT,WAAJ,EAAiB;AACfC,QAAAA,UAAU,GAAGC,SAAS,CAACD,UAAvB;AACAE,QAAAA,iBAAiB,GAAGD,SAAS,CAACC,iBAA9B;AACD;;AAED,UAAIF,UAAJ,EAAgB;AACd,eAAOF,IAAI,CAACO,UAAL,CAAgBC,IAAhB,CAAqB,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAaA,GAAG,KAAKP,UAA1C,CAAP;AACD;;AAED,UAAIE,iBAAJ,EAAuB;AACrB,eAAO,KAAKO,iCAAL,CAAuCX,IAAI,CAACY,gBAAL,CAAsBJ,IAAtB,CAA2B,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAaA,GAAG,KAAKL,iBAAhD,CAAvC,CAAP;AACD;;AAED,aAAO,EAAP;AACD;;AAEDS,IAAAA,WAAW,CAAC;AAAEb,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,EAAwB;AACjC,YAAM;AAAEa,QAAAA,MAAM,GAAG;AAAX,UAAkBd,IAAxB;AACA,YAAM;AAAEe,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAqB,KAAKX,eAAL,CAAqB;AAAEL,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAArB,CAA3B;;AAEA,UAAIe,KAAJ,EAAW;AACT,eAAOA,KAAP;AACD;;AAED,UAAI,CAACD,OAAL,EAAc;AACZ,eAAOE,SAAP;AACD;;AAED,aAAOH,MAAM,CAACN,IAAP,CAAY,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAaA,GAAG,KAAKM,OAAjC,CAAP;AACD;;AAEDV,IAAAA,eAAe,CAAC;AAAEL,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAwB,EAAzB,CAA4B,EAAE,EAA9B,CAAiC;AAC9C,UAAIA,WAAJ,EAAiB;AACf,eAAOD,IAAI,CAACkB,UAAL,CAAgBV,IAAhB,CAAqB,CAAC;AAAEW,UAAAA;AAAF,SAAD,KAAYA,EAAE,KAAKlB,WAAxC,CAAP;AACD;;AACD,aACED,IAAI,CAACG,SAAL,IACGH,IAAI,CAACkB,UAAL,CAAgBV,IAAhB,CAAqB,CAAC;AAAEW,QAAAA;AAAF,OAAD,KAAYA,EAAE,KAAKnB,IAAI,CAACoB,iBAA7C,CADH,IAEGzB,eAHL;AAKD;;AAED0B,IAAAA,qBAAqB,CAACC,GAAG,EAAE,MAAN,CAAa,EAAEC,QAAf,CAAwB;AAC3C,aAAO7B,cAAc,CACnB,KAAKK,cADc,EAEnBO,QAAQ,IAAIA,QAAQ,IAAIA,QAAQ,CAACgB,GAAD,CAFb,CAArB;AAID;;AAEDE,IAAAA,kBAAkB,CAAC;AAAExB,MAAAA,IAAF;AAAQC,MAAAA,WAAR;AAAqBqB,MAAAA;AAArB,KAAD,EAA6B;AAC7C,aAAO,KAAKxB,sBAAL,CAA4BwB,GAA5B,EAAiC;AAAEtB,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAjC,CAAP;AACD;;AAEDwB,IAAAA,iBAAiB,CAAC;AAAEzB,MAAAA,IAAF;AAAQC,MAAAA,WAAR;AAAqBqB,MAAAA;AAArB,KAAD,EAA6B;AAC5C,aAAO,KAAKD,qBAAL,CAA2BC,GAA3B,EAAgC;AAAEtB,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAhC,CAAP;AACD;;AAEDH,IAAAA,sBAAsB,CAACwB,GAAG,EAAE,MAAN,CAAa,EAAEC,QAAf,CAAwB;AAC5C,aAAO7B,cAAc,CACnB,KAAKW,eADc,EAEnBF,SAAS,IAAIA,SAAS,IAAIA,SAAS,CAACmB,GAAD,CAFhB,CAArB;AAID;;AAEDI,IAAAA,mBAAmB,CAAC;AAClB1B,MAAAA,IADkB;AAElBC,MAAAA;AAFkB,KAGnB,EAAE;AAAED,MAAAA,IAAI,EAAE2B;AAAR,KAHiB,GAGI,EAHL,CAGQ,EAAE,MAHV,CAGiB;AAClC,YAAMC,sBAAsB,GAAG,KAAKJ,kBAAL,CAAwB;AACrDF,QAAAA,GAAG,EAAE,eADgD;AAErDtB,QAAAA,IAFqD;AAGrDC,QAAAA;AAHqD,OAAxB,CAA/B;AAKA,aACE2B,sBAAsB,IACnB,KAAKH,iBAAL,CAAuB;AAAEzB,QAAAA,IAAF;AAAQC,QAAAA,WAAR;AAAqBqB,QAAAA,GAAG,EAAE;AAA1B,OAAvB,CADH,IAEG,KAAKG,iBAAL,CAAuB;AAAEzB,QAAAA,IAAF;AAAQC,QAAAA,WAAR;AAAqBqB,QAAAA,GAAG,EAAE;AAA1B,OAAvB,CAHL;AAKD;;AAEDO,IAAAA,kBAAkB,CAAC;AAAE7B,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAwB,EAAzB,CAA4B,EAAE,MAA9B,CAAqC;AACrD,aAAO,KAAKuB,kBAAL,CAAwB;AAC7BxB,QAAAA,IAD6B;AAE7BC,QAAAA,WAF6B;AAG7BqB,QAAAA,GAAG,EAAE;AAHwB,OAAxB,CAAP;AAKD;;AAEDQ,IAAAA,eAAe,CAAC;AAAE9B,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAwB,EAAzB,CAA4B,EAAE,MAA9B,CAAqC;AAClD,aAAO,KAAKuB,kBAAL,CAAwB;AAAExB,QAAAA,IAAF;AAAQC,QAAAA,WAAR;AAAqBqB,QAAAA,GAAG,EAAE;AAA1B,OAAxB,CAAP;AACD;;AAlHsB,GADC;AAAA,CAArB","sourcesContent":["// @flow\nimport { createSelector } from 'reselect';\n\nimport { EMPTY_STRUCTURE } from '../../api/loans/loanConstants';\n\nexport const withSelector = (SuperClass = class {}) =>\n  class extends SuperClass {\n    selectProperty({ loan, structureId } = {}) {\n      let propertyId = loan.structure && loan.structure.propertyId;\n      let promotionOptionId = loan.structure && loan.structure.promotionOptionId;\n      const structure = this.selectStructure({ loan, structureId });\n\n      if (!structureId) {\n        if (structure.property) {\n          return structure.property;\n        }\n        if (structure.propertyId) {\n          return loan.properties.find(({ _id }) => _id === structure.propertyId);\n        }\n        if (structure.promotionOption) {\n          return this.formatPromotionOptionIntoProperty(structure.promotionOption);\n        }\n        if (structure.promotionOptionId) {\n          const promotionOption = loan.promotionOptions.find(({ _id }) => _id === structure.promotionOptionId);\n          return this.formatPromotionOptionIntoProperty(promotionOption);\n        }\n\n        return {};\n      }\n\n      if (structureId) {\n        propertyId = structure.propertyId;\n        promotionOptionId = structure.promotionOptionId;\n      }\n\n      if (propertyId) {\n        return loan.properties.find(({ _id }) => _id === propertyId);\n      }\n\n      if (promotionOptionId) {\n        return this.formatPromotionOptionIntoProperty(loan.promotionOptions.find(({ _id }) => _id === promotionOptionId));\n      }\n\n      return {};\n    }\n\n    selectOffer({ loan, structureId }) {\n      const { offers = [] } = loan;\n      const { offerId, offer } = this.selectStructure({ loan, structureId });\n\n      if (offer) {\n        return offer;\n      }\n\n      if (!offerId) {\n        return undefined;\n      }\n\n      return offers.find(({ _id }) => _id === offerId);\n    }\n\n    selectStructure({ loan, structureId } = {}): {} {\n      if (structureId) {\n        return loan.structures.find(({ id }) => id === structureId);\n      }\n      return (\n        loan.structure\n        || loan.structures.find(({ id }) => id === loan.selectedStructure)\n        || EMPTY_STRUCTURE\n      );\n    }\n\n    makeSelectPropertyKey(key: string): Function {\n      return createSelector(\n        this.selectProperty,\n        property => property && property[key],\n      );\n    }\n\n    selectStructureKey({ loan, structureId, key }) {\n      return this.makeSelectStructureKey(key)({ loan, structureId });\n    }\n\n    selectPropertyKey({ loan, structureId, key }) {\n      return this.makeSelectPropertyKey(key)({ loan, structureId });\n    }\n\n    makeSelectStructureKey(key: string): Function {\n      return createSelector(\n        this.selectStructure,\n        structure => structure && structure[key],\n      );\n    }\n\n    selectPropertyValue({\n      loan,\n      structureId,\n    }: { loan: userLoan } = {}): number {\n      const structurePropertyValue = this.selectStructureKey({\n        key: 'propertyValue',\n        loan,\n        structureId,\n      });\n      return (\n        structurePropertyValue\n        || this.selectPropertyKey({ loan, structureId, key: 'totalValue' })\n        || this.selectPropertyKey({ loan, structureId, key: 'value' })\n      );\n    }\n\n    selectPropertyWork({ loan, structureId } = {}): number {\n      return this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'propertyWork',\n      });\n    }\n\n    selectLoanValue({ loan, structureId } = {}): number {\n      return this.selectStructureKey({ loan, structureId, key: 'wantedLoan' });\n    }\n\n    getCashUsed = this.makeSelectStructureKey('fortuneUsed');\n  };\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/Selector.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/Calculator/Selector.js"}},"code":"module.export({\n  withSelector: () => withSelector\n});\nlet createSelector;\nmodule.link(\"reselect\", {\n  createSelector(v) {\n    createSelector = v;\n  }\n\n}, 0);\nlet EMPTY_STRUCTURE;\nmodule.link(\"../../api/loans/loanConstants\", {\n  EMPTY_STRUCTURE(v) {\n    EMPTY_STRUCTURE = v;\n  }\n\n}, 1);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst withSelector = function () {\n  let SuperClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : class {};\n\n  var _temp;\n\n  return _temp = class extends SuperClass {\n    constructor() {\n      super(...arguments);\n\n      _defineProperty(this, \"getCashUsed\", this.makeSelectStructureKey('fortuneUsed'));\n    }\n\n    selectProperty() {\n      let {\n        loan,\n        structureId\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      let propertyId = loan.structure && loan.structure.propertyId;\n      let promotionOptionId = loan.structure && loan.structure.promotionOptionId;\n      const structure = this.selectStructure({\n        loan,\n        structureId\n      });\n\n      if (!structureId) {\n        if (structure.property) {\n          return structure.property;\n        }\n\n        if (structure.propertyId) {\n          return loan.properties.find((_ref) => {\n            let {\n              _id\n            } = _ref;\n            return _id === structure.propertyId;\n          });\n        }\n\n        if (structure.promotionOption) {\n          return this.formatPromotionOptionIntoProperty(structure.promotionOption);\n        }\n\n        if (structure.promotionOptionId) {\n          const promotionOption = loan.promotionOptions.find((_ref2) => {\n            let {\n              _id\n            } = _ref2;\n            return _id === structure.promotionOptionId;\n          });\n          return this.formatPromotionOptionIntoProperty(promotionOption);\n        }\n\n        return {};\n      }\n\n      if (structureId) {\n        propertyId = structure.propertyId;\n        promotionOptionId = structure.promotionOptionId;\n      }\n\n      if (propertyId) {\n        return loan.properties.find((_ref3) => {\n          let {\n            _id\n          } = _ref3;\n          return _id === propertyId;\n        });\n      }\n\n      if (promotionOptionId) {\n        return this.formatPromotionOptionIntoProperty(loan.promotionOptions.find((_ref4) => {\n          let {\n            _id\n          } = _ref4;\n          return _id === promotionOptionId;\n        }));\n      }\n\n      return {};\n    }\n\n    selectOffer(_ref5) {\n      let {\n        loan,\n        structureId\n      } = _ref5;\n      const {\n        offers = []\n      } = loan;\n      const {\n        offerId,\n        offer\n      } = this.selectStructure({\n        loan,\n        structureId\n      });\n\n      if (offer) {\n        return offer;\n      }\n\n      if (!offerId) {\n        return undefined;\n      }\n\n      return offers.find((_ref6) => {\n        let {\n          _id\n        } = _ref6;\n        return _id === offerId;\n      });\n    }\n\n    selectStructure() {\n      let {\n        loan,\n        structureId\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (structureId) {\n        return loan.structures.find((_ref7) => {\n          let {\n            id\n          } = _ref7;\n          return id === structureId;\n        });\n      }\n\n      return loan.structure || loan.structures.find((_ref8) => {\n        let {\n          id\n        } = _ref8;\n        return id === loan.selectedStructure;\n      }) || EMPTY_STRUCTURE;\n    }\n\n    makeSelectPropertyKey(key) {\n      return createSelector(this.selectProperty, property => property && property[key]);\n    }\n\n    selectStructureKey(_ref9) {\n      let {\n        loan,\n        structureId,\n        key\n      } = _ref9;\n      return this.makeSelectStructureKey(key)({\n        loan,\n        structureId\n      });\n    }\n\n    selectPropertyKey(_ref10) {\n      let {\n        loan,\n        structureId,\n        key\n      } = _ref10;\n      return this.makeSelectPropertyKey(key)({\n        loan,\n        structureId\n      });\n    }\n\n    makeSelectStructureKey(key) {\n      return createSelector(this.selectStructure, structure => structure && structure[key]);\n    }\n\n    selectPropertyValue() {\n      let {\n        loan,\n        structureId\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const structurePropertyValue = this.selectStructureKey({\n        key: 'propertyValue',\n        loan,\n        structureId\n      });\n      return structurePropertyValue || this.selectPropertyKey({\n        loan,\n        structureId,\n        key: 'totalValue'\n      }) || this.selectPropertyKey({\n        loan,\n        structureId,\n        key: 'value'\n      });\n    }\n\n    selectPropertyWork() {\n      let {\n        loan,\n        structureId\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'propertyWork'\n      });\n    }\n\n    selectLoanValue() {\n      let {\n        loan,\n        structureId\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'wantedLoan'\n      });\n    }\n\n  }, _temp;\n};","map":{"version":3,"sources":["imports/core/utils/Calculator/Selector.js"],"names":["withSelector","SuperClass","selectProperty","structureId","propertyId","loan","promotionOptionId","structure","_id","promotionOption","selectOffer","offers","offer","selectStructure","id","makeSelectPropertyKey","createSelector","property","selectStructureKey","key","selectPropertyKey","makeSelectStructureKey","selectPropertyValue","structurePropertyValue","selectPropertyWork","selectLoanValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKO,MAAMA,YAAY,GAAG,YAAA;AAAA,MAACC,UAAD,uEAAc,MAAd,EAAA;;AAAA,MAAA,KAAA;;AAAA,SAAA,KAAA,GAC1B,cAAA,UAAA,CAAyB;AAAA,IAAA,WAAA,GAAA;AAAA,YAAA,YAAA;;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAoHT,KAAA,sBAAA,CApHS,aAoHT,CApHS,CAAA;AAAA;;AACvBC,IAAAA,cAAc,GAA6B;AAAA,UAA5B;AAAA,QAAA,IAAA;AAAQC,QAAAA;AAAR,OAA4B,uEAA7B,EAA6B;AACzC,UAAIC,UAAU,GAAGC,IAAI,CAAJA,SAAAA,IAAkBA,IAAI,CAAJA,SAAAA,CAAnC,UAAA;AACA,UAAIC,iBAAiB,GAAGD,IAAI,CAAJA,SAAAA,IAAkBA,IAAI,CAAJA,SAAAA,CAA1C,iBAAA;AACA,YAAME,SAAS,GAAG,KAAA,eAAA,CAAqB;AAAA,QAAA,IAAA;AAAQJ,QAAAA;AAAR,OAArB,CAAlB;;AAEA,UAAI,CAAJ,WAAA,EAAkB;AAChB,YAAII,SAAS,CAAb,QAAA,EAAwB;AACtB,iBAAOA,SAAS,CAAhB,QAAA;AACD;;AACD,YAAIA,SAAS,CAAb,UAAA,EAA0B;AACxB,iBAAOF,IAAI,CAAJA,UAAAA,CAAAA,IAAAA,CAAqB;AAAA,gBAAC;AAAEG,cAAAA;AAAF,aAAD;AAAA,mBAAaA,GAAG,KAAKD,SAAS,CAA1D,UAA4B;AAAA,WAArBF,CAAP;AACD;;AACD,YAAIE,SAAS,CAAb,eAAA,EAA+B;AAC7B,iBAAO,KAAA,iCAAA,CAAuCA,SAAS,CAAvD,eAAO,CAAP;AACD;;AACD,YAAIA,SAAS,CAAb,iBAAA,EAAiC;AAC/B,gBAAME,eAAe,GAAGJ,IAAI,CAAJA,gBAAAA,CAAAA,IAAAA,CAA2B;AAAA,gBAAC;AAAEG,cAAAA;AAAF,aAAD;AAAA,mBAAaA,GAAG,KAAKD,SAAS,CAAjF,iBAAmD;AAAA,WAA3BF,CAAxB;AACA,iBAAO,KAAA,iCAAA,CAAP,eAAO,CAAP;AACD;;AAED,eAAA,EAAA;AACD;;AAED,UAAA,WAAA,EAAiB;AACfD,QAAAA,UAAU,GAAGG,SAAS,CAAtBH,UAAAA;AACAE,QAAAA,iBAAiB,GAAGC,SAAS,CAA7BD,iBAAAA;AACD;;AAED,UAAA,UAAA,EAAgB;AACd,eAAOD,IAAI,CAAJA,UAAAA,CAAAA,IAAAA,CAAqB;AAAA,cAAC;AAAEG,YAAAA;AAAF,WAAD;AAAA,iBAAaA,GAAG,KAA5C,UAA4B;AAAA,SAArBH,CAAP;AACD;;AAED,UAAA,iBAAA,EAAuB;AACrB,eAAO,KAAA,iCAAA,CAAuC,IAAI,CAAJ,gBAAA,CAAA,IAAA,CAA2B;AAAA,cAAC;AAAEG,YAAAA;AAAF,WAAD;AAAA,iBAAaA,GAAG,KAAzF,iBAAyE;AAAA,SAA3B,CAAvC,CAAP;AACD;;AAED,aAAA,EAAA;AACD;;AAEDE,IAAAA,WAAW,QAAwB;AAAA,UAAvB;AAAA,QAAA,IAAA;AAAQP,QAAAA;AAAR,OAAuB;AACjC,YAAM;AAAEQ,QAAAA,MAAM,GAAG;AAAX,UAAN,IAAA;AACA,YAAM;AAAA,QAAA,OAAA;AAAWC,QAAAA;AAAX,UAAqB,KAAA,eAAA,CAAqB;AAAA,QAAA,IAAA;AAAQT,QAAAA;AAAR,OAArB,CAA3B;;AAEA,UAAA,KAAA,EAAW;AACT,eAAA,KAAA;AACD;;AAED,UAAI,CAAJ,OAAA,EAAc;AACZ,eAAA,SAAA;AACD;;AAED,aAAOQ,MAAM,CAANA,IAAAA,CAAY;AAAA,YAAC;AAAEH,UAAAA;AAAF,SAAD;AAAA,eAAaA,GAAG,KAAnC,OAAmB;AAAA,OAAZG,CAAP;AACD;;AAEDE,IAAAA,eAAe,GAAiC;AAAA,UAAhC;AAAA,QAAA,IAAA;AAAQV,QAAAA;AAAR,OAAgC,uEAAjC,EAAiC;;AAC9C,UAAA,WAAA,EAAiB;AACf,eAAOE,IAAI,CAAJA,UAAAA,CAAAA,IAAAA,CAAqB;AAAA,cAAC;AAAES,YAAAA;AAAF,WAAD;AAAA,iBAAYA,EAAE,KAA1C,WAA4B;AAAA,SAArBT,CAAP;AACD;;AACD,aACEA,IAAI,CAAJA,SAAAA,IACGA,IAAI,CAAJA,UAAAA,CAAAA,IAAAA,CAAqB;AAAA,YAAC;AAAES,UAAAA;AAAF,SAAD;AAAA,eAAYA,EAAE,KAAKT,IAAI,CAD/CA,iBACwB;AAAA,OAArBA,CADHA,IADF,eAAA;AAKD;;AAEDU,IAAAA,qBAAqB,CAAA,GAAA,EAAwB;AAC3C,aAAOC,cAAc,CACnB,KADmB,cAAA,EAEnBC,QAAQ,IAAIA,QAAQ,IAAIA,QAAQ,CAFlC,GAEkC,CAFb,CAArB;AAID;;AAEDC,IAAAA,kBAAkB,QAA6B;AAAA,UAA5B;AAAA,QAAA,IAAA;AAAA,QAAA,WAAA;AAAqBC,QAAAA;AAArB,OAA4B;AAC7C,aAAO,KAAA,sBAAA,CAAA,GAAA,EAAiC;AAAA,QAAA,IAAA;AAAQhB,QAAAA;AAAR,OAAjC,CAAP;AACD;;AAEDiB,IAAAA,iBAAiB,SAA6B;AAAA,UAA5B;AAAA,QAAA,IAAA;AAAA,QAAA,WAAA;AAAqBD,QAAAA;AAArB,OAA4B;AAC5C,aAAO,KAAA,qBAAA,CAAA,GAAA,EAAgC;AAAA,QAAA,IAAA;AAAQhB,QAAAA;AAAR,OAAhC,CAAP;AACD;;AAEDkB,IAAAA,sBAAsB,CAAA,GAAA,EAAwB;AAC5C,aAAOL,cAAc,CACnB,KADmB,eAAA,EAEnBT,SAAS,IAAIA,SAAS,IAAIA,SAAS,CAFrC,GAEqC,CAFhB,CAArB;AAID;;AAEDe,IAAAA,mBAAmB,GAGiB;AAAA,UAHhB;AAAA,QAAA,IAAA;AAElBnB,QAAAA;AAFkB,OAGgB,uEAHjB,EAGiB;AAClC,YAAMoB,sBAAsB,GAAG,KAAA,kBAAA,CAAwB;AACrDJ,QAAAA,GAAG,EADkD,eAAA;AAAA,QAAA,IAAA;AAGrDhB,QAAAA;AAHqD,OAAxB,CAA/B;AAKA,aACE,sBAAsB,IACnB,KAAA,iBAAA,CAAuB;AAAA,QAAA,IAAA;AAAA,QAAA,WAAA;AAAqBgB,QAAAA,GAAG,EAAE;AAA1B,OAAvB,CADH,IAEG,KAAA,iBAAA,CAAuB;AAAA,QAAA,IAAA;AAAA,QAAA,WAAA;AAAqBA,QAAAA,GAAG,EAAE;AAA1B,OAAvB,CAHL;AAKD;;AAEDK,IAAAA,kBAAkB,GAAqC;AAAA,UAApC;AAAA,QAAA,IAAA;AAAQrB,QAAAA;AAAR,OAAoC,uEAArC,EAAqC;AACrD,aAAO,KAAA,kBAAA,CAAwB;AAAA,QAAA,IAAA;AAAA,QAAA,WAAA;AAG7BgB,QAAAA,GAAG,EAAE;AAHwB,OAAxB,CAAP;AAKD;;AAEDM,IAAAA,eAAe,GAAqC;AAAA,UAApC;AAAA,QAAA,IAAA;AAAQtB,QAAAA;AAAR,OAAoC,uEAArC,EAAqC;AAClD,aAAO,KAAA,kBAAA,CAAwB;AAAA,QAAA,IAAA;AAAA,QAAA,WAAA;AAAqBgB,QAAAA,GAAG,EAAE;AAA1B,OAAxB,CAAP;AACD;;AAlHsB,GADC,EAAA,KAAA;AAArB,CAAA","sourcesContent":["// @flow\nimport { createSelector } from 'reselect';\n\nimport { EMPTY_STRUCTURE } from '../../api/loans/loanConstants';\n\nexport const withSelector = (SuperClass = class {}) =>\n  class extends SuperClass {\n    selectProperty({ loan, structureId } = {}) {\n      let propertyId = loan.structure && loan.structure.propertyId;\n      let promotionOptionId = loan.structure && loan.structure.promotionOptionId;\n      const structure = this.selectStructure({ loan, structureId });\n\n      if (!structureId) {\n        if (structure.property) {\n          return structure.property;\n        }\n        if (structure.propertyId) {\n          return loan.properties.find(({ _id }) => _id === structure.propertyId);\n        }\n        if (structure.promotionOption) {\n          return this.formatPromotionOptionIntoProperty(structure.promotionOption);\n        }\n        if (structure.promotionOptionId) {\n          const promotionOption = loan.promotionOptions.find(({ _id }) => _id === structure.promotionOptionId);\n          return this.formatPromotionOptionIntoProperty(promotionOption);\n        }\n\n        return {};\n      }\n\n      if (structureId) {\n        propertyId = structure.propertyId;\n        promotionOptionId = structure.promotionOptionId;\n      }\n\n      if (propertyId) {\n        return loan.properties.find(({ _id }) => _id === propertyId);\n      }\n\n      if (promotionOptionId) {\n        return this.formatPromotionOptionIntoProperty(loan.promotionOptions.find(({ _id }) => _id === promotionOptionId));\n      }\n\n      return {};\n    }\n\n    selectOffer({ loan, structureId }) {\n      const { offers = [] } = loan;\n      const { offerId, offer } = this.selectStructure({ loan, structureId });\n\n      if (offer) {\n        return offer;\n      }\n\n      if (!offerId) {\n        return undefined;\n      }\n\n      return offers.find(({ _id }) => _id === offerId);\n    }\n\n    selectStructure({ loan, structureId } = {}): {} {\n      if (structureId) {\n        return loan.structures.find(({ id }) => id === structureId);\n      }\n      return (\n        loan.structure\n        || loan.structures.find(({ id }) => id === loan.selectedStructure)\n        || EMPTY_STRUCTURE\n      );\n    }\n\n    makeSelectPropertyKey(key: string): Function {\n      return createSelector(\n        this.selectProperty,\n        property => property && property[key],\n      );\n    }\n\n    selectStructureKey({ loan, structureId, key }) {\n      return this.makeSelectStructureKey(key)({ loan, structureId });\n    }\n\n    selectPropertyKey({ loan, structureId, key }) {\n      return this.makeSelectPropertyKey(key)({ loan, structureId });\n    }\n\n    makeSelectStructureKey(key: string): Function {\n      return createSelector(\n        this.selectStructure,\n        structure => structure && structure[key],\n      );\n    }\n\n    selectPropertyValue({\n      loan,\n      structureId,\n    }: { loan: userLoan } = {}): number {\n      const structurePropertyValue = this.selectStructureKey({\n        key: 'propertyValue',\n        loan,\n        structureId,\n      });\n      return (\n        structurePropertyValue\n        || this.selectPropertyKey({ loan, structureId, key: 'totalValue' })\n        || this.selectPropertyKey({ loan, structureId, key: 'value' })\n      );\n    }\n\n    selectPropertyWork({ loan, structureId } = {}): number {\n      return this.selectStructureKey({\n        loan,\n        structureId,\n        key: 'propertyWork',\n      });\n    }\n\n    selectLoanValue({ loan, structureId } = {}): number {\n      return this.selectStructureKey({ loan, structureId, key: 'wantedLoan' });\n    }\n\n    getCashUsed = this.makeSelectStructureKey('fortuneUsed');\n  };\n"]},"sourceType":"script","hash":"543ee7b92d24983a353dc37011295f3350be9350"}
