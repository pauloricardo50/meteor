{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/AutoFormDialog.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/AutoForm2/AutoFormDialog.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/AutoFormDialog.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/AutoForm2/AutoFormDialog.jsx"],"names":["React","Component","compose","withProps","withState","pick","MuiDialog","DialogTitle","Button","AutoForm","makeCustomAutoField","CustomAutoField","AutoFormDialogContent","AutoFormDialogActions","AutoFormDialogProps","schema","Object","model","onSubmit","Function","buttonProps","setOpen","description","Node","title","important","Boolean","autoFieldProps","opened","renderAdditionalActions","children","triggerComponent","emptyDialog","noButton","getAutoFormProps","props","AutoFormDialog","constructor","autoField","render","disableActions","layout","maxWidth","otherProps","schemaKeys","_schemaKeys","handleOpen","event","stopPropagation","preventDefault","handleClose","e","onSuccessMessage","args","then","default","message","success"],"mappings":"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","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport { compose, withProps, withState } from 'recompose';\nimport pick from 'lodash/pick';\nimport MuiDialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Button from '../Button';\nimport AutoForm from './AutoForm';\nimport { makeCustomAutoField, CustomAutoField } from './AutoFormComponents';\nimport AutoFormDialogContent from './AutoFormDialogContent';\nimport AutoFormDialogActions from './AutoFormDialogActions';\n\ntype AutoFormDialogProps = {\n  schema: Object,\n  model?: Object,\n  onSubmit: Function,\n  buttonProps: Object,\n  setOpen: Function,\n  description?: React.Node,\n  title?: React.Node,\n  important?: Boolean,\n  autoFieldProps?: Object,\n  opened: Boolean,\n  renderAdditionalActions?: Function,\n  children?: React.Node,\n  triggerComponent?: Function,\n  emptyDialog?: Boolean,\n  noButton?: Boolean,\n};\n\nconst getAutoFormProps = props =>\n  pick(props, [\n    'model',\n    'schema',\n    'onSubmit',\n    'placeholder',\n    'showInlineError',\n  ]);\n\nexport class AutoFormDialog extends Component<AutoFormDialogProps> {\n  constructor(props) {\n    super(props);\n    const { autoFieldProps } = props;\n\n    if (autoFieldProps) {\n      this.autoField = makeCustomAutoField(autoFieldProps);\n    } else {\n      this.autoField = CustomAutoField;\n    }\n  }\n\n  render() {\n    const {\n      autoFieldProps,\n      buttonProps,\n      children,\n      description,\n      emptyDialog,\n      important,\n      noButton,\n      onSubmit,\n      opened,\n      renderAdditionalActions,\n      setOpen,\n      title,\n      triggerComponent,\n      disableActions = false,\n      layout,\n      maxWidth = 'sm',\n      ...otherProps\n    } = this.props;\n    const schemaKeys = this.props.schema._schemaKeys;\n\n    const handleOpen = (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n      setOpen(true);\n    };\n    const handleClose = (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n      setOpen(false);\n    };\n\n    return (\n      <>\n        {triggerComponent\n          ? triggerComponent(handleOpen)\n          : !noButton && <Button {...buttonProps} onClick={handleOpen} />}\n        <MuiDialog\n          disableBackdropClick={important}\n          disableEscapeKeyDown={important}\n          onClose={handleClose}\n          className=\"autoform-dialog\"\n          maxWidth={maxWidth}\n          fullWidth\n          onClick={(e) => {\n            // Clicking on the dialog should not trigger a table row below it..\n            e.stopPropagation();\n          }}\n          {...otherProps}\n        >\n          {title && <DialogTitle>{title}</DialogTitle>}\n          <AutoForm {...getAutoFormProps(this.props)}>\n            <AutoFormDialogContent\n              autoField={this.autoField}\n              description={description}\n              emptyDialog={emptyDialog}\n              handleClose={handleClose}\n              onSubmit={onSubmit}\n              layout={layout}\n              schemaKeys={schemaKeys}\n            >\n              {children}\n            </AutoFormDialogContent>\n            <AutoFormDialogActions\n              handleClose={handleClose}\n              onSubmit={onSubmit}\n              renderAdditionalActions={renderAdditionalActions}\n              disableActions={disableActions}\n            />\n          </AutoForm>\n        </MuiDialog>\n      </>\n    );\n  }\n}\n\nexport default compose(\n  withState('open', 'setOpen', false),\n  withProps(({ onSubmit, setOpen, onSuccessMessage }) => ({\n    onSubmit: (...args) =>\n      onSubmit(...args).then(() => {\n        setOpen(false);\n        import('../../utils/message').then(({ default: message }) => {\n          message.success(\n            onSuccessMessage\n              ? typeof onSuccessMessage === 'function'\n                ? onSuccessMessage(...args)\n                : onSuccessMessage\n              : \"C'est dans la boite !\",\n            5,\n          );\n        });\n      }),\n  })),\n)(AutoFormDialog);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/AutoFormDialog.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/AutoForm2/AutoFormDialog.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  AutoFormDialog: () => AutoFormDialog\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet compose, withProps, withState;\nmodule.link(\"recompose\", {\n  compose(v) {\n    compose = v;\n  },\n\n  withProps(v) {\n    withProps = v;\n  },\n\n  withState(v) {\n    withState = v;\n  }\n\n}, 1);\nlet pick;\nmodule.link(\"lodash/pick\", {\n  default(v) {\n    pick = v;\n  }\n\n}, 2);\nlet MuiDialog;\nmodule.link(\"@material-ui/core/Dialog\", {\n  default(v) {\n    MuiDialog = v;\n  }\n\n}, 3);\nlet DialogTitle;\nmodule.link(\"@material-ui/core/DialogTitle\", {\n  default(v) {\n    DialogTitle = v;\n  }\n\n}, 4);\nlet Button;\nmodule.link(\"../Button\", {\n  default(v) {\n    Button = v;\n  }\n\n}, 5);\nlet AutoForm;\nmodule.link(\"./AutoForm\", {\n  default(v) {\n    AutoForm = v;\n  }\n\n}, 6);\nlet makeCustomAutoField, CustomAutoField;\nmodule.link(\"./AutoFormComponents\", {\n  makeCustomAutoField(v) {\n    makeCustomAutoField = v;\n  },\n\n  CustomAutoField(v) {\n    CustomAutoField = v;\n  }\n\n}, 7);\nlet AutoFormDialogContent;\nmodule.link(\"./AutoFormDialogContent\", {\n  default(v) {\n    AutoFormDialogContent = v;\n  }\n\n}, 8);\nlet AutoFormDialogActions;\nmodule.link(\"./AutoFormDialogActions\", {\n  default(v) {\n    AutoFormDialogActions = v;\n  }\n\n}, 9);\n\nconst getAutoFormProps = props => pick(props, ['model', 'schema', 'onSubmit', 'placeholder', 'showInlineError']);\n\nclass AutoFormDialog extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      autoFieldProps\n    } = props;\n\n    if (autoFieldProps) {\n      this.autoField = makeCustomAutoField(autoFieldProps);\n    } else {\n      this.autoField = CustomAutoField;\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      autoFieldProps,\n      buttonProps,\n      children,\n      description,\n      emptyDialog,\n      important,\n      noButton,\n      onSubmit,\n      opened,\n      renderAdditionalActions,\n      setOpen,\n      title,\n      triggerComponent,\n      disableActions = false,\n      layout,\n      maxWidth = 'sm'\n    } = _this$props,\n          otherProps = (0, _objectWithoutProperties2.default)(_this$props, [\"autoFieldProps\", \"buttonProps\", \"children\", \"description\", \"emptyDialog\", \"important\", \"noButton\", \"onSubmit\", \"opened\", \"renderAdditionalActions\", \"setOpen\", \"title\", \"triggerComponent\", \"disableActions\", \"layout\", \"maxWidth\"]);\n    const schemaKeys = this.props.schema._schemaKeys;\n\n    const handleOpen = event => {\n      event.stopPropagation();\n      event.preventDefault();\n      setOpen(true);\n    };\n\n    const handleClose = event => {\n      event.stopPropagation();\n      event.preventDefault();\n      setOpen(false);\n    };\n\n    return React.createElement(React.Fragment, null, triggerComponent ? triggerComponent(handleOpen) : !noButton && React.createElement(Button, (0, _extends2.default)({}, buttonProps, {\n      onClick: handleOpen\n    })), React.createElement(MuiDialog, (0, _extends2.default)({\n      disableBackdropClick: important,\n      disableEscapeKeyDown: important,\n      onClose: handleClose,\n      className: \"autoform-dialog\",\n      maxWidth: maxWidth,\n      fullWidth: true,\n      onClick: e => {\n        // Clicking on the dialog should not trigger a table row below it..\n        e.stopPropagation();\n      }\n    }, otherProps), title && React.createElement(DialogTitle, null, title), React.createElement(AutoForm, getAutoFormProps(this.props), React.createElement(AutoFormDialogContent, {\n      autoField: this.autoField,\n      description: description,\n      emptyDialog: emptyDialog,\n      handleClose: handleClose,\n      onSubmit: onSubmit,\n      layout: layout,\n      schemaKeys: schemaKeys\n    }, children), React.createElement(AutoFormDialogActions, {\n      handleClose: handleClose,\n      onSubmit: onSubmit,\n      renderAdditionalActions: renderAdditionalActions,\n      disableActions: disableActions\n    }))));\n  }\n\n}\n\nmodule.exportDefault(compose(withState('open', 'setOpen', false), withProps((_ref) => {\n  let {\n    onSubmit,\n    setOpen,\n    onSuccessMessage\n  } = _ref;\n  return {\n    onSubmit: function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return onSubmit(...args).then(() => {\n        setOpen(false);\n        module.dynamicImport(\"../../utils/message\").then((_ref2) => {\n          let {\n            default: message\n          } = _ref2;\n          message.success(onSuccessMessage ? typeof onSuccessMessage === 'function' ? onSuccessMessage(...args) : onSuccessMessage : \"C'est dans la boite !\", 5);\n        });\n      });\n    }\n  };\n}))(AutoFormDialog));","map":{"version":3,"sources":["imports/core/components/AutoForm2/AutoFormDialog.jsx"],"names":["getAutoFormProps","props","pick","constructor","autoFieldProps","makeCustomAutoField","render","disableActions","maxWidth","otherProps","schemaKeys","handleOpen","event","setOpen","handleClose","triggerComponent","e","title","withState","withProps","onSuccessMessage","onSubmit","default","message"],"mappings":"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","sourcesContent":["// @flow\nimport React, { Component } from 'react';\nimport { compose, withProps, withState } from 'recompose';\nimport pick from 'lodash/pick';\nimport MuiDialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Button from '../Button';\nimport AutoForm from './AutoForm';\nimport { makeCustomAutoField, CustomAutoField } from './AutoFormComponents';\nimport AutoFormDialogContent from './AutoFormDialogContent';\nimport AutoFormDialogActions from './AutoFormDialogActions';\n\ntype AutoFormDialogProps = {\n  schema: Object,\n  model?: Object,\n  onSubmit: Function,\n  buttonProps: Object,\n  setOpen: Function,\n  description?: React.Node,\n  title?: React.Node,\n  important?: Boolean,\n  autoFieldProps?: Object,\n  opened: Boolean,\n  renderAdditionalActions?: Function,\n  children?: React.Node,\n  triggerComponent?: Function,\n  emptyDialog?: Boolean,\n  noButton?: Boolean,\n};\n\nconst getAutoFormProps = props =>\n  pick(props, [\n    'model',\n    'schema',\n    'onSubmit',\n    'placeholder',\n    'showInlineError',\n  ]);\n\nexport class AutoFormDialog extends Component<AutoFormDialogProps> {\n  constructor(props) {\n    super(props);\n    const { autoFieldProps } = props;\n\n    if (autoFieldProps) {\n      this.autoField = makeCustomAutoField(autoFieldProps);\n    } else {\n      this.autoField = CustomAutoField;\n    }\n  }\n\n  render() {\n    const {\n      autoFieldProps,\n      buttonProps,\n      children,\n      description,\n      emptyDialog,\n      important,\n      noButton,\n      onSubmit,\n      opened,\n      renderAdditionalActions,\n      setOpen,\n      title,\n      triggerComponent,\n      disableActions = false,\n      layout,\n      maxWidth = 'sm',\n      ...otherProps\n    } = this.props;\n    const schemaKeys = this.props.schema._schemaKeys;\n\n    const handleOpen = (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n      setOpen(true);\n    };\n    const handleClose = (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n      setOpen(false);\n    };\n\n    return (\n      <>\n        {triggerComponent\n          ? triggerComponent(handleOpen)\n          : !noButton && <Button {...buttonProps} onClick={handleOpen} />}\n        <MuiDialog\n          disableBackdropClick={important}\n          disableEscapeKeyDown={important}\n          onClose={handleClose}\n          className=\"autoform-dialog\"\n          maxWidth={maxWidth}\n          fullWidth\n          onClick={(e) => {\n            // Clicking on the dialog should not trigger a table row below it..\n            e.stopPropagation();\n          }}\n          {...otherProps}\n        >\n          {title && <DialogTitle>{title}</DialogTitle>}\n          <AutoForm {...getAutoFormProps(this.props)}>\n            <AutoFormDialogContent\n              autoField={this.autoField}\n              description={description}\n              emptyDialog={emptyDialog}\n              handleClose={handleClose}\n              onSubmit={onSubmit}\n              layout={layout}\n              schemaKeys={schemaKeys}\n            >\n              {children}\n            </AutoFormDialogContent>\n            <AutoFormDialogActions\n              handleClose={handleClose}\n              onSubmit={onSubmit}\n              renderAdditionalActions={renderAdditionalActions}\n              disableActions={disableActions}\n            />\n          </AutoForm>\n        </MuiDialog>\n      </>\n    );\n  }\n}\n\nexport default compose(\n  withState('open', 'setOpen', false),\n  withProps(({ onSubmit, setOpen, onSuccessMessage }) => ({\n    onSubmit: (...args) =>\n      onSubmit(...args).then(() => {\n        setOpen(false);\n        import('../../utils/message').then(({ default: message }) => {\n          message.success(\n            onSuccessMessage\n              ? typeof onSuccessMessage === 'function'\n                ? onSuccessMessage(...args)\n                : onSuccessMessage\n              : \"C'est dans la boite !\",\n            5,\n          );\n        });\n      }),\n  })),\n)(AutoFormDialog);\n"]},"sourceType":"script","hash":"12d46b0daed2ea0304f304050717eb74aa6c8a45"}
