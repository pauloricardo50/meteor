{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/properties/propertyClientHelper.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/properties/propertyClientHelper.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/properties/propertyClientHelper.js","inputSourceMap":{"version":3,"sources":["imports/core/api/properties/propertyClientHelper.js"],"names":["PROPERTY_REFERRED_BY_TYPE","getCurrentUserPermissionsForProProperty","currentUser","properties","propertyId","property","find","_id","$metadata","permissions","getProPropertyCustomerOwnerType","referredByUser","referredByOrganisation","userId","organisations","USER","organisationIds","map","organisationUserIds","reduce","userIds","users","includes","ORGANISATION","ANY","hasNoPermissions","Object","keys","length","shouldAnonymizeWhenReferredByTypeUser","shouldHideForPropertyStatus","referredBy","shouldAnonymizeWhenReferredByTypeOrganisation","shouldAnonymize","customerOwnerType","propertyStatus","displayCustomerNames","forPropertyStatus"],"mappings":"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","sourcesContent":["import { PROPERTY_REFERRED_BY_TYPE } from './propertyConstants';\n\nexport const getCurrentUserPermissionsForProProperty = ({\n  currentUser: { properties = [] } = {},\n  propertyId,\n}) => {\n  const property = properties.find(({ _id }) => _id === propertyId);\n  return property && property.$metadata.permissions;\n};\n\nexport const getProPropertyCustomerOwnerType = ({\n  referredByUser = {},\n  referredByOrganisation = {},\n  currentUser = {},\n}) => {\n  const { _id: userId, organisations = [] } = currentUser;\n\n  // Is referred by nobody\n  if (!referredByUser) {\n    return null;\n  }\n\n  // Is referred by user\n  if (referredByUser._id === userId) {\n    return PROPERTY_REFERRED_BY_TYPE.USER;\n  }\n\n  const organisationIds = organisations.map(({ _id }) => _id);\n  const organisationUserIds = organisations.reduce(\n    (userIds, { users = [] }) => [...userIds, ...users.map(({ _id }) => _id)],\n    [],\n  );\n\n  // Is referred by organisation\n  if (\n    organisationIds.includes(referredByOrganisation._id)\n    // User is not referred by organisation, but by a user in current user's organisations\n    || organisationUserIds.includes(referredByUser._id)\n  ) {\n    return PROPERTY_REFERRED_BY_TYPE.ORGANISATION;\n  }\n\n  // Is referred by someone else\n  return PROPERTY_REFERRED_BY_TYPE.ANY;\n};\n\nconst hasNoPermissions = ({ permissions }) => !Object.keys(permissions).length;\n\nconst shouldAnonymizeWhenReferredByTypeUser = ({\n  shouldHideForPropertyStatus,\n  referredBy,\n}) =>\n  shouldHideForPropertyStatus\n  || ![\n    PROPERTY_REFERRED_BY_TYPE.USER,\n    PROPERTY_REFERRED_BY_TYPE.ORGANISATION,\n  ].includes(referredBy);\n\nconst shouldAnonymizeWhenReferredByTypeOrganisation = ({\n  shouldHideForPropertyStatus,\n  referredBy,\n}) =>\n  shouldHideForPropertyStatus\n  || referredBy !== PROPERTY_REFERRED_BY_TYPE.ORGANISATION;\n\nexport const shouldAnonymize = ({\n  customerOwnerType,\n  permissions = {},\n  propertyStatus,\n}) => {\n  // Never anonymize if referred by user\n  if (customerOwnerType === PROPERTY_REFERRED_BY_TYPE.USER) {\n    return false;\n  }\n\n  if (hasNoPermissions({ permissions })) {\n    return true;\n  }\n\n  const { displayCustomerNames } = permissions;\n\n  if (displayCustomerNames === false || !customerOwnerType) {\n    return true;\n  }\n\n  const shouldHideForPropertyStatus = !!propertyStatus\n    && !displayCustomerNames.forPropertyStatus.includes(propertyStatus);\n\n  if (displayCustomerNames.referredBy === PROPERTY_REFERRED_BY_TYPE.ANY) {\n    return shouldHideForPropertyStatus;\n  }\n\n  switch (customerOwnerType) {\n  case PROPERTY_REFERRED_BY_TYPE.ORGANISATION:\n    return shouldAnonymizeWhenReferredByTypeOrganisation({\n      shouldHideForPropertyStatus,\n      referredBy: displayCustomerNames.referredBy,\n    });\n  default:\n    return true;\n  }\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/properties/propertyClientHelper.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/properties/propertyClientHelper.js"}},"code":"module.export({\n  getCurrentUserPermissionsForProProperty: () => getCurrentUserPermissionsForProProperty,\n  getProPropertyCustomerOwnerType: () => getProPropertyCustomerOwnerType,\n  shouldAnonymize: () => shouldAnonymize\n});\nlet PROPERTY_REFERRED_BY_TYPE;\nmodule.link(\"./propertyConstants\", {\n  PROPERTY_REFERRED_BY_TYPE(v) {\n    PROPERTY_REFERRED_BY_TYPE = v;\n  }\n\n}, 0);\n\nconst getCurrentUserPermissionsForProProperty = ({\n  currentUser: {\n    properties = []\n  } = {},\n  propertyId\n}) => {\n  const property = properties.find(({\n    _id\n  }) => _id === propertyId);\n  return property && property.$metadata.permissions;\n};\n\nconst getProPropertyCustomerOwnerType = ({\n  referredByUser = {},\n  referredByOrganisation = {},\n  currentUser = {}\n}) => {\n  const {\n    _id: userId,\n    organisations = []\n  } = currentUser; // Is referred by nobody\n\n  if (!referredByUser) {\n    return null;\n  } // Is referred by user\n\n\n  if (referredByUser._id === userId) {\n    return PROPERTY_REFERRED_BY_TYPE.USER;\n  }\n\n  const organisationIds = organisations.map(({\n    _id\n  }) => _id);\n  const organisationUserIds = organisations.reduce((userIds, {\n    users = []\n  }) => [...userIds, ...users.map(({\n    _id\n  }) => _id)], []); // Is referred by organisation\n\n  if (organisationIds.includes(referredByOrganisation._id) // User is not referred by organisation, but by a user in current user's organisations\n  || organisationUserIds.includes(referredByUser._id)) {\n    return PROPERTY_REFERRED_BY_TYPE.ORGANISATION;\n  } // Is referred by someone else\n\n\n  return PROPERTY_REFERRED_BY_TYPE.ANY;\n};\n\nconst hasNoPermissions = ({\n  permissions\n}) => !Object.keys(permissions).length;\n\nconst shouldAnonymizeWhenReferredByTypeUser = ({\n  shouldHideForPropertyStatus,\n  referredBy\n}) => shouldHideForPropertyStatus || ![PROPERTY_REFERRED_BY_TYPE.USER, PROPERTY_REFERRED_BY_TYPE.ORGANISATION].includes(referredBy);\n\nconst shouldAnonymizeWhenReferredByTypeOrganisation = ({\n  shouldHideForPropertyStatus,\n  referredBy\n}) => shouldHideForPropertyStatus || referredBy !== PROPERTY_REFERRED_BY_TYPE.ORGANISATION;\n\nconst shouldAnonymize = ({\n  customerOwnerType,\n  permissions = {},\n  propertyStatus\n}) => {\n  // Never anonymize if referred by user\n  if (customerOwnerType === PROPERTY_REFERRED_BY_TYPE.USER) {\n    return false;\n  }\n\n  if (hasNoPermissions({\n    permissions\n  })) {\n    return true;\n  }\n\n  const {\n    displayCustomerNames\n  } = permissions;\n\n  if (displayCustomerNames === false || !customerOwnerType) {\n    return true;\n  }\n\n  const shouldHideForPropertyStatus = !!propertyStatus && !displayCustomerNames.forPropertyStatus.includes(propertyStatus);\n\n  if (displayCustomerNames.referredBy === PROPERTY_REFERRED_BY_TYPE.ANY) {\n    return shouldHideForPropertyStatus;\n  }\n\n  switch (customerOwnerType) {\n    case PROPERTY_REFERRED_BY_TYPE.ORGANISATION:\n      return shouldAnonymizeWhenReferredByTypeOrganisation({\n        shouldHideForPropertyStatus,\n        referredBy: displayCustomerNames.referredBy\n      });\n\n    default:\n      return true;\n  }\n};","map":{"version":3,"sources":["imports/core/api/properties/propertyClientHelper.js"],"names":["PROPERTY_REFERRED_BY_TYPE","getCurrentUserPermissionsForProProperty","currentUser","properties","propertyId","property","_id","getProPropertyCustomerOwnerType","referredByUser","referredByOrganisation","organisations","organisationIds","organisationUserIds","users","hasNoPermissions","permissions","Object","shouldAnonymizeWhenReferredByTypeUser","referredBy","shouldHideForPropertyStatus","shouldAnonymizeWhenReferredByTypeOrganisation","shouldAnonymize","propertyStatus","customerOwnerType","displayCustomerNames"],"mappings":"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","sourcesContent":["import { PROPERTY_REFERRED_BY_TYPE } from './propertyConstants';\n\nexport const getCurrentUserPermissionsForProProperty = ({\n  currentUser: { properties = [] } = {},\n  propertyId,\n}) => {\n  const property = properties.find(({ _id }) => _id === propertyId);\n  return property && property.$metadata.permissions;\n};\n\nexport const getProPropertyCustomerOwnerType = ({\n  referredByUser = {},\n  referredByOrganisation = {},\n  currentUser = {},\n}) => {\n  const { _id: userId, organisations = [] } = currentUser;\n\n  // Is referred by nobody\n  if (!referredByUser) {\n    return null;\n  }\n\n  // Is referred by user\n  if (referredByUser._id === userId) {\n    return PROPERTY_REFERRED_BY_TYPE.USER;\n  }\n\n  const organisationIds = organisations.map(({ _id }) => _id);\n  const organisationUserIds = organisations.reduce(\n    (userIds, { users = [] }) => [...userIds, ...users.map(({ _id }) => _id)],\n    [],\n  );\n\n  // Is referred by organisation\n  if (\n    organisationIds.includes(referredByOrganisation._id)\n    // User is not referred by organisation, but by a user in current user's organisations\n    || organisationUserIds.includes(referredByUser._id)\n  ) {\n    return PROPERTY_REFERRED_BY_TYPE.ORGANISATION;\n  }\n\n  // Is referred by someone else\n  return PROPERTY_REFERRED_BY_TYPE.ANY;\n};\n\nconst hasNoPermissions = ({ permissions }) => !Object.keys(permissions).length;\n\nconst shouldAnonymizeWhenReferredByTypeUser = ({\n  shouldHideForPropertyStatus,\n  referredBy,\n}) =>\n  shouldHideForPropertyStatus\n  || ![\n    PROPERTY_REFERRED_BY_TYPE.USER,\n    PROPERTY_REFERRED_BY_TYPE.ORGANISATION,\n  ].includes(referredBy);\n\nconst shouldAnonymizeWhenReferredByTypeOrganisation = ({\n  shouldHideForPropertyStatus,\n  referredBy,\n}) =>\n  shouldHideForPropertyStatus\n  || referredBy !== PROPERTY_REFERRED_BY_TYPE.ORGANISATION;\n\nexport const shouldAnonymize = ({\n  customerOwnerType,\n  permissions = {},\n  propertyStatus,\n}) => {\n  // Never anonymize if referred by user\n  if (customerOwnerType === PROPERTY_REFERRED_BY_TYPE.USER) {\n    return false;\n  }\n\n  if (hasNoPermissions({ permissions })) {\n    return true;\n  }\n\n  const { displayCustomerNames } = permissions;\n\n  if (displayCustomerNames === false || !customerOwnerType) {\n    return true;\n  }\n\n  const shouldHideForPropertyStatus = !!propertyStatus\n    && !displayCustomerNames.forPropertyStatus.includes(propertyStatus);\n\n  if (displayCustomerNames.referredBy === PROPERTY_REFERRED_BY_TYPE.ANY) {\n    return shouldHideForPropertyStatus;\n  }\n\n  switch (customerOwnerType) {\n  case PROPERTY_REFERRED_BY_TYPE.ORGANISATION:\n    return shouldAnonymizeWhenReferredByTypeOrganisation({\n      shouldHideForPropertyStatus,\n      referredBy: displayCustomerNames.referredBy,\n    });\n  default:\n    return true;\n  }\n};\n"]},"sourceType":"script","hash":"070913c30e20cf7c8f17288917afcf8aaac17c4c"}
