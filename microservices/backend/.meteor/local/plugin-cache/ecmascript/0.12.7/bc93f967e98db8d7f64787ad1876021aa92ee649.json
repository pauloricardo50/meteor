{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/events/server/test/EventService.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/events/server/test/EventService.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/events/server/test/EventService.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/events/server/test/EventService.test.js"],"names":["expect","EventEmitter","EventService","TestEventService","describe","beforeEach","emmitter","it","listener","addListener","getListenerFunctions","includes","to","equal","deep"],"mappings":"AAAA;AACA,SAASA,MAAT,QAAuB,MAAvB;AACA,SAASC,YAAT,QAA6B,QAA7B;AAEA,OAAOC,YAAP;AAEA,IAAIC,gBAAJ;AAEAC,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7BC,EAAAA,UAAU,CAAC,MAAM;AACfF,IAAAA,gBAAgB,GAAG,IAAID,YAAJ,CAAiB;AAClCI,MAAAA,QAAQ,EAAE,IAAIL,YAAJ;AADwB,KAAjB,CAAnB;AAGD,GAJS,CAAV;AAMAG,EAAAA,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AACrCG,IAAAA,EAAE,CAAC,iDAAD,EAAoD,MAAM;AAC1D,YAAMC,QAAQ,GAAG,MAAM,CAAE,CAAzB;;AAEAL,MAAAA,gBAAgB,CAACM,WAAjB,CAA6B,WAA7B,EAA0CD,QAA1C;AACAR,MAAAA,MAAM,CAACG,gBAAgB,CAACO,oBAAjB,CAAsC,WAAtC,EAAmDC,QAAnD,CAA4DH,QAA5D,CAAD,CAAN,CAA8EI,EAA9E,CAAiFC,KAAjF,CAAuF,IAAvF;AACD,KALC,CAAF;AAOAN,IAAAA,EAAE,CAAE;kDAAF,EAC8C,MAAM;AACpDP,MAAAA,MAAM,CAACG,gBAAgB,CAACO,oBAAjB,CAAsC,WAAtC,CAAD,CAAN,CAA2DE,EAA3D,CAA8DE,IAA9D,CAAmED,KAAnE,CAAyE,EAAzE;AACD,KAHC,CAAF;AAID,GAZO,CAAR;AAaD,CApBO,CAAR","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { EventEmitter } from 'events';\n\nimport EventService from '../../EventService';\n\nlet TestEventService;\n\ndescribe('EventService', () => {\n  beforeEach(() => {\n    TestEventService = new EventService({\n      emmitter: new EventEmitter(),\n    });\n  });\n\n  describe('getListenerFunctions', () => {\n    it('returns an array of listeners for a given event', () => {\n      const listener = () => {};\n\n      TestEventService.addListener('listener1', listener);\n      expect(TestEventService.getListenerFunctions('listener1').includes(listener)).to.equal(true);\n    });\n\n    it(`returns an empty array\n        when the event doesn't have any listeners`, () => {\n      expect(TestEventService.getListenerFunctions('listener1')).to.deep.equal([]);\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/events/server/test/EventService.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/events/server/test/EventService.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet EventEmitter;\nmodule.link(\"events\", {\n  EventEmitter(v) {\n    EventEmitter = v;\n  }\n\n}, 1);\nlet EventService;\nmodule.link(\"../../EventService\", {\n  default(v) {\n    EventService = v;\n  }\n\n}, 2);\nlet TestEventService;\ndescribe('EventService', () => {\n  beforeEach(() => {\n    TestEventService = new EventService({\n      emmitter: new EventEmitter()\n    });\n  });\n  describe('getListenerFunctions', () => {\n    it('returns an array of listeners for a given event', () => {\n      const listener = () => {};\n\n      TestEventService.addListener('listener1', listener);\n      expect(TestEventService.getListenerFunctions('listener1').includes(listener)).to.equal(true);\n    });\n    it(`returns an empty array\n        when the event doesn't have any listeners`, () => {\n      expect(TestEventService.getListenerFunctions('listener1')).to.deep.equal([]);\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/api/events/server/test/EventService.test.js"],"names":["describe","beforeEach","TestEventService","emmitter","it","listener","expect"],"mappings":"AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAMA,IAAA,gBAAA;AAEAA,QAAQ,CAAA,cAAA,EAAiB,MAAM;AAC7BC,EAAAA,UAAU,CAAC,MAAM;AACfC,IAAAA,gBAAgB,GAAG,IAAA,YAAA,CAAiB;AAClCC,MAAAA,QAAQ,EAAE,IAAA,YAAA;AADwB,KAAjB,CAAnBD;AADFD,GAAU,CAAVA;AAMAD,EAAAA,QAAQ,CAAA,sBAAA,EAAyB,MAAM;AACrCI,IAAAA,EAAE,CAAA,iDAAA,EAAoD,MAAM;AAC1D,YAAMC,QAAQ,GAAG,MAAM,CAAvB,CAAA;;AAEAH,MAAAA,gBAAgB,CAAhBA,WAAAA,CAAAA,WAAAA,EAAAA,QAAAA;AACAI,MAAAA,MAAM,CAACJ,gBAAgB,CAAhBA,oBAAAA,CAAAA,WAAAA,EAAAA,QAAAA,CAAPI,QAAOJ,CAAD,CAANI,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,IAAAA;AAJFF,KAAE,CAAFA;AAOAA,IAAAA,EAAE,CAAE;kDAAF,EAC8C,MAAM;AACpDE,MAAAA,MAAM,CAACJ,gBAAgB,CAAhBA,oBAAAA,CAAPI,WAAOJ,CAAD,CAANI,CAAAA,EAAAA,CAAAA,IAAAA,CAAAA,KAAAA,CAAAA,EAAAA;AAFFF,KAAE,CAAFA;AARFJ,GAAQ,CAARA;AAPFA,CAAQ,CAARA","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { EventEmitter } from 'events';\n\nimport EventService from '../../EventService';\n\nlet TestEventService;\n\ndescribe('EventService', () => {\n  beforeEach(() => {\n    TestEventService = new EventService({\n      emmitter: new EventEmitter(),\n    });\n  });\n\n  describe('getListenerFunctions', () => {\n    it('returns an array of listeners for a given event', () => {\n      const listener = () => {};\n\n      TestEventService.addListener('listener1', listener);\n      expect(TestEventService.getListenerFunctions('listener1').includes(listener)).to.equal(true);\n    });\n\n    it(`returns an empty array\n        when the event doesn't have any listeners`, () => {\n      expect(TestEventService.getListenerFunctions('listener1')).to.deep.equal([]);\n    });\n  });\n});\n"]},"sourceType":"script","hash":"bc93f967e98db8d7f64787ad1876021aa92ee649"}
