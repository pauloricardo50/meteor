{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/containers/test/withMatchParam.test.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/containers/test/withMatchParam.test.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/containers/test/withMatchParam.test.jsx","inputSourceMap":{"version":3,"sources":["imports/core/containers/test/withMatchParam.test.jsx"],"names":["Meteor","React","expect","mount","MemoryRouter","Route","withMatchParam","Component1","props","Component2","url","isClient","describe","component","beforeEach","it","find","length","to","equal","deep","include","loanId","borrowerId","not","contain","key"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport { expect } from 'chai';\nimport { mount } from 'core/utils/testHelpers/enzyme';\nimport { MemoryRouter, Route } from 'react-router-dom';\n\nimport withMatchParam from '../withMatchParam';\n\nlet Component1 = withMatchParam('loanId')(props => <div {...props} />);\nconst Component2 = withMatchParam('loanId', '/loans/:loanId')(props => (\n  <span {...props} />\n));\nlet url = '/loans/test/hello';\n\nif (Meteor.isClient) {\n  describe('withMatchParam', () => {\n    const component = () =>\n      mount(<MemoryRouter initialEntries={[url]}>\n        <React.Fragment>\n          <Route path=\"/loans/:loanId/:borrowerId\">\n            <Component1 />\n          </Route>\n          <Component2 />\n        </React.Fragment>\n            </MemoryRouter>);\n\n    beforeEach(() => {});\n\n    it('Finds both components used for testing', () => {\n      expect(component().find('div').length).to.equal(1);\n      expect(component().find('span').length).to.equal(1);\n    });\n\n    it('passes the matched param to the nested component', () => {\n      expect(component()\n        .find('div')\n        .props()).to.deep.include({ loanId: 'test' });\n    });\n\n    it('works if multiple params are passed in an array', () => {\n      Component1 = withMatchParam(['loanId', 'borrowerId'])(props => (\n        <div {...props} />\n      ));\n      expect(component()\n        .find('div')\n        .props()).to.deep.include({ loanId: 'test', borrowerId: 'hello' });\n    });\n\n    it('passes the matched param to the non-nested component', () => {\n      expect(component()\n        .find('span')\n        .props()).to.deep.include({ loanId: 'test' });\n    });\n\n    it('does not break if a totally different url is given', () => {\n      url = '/profile/userId2';\n      expect(component()\n        .find('span')\n        .props()).to.not.contain.key('loanId');\n    });\n  });\n}\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/containers/test/withMatchParam.test.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/containers/test/withMatchParam.test.jsx"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 2);\nlet mount;\nmodule.link(\"../../utils/testHelpers/enzyme\", {\n  mount(v) {\n    mount = v;\n  }\n\n}, 3);\nlet MemoryRouter, Route;\nmodule.link(\"react-router-dom\", {\n  MemoryRouter(v) {\n    MemoryRouter = v;\n  },\n\n  Route(v) {\n    Route = v;\n  }\n\n}, 4);\nlet withMatchParam;\nmodule.link(\"../withMatchParam\", {\n  default(v) {\n    withMatchParam = v;\n  }\n\n}, 5);\nlet Component1 = withMatchParam('loanId')(props => React.createElement(\"div\", props));\nconst Component2 = withMatchParam('loanId', '/loans/:loanId')(props => React.createElement(\"span\", props));\nlet url = '/loans/test/hello';\n\nif (Meteor.isClient) {\n  describe('withMatchParam', () => {\n    const component = () => mount(React.createElement(MemoryRouter, {\n      initialEntries: [url]\n    }, React.createElement(React.Fragment, null, React.createElement(Route, {\n      path: \"/loans/:loanId/:borrowerId\"\n    }, React.createElement(Component1, null)), React.createElement(Component2, null))));\n\n    beforeEach(() => {});\n    it('Finds both components used for testing', () => {\n      expect(component().find('div').length).to.equal(1);\n      expect(component().find('span').length).to.equal(1);\n    });\n    it('passes the matched param to the nested component', () => {\n      expect(component().find('div').props()).to.deep.include({\n        loanId: 'test'\n      });\n    });\n    it('works if multiple params are passed in an array', () => {\n      Component1 = withMatchParam(['loanId', 'borrowerId'])(props => React.createElement(\"div\", props));\n      expect(component().find('div').props()).to.deep.include({\n        loanId: 'test',\n        borrowerId: 'hello'\n      });\n    });\n    it('passes the matched param to the non-nested component', () => {\n      expect(component().find('span').props()).to.deep.include({\n        loanId: 'test'\n      });\n    });\n    it('does not break if a totally different url is given', () => {\n      url = '/profile/userId2';\n      expect(component().find('span').props()).to.not.contain.key('loanId');\n    });\n  });\n}","map":{"version":3,"sources":["imports/core/containers/test/withMatchParam.test.jsx"],"names":["Component1","withMatchParam","props","Component2","url","Meteor","describe","component","mount","beforeEach","it","expect","loanId","borrowerId"],"mappings":"AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA,EAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,cAAA;AAAA,MAAA,CAAA,IAAA,CAAA,mBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AASA,IAAIA,UAAU,GAAGC,cAAc,CAAdA,QAAc,CAAdA,CAAyBC,KAAK,IAAI,2BAAnD,KAAmD,CAAlCD,CAAjB;AACA,MAAME,UAAU,GAAGF,cAAc,CAAA,QAAA,EAAdA,gBAAc,CAAdA,CAA2CC,KAAK,IACjE,4BADF,KACE,CADiBD,CAAnB;AAGA,IAAIG,GAAG,GAAP,mBAAA;;AAEA,IAAIC,MAAM,CAAV,QAAA,EAAqB;AACnBC,EAAAA,QAAQ,CAAA,gBAAA,EAAmB,MAAM;AAC/B,UAAMC,SAAS,GAAG,MAChBC,KAAK,CAAC,oBAAA,YAAA;AAAc,MAAA,cAAA,EAAgB,CAA9B,GAA8B;AAA9B,OACJ,oBAAC,KAAD,CAAA,QAAA,QACE,oBAAA,KAAA;AAAO,MAAA,IAAA,EAAP;AAAA,OACE,oBAAA,UAAA,OADF,CADF,EAIE,oBAAA,UAAA,OAJF,CADI,CAAD,CADP;;AAUAC,IAAAA,UAAU,CAAC,MAAM,CAAjBA,CAAU,CAAVA;AAEAC,IAAAA,EAAE,CAAA,wCAAA,EAA2C,MAAM;AACjDC,MAAAA,MAAM,CAACJ,SAAS,GAATA,IAAAA,CAAAA,KAAAA,EAAPI,MAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,CAAAA;AACAA,MAAAA,MAAM,CAACJ,SAAS,GAATA,IAAAA,CAAAA,MAAAA,EAAPI,MAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,CAAAA;AAFFD,KAAE,CAAFA;AAKAA,IAAAA,EAAE,CAAA,kDAAA,EAAqD,MAAM;AAC3DC,MAAAA,MAAM,CAACJ,SAAS,GAATA,IAAAA,CAAAA,KAAAA,EAAPI,KAAOJ,EAAD,CAANI,CAAAA,EAAAA,CAAAA,IAAAA,CAAAA,OAAAA,CAE4B;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAF5BD;AADFD,KAAE,CAAFA;AAMAA,IAAAA,EAAE,CAAA,iDAAA,EAAoD,MAAM;AAC1DV,MAAAA,UAAU,GAAGC,cAAc,CAAC,CAAA,QAAA,EAAfA,YAAe,CAAD,CAAdA,CAAyCC,KAAK,IACzD,2BADFF,KACE,CADWC,CAAbD;AAGAW,MAAAA,MAAM,CAACJ,SAAS,GAATA,IAAAA,CAAAA,KAAAA,EAAPI,KAAOJ,EAAD,CAANI,CAAAA,EAAAA,CAAAA,IAAAA,CAAAA,OAAAA,CAE4B;AAAEC,QAAAA,MAAM,EAAR,MAAA;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OAF5BF;AAJFD,KAAE,CAAFA;AASAA,IAAAA,EAAE,CAAA,sDAAA,EAAyD,MAAM;AAC/DC,MAAAA,MAAM,CAACJ,SAAS,GAATA,IAAAA,CAAAA,MAAAA,EAAPI,KAAOJ,EAAD,CAANI,CAAAA,EAAAA,CAAAA,IAAAA,CAAAA,OAAAA,CAE4B;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAF5BD;AADFD,KAAE,CAAFA;AAMAA,IAAAA,EAAE,CAAA,oDAAA,EAAuD,MAAM;AAC7DN,MAAAA,GAAG,GAAHA,kBAAAA;AACAO,MAAAA,MAAM,CAACJ,SAAS,GAATA,IAAAA,CAAAA,MAAAA,EAAPI,KAAOJ,EAAD,CAANI,CAAAA,EAAAA,CAAAA,GAAAA,CAAAA,OAAAA,CAAAA,GAAAA,CAAAA,QAAAA;AAFFD,KAAE,CAAFA;AAvCFJ,GAAQ,CAARA;AA8CD","sourcesContent":["/* eslint-env mocha */\nimport { Meteor } from 'meteor/meteor';\nimport React from 'react';\nimport { expect } from 'chai';\nimport { mount } from 'core/utils/testHelpers/enzyme';\nimport { MemoryRouter, Route } from 'react-router-dom';\n\nimport withMatchParam from '../withMatchParam';\n\nlet Component1 = withMatchParam('loanId')(props => <div {...props} />);\nconst Component2 = withMatchParam('loanId', '/loans/:loanId')(props => (\n  <span {...props} />\n));\nlet url = '/loans/test/hello';\n\nif (Meteor.isClient) {\n  describe('withMatchParam', () => {\n    const component = () =>\n      mount(<MemoryRouter initialEntries={[url]}>\n        <React.Fragment>\n          <Route path=\"/loans/:loanId/:borrowerId\">\n            <Component1 />\n          </Route>\n          <Component2 />\n        </React.Fragment>\n            </MemoryRouter>);\n\n    beforeEach(() => {});\n\n    it('Finds both components used for testing', () => {\n      expect(component().find('div').length).to.equal(1);\n      expect(component().find('span').length).to.equal(1);\n    });\n\n    it('passes the matched param to the nested component', () => {\n      expect(component()\n        .find('div')\n        .props()).to.deep.include({ loanId: 'test' });\n    });\n\n    it('works if multiple params are passed in an array', () => {\n      Component1 = withMatchParam(['loanId', 'borrowerId'])(props => (\n        <div {...props} />\n      ));\n      expect(component()\n        .find('div')\n        .props()).to.deep.include({ loanId: 'test', borrowerId: 'hello' });\n    });\n\n    it('passes the matched param to the non-nested component', () => {\n      expect(component()\n        .find('span')\n        .props()).to.deep.include({ loanId: 'test' });\n    });\n\n    it('does not break if a totally different url is given', () => {\n      url = '/profile/userId2';\n      expect(component()\n        .find('span')\n        .props()).to.not.contain.key('loanId');\n    });\n  });\n}\n"]},"sourceType":"script","hash":"8d4090922fbd8461255cb8d556849772de76833d"}
