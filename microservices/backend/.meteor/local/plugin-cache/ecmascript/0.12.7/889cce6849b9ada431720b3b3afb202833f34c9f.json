{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/vent/VentClient.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/cultofcoders:redis-oplog/lib/vent/VentClient.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/vent/VentClient.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/vent/VentClient.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:redis-oplog/lib/vent/VentClient.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nmodule.export({\n  \"default\": function () {\n    return VentClient;\n  }\n});\nvar VentConstants;\nmodule.link(\"../constants\", {\n  VentConstants: function (v) {\n    VentConstants = v;\n  }\n}, 0);\nvar Random;\nmodule.link(\"meteor/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 1);\nvar DDPCommon;\nmodule.link(\"meteor/ddp-common\", {\n  DDPCommon: function (v) {\n    DDPCommon = v;\n  }\n}, 2);\n\nvar VentClient =\n/*#__PURE__*/\nfunction () {\n  function VentClient() {\n    this.store = {};\n    this.listen(Meteor.connection);\n  }\n\n  var _proto = VentClient.prototype;\n\n  _proto.subscribe = function () {\n    function subscribe(name) {\n      var subscription = new VentClientSubscription(this, name);\n      this.add(subscription);\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return subscription.subscribe.apply(subscription, args);\n    }\n\n    return subscribe;\n  }();\n\n  _proto.listen = function () {\n    function listen(ddpConnection) {\n      var _this = this;\n\n      ddpConnection._stream.on('message', function (raw_msg) {\n        // avoid parsing unnecessary ddp events\n        var search = \"{\\\"msg\\\":\\\"changed\\\",\\\"\" + VentConstants.PREFIX + \"\\\":\\\"1\";\n\n        if (raw_msg.substr(0, search.length) !== search) {\n          return;\n        }\n\n        var msg = DDPCommon.parseDDP(raw_msg);\n        var subscription = _this.store[msg.id];\n\n        if (subscription) {\n          subscription.handle(msg[VentConstants.EVENT_VARIABLE]);\n        }\n      });\n    }\n\n    return listen;\n  }()\n  /**\n   * {VentClientSubscription}\n   * @param subscription\n   */\n  ;\n\n  _proto.add = function () {\n    function add(subscription) {\n      this.store[subscription.id] = subscription;\n    }\n\n    return add;\n  }()\n  /**\n   * @param {VentClientSubscription} subscription\n   */\n  ;\n\n  _proto.remove = function () {\n    function remove(subscription) {\n      delete this.store[subscription.id];\n    }\n\n    return remove;\n  }();\n\n  return VentClient;\n}();\n\n/**\n * Handles Vent subscription\n */\nvar VentClientSubscription =\n/*#__PURE__*/\nfunction () {\n  function VentClientSubscription(client, name) {\n    this.client = client;\n    this._name = name;\n    this._id = Random.id();\n  }\n\n  var _proto2 = VentClientSubscription.prototype;\n\n  /**\n   * Subscribes to Meteor\n   *\n   * @param args\n   * @returns {*}\n   */\n  _proto2.subscribe = function () {\n    function subscribe() {\n      var _Meteor;\n\n      var self = this;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var handler = (_Meteor = Meteor).subscribe.apply(_Meteor, [this._name, this._id].concat(args));\n\n      var oldStop = handler.stop;\n      Object.assign(handler, {\n        listen: function (eventHandler) {\n          if (!_.isFunction(eventHandler)) {\n            throw new Meteor.Error('invalid-argument', 'You should pass a function to listen()');\n          }\n\n          self._eventHandler = eventHandler;\n        },\n        stop: function () {\n          self.client.remove(self);\n          return oldStop.call(handler);\n        }\n      });\n      return handler;\n    }\n\n    return subscribe;\n  }()\n  /**\n   * Watches the incomming events\n   */\n  ;\n\n  _proto2.handle = function () {\n    function handle(event) {\n      if (this._eventHandler) {\n        this._eventHandler(event);\n      } else {}\n    }\n\n    return handle;\n  }();\n\n  (0, _createClass2.default)(VentClientSubscription, [{\n    key: \"id\",\n    get: function () {\n      return VentConstants.getPrefix(this._id, this._name);\n    }\n  }]);\n  return VentClientSubscription;\n}();","map":{"version":3,"sources":["packages/cultofcoders:redis-oplog/lib/vent/VentClient.js"],"names":["module","export","VentClient","VentConstants","link","v","Random","DDPCommon","store","listen","Meteor","connection","subscribe","name","subscription","VentClientSubscription","add","args","ddpConnection","_stream","on","raw_msg","search","PREFIX","substr","length","msg","parseDDP","id","handle","EVENT_VARIABLE","remove","client","_name","_id","self","handler","oldStop","stop","Object","assign","eventHandler","_","isFunction","Error","_eventHandler","call","event","getPrefix"],"mappings":"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","sourcesContent":["import {VentConstants} from '../constants';\nimport {Random} from 'meteor/random';\nimport {DDPCommon} from 'meteor/ddp-common';\n\n/**\n * Handles vents inside Meteor\n */\nexport default class VentClient {\n    constructor() {\n        this.store = {};\n        this.listen(Meteor.connection);\n    }\n\n    subscribe(name, ...args) {\n        const subscription = new VentClientSubscription(this, name);\n        this.add(subscription);\n\n        return subscription.subscribe(...args);\n    }\n\n    listen(ddpConnection) {\n        ddpConnection._stream.on('message', (raw_msg) => {\n            // avoid parsing unnecessary ddp events\n            const search = `{\"msg\":\"changed\",\"${VentConstants.PREFIX}\":\"1`;\n            if (raw_msg.substr(0, search.length) !== search) {\n                return;\n            }\n\n            const msg = DDPCommon.parseDDP(raw_msg);\n            const subscription = this.store[msg.id];\n            if (subscription) {\n                subscription.handle(msg[VentConstants.EVENT_VARIABLE]);\n            }\n        });\n    }\n\n    /**\n     * {VentClientSubscription}\n     * @param subscription\n     */\n    add(subscription) {\n        this.store[subscription.id] = subscription;\n    }\n\n    /**\n     * @param {VentClientSubscription} subscription\n     */\n    remove(subscription) {\n        delete this.store[subscription.id];\n    }\n}\n\n/**\n * Handles Vent subscription\n */\nclass VentClientSubscription {\n    constructor(client, name) {\n        this.client = client;\n        this._name = name;\n        this._id = Random.id();\n    }\n\n    get id() {\n        return VentConstants.getPrefix(this._id, this._name);\n    }\n\n    /**\n     * Subscribes to Meteor\n     *\n     * @param args\n     * @returns {*}\n     */\n    subscribe(...args) {\n        const self = this;\n\n        const handler = Meteor.subscribe(this._name, this._id, ...args);\n\n        const oldStop = handler.stop;\n        Object.assign(handler, {\n            listen(eventHandler) {\n                if (!_.isFunction(eventHandler)) {\n                    throw new Meteor.Error('invalid-argument', 'You should pass a function to listen()');\n                }\n\n                self._eventHandler = eventHandler;\n            },\n            stop() {\n                self.client.remove(self);\n\n                return oldStop.call(handler);\n            }\n        });\n\n        return handler;\n    }\n\n    /**\n     * Watches the incomming events\n     */\n    handle(event) {\n        if (this._eventHandler) {\n            this._eventHandler(event);\n        } else {\n\n        }\n    }\n}"]},"sourceType":"script","hash":"889cce6849b9ada431720b3b3afb202833f34c9f"}
