{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/4.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/migrations/server/test/4.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/4.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/migrations/server/test/4.test.js"],"names":["expect","resetDatabase","Promotions","Users","up","down","PERMISSIONS","describe","beforeEach","it","userId1","insert","_id","userId2","rawCollection","userLinks","permissions","then","find","forEach","to","equal","not","undefined","deep","canInviteCustomers"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { Promotions, Users } from '../../..';\nimport { up, down, PERMISSIONS } from '../4';\n\ndescribe('Migration 4', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('up', () => {\n    it('modifies user promotion permissions', () => {\n      const userId1 = Users.insert({ _id: 'userId1' });\n      const userId2 = Users.insert({ _id: 'userId2' });\n\n      return Promotions.rawCollection()\n        .insert({\n          _id: 'promotionId1',\n          userLinks: [\n            { _id: userId1, permissions: 'READ' },\n            { _id: userId2, permissions: 'MODIFY' },\n          ],\n        })\n        .then(() =>\n          Promotions.rawCollection().insert({\n            _id: 'promotionId2',\n            userLinks: [\n              { _id: userId1, permissions: 'READ' },\n              { _id: userId2, permissions: 'MODIFY' },\n            ],\n          }))\n        .then(() => {\n          Promotions.find().forEach(({ userLinks }) => {\n            userLinks.forEach(({ permissions }) => {\n              expect(typeof permissions).to.equal('string');\n              expect(permissions).to.not.equal(undefined);\n            });\n          });\n        })\n        .then(up)\n        .then(() =>\n          Promotions.find({}).forEach(({ userLinks }) => {\n            userLinks.forEach(({ permissions }) => {\n              expect(typeof permissions).to.equal('object');\n              expect(permissions).to.deep.equal(PERMISSIONS);\n            });\n          }));\n    });\n  });\n\n  describe('down', () => {\n    it('resets user promotion permissions to READ', () => {\n      const userId1 = Users.insert({ _id: 'userId1' });\n      const userId2 = Users.insert({ _id: 'userId2' });\n\n      return Promotions.rawCollection()\n        .insert({\n          _id: 'promotionId1',\n          userLinks: [\n            { _id: userId1, permissions: { canInviteCustomers: true } },\n            { _id: userId2, permissions: { canInviteCustomers: true } },\n          ],\n        })\n        .then(() =>\n          Promotions.rawCollection().insert({\n            _id: 'promotionId2',\n            userLinks: [\n              { _id: userId1, permissions: { canInviteCustomers: true } },\n              { _id: userId2, permissions: { canInviteCustomers: true } },\n            ],\n          }))\n        .then(() => {\n          Promotions.find().forEach(({ userLinks }) => {\n            userLinks.forEach(({ permissions }) => {\n              expect(typeof permissions).to.equal('object');\n              expect(permissions.canInviteCustomers).to.equal(true);\n            });\n          });\n        })\n        .then(down)\n        .then(() =>\n          Promotions.find({}).forEach(({ userLinks }) => {\n            userLinks.forEach(({ permissions }) => {\n              expect(typeof permissions).to.equal('string');\n              expect(permissions).to.equal('READ');\n            });\n          }));\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/test/4.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/migrations/server/test/4.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 1);\nlet Promotions, Users;\nmodule.link(\"../../..\", {\n  Promotions(v) {\n    Promotions = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\nlet up, down, PERMISSIONS;\nmodule.link(\"../4\", {\n  up(v) {\n    up = v;\n  },\n\n  down(v) {\n    down = v;\n  },\n\n  PERMISSIONS(v) {\n    PERMISSIONS = v;\n  }\n\n}, 3);\ndescribe('Migration 4', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n  describe('up', () => {\n    it('modifies user promotion permissions', () => {\n      const userId1 = Users.insert({\n        _id: 'userId1'\n      });\n      const userId2 = Users.insert({\n        _id: 'userId2'\n      });\n      return Promotions.rawCollection().insert({\n        _id: 'promotionId1',\n        userLinks: [{\n          _id: userId1,\n          permissions: 'READ'\n        }, {\n          _id: userId2,\n          permissions: 'MODIFY'\n        }]\n      }).then(() => Promotions.rawCollection().insert({\n        _id: 'promotionId2',\n        userLinks: [{\n          _id: userId1,\n          permissions: 'READ'\n        }, {\n          _id: userId2,\n          permissions: 'MODIFY'\n        }]\n      })).then(() => {\n        Promotions.find().forEach(({\n          userLinks\n        }) => {\n          userLinks.forEach(({\n            permissions\n          }) => {\n            expect(typeof permissions).to.equal('string');\n            expect(permissions).to.not.equal(undefined);\n          });\n        });\n      }).then(up).then(() => Promotions.find({}).forEach(({\n        userLinks\n      }) => {\n        userLinks.forEach(({\n          permissions\n        }) => {\n          expect(typeof permissions).to.equal('object');\n          expect(permissions).to.deep.equal(PERMISSIONS);\n        });\n      }));\n    });\n  });\n  describe('down', () => {\n    it('resets user promotion permissions to READ', () => {\n      const userId1 = Users.insert({\n        _id: 'userId1'\n      });\n      const userId2 = Users.insert({\n        _id: 'userId2'\n      });\n      return Promotions.rawCollection().insert({\n        _id: 'promotionId1',\n        userLinks: [{\n          _id: userId1,\n          permissions: {\n            canInviteCustomers: true\n          }\n        }, {\n          _id: userId2,\n          permissions: {\n            canInviteCustomers: true\n          }\n        }]\n      }).then(() => Promotions.rawCollection().insert({\n        _id: 'promotionId2',\n        userLinks: [{\n          _id: userId1,\n          permissions: {\n            canInviteCustomers: true\n          }\n        }, {\n          _id: userId2,\n          permissions: {\n            canInviteCustomers: true\n          }\n        }]\n      })).then(() => {\n        Promotions.find().forEach(({\n          userLinks\n        }) => {\n          userLinks.forEach(({\n            permissions\n          }) => {\n            expect(typeof permissions).to.equal('object');\n            expect(permissions.canInviteCustomers).to.equal(true);\n          });\n        });\n      }).then(down).then(() => Promotions.find({}).forEach(({\n        userLinks\n      }) => {\n        userLinks.forEach(({\n          permissions\n        }) => {\n          expect(typeof permissions).to.equal('string');\n          expect(permissions).to.equal('READ');\n        });\n      }));\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/api/migrations/server/test/4.test.js"],"names":["describe","beforeEach","resetDatabase","it","userId1","_id","userId2","userLinks","permissions","Promotions","expect","canInviteCustomers"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport { Promotions, Users } from '../../..';\nimport { up, down, PERMISSIONS } from '../4';\n\ndescribe('Migration 4', () => {\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('up', () => {\n    it('modifies user promotion permissions', () => {\n      const userId1 = Users.insert({ _id: 'userId1' });\n      const userId2 = Users.insert({ _id: 'userId2' });\n\n      return Promotions.rawCollection()\n        .insert({\n          _id: 'promotionId1',\n          userLinks: [\n            { _id: userId1, permissions: 'READ' },\n            { _id: userId2, permissions: 'MODIFY' },\n          ],\n        })\n        .then(() =>\n          Promotions.rawCollection().insert({\n            _id: 'promotionId2',\n            userLinks: [\n              { _id: userId1, permissions: 'READ' },\n              { _id: userId2, permissions: 'MODIFY' },\n            ],\n          }))\n        .then(() => {\n          Promotions.find().forEach(({ userLinks }) => {\n            userLinks.forEach(({ permissions }) => {\n              expect(typeof permissions).to.equal('string');\n              expect(permissions).to.not.equal(undefined);\n            });\n          });\n        })\n        .then(up)\n        .then(() =>\n          Promotions.find({}).forEach(({ userLinks }) => {\n            userLinks.forEach(({ permissions }) => {\n              expect(typeof permissions).to.equal('object');\n              expect(permissions).to.deep.equal(PERMISSIONS);\n            });\n          }));\n    });\n  });\n\n  describe('down', () => {\n    it('resets user promotion permissions to READ', () => {\n      const userId1 = Users.insert({ _id: 'userId1' });\n      const userId2 = Users.insert({ _id: 'userId2' });\n\n      return Promotions.rawCollection()\n        .insert({\n          _id: 'promotionId1',\n          userLinks: [\n            { _id: userId1, permissions: { canInviteCustomers: true } },\n            { _id: userId2, permissions: { canInviteCustomers: true } },\n          ],\n        })\n        .then(() =>\n          Promotions.rawCollection().insert({\n            _id: 'promotionId2',\n            userLinks: [\n              { _id: userId1, permissions: { canInviteCustomers: true } },\n              { _id: userId2, permissions: { canInviteCustomers: true } },\n            ],\n          }))\n        .then(() => {\n          Promotions.find().forEach(({ userLinks }) => {\n            userLinks.forEach(({ permissions }) => {\n              expect(typeof permissions).to.equal('object');\n              expect(permissions.canInviteCustomers).to.equal(true);\n            });\n          });\n        })\n        .then(down)\n        .then(() =>\n          Promotions.find({}).forEach(({ userLinks }) => {\n            userLinks.forEach(({ permissions }) => {\n              expect(typeof permissions).to.equal('string');\n              expect(permissions).to.equal('READ');\n            });\n          }));\n    });\n  });\n});\n"]},"sourceType":"script","hash":"8634eb47e6037da63e96b8ea3b1f3d65d5f03b55"}
