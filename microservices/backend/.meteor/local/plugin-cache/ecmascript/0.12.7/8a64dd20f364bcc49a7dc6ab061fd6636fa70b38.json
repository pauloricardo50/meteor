{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/14.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/migrations/server/14.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/14.js","inputSourceMap":{"version":3,"sources":["imports/core/api/migrations/server/14.js"],"names":["Migrations","Properties","up","allProperties","find","fetch","Promise","all","map","_id","monthlyExpenses","rawCollection","update","$set","yearlyExpenses","$unset","down","Math","round","add","version","name"],"mappings":"AAAA,SAASA,UAAT,QAA2B,6BAA3B;AAEA,SAASC,UAAT;AAEA,OAAO,MAAMC,EAAE,GAAG,MAAM;AACtB,QAAMC,aAAa,GAAGF,UAAU,CAACG,IAAX,CAAgB,EAAhB,EAAoBC,KAApB,EAAtB;AAEA,SAAOC,OAAO,CAACC,GAAR,CAAYJ,aAAa,CAACK,GAAd,CAAkB,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,KACnCT,UAAU,CAACU,aAAX,GAA2BC,MAA3B,CACE;AAAEH,IAAAA;AAAF,GADF,EAEE,EACE,IAAIC,eAAe,GACf;AAAEG,MAAAA,IAAI,EAAE;AAAEC,QAAAA,cAAc,EAAEJ,eAAe,GAAG;AAApC;AAAR,KADe,GAEf,EAFJ,CADF;AAIEK,IAAAA,MAAM,EAAE;AAAEL,MAAAA,eAAe,EAAE;AAAnB;AAJV,GAFF,CADiB,CAAZ,CAAP;AAUD,CAbM;AAeP,OAAO,MAAMM,IAAI,GAAG,MAAM;AACxB,QAAMb,aAAa,GAAGF,UAAU,CAACG,IAAX,CAAgB,EAAhB,EAAoBC,KAApB,EAAtB;AAEA,SAAOC,OAAO,CAACC,GAAR,CAAYJ,aAAa,CAACK,GAAd,CAAkB,CAAC;AAAEC,IAAAA,GAAF;AAAOK,IAAAA;AAAP,GAAD,KACnCb,UAAU,CAACU,aAAX,GAA2BC,MAA3B,CACE;AAAEH,IAAAA;AAAF,GADF,EAEE,EACE,IAAIK,cAAc,GACd;AAAED,MAAAA,IAAI,EAAE;AAAEH,QAAAA,eAAe,EAAEO,IAAI,CAACC,KAAL,CAAWJ,cAAc,GAAG,EAA5B;AAAnB;AAAR,KADc,GAEd,EAFJ,CADF;AAIEC,IAAAA,MAAM,EAAE;AAAED,MAAAA,cAAc,EAAE;AAAlB;AAJV,GAFF,CADiB,CAAZ,CAAP;AAUD,CAbM;AAePd,UAAU,CAACmB,GAAX,CAAe;AACbC,EAAAA,OAAO,EAAE,EADI;AAEbC,EAAAA,IAAI,EAAE,4CAFO;AAGbnB,EAAAA,EAHa;AAIbc,EAAAA;AAJa,CAAf","sourcesContent":["import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Properties } from '../..';\n\nexport const up = () => {\n  const allProperties = Properties.find({}).fetch();\n\n  return Promise.all(allProperties.map(({ _id, monthlyExpenses }) =>\n    Properties.rawCollection().update(\n      { _id },\n      {\n        ...(monthlyExpenses\n          ? { $set: { yearlyExpenses: monthlyExpenses * 12 } }\n          : {}),\n        $unset: { monthlyExpenses: true },\n      },\n    )));\n};\n\nexport const down = () => {\n  const allProperties = Properties.find({}).fetch();\n\n  return Promise.all(allProperties.map(({ _id, yearlyExpenses }) =>\n    Properties.rawCollection().update(\n      { _id },\n      {\n        ...(yearlyExpenses\n          ? { $set: { monthlyExpenses: Math.round(yearlyExpenses / 12) } }\n          : {}),\n        $unset: { yearlyExpenses: true },\n      },\n    )));\n};\n\nMigrations.add({\n  version: 14,\n  name: 'Change monthlyExpenses into yearlyExpenses',\n  up,\n  down,\n});\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/14.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/migrations/server/14.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Properties;\nmodule.link(\"../..\", {\n  Properties(v) {\n    Properties = v;\n  }\n\n}, 1);\n\nconst up = () => {\n  const allProperties = Properties.find({}).fetch();\n  return Promise.all(allProperties.map(({\n    _id,\n    monthlyExpenses\n  }) => Properties.rawCollection().update({\n    _id\n  }, (0, _objectSpread2.default)({}, monthlyExpenses ? {\n    $set: {\n      yearlyExpenses: monthlyExpenses * 12\n    }\n  } : {}, {\n    $unset: {\n      monthlyExpenses: true\n    }\n  }))));\n};\n\nconst down = () => {\n  const allProperties = Properties.find({}).fetch();\n  return Promise.all(allProperties.map(({\n    _id,\n    yearlyExpenses\n  }) => Properties.rawCollection().update({\n    _id\n  }, (0, _objectSpread2.default)({}, yearlyExpenses ? {\n    $set: {\n      monthlyExpenses: Math.round(yearlyExpenses / 12)\n    }\n  } : {}, {\n    $unset: {\n      yearlyExpenses: true\n    }\n  }))));\n};\n\nMigrations.add({\n  version: 14,\n  name: 'Change monthlyExpenses into yearlyExpenses',\n  up,\n  down\n});","map":{"version":3,"sources":["imports/core/api/migrations/server/14.js"],"names":["Migrations","up","allProperties","Properties","monthlyExpenses","_id","$set","yearlyExpenses","$unset","down","Math","version","name"],"mappings":";;;;AAAA,MAAA,CAAA,MAAA,CAASA;AAAAA,EAAAA,EAAAA,EAAT,MAAA,EAASA;AAAT,EAAA,IAA2B,EAAA,MAAA;AAAlBA,CAAT;AAA2B,IAAA,UAAA;AAA3B,MAAA,CAAA,IAAA,CAAA,6BAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAIO,MAAMC,EAAE,GAAG,MAAM;AACtB,QAAMC,aAAa,GAAGC,UAAU,CAAVA,IAAAA,CAAAA,EAAAA,EAAtB,KAAsBA,EAAtB;AAEA,SAAO,OAAO,CAAP,GAAA,CAAY,aAAa,CAAb,GAAA,CAAkB,CAAC;AAAA,IAAA,GAAA;AAAOC,IAAAA;AAAP,GAAD,KACnC,UAAU,CAAV,aAAA,GAAA,MAAA,CACE;AAAEC,IAAAA;AAAF,GADF,kCAGQD,eAAe,GACf;AAAEE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,cAAc,EAAEH,eAAe,GAAG;AAApC;AAAR,GADe,GADrB,EAFF;AAMII,IAAAA,MAAM,EAAE;AAAEJ,MAAAA,eAAe,EAAE;AAAnB;AANZ,KADiB,CAAZ,CAAP;AAHK,CAAA;;AAeA,MAAMK,IAAI,GAAG,MAAM;AACxB,QAAMP,aAAa,GAAGC,UAAU,CAAVA,IAAAA,CAAAA,EAAAA,EAAtB,KAAsBA,EAAtB;AAEA,SAAO,OAAO,CAAP,GAAA,CAAY,aAAa,CAAb,GAAA,CAAkB,CAAC;AAAA,IAAA,GAAA;AAAOI,IAAAA;AAAP,GAAD,KACnC,UAAU,CAAV,aAAA,GAAA,MAAA,CACE;AAAEF,IAAAA;AAAF,GADF,kCAGQE,cAAc,GACd;AAAED,IAAAA,IAAI,EAAE;AAAEF,MAAAA,eAAe,EAAEM,IAAI,CAAJA,KAAAA,CAAWH,cAAc,GAAzBG,EAAAA;AAAnB;AAAR,GADc,GADpB,EAFF;AAMIF,IAAAA,MAAM,EAAE;AAAED,MAAAA,cAAc,EAAE;AAAlB;AANZ,KADiB,CAAZ,CAAP;AAHK,CAAA;;AAePP,UAAU,CAAVA,GAAAA,CAAe;AACbW,EAAAA,OAAO,EADM,EAAA;AAEbC,EAAAA,IAAI,EAFS,4CAAA;AAAA,EAAA,EAAA;AAIbH,EAAAA;AAJa,CAAfT","sourcesContent":["import { Migrations } from 'meteor/percolate:migrations';\n\nimport { Properties } from '../..';\n\nexport const up = () => {\n  const allProperties = Properties.find({}).fetch();\n\n  return Promise.all(allProperties.map(({ _id, monthlyExpenses }) =>\n    Properties.rawCollection().update(\n      { _id },\n      {\n        ...(monthlyExpenses\n          ? { $set: { yearlyExpenses: monthlyExpenses * 12 } }\n          : {}),\n        $unset: { monthlyExpenses: true },\n      },\n    )));\n};\n\nexport const down = () => {\n  const allProperties = Properties.find({}).fetch();\n\n  return Promise.all(allProperties.map(({ _id, yearlyExpenses }) =>\n    Properties.rawCollection().update(\n      { _id },\n      {\n        ...(yearlyExpenses\n          ? { $set: { monthlyExpenses: Math.round(yearlyExpenses / 12) } }\n          : {}),\n        $unset: { yearlyExpenses: true },\n      },\n    )));\n};\n\nMigrations.add({\n  version: 14,\n  name: 'Change monthlyExpenses into yearlyExpenses',\n  up,\n  down,\n});\n"]},"sourceType":"script","hash":"8a64dd20f364bcc49a7dc6ab061fd6636fa70b38"}
