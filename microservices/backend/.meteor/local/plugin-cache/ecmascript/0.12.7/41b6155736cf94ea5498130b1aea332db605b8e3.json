{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/updateProperty.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/updateProperty.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/updateProperty.js","inputSourceMap":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/updateProperty.js"],"names":["Meteor","apiProperty","PropertyService","propertyUpdate","withMeteorUserId","checkQuery","impersonateSchema","HTTP_STATUS_CODES","updatePropertyAPI","user","_id","userId","params","body","object","query","propertyId","impersonateUser","schema","exists","propertyByExternalId","fetchOne","$filters","externalId","Error","run","then","property","Promise","resolve","status","OK","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AAEA,SAASC,WAAT;AACA,OAAOC,eAAP;AACA,SAASC,cAAT;AACA,SAASC,gBAAT;AACA,SAASC,UAAT,EAAqBC,iBAArB;AACA,SAASC,iBAAT;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GADmB;AAEzBC,EAAAA,MAFyB;AAGzBC,EAAAA,IAAI,EAAEC,MAHmB;AAIzBC,EAAAA;AAJyB,CAAD,KAKpB;AACJ,MAAI;AAAEC,IAAAA;AAAF,MAAiBJ,MAArB;AACA,QAAM;AAAE,wBAAoBK;AAAtB,MAA0CZ,UAAU,CAAC;AACzDU,IAAAA,KADyD;AAEzDG,IAAAA,MAAM,EAAEZ;AAFiD,GAAD,CAA1D;AAKA,QAAMa,MAAM,GAAGjB,eAAe,CAACiB,MAAhB,CAAuBH,UAAvB,CAAf;;AAEA,MAAI,CAACG,MAAL,EAAa;AACX,UAAMC,oBAAoB,GAAGlB,eAAe,CAACmB,QAAhB,CAAyB;AACpDC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,UAAU,EAAEP;AAAd;AAD0C,KAAzB,CAA7B;;AAGA,QAAII,oBAAJ,EAA0B;AACxBJ,MAAAA,UAAU,GAAGI,oBAAoB,CAACV,GAAlC;AACD,KAFD,MAEO;AACL,YAAM,IAAIV,MAAM,CAACwB,KAAX,CAAkB,6BAA4BR,UAAW,GAAzD,CAAN;AACD;AACF;;AAED,SAAOZ,gBAAgB,CAAC;AAAEO,IAAAA,MAAF;AAAUM,IAAAA;AAAV,GAAD,EAA8B,MACnDd,cAAc,CAACsB,GAAf,CAAmB;AAAET,IAAAA,UAAF;AAAcF,IAAAA;AAAd,GAAnB,EAA2CY,IAA3C,CAAgD,MAAM;AACpD,UAAMC,QAAQ,GAAGzB,eAAe,CAACmB,QAAhB,CAAyB;AACxCC,MAAAA,QAAQ,EAAE;AAAEZ,QAAAA,GAAG,EAAEM;AAAP,OAD8B;AAExC,SAAGf,WAAW;AAF0B,KAAzB,CAAjB;AAIA,WAAO2B,OAAO,CAACC,OAAR,CAAgB;AACrBC,MAAAA,MAAM,EAAEvB,iBAAiB,CAACwB,EADL;AAErBC,MAAAA,OAAO,EAAG,qBAAoBpB,MAAM,CAACI,UAAW,aAF3B;AAGrBW,MAAAA;AAHqB,KAAhB,CAAP;AAKD,GAVD,CADqB,CAAvB;AAYD,CArCD;;AAuCA,eAAenB,iBAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { apiProperty } from 'core/api/fragments';\nimport PropertyService from '../../../properties/server/PropertyService';\nimport { propertyUpdate } from '../../../methods';\nimport { withMeteorUserId } from '../helpers';\nimport { checkQuery, impersonateSchema } from './helpers';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\n\nconst updatePropertyAPI = ({\n  user: { _id: userId },\n  params,\n  body: object,\n  query,\n}) => {\n  let { propertyId } = params;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId: propertyId },\n    });\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(`No property found for id \"${propertyId}\"`);\n    }\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () =>\n    propertyUpdate.run({ propertyId, object }).then(() => {\n      const property = PropertyService.fetchOne({\n        $filters: { _id: propertyId },\n        ...apiProperty(),\n      });\n      return Promise.resolve({\n        status: HTTP_STATUS_CODES.OK,\n        message: `Property with id \"${params.propertyId}\" updated !`,\n        property,\n      });\n    }));\n};\n\nexport default updatePropertyAPI;\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/updateProperty.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/updateProperty.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet apiProperty;\nmodule.link(\"../../../fragments\", {\n  apiProperty(v) {\n    apiProperty = v;\n  }\n\n}, 1);\nlet PropertyService;\nmodule.link(\"../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 2);\nlet propertyUpdate;\nmodule.link(\"../../../methods\", {\n  propertyUpdate(v) {\n    propertyUpdate = v;\n  }\n\n}, 3);\nlet withMeteorUserId;\nmodule.link(\"../helpers\", {\n  withMeteorUserId(v) {\n    withMeteorUserId = v;\n  }\n\n}, 4);\nlet checkQuery, impersonateSchema;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  impersonateSchema(v) {\n    impersonateSchema = v;\n  }\n\n}, 5);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 6);\n\nconst updatePropertyAPI = ({\n  user: {\n    _id: userId\n  },\n  params,\n  body: object,\n  query\n}) => {\n  let {\n    propertyId\n  } = params;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: impersonateSchema\n  });\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: {\n        externalId: propertyId\n      }\n    });\n\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(`No property found for id \"${propertyId}\"`);\n    }\n  }\n\n  return withMeteorUserId({\n    userId,\n    impersonateUser\n  }, () => propertyUpdate.run({\n    propertyId,\n    object\n  }).then(() => {\n    const property = PropertyService.fetchOne((0, _objectSpread2.default)({\n      $filters: {\n        _id: propertyId\n      }\n    }, apiProperty()));\n    return Promise.resolve({\n      status: HTTP_STATUS_CODES.OK,\n      message: `Property with id \"${params.propertyId}\" updated !`,\n      property\n    });\n  }));\n};\n\nmodule.exportDefault(updatePropertyAPI);","map":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/updateProperty.js"],"names":["updatePropertyAPI","user","_id","userId","body","query","propertyId","impersonateUser","checkQuery","schema","impersonateSchema","exists","PropertyService","propertyByExternalId","$filters","externalId","Meteor","withMeteorUserId","object","property","apiProperty","status","HTTP_STATUS_CODES","message","params"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { apiProperty } from 'core/api/fragments';\nimport PropertyService from '../../../properties/server/PropertyService';\nimport { propertyUpdate } from '../../../methods';\nimport { withMeteorUserId } from '../helpers';\nimport { checkQuery, impersonateSchema } from './helpers';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\n\nconst updatePropertyAPI = ({\n  user: { _id: userId },\n  params,\n  body: object,\n  query,\n}) => {\n  let { propertyId } = params;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId: propertyId },\n    });\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(`No property found for id \"${propertyId}\"`);\n    }\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () =>\n    propertyUpdate.run({ propertyId, object }).then(() => {\n      const property = PropertyService.fetchOne({\n        $filters: { _id: propertyId },\n        ...apiProperty(),\n      });\n      return Promise.resolve({\n        status: HTTP_STATUS_CODES.OK,\n        message: `Property with id \"${params.propertyId}\" updated !`,\n        property,\n      });\n    }));\n};\n\nexport default updatePropertyAPI;\n"]},"sourceType":"script","hash":"41b6155736cf94ea5498130b1aea332db605b8e3"}
