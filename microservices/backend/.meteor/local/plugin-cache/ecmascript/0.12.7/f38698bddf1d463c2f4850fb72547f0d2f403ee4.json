{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/test/testFactories/index.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/pdf/server/test/testFactories/index.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/test/testFactories/index.js","inputSourceMap":{"version":3,"sources":["imports/core/api/pdf/server/test/testFactories/index.js"],"names":["Factory","PROPERTY_TYPE","LoanService","adminLoan","fakeBorrower","FAKE_HOUSE","FAKE_APPARTMENT","fakeStructure","getSingleBorrowerLoan","purchaseType","residenceType","borrowers","propertyType","structures","borrowerId","create","_id","propertyId","FLAT","borrowerIds","propertyIds","map","structure","getTwoBorrowersLoan","borrower1Id","borrower2Id","finalStructures","selectedStructure","id","getFullLoan","loanId","fetchOne","$filters"],"mappings":"AAAA;AACA,SAASA,OAAT,QAAwB,wBAAxB;AAEA,SAASC,aAAT;AACA,OAAOC,WAAP;AACA,SAASC,SAAT;AACA,SACEC,YADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,aAJF;AAOA,OAAO,MAAMC,qBAAqB,GAAG,CAAC;AACpCC,EAAAA,YADoC;AAEpCC,EAAAA,aAFoC;AAGpCC,EAAAA,SAHoC;AAIpCC,EAAAA,YAJoC;AAKpCC,EAAAA;AALoC,CAAD,KAM/B;AACJ,QAAMC,UAAU,GAAGd,OAAO,CAACe,MAAR,CAAe,cAAf,EAA+BX,YAAY,CAACO,SAAD,CAA3C,EAChBK,GADH;;AAEA,QAAMC,UAAU,GAAGjB,OAAO,CAACe,MAAR,CAAe,cAAf,EAA+B,EAChD,IAAIH,YAAY,KAAKX,aAAa,CAACiB,IAA/B,GAAsCZ,eAAtC,GAAwDD,UAA5D;AADgD,GAA/B,EAEhBW,GAFH;;AAIA,SAAOhB,OAAO,CAACe,MAAR,CAAe,UAAf,EAA2B;AAChCN,IAAAA,YADgC;AAEhCC,IAAAA,aAFgC;AAGhCS,IAAAA,WAAW,EAAE,CAACL,UAAD,CAHmB;AAIhCM,IAAAA,WAAW,EAAE,CAACH,UAAD,CAJmB;AAKhCJ,IAAAA,UAAU,EAAEA,UAAU,CAACQ,GAAX,CAAeC,SAAS,IAClCf,aAAa,CAAC;AAAEY,MAAAA,WAAW,EAAE,CAACL,UAAD,CAAf;AAA6B,SAAGQ;AAAhC,KAAD,CADH;AALoB,GAA3B,EAOJN,GAPH;AAQD,CArBM;AAuBP,OAAO,MAAMO,mBAAmB,GAAG,CAAC;AAClCd,EAAAA,YADkC;AAElCC,EAAAA,aAFkC;AAGlCC,EAAAA,SAHkC;AAIlCC,EAAAA,YAJkC;AAKlCC,EAAAA;AALkC,CAAD,KAM7B;AACJ,QAAMW,WAAW,GAAGxB,OAAO,CAACe,MAAR,CAClB,cADkB,EAElBX,YAAY,CAAC,EAAE,GAAGO,SAAS,CAAC,CAAD;AAAd,GAAD,CAFM,EAGlBK,GAHF;;AAIA,QAAMS,WAAW,GAAGzB,OAAO,CAACe,MAAR,CAClB,cADkB,EAElBX,YAAY,CAAC,EAAE,GAAGO,SAAS,CAAC,CAAD;AAAd,GAAD,CAFM,EAGlBK,GAHF;;AAIA,QAAMC,UAAU,GAAGjB,OAAO,CAACe,MAAR,CAAe,cAAf,EAA+B,EAChD,IAAIH,YAAY,KAAKX,aAAa,CAACiB,IAA/B,GAAsCZ,eAAtC,GAAwDD,UAA5D;AADgD,GAA/B,EAEhBW,GAFH;;AAIA,QAAMU,eAAe,GAAGb,UAAU,CAACQ,GAAX,CAAeC,SAAS,IAC9Cf,aAAa,CAAC;AACZY,IAAAA,WAAW,EAAE,CAACK,WAAD,EAAcC,WAAd,CADD;AAEZR,IAAAA,UAFY;AAGZ,OAAGK;AAHS,GAAD,CADS,CAAxB;AAOA,SAAOtB,OAAO,CAACe,MAAR,CAAe,UAAf,EAA2B;AAChCN,IAAAA,YADgC;AAEhCC,IAAAA,aAFgC;AAGhCS,IAAAA,WAAW,EAAE,CAACK,WAAD,EAAcC,WAAd,CAHmB;AAIhCL,IAAAA,WAAW,EAAE,CAACH,UAAD,CAJmB;AAKhCJ,IAAAA,UAAU,EAAEa,eALoB;AAMhCC,IAAAA,iBAAiB,EAAED,eAAe,CAAC,CAAD,CAAf,CAAmBE;AANN,GAA3B,EAOJZ,GAPH;AAQD,CAlCM;AAoCP,OAAO,MAAMa,WAAW,GAAGC,MAAM,IAC/B5B,WAAW,CAAC6B,QAAZ,CAAqB;AAAEC,EAAAA,QAAQ,EAAE;AAAEJ,IAAAA,EAAE,EAAEE;AAAN,GAAZ;AAA4B,KAAG3B,SAAS;AAAxC,CAArB,CADK","sourcesContent":["import './testFactories';\nimport { Factory } from 'meteor/dburles:factory';\n\nimport { PROPERTY_TYPE } from '../../../../constants';\nimport LoanService from '../../../../loans/server/LoanService';\nimport { adminLoan } from '../../../../fragments';\nimport {\n  fakeBorrower,\n  FAKE_HOUSE,\n  FAKE_APPARTMENT,\n  fakeStructure,\n} from './fakes';\n\nexport const getSingleBorrowerLoan = ({\n  purchaseType,\n  residenceType,\n  borrowers,\n  propertyType,\n  structures,\n}) => {\n  const borrowerId = Factory.create('testBorrower', fakeBorrower(borrowers))\n    ._id;\n  const propertyId = Factory.create('testProperty', {\n    ...(propertyType === PROPERTY_TYPE.FLAT ? FAKE_APPARTMENT : FAKE_HOUSE),\n  })._id;\n\n  return Factory.create('testLoan', {\n    purchaseType,\n    residenceType,\n    borrowerIds: [borrowerId],\n    propertyIds: [propertyId],\n    structures: structures.map(structure =>\n      fakeStructure({ borrowerIds: [borrowerId], ...structure })),\n  })._id;\n};\n\nexport const getTwoBorrowersLoan = ({\n  purchaseType,\n  residenceType,\n  borrowers,\n  propertyType,\n  structures,\n}) => {\n  const borrower1Id = Factory.create(\n    'testBorrower',\n    fakeBorrower({ ...borrowers[0] }),\n  )._id;\n  const borrower2Id = Factory.create(\n    'testBorrower',\n    fakeBorrower({ ...borrowers[1] }),\n  )._id;\n  const propertyId = Factory.create('testProperty', {\n    ...(propertyType === PROPERTY_TYPE.FLAT ? FAKE_APPARTMENT : FAKE_HOUSE),\n  })._id;\n\n  const finalStructures = structures.map(structure =>\n    fakeStructure({\n      borrowerIds: [borrower1Id, borrower2Id],\n      propertyId,\n      ...structure,\n    }));\n\n  return Factory.create('testLoan', {\n    purchaseType,\n    residenceType,\n    borrowerIds: [borrower1Id, borrower2Id],\n    propertyIds: [propertyId],\n    structures: finalStructures,\n    selectedStructure: finalStructures[0].id,\n  })._id;\n};\n\nexport const getFullLoan = loanId =>\n  LoanService.fetchOne({ $filters: { id: loanId }, ...adminLoan() });\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/test/testFactories/index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/pdf/server/test/testFactories/index.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  getSingleBorrowerLoan: () => getSingleBorrowerLoan,\n  getTwoBorrowersLoan: () => getTwoBorrowersLoan,\n  getFullLoan: () => getFullLoan\n});\nmodule.link(\"./testFactories\");\nlet Factory;\nmodule.link(\"meteor/dburles:factory\", {\n  Factory(v) {\n    Factory = v;\n  }\n\n}, 0);\nlet PROPERTY_TYPE;\nmodule.link(\"../../../../constants\", {\n  PROPERTY_TYPE(v) {\n    PROPERTY_TYPE = v;\n  }\n\n}, 1);\nlet LoanService;\nmodule.link(\"../../../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 2);\nlet adminLoan;\nmodule.link(\"../../../../fragments\", {\n  adminLoan(v) {\n    adminLoan = v;\n  }\n\n}, 3);\nlet fakeBorrower, FAKE_HOUSE, FAKE_APPARTMENT, fakeStructure;\nmodule.link(\"./fakes\", {\n  fakeBorrower(v) {\n    fakeBorrower = v;\n  },\n\n  FAKE_HOUSE(v) {\n    FAKE_HOUSE = v;\n  },\n\n  FAKE_APPARTMENT(v) {\n    FAKE_APPARTMENT = v;\n  },\n\n  fakeStructure(v) {\n    fakeStructure = v;\n  }\n\n}, 4);\n\nconst getSingleBorrowerLoan = ({\n  purchaseType,\n  residenceType,\n  borrowers,\n  propertyType,\n  structures\n}) => {\n  const borrowerId = Factory.create('testBorrower', fakeBorrower(borrowers))._id;\n\n  const propertyId = Factory.create('testProperty', (0, _objectSpread2.default)({}, propertyType === PROPERTY_TYPE.FLAT ? FAKE_APPARTMENT : FAKE_HOUSE))._id;\n\n  return Factory.create('testLoan', {\n    purchaseType,\n    residenceType,\n    borrowerIds: [borrowerId],\n    propertyIds: [propertyId],\n    structures: structures.map(structure => fakeStructure((0, _objectSpread2.default)({\n      borrowerIds: [borrowerId]\n    }, structure)))\n  })._id;\n};\n\nconst getTwoBorrowersLoan = ({\n  purchaseType,\n  residenceType,\n  borrowers,\n  propertyType,\n  structures\n}) => {\n  const borrower1Id = Factory.create('testBorrower', fakeBorrower((0, _objectSpread2.default)({}, borrowers[0])))._id;\n\n  const borrower2Id = Factory.create('testBorrower', fakeBorrower((0, _objectSpread2.default)({}, borrowers[1])))._id;\n\n  const propertyId = Factory.create('testProperty', (0, _objectSpread2.default)({}, propertyType === PROPERTY_TYPE.FLAT ? FAKE_APPARTMENT : FAKE_HOUSE))._id;\n\n  const finalStructures = structures.map(structure => fakeStructure((0, _objectSpread2.default)({\n    borrowerIds: [borrower1Id, borrower2Id],\n    propertyId\n  }, structure)));\n  return Factory.create('testLoan', {\n    purchaseType,\n    residenceType,\n    borrowerIds: [borrower1Id, borrower2Id],\n    propertyIds: [propertyId],\n    structures: finalStructures,\n    selectedStructure: finalStructures[0].id\n  })._id;\n};\n\nconst getFullLoan = loanId => LoanService.fetchOne((0, _objectSpread2.default)({\n  $filters: {\n    id: loanId\n  }\n}, adminLoan()));","map":{"version":3,"sources":["imports/core/api/pdf/server/test/testFactories/index.js"],"names":["getSingleBorrowerLoan","structures","borrowerId","Factory","fakeBorrower","propertyId","propertyType","PROPERTY_TYPE","borrowerIds","propertyIds","structure","fakeStructure","getTwoBorrowersLoan","borrower1Id","borrowers","borrower2Id","finalStructures","selectedStructure","id","getFullLoan","loanId","$filters","adminLoan"],"mappings":"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","sourcesContent":["import './testFactories';\nimport { Factory } from 'meteor/dburles:factory';\n\nimport { PROPERTY_TYPE } from '../../../../constants';\nimport LoanService from '../../../../loans/server/LoanService';\nimport { adminLoan } from '../../../../fragments';\nimport {\n  fakeBorrower,\n  FAKE_HOUSE,\n  FAKE_APPARTMENT,\n  fakeStructure,\n} from './fakes';\n\nexport const getSingleBorrowerLoan = ({\n  purchaseType,\n  residenceType,\n  borrowers,\n  propertyType,\n  structures,\n}) => {\n  const borrowerId = Factory.create('testBorrower', fakeBorrower(borrowers))\n    ._id;\n  const propertyId = Factory.create('testProperty', {\n    ...(propertyType === PROPERTY_TYPE.FLAT ? FAKE_APPARTMENT : FAKE_HOUSE),\n  })._id;\n\n  return Factory.create('testLoan', {\n    purchaseType,\n    residenceType,\n    borrowerIds: [borrowerId],\n    propertyIds: [propertyId],\n    structures: structures.map(structure =>\n      fakeStructure({ borrowerIds: [borrowerId], ...structure })),\n  })._id;\n};\n\nexport const getTwoBorrowersLoan = ({\n  purchaseType,\n  residenceType,\n  borrowers,\n  propertyType,\n  structures,\n}) => {\n  const borrower1Id = Factory.create(\n    'testBorrower',\n    fakeBorrower({ ...borrowers[0] }),\n  )._id;\n  const borrower2Id = Factory.create(\n    'testBorrower',\n    fakeBorrower({ ...borrowers[1] }),\n  )._id;\n  const propertyId = Factory.create('testProperty', {\n    ...(propertyType === PROPERTY_TYPE.FLAT ? FAKE_APPARTMENT : FAKE_HOUSE),\n  })._id;\n\n  const finalStructures = structures.map(structure =>\n    fakeStructure({\n      borrowerIds: [borrower1Id, borrower2Id],\n      propertyId,\n      ...structure,\n    }));\n\n  return Factory.create('testLoan', {\n    purchaseType,\n    residenceType,\n    borrowerIds: [borrower1Id, borrower2Id],\n    propertyIds: [propertyId],\n    structures: finalStructures,\n    selectedStructure: finalStructures[0].id,\n  })._id;\n};\n\nexport const getFullLoan = loanId =>\n  LoanService.fetchOne({ $filters: { id: loanId }, ...adminLoan() });\n"]},"sourceType":"script","hash":"f38698bddf1d463c2f4850fb72547f0d2f403ee4"}
