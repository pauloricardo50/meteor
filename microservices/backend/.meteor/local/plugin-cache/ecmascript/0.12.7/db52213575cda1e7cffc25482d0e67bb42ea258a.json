{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/redis/PubSubManager.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/cultofcoders:redis-oplog/lib/redis/PubSubManager.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/redis/PubSubManager.js","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/redis/PubSubManager.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:redis-oplog/lib/redis/PubSubManager.js"}},"code":"module.export({\n  default: () => PubSubManager\n});\nlet getRedisListener, getRedisPusher;\nmodule.link(\"./getRedisClient\", {\n  getRedisListener(v) {\n    getRedisListener = v;\n  },\n\n  getRedisPusher(v) {\n    getRedisPusher = v;\n  }\n\n}, 0);\n\nclass PubSubManager {\n  constructor() {\n    this.channelHandlers = {};\n    this.queue = new Meteor._SynchronousQueue();\n    this.listener = getRedisListener();\n    this.pusher = getRedisPusher();\n\n    this._initMessageListener();\n  }\n  /**\n   * Pushes to Redis\n   * @param {string} channel\n   * @param {object} message\n   */\n\n\n  publish(channel, message) {\n    this.pusher.publish(channel, EJSON.stringify(message));\n  }\n  /**\n   * @param {string} channel\n   * @param {function} handler\n   */\n\n\n  subscribe(channel, handler) {\n    this.queue.queueTask(() => {\n      if (!this.channelHandlers[channel]) {\n        this._initChannel(channel);\n      }\n\n      this.channelHandlers[channel].push(handler);\n    });\n  }\n  /**\n   * @param {string} channel\n   * @param {function} handler\n   */\n\n\n  unsubscribe(channel, handler) {\n    this.queue.queueTask(() => {\n      if (!this.channelHandlers[channel]) {\n        return;\n      }\n\n      this.channelHandlers[channel] = this.channelHandlers[channel].filter(_handler => {\n        return _handler !== handler;\n      });\n\n      if (this.channelHandlers[channel].length === 0) {\n        this._destroyChannel(channel);\n      }\n    });\n  }\n  /**\n   * Initializes listening for redis messages\n   * @private\n   */\n\n\n  _initMessageListener() {\n    const self = this;\n    this.listener.on('message', Meteor.bindEnvironment(function (channel, _message) {\n      if (self.channelHandlers[channel]) {\n        const message = EJSON.parse(_message);\n        self.channelHandlers[channel].forEach(channelHandler => {\n          channelHandler(message);\n        });\n      }\n    }));\n  }\n  /**\n   * @param channel\n   * @private\n   */\n\n\n  _initChannel(channel) {\n    this.listener.subscribe(channel);\n    this.channelHandlers[channel] = [];\n  }\n  /**\n   * @param channel\n   * @private\n   */\n\n\n  _destroyChannel(channel) {\n    this.listener.unsubscribe(channel);\n    delete this.channelHandlers[channel];\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:redis-oplog/lib/redis/PubSubManager.js"],"names":["module","export","default","PubSubManager","getRedisListener","getRedisPusher","link","v","constructor","channelHandlers","queue","Meteor","_SynchronousQueue","listener","pusher","_initMessageListener","publish","channel","message","EJSON","stringify","subscribe","handler","queueTask","_initChannel","push","unsubscribe","filter","_handler","length","_destroyChannel","self","on","bindEnvironment","_message","parse","forEach","channelHandler"],"mappings":"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","sourcesContent":["import { getRedisListener, getRedisPusher } from './getRedisClient';\n\n/**\n * Manages communication with Redis\n * Unifies all libraries that use this\n */\nexport default class PubSubManager {\n    constructor() {\n        this.channelHandlers = {};\n        this.queue = new Meteor._SynchronousQueue();\n\n        this.listener = getRedisListener();\n        this.pusher = getRedisPusher();\n\n        this._initMessageListener();\n    }\n\n    /**\n     * Pushes to Redis\n     * @param {string} channel\n     * @param {object} message\n     */\n    publish(channel, message) {\n        this.pusher.publish(channel, EJSON.stringify(message));\n    }\n\n    /**\n     * @param {string} channel\n     * @param {function} handler\n     */\n    subscribe(channel, handler) {\n        this.queue.queueTask(() => {\n            if (!this.channelHandlers[channel]) {\n                this._initChannel(channel);\n            }\n\n            this.channelHandlers[channel].push(handler);\n        });\n    }\n\n    /**\n     * @param {string} channel\n     * @param {function} handler\n     */\n    unsubscribe(channel, handler) {\n        this.queue.queueTask(() => {\n            if (!this.channelHandlers[channel]) {\n                return;\n            }\n\n            this.channelHandlers[channel] = this.channelHandlers[channel].filter(_handler => {\n                return _handler !== handler;\n            });\n\n            if (this.channelHandlers[channel].length === 0) {\n                this._destroyChannel(channel);\n            }\n        })\n    }\n\n    /**\n     * Initializes listening for redis messages\n     * @private\n     */\n    _initMessageListener() {\n        const self = this;\n\n        this.listener.on('message', Meteor.bindEnvironment(function(channel, _message) {\n            if (self.channelHandlers[channel]) {\n                const message = EJSON.parse(_message);\n                self.channelHandlers[channel].forEach(channelHandler => {\n                    channelHandler(message);\n                })\n            }\n        }));\n    }\n\n    /**\n     * @param channel\n     * @private\n     */\n    _initChannel(channel) {\n        this.listener.subscribe(channel);\n\n        this.channelHandlers[channel] = [];\n    }\n\n    /**\n     * @param channel\n     * @private\n     */\n    _destroyChannel(channel) {\n        this.listener.unsubscribe(channel);\n\n        delete this.channelHandlers[channel];\n    }\n}\n"]},"sourceType":"script","hash":"db52213575cda1e7cffc25482d0e67bb42ea258a"}
