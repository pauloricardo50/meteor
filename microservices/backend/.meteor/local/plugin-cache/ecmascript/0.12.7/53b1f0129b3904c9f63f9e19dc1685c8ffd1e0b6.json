{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/methods/server/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/methods/server/methods.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/methods/server/methods.js","inputSourceMap":{"version":3,"sources":["imports/core/api/methods/server/methods.js"],"names":["Meteor","Mongo","LOANS_COLLECTION","SecurityService","Services","LoanService","BorrowerService","PropertyService","getMixpanelAuthorization","getServerTime","downloadPDF","addBorrower","setUserToLoan","removeBorrower","submitContactForm","addUserToDoc","throwDevError","setAdditionalDoc","removeAdditionalDoc","migrateToLatest","updateDocument","updateDocumentUnset","generateScenario","generator","migrate","setHandler","checkCurrentUserIsAdmin","btoa","require","API_KEY","API_SECRET","settings","mixpanel","Date","context","loanId","borrower","loans","isAllowedToUpdate","loan","get","borrowerIds","length","Error","newBorrowerId","insert","userId","pushValue","object","checkLoggedIn","propertyId","currentUserId","update","forEach","borrowerId","borrowers","remove","pullValue","docId","collection","options","newUserId","doc","Collection","findOne","checkUserIsAdmin","error","checkOwnership","userLinks","$push","_id","_","promise","promiseNoReturn","console","log","Promise","resolve","reject","rest","checkCurrentUserIsDev","service","_update","id","checkUserIsDev","operator","scenario","isTest"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nimport { LOANS_COLLECTION } from '../../constants';\nimport SecurityService from '../../security';\nimport { Services } from '../../server';\nimport LoanService from '../../loans/server/LoanService';\nimport BorrowerService from '../../borrowers/server/BorrowerService';\nimport PropertyService from '../../properties/server/PropertyService';\nimport {\n  getMixpanelAuthorization,\n  getServerTime,\n  downloadPDF,\n  addBorrower,\n  setUserToLoan,\n  removeBorrower,\n  submitContactForm,\n  addUserToDoc,\n  throwDevError,\n  setAdditionalDoc,\n  removeAdditionalDoc,\n  migrateToLatest,\n  updateDocument,\n  updateDocumentUnset,\n  generateScenario,\n} from '../methodDefinitions';\nimport generator from '../../factories';\nimport { migrate } from '../../migrations/server';\n\ngetMixpanelAuthorization.setHandler(() => {\n  SecurityService.checkCurrentUserIsAdmin();\n  const btoa = require('btoa');\n  const { API_KEY, API_SECRET } = Meteor.settings.mixpanel;\n\n  return `Basic ${btoa(`${API_SECRET}:${API_KEY}`)}`;\n});\n\ngetServerTime.setHandler(() => new Date());\n\ndownloadPDF.setHandler(() => {\n  // TODO\n});\n\naddBorrower.setHandler((context, { loanId, borrower }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  const loan = LoanService.get(loanId);\n\n  // A loan can't have more than 2 borrowers at the moment\n  if (loan.borrowerIds.length >= 2) {\n    throw new Meteor.Error('Vous ne pouvez pas avoir plus de 2 emprunteurs');\n  }\n\n  const newBorrowerId = BorrowerService.insert({\n    borrower,\n    userId: loan.userId,\n  });\n\n  return LoanService.pushValue({\n    loanId,\n    object: { borrowerIds: newBorrowerId },\n  });\n});\n\nsetUserToLoan.setHandler((context, { loanId }) => {\n  SecurityService.checkLoggedIn();\n  const loan = LoanService.get(loanId);\n  const { borrowerIds, propertyId } = loan;\n\n  if (loan.userId) {\n    throw new Meteor.Error('loan-already-owned');\n  }\n\n  const currentUserId = Meteor.userId();\n\n  LoanService.update({ loanId, object: { userId: currentUserId } });\n  borrowerIds.forEach((borrowerId) => {\n    BorrowerService.update({ borrowerId, object: { userId: currentUserId } });\n  });\n  PropertyService.update({ propertyId, object: { userId: currentUserId } });\n});\n\nremoveBorrower.setHandler((context, { loanId, borrowerId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  SecurityService.borrowers.isAllowedToUpdate(borrowerId);\n\n  const loan = LoanService.get(loanId);\n\n  // A loan has to have at least 1 borrower\n  if (loan.borrowerIds.length <= 1) {\n    return false;\n  }\n\n  BorrowerService.remove({ borrowerId });\n\n  return LoanService.pullValue({ loanId, object: { borrowerIds: borrowerId } });\n});\n\n// This method needs to exist as its being listened to in EmailListeners\nsubmitContactForm.setHandler(() => null);\n\naddUserToDoc.setHandler(({ userId }, { docId, collection, options, userId: newUserId }) => {\n  const doc = Mongo.Collection.get(collection).findOne(docId);\n  try {\n    SecurityService.checkUserIsAdmin(userId);\n  } catch (error) {\n    SecurityService.checkOwnership(doc);\n  }\n  Mongo.Collection.get(collection).update(docId, {\n    userLinks: { $push: { _id: newUserId, ...options } },\n  });\n});\n\nthrowDevError.setHandler((_, { promise, promiseNoReturn }) => {\n  console.log('Throwing dev error..');\n\n  if (promise) {\n    return new Promise((resolve, reject) => {\n      reject(new Meteor.Error(400, 'Dev promise error!'));\n    });\n  }\n  if (promiseNoReturn) {\n    new Promise((resolve, reject) => {\n      reject(new Meteor.Error(400, 'Dev promise error!'));\n    });\n\n    return;\n  }\n\n  throw new Meteor.Error(400, 'Dev error!');\n});\n\nsetAdditionalDoc.setHandler((context, { collection, ...rest }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return Services[collection].setAdditionalDoc(rest);\n});\n\nremoveAdditionalDoc.setHandler((context, { collection, ...rest }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return Services[collection].removeAdditionalDoc(rest);\n});\n\nmigrateToLatest.setHandler(({ userId }) => {\n  SecurityService.checkCurrentUserIsDev();\n  migrate();\n});\n\nupdateDocument.setHandler(({ userId }, { collection, docId, object }) => {\n  const service = Services[collection];\n  try {\n    SecurityService.checkUserIsAdmin(userId);\n  } catch (error) {\n    if (collection === LOANS_COLLECTION) {\n      SecurityService.loans.isAllowedToUpdate(docId);\n    } else {\n      const doc = service.findOne(docId);\n      SecurityService.checkOwnership(doc);\n    }\n  }\n\n  return service._update({ id: docId, object });\n});\n\nupdateDocumentUnset.setHandler(({ userId }, { collection, docId, object }) => {\n  const service = Services[collection];\n  SecurityService.checkUserIsDev(userId);\n\n  return service._update({ id: docId, object, operator: '$unset' });\n});\n\ngenerateScenario.setHandler(({ userId }, { scenario }) => {\n  if (!Meteor.isTest) {\n    SecurityService.checkUserIsAdmin(userId);\n  }\n\n  return generator(scenario);\n});\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/methods/server/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/methods/server/methods.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet LOANS_COLLECTION;\nmodule.link(\"../../constants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  }\n\n}, 2);\nlet SecurityService;\nmodule.link(\"../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 3);\nlet Services;\nmodule.link(\"../../server\", {\n  Services(v) {\n    Services = v;\n  }\n\n}, 4);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 5);\nlet BorrowerService;\nmodule.link(\"../../borrowers/server/BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 6);\nlet PropertyService;\nmodule.link(\"../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 7);\nlet getMixpanelAuthorization, getServerTime, downloadPDF, addBorrower, setUserToLoan, removeBorrower, submitContactForm, addUserToDoc, throwDevError, setAdditionalDoc, removeAdditionalDoc, migrateToLatest, updateDocument, updateDocumentUnset, generateScenario;\nmodule.link(\"../methodDefinitions\", {\n  getMixpanelAuthorization(v) {\n    getMixpanelAuthorization = v;\n  },\n\n  getServerTime(v) {\n    getServerTime = v;\n  },\n\n  downloadPDF(v) {\n    downloadPDF = v;\n  },\n\n  addBorrower(v) {\n    addBorrower = v;\n  },\n\n  setUserToLoan(v) {\n    setUserToLoan = v;\n  },\n\n  removeBorrower(v) {\n    removeBorrower = v;\n  },\n\n  submitContactForm(v) {\n    submitContactForm = v;\n  },\n\n  addUserToDoc(v) {\n    addUserToDoc = v;\n  },\n\n  throwDevError(v) {\n    throwDevError = v;\n  },\n\n  setAdditionalDoc(v) {\n    setAdditionalDoc = v;\n  },\n\n  removeAdditionalDoc(v) {\n    removeAdditionalDoc = v;\n  },\n\n  migrateToLatest(v) {\n    migrateToLatest = v;\n  },\n\n  updateDocument(v) {\n    updateDocument = v;\n  },\n\n  updateDocumentUnset(v) {\n    updateDocumentUnset = v;\n  },\n\n  generateScenario(v) {\n    generateScenario = v;\n  }\n\n}, 8);\nlet generator;\nmodule.link(\"../../factories\", {\n  default(v) {\n    generator = v;\n  }\n\n}, 9);\nlet migrate;\nmodule.link(\"../../migrations/server\", {\n  migrate(v) {\n    migrate = v;\n  }\n\n}, 10);\ngetMixpanelAuthorization.setHandler(() => {\n  SecurityService.checkCurrentUserIsAdmin();\n\n  const btoa = require('btoa');\n\n  const {\n    API_KEY,\n    API_SECRET\n  } = Meteor.settings.mixpanel;\n  return `Basic ${btoa(`${API_SECRET}:${API_KEY}`)}`;\n});\ngetServerTime.setHandler(() => new Date());\ndownloadPDF.setHandler(() => {// TODO\n});\naddBorrower.setHandler((context, {\n  loanId,\n  borrower\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  const loan = LoanService.get(loanId); // A loan can't have more than 2 borrowers at the moment\n\n  if (loan.borrowerIds.length >= 2) {\n    throw new Meteor.Error('Vous ne pouvez pas avoir plus de 2 emprunteurs');\n  }\n\n  const newBorrowerId = BorrowerService.insert({\n    borrower,\n    userId: loan.userId\n  });\n  return LoanService.pushValue({\n    loanId,\n    object: {\n      borrowerIds: newBorrowerId\n    }\n  });\n});\nsetUserToLoan.setHandler((context, {\n  loanId\n}) => {\n  SecurityService.checkLoggedIn();\n  const loan = LoanService.get(loanId);\n  const {\n    borrowerIds,\n    propertyId\n  } = loan;\n\n  if (loan.userId) {\n    throw new Meteor.Error('loan-already-owned');\n  }\n\n  const currentUserId = Meteor.userId();\n  LoanService.update({\n    loanId,\n    object: {\n      userId: currentUserId\n    }\n  });\n  borrowerIds.forEach(borrowerId => {\n    BorrowerService.update({\n      borrowerId,\n      object: {\n        userId: currentUserId\n      }\n    });\n  });\n  PropertyService.update({\n    propertyId,\n    object: {\n      userId: currentUserId\n    }\n  });\n});\nremoveBorrower.setHandler((context, {\n  loanId,\n  borrowerId\n}) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  SecurityService.borrowers.isAllowedToUpdate(borrowerId);\n  const loan = LoanService.get(loanId); // A loan has to have at least 1 borrower\n\n  if (loan.borrowerIds.length <= 1) {\n    return false;\n  }\n\n  BorrowerService.remove({\n    borrowerId\n  });\n  return LoanService.pullValue({\n    loanId,\n    object: {\n      borrowerIds: borrowerId\n    }\n  });\n}); // This method needs to exist as its being listened to in EmailListeners\n\nsubmitContactForm.setHandler(() => null);\naddUserToDoc.setHandler(({\n  userId\n}, {\n  docId,\n  collection,\n  options,\n  userId: newUserId\n}) => {\n  const doc = Mongo.Collection.get(collection).findOne(docId);\n\n  try {\n    SecurityService.checkUserIsAdmin(userId);\n  } catch (error) {\n    SecurityService.checkOwnership(doc);\n  }\n\n  Mongo.Collection.get(collection).update(docId, {\n    userLinks: {\n      $push: (0, _objectSpread2.default)({\n        _id: newUserId\n      }, options)\n    }\n  });\n});\nthrowDevError.setHandler((_, {\n  promise,\n  promiseNoReturn\n}) => {\n  console.log('Throwing dev error..');\n\n  if (promise) {\n    return new Promise((resolve, reject) => {\n      reject(new Meteor.Error(400, 'Dev promise error!'));\n    });\n  }\n\n  if (promiseNoReturn) {\n    new Promise((resolve, reject) => {\n      reject(new Meteor.Error(400, 'Dev promise error!'));\n    });\n    return;\n  }\n\n  throw new Meteor.Error(400, 'Dev error!');\n});\nsetAdditionalDoc.setHandler((context, _ref) => {\n  let {\n    collection\n  } = _ref,\n      rest = (0, _objectWithoutProperties2.default)(_ref, [\"collection\"]);\n  SecurityService.checkCurrentUserIsAdmin();\n  return Services[collection].setAdditionalDoc(rest);\n});\nremoveAdditionalDoc.setHandler((context, _ref2) => {\n  let {\n    collection\n  } = _ref2,\n      rest = (0, _objectWithoutProperties2.default)(_ref2, [\"collection\"]);\n  SecurityService.checkCurrentUserIsAdmin();\n  return Services[collection].removeAdditionalDoc(rest);\n});\nmigrateToLatest.setHandler(({\n  userId\n}) => {\n  SecurityService.checkCurrentUserIsDev();\n  migrate();\n});\nupdateDocument.setHandler(({\n  userId\n}, {\n  collection,\n  docId,\n  object\n}) => {\n  const service = Services[collection];\n\n  try {\n    SecurityService.checkUserIsAdmin(userId);\n  } catch (error) {\n    if (collection === LOANS_COLLECTION) {\n      SecurityService.loans.isAllowedToUpdate(docId);\n    } else {\n      const doc = service.findOne(docId);\n      SecurityService.checkOwnership(doc);\n    }\n  }\n\n  return service._update({\n    id: docId,\n    object\n  });\n});\nupdateDocumentUnset.setHandler(({\n  userId\n}, {\n  collection,\n  docId,\n  object\n}) => {\n  const service = Services[collection];\n  SecurityService.checkUserIsDev(userId);\n  return service._update({\n    id: docId,\n    object,\n    operator: '$unset'\n  });\n});\ngenerateScenario.setHandler(({\n  userId\n}, {\n  scenario\n}) => {\n  if (!Meteor.isTest) {\n    SecurityService.checkUserIsAdmin(userId);\n  }\n\n  return generator(scenario);\n});","map":{"version":3,"sources":["imports/core/api/methods/server/methods.js"],"names":["getMixpanelAuthorization","SecurityService","btoa","require","API_SECRET","Meteor","API_KEY","getServerTime","downloadPDF","addBorrower","borrower","loan","LoanService","newBorrowerId","userId","object","borrowerIds","setUserToLoan","loanId","propertyId","currentUserId","borrowerId","BorrowerService","PropertyService","removeBorrower","submitContactForm","addUserToDoc","newUserId","doc","Mongo","userLinks","$push","_id","options","throwDevError","promiseNoReturn","console","reject","setAdditionalDoc","rest","Services","removeAdditionalDoc","migrateToLatest","migrate","updateDocument","service","collection","id","updateDocumentUnset","operator","generateScenario","scenario","generator"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nimport { LOANS_COLLECTION } from '../../constants';\nimport SecurityService from '../../security';\nimport { Services } from '../../server';\nimport LoanService from '../../loans/server/LoanService';\nimport BorrowerService from '../../borrowers/server/BorrowerService';\nimport PropertyService from '../../properties/server/PropertyService';\nimport {\n  getMixpanelAuthorization,\n  getServerTime,\n  downloadPDF,\n  addBorrower,\n  setUserToLoan,\n  removeBorrower,\n  submitContactForm,\n  addUserToDoc,\n  throwDevError,\n  setAdditionalDoc,\n  removeAdditionalDoc,\n  migrateToLatest,\n  updateDocument,\n  updateDocumentUnset,\n  generateScenario,\n} from '../methodDefinitions';\nimport generator from '../../factories';\nimport { migrate } from '../../migrations/server';\n\ngetMixpanelAuthorization.setHandler(() => {\n  SecurityService.checkCurrentUserIsAdmin();\n  const btoa = require('btoa');\n  const { API_KEY, API_SECRET } = Meteor.settings.mixpanel;\n\n  return `Basic ${btoa(`${API_SECRET}:${API_KEY}`)}`;\n});\n\ngetServerTime.setHandler(() => new Date());\n\ndownloadPDF.setHandler(() => {\n  // TODO\n});\n\naddBorrower.setHandler((context, { loanId, borrower }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  const loan = LoanService.get(loanId);\n\n  // A loan can't have more than 2 borrowers at the moment\n  if (loan.borrowerIds.length >= 2) {\n    throw new Meteor.Error('Vous ne pouvez pas avoir plus de 2 emprunteurs');\n  }\n\n  const newBorrowerId = BorrowerService.insert({\n    borrower,\n    userId: loan.userId,\n  });\n\n  return LoanService.pushValue({\n    loanId,\n    object: { borrowerIds: newBorrowerId },\n  });\n});\n\nsetUserToLoan.setHandler((context, { loanId }) => {\n  SecurityService.checkLoggedIn();\n  const loan = LoanService.get(loanId);\n  const { borrowerIds, propertyId } = loan;\n\n  if (loan.userId) {\n    throw new Meteor.Error('loan-already-owned');\n  }\n\n  const currentUserId = Meteor.userId();\n\n  LoanService.update({ loanId, object: { userId: currentUserId } });\n  borrowerIds.forEach((borrowerId) => {\n    BorrowerService.update({ borrowerId, object: { userId: currentUserId } });\n  });\n  PropertyService.update({ propertyId, object: { userId: currentUserId } });\n});\n\nremoveBorrower.setHandler((context, { loanId, borrowerId }) => {\n  SecurityService.loans.isAllowedToUpdate(loanId);\n  SecurityService.borrowers.isAllowedToUpdate(borrowerId);\n\n  const loan = LoanService.get(loanId);\n\n  // A loan has to have at least 1 borrower\n  if (loan.borrowerIds.length <= 1) {\n    return false;\n  }\n\n  BorrowerService.remove({ borrowerId });\n\n  return LoanService.pullValue({ loanId, object: { borrowerIds: borrowerId } });\n});\n\n// This method needs to exist as its being listened to in EmailListeners\nsubmitContactForm.setHandler(() => null);\n\naddUserToDoc.setHandler(({ userId }, { docId, collection, options, userId: newUserId }) => {\n  const doc = Mongo.Collection.get(collection).findOne(docId);\n  try {\n    SecurityService.checkUserIsAdmin(userId);\n  } catch (error) {\n    SecurityService.checkOwnership(doc);\n  }\n  Mongo.Collection.get(collection).update(docId, {\n    userLinks: { $push: { _id: newUserId, ...options } },\n  });\n});\n\nthrowDevError.setHandler((_, { promise, promiseNoReturn }) => {\n  console.log('Throwing dev error..');\n\n  if (promise) {\n    return new Promise((resolve, reject) => {\n      reject(new Meteor.Error(400, 'Dev promise error!'));\n    });\n  }\n  if (promiseNoReturn) {\n    new Promise((resolve, reject) => {\n      reject(new Meteor.Error(400, 'Dev promise error!'));\n    });\n\n    return;\n  }\n\n  throw new Meteor.Error(400, 'Dev error!');\n});\n\nsetAdditionalDoc.setHandler((context, { collection, ...rest }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return Services[collection].setAdditionalDoc(rest);\n});\n\nremoveAdditionalDoc.setHandler((context, { collection, ...rest }) => {\n  SecurityService.checkCurrentUserIsAdmin();\n  return Services[collection].removeAdditionalDoc(rest);\n});\n\nmigrateToLatest.setHandler(({ userId }) => {\n  SecurityService.checkCurrentUserIsDev();\n  migrate();\n});\n\nupdateDocument.setHandler(({ userId }, { collection, docId, object }) => {\n  const service = Services[collection];\n  try {\n    SecurityService.checkUserIsAdmin(userId);\n  } catch (error) {\n    if (collection === LOANS_COLLECTION) {\n      SecurityService.loans.isAllowedToUpdate(docId);\n    } else {\n      const doc = service.findOne(docId);\n      SecurityService.checkOwnership(doc);\n    }\n  }\n\n  return service._update({ id: docId, object });\n});\n\nupdateDocumentUnset.setHandler(({ userId }, { collection, docId, object }) => {\n  const service = Services[collection];\n  SecurityService.checkUserIsDev(userId);\n\n  return service._update({ id: docId, object, operator: '$unset' });\n});\n\ngenerateScenario.setHandler(({ userId }, { scenario }) => {\n  if (!Meteor.isTest) {\n    SecurityService.checkUserIsAdmin(userId);\n  }\n\n  return generator(scenario);\n});\n"]},"sourceType":"script","hash":"53b1f0129b3904c9f63f9e19dc1685c8ffd1e0b6"}
