{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/CustomSubmitField.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/AutoForm2/CustomSubmitField.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/CustomSubmitField.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/AutoForm2/CustomSubmitField.jsx"],"names":["React","filterDOMProps","PropTypes","Button","T","shouldDisableButton","disableActions","error","state","submitting","validating","disabled","CustomSubmitField","children","inputRef","label","value","setDisableActions","primary","raised","secondary","props","uniforms","e","target","type","contextTypes","shape","any","bool","isRequired","defaultProps","variant"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP;AACA,OAAOC,CAAP;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAC3BC,EAAAA,cAD2B;AAE3BC,EAAAA,KAF2B;AAG3BC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA;AAA1B;AAHoB,CAAD,KAItB,CAAC,EAAEL,cAAc,IAAIC,KAAlB,IAA2BI,QAA3B,IAAuCF,UAAvC,IAAqDC,UAAvD,CAJP;;AAMA,MAAME,iBAAiB,GAAG,CACxB;AACEC,EAAAA,QADF;AAEEP,EAAAA,cAFF;AAGEQ,EAAAA,QAHF;AAIEC,EAAAA,KAJF;AAKEC,EAAAA,KALF;AAMEC,EAAAA,iBANF;AAOEC,EAAAA,OAAO,GAAG,IAPZ;AAQEC,EAAAA,MAAM,GAAG,IARX;AASEC,EAAAA,SATF;AAUE,KAAGC;AAVL,CADwB,EAaxB;AAAEC,EAAAA,QAAQ,EAAE;AAAEd,IAAAA,KAAF;AAASD,IAAAA;AAAT;AAAZ,CAbwB,KAexB,CAAC,MAAD,CACE,SAAS,CAACF,mBAAmB,CAAC;AAC5BC,EAAAA,cAD4B;AAE5BC,EAAAA,KAF4B;AAG5BC,EAAAA,KAH4B;AAI5BS,EAAAA;AAJ4B,CAAD,CAApB,CADX,CAOE,IAAI,CAACH,QAAD,CAPN,CAQE,KAAK,QARP,CASE,MAAM,CAACE,KAAD,CATR,CAUE,QAAQ,CAACR,KAAK,CAACC,UAAP,CAVV,CAWE,QAAQ,CAAC,CAACW,SAAD,IAAcF,OAAf,CAXV,CAYE,OAAO,CAACC,MAAD,CAZT,CAaE,UAAU,CAACC,SAAD,CAbZ,CAcE,MAAM,CAACL,KAAK,IAAI,CAAC,CAAD,CAAG,GAAG,YAAN,GAAV,CAdR,CAeE,QAAQ,CAAEQ,CAAD,IAAO;AACd;AACA;AACAA,EAAAA,CAAC,CAACC,MAAF,CAASC,IAAT,GAAgB,QAAhB;AACD,CAJO,CAfV,CAoBE,IAAIxB,cAAc,CAACoB,KAAD,CAAlB,CApBF;IAsBE,CAACR,QAAD;EACF,EAAE,MAAF,CAtCF;;AAyCAD,iBAAiB,CAACc,YAAlB,GAAiC;AAC/BJ,EAAAA,QAAQ,EAAEpB,SAAS,CAACyB,KAAV,CAAgB;AACxBpB,IAAAA,KAAK,EAAEL,SAAS,CAAC0B,GADO;AAExBpB,IAAAA,KAAK,EAAEN,SAAS,CAACyB,KAAV,CAAgB;AACrBlB,MAAAA,UAAU,EAAEP,SAAS,CAAC2B,IAAV,CAAeC,UADN;AAErBnB,MAAAA,QAAQ,EAAET,SAAS,CAAC2B,IAAV,CAAeC,UAFJ;AAGrBpB,MAAAA,UAAU,EAAER,SAAS,CAAC2B,IAAV,CAAeC;AAHN,KAAhB,EAIJA;AANqB,GAAhB;AADqB,CAAjC;AAWAlB,iBAAiB,CAACmB,YAAlB,GAAiC;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAjC;AAEA,eAAepB,iBAAf","sourcesContent":["import React from 'react';\nimport filterDOMProps from 'uniforms/filterDOMProps';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Button';\nimport T from '../Translation';\n\nconst shouldDisableButton = ({\n  disableActions,\n  error,\n  state: { submitting, validating, disabled },\n}) => !!(disableActions || error || disabled || submitting || validating);\n\nconst CustomSubmitField = (\n  {\n    children,\n    disableActions,\n    inputRef,\n    label,\n    value,\n    setDisableActions,\n    primary = true,\n    raised = true,\n    secondary,\n    ...props\n  },\n  { uniforms: { state, error } },\n) => (\n  <Button\n    disabled={shouldDisableButton({\n      disableActions,\n      error,\n      state,\n      setDisableActions,\n    })}\n    ref={inputRef}\n    type=\"submit\"\n    value={value}\n    loading={state.submitting}\n    primary={!secondary && primary}\n    raised={raised}\n    secondary={secondary}\n    label={label || <T id=\"general.ok\" />}\n    onClick={(e) => {\n      // Make sure the target type is event, even if the label of the button\n      // was clicked. This is useful in PropertyForm and DashboardRecapProperty\n      e.target.type = 'submit';\n    }}\n    {...filterDOMProps(props)}\n  >\n    {children}\n  </Button>\n);\n\nCustomSubmitField.contextTypes = {\n  uniforms: PropTypes.shape({\n    error: PropTypes.any,\n    state: PropTypes.shape({\n      submitting: PropTypes.bool.isRequired,\n      disabled: PropTypes.bool.isRequired,\n      validating: PropTypes.bool.isRequired,\n    }).isRequired,\n  }),\n};\n\nCustomSubmitField.defaultProps = { variant: 'contained' };\n\nexport default CustomSubmitField;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/CustomSubmitField.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/AutoForm2/CustomSubmitField.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet filterDOMProps;\nmodule.link(\"uniforms/filterDOMProps\", {\n  default(v) {\n    filterDOMProps = v;\n  }\n\n}, 1);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 2);\nlet Button;\nmodule.link(\"../Button\", {\n  default(v) {\n    Button = v;\n  }\n\n}, 3);\nlet T;\nmodule.link(\"../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 4);\n\nconst shouldDisableButton = (_ref) => {\n  let {\n    disableActions,\n    error,\n    state: {\n      submitting,\n      validating,\n      disabled\n    }\n  } = _ref;\n  return !!(disableActions || error || disabled || submitting || validating);\n};\n\nconst CustomSubmitField = (_ref2, _ref3) => {\n  let {\n    children,\n    disableActions,\n    inputRef,\n    label,\n    value,\n    setDisableActions,\n    primary = true,\n    raised = true,\n    secondary\n  } = _ref2,\n      props = (0, _objectWithoutProperties2.default)(_ref2, [\"children\", \"disableActions\", \"inputRef\", \"label\", \"value\", \"setDisableActions\", \"primary\", \"raised\", \"secondary\"]);\n  let {\n    uniforms: {\n      state,\n      error\n    }\n  } = _ref3;\n  return React.createElement(Button, (0, _extends2.default)({\n    disabled: shouldDisableButton({\n      disableActions,\n      error,\n      state,\n      setDisableActions\n    }),\n    ref: inputRef,\n    type: \"submit\",\n    value: value,\n    loading: state.submitting,\n    primary: !secondary && primary,\n    raised: raised,\n    secondary: secondary,\n    label: label || React.createElement(T, {\n      id: \"general.ok\"\n    }),\n    onClick: e => {\n      // Make sure the target type is event, even if the label of the button\n      // was clicked. This is useful in PropertyForm and DashboardRecapProperty\n      e.target.type = 'submit';\n    }\n  }, filterDOMProps(props)), children);\n};\n\nCustomSubmitField.contextTypes = {\n  uniforms: PropTypes.shape({\n    error: PropTypes.any,\n    state: PropTypes.shape({\n      submitting: PropTypes.bool.isRequired,\n      disabled: PropTypes.bool.isRequired,\n      validating: PropTypes.bool.isRequired\n    }).isRequired\n  })\n};\nCustomSubmitField.defaultProps = {\n  variant: 'contained'\n};\nmodule.exportDefault(CustomSubmitField);","map":{"version":3,"sources":["imports/core/components/AutoForm2/CustomSubmitField.jsx"],"names":["React","shouldDisableButton","state","disabled","disableActions","CustomSubmitField","primary","raised","props","uniforms","error","setDisableActions","label","e","filterDOMProps","PropTypes","submitting","validating","isRequired","variant"],"mappings":"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","sourcesContent":["import React from 'react';\nimport filterDOMProps from 'uniforms/filterDOMProps';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Button';\nimport T from '../Translation';\n\nconst shouldDisableButton = ({\n  disableActions,\n  error,\n  state: { submitting, validating, disabled },\n}) => !!(disableActions || error || disabled || submitting || validating);\n\nconst CustomSubmitField = (\n  {\n    children,\n    disableActions,\n    inputRef,\n    label,\n    value,\n    setDisableActions,\n    primary = true,\n    raised = true,\n    secondary,\n    ...props\n  },\n  { uniforms: { state, error } },\n) => (\n  <Button\n    disabled={shouldDisableButton({\n      disableActions,\n      error,\n      state,\n      setDisableActions,\n    })}\n    ref={inputRef}\n    type=\"submit\"\n    value={value}\n    loading={state.submitting}\n    primary={!secondary && primary}\n    raised={raised}\n    secondary={secondary}\n    label={label || <T id=\"general.ok\" />}\n    onClick={(e) => {\n      // Make sure the target type is event, even if the label of the button\n      // was clicked. This is useful in PropertyForm and DashboardRecapProperty\n      e.target.type = 'submit';\n    }}\n    {...filterDOMProps(props)}\n  >\n    {children}\n  </Button>\n);\n\nCustomSubmitField.contextTypes = {\n  uniforms: PropTypes.shape({\n    error: PropTypes.any,\n    state: PropTypes.shape({\n      submitting: PropTypes.bool.isRequired,\n      disabled: PropTypes.bool.isRequired,\n      validating: PropTypes.bool.isRequired,\n    }).isRequired,\n  }),\n};\n\nCustomSubmitField.defaultProps = { variant: 'contained' };\n\nexport default CustomSubmitField;\n"]},"sourceType":"script","hash":"7bc3becdbf79633d02ddd90116cef27a7b60e01a"}
