{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingCalculator.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/Financing/client/FinancingCalculator.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingCalculator.js","inputSourceMap":{"version":3,"sources":["imports/core/components/Financing/client/FinancingCalculator.js"],"names":["Calc","FinanceCalculator","Calculator","makeArgumentMapper","getProperty","loan","structureId","selectProperty","getOffer","selectOffer","getAmortizationRateMapper","data","structure","wantedLoan","propertyWork","borrowRatio","selectPropertyValue","getInterestRates","offer","offerId","selectStructure","interestRates","currentInterestRates","argumentMappings","getIncomeRatio","monthlyIncome","getTotalIncome","monthlyPayment","getTheoreticalMonthly","propAndWork","loanValue","amortizationRate","getAmortizationRate","total","getBorrowRatio","propertyValue","getLoanFromBorrowRatio","getAmortizationRateBase","getInterestsWithTranches","loanTranches","tranches","getMinCash","fees","notaryFees","getFeesBase","argumentMapperMiddleware","middlewareObject"],"mappings":"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","sourcesContent":["// @flow\nimport Calc, { FinanceCalculator } from 'core/utils/FinanceCalculator';\nimport Calculator from 'core/utils/Calculator';\nimport { makeArgumentMapper } from 'core/utils/MiddlewareManager';\n\nexport const getProperty = ({ loan, structureId }) =>\n  Calculator.selectProperty({ loan, structureId });\n\nexport const getOffer = ({ structureId, loan }) =>\n  Calculator.selectOffer({ loan, structureId });\n\nexport const getAmortizationRateMapper = (data) => {\n  const {\n    structure: { wantedLoan, propertyWork },\n  } = data;\n  return {\n    borrowRatio:\n      wantedLoan / (Calculator.selectPropertyValue(data) + propertyWork),\n  };\n};\n\nexport const getInterestRates = ({ structureId, loan, offer }) => {\n  const { offerId } = Calculator.selectStructure({\n    loan,\n    structureId,\n  });\n  let interestRates;\n  if (offer) {\n    interestRates = offer;\n  } else if (offerId) {\n    interestRates = Calculator.selectOffer({\n      loan,\n      structureId,\n    });\n  } else {\n    interestRates = loan.currentInterestRates;\n  }\n\n  return interestRates;\n};\n\nconst argumentMappings = {\n  getIncomeRatio: data => ({\n    monthlyIncome: Calculator.getTotalIncome(data) / 12,\n    monthlyPayment: Calc.getTheoreticalMonthly({\n      propAndWork:\n        Calculator.selectPropertyValue(data) + data.structure.propertyWork,\n      loanValue: data.structure.wantedLoan,\n      amortizationRate: Calc.getAmortizationRate(data),\n    }).total,\n  }),\n\n  getBorrowRatio: data => ({\n    propertyValue:\n      Calculator.selectPropertyValue(data) + data.structure.propertyWork,\n    loan: data.structure.wantedLoan,\n  }),\n\n  getLoanFromBorrowRatio: (borrowRatio, data) => {\n    const propertyValue = Calculator.selectPropertyValue(data) + data.structure.propertyWork;\n    return { propertyValue, borrowRatio };\n  },\n\n  getAmortizationRateBase: getAmortizationRateMapper,\n\n  getInterestsWithTranches: (data) => {\n    const { loan, structureId } = data;\n    const { loanTranches } = Calculator.selectStructure({\n      loan,\n      structureId,\n    });\n\n    return { tranches: loanTranches, interestRates: getInterestRates(data) };\n  },\n\n  getMinCash: data => ({\n    propertyValue: Calculator.selectPropertyValue(data),\n    propertyWork: data.structure.propertyWork,\n    fees: data.structure.notaryFees,\n  }),\n\n  getFeesBase: data => ({\n    propertyValue: Calculator.selectPropertyValue(data),\n    propertyWork: data.structure.propertyWork,\n    fees: data.structure.notaryFees,\n  }),\n};\n\nconst argumentMapperMiddleware = makeArgumentMapper(argumentMappings);\n\nexport default new FinanceCalculator({\n  middlewareObject: argumentMapperMiddleware,\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingCalculator.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Financing/client/FinancingCalculator.js"}},"code":"module.export({\n  getProperty: function () {\n    return getProperty;\n  },\n  getOffer: function () {\n    return getOffer;\n  },\n  getAmortizationRateMapper: function () {\n    return getAmortizationRateMapper;\n  },\n  getInterestRates: function () {\n    return getInterestRates;\n  }\n});\nvar Calc, FinanceCalculator;\nmodule.link(\"../../../utils/FinanceCalculator\", {\n  \"default\": function (v) {\n    Calc = v;\n  },\n  FinanceCalculator: function (v) {\n    FinanceCalculator = v;\n  }\n}, 0);\nvar Calculator;\nmodule.link(\"../../../utils/Calculator\", {\n  \"default\": function (v) {\n    Calculator = v;\n  }\n}, 1);\nvar makeArgumentMapper;\nmodule.link(\"../../../utils/MiddlewareManager\", {\n  makeArgumentMapper: function (v) {\n    makeArgumentMapper = v;\n  }\n}, 2);\n\nvar getProperty = function (_ref) {\n  var loan = _ref.loan,\n      structureId = _ref.structureId;\n  return Calculator.selectProperty({\n    loan: loan,\n    structureId: structureId\n  });\n};\n\nvar getOffer = function (_ref2) {\n  var structureId = _ref2.structureId,\n      loan = _ref2.loan;\n  return Calculator.selectOffer({\n    loan: loan,\n    structureId: structureId\n  });\n};\n\nvar getAmortizationRateMapper = function (data) {\n  var _data$structure = data.structure,\n      wantedLoan = _data$structure.wantedLoan,\n      propertyWork = _data$structure.propertyWork;\n  return {\n    borrowRatio: wantedLoan / (Calculator.selectPropertyValue(data) + propertyWork)\n  };\n};\n\nvar getInterestRates = function (_ref3) {\n  var structureId = _ref3.structureId,\n      loan = _ref3.loan,\n      offer = _ref3.offer;\n\n  var _Calculator$selectStr = Calculator.selectStructure({\n    loan: loan,\n    structureId: structureId\n  }),\n      offerId = _Calculator$selectStr.offerId;\n\n  var interestRates;\n\n  if (offer) {\n    interestRates = offer;\n  } else if (offerId) {\n    interestRates = Calculator.selectOffer({\n      loan: loan,\n      structureId: structureId\n    });\n  } else {\n    interestRates = loan.currentInterestRates;\n  }\n\n  return interestRates;\n};\n\nvar argumentMappings = {\n  getIncomeRatio: function (data) {\n    return {\n      monthlyIncome: Calculator.getTotalIncome(data) / 12,\n      monthlyPayment: Calc.getTheoreticalMonthly({\n        propAndWork: Calculator.selectPropertyValue(data) + data.structure.propertyWork,\n        loanValue: data.structure.wantedLoan,\n        amortizationRate: Calc.getAmortizationRate(data)\n      }).total\n    };\n  },\n  getBorrowRatio: function (data) {\n    return {\n      propertyValue: Calculator.selectPropertyValue(data) + data.structure.propertyWork,\n      loan: data.structure.wantedLoan\n    };\n  },\n  getLoanFromBorrowRatio: function (borrowRatio, data) {\n    var propertyValue = Calculator.selectPropertyValue(data) + data.structure.propertyWork;\n    return {\n      propertyValue: propertyValue,\n      borrowRatio: borrowRatio\n    };\n  },\n  getAmortizationRateBase: getAmortizationRateMapper,\n  getInterestsWithTranches: function (data) {\n    var loan = data.loan,\n        structureId = data.structureId;\n\n    var _Calculator$selectStr2 = Calculator.selectStructure({\n      loan: loan,\n      structureId: structureId\n    }),\n        loanTranches = _Calculator$selectStr2.loanTranches;\n\n    return {\n      tranches: loanTranches,\n      interestRates: getInterestRates(data)\n    };\n  },\n  getMinCash: function (data) {\n    return {\n      propertyValue: Calculator.selectPropertyValue(data),\n      propertyWork: data.structure.propertyWork,\n      fees: data.structure.notaryFees\n    };\n  },\n  getFeesBase: function (data) {\n    return {\n      propertyValue: Calculator.selectPropertyValue(data),\n      propertyWork: data.structure.propertyWork,\n      fees: data.structure.notaryFees\n    };\n  }\n};\nvar argumentMapperMiddleware = makeArgumentMapper(argumentMappings);\nmodule.exportDefault(new FinanceCalculator({\n  middlewareObject: argumentMapperMiddleware\n}));","map":{"version":3,"sources":["imports/core/components/Financing/client/FinancingCalculator.js"],"names":["getProperty","structureId","loan","getOffer","getAmortizationRateMapper","data","structure","propertyWork","borrowRatio","wantedLoan","Calculator","getInterestRates","offer","offerId","interestRates","argumentMappings","getIncomeRatio","monthlyIncome","monthlyPayment","propAndWork","loanValue","amortizationRate","Calc","total","getBorrowRatio","propertyValue","getLoanFromBorrowRatio","getAmortizationRateBase","getInterestsWithTranches","loanTranches","tranches","getMinCash","fees","notaryFees","getFeesBase","argumentMapperMiddleware","makeArgumentMapper","middlewareObject"],"mappings":"AAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,WAAA,EAAA;AAAA,WAAA,WAAA;AAAA,GAAA;AAAA,EAAA,QAAA,EAAA;AAAA,WAAA,QAAA;AAAA,GAAA;AAAA,EAAA,yBAAA,EAAA;AAAA,WAAA,yBAAA;AAAA,GAAA;AAAA,EAAA,gBAAA,EAAA;AAAA,WAAA,gBAAA;AAAA;AAAA,CAAA;AAAA,IAAA,IAAA,EAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kCAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA,GAAA;AAAA,EAAA,iBAAA,YAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kCAAA,EAAA;AAAA,EAAA,kBAAA,YAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAKO,IAAMA,WAAW,GAAG;AAAA,MAAC,IAAD,QAAC,IAAD;AAAA,MAASC,WAAT,QAASA,WAAT;AAAA,SACzB,UAAU,CAAV,cAAA,CAA0B;AAAEC,IAAAA,IAAF,EAAEA,IAAF;AAAQD,IAAAA,WAAAA,EAAAA;AAAR,GAA1B,CADyB;AAAA,CAApB;;AAGA,IAAME,QAAQ,GAAG;AAAA,MAAC,WAAD,SAAC,WAAD;AAAA,MAAgBD,IAAhB,SAAgBA,IAAhB;AAAA,SACtB,UAAU,CAAV,WAAA,CAAuB;AAAEA,IAAAA,IAAF,EAAEA,IAAF;AAAQD,IAAAA,WAAAA,EAAAA;AAAR,GAAvB,CADsB;AAAA,CAAjB;;AAGA,IAAMG,yBAAyB,GAAIC,UAAAA,IAAD,EAAU;AAAA,wBACjD,IADiD,CAE/CC,SAF+C;AAAA,MAEpC,UAFoC,mBAEpC,UAFoC;AAAA,MAEtBC,YAFsB,mBAEtBA,YAFsB;AAIjD,SAAO;AACLC,IAAAA,WAAW,EACTC,UAAU,IAAIC,UAAU,CAAVA,mBAAAA,CAAAA,IAAAA,IAAJ,YAAA;AAFP,GAAP;AAJK,CAAA;;AAUA,IAAMC,gBAAgB,GAAG,iBAAkC;AAAA,MAAjC,WAAiC,SAAjC,WAAiC;AAAA,MAAjC,IAAiC,SAAjC,IAAiC;AAAA,MAAZC,KAAY,SAAZA,KAAY;;AAAA,8BAC5C,UAAU,CAAV,eAAA,CAA2B;AAC7CV,IAAAA,IAD6C,EAC7CA,IAD6C;AAE7CD,IAAAA,WAAAA,EAAAA;AAF6C,GAA3B,CAD4C;AAAA,MACxDY,OADwD,yBACxDA,OADwD;;AAKhE,MAAA,aAAA;;AACA,MAAA,KAAA,EAAW;AACTC,IAAAA,aAAa,GAAbA,KAAAA;AADF,GAAA,MAEO,IAAA,OAAA,EAAa;AAClBA,IAAAA,aAAa,GAAG,UAAU,CAAV,WAAA,CAAuB;AACrCZ,MAAAA,IADqC,EACrCA,IADqC;AAErCD,MAAAA,WAAAA,EAAAA;AAFqC,KAAvB,CAAhBa;AADK,GAAA,MAKA;AACLA,IAAAA,aAAa,GAAGZ,IAAI,CAApBY,oBAAAA;AACD;;AAED,SAAA,aAAA;AAjBK,CAAA;;AAoBP,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,cAAc,EAAEX,UAAAA,IAAI;AAAA,WAAK;AACvBY,MAAAA,aAAa,EAAEP,UAAU,CAAVA,cAAAA,CAAAA,IAAAA,IADQ,EAAA;AAEvBQ,MAAAA,cAAc,EAAE,IAAI,CAAJ,qBAAA,CAA2B;AACzCC,QAAAA,WAAW,EACTT,UAAU,CAAVA,mBAAAA,CAAAA,IAAAA,IAAuCL,IAAI,CAAJA,SAAAA,CAFA,YAAA;AAGzCe,QAAAA,SAAS,EAAEf,IAAI,CAAJA,SAAAA,CAH8B,UAAA;AAIzCgB,QAAAA,gBAAgB,EAAEC,IAAI,CAAJA,mBAAAA,CAAAA,IAAAA;AAJuB,OAA3B,EAKbC;AAPoB,KAAL;AAAA,GADG;AAWvBC,EAAAA,cAAc,EAAEnB,UAAAA,IAAI;AAAA,WAAK;AACvBoB,MAAAA,aAAa,EACXf,UAAU,CAAVA,mBAAAA,CAAAA,IAAAA,IAAuCL,IAAI,CAAJA,SAAAA,CAFlB,YAAA;AAGvBH,MAAAA,IAAI,EAAEG,IAAI,CAAJA,SAAAA,CAAeI;AAHE,KAAL;AAAA,GAXG;AAiBvBiB,EAAAA,sBAAsB,EAAE,UAAA,WAAA,EAAA,IAAA,EAAuB;AAC7C,QAAMD,aAAa,GAAGf,UAAU,CAAVA,mBAAAA,CAAAA,IAAAA,IAAuCL,IAAI,CAAJA,SAAAA,CAA7D,YAAA;AACA,WAAO;AAAEoB,MAAAA,aAAF,EAAEA,aAAF;AAAiBjB,MAAAA,WAAAA,EAAAA;AAAjB,KAAP;AAnBqB,GAAA;AAsBvBmB,EAAAA,uBAAuB,EAtBA,yBAAA;AAwBvBC,EAAAA,wBAAwB,EAAGvB,UAAAA,IAAD,EAAU;AAAA,QAC5B,IAD4B,GAClC,IADkC,CAC5B,IAD4B;AAAA,QACpBJ,WADoB,GAClC,IADkC,CACpBA,WADoB;;AAAA,iCAET,UAAU,CAAV,eAAA,CAA2B;AAClDC,MAAAA,IADkD,EAClDA,IADkD;AAElDD,MAAAA,WAAAA,EAAAA;AAFkD,KAA3B,CAFS;AAAA,QAE1B4B,YAF0B,0BAE1BA,YAF0B;;AAOlC,WAAO;AAAEC,MAAAA,QAAQ,EAAV,YAAA;AAA0BhB,MAAAA,aAAa,EAAEH,gBAAgB,CAAA,IAAA;AAAzD,KAAP;AA/BqB,GAAA;AAkCvBoB,EAAAA,UAAU,EAAE1B,UAAAA,IAAI;AAAA,WAAK;AACnBoB,MAAAA,aAAa,EAAEf,UAAU,CAAVA,mBAAAA,CADI,IACJA,CADI;AAEnBH,MAAAA,YAAY,EAAEF,IAAI,CAAJA,SAAAA,CAFK,YAAA;AAGnB2B,MAAAA,IAAI,EAAE3B,IAAI,CAAJA,SAAAA,CAAe4B;AAHF,KAAL;AAAA,GAlCO;AAwCvBC,EAAAA,WAAW,EAAE7B,UAAAA,IAAI;AAAA,WAAK;AACpBoB,MAAAA,aAAa,EAAEf,UAAU,CAAVA,mBAAAA,CADK,IACLA,CADK;AAEpBH,MAAAA,YAAY,EAAEF,IAAI,CAAJA,SAAAA,CAFM,YAAA;AAGpB2B,MAAAA,IAAI,EAAE3B,IAAI,CAAJA,SAAAA,CAAe4B;AAHD,KAAL;AAAA;AAxCM,CAAzB;AA+CA,IAAME,wBAAwB,GAAGC,kBAAkB,CAAnD,gBAAmD,CAAnD;AAxFA,MAAA,CAAA,aAAA,CA0Fe,IAAA,iBAAA,CAAsB;AACnCC,EAAAA,gBAAgB,EAAEF;AADiB,CAAtB,CA1Ff","sourcesContent":["// @flow\nimport Calc, { FinanceCalculator } from 'core/utils/FinanceCalculator';\nimport Calculator from 'core/utils/Calculator';\nimport { makeArgumentMapper } from 'core/utils/MiddlewareManager';\n\nexport const getProperty = ({ loan, structureId }) =>\n  Calculator.selectProperty({ loan, structureId });\n\nexport const getOffer = ({ structureId, loan }) =>\n  Calculator.selectOffer({ loan, structureId });\n\nexport const getAmortizationRateMapper = (data) => {\n  const {\n    structure: { wantedLoan, propertyWork },\n  } = data;\n  return {\n    borrowRatio:\n      wantedLoan / (Calculator.selectPropertyValue(data) + propertyWork),\n  };\n};\n\nexport const getInterestRates = ({ structureId, loan, offer }) => {\n  const { offerId } = Calculator.selectStructure({\n    loan,\n    structureId,\n  });\n  let interestRates;\n  if (offer) {\n    interestRates = offer;\n  } else if (offerId) {\n    interestRates = Calculator.selectOffer({\n      loan,\n      structureId,\n    });\n  } else {\n    interestRates = loan.currentInterestRates;\n  }\n\n  return interestRates;\n};\n\nconst argumentMappings = {\n  getIncomeRatio: data => ({\n    monthlyIncome: Calculator.getTotalIncome(data) / 12,\n    monthlyPayment: Calc.getTheoreticalMonthly({\n      propAndWork:\n        Calculator.selectPropertyValue(data) + data.structure.propertyWork,\n      loanValue: data.structure.wantedLoan,\n      amortizationRate: Calc.getAmortizationRate(data),\n    }).total,\n  }),\n\n  getBorrowRatio: data => ({\n    propertyValue:\n      Calculator.selectPropertyValue(data) + data.structure.propertyWork,\n    loan: data.structure.wantedLoan,\n  }),\n\n  getLoanFromBorrowRatio: (borrowRatio, data) => {\n    const propertyValue = Calculator.selectPropertyValue(data) + data.structure.propertyWork;\n    return { propertyValue, borrowRatio };\n  },\n\n  getAmortizationRateBase: getAmortizationRateMapper,\n\n  getInterestsWithTranches: (data) => {\n    const { loan, structureId } = data;\n    const { loanTranches } = Calculator.selectStructure({\n      loan,\n      structureId,\n    });\n\n    return { tranches: loanTranches, interestRates: getInterestRates(data) };\n  },\n\n  getMinCash: data => ({\n    propertyValue: Calculator.selectPropertyValue(data),\n    propertyWork: data.structure.propertyWork,\n    fees: data.structure.notaryFees,\n  }),\n\n  getFeesBase: data => ({\n    propertyValue: Calculator.selectPropertyValue(data),\n    propertyWork: data.structure.propertyWork,\n    fees: data.structure.notaryFees,\n  }),\n};\n\nconst argumentMapperMiddleware = makeArgumentMapper(argumentMappings);\n\nexport default new FinanceCalculator({\n  middlewareObject: argumentMapperMiddleware,\n});\n"]},"sourceType":"script","hash":"ff3734fcf54cd75c642c780e071e1cab7a88e36d"}
