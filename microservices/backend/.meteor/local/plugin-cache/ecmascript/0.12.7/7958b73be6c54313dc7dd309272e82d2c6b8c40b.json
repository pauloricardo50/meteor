{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/13.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/migrations/server/13.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/13.js","inputSourceMap":{"version":3,"sources":["imports/core/api/migrations/server/13.js"],"names":["Migrations","Mongo","LOANS_COLLECTION","BORROWERS_COLLECTION","PROPERTIES_COLLECTION","ORGANISATIONS_COLLECTION","PROMOTIONS_COLLECTION","FileService","collections","up","index","length","collection","docs","Collection","get","find","fields","_id","fetch","index2","docId","updateDocumentsCache","down","forEach","update","$unset","documents","multi","add","version","name"],"mappings":"AAAA,SAASA,UAAT,QAA2B,6BAA3B;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,SACEC,gBADF,EAEEC,oBAFF,EAGEC,qBAHF,EAIEC,wBAJF,EAKEC,qBALF;AAOA,OAAOC,WAAP;AAEA,MAAMC,WAAW,GAAG,CAClBN,gBADkB,EAElBC,oBAFkB,EAGlBC,qBAHkB,EAIlBC,wBAJkB,EAKlBC,qBALkB,CAApB;AAQA,OAAO,MAAMG,EAAE,GAAG,YAAY;AAC5B,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,WAAW,CAACG,MAAxC,EAAgDD,KAAK,EAArD,EAAyD;AACvD,UAAME,UAAU,GAAGJ,WAAW,CAACE,KAAD,CAA9B;AAEA,UAAMG,IAAI,GAAGZ,KAAK,CAACa,UAAN,CAAiBC,GAAjB,CAAqBH,UAArB,EACVI,IADU,CACL,EADK,EACD;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE;AAAP;AAAV,KADC,EAEVC,KAFU,EAAb;;AAIA,SAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGP,IAAI,CAACF,MAAnC,EAA2CS,MAAM,EAAjD,EAAqD;AACnD,YAAM;AAAEF,QAAAA,GAAG,EAAEG;AAAP,UAAiBR,IAAI,CAACO,MAAD,CAA3B;AACA,YAAMb,WAAW,CAACe,oBAAZ,CAAiC;AAAEV,QAAAA,UAAF;AAAcS,QAAAA;AAAd,OAAjC,CAAN;AACD;AACF;AACF,CAbM;AAeP,OAAO,MAAME,IAAI,GAAG,MAAM;AACxBf,EAAAA,WAAW,CAACgB,OAAZ,CAAqBZ,UAAD,IAAgB;AAClCX,IAAAA,KAAK,CAACa,UAAN,CAAiBC,GAAjB,CAAqBH,UAArB,EAAiCa,MAAjC,CACE,EADF,EAEE;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAAV,KAFF,EAGE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAHF;AAKD,GAND;AAOD,CARM;AAUP5B,UAAU,CAAC6B,GAAX,CAAe;AACbC,EAAAA,OAAO,EAAE,EADI;AAEbC,EAAAA,IAAI,EAAE,wCAFO;AAGbtB,EAAAA,EAHa;AAIbc,EAAAA;AAJa,CAAf","sourcesContent":["import { Migrations } from 'meteor/percolate:migrations';\nimport { Mongo } from 'meteor/mongo';\n\nimport {\n  LOANS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n  ORGANISATIONS_COLLECTION,\n  PROMOTIONS_COLLECTION,\n} from 'core/api/constants';\nimport FileService from 'core/api/files/server/FileService';\n\nconst collections = [\n  LOANS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n  ORGANISATIONS_COLLECTION,\n  PROMOTIONS_COLLECTION,\n];\n\nexport const up = async () => {\n  for (let index = 0; index < collections.length; index++) {\n    const collection = collections[index];\n\n    const docs = Mongo.Collection.get(collection)\n      .find({}, { fields: { _id: 1 } })\n      .fetch();\n\n    for (let index2 = 0; index2 < docs.length; index2++) {\n      const { _id: docId } = docs[index2];\n      await FileService.updateDocumentsCache({ collection, docId });\n    }\n  }\n};\n\nexport const down = () => {\n  collections.forEach((collection) => {\n    Mongo.Collection.get(collection).update(\n      {},\n      { $unset: { documents: true } },\n      { multi: true },\n    );\n  });\n};\n\nMigrations.add({\n  version: 13,\n  name: 'Add documents cache on all collections',\n  up,\n  down,\n});\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/migrations/server/13.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/migrations/server/13.js"}},"code":"module.export({\n  up: () => up,\n  down: () => down\n});\nlet Migrations;\nmodule.link(\"meteor/percolate:migrations\", {\n  Migrations(v) {\n    Migrations = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet LOANS_COLLECTION, BORROWERS_COLLECTION, PROPERTIES_COLLECTION, ORGANISATIONS_COLLECTION, PROMOTIONS_COLLECTION;\nmodule.link(\"../../constants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  },\n\n  BORROWERS_COLLECTION(v) {\n    BORROWERS_COLLECTION = v;\n  },\n\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  },\n\n  ORGANISATIONS_COLLECTION(v) {\n    ORGANISATIONS_COLLECTION = v;\n  },\n\n  PROMOTIONS_COLLECTION(v) {\n    PROMOTIONS_COLLECTION = v;\n  }\n\n}, 2);\nlet FileService;\nmodule.link(\"../../files/server/FileService\", {\n  default(v) {\n    FileService = v;\n  }\n\n}, 3);\nconst collections = [LOANS_COLLECTION, BORROWERS_COLLECTION, PROPERTIES_COLLECTION, ORGANISATIONS_COLLECTION, PROMOTIONS_COLLECTION];\n\nconst up = () => Promise.asyncApply(() => {\n  for (let index = 0; index < collections.length; index++) {\n    const collection = collections[index];\n    const docs = Mongo.Collection.get(collection).find({}, {\n      fields: {\n        _id: 1\n      }\n    }).fetch();\n\n    for (let index2 = 0; index2 < docs.length; index2++) {\n      const {\n        _id: docId\n      } = docs[index2];\n      Promise.await(FileService.updateDocumentsCache({\n        collection,\n        docId\n      }));\n    }\n  }\n});\n\nconst down = () => {\n  collections.forEach(collection => {\n    Mongo.Collection.get(collection).update({}, {\n      $unset: {\n        documents: true\n      }\n    }, {\n      multi: true\n    });\n  });\n};\n\nMigrations.add({\n  version: 13,\n  name: 'Add documents cache on all collections',\n  up,\n  down\n});","map":{"version":3,"sources":["imports/core/api/migrations/server/13.js"],"names":["Migrations","collections","up","index","collection","docs","fields","_id","index2","docId","down","Mongo","$unset","documents","multi","version","name"],"mappings":"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","sourcesContent":["import { Migrations } from 'meteor/percolate:migrations';\nimport { Mongo } from 'meteor/mongo';\n\nimport {\n  LOANS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n  ORGANISATIONS_COLLECTION,\n  PROMOTIONS_COLLECTION,\n} from 'core/api/constants';\nimport FileService from 'core/api/files/server/FileService';\n\nconst collections = [\n  LOANS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n  ORGANISATIONS_COLLECTION,\n  PROMOTIONS_COLLECTION,\n];\n\nexport const up = async () => {\n  for (let index = 0; index < collections.length; index++) {\n    const collection = collections[index];\n\n    const docs = Mongo.Collection.get(collection)\n      .find({}, { fields: { _id: 1 } })\n      .fetch();\n\n    for (let index2 = 0; index2 < docs.length; index2++) {\n      const { _id: docId } = docs[index2];\n      await FileService.updateDocumentsCache({ collection, docId });\n    }\n  }\n};\n\nexport const down = () => {\n  collections.forEach((collection) => {\n    Mongo.Collection.get(collection).update(\n      {},\n      { $unset: { documents: true } },\n      { multi: true },\n    );\n  });\n};\n\nMigrations.add({\n  version: 13,\n  name: 'Add documents cache on all collections',\n  up,\n  down,\n});\n"]},"sourceType":"script","hash":"7958b73be6c54313dc7dd309272e82d2c6b8c40b"}
