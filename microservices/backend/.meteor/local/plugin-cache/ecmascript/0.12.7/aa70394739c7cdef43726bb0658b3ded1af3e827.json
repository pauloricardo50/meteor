{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/reducers/server/test/assigneeReducer.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/reducers/server/test/assigneeReducer.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/reducers/server/test/assigneeReducer.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/reducers/server/test/assigneeReducer.test.js"],"names":["expect","sinon","UserService","assigneeReducer","defaultReducer","assignee","reduce","describe","beforeEach","stub","callsFake","_id","userId","assignedEmployeeId","afterEach","findOne","restore","it","result","to","deep","include","firstCall","args","equal","lastCall","promotion","userLinks","promotions","reducer","data","someId"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport sinon from 'sinon';\n\nimport UserService from '../../../users/server/UserService';\nimport assigneeReducer from '../../assigneeReducer';\n\nconst defaultReducer = assigneeReducer().assignee.reduce;\n\ndescribe('assigneeReducer', () => {\n  beforeEach(() => {\n    sinon\n      .stub(UserService, 'findOne')\n      .callsFake(({ _id }) => ({ userId: _id, assignedEmployeeId: 'adminId' }));\n  });\n\n  afterEach(() => {\n    UserService.findOne.restore();\n  });\n\n  it('works with a userId', () => {\n    const result = defaultReducer({ userId: 'myUserId' });\n\n    expect(result).to.deep.include({ userId: 'adminId' });\n    expect(UserService.findOne.firstCall.args[0]).to.deep.equal({\n      _id: 'myUserId',\n    });\n  });\n\n  it('returns the assignedEmployee if assignedEmployeeId is found', () => {\n    const result = defaultReducer({ assignedEmployeeId: 'assignee' });\n\n    expect(result).to.deep.include({ userId: 'assignee' });\n    expect(UserService.findOne.lastCall.args[0]).to.deep.equal({\n      _id: 'assignee',\n    });\n  });\n\n  it(\"returns the promotion's first user\", () => {\n    const result = defaultReducer({\n      promotion: { userLinks: [{ _id: 'test2' }] },\n    });\n\n    expect(UserService.findOne.firstCall.args[0]).to.deep.equal({\n      _id: 'test2',\n    });\n    expect(result).to.deep.include({ userId: 'adminId' });\n  });\n\n  it(\"returns the promotions' first user\", () => {\n    const result = defaultReducer({\n      promotions: [{ userLinks: [{ _id: 'test2' }] }],\n    });\n\n    expect(UserService.findOne.firstCall.args[0]).to.deep.equal({\n      _id: 'test2',\n    });\n    expect(result).to.deep.include({ userId: 'adminId' });\n  });\n\n  it('works with a custom function', () => {\n    const reducer = assigneeReducer({}, ({ data }) => data.someId).assignee\n      .reduce;\n\n    const result = reducer({\n      data: { someId: 'dude' },\n    });\n\n    expect(UserService.findOne.firstCall.args[0]).to.deep.equal({\n      _id: 'dude',\n    });\n    expect(result).to.deep.include({ userId: 'adminId' });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/reducers/server/test/assigneeReducer.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/reducers/server/test/assigneeReducer.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet sinon;\nmodule.link(\"sinon\", {\n  default(v) {\n    sinon = v;\n  }\n\n}, 1);\nlet UserService;\nmodule.link(\"../../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 2);\nlet assigneeReducer;\nmodule.link(\"../../assigneeReducer\", {\n  default(v) {\n    assigneeReducer = v;\n  }\n\n}, 3);\nconst defaultReducer = assigneeReducer().assignee.reduce;\ndescribe('assigneeReducer', () => {\n  beforeEach(() => {\n    sinon.stub(UserService, 'findOne').callsFake(({\n      _id\n    }) => ({\n      userId: _id,\n      assignedEmployeeId: 'adminId'\n    }));\n  });\n  afterEach(() => {\n    UserService.findOne.restore();\n  });\n  it('works with a userId', () => {\n    const result = defaultReducer({\n      userId: 'myUserId'\n    });\n    expect(result).to.deep.include({\n      userId: 'adminId'\n    });\n    expect(UserService.findOne.firstCall.args[0]).to.deep.equal({\n      _id: 'myUserId'\n    });\n  });\n  it('returns the assignedEmployee if assignedEmployeeId is found', () => {\n    const result = defaultReducer({\n      assignedEmployeeId: 'assignee'\n    });\n    expect(result).to.deep.include({\n      userId: 'assignee'\n    });\n    expect(UserService.findOne.lastCall.args[0]).to.deep.equal({\n      _id: 'assignee'\n    });\n  });\n  it(\"returns the promotion's first user\", () => {\n    const result = defaultReducer({\n      promotion: {\n        userLinks: [{\n          _id: 'test2'\n        }]\n      }\n    });\n    expect(UserService.findOne.firstCall.args[0]).to.deep.equal({\n      _id: 'test2'\n    });\n    expect(result).to.deep.include({\n      userId: 'adminId'\n    });\n  });\n  it(\"returns the promotions' first user\", () => {\n    const result = defaultReducer({\n      promotions: [{\n        userLinks: [{\n          _id: 'test2'\n        }]\n      }]\n    });\n    expect(UserService.findOne.firstCall.args[0]).to.deep.equal({\n      _id: 'test2'\n    });\n    expect(result).to.deep.include({\n      userId: 'adminId'\n    });\n  });\n  it('works with a custom function', () => {\n    const reducer = assigneeReducer({}, ({\n      data\n    }) => data.someId).assignee.reduce;\n    const result = reducer({\n      data: {\n        someId: 'dude'\n      }\n    });\n    expect(UserService.findOne.firstCall.args[0]).to.deep.equal({\n      _id: 'dude'\n    });\n    expect(result).to.deep.include({\n      userId: 'adminId'\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/api/reducers/server/test/assigneeReducer.test.js"],"names":["defaultReducer","assigneeReducer","describe","beforeEach","sinon","_id","userId","assignedEmployeeId","afterEach","UserService","it","result","expect","promotion","userLinks","promotions","reducer","data","someId"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport sinon from 'sinon';\n\nimport UserService from '../../../users/server/UserService';\nimport assigneeReducer from '../../assigneeReducer';\n\nconst defaultReducer = assigneeReducer().assignee.reduce;\n\ndescribe('assigneeReducer', () => {\n  beforeEach(() => {\n    sinon\n      .stub(UserService, 'findOne')\n      .callsFake(({ _id }) => ({ userId: _id, assignedEmployeeId: 'adminId' }));\n  });\n\n  afterEach(() => {\n    UserService.findOne.restore();\n  });\n\n  it('works with a userId', () => {\n    const result = defaultReducer({ userId: 'myUserId' });\n\n    expect(result).to.deep.include({ userId: 'adminId' });\n    expect(UserService.findOne.firstCall.args[0]).to.deep.equal({\n      _id: 'myUserId',\n    });\n  });\n\n  it('returns the assignedEmployee if assignedEmployeeId is found', () => {\n    const result = defaultReducer({ assignedEmployeeId: 'assignee' });\n\n    expect(result).to.deep.include({ userId: 'assignee' });\n    expect(UserService.findOne.lastCall.args[0]).to.deep.equal({\n      _id: 'assignee',\n    });\n  });\n\n  it(\"returns the promotion's first user\", () => {\n    const result = defaultReducer({\n      promotion: { userLinks: [{ _id: 'test2' }] },\n    });\n\n    expect(UserService.findOne.firstCall.args[0]).to.deep.equal({\n      _id: 'test2',\n    });\n    expect(result).to.deep.include({ userId: 'adminId' });\n  });\n\n  it(\"returns the promotions' first user\", () => {\n    const result = defaultReducer({\n      promotions: [{ userLinks: [{ _id: 'test2' }] }],\n    });\n\n    expect(UserService.findOne.firstCall.args[0]).to.deep.equal({\n      _id: 'test2',\n    });\n    expect(result).to.deep.include({ userId: 'adminId' });\n  });\n\n  it('works with a custom function', () => {\n    const reducer = assigneeReducer({}, ({ data }) => data.someId).assignee\n      .reduce;\n\n    const result = reducer({\n      data: { someId: 'dude' },\n    });\n\n    expect(UserService.findOne.firstCall.args[0]).to.deep.equal({\n      _id: 'dude',\n    });\n    expect(result).to.deep.include({ userId: 'adminId' });\n  });\n});\n"]},"sourceType":"script","hash":"aa70394739c7cdef43726bb0658b3ded1af3e827"}
