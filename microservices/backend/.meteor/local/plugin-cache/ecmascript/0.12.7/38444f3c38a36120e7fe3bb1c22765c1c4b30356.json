{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/handlers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/lmieulet:meteor-coverage/server/handlers.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/handlers.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/handlers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/lmieulet:meteor-coverage/server/handlers.js"}},"code":"let Conf;\nmodule.link(\"./context/conf\", {\n  default(v) {\n    Conf = v;\n  }\n\n}, 0);\nlet Core;\nmodule.link(\"./services/core\", {\n  default(v) {\n    Core = v;\n  }\n\n}, 1);\nlet ReportService;\nmodule.link(\"./report/report-service\", {\n  default(v) {\n    ReportService = v;\n  }\n\n}, 2);\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 3);\nlet path;\nmodule.link(\"path\", {\n  default(v) {\n    path = v;\n  }\n\n}, 4);\n\nshowCoverage = function (params, req, res, next) {\n  let options = {\n    'filepath': params.query.p\n  };\n  let reportService = new ReportService();\n  reportService.generateReport(res, 'http', options);\n};\n\ngetAsset = function (params, req, res, next) {\n  var assetsDir = path.join(path.resolve('.'), 'assets/packages/lmieulet_meteor-coverage/assets/'),\n      filename = params.filename;\n  fs.exists(path.join(assetsDir, filename), function (exists) {\n    if (!exists) {\n      fs.exists(path.join(assetsDir, '/vendor/', filename), function (exists) {\n        /* istanbul ignore else */\n        if (!exists) return next();\n        fs.readFile(assetsDir + '/vendor/' + filename, function (err, fileContent) {\n          /* istanbul ignore else */\n          if (err) {\n            console.error(err);\n            return next();\n          }\n\n          res.end(fileContent);\n        });\n      });\n    } else {\n      fs.readFile(assetsDir + '/' + filename, function (err, fileContent) {\n        /* istanbul ignore else */\n        if (err) {\n          console.error(err);\n          return next();\n        }\n\n        res.end(fileContent);\n      });\n    }\n  });\n};\n\naddClientCoverage = function (params, req, res, next) {\n  var body = req.body;\n  /* istanbul ignore else */\n\n  if (!body) {\n    res.writeHead(400);\n    res.end();\n  }\n\n  var clientCoverage;\n\n  for (var property in body) {\n    /* istanbul ignore else */\n    if (body.hasOwnProperty(property)) {\n      clientCoverage = body[property];\n    }\n  }\n\n  if (clientCoverage) {\n    Core.mergeCoverageWith(clientCoverage);\n    res.end('{\"type\":\"success\"}');\n  } else {\n    res.writeHead(400);\n    res.end('Nothing has been imported');\n  }\n};\n\nexportFile = function (params, req, res, next) {\n  var _type = params.type;\n  /* istanbul ignore next: ternary operator */\n\n  type = Conf.reportTypes.allowed.indexOf(_type) > -1 ? _type : 'coverage';\n\n  try {\n    let reportService = new ReportService();\n    reportService.generateReport(res, type, {});\n  } catch (e) {\n    Log.error('Failed to export', e, e.stack);\n    res.writeHead(400);\n    res.end('Nothing has been export');\n  }\n};\n\nimportCoverage = function (params, req, res, next) {\n  try {\n    Core.importCoverage(res);\n  } catch (e) {\n    Log.error('Failed to import', e, e.stack);\n    res.writeHead(400);\n    res.end('No file has been import');\n  }\n};\n\nmodule.exportDefault(Handlers = {\n  showCoverage,\n  getAsset,\n  addClientCoverage,\n  exportFile,\n  importCoverage\n});","map":{"version":3,"sources":["packages/lmieulet:meteor-coverage/server/handlers.js"],"names":["Conf","module","link","default","v","Core","ReportService","fs","path","showCoverage","params","req","res","next","options","query","p","reportService","generateReport","getAsset","assetsDir","join","resolve","filename","exists","readFile","err","fileContent","console","error","end","addClientCoverage","body","writeHead","clientCoverage","property","hasOwnProperty","mergeCoverageWith","exportFile","_type","type","reportTypes","allowed","indexOf","e","Log","stack","importCoverage","exportDefault","Handlers"],"mappings":"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","sourcesContent":["import Conf from './context/conf';\nimport Core from './services/core';\nimport ReportService from './report/report-service';\nimport fs from 'fs';\nimport path from 'path';\n\nshowCoverage = function (params, req, res, next) {\n  let options = {\n    'filepath': params.query.p\n  };\n  let reportService = new ReportService();\n  reportService.generateReport(res, 'http', options);\n};\n\ngetAsset = function (params, req, res, next) {\n  var assetsDir = path.join(path.resolve('.'), 'assets/packages/lmieulet_meteor-coverage/assets/'),\n    filename = params.filename;\n  fs.exists(path.join(assetsDir, filename), function (exists) {\n    if (!exists) {\n      fs.exists(path.join(assetsDir, '/vendor/', filename), function (exists) {\n        /* istanbul ignore else */\n        if (!exists) return next();\n        fs.readFile(assetsDir + '/vendor/' + filename, function (err, fileContent) {\n          /* istanbul ignore else */\n          if (err) {\n            console.error(err);\n            return next();\n          }\n          res.end(fileContent);\n        });\n      });\n    } else {\n      fs.readFile(assetsDir + '/' + filename, function (err, fileContent) {\n        /* istanbul ignore else */\n        if (err) {\n          console.error(err);\n          return next();\n        }\n        res.end(fileContent);\n      });\n    }\n  });\n};\n\naddClientCoverage = function (params, req, res, next) {\n  var body = req.body;\n  /* istanbul ignore else */\n  if (!body) {\n    res.writeHead(400);\n    res.end();\n  }\n\n  var clientCoverage;\n  for (var property in body) {\n    /* istanbul ignore else */\n    if (body.hasOwnProperty(property)) {\n      clientCoverage = body[property];\n    }\n  }\n  if (clientCoverage) {\n    Core.mergeCoverageWith(clientCoverage);\n    res.end('{\"type\":\"success\"}');\n  } else {\n    res.writeHead(400);\n    res.end('Nothing has been imported');\n  }\n};\n\nexportFile = function (params, req, res, next) {\n  var _type = params.type;\n  /* istanbul ignore next: ternary operator */\n  type = Conf.reportTypes.allowed.indexOf(_type) > -1 ? _type : 'coverage';\n  try {\n    let reportService = new ReportService();\n    reportService.generateReport(res, type, {});\n  } catch (e) {\n    Log.error('Failed to export', e, e.stack);\n    res.writeHead(400);\n    res.end('Nothing has been export');\n  }\n};\nimportCoverage = function (params, req, res, next) {\n  try {\n    Core.importCoverage(res);\n  } catch (e) {\n    Log.error('Failed to import', e, e.stack);\n    res.writeHead(400);\n    res.end('No file has been import');\n  }\n};\n\nexport default Handlers = {\n  showCoverage,\n  getAsset,\n  addClientCoverage,\n  exportFile,\n  importCoverage\n};\n"]},"sourceType":"script","hash":"38444f3c38a36120e7fe3bb1c22765c1c4b30356"}
