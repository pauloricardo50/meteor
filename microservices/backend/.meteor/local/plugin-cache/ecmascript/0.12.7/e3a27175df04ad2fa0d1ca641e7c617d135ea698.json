{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/PropertyFormArray.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/arrays/PropertyFormArray.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/PropertyFormArray.jsx","inputSourceMap":{"version":3,"sources":["imports/core/arrays/PropertyFormArray.jsx"],"names":["React","PROPERTY_TYPE","PURCHASE_TYPE","OWNER","RESIDENCE_TYPE","MINERGIE_CERTIFICATE","HOUSE_TYPE","FLAT_TYPE","VOLUME_NORM","CantonField","mapInput","input","intlSafeObject","id","indexOf","intlId","split","slice","join","inputs","map","obj","getOwnerOptions","borrowers","Object","values","filter","value","length","SECOND","isFirst","FIRST","isSecond","borrowerFirstName","firstName","intlValues","name","getPropertyLoanArray","loan","r","Error","array","type","ignore","required","options","conditionalTrueValue","OTHER","condition","purchaseType","REFINANCING","shouldDisplayFloorNumber","propertyType","flatType","FLAT","PENTHOUSE_APARTMENT","PENTHOUSE_MAISONETTE","TERRACE_APARTMENT","shouldDisplayTerraceArea","getPropertyArray","property","money","residenceType","INVESTMENT","ACQUISITION","isCoproperty","info","component","canton","HOUSE","number","decimal"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {\n  PROPERTY_TYPE,\n  PURCHASE_TYPE,\n  OWNER,\n  RESIDENCE_TYPE,\n  MINERGIE_CERTIFICATE,\n  HOUSE_TYPE,\n  FLAT_TYPE,\n  VOLUME_NORM,\n} from 'core/api/constants';\nimport CantonField from 'core/components/CantonField/CantonField';\n\nconst mapInput = (input) => {\n  const intlSafeObject = { ...input };\n  // If the id contains a dot in it, split it and add a intlId\n  // This makes it easier to write intl messages\n  if (input.id && input.id.indexOf('.') > 0) {\n    // Perform some additional slicing to make sure ids with multiple dots\n    // work by removing only the first part\n    intlSafeObject.intlId = input.id\n      .split('.')\n      .slice(1)\n      .join('.');\n  }\n\n  if (input.inputs) {\n    // If there are nested inputs, give them an intlId too\n    intlSafeObject.inputs = input.inputs.map(obj =>\n      (obj.id && obj.id.indexOf('.') > 0\n        ? { ...obj, intlId: obj.id.split('.')[1] }\n        : obj));\n  }\n\n  return intlSafeObject;\n};\n\nconst getOwnerOptions = ({ borrowers }) =>\n  Object.values(OWNER)\n    .filter(value => (borrowers.length === 1 ? value !== OWNER.SECOND : true))\n    .map((value) => {\n      const isFirst = value === OWNER.FIRST;\n      const isSecond = value === OWNER.SECOND;\n      let borrowerFirstName;\n\n      if (borrowers.length <= 1) {\n        borrowerFirstName = null;\n      } else {\n        borrowerFirstName = borrowers[isFirst ? 0 : 1].firstName;\n      }\n\n      return isFirst || isSecond\n        ? {\n          id: isFirst ? 0 : 1,\n          intlValues: {\n            name: borrowerFirstName || `Emprunteur ${isFirst ? 1 : 2}`,\n          },\n        }\n        : value;\n    });\n\nexport const getPropertyLoanArray = ({ loan, borrowers }) => {\n  const r = loan;\n\n  if (!r) {\n    throw new Error('requires a loan');\n  }\n\n  const array = [\n    {\n      type: 'h3',\n      id: 'propertyInfo',\n      ignore: true,\n      required: false,\n    },\n    {\n      id: 'residenceType',\n      type: 'radioInput',\n      options: Object.values(RESIDENCE_TYPE),\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: OWNER.OTHER,\n      condition:\n        borrowers.length > 1 && r.purchaseType === PURCHASE_TYPE.REFINANCING,\n      inputs: [\n        {\n          id: 'currentOwner',\n          type: 'radioInput',\n          options: getOwnerOptions({ borrowers }),\n        },\n        { id: 'otherOwner', type: 'textInput' },\n      ],\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: OWNER.OTHER,\n      condition:\n        borrowers.length > 1 && r.purchaseType !== PURCHASE_TYPE.REFINANCING,\n      inputs: [\n        {\n          id: 'futureOwner',\n          type: 'radioInput',\n          options: getOwnerOptions({ borrowers }),\n        },\n        {\n          id: 'otherOwner',\n          type: 'textInput',\n        },\n      ],\n    },\n  ];\n\n  return array.map(mapInput);\n};\n\nconst shouldDisplayFloorNumber = ({ propertyType, flatType }) =>\n  propertyType === PROPERTY_TYPE.FLAT\n  && flatType !== FLAT_TYPE.PENTHOUSE_APARTMENT\n  && flatType !== FLAT_TYPE.PENTHOUSE_MAISONETTE\n  && flatType !== FLAT_TYPE.TERRACE_APARTMENT;\n\nconst shouldDisplayTerraceArea = ({ propertyType, flatType }) =>\n  propertyType === PROPERTY_TYPE.FLAT;\n\nexport const getPropertyArray = ({ loan, borrowers, property }) => {\n  const r = loan;\n\n  if (!r) {\n    throw new Error('requires a loan');\n  }\n\n  const array = [\n    { id: 'value', type: 'textInput', money: true },\n    {\n      id: 'investmentRent',\n      type: 'textInput',\n      money: true,\n      condition: r.residenceType === RESIDENCE_TYPE.INVESTMENT,\n    },\n    {\n      id: 'propertyType',\n      type: 'radioInput',\n      options: Object.values(PROPERTY_TYPE),\n    },\n    {\n      id: 'isNew',\n      type: 'radioInput',\n      options: [true, false],\n      condition: r.purchaseType === PURCHASE_TYPE.ACQUISITION,\n    },\n    {\n      id: 'isCoproperty',\n      type: 'radioInput',\n      options: [true, false],\n    },\n    {\n      id: 'copropertyPercentage',\n      type: 'textInput',\n      condition: property.isCoproperty,\n      info: true,\n    },\n    {\n      type: 'h3',\n      id: 'propertyAddress',\n      ignore: true,\n      required: false,\n    },\n    {\n      id: 'address1',\n      type: 'textInput',\n    },\n    {\n      id: 'address2',\n      type: 'textInput',\n      required: false,\n    },\n    {\n      id: 'zipCode',\n      type: 'textInput',\n    },\n    {\n      id: 'city',\n      type: 'textInput',\n    },\n    {\n      type: 'custom',\n      id: 'canton',\n      component: <CantonField canton={property.canton} />,\n    },\n    {\n      type: 'h3',\n      id: 'propertyDetails',\n      ignore: true,\n      required: false,\n    },\n    {\n      id: 'houseType',\n      type: 'radioInput',\n      options: Object.values(HOUSE_TYPE),\n      condition: property.propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      id: 'flatType',\n      type: 'radioInput',\n      options: Object.values(FLAT_TYPE),\n      condition: property.propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      id: 'numberOfFloors',\n      type: 'textInput',\n      number: true,\n    },\n    {\n      id: 'floorNumber',\n      type: 'textInput',\n      number: true,\n      condition: shouldDisplayFloorNumber(property),\n    },\n    { id: 'constructionYear', type: 'textInput', number: true },\n    {\n      id: 'renovationYear',\n      type: 'textInput',\n      number: true,\n      required: false,\n      info: true,\n    },\n    {\n      id: 'landArea',\n      type: 'textInput',\n      number: true,\n      condition: property.propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      id: 'insideArea',\n      type: 'textInput',\n      number: true,\n      condition: property.propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      id: 'terraceArea',\n      type: 'textInput',\n      number: true,\n      required: true,\n      condition: shouldDisplayTerraceArea(property),\n    },\n    {\n      id: 'volume',\n      type: 'textInput',\n      number: true,\n      condition: property.propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      id: 'volumeNorm',\n      type: 'radioInput',\n      options: Object.values(VOLUME_NORM),\n      condition: property.propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      id: 'roomCount',\n      type: 'textInput',\n      decimal: true,\n      info: true,\n    },\n    { id: 'parkingInside', type: 'textInput', number: true, required: false },\n    { id: 'parkingOutside', type: 'textInput', number: true, required: false },\n    {\n      id: 'minergie',\n      type: 'radioInput',\n      options: Object.values(MINERGIE_CERTIFICATE),\n    },\n    {\n      id: 'yearlyExpenses',\n      type: 'textInput',\n      money: true,\n      required: false,\n      info: true,\n    },\n  ];\n\n  return array.map(mapInput);\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/PropertyFormArray.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/arrays/PropertyFormArray.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  getPropertyLoanArray: function () {\n    return getPropertyLoanArray;\n  },\n  getPropertyArray: function () {\n    return getPropertyArray;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar PROPERTY_TYPE, PURCHASE_TYPE, OWNER, RESIDENCE_TYPE, MINERGIE_CERTIFICATE, HOUSE_TYPE, FLAT_TYPE, VOLUME_NORM;\nmodule.link(\"../api/constants\", {\n  PROPERTY_TYPE: function (v) {\n    PROPERTY_TYPE = v;\n  },\n  PURCHASE_TYPE: function (v) {\n    PURCHASE_TYPE = v;\n  },\n  OWNER: function (v) {\n    OWNER = v;\n  },\n  RESIDENCE_TYPE: function (v) {\n    RESIDENCE_TYPE = v;\n  },\n  MINERGIE_CERTIFICATE: function (v) {\n    MINERGIE_CERTIFICATE = v;\n  },\n  HOUSE_TYPE: function (v) {\n    HOUSE_TYPE = v;\n  },\n  FLAT_TYPE: function (v) {\n    FLAT_TYPE = v;\n  },\n  VOLUME_NORM: function (v) {\n    VOLUME_NORM = v;\n  }\n}, 1);\nvar CantonField;\nmodule.link(\"../components/CantonField/CantonField\", {\n  \"default\": function (v) {\n    CantonField = v;\n  }\n}, 2);\n\nvar mapInput = function (input) {\n  var intlSafeObject = (0, _objectSpread2.default)({}, input); // If the id contains a dot in it, split it and add a intlId\n  // This makes it easier to write intl messages\n\n  if (input.id && input.id.indexOf('.') > 0) {\n    // Perform some additional slicing to make sure ids with multiple dots\n    // work by removing only the first part\n    intlSafeObject.intlId = input.id.split('.').slice(1).join('.');\n  }\n\n  if (input.inputs) {\n    // If there are nested inputs, give them an intlId too\n    intlSafeObject.inputs = input.inputs.map(function (obj) {\n      return obj.id && obj.id.indexOf('.') > 0 ? (0, _objectSpread2.default)({}, obj, {\n        intlId: obj.id.split('.')[1]\n      }) : obj;\n    });\n  }\n\n  return intlSafeObject;\n};\n\nvar getOwnerOptions = function (_ref) {\n  var borrowers = _ref.borrowers;\n  return Object.values(OWNER).filter(function (value) {\n    return borrowers.length === 1 ? value !== OWNER.SECOND : true;\n  }).map(function (value) {\n    var isFirst = value === OWNER.FIRST;\n    var isSecond = value === OWNER.SECOND;\n    var borrowerFirstName;\n\n    if (borrowers.length <= 1) {\n      borrowerFirstName = null;\n    } else {\n      borrowerFirstName = borrowers[isFirst ? 0 : 1].firstName;\n    }\n\n    return isFirst || isSecond ? {\n      id: isFirst ? 0 : 1,\n      intlValues: {\n        name: borrowerFirstName || \"Emprunteur \" + (isFirst ? 1 : 2)\n      }\n    } : value;\n  });\n};\n\nvar getPropertyLoanArray = function (_ref2) {\n  var loan = _ref2.loan,\n      borrowers = _ref2.borrowers;\n  var r = loan;\n\n  if (!r) {\n    throw new Error('requires a loan');\n  }\n\n  var array = [{\n    type: 'h3',\n    id: 'propertyInfo',\n    ignore: true,\n    required: false\n  }, {\n    id: 'residenceType',\n    type: 'radioInput',\n    options: Object.values(RESIDENCE_TYPE)\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: OWNER.OTHER,\n    condition: borrowers.length > 1 && r.purchaseType === PURCHASE_TYPE.REFINANCING,\n    inputs: [{\n      id: 'currentOwner',\n      type: 'radioInput',\n      options: getOwnerOptions({\n        borrowers: borrowers\n      })\n    }, {\n      id: 'otherOwner',\n      type: 'textInput'\n    }]\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: OWNER.OTHER,\n    condition: borrowers.length > 1 && r.purchaseType !== PURCHASE_TYPE.REFINANCING,\n    inputs: [{\n      id: 'futureOwner',\n      type: 'radioInput',\n      options: getOwnerOptions({\n        borrowers: borrowers\n      })\n    }, {\n      id: 'otherOwner',\n      type: 'textInput'\n    }]\n  }];\n  return array.map(mapInput);\n};\n\nvar shouldDisplayFloorNumber = function (_ref3) {\n  var propertyType = _ref3.propertyType,\n      flatType = _ref3.flatType;\n  return propertyType === PROPERTY_TYPE.FLAT && flatType !== FLAT_TYPE.PENTHOUSE_APARTMENT && flatType !== FLAT_TYPE.PENTHOUSE_MAISONETTE && flatType !== FLAT_TYPE.TERRACE_APARTMENT;\n};\n\nvar shouldDisplayTerraceArea = function (_ref4) {\n  var propertyType = _ref4.propertyType,\n      flatType = _ref4.flatType;\n  return propertyType === PROPERTY_TYPE.FLAT;\n};\n\nvar getPropertyArray = function (_ref5) {\n  var loan = _ref5.loan,\n      borrowers = _ref5.borrowers,\n      property = _ref5.property;\n  var r = loan;\n\n  if (!r) {\n    throw new Error('requires a loan');\n  }\n\n  var array = [{\n    id: 'value',\n    type: 'textInput',\n    money: true\n  }, {\n    id: 'investmentRent',\n    type: 'textInput',\n    money: true,\n    condition: r.residenceType === RESIDENCE_TYPE.INVESTMENT\n  }, {\n    id: 'propertyType',\n    type: 'radioInput',\n    options: Object.values(PROPERTY_TYPE)\n  }, {\n    id: 'isNew',\n    type: 'radioInput',\n    options: [true, false],\n    condition: r.purchaseType === PURCHASE_TYPE.ACQUISITION\n  }, {\n    id: 'isCoproperty',\n    type: 'radioInput',\n    options: [true, false]\n  }, {\n    id: 'copropertyPercentage',\n    type: 'textInput',\n    condition: property.isCoproperty,\n    info: true\n  }, {\n    type: 'h3',\n    id: 'propertyAddress',\n    ignore: true,\n    required: false\n  }, {\n    id: 'address1',\n    type: 'textInput'\n  }, {\n    id: 'address2',\n    type: 'textInput',\n    required: false\n  }, {\n    id: 'zipCode',\n    type: 'textInput'\n  }, {\n    id: 'city',\n    type: 'textInput'\n  }, {\n    type: 'custom',\n    id: 'canton',\n    component: React.createElement(CantonField, {\n      canton: property.canton\n    })\n  }, {\n    type: 'h3',\n    id: 'propertyDetails',\n    ignore: true,\n    required: false\n  }, {\n    id: 'houseType',\n    type: 'radioInput',\n    options: Object.values(HOUSE_TYPE),\n    condition: property.propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    id: 'flatType',\n    type: 'radioInput',\n    options: Object.values(FLAT_TYPE),\n    condition: property.propertyType === PROPERTY_TYPE.FLAT\n  }, {\n    id: 'numberOfFloors',\n    type: 'textInput',\n    number: true\n  }, {\n    id: 'floorNumber',\n    type: 'textInput',\n    number: true,\n    condition: shouldDisplayFloorNumber(property)\n  }, {\n    id: 'constructionYear',\n    type: 'textInput',\n    number: true\n  }, {\n    id: 'renovationYear',\n    type: 'textInput',\n    number: true,\n    required: false,\n    info: true\n  }, {\n    id: 'landArea',\n    type: 'textInput',\n    number: true,\n    condition: property.propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    id: 'insideArea',\n    type: 'textInput',\n    number: true,\n    condition: property.propertyType === PROPERTY_TYPE.FLAT\n  }, {\n    id: 'terraceArea',\n    type: 'textInput',\n    number: true,\n    required: true,\n    condition: shouldDisplayTerraceArea(property)\n  }, {\n    id: 'volume',\n    type: 'textInput',\n    number: true,\n    condition: property.propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    id: 'volumeNorm',\n    type: 'radioInput',\n    options: Object.values(VOLUME_NORM),\n    condition: property.propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    id: 'roomCount',\n    type: 'textInput',\n    decimal: true,\n    info: true\n  }, {\n    id: 'parkingInside',\n    type: 'textInput',\n    number: true,\n    required: false\n  }, {\n    id: 'parkingOutside',\n    type: 'textInput',\n    number: true,\n    required: false\n  }, {\n    id: 'minergie',\n    type: 'radioInput',\n    options: Object.values(MINERGIE_CERTIFICATE)\n  }, {\n    id: 'yearlyExpenses',\n    type: 'textInput',\n    money: true,\n    required: false,\n    info: true\n  }];\n  return array.map(mapInput);\n};","map":{"version":3,"sources":["imports/core/arrays/PropertyFormArray.jsx"],"names":["mapInput","input","intlSafeObject","obj","intlId","getOwnerOptions","borrowers","value","OWNER","isFirst","isSecond","borrowerFirstName","id","intlValues","name","getPropertyLoanArray","r","array","type","ignore","required","options","Object","conditionalTrueValue","condition","PURCHASE_TYPE","inputs","shouldDisplayFloorNumber","flatType","propertyType","PROPERTY_TYPE","FLAT_TYPE","shouldDisplayTerraceArea","getPropertyArray","property","money","RESIDENCE_TYPE","INVESTMENT","ACQUISITION","info","component","HOUSE","FLAT","number","decimal"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {\n  PROPERTY_TYPE,\n  PURCHASE_TYPE,\n  OWNER,\n  RESIDENCE_TYPE,\n  MINERGIE_CERTIFICATE,\n  HOUSE_TYPE,\n  FLAT_TYPE,\n  VOLUME_NORM,\n} from 'core/api/constants';\nimport CantonField from 'core/components/CantonField/CantonField';\n\nconst mapInput = (input) => {\n  const intlSafeObject = { ...input };\n  // If the id contains a dot in it, split it and add a intlId\n  // This makes it easier to write intl messages\n  if (input.id && input.id.indexOf('.') > 0) {\n    // Perform some additional slicing to make sure ids with multiple dots\n    // work by removing only the first part\n    intlSafeObject.intlId = input.id\n      .split('.')\n      .slice(1)\n      .join('.');\n  }\n\n  if (input.inputs) {\n    // If there are nested inputs, give them an intlId too\n    intlSafeObject.inputs = input.inputs.map(obj =>\n      (obj.id && obj.id.indexOf('.') > 0\n        ? { ...obj, intlId: obj.id.split('.')[1] }\n        : obj));\n  }\n\n  return intlSafeObject;\n};\n\nconst getOwnerOptions = ({ borrowers }) =>\n  Object.values(OWNER)\n    .filter(value => (borrowers.length === 1 ? value !== OWNER.SECOND : true))\n    .map((value) => {\n      const isFirst = value === OWNER.FIRST;\n      const isSecond = value === OWNER.SECOND;\n      let borrowerFirstName;\n\n      if (borrowers.length <= 1) {\n        borrowerFirstName = null;\n      } else {\n        borrowerFirstName = borrowers[isFirst ? 0 : 1].firstName;\n      }\n\n      return isFirst || isSecond\n        ? {\n          id: isFirst ? 0 : 1,\n          intlValues: {\n            name: borrowerFirstName || `Emprunteur ${isFirst ? 1 : 2}`,\n          },\n        }\n        : value;\n    });\n\nexport const getPropertyLoanArray = ({ loan, borrowers }) => {\n  const r = loan;\n\n  if (!r) {\n    throw new Error('requires a loan');\n  }\n\n  const array = [\n    {\n      type: 'h3',\n      id: 'propertyInfo',\n      ignore: true,\n      required: false,\n    },\n    {\n      id: 'residenceType',\n      type: 'radioInput',\n      options: Object.values(RESIDENCE_TYPE),\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: OWNER.OTHER,\n      condition:\n        borrowers.length > 1 && r.purchaseType === PURCHASE_TYPE.REFINANCING,\n      inputs: [\n        {\n          id: 'currentOwner',\n          type: 'radioInput',\n          options: getOwnerOptions({ borrowers }),\n        },\n        { id: 'otherOwner', type: 'textInput' },\n      ],\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: OWNER.OTHER,\n      condition:\n        borrowers.length > 1 && r.purchaseType !== PURCHASE_TYPE.REFINANCING,\n      inputs: [\n        {\n          id: 'futureOwner',\n          type: 'radioInput',\n          options: getOwnerOptions({ borrowers }),\n        },\n        {\n          id: 'otherOwner',\n          type: 'textInput',\n        },\n      ],\n    },\n  ];\n\n  return array.map(mapInput);\n};\n\nconst shouldDisplayFloorNumber = ({ propertyType, flatType }) =>\n  propertyType === PROPERTY_TYPE.FLAT\n  && flatType !== FLAT_TYPE.PENTHOUSE_APARTMENT\n  && flatType !== FLAT_TYPE.PENTHOUSE_MAISONETTE\n  && flatType !== FLAT_TYPE.TERRACE_APARTMENT;\n\nconst shouldDisplayTerraceArea = ({ propertyType, flatType }) =>\n  propertyType === PROPERTY_TYPE.FLAT;\n\nexport const getPropertyArray = ({ loan, borrowers, property }) => {\n  const r = loan;\n\n  if (!r) {\n    throw new Error('requires a loan');\n  }\n\n  const array = [\n    { id: 'value', type: 'textInput', money: true },\n    {\n      id: 'investmentRent',\n      type: 'textInput',\n      money: true,\n      condition: r.residenceType === RESIDENCE_TYPE.INVESTMENT,\n    },\n    {\n      id: 'propertyType',\n      type: 'radioInput',\n      options: Object.values(PROPERTY_TYPE),\n    },\n    {\n      id: 'isNew',\n      type: 'radioInput',\n      options: [true, false],\n      condition: r.purchaseType === PURCHASE_TYPE.ACQUISITION,\n    },\n    {\n      id: 'isCoproperty',\n      type: 'radioInput',\n      options: [true, false],\n    },\n    {\n      id: 'copropertyPercentage',\n      type: 'textInput',\n      condition: property.isCoproperty,\n      info: true,\n    },\n    {\n      type: 'h3',\n      id: 'propertyAddress',\n      ignore: true,\n      required: false,\n    },\n    {\n      id: 'address1',\n      type: 'textInput',\n    },\n    {\n      id: 'address2',\n      type: 'textInput',\n      required: false,\n    },\n    {\n      id: 'zipCode',\n      type: 'textInput',\n    },\n    {\n      id: 'city',\n      type: 'textInput',\n    },\n    {\n      type: 'custom',\n      id: 'canton',\n      component: <CantonField canton={property.canton} />,\n    },\n    {\n      type: 'h3',\n      id: 'propertyDetails',\n      ignore: true,\n      required: false,\n    },\n    {\n      id: 'houseType',\n      type: 'radioInput',\n      options: Object.values(HOUSE_TYPE),\n      condition: property.propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      id: 'flatType',\n      type: 'radioInput',\n      options: Object.values(FLAT_TYPE),\n      condition: property.propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      id: 'numberOfFloors',\n      type: 'textInput',\n      number: true,\n    },\n    {\n      id: 'floorNumber',\n      type: 'textInput',\n      number: true,\n      condition: shouldDisplayFloorNumber(property),\n    },\n    { id: 'constructionYear', type: 'textInput', number: true },\n    {\n      id: 'renovationYear',\n      type: 'textInput',\n      number: true,\n      required: false,\n      info: true,\n    },\n    {\n      id: 'landArea',\n      type: 'textInput',\n      number: true,\n      condition: property.propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      id: 'insideArea',\n      type: 'textInput',\n      number: true,\n      condition: property.propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      id: 'terraceArea',\n      type: 'textInput',\n      number: true,\n      required: true,\n      condition: shouldDisplayTerraceArea(property),\n    },\n    {\n      id: 'volume',\n      type: 'textInput',\n      number: true,\n      condition: property.propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      id: 'volumeNorm',\n      type: 'radioInput',\n      options: Object.values(VOLUME_NORM),\n      condition: property.propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      id: 'roomCount',\n      type: 'textInput',\n      decimal: true,\n      info: true,\n    },\n    { id: 'parkingInside', type: 'textInput', number: true, required: false },\n    { id: 'parkingOutside', type: 'textInput', number: true, required: false },\n    {\n      id: 'minergie',\n      type: 'radioInput',\n      options: Object.values(MINERGIE_CERTIFICATE),\n    },\n    {\n      id: 'yearlyExpenses',\n      type: 'textInput',\n      money: true,\n      required: false,\n      info: true,\n    },\n  ];\n\n  return array.map(mapInput);\n};\n"]},"sourceType":"script","hash":"e3a27175df04ad2fa0d1ca641e7c617d135ea698"}
