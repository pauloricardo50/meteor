{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/users/users.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/api/users/users.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/users/users.js","inputSourceMap":{"version":3,"sources":["imports/core/api/users/users.js"],"names":["SimpleSchema","Meteor","createdAt","updatedAt","cacheField","ROLES","UserSchema","username","type","String","optional","emails","Array","Object","regEx","RegEx","Email","Boolean","services","blackbox","roles","defaultValue","USER","allowedValues","values","heartbeat","Date","assignedEmployeeId","firstName","lastName","phoneNumbers","apiPublicKey","referredByUserLink","referredByOrganisationLink","assignedEmployeeCache","users","attachSchema","Users"],"mappings":"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","sourcesContent":["import SimpleSchema from 'simpl-schema';\nimport { Meteor } from 'meteor/meteor';\n\nimport { createdAt, updatedAt, cacheField } from '../helpers/sharedSchemas';\nimport { ROLES } from './userConstants';\n\nexport const UserSchema = new SimpleSchema({\n  username: {\n    type: String,\n    // For accounts-password, either emails or username is required, but not both. It is OK to make this\n    // optional here because the accounts-password package does its own validation.\n    // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n    optional: true,\n  },\n  emails: {\n    type: Array,\n    // For accounts-password, either emails or username is required, but not both. It is OK to make this\n    // optional here because the accounts-password package does its own validation.\n    // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n    optional: true,\n  },\n  'emails.$': {\n    type: Object,\n  },\n  'emails.$.address': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email,\n  },\n  'emails.$.verified': {\n    type: Boolean,\n  },\n  createdAt,\n  updatedAt,\n  // Make sure this services field is in your schema if you're using any of the accounts packages\n  services: {\n    type: Object,\n    optional: true,\n    blackbox: true,\n  },\n  // Add `roles` to your schema if you use the meteor-roles package.\n  // Option 1: Object type\n  // If you specify that type as Object, you must also specify the\n  // `Roles.GLOBAL_GROUP` group whenever you add a user to a role.\n  // Example:\n  // Roles.addUsersToRoles(userId, [\"admin\"], Roles.GLOBAL_GROUP);\n  // You can't mix and match adding with and without a group since\n  // you will fail validation in some cases.\n  // roles: {\n  //   type: Object,\n  //   optional: true,\n  //   blackbox: true,\n  // },\n  // Option 2: [String] type\n  // If you are sure you will never need to use role groups, then\n  // you can specify [String] as the type\n  roles: {\n    type: Array,\n    optional: true,\n    defaultValue: [ROLES.USER],\n  },\n  'roles.$': {\n    type: String,\n    allowedValues: Object.values(ROLES),\n  },\n  // In order to avoid an 'Exception in setInterval callback' from Meteor\n  heartbeat: {\n    type: Date,\n    optional: true,\n  },\n  assignedEmployeeId: {\n    type: String,\n    optional: true,\n  },\n  firstName: {\n    type: String,\n    optional: true,\n  },\n  lastName: {\n    type: String,\n    optional: true,\n  },\n  phoneNumbers: {\n    type: Array,\n    optional: true,\n  },\n  'phoneNumbers.$': {\n    type: String,\n  },\n  apiPublicKey: {\n    type: Object,\n    optional: true,\n  },\n  'apiPublicKey.publicKey': {\n    type: String,\n    optional: true,\n  },\n  'apiPublicKey.createdAt': { type: Date, optional: true },\n  referredByUserLink: { type: String, optional: true },\n  referredByOrganisationLink: { type: String, optional: true },\n  assignedEmployeeCache: cacheField,\n});\n\nMeteor.users.attachSchema(UserSchema);\n\nconst Users = Meteor.users;\nexport default Users;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/users/users.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/users/users.js"}},"code":"module.export({\n  UserSchema: function () {\n    return UserSchema;\n  }\n});\nvar SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar createdAt, updatedAt, cacheField;\nmodule.link(\"../helpers/sharedSchemas\", {\n  createdAt: function (v) {\n    createdAt = v;\n  },\n  updatedAt: function (v) {\n    updatedAt = v;\n  },\n  cacheField: function (v) {\n    cacheField = v;\n  }\n}, 2);\nvar ROLES;\nmodule.link(\"./userConstants\", {\n  ROLES: function (v) {\n    ROLES = v;\n  }\n}, 3);\nvar UserSchema = new SimpleSchema({\n  username: {\n    type: String,\n    // For accounts-password, either emails or username is required, but not both. It is OK to make this\n    // optional here because the accounts-password package does its own validation.\n    // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n    optional: true\n  },\n  emails: {\n    type: Array,\n    // For accounts-password, either emails or username is required, but not both. It is OK to make this\n    // optional here because the accounts-password package does its own validation.\n    // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n    optional: true\n  },\n  'emails.$': {\n    type: Object\n  },\n  'emails.$.address': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email\n  },\n  'emails.$.verified': {\n    type: Boolean\n  },\n  createdAt: createdAt,\n  updatedAt: updatedAt,\n  // Make sure this services field is in your schema if you're using any of the accounts packages\n  services: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  },\n  // Add `roles` to your schema if you use the meteor-roles package.\n  // Option 1: Object type\n  // If you specify that type as Object, you must also specify the\n  // `Roles.GLOBAL_GROUP` group whenever you add a user to a role.\n  // Example:\n  // Roles.addUsersToRoles(userId, [\"admin\"], Roles.GLOBAL_GROUP);\n  // You can't mix and match adding with and without a group since\n  // you will fail validation in some cases.\n  // roles: {\n  //   type: Object,\n  //   optional: true,\n  //   blackbox: true,\n  // },\n  // Option 2: [String] type\n  // If you are sure you will never need to use role groups, then\n  // you can specify [String] as the type\n  roles: {\n    type: Array,\n    optional: true,\n    defaultValue: [ROLES.USER]\n  },\n  'roles.$': {\n    type: String,\n    allowedValues: Object.values(ROLES)\n  },\n  // In order to avoid an 'Exception in setInterval callback' from Meteor\n  heartbeat: {\n    type: Date,\n    optional: true\n  },\n  assignedEmployeeId: {\n    type: String,\n    optional: true\n  },\n  firstName: {\n    type: String,\n    optional: true\n  },\n  lastName: {\n    type: String,\n    optional: true\n  },\n  phoneNumbers: {\n    type: Array,\n    optional: true\n  },\n  'phoneNumbers.$': {\n    type: String\n  },\n  apiPublicKey: {\n    type: Object,\n    optional: true\n  },\n  'apiPublicKey.publicKey': {\n    type: String,\n    optional: true\n  },\n  'apiPublicKey.createdAt': {\n    type: Date,\n    optional: true\n  },\n  referredByUserLink: {\n    type: String,\n    optional: true\n  },\n  referredByOrganisationLink: {\n    type: String,\n    optional: true\n  },\n  assignedEmployeeCache: cacheField\n});\nMeteor.users.attachSchema(UserSchema);\nvar Users = Meteor.users;\nmodule.exportDefault(Users);","map":{"version":3,"sources":["imports/core/api/users/users.js"],"names":["SimpleSchema","UserSchema","username","type","optional","emails","Object","regEx","Email","Boolean","createdAt","updatedAt","services","blackbox","roles","defaultValue","ROLES","allowedValues","heartbeat","assignedEmployeeId","firstName","lastName","phoneNumbers","String","apiPublicKey","referredByUserLink","referredByOrganisationLink","assignedEmployeeCache","cacheField","Meteor","Users"],"mappings":"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","sourcesContent":["import SimpleSchema from 'simpl-schema';\nimport { Meteor } from 'meteor/meteor';\n\nimport { createdAt, updatedAt, cacheField } from '../helpers/sharedSchemas';\nimport { ROLES } from './userConstants';\n\nexport const UserSchema = new SimpleSchema({\n  username: {\n    type: String,\n    // For accounts-password, either emails or username is required, but not both. It is OK to make this\n    // optional here because the accounts-password package does its own validation.\n    // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n    optional: true,\n  },\n  emails: {\n    type: Array,\n    // For accounts-password, either emails or username is required, but not both. It is OK to make this\n    // optional here because the accounts-password package does its own validation.\n    // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n    optional: true,\n  },\n  'emails.$': {\n    type: Object,\n  },\n  'emails.$.address': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email,\n  },\n  'emails.$.verified': {\n    type: Boolean,\n  },\n  createdAt,\n  updatedAt,\n  // Make sure this services field is in your schema if you're using any of the accounts packages\n  services: {\n    type: Object,\n    optional: true,\n    blackbox: true,\n  },\n  // Add `roles` to your schema if you use the meteor-roles package.\n  // Option 1: Object type\n  // If you specify that type as Object, you must also specify the\n  // `Roles.GLOBAL_GROUP` group whenever you add a user to a role.\n  // Example:\n  // Roles.addUsersToRoles(userId, [\"admin\"], Roles.GLOBAL_GROUP);\n  // You can't mix and match adding with and without a group since\n  // you will fail validation in some cases.\n  // roles: {\n  //   type: Object,\n  //   optional: true,\n  //   blackbox: true,\n  // },\n  // Option 2: [String] type\n  // If you are sure you will never need to use role groups, then\n  // you can specify [String] as the type\n  roles: {\n    type: Array,\n    optional: true,\n    defaultValue: [ROLES.USER],\n  },\n  'roles.$': {\n    type: String,\n    allowedValues: Object.values(ROLES),\n  },\n  // In order to avoid an 'Exception in setInterval callback' from Meteor\n  heartbeat: {\n    type: Date,\n    optional: true,\n  },\n  assignedEmployeeId: {\n    type: String,\n    optional: true,\n  },\n  firstName: {\n    type: String,\n    optional: true,\n  },\n  lastName: {\n    type: String,\n    optional: true,\n  },\n  phoneNumbers: {\n    type: Array,\n    optional: true,\n  },\n  'phoneNumbers.$': {\n    type: String,\n  },\n  apiPublicKey: {\n    type: Object,\n    optional: true,\n  },\n  'apiPublicKey.publicKey': {\n    type: String,\n    optional: true,\n  },\n  'apiPublicKey.createdAt': { type: Date, optional: true },\n  referredByUserLink: { type: String, optional: true },\n  referredByOrganisationLink: { type: String, optional: true },\n  assignedEmployeeCache: cacheField,\n});\n\nMeteor.users.attachSchema(UserSchema);\n\nconst Users = Meteor.users;\nexport default Users;\n"]},"sourceType":"script","hash":"3f4564f51472af8f5cd32817969d84f8cfc616dc"}
