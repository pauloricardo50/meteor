{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/cronitor/server/test/CronitorService.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/cronitor/server/test/CronitorService.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/cronitor/server/test/CronitorService.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/cronitor/server/test/CronitorService.test.js"],"names":["expect","Meteor","Mongo","SimpleSchema","CronitorService","CRONITOR_ID","TestCollection","Collection","testSchema","value","type","Number","min","max","attachSchema","describe","timeout","cronitor","id","it","run","then","msg","to","equal","complete","pause","include","fail","Error","insert","error"],"mappings":"AAAA;AACA,SAASA,MAAT,QAAuB,MAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,OAAOC,eAAP;AAEA,MAAMC,WAAW,GAAG,QAApB;AAEA,MAAMC,cAAc,GAAG,IAAIJ,KAAK,CAACK,UAAV,CAAqB,gBAArB,CAAvB;AACA,MAAMC,UAAU,GAAG,IAAIL,YAAJ,CAAiB;AAClCM,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,GAAG,EAAE,CAArB;AAAwBC,IAAAA,GAAG,EAAE;AAA7B;AAD2B,CAAjB,CAAnB;AAGAP,cAAc,CAACQ,YAAf,CAA4BN,UAA5B;AAEAO,QAAQ,CAAC,iBAAD,EAAoB,YAAY;AACtC,OAAKC,OAAL,CAAa,KAAb;AAEA,QAAMC,QAAQ,GAAG,IAAIb,eAAJ,CAAoB;AACnCc,IAAAA,EAAE,EAAEb;AAD+B,GAApB,CAAjB;AAIAc,EAAAA,EAAE,CAAC,MAAD,EAAS,MAAMF,QAAQ,CAACG,GAAT,GAAeC,IAAf,CAAoBC,GAAG,IAAItB,MAAM,CAACsB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,KAAf,CAAqB,EAArB,CAA3B,CAAf,CAAF;AAEAL,EAAAA,EAAE,CAAC,WAAD,EAAc,MACdF,QAAQ,CAACQ,QAAT,CAAkB,UAAlB,EAA8BJ,IAA9B,CAAmCC,GAAG,IAAItB,MAAM,CAACsB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,KAAf,CAAqB,EAArB,CAA1C,CADA,CAAF;AAGAL,EAAAA,EAAE,CAAC,QAAD,EAAW,MACXF,QAAQ,CACLS,KADH,CACS,CADT,EAEGL,IAFH,CAEQC,GAAG,IAAItB,MAAM,CAACsB,GAAD,CAAN,CAAYC,EAAZ,CAAeI,OAAf,CAAuB,sBAAvB,CAFf,CADA,CAAF;AAKAR,EAAAA,EAAE,CAAC,mBAAD,EAAsB,MACtBF,QAAQ,CAACW,IAAT,CAAc,WAAd,EAA2BP,IAA3B,CAAgCC,GAAG,IAAItB,MAAM,CAACsB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,KAAf,CAAqB,EAArB,CAAvC,CADA,CAAF;AAGAL,EAAAA,EAAE,CAAC,kBAAD,EAAqB,MACrBF,QAAQ,CACLW,IADH,CACQ,IAAIC,KAAJ,CAAU,WAAV,CADR,EAEGR,IAFH,CAEQC,GAAG,IAAItB,MAAM,CAACsB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,KAAf,CAAqB,EAArB,CAFf,CADA,CAAF;AAKAL,EAAAA,EAAE,CAAC,yBAAD,EAA4B,MAC5BF,QAAQ,CACLW,IADH,CACQ,IAAI3B,MAAM,CAAC4B,KAAX,CAAiB,WAAjB,CADR,EAEGR,IAFH,CAEQC,GAAG,IAAItB,MAAM,CAACsB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,KAAf,CAAqB,EAArB,CAFf,CADA,CAAF;AAKAL,EAAAA,EAAE,CAAC,6BAAD,EAAgC,MAAM;AACtC,QAAI;AACFb,MAAAA,cAAc,CAACwB,MAAf,CAAsB;AAAErB,QAAAA,KAAK,EAAE,CAAC;AAAV,OAAtB;AACD,KAFD,CAEE,OAAOsB,KAAP,EAAc;AACdd,MAAAA,QAAQ,CAACW,IAAT,CAAcG,KAAd,EAAqBV,IAArB,CAA0BC,GAAG,IAAItB,MAAM,CAACsB,GAAD,CAAN,CAAYC,EAAZ,CAAeC,KAAf,CAAqB,EAArB,CAAjC;AACD;AACF,GANC,CAAF;AAOD,CArCO,CAAR","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\nimport CronitorService from '../CronitorService';\n\nconst CRONITOR_ID = 'rrOCZ7';\n\nconst TestCollection = new Mongo.Collection('testCollection');\nconst testSchema = new SimpleSchema({\n  value: { type: Number, min: 0, max: 10 },\n});\nTestCollection.attachSchema(testSchema);\n\ndescribe('CronitorService', function () {\n  this.timeout(10000);\n\n  const cronitor = new CronitorService({\n    id: CRONITOR_ID,\n  });\n\n  it('runs', () => cronitor.run().then(msg => expect(msg).to.equal('')));\n\n  it('completes', () =>\n    cronitor.complete('complete').then(msg => expect(msg).to.equal('')));\n\n  it('pauses', () =>\n    cronitor\n      .pause(1)\n      .then(msg => expect(msg).to.include('is paused for 1 hour')));\n\n  it('fails with string', () =>\n    cronitor.fail('it failed').then(msg => expect(msg).to.equal('')));\n\n  it('fails with Error', () =>\n    cronitor\n      .fail(new Error('it failed'))\n      .then(msg => expect(msg).to.equal('')));\n\n  it('fails with Meteor Error', () =>\n    cronitor\n      .fail(new Meteor.Error('it failed'))\n      .then(msg => expect(msg).to.equal('')));\n\n  it('fails with error from mongo', () => {\n    try {\n      TestCollection.insert({ value: -1 });\n    } catch (error) {\n      cronitor.fail(error).then(msg => expect(msg).to.equal(''));\n    }\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/cronitor/server/test/CronitorService.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/cronitor/server/test/CronitorService.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 2);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 3);\nlet CronitorService;\nmodule.link(\"../CronitorService\", {\n  default(v) {\n    CronitorService = v;\n  }\n\n}, 4);\nconst CRONITOR_ID = 'rrOCZ7';\nconst TestCollection = new Mongo.Collection('testCollection');\nconst testSchema = new SimpleSchema({\n  value: {\n    type: Number,\n    min: 0,\n    max: 10\n  }\n});\nTestCollection.attachSchema(testSchema);\ndescribe('CronitorService', function () {\n  this.timeout(10000);\n  const cronitor = new CronitorService({\n    id: CRONITOR_ID\n  });\n  it('runs', () => cronitor.run().then(msg => expect(msg).to.equal('')));\n  it('completes', () => cronitor.complete('complete').then(msg => expect(msg).to.equal('')));\n  it('pauses', () => cronitor.pause(1).then(msg => expect(msg).to.include('is paused for 1 hour')));\n  it('fails with string', () => cronitor.fail('it failed').then(msg => expect(msg).to.equal('')));\n  it('fails with Error', () => cronitor.fail(new Error('it failed')).then(msg => expect(msg).to.equal('')));\n  it('fails with Meteor Error', () => cronitor.fail(new Meteor.Error('it failed')).then(msg => expect(msg).to.equal('')));\n  it('fails with error from mongo', () => {\n    try {\n      TestCollection.insert({\n        value: -1\n      });\n    } catch (error) {\n      cronitor.fail(error).then(msg => expect(msg).to.equal(''));\n    }\n  });\n});","map":{"version":3,"sources":["imports/core/api/cronitor/server/test/CronitorService.test.js"],"names":["CRONITOR_ID","TestCollection","Mongo","testSchema","value","type","min","max","describe","cronitor","id","it","msg","expect","Meteor"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport SimpleSchema from 'simpl-schema';\n\nimport CronitorService from '../CronitorService';\n\nconst CRONITOR_ID = 'rrOCZ7';\n\nconst TestCollection = new Mongo.Collection('testCollection');\nconst testSchema = new SimpleSchema({\n  value: { type: Number, min: 0, max: 10 },\n});\nTestCollection.attachSchema(testSchema);\n\ndescribe('CronitorService', function () {\n  this.timeout(10000);\n\n  const cronitor = new CronitorService({\n    id: CRONITOR_ID,\n  });\n\n  it('runs', () => cronitor.run().then(msg => expect(msg).to.equal('')));\n\n  it('completes', () =>\n    cronitor.complete('complete').then(msg => expect(msg).to.equal('')));\n\n  it('pauses', () =>\n    cronitor\n      .pause(1)\n      .then(msg => expect(msg).to.include('is paused for 1 hour')));\n\n  it('fails with string', () =>\n    cronitor.fail('it failed').then(msg => expect(msg).to.equal('')));\n\n  it('fails with Error', () =>\n    cronitor\n      .fail(new Error('it failed'))\n      .then(msg => expect(msg).to.equal('')));\n\n  it('fails with Meteor Error', () =>\n    cronitor\n      .fail(new Meteor.Error('it failed'))\n      .then(msg => expect(msg).to.equal('')));\n\n  it('fails with error from mongo', () => {\n    try {\n      TestCollection.insert({ value: -1 });\n    } catch (error) {\n      cronitor.fail(error).then(msg => expect(msg).to.equal(''));\n    }\n  });\n});\n"]},"sourceType":"script","hash":"42b77f42726aed6f111883513e5d12d238a222ff"}
