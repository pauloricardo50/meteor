{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/redux/widget1/widget1Suggestion.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/redux/widget1/widget1Suggestion.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/redux/widget1/widget1Suggestion.js","inputSourceMap":{"version":3,"sources":["imports/core/redux/widget1/widget1Suggestion.js"],"names":["compose","makeSelectValue","selectAutoValues","makeWidget1Selector","SALARY","FORTUNE","PROPERTY","CURRENT_LOAN","WANTED_LOAN","PURCHASE_TYPE","Widget1Suggester","acquisitionSuggesters","all","suggestSalary","propertyToSalary","property","fortuneToProperty","suggestFortune","propertyToFortune","salaryToProperty","suggestProperty","refinancingSuggesters","default","suggestWantedLoan","makeValueSuggester","suggesters","name","firstManualKey","secondManualKey","suggester","makeSuggestValue","state","value","purchaseType","autoValues","thisValueIsManual","manualValueKeys","Object","keys","filter","key","manualValues","map","suggestingValues","reduce","acc","index","suggestedValue","REFINANCING","ACQUISITION"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,SACEC,eADF,EAEEC,gBAFF,EAGEC,mBAHF;AAKA,SACEC,MADF,EAEEC,OAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,aANF;AAQA,OAAOC,gBAAP,2B,CAEA;AACA;AACA;AACA;;AACA,MAAMC,qBAAqB,GAAG;AAC5B,GAACP,MAAD,GAAU;AACRQ,IAAAA,GAAG,EAAEF,gBAAgB,CAACG,aADd;AAER,KAACR,OAAD,GAAWL,OAAO,CAChBU,gBAAgB,CAACI,gBADD,EAEhBC,QAAQ,KAAK;AAAEA,MAAAA;AAAF,KAAL,CAFQ,EAGhBL,gBAAgB,CAACM,iBAHD,CAFV;AAOR,KAACV,QAAD,GAAYI,gBAAgB,CAACI;AAPrB,GADkB;AAU5B,GAACT,OAAD,GAAW;AACTO,IAAAA,GAAG,EAAEF,gBAAgB,CAACO,cADb;AAET,KAACb,MAAD,GAAUJ,OAAO,CACfU,gBAAgB,CAACQ,iBADF,EAEfH,QAAQ,KAAK;AAAEA,MAAAA;AAAF,KAAL,CAFO,EAGfL,gBAAgB,CAACS,gBAHF,CAFR;AAOT,KAACb,QAAD,GAAYI,gBAAgB,CAACQ;AAPpB,GAViB;AAmB5B,GAACZ,QAAD,GAAY;AACVM,IAAAA,GAAG,EAAEF,gBAAgB,CAACU,eADZ;AAEV,KAAChB,MAAD,GAAUM,gBAAgB,CAACS,gBAFjB;AAGV,KAACd,OAAD,GAAWK,gBAAgB,CAACM;AAHlB;AAnBgB,CAA9B;AA0BA,MAAMK,qBAAqB,GAAG;AAC5B,GAACjB,MAAD,GAAU;AACRQ,IAAAA,GAAG,EAAE,MAAM,CADH;AAER,KAACJ,WAAD,GAAe,MAAM,CAFb;AAGR,KAACF,QAAD,GAAY,MAAM;AAHV,GADkB;AAM5B,GAACA,QAAD,GAAY;AACVgB,IAAAA,OAAO,EAAE,MAAM;AADL,GANgB;AAS5B,GAACf,YAAD,GAAgB;AACde,IAAAA,OAAO,EAAE,MAAM;AADD,GATY;AAY5B,GAACd,WAAD,GAAe;AACbc,IAAAA,OAAO,EAAEZ,gBAAgB,CAACa;AADb;AAZa,CAA9B,C,CAiBA;;AACA,MAAMC,kBAAkB,GAAG,CACzBC,UADyB,EAEzBC,IAFyB,EAGzB,CAACC,cAAD,EAAiBC,eAAjB,CAHyB,KAItB;AACH,MAAIC,SAAJ;;AACA,MAAID,eAAJ,EAAqB;AACnB;AACAC,IAAAA,SAAS,GAAGJ,UAAU,CAACC,IAAD,CAAV,CAAiBd,GAA7B;AACD,GAHD,MAGO,IAAI,CAACe,cAAL,EAAqB;AAC1B;AACAE,IAAAA,SAAS,GAAG,MAAM,CAAlB;AACD,GAHM,MAGA;AACL;AACAA,IAAAA,SAAS,GAAGJ,UAAU,CAACC,IAAD,CAAV,CAAiBC,cAAjB,CAAZ;AACD,GAXE,CAaH;;;AACA,SAAOE,SAAS,IAAIJ,UAAU,CAACC,IAAD,CAAV,CAAiBJ,OAArC;AACD,CAnBD;;AAqBA,OAAO,MAAMQ,gBAAgB,GAAGL,UAAU,IAAI,CAACC,IAAD,EAAOK,KAAP,KAAiB;AAC7D;AACA,QAAMC,KAAK,GAAG/B,eAAe,CAACyB,IAAD,CAAf,CAAsBK,KAAtB,CAAd;AACA,QAAME,YAAY,GAAG9B,mBAAmB,CAAC,cAAD,CAAnB,CAAoC4B,KAApC,CAArB,CAH6D,CAK7D;AACA;;AACA,QAAMG,UAAU,GAAGhC,gBAAgB,CAAC6B,KAAD,CAAnC;AACA,QAAMI,iBAAiB,GAAG,CAACD,UAAU,CAACR,IAAD,CAArC;;AAEA,MAAIS,iBAAJ,EAAuB;AACrB,WAAOH,KAAP;AACD,GAZ4D,CAc7D;AACA;;;AACA,QAAMI,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwBK,MAAxB,CAA+BC,GAAG,IAAI,CAACN,UAAU,CAACM,GAAD,CAAjD,CAAxB;AACA,QAAMC,YAAY,GAAGL,eAAe,CAACM,GAAhB,CAAoBF,GAAG,IAAIvC,eAAe,CAACuC,GAAD,CAAf,CAAqBT,KAArB,CAA3B,CAArB;AACA,QAAMF,SAAS,GAAGL,kBAAkB,CAClCC,UAAU,CAACQ,YAAD,CADwB,EAElCP,IAFkC,EAGlCU,eAHkC,CAApC,CAlB6D,CAwB7D;;AACA,QAAMO,gBAAgB,GAAGP,eAAe,CAACQ,MAAhB,CACvB,CAACC,GAAD,EAAML,GAAN,EAAWM,KAAX,MAAsB,EAAE,GAAGD,GAAL;AAAU,KAACL,GAAD,GAAOC,YAAY,CAACK,KAAD;AAA7B,GAAtB,CADuB,EAEvB,EAFuB,CAAzB;AAKA,QAAMC,cAAc,GAAGlB,SAAS,CAACc,gBAAD,CAAhC;AACA,SAAOI,cAAP;AACD,CAhCM;AAkCP,eAAejB,gBAAgB,CAAC;AAC9B,GAACrB,aAAa,CAACuC,WAAf,GAA6B3B,qBADC;AAE9B,GAACZ,aAAa,CAACwC,WAAf,GAA6BtC;AAFC,CAAD,CAA/B","sourcesContent":["import { compose } from 'recompose';\nimport {\n  makeSelectValue,\n  selectAutoValues,\n  makeWidget1Selector,\n} from './widget1Selectors';\nimport {\n  SALARY,\n  FORTUNE,\n  PROPERTY,\n  CURRENT_LOAN,\n  WANTED_LOAN,\n  PURCHASE_TYPE,\n} from './widget1Constants';\nimport Widget1Suggester from './Widget1Suggester';\n\n// For each name, there are 3 suggesters, based on which other values are\n// currently set to `auto` or not.\n// If all other values are set to `auto: false`, use `all` function,\n// otherwise use the 2nd or 3rd function\nconst acquisitionSuggesters = {\n  [SALARY]: {\n    all: Widget1Suggester.suggestSalary,\n    [FORTUNE]: compose(\n      Widget1Suggester.propertyToSalary,\n      property => ({ property }),\n      Widget1Suggester.fortuneToProperty,\n    ),\n    [PROPERTY]: Widget1Suggester.propertyToSalary,\n  },\n  [FORTUNE]: {\n    all: Widget1Suggester.suggestFortune,\n    [SALARY]: compose(\n      Widget1Suggester.propertyToFortune,\n      property => ({ property }),\n      Widget1Suggester.salaryToProperty,\n    ),\n    [PROPERTY]: Widget1Suggester.propertyToFortune,\n  },\n  [PROPERTY]: {\n    all: Widget1Suggester.suggestProperty,\n    [SALARY]: Widget1Suggester.salaryToProperty,\n    [FORTUNE]: Widget1Suggester.fortuneToProperty,\n  },\n};\n\nconst refinancingSuggesters = {\n  [SALARY]: {\n    all: () => 0,\n    [WANTED_LOAN]: () => 0,\n    [PROPERTY]: () => 0,\n  },\n  [PROPERTY]: {\n    default: () => 0,\n  },\n  [CURRENT_LOAN]: {\n    default: () => 0,\n  },\n  [WANTED_LOAN]: {\n    default: Widget1Suggester.suggestWantedLoan,\n  },\n};\n\n// Pick the right suggester for `name`\nconst makeValueSuggester = (\n  suggesters,\n  name,\n  [firstManualKey, secondManualKey],\n) => {\n  let suggester;\n  if (secondManualKey) {\n    // Both keys are manual, use `all` suggester\n    suggester = suggesters[name].all;\n  } else if (!firstManualKey) {\n    // If all values are auto, just set them all to 0\n    suggester = () => 0;\n  } else {\n    // Only one value is manual, use it to suggest the other ones\n    suggester = suggesters[name][firstManualKey];\n  }\n\n  // Make sure we have a fallback suggester\n  return suggester || suggesters[name].default;\n};\n\nexport const makeSuggestValue = suggesters => (name, state) => {\n  // Get the number value for this name\n  const value = makeSelectValue(name)(state);\n  const purchaseType = makeWidget1Selector('purchaseType')(state);\n\n  // Get an object with all the auto values for every key\n  // The auto value for the current name should be true\n  const autoValues = selectAutoValues(state);\n  const thisValueIsManual = !autoValues[name];\n\n  if (thisValueIsManual) {\n    return value;\n  }\n\n  // Get an array of the keys that are manual and should be used to compute\n  // the next value\n  const manualValueKeys = Object.keys(autoValues).filter(key => !autoValues[key]);\n  const manualValues = manualValueKeys.map(key => makeSelectValue(key)(state));\n  const suggester = makeValueSuggester(\n    suggesters[purchaseType],\n    name,\n    manualValueKeys,\n  );\n\n  // Allow all values to be accessed by key as well, for suggestWantedLoan\n  const suggestingValues = manualValueKeys.reduce(\n    (acc, key, index) => ({ ...acc, [key]: manualValues[index] }),\n    {},\n  );\n\n  const suggestedValue = suggester(suggestingValues);\n  return suggestedValue;\n};\n\nexport default makeSuggestValue({\n  [PURCHASE_TYPE.REFINANCING]: refinancingSuggesters,\n  [PURCHASE_TYPE.ACQUISITION]: acquisitionSuggesters,\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/redux/widget1/widget1Suggestion.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/redux/widget1/widget1Suggestion.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  makeSuggestValue: () => makeSuggestValue\n});\nlet compose;\nmodule.link(\"recompose\", {\n  compose(v) {\n    compose = v;\n  }\n\n}, 0);\nlet makeSelectValue, selectAutoValues, makeWidget1Selector;\nmodule.link(\"./widget1Selectors\", {\n  makeSelectValue(v) {\n    makeSelectValue = v;\n  },\n\n  selectAutoValues(v) {\n    selectAutoValues = v;\n  },\n\n  makeWidget1Selector(v) {\n    makeWidget1Selector = v;\n  }\n\n}, 1);\nlet SALARY, FORTUNE, PROPERTY, CURRENT_LOAN, WANTED_LOAN, PURCHASE_TYPE;\nmodule.link(\"./widget1Constants\", {\n  SALARY(v) {\n    SALARY = v;\n  },\n\n  FORTUNE(v) {\n    FORTUNE = v;\n  },\n\n  PROPERTY(v) {\n    PROPERTY = v;\n  },\n\n  CURRENT_LOAN(v) {\n    CURRENT_LOAN = v;\n  },\n\n  WANTED_LOAN(v) {\n    WANTED_LOAN = v;\n  },\n\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  }\n\n}, 2);\nlet Widget1Suggester;\nmodule.link(\"./Widget1Suggester\", {\n  default(v) {\n    Widget1Suggester = v;\n  }\n\n}, 3);\n// For each name, there are 3 suggesters, based on which other values are\n// currently set to `auto` or not.\n// If all other values are set to `auto: false`, use `all` function,\n// otherwise use the 2nd or 3rd function\nconst acquisitionSuggesters = {\n  [SALARY]: {\n    all: Widget1Suggester.suggestSalary,\n    [FORTUNE]: compose(Widget1Suggester.propertyToSalary, property => ({\n      property\n    }), Widget1Suggester.fortuneToProperty),\n    [PROPERTY]: Widget1Suggester.propertyToSalary\n  },\n  [FORTUNE]: {\n    all: Widget1Suggester.suggestFortune,\n    [SALARY]: compose(Widget1Suggester.propertyToFortune, property => ({\n      property\n    }), Widget1Suggester.salaryToProperty),\n    [PROPERTY]: Widget1Suggester.propertyToFortune\n  },\n  [PROPERTY]: {\n    all: Widget1Suggester.suggestProperty,\n    [SALARY]: Widget1Suggester.salaryToProperty,\n    [FORTUNE]: Widget1Suggester.fortuneToProperty\n  }\n};\nconst refinancingSuggesters = {\n  [SALARY]: {\n    all: () => 0,\n    [WANTED_LOAN]: () => 0,\n    [PROPERTY]: () => 0\n  },\n  [PROPERTY]: {\n    default: () => 0\n  },\n  [CURRENT_LOAN]: {\n    default: () => 0\n  },\n  [WANTED_LOAN]: {\n    default: Widget1Suggester.suggestWantedLoan\n  }\n}; // Pick the right suggester for `name`\n\nconst makeValueSuggester = (suggesters, name, [firstManualKey, secondManualKey]) => {\n  let suggester;\n\n  if (secondManualKey) {\n    // Both keys are manual, use `all` suggester\n    suggester = suggesters[name].all;\n  } else if (!firstManualKey) {\n    // If all values are auto, just set them all to 0\n    suggester = () => 0;\n  } else {\n    // Only one value is manual, use it to suggest the other ones\n    suggester = suggesters[name][firstManualKey];\n  } // Make sure we have a fallback suggester\n\n\n  return suggester || suggesters[name].default;\n};\n\nconst makeSuggestValue = suggesters => (name, state) => {\n  // Get the number value for this name\n  const value = makeSelectValue(name)(state);\n  const purchaseType = makeWidget1Selector('purchaseType')(state); // Get an object with all the auto values for every key\n  // The auto value for the current name should be true\n\n  const autoValues = selectAutoValues(state);\n  const thisValueIsManual = !autoValues[name];\n\n  if (thisValueIsManual) {\n    return value;\n  } // Get an array of the keys that are manual and should be used to compute\n  // the next value\n\n\n  const manualValueKeys = Object.keys(autoValues).filter(key => !autoValues[key]);\n  const manualValues = manualValueKeys.map(key => makeSelectValue(key)(state));\n  const suggester = makeValueSuggester(suggesters[purchaseType], name, manualValueKeys); // Allow all values to be accessed by key as well, for suggestWantedLoan\n\n  const suggestingValues = manualValueKeys.reduce((acc, key, index) => (0, _objectSpread2.default)({}, acc, {\n    [key]: manualValues[index]\n  }), {});\n  const suggestedValue = suggester(suggestingValues);\n  return suggestedValue;\n};\n\nmodule.exportDefault(makeSuggestValue({\n  [PURCHASE_TYPE.REFINANCING]: refinancingSuggesters,\n  [PURCHASE_TYPE.ACQUISITION]: acquisitionSuggesters\n}));","map":{"version":3,"sources":["imports/core/redux/widget1/widget1Suggestion.js"],"names":["compose","acquisitionSuggesters","all","Widget1Suggester","property","propertyToSalary","propertyToFortune","fortuneToProperty","refinancingSuggesters","default","suggestWantedLoan","makeValueSuggester","suggester","suggesters","makeSuggestValue","value","makeSelectValue","purchaseType","makeWidget1Selector","autoValues","selectAutoValues","thisValueIsManual","manualValueKeys","Object","key","manualValues","suggestingValues","suggestedValue","PURCHASE_TYPE"],"mappings":"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","sourcesContent":["import { compose } from 'recompose';\nimport {\n  makeSelectValue,\n  selectAutoValues,\n  makeWidget1Selector,\n} from './widget1Selectors';\nimport {\n  SALARY,\n  FORTUNE,\n  PROPERTY,\n  CURRENT_LOAN,\n  WANTED_LOAN,\n  PURCHASE_TYPE,\n} from './widget1Constants';\nimport Widget1Suggester from './Widget1Suggester';\n\n// For each name, there are 3 suggesters, based on which other values are\n// currently set to `auto` or not.\n// If all other values are set to `auto: false`, use `all` function,\n// otherwise use the 2nd or 3rd function\nconst acquisitionSuggesters = {\n  [SALARY]: {\n    all: Widget1Suggester.suggestSalary,\n    [FORTUNE]: compose(\n      Widget1Suggester.propertyToSalary,\n      property => ({ property }),\n      Widget1Suggester.fortuneToProperty,\n    ),\n    [PROPERTY]: Widget1Suggester.propertyToSalary,\n  },\n  [FORTUNE]: {\n    all: Widget1Suggester.suggestFortune,\n    [SALARY]: compose(\n      Widget1Suggester.propertyToFortune,\n      property => ({ property }),\n      Widget1Suggester.salaryToProperty,\n    ),\n    [PROPERTY]: Widget1Suggester.propertyToFortune,\n  },\n  [PROPERTY]: {\n    all: Widget1Suggester.suggestProperty,\n    [SALARY]: Widget1Suggester.salaryToProperty,\n    [FORTUNE]: Widget1Suggester.fortuneToProperty,\n  },\n};\n\nconst refinancingSuggesters = {\n  [SALARY]: {\n    all: () => 0,\n    [WANTED_LOAN]: () => 0,\n    [PROPERTY]: () => 0,\n  },\n  [PROPERTY]: {\n    default: () => 0,\n  },\n  [CURRENT_LOAN]: {\n    default: () => 0,\n  },\n  [WANTED_LOAN]: {\n    default: Widget1Suggester.suggestWantedLoan,\n  },\n};\n\n// Pick the right suggester for `name`\nconst makeValueSuggester = (\n  suggesters,\n  name,\n  [firstManualKey, secondManualKey],\n) => {\n  let suggester;\n  if (secondManualKey) {\n    // Both keys are manual, use `all` suggester\n    suggester = suggesters[name].all;\n  } else if (!firstManualKey) {\n    // If all values are auto, just set them all to 0\n    suggester = () => 0;\n  } else {\n    // Only one value is manual, use it to suggest the other ones\n    suggester = suggesters[name][firstManualKey];\n  }\n\n  // Make sure we have a fallback suggester\n  return suggester || suggesters[name].default;\n};\n\nexport const makeSuggestValue = suggesters => (name, state) => {\n  // Get the number value for this name\n  const value = makeSelectValue(name)(state);\n  const purchaseType = makeWidget1Selector('purchaseType')(state);\n\n  // Get an object with all the auto values for every key\n  // The auto value for the current name should be true\n  const autoValues = selectAutoValues(state);\n  const thisValueIsManual = !autoValues[name];\n\n  if (thisValueIsManual) {\n    return value;\n  }\n\n  // Get an array of the keys that are manual and should be used to compute\n  // the next value\n  const manualValueKeys = Object.keys(autoValues).filter(key => !autoValues[key]);\n  const manualValues = manualValueKeys.map(key => makeSelectValue(key)(state));\n  const suggester = makeValueSuggester(\n    suggesters[purchaseType],\n    name,\n    manualValueKeys,\n  );\n\n  // Allow all values to be accessed by key as well, for suggestWantedLoan\n  const suggestingValues = manualValueKeys.reduce(\n    (acc, key, index) => ({ ...acc, [key]: manualValues[index] }),\n    {},\n  );\n\n  const suggestedValue = suggester(suggestingValues);\n  return suggestedValue;\n};\n\nexport default makeSuggestValue({\n  [PURCHASE_TYPE.REFINANCING]: refinancingSuggesters,\n  [PURCHASE_TYPE.ACQUISITION]: acquisitionSuggesters,\n});\n"]},"sourceType":"script","hash":"fa0d732ad4363951ac6c6dc8156ccd899dfb6c82"}
