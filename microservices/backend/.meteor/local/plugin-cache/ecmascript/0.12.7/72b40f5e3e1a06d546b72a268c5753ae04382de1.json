{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/loans/test/client/proLoans.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/api/loans/test/client/proLoans.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/loans/test/client/proLoans.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/loans/test/client/proLoans.test.js"],"names":["expect","userLogin","resetDatabase","ROLES","generateScenario","proLoans","fetchLoans","userId","Promise","resolve","reject","clone","fetch","err","data","createUserWithLoan","referredByUserLink","run","scenario","users","loans","createProUser","_factory","_id","describe","timeout","beforeEach","it","t0","t1","role","ADMIN","then","performance","now","length","to","equal","be","within","t2","t3"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport {\n  userLogin,\n  resetDatabase,\n} from '../../../../utils/testHelpers/testHelpers';\nimport { ROLES } from '../../../constants';\nimport { generateScenario } from '../../../methods/index';\nimport proLoans from '../proLoans.app-test';\n\nconst fetchLoans = userId =>\n  new Promise((resolve, reject) => {\n    proLoans\n      .clone({ userId })\n      .fetch((err, data) => (err ? reject(err) : resolve(data)));\n  });\n\nconst createUserWithLoan = referredByUserLink =>\n  generateScenario.run({\n    scenario: { users: { referredByUserLink, loans: {} } },\n  });\n\nconst createProUser = userId =>\n  generateScenario.run({\n    scenario: { users: { _factory: 'pro', _id: userId } },\n  });\n\ndescribe('loanQueries', function () {\n  this.timeout(10000);\n  beforeEach(() => resetDatabase());\n\n  describe('proLoans', () => {\n    it('uses the cache when necessary', () => {\n      let t0;\n      let t1;\n\n      return userLogin({ role: ROLES.ADMIN })\n        .then(() => createProUser('proId'))\n        .then(() => createUserWithLoan('proId'))\n        .then(() => {\n          t0 = performance.now();\n          return fetchLoans('proId');\n        })\n        .then((loans) => {\n          t1 = performance.now();\n          expect(loans.length).to.equal(1);\n          expect(t1 - t0).to.be.within(500, 2000);\n          return fetchLoans('proId');\n        })\n        .then((loans) => {\n          const t2 = performance.now();\n          expect(loans.length).to.equal(1);\n          expect(t2 - t1).to.be.within(0, 100);\n        });\n    });\n\n    it('resets the cache when necessary', () => {\n      let t0;\n      let t1;\n      let t2;\n\n      return userLogin({ role: ROLES.ADMIN })\n        .then(() => createProUser('proId'))\n        .then(() => createUserWithLoan('proId'))\n        .then(() => {\n          t0 = performance.now();\n          return fetchLoans('proId');\n        })\n        .then((loans) => {\n          t1 = performance.now();\n          expect(loans.length).to.equal(1);\n          expect(t1 - t0).to.be.within(500, 2000);\n          return createUserWithLoan('proId');\n        })\n        .then(() => {\n          t2 = performance.now();\n          return fetchLoans('proId');\n        })\n        .then((loans) => {\n          const t3 = performance.now();\n          expect(loans.length).to.equal(2);\n          expect(t3 - t2).to.be.within(500, 2000);\n        });\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/loans/test/client/proLoans.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/loans/test/client/proLoans.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet userLogin, resetDatabase;\nmodule.link(\"../../../../utils/testHelpers/testHelpers\", {\n  userLogin(v) {\n    userLogin = v;\n  },\n\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 1);\nlet ROLES;\nmodule.link(\"../../../constants\", {\n  ROLES(v) {\n    ROLES = v;\n  }\n\n}, 2);\nlet generateScenario;\nmodule.link(\"../../../methods/index\", {\n  generateScenario(v) {\n    generateScenario = v;\n  }\n\n}, 3);\nlet proLoans;\nmodule.link(\"../proLoans.app-test\", {\n  default(v) {\n    proLoans = v;\n  }\n\n}, 4);\n\nconst fetchLoans = userId => new Promise((resolve, reject) => {\n  proLoans.clone({\n    userId\n  }).fetch((err, data) => err ? reject(err) : resolve(data));\n});\n\nconst createUserWithLoan = referredByUserLink => generateScenario.run({\n  scenario: {\n    users: {\n      referredByUserLink,\n      loans: {}\n    }\n  }\n});\n\nconst createProUser = userId => generateScenario.run({\n  scenario: {\n    users: {\n      _factory: 'pro',\n      _id: userId\n    }\n  }\n});\n\ndescribe('loanQueries', function () {\n  this.timeout(10000);\n  beforeEach(() => resetDatabase());\n  describe('proLoans', () => {\n    it('uses the cache when necessary', () => {\n      let t0;\n      let t1;\n      return userLogin({\n        role: ROLES.ADMIN\n      }).then(() => createProUser('proId')).then(() => createUserWithLoan('proId')).then(() => {\n        t0 = performance.now();\n        return fetchLoans('proId');\n      }).then(loans => {\n        t1 = performance.now();\n        expect(loans.length).to.equal(1);\n        expect(t1 - t0).to.be.within(500, 2000);\n        return fetchLoans('proId');\n      }).then(loans => {\n        const t2 = performance.now();\n        expect(loans.length).to.equal(1);\n        expect(t2 - t1).to.be.within(0, 100);\n      });\n    });\n    it('resets the cache when necessary', () => {\n      let t0;\n      let t1;\n      let t2;\n      return userLogin({\n        role: ROLES.ADMIN\n      }).then(() => createProUser('proId')).then(() => createUserWithLoan('proId')).then(() => {\n        t0 = performance.now();\n        return fetchLoans('proId');\n      }).then(loans => {\n        t1 = performance.now();\n        expect(loans.length).to.equal(1);\n        expect(t1 - t0).to.be.within(500, 2000);\n        return createUserWithLoan('proId');\n      }).then(() => {\n        t2 = performance.now();\n        return fetchLoans('proId');\n      }).then(loans => {\n        const t3 = performance.now();\n        expect(loans.length).to.equal(2);\n        expect(t3 - t2).to.be.within(500, 2000);\n      });\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/api/loans/test/client/proLoans.test.js"],"names":["fetchLoans","userId","proLoans","err","reject","resolve","createUserWithLoan","referredByUserLink","scenario","users","loans","createProUser","_factory","_id","describe","beforeEach","resetDatabase","it","role","ROLES","ADMIN","t0","performance","t1","expect","t2","t3"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport {\n  userLogin,\n  resetDatabase,\n} from '../../../../utils/testHelpers/testHelpers';\nimport { ROLES } from '../../../constants';\nimport { generateScenario } from '../../../methods/index';\nimport proLoans from '../proLoans.app-test';\n\nconst fetchLoans = userId =>\n  new Promise((resolve, reject) => {\n    proLoans\n      .clone({ userId })\n      .fetch((err, data) => (err ? reject(err) : resolve(data)));\n  });\n\nconst createUserWithLoan = referredByUserLink =>\n  generateScenario.run({\n    scenario: { users: { referredByUserLink, loans: {} } },\n  });\n\nconst createProUser = userId =>\n  generateScenario.run({\n    scenario: { users: { _factory: 'pro', _id: userId } },\n  });\n\ndescribe('loanQueries', function () {\n  this.timeout(10000);\n  beforeEach(() => resetDatabase());\n\n  describe('proLoans', () => {\n    it('uses the cache when necessary', () => {\n      let t0;\n      let t1;\n\n      return userLogin({ role: ROLES.ADMIN })\n        .then(() => createProUser('proId'))\n        .then(() => createUserWithLoan('proId'))\n        .then(() => {\n          t0 = performance.now();\n          return fetchLoans('proId');\n        })\n        .then((loans) => {\n          t1 = performance.now();\n          expect(loans.length).to.equal(1);\n          expect(t1 - t0).to.be.within(500, 2000);\n          return fetchLoans('proId');\n        })\n        .then((loans) => {\n          const t2 = performance.now();\n          expect(loans.length).to.equal(1);\n          expect(t2 - t1).to.be.within(0, 100);\n        });\n    });\n\n    it('resets the cache when necessary', () => {\n      let t0;\n      let t1;\n      let t2;\n\n      return userLogin({ role: ROLES.ADMIN })\n        .then(() => createProUser('proId'))\n        .then(() => createUserWithLoan('proId'))\n        .then(() => {\n          t0 = performance.now();\n          return fetchLoans('proId');\n        })\n        .then((loans) => {\n          t1 = performance.now();\n          expect(loans.length).to.equal(1);\n          expect(t1 - t0).to.be.within(500, 2000);\n          return createUserWithLoan('proId');\n        })\n        .then(() => {\n          t2 = performance.now();\n          return fetchLoans('proId');\n        })\n        .then((loans) => {\n          const t3 = performance.now();\n          expect(loans.length).to.equal(2);\n          expect(t3 - t2).to.be.within(500, 2000);\n        });\n    });\n  });\n});\n"]},"sourceType":"script","hash":"72b40f5e3e1a06d546b72a268c5753ae04382de1"}
