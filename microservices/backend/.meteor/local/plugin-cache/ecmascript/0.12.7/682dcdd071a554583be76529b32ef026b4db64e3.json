{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/AutoFormLayout.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/AutoForm2/AutoFormLayout.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/AutoFormLayout.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/AutoForm2/AutoFormLayout.jsx"],"names":["React","AutoFormLayoutProps","renderLayout","layout","renderLayoutItem","renderField","AutoField","Array","isArray","map","AutoFormLayout","schemaKeys","automaticFocus","fieldCount","field","length","filter","key","startsWith","slice","matchedField","includes","item","fields","subLayout","Component","props"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,KAAKC,mBAAL,GAA2B,EAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,gBAAV;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA;AAAzC,CAAD,KAA0D;AAC7E,MAAI,CAACH,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAOE,WAAW,CAACF,MAAD,EAASG,SAAT,CAAlB;AACD;;AAED,MAAIC,KAAK,CAACC,OAAN,CAAcL,MAAd,CAAJ,EAA2B;AACzB,WAAOA,MAAM,CAACM,GAAP,CAAWL,gBAAX,CAAP;AACD;;AAED,SAAOA,gBAAgB,CAACD,MAAD,CAAvB;AACD,CAdD;;AAgBA,MAAMO,cAAc,GAAG,CAAC;AACtBJ,EAAAA,SADsB;AAEtBH,EAAAA,MAFsB;AAGtBQ,EAAAA,UAHsB;AAItBC,EAAAA;AAJsB,CAKvB,EAAEX,mBALoB,KAKI;AACzB,MAAIY,UAAU,GAAG,CAAjB;;AACA,QAAMR,WAAW,GAAIS,KAAD,IAAW;AAC7B,QAAIA,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAAL,KAA4B,GAAhC,EAAqC;AACnC,aAAOJ,UAAU,CACdK,MADI,CACGC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeJ,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAf,CADV,EAEJV,GAFI,CAEAW,YAAY,IAAIf,WAAW,CAACe,YAAD,EAAed,SAAf,CAF3B,CAAP;AAGD;;AAED,QAAI,CAACK,UAAU,CAACU,QAAX,CAAoBP,KAApB,CAAL,EAAiC;AAC/B,aAAO,IAAP;AACD;;AAED,WACE,CAAC,SAAD,CACE,KAAK,CAACA,KAAD,CADP,CAEE,IAAI,CAACA,KAAD,CAFN,CAGE,UAAU,CAACF,cAAc,IAAIC,UAAU,OAAO,CAApC,CAHZ,GADF;AAOD,GAlBD;;AAoBA,QAAMT,gBAAgB,GAAIkB,IAAD,IAAU;AACjC,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,aAAOjB,WAAW,CAACiB,IAAD,EAAOhB,SAAP,CAAlB;AACD;;AAED,UAAM;AACJiB,MAAAA,MAAM,GAAG,EADL;AAEJpB,MAAAA,MAAM,EAAEqB,SAFJ;AAGJC,MAAAA,SAAS,GAAG,KAHR;AAIJ,SAAGC;AAJC,QAKFJ,IALJ;AAOA,WACE,CAAC,SAAD,CAAW,IAAII,KAAJ,CAAX;QACE,CAACH,MAAM,CAACd,GAAP,CAAWK,KAAK,IAAIT,WAAW,CAACS,KAAD,EAAQR,SAAR,CAA/B,CAAD;QACA,CAACkB,SAAS,GACNtB,YAAY,CAAC;AACbC,QAAAA,MAAM,EAAEqB,SADK;AAEbpB,QAAAA,gBAFa;AAGbC,QAAAA,WAHa;AAIbC,QAAAA;AAJa,OAAD,CADN,GAON,IAPJ;MAQF,EAAE,SAAF,CAXF;AAaD,GAzBD;;AA2BA,SAAOJ,YAAY,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,gBAAV;AAA4BC,IAAAA,WAA5B;AAAyCC,IAAAA;AAAzC,GAAD,CAAnB;AACD,CAvDD;;AAyDA,eAAeI,cAAf","sourcesContent":["// @flow\nimport React from 'react';\n\ntype AutoFormLayoutProps = {};\n\nconst renderLayout = ({ layout, renderLayoutItem, renderField, AutoField }) => {\n  if (!layout) {\n    return null;\n  }\n\n  if (typeof layout === 'string') {\n    return renderField(layout, AutoField);\n  }\n\n  if (Array.isArray(layout)) {\n    return layout.map(renderLayoutItem);\n  }\n\n  return renderLayoutItem(layout);\n};\n\nconst AutoFormLayout = ({\n  AutoField,\n  layout,\n  schemaKeys,\n  automaticFocus,\n}: AutoFormLayoutProps) => {\n  let fieldCount = 0;\n  const renderField = (field) => {\n    if (field[field.length - 1] === '*') {\n      return schemaKeys\n        .filter(key => key.startsWith(field.slice(0, -1)))\n        .map(matchedField => renderField(matchedField, AutoField));\n    }\n\n    if (!schemaKeys.includes(field)) {\n      return null;\n    }\n\n    return (\n      <AutoField\n        name={field}\n        key={field}\n        autoFocus={automaticFocus && fieldCount++ === 0}\n      />\n    );\n  };\n\n  const renderLayoutItem = (item) => {\n    if (typeof item === 'string') {\n      return renderField(item, AutoField);\n    }\n\n    const {\n      fields = [],\n      layout: subLayout,\n      Component = 'div',\n      ...props\n    } = item;\n\n    return (\n      <Component {...props}>\n        {fields.map(field => renderField(field, AutoField))}\n        {subLayout\n          ? renderLayout({\n            layout: subLayout,\n            renderLayoutItem,\n            renderField,\n            AutoField,\n          })\n          : null}\n      </Component>\n    );\n  };\n\n  return renderLayout({ layout, renderLayoutItem, renderField, AutoField });\n};\n\nexport default AutoFormLayout;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/AutoForm2/AutoFormLayout.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/AutoForm2/AutoFormLayout.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\n\nconst renderLayout = (_ref) => {\n  let {\n    layout,\n    renderLayoutItem,\n    renderField,\n    AutoField\n  } = _ref;\n\n  if (!layout) {\n    return null;\n  }\n\n  if (typeof layout === 'string') {\n    return renderField(layout, AutoField);\n  }\n\n  if (Array.isArray(layout)) {\n    return layout.map(renderLayoutItem);\n  }\n\n  return renderLayoutItem(layout);\n};\n\nconst AutoFormLayout = (_ref2) => {\n  let {\n    AutoField,\n    layout,\n    schemaKeys,\n    automaticFocus\n  } = _ref2;\n  let fieldCount = 0;\n\n  const renderField = field => {\n    if (field[field.length - 1] === '*') {\n      return schemaKeys.filter(key => key.startsWith(field.slice(0, -1))).map(matchedField => renderField(matchedField, AutoField));\n    }\n\n    if (!schemaKeys.includes(field)) {\n      return null;\n    }\n\n    return React.createElement(AutoField, {\n      name: field,\n      key: field,\n      autoFocus: automaticFocus && fieldCount++ === 0\n    });\n  };\n\n  const renderLayoutItem = item => {\n    if (typeof item === 'string') {\n      return renderField(item, AutoField);\n    }\n\n    const {\n      fields = [],\n      layout: subLayout,\n      Component = 'div'\n    } = item,\n          props = (0, _objectWithoutProperties2.default)(item, [\"fields\", \"layout\", \"Component\"]);\n    return React.createElement(Component, props, fields.map(field => renderField(field, AutoField)), subLayout ? renderLayout({\n      layout: subLayout,\n      renderLayoutItem,\n      renderField,\n      AutoField\n    }) : null);\n  };\n\n  return renderLayout({\n    layout,\n    renderLayoutItem,\n    renderField,\n    AutoField\n  });\n};\n\nmodule.exportDefault(AutoFormLayout);","map":{"version":3,"sources":["imports/core/components/AutoForm2/AutoFormLayout.jsx"],"names":["renderLayout","AutoField","renderField","Array","layout","renderLayoutItem","AutoFormLayout","automaticFocus","fieldCount","field","schemaKeys","key","matchedField","item","fields","Component","props","subLayout"],"mappings":";;;;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAKA,MAAMA,YAAY,GAAG,UAA0D;AAAA,MAAzD;AAAA,IAAA,MAAA;AAAA,IAAA,gBAAA;AAAA,IAAA,WAAA;AAAyCC,IAAAA;AAAzC,GAAyD;;AAC7E,MAAI,CAAJ,MAAA,EAAa;AACX,WAAA,IAAA;AACD;;AAED,MAAI,OAAA,MAAA,KAAJ,QAAA,EAAgC;AAC9B,WAAOC,WAAW,CAAA,MAAA,EAAlB,SAAkB,CAAlB;AACD;;AAED,MAAIC,KAAK,CAALA,OAAAA,CAAJ,MAAIA,CAAJ,EAA2B;AACzB,WAAOC,MAAM,CAANA,GAAAA,CAAP,gBAAOA,CAAP;AACD;;AAED,SAAOC,gBAAgB,CAAvB,MAAuB,CAAvB;AAbF,CAAA;;AAgBA,MAAMC,cAAc,GAAG,WAKI;AAAA,MALH;AAAA,IAAA,SAAA;AAAA,IAAA,MAAA;AAAA,IAAA,UAAA;AAItBC,IAAAA;AAJsB,GAKG;AACzB,MAAIC,UAAU,GAAd,CAAA;;AACA,QAAMN,WAAW,GAAIO,KAAD,IAAW;AAC7B,QAAIA,KAAK,CAACA,KAAK,CAALA,MAAAA,GAANA,CAAK,CAALA,KAAJ,GAAA,EAAqC;AACnC,aAAOC,UAAU,CAAVA,MAAAA,CACGC,GAAG,IAAIA,GAAG,CAAHA,UAAAA,CAAeF,KAAK,CAALA,KAAAA,CAAAA,CAAAA,EAAe,CADxCC,CACyBD,CAAfE,CADVD,EAAAA,GAAAA,CAEAE,YAAY,IAAIV,WAAW,CAAA,YAAA,EAFlC,SAEkC,CAF3BQ,CAAP;AAGD;;AAED,QAAI,CAACA,UAAU,CAAVA,QAAAA,CAAL,KAAKA,CAAL,EAAiC;AAC/B,aAAA,IAAA;AACD;;AAED,WACE,oBAAA,SAAA;AACE,MAAA,IAAA,EADF,KAAA;AAEE,MAAA,GAAA,EAFF,KAAA;AAGE,MAAA,SAAA,EAAWH,cAAc,IAAIC,UAAU,OAJ3C;AACE,MADF;AAXF,GAAA;;AAoBA,QAAMH,gBAAgB,GAAIQ,IAAD,IAAU;AACjC,QAAI,OAAA,IAAA,KAAJ,QAAA,EAA8B;AAC5B,aAAOX,WAAW,CAAA,IAAA,EAAlB,SAAkB,CAAlB;AACD;;AAED,UAAM;AACJY,MAAAA,MAAM,GADF,EAAA;AAEJV,MAAAA,MAAM,EAFF,SAAA;AAGJW,MAAAA,SAAS,GAHL;AAAA,QAAN,IAAA;AAAA,UAIKC,KAJL,0CAAA,IAAA;AAOA,WACE,oBAAA,SAAA,EAAA,KAAA,EACGF,MAAM,CAANA,GAAAA,CAAWL,KAAK,IAAIP,WAAW,CAAA,KAAA,EAAhC,SAAgC,CAA/BY,CADH,EAEGG,SAAS,GACNjB,YAAY,CAAC;AACbI,MAAAA,MAAM,EADO,SAAA;AAAA,MAAA,gBAAA;AAAA,MAAA,WAAA;AAIbH,MAAAA;AAJa,KAAD,CADN,GAAV,IAFF,CADF;AAZF,GAAA;;AA2BA,SAAOD,YAAY,CAAC;AAAA,IAAA,MAAA;AAAA,IAAA,gBAAA;AAAA,IAAA,WAAA;AAAyCC,IAAAA;AAAzC,GAAD,CAAnB;AAtDF,CAAA;;AArBA,MAAA,CAAA,aAAA,CA8EA,cA9EA","sourcesContent":["// @flow\nimport React from 'react';\n\ntype AutoFormLayoutProps = {};\n\nconst renderLayout = ({ layout, renderLayoutItem, renderField, AutoField }) => {\n  if (!layout) {\n    return null;\n  }\n\n  if (typeof layout === 'string') {\n    return renderField(layout, AutoField);\n  }\n\n  if (Array.isArray(layout)) {\n    return layout.map(renderLayoutItem);\n  }\n\n  return renderLayoutItem(layout);\n};\n\nconst AutoFormLayout = ({\n  AutoField,\n  layout,\n  schemaKeys,\n  automaticFocus,\n}: AutoFormLayoutProps) => {\n  let fieldCount = 0;\n  const renderField = (field) => {\n    if (field[field.length - 1] === '*') {\n      return schemaKeys\n        .filter(key => key.startsWith(field.slice(0, -1)))\n        .map(matchedField => renderField(matchedField, AutoField));\n    }\n\n    if (!schemaKeys.includes(field)) {\n      return null;\n    }\n\n    return (\n      <AutoField\n        name={field}\n        key={field}\n        autoFocus={automaticFocus && fieldCount++ === 0}\n      />\n    );\n  };\n\n  const renderLayoutItem = (item) => {\n    if (typeof item === 'string') {\n      return renderField(item, AutoField);\n    }\n\n    const {\n      fields = [],\n      layout: subLayout,\n      Component = 'div',\n      ...props\n    } = item;\n\n    return (\n      <Component {...props}>\n        {fields.map(field => renderField(field, AutoField))}\n        {subLayout\n          ? renderLayout({\n            layout: subLayout,\n            renderLayoutItem,\n            renderField,\n            AutoField,\n          })\n          : null}\n      </Component>\n    );\n  };\n\n  return renderLayout({ layout, renderLayoutItem, renderField, AutoField });\n};\n\nexport default AutoFormLayout;\n"]},"sourceType":"script","hash":"682dcdd071a554583be76529b32ef026b4db64e3"}
