{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/services/coverage-data.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/lmieulet:meteor-coverage/server/services/coverage-data.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/services/coverage-data.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/services/coverage-data.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/lmieulet:meteor-coverage/server/services/coverage-data.js"}},"code":"let Conf;\nmodule.link(\"./../context/conf\", {\n  default(v) {\n    Conf = v;\n  }\n\n}, 0);\nlet path;\nmodule.link(\"path\", {\n  default(v) {\n    path = v;\n  }\n\n}, 1);\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 2);\n\nconst Coverage = Npm.require('istanbul-lib-coverage');\n\nconst Report = Npm.require('istanbul-lib-report');\n\nmodule.exportDefault(CoverageData = {\n  getReport: function (coverage) {\n    if (Package['lmieulet:meteor-legacy-coverage'] && Package['lmieulet:meteor-legacy-coverage'].default && Package['lmieulet:meteor-legacy-coverage'].default.CoverageData) {\n      // Retrieve the coverage report from the other lib, as we used the legacy system\n      return Package['lmieulet:meteor-legacy-coverage'].default.CoverageData.getReport(coverage);\n    } else if (Meteor.isPackageTest) {\n      // MANDATORY FOR PACKAGES TESTS\n      throw new Error('lmieulet:meteor-legacy-coverage not found. Just add this server dependency in Package.onTest in your package.js');\n    } // Used for meteor apps that relies on babel\n\n\n    return Coverage.createCoverageMap(coverage);\n  },\n  getFileReport: function (coverage, filePath) {\n    const coverageMap = this.getReport(coverage);\n    const node = Report.summarizers.flat(coverageMap);\n    const childs = node.getRoot().getChildren();\n    let child;\n\n    for (let i = 0; i < childs.length; i++) {\n      /* istanbul ignore else */\n      if (childs[i].getRelativeName() === filePath) {\n        child = childs[i]; // fix the path if possible\n\n        if (child && child.fileCoverage && child.fileCoverage.data && child.fileCoverage.data.path && child.fileCoverage.data.path.indexOf(Conf.COVERAGE_APP_FOLDER)) {\n          // add the folder in the path if not present\n          child.fileCoverage.data.path = path.join(Conf.COVERAGE_APP_FOLDER, child.fileCoverage.data.path);\n        }\n      }\n    }\n\n    return child;\n  },\n  getTreeReport: function (coverage) {\n    return this.getNodeReport(coverage).getRoot();\n  },\n  getLcovonlyReport: function (coverage) {\n    return this.getTreeReport(coverage).getChildren();\n  },\n  getNodeReport: function (coverage) {\n    const coverageMap = this.getReport(coverage);\n    return Report.summarizers.flat(coverageMap);\n  }\n});","map":{"version":3,"sources":["packages/lmieulet:meteor-coverage/server/services/coverage-data.js"],"names":["Conf","module","link","default","v","path","fs","Coverage","Npm","require","Report","exportDefault","CoverageData","getReport","coverage","Package","Meteor","isPackageTest","Error","createCoverageMap","getFileReport","filePath","coverageMap","node","summarizers","flat","childs","getRoot","getChildren","child","i","length","getRelativeName","fileCoverage","data","indexOf","COVERAGE_APP_FOLDER","join","getTreeReport","getNodeReport","getLcovonlyReport"],"mappings":"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","sourcesContent":["import Conf from './../context/conf';\nimport path from 'path';\nimport fs from 'fs';\n\nconst Coverage = Npm.require('istanbul-lib-coverage');\nconst Report = Npm.require('istanbul-lib-report');\n\nexport default CoverageData = {\n  getReport: function (coverage) {\n    if (Package['lmieulet:meteor-legacy-coverage'] && Package['lmieulet:meteor-legacy-coverage'].default && Package['lmieulet:meteor-legacy-coverage'].default.CoverageData) {\n      // Retrieve the coverage report from the other lib, as we used the legacy system\n      return Package['lmieulet:meteor-legacy-coverage'].default.CoverageData.getReport(coverage);\n    } else if (Meteor.isPackageTest) {\n      // MANDATORY FOR PACKAGES TESTS\n      throw new Error('lmieulet:meteor-legacy-coverage not found. Just add this server dependency in Package.onTest in your package.js');\n    }\n    // Used for meteor apps that relies on babel\n    return Coverage.createCoverageMap(coverage);\n  },\n  getFileReport: function (coverage, filePath) {\n    const coverageMap = this.getReport(coverage);\n    const node = Report.summarizers.flat(coverageMap);\n    const childs = node.getRoot().getChildren();\n    let child;\n    for (let i = 0; i < childs.length; i++) {\n      /* istanbul ignore else */\n      if (childs[i].getRelativeName() === filePath) {\n        child = childs[i];\n        // fix the path if possible\n        if (child && child.fileCoverage && \n          child.fileCoverage.data && child.fileCoverage.data.path &&\n          child.fileCoverage.data.path.indexOf(Conf.COVERAGE_APP_FOLDER)) {\n          // add the folder in the path if not present\n          child.fileCoverage.data.path = path.join(Conf.COVERAGE_APP_FOLDER, child.fileCoverage.data.path);\n        }\n      }\n    }\n    return child;\n  },\n  getTreeReport: function (coverage) {\n    return this.getNodeReport(coverage).getRoot();\n  },\n  getLcovonlyReport: function (coverage) {\n    return this.getTreeReport(coverage).getChildren();\n  },\n  getNodeReport: function (coverage) {\n    const coverageMap = this.getReport(coverage);\n    return Report.summarizers.flat(coverageMap);\n  }\n};\n"]},"sourceType":"script","hash":"35d55ffa84527b9c39dfbcf3c2099e5756ede480"}
