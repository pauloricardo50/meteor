{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/files/client/test/documents.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/api/files/client/test/documents.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/files/client/test/documents.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/api/files/client/test/documents.spec.js"],"names":["expect","STEPS","initialDocuments","propertyDocuments","getPropertyDocuments","getBorrowerDocuments","getLoanDocuments","DOCUMENTS","describe","loan","beforeEach","step","SOLVENCY","properties","_id","additionalDocuments","it","to","deep","equal","id","map","OTHER","borrowers","general"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { STEPS } from 'core/api/constants';\nimport { initialDocuments as propertyDocuments } from 'core/api/properties/propertiesAdditionalDocuments';\nimport {\n  getPropertyDocuments,\n  getBorrowerDocuments,\n  getLoanDocuments,\n} from '../../documents';\nimport { DOCUMENTS } from '../../fileConstants';\n\ndescribe('documents', () => {\n  describe('getPropertyDocuments', () => {\n    let loan;\n\n    beforeEach(() => {\n      loan = {\n        step: STEPS.SOLVENCY,\n        properties: [\n          {\n            _id: 'propertyId',\n            additionalDocuments: propertyDocuments,\n          },\n        ],\n      };\n    });\n\n    it('returns an empty array if no propertyId is specified', () => {\n      expect(getPropertyDocuments({ loan })).to.deep.equal([]);\n    });\n\n    it('returns an array of documents for the first step', () => {\n      expect(getPropertyDocuments({ loan, id: 'propertyId' }).map(({ id }) => id)).to.deep.equal([\n        ...propertyDocuments.map(({ id }) => id),\n        DOCUMENTS.OTHER,\n      ]);\n    });\n\n    it('adds additionalDocuments to it', () => {\n      loan.properties[0].additionalDocuments = [\n        { id: 'someId' },\n        { id: 'someId2' },\n      ];\n      expect(getPropertyDocuments({ loan, id: 'propertyId' }).map(({ id }) => id)).to.deep.equal(['someId', 'someId2', DOCUMENTS.OTHER]);\n    });\n  });\n\n  describe('borrowerDocuments', () => {\n    let loan;\n\n    beforeEach(() => {\n      loan = {\n        borrowers: [{ _id: 'borrowerId' }],\n        step: STEPS.SOLVENCY,\n      };\n    });\n\n    it('returns an empty array if no Id is provided', () => {\n      expect(getBorrowerDocuments({ loan })).to.deep.equal([]);\n    });\n  });\n\n  describe('getLoanDocuments', () => {\n    it('returns documents for the loan', () => {\n      expect(getLoanDocuments({\n        loan: { general: {} },\n      }).map(({ id }) => id)).to.deep.equal([DOCUMENTS.OTHER]);\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/files/client/test/documents.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/files/client/test/documents.spec.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 0);\nvar STEPS;\nmodule.link(\"../../../constants\", {\n  STEPS: function (v) {\n    STEPS = v;\n  }\n}, 1);\nvar propertyDocuments;\nmodule.link(\"../../../properties/propertiesAdditionalDocuments\", {\n  initialDocuments: function (v) {\n    propertyDocuments = v;\n  }\n}, 2);\nvar getPropertyDocuments, getBorrowerDocuments, getLoanDocuments;\nmodule.link(\"../../documents\", {\n  getPropertyDocuments: function (v) {\n    getPropertyDocuments = v;\n  },\n  getBorrowerDocuments: function (v) {\n    getBorrowerDocuments = v;\n  },\n  getLoanDocuments: function (v) {\n    getLoanDocuments = v;\n  }\n}, 3);\nvar DOCUMENTS;\nmodule.link(\"../../fileConstants\", {\n  DOCUMENTS: function (v) {\n    DOCUMENTS = v;\n  }\n}, 4);\ndescribe('documents', function () {\n  describe('getPropertyDocuments', function () {\n    var loan;\n    beforeEach(function () {\n      loan = {\n        step: STEPS.SOLVENCY,\n        properties: [{\n          _id: 'propertyId',\n          additionalDocuments: propertyDocuments\n        }]\n      };\n    });\n    it('returns an empty array if no propertyId is specified', function () {\n      expect(getPropertyDocuments({\n        loan: loan\n      })).to.deep.equal([]);\n    });\n    it('returns an array of documents for the first step', function () {\n      expect(getPropertyDocuments({\n        loan: loan,\n        id: 'propertyId'\n      }).map(function (_ref) {\n        var id = _ref.id;\n        return id;\n      })).to.deep.equal([].concat((0, _toConsumableArray2.default)(propertyDocuments.map(function (_ref2) {\n        var id = _ref2.id;\n        return id;\n      })), [DOCUMENTS.OTHER]));\n    });\n    it('adds additionalDocuments to it', function () {\n      loan.properties[0].additionalDocuments = [{\n        id: 'someId'\n      }, {\n        id: 'someId2'\n      }];\n      expect(getPropertyDocuments({\n        loan: loan,\n        id: 'propertyId'\n      }).map(function (_ref3) {\n        var id = _ref3.id;\n        return id;\n      })).to.deep.equal(['someId', 'someId2', DOCUMENTS.OTHER]);\n    });\n  });\n  describe('borrowerDocuments', function () {\n    var loan;\n    beforeEach(function () {\n      loan = {\n        borrowers: [{\n          _id: 'borrowerId'\n        }],\n        step: STEPS.SOLVENCY\n      };\n    });\n    it('returns an empty array if no Id is provided', function () {\n      expect(getBorrowerDocuments({\n        loan: loan\n      })).to.deep.equal([]);\n    });\n  });\n  describe('getLoanDocuments', function () {\n    it('returns documents for the loan', function () {\n      expect(getLoanDocuments({\n        loan: {\n          general: {}\n        }\n      }).map(function (_ref4) {\n        var id = _ref4.id;\n        return id;\n      })).to.deep.equal([DOCUMENTS.OTHER]);\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/api/files/client/test/documents.spec.js"],"names":["describe","beforeEach","loan","step","STEPS","properties","_id","additionalDocuments","propertyDocuments","it","expect","getPropertyDocuments","id","DOCUMENTS","borrowers","SOLVENCY","getBorrowerDocuments","general"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { STEPS } from 'core/api/constants';\nimport { initialDocuments as propertyDocuments } from 'core/api/properties/propertiesAdditionalDocuments';\nimport {\n  getPropertyDocuments,\n  getBorrowerDocuments,\n  getLoanDocuments,\n} from '../../documents';\nimport { DOCUMENTS } from '../../fileConstants';\n\ndescribe('documents', () => {\n  describe('getPropertyDocuments', () => {\n    let loan;\n\n    beforeEach(() => {\n      loan = {\n        step: STEPS.SOLVENCY,\n        properties: [\n          {\n            _id: 'propertyId',\n            additionalDocuments: propertyDocuments,\n          },\n        ],\n      };\n    });\n\n    it('returns an empty array if no propertyId is specified', () => {\n      expect(getPropertyDocuments({ loan })).to.deep.equal([]);\n    });\n\n    it('returns an array of documents for the first step', () => {\n      expect(getPropertyDocuments({ loan, id: 'propertyId' }).map(({ id }) => id)).to.deep.equal([\n        ...propertyDocuments.map(({ id }) => id),\n        DOCUMENTS.OTHER,\n      ]);\n    });\n\n    it('adds additionalDocuments to it', () => {\n      loan.properties[0].additionalDocuments = [\n        { id: 'someId' },\n        { id: 'someId2' },\n      ];\n      expect(getPropertyDocuments({ loan, id: 'propertyId' }).map(({ id }) => id)).to.deep.equal(['someId', 'someId2', DOCUMENTS.OTHER]);\n    });\n  });\n\n  describe('borrowerDocuments', () => {\n    let loan;\n\n    beforeEach(() => {\n      loan = {\n        borrowers: [{ _id: 'borrowerId' }],\n        step: STEPS.SOLVENCY,\n      };\n    });\n\n    it('returns an empty array if no Id is provided', () => {\n      expect(getBorrowerDocuments({ loan })).to.deep.equal([]);\n    });\n  });\n\n  describe('getLoanDocuments', () => {\n    it('returns documents for the loan', () => {\n      expect(getLoanDocuments({\n        loan: { general: {} },\n      }).map(({ id }) => id)).to.deep.equal([DOCUMENTS.OTHER]);\n    });\n  });\n});\n"]},"sourceType":"script","hash":"052a70602093e1a7605991149daee971b7ba2554"}
