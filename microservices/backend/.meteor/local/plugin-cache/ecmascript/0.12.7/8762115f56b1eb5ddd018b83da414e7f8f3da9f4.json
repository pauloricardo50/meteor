{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PdfPropertyDetails.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PdfPropertyDetails.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PdfPropertyDetails.jsx","inputSourceMap":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PdfPropertyDetails.jsx"],"names":["React","Calculator","T","PROPERTY_TYPE","FLAT_TYPE","toMoney","PdfTable","ROW_TYPES","PdfPropertyDetailsProps","getPropertyRows","loan","address1","zipCode","city","propertyType","houseType","flatType","roomCount","insideArea","landArea","volume","volumeNorm","terraceArea","numberOfFloors","floorNumber","constructionYear","renovationYear","parkingInside","parkingOutside","minergie","yearlyExpenses","promotion","selectProperty","residenceType","label","colspan","type","TITLE","data","name","condition","HOUSE","FLAT","tooltip","text","symbol","TERRACE_APARTMENT","SINGLE_FLOOR_APARTMENT","DUPLEX_APARTMENT","PdfPropertyDetails","style","textAlign"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\n\nimport Calculator from '../../../../../../utils/Calculator';\nimport T from '../../../../../../components/Translation';\nimport {\n  PROPERTY_TYPE,\n  FLAT_TYPE,\n} from '../../../../../properties/propertyConstants';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport PdfTable, { ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype PdfPropertyDetailsProps = {};\n\nconst getPropertyRows = (loan) => {\n  const {\n    address1,\n    zipCode,\n    city,\n    propertyType,\n    houseType,\n    flatType,\n    roomCount,\n    insideArea,\n    landArea,\n    volume,\n    volumeNorm,\n    terraceArea,\n    numberOfFloors,\n    floorNumber,\n    constructionYear,\n    renovationYear,\n    parkingInside = 0,\n    parkingOutside = 0,\n    minergie,\n    yearlyExpenses,\n    promotion,\n  } = Calculator.selectProperty({ loan });\n  const { residenceType } = loan;\n\n  return [\n    {\n      label: 'Bien immobilier',\n      colspan: 2,\n      type: ROW_TYPES.TITLE,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.promotionName\" />,\n      data: (\n        <T\n          id=\"PDF.projectInfos.property.promotionNameData\"\n          values={{ name: promotion && promotion.name }}\n        />\n      ),\n      condition: !!promotion,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.address\" />,\n      data: (\n        <span>\n          {address1},<br />\n          {zipCode} {city}\n        </span>\n      ),\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.residenceType\" />,\n      data: <T id={`PDF.residenceType.${residenceType}`} />,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.propertyType\" />,\n      data: <T id={`PDF.projectInfos.property.propertyType.${propertyType}`} />,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.houseType\" />,\n      data: <T id={`PDF.projectInfos.property.houseType.${houseType}`} />,\n      condition: !!houseType && propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.flatType\" />,\n      data: <T id={`PDF.projectInfos.property.flatType.${flatType}`} />,\n      condition: !!flatType && propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.roomCount\" />,\n      data: roomCount,\n      tooltip: {\n        text: <T id=\"PDF.projectInfos.property.roomCount.tooltip\" />,\n        symbol: '*',\n      },\n      condition: !!roomCount,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.insideArea\" />,\n      data: `${insideArea} m2`,\n      condition: !!insideArea && propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.landArea\" />,\n      data: `${landArea} m2`,\n      condition: !!landArea && propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.volume\" />,\n      data: (\n        <span>\n          {volume} m3 (\n          <T id={`PDF.projectInfos.property.volumeNorm.${volumeNorm}`} />)\n        </span>\n      ),\n      condition:\n        !!volume && !!volumeNorm && propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.terraceArea\" />,\n      data: `${terraceArea} m2`,\n      condition:\n        !!terraceArea\n        && propertyType === PROPERTY_TYPE.FLAT\n        && flatType === FLAT_TYPE.TERRACE_APARTMENT,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.numberOfFloors\" />,\n      data: numberOfFloors,\n      condition: !!numberOfFloors && propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.floorNumber\" />,\n      data: floorNumber,\n      condition:\n        propertyType === PROPERTY_TYPE.FLAT\n        && (flatType === FLAT_TYPE.SINGLE_FLOOR_APARTMENT\n          || flatType === FLAT_TYPE.DUPLEX_APARTMENT),\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.constructionYear\" />,\n      data: constructionYear,\n      condition: !!constructionYear,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.renovationYear\" />,\n      data: renovationYear,\n      condition: !!renovationYear,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.parking\" />,\n      data: `${parkingInside} int., ${parkingOutside} ext.`,\n      condition: !!parkingInside || !!parkingOutside,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.minergie\" />,\n      data: <T id={`PDF.projectInfos.property.minergie.${minergie}`} />,\n      condition: !!minergie,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.maintenance\" />,\n      data: toMoney(yearlyExpenses),\n      condition: !!yearlyExpenses,\n    },\n  ];\n};\n\nconst PdfPropertyDetails = ({ loan, style }: PdfPropertyDetailsProps) => (\n  <PdfTable\n    style={style}\n    rows={getPropertyRows(loan)}\n    columnOptions={[{}, { style: { textAlign: 'right' } }]}\n  />\n);\n\nexport default PdfPropertyDetails;\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PdfPropertyDetails.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PdfPropertyDetails.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Calculator;\nmodule.link(\"../../../../../../utils/Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 1);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 2);\nlet PROPERTY_TYPE, FLAT_TYPE;\nmodule.link(\"../../../../../properties/propertyConstants\", {\n  PROPERTY_TYPE(v) {\n    PROPERTY_TYPE = v;\n  },\n\n  FLAT_TYPE(v) {\n    FLAT_TYPE = v;\n  }\n\n}, 3);\nlet toMoney;\nmodule.link(\"../../../../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 4);\nlet PdfTable, ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  default(v) {\n    PdfTable = v;\n  },\n\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 5);\n\nconst getPropertyRows = loan => {\n  const {\n    address1,\n    zipCode,\n    city,\n    propertyType,\n    houseType,\n    flatType,\n    roomCount,\n    insideArea,\n    landArea,\n    volume,\n    volumeNorm,\n    terraceArea,\n    numberOfFloors,\n    floorNumber,\n    constructionYear,\n    renovationYear,\n    parkingInside = 0,\n    parkingOutside = 0,\n    minergie,\n    yearlyExpenses,\n    promotion\n  } = Calculator.selectProperty({\n    loan\n  });\n  const {\n    residenceType\n  } = loan;\n  return [{\n    label: 'Bien immobilier',\n    colspan: 2,\n    type: ROW_TYPES.TITLE\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.promotionName\"\n    }),\n    data: React.createElement(T, {\n      id: \"PDF.projectInfos.property.promotionNameData\",\n      values: {\n        name: promotion && promotion.name\n      }\n    }),\n    condition: !!promotion\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.address\"\n    }),\n    data: React.createElement(\"span\", null, address1, \",\", React.createElement(\"br\", null), zipCode, \" \", city)\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.residenceType\"\n    }),\n    data: React.createElement(T, {\n      id: `PDF.residenceType.${residenceType}`\n    })\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.propertyType\"\n    }),\n    data: React.createElement(T, {\n      id: `PDF.projectInfos.property.propertyType.${propertyType}`\n    })\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.houseType\"\n    }),\n    data: React.createElement(T, {\n      id: `PDF.projectInfos.property.houseType.${houseType}`\n    }),\n    condition: !!houseType && propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.flatType\"\n    }),\n    data: React.createElement(T, {\n      id: `PDF.projectInfos.property.flatType.${flatType}`\n    }),\n    condition: !!flatType && propertyType === PROPERTY_TYPE.FLAT\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.roomCount\"\n    }),\n    data: roomCount,\n    tooltip: {\n      text: React.createElement(T, {\n        id: \"PDF.projectInfos.property.roomCount.tooltip\"\n      }),\n      symbol: '*'\n    },\n    condition: !!roomCount\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.insideArea\"\n    }),\n    data: `${insideArea} m2`,\n    condition: !!insideArea && propertyType === PROPERTY_TYPE.FLAT\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.landArea\"\n    }),\n    data: `${landArea} m2`,\n    condition: !!landArea && propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.volume\"\n    }),\n    data: React.createElement(\"span\", null, volume, \" m3 (\", React.createElement(T, {\n      id: `PDF.projectInfos.property.volumeNorm.${volumeNorm}`\n    }), \")\"),\n    condition: !!volume && !!volumeNorm && propertyType === PROPERTY_TYPE.HOUSE\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.terraceArea\"\n    }),\n    data: `${terraceArea} m2`,\n    condition: !!terraceArea && propertyType === PROPERTY_TYPE.FLAT && flatType === FLAT_TYPE.TERRACE_APARTMENT\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.numberOfFloors\"\n    }),\n    data: numberOfFloors,\n    condition: !!numberOfFloors && propertyType === PROPERTY_TYPE.FLAT\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.floorNumber\"\n    }),\n    data: floorNumber,\n    condition: propertyType === PROPERTY_TYPE.FLAT && (flatType === FLAT_TYPE.SINGLE_FLOOR_APARTMENT || flatType === FLAT_TYPE.DUPLEX_APARTMENT)\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.constructionYear\"\n    }),\n    data: constructionYear,\n    condition: !!constructionYear\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.renovationYear\"\n    }),\n    data: renovationYear,\n    condition: !!renovationYear\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.parking\"\n    }),\n    data: `${parkingInside} int., ${parkingOutside} ext.`,\n    condition: !!parkingInside || !!parkingOutside\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.minergie\"\n    }),\n    data: React.createElement(T, {\n      id: `PDF.projectInfos.property.minergie.${minergie}`\n    }),\n    condition: !!minergie\n  }, {\n    label: React.createElement(T, {\n      id: \"PDF.projectInfos.property.maintenance\"\n    }),\n    data: toMoney(yearlyExpenses),\n    condition: !!yearlyExpenses\n  }];\n};\n\nconst PdfPropertyDetails = ({\n  loan,\n  style\n}) => React.createElement(PdfTable, {\n  style: style,\n  rows: getPropertyRows(loan),\n  columnOptions: [{}, {\n    style: {\n      textAlign: 'right'\n    }\n  }]\n});\n\nmodule.exportDefault(PdfPropertyDetails);","map":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/PdfPropertyDetails.jsx"],"names":["getPropertyRows","loan","parkingInside","parkingOutside","promotion","residenceType","label","colspan","type","ROW_TYPES","TITLE","data","name","condition","propertyType","houseType","PROPERTY_TYPE","HOUSE","flatType","FLAT","tooltip","text","symbol","roomCount","insideArea","landArea","volumeNorm","terraceArea","FLAT_TYPE","TERRACE_APARTMENT","constructionYear","renovationYear","minergie","toMoney","yearlyExpenses","PdfPropertyDetails","style","textAlign"],"mappings":"AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,CAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0CAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,CAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA,EAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,6CAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,6CAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA,EAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAcA,MAAMA,eAAe,GAAIC,IAAD,IAAU;AAChC,QAAM;AAAA,IAAA,QAAA;AAAA,IAAA,OAAA;AAAA,IAAA,IAAA;AAAA,IAAA,YAAA;AAAA,IAAA,SAAA;AAAA,IAAA,QAAA;AAAA,IAAA,SAAA;AAAA,IAAA,UAAA;AAAA,IAAA,QAAA;AAAA,IAAA,MAAA;AAAA,IAAA,UAAA;AAAA,IAAA,WAAA;AAAA,IAAA,cAAA;AAAA,IAAA,WAAA;AAAA,IAAA,gBAAA;AAAA,IAAA,cAAA;AAiBJC,IAAAA,aAAa,GAjBT,CAAA;AAkBJC,IAAAA,cAAc,GAlBV,CAAA;AAAA,IAAA,QAAA;AAAA,IAAA,cAAA;AAqBJC,IAAAA;AArBI,MAsBF,UAAU,CAAV,cAAA,CAA0B;AAAEH,IAAAA;AAAF,GAA1B,CAtBJ;AAuBA,QAAM;AAAEI,IAAAA;AAAF,MAAN,IAAA;AAEA,SAAO,CACL;AACEC,IAAAA,KAAK,EADP,iBAAA;AAEEC,IAAAA,OAAO,EAFT,CAAA;AAGEC,IAAAA,IAAI,EAAEC,SAAS,CAACC;AAHlB,GADK,EAML;AACEJ,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EACF,oBAAA,CAAA;AACE,MAAA,EAAA,EADF,6CAAA;AAEE,MAAA,MAAA,EAAQ;AAAEC,QAAAA,IAAI,EAAER,SAAS,IAAIA,SAAS,CAACQ;AAA/B;AAFV,MAHJ;AAQEC,IAAAA,SAAS,EAAE,CAAC,CAACT;AARf,GANK,EAgBL;AACEE,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EACF,kCACE,QADF,OACa,+BADb,EAEE,OAFF,OAEY,IAFZ;AAHJ,GAhBK,EAyBL;AACEL,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EAAK,qBAAoBN,aAA5B;AAAA;AAFR,GAzBK,EA6BL;AACEC,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EAAK,0CAAyCG,YAAjD;AAAA;AAFR,GA7BK,EAiCL;AACER,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EAAK,uCAAsCI,SAFtD;AAEQ,MAFR;AAGEF,IAAAA,SAAS,EAAE,CAAC,CAAD,SAAA,IAAeC,YAAY,KAAKE,aAAa,CAACC;AAH3D,GAjCK,EAsCL;AACEX,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EAAK,sCAAqCO,QAFrD;AAEQ,MAFR;AAGEL,IAAAA,SAAS,EAAE,CAAC,CAAD,QAAA,IAAcC,YAAY,KAAKE,aAAa,CAACG;AAH1D,GAtCK,EA2CL;AACEb,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAFN,SAAA;AAGES,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,oBAAA,CAAA;AAAG,QAAA,EAAA,EADF;AACD,QADC;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAHX;AAOET,IAAAA,SAAS,EAAE,CAAC,CAACU;AAPf,GA3CK,EAoDL;AACEjB,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAAG,GAAEa,UAFX,KAAA;AAGEX,IAAAA,SAAS,EAAE,CAAC,CAAD,UAAA,IAAgBC,YAAY,KAAKE,aAAa,CAACG;AAH5D,GApDK,EAyDL;AACEb,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAAG,GAAEc,QAFX,KAAA;AAGEZ,IAAAA,SAAS,EAAE,CAAC,CAAD,QAAA,IAAcC,YAAY,KAAKE,aAAa,CAACC;AAH1D,GAzDK,EA8DL;AACEX,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EACF,kCACE,MADF,WAEE,oBAAA,CAAA;AAAG,MAAA,EAAA,EAAK,wCAAuCe,UAA/C;AAAA,MAFF,MAHJ;AAQEb,IAAAA,SAAS,EACP,CAAC,CAAD,MAAA,IAAY,CAAC,CAAb,UAAA,IAA4BC,YAAY,KAAKE,aAAa,CAACC;AAT/D,GA9DK,EAyEL;AACEX,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAAG,GAAEgB,WAFX,KAAA;AAGEd,IAAAA,SAAS,EACP,CAAC,CAAD,WAAA,IACGC,YAAY,KAAKE,aAAa,CADjC,IAAA,IAEGE,QAAQ,KAAKU,SAAS,CAACC;AAN9B,GAzEK,EAiFL;AACEvB,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAFN,cAAA;AAGEE,IAAAA,SAAS,EAAE,CAAC,CAAD,cAAA,IAAoBC,YAAY,KAAKE,aAAa,CAACG;AAHhE,GAjFK,EAsFL;AACEb,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAFN,WAAA;AAGEE,IAAAA,SAAS,EACPC,YAAY,KAAKE,aAAa,CAA9BF,IAAAA,KACII,QAAQ,KAAKU,SAAS,CAAtBV,sBAAAA,IACCA,QAAQ,KAAKU,SAAS,CAF3Bd,gBAAAA;AAJJ,GAtFK,EA8FL;AACER,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAFN,gBAAA;AAGEE,IAAAA,SAAS,EAAE,CAAC,CAACiB;AAHf,GA9FK,EAmGL;AACExB,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAFN,cAAA;AAGEE,IAAAA,SAAS,EAAE,CAAC,CAACkB;AAHf,GAnGK,EAwGL;AACEzB,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAAG,GAAET,aAAc,UAASC,cAFlC,OAAA;AAGEU,IAAAA,SAAS,EAAE,CAAC,CAAD,aAAA,IAAmB,CAAC,CAACV;AAHlC,GAxGK,EA6GL;AACEG,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EAAK,sCAAqCqB,QAFrD;AAEQ,MAFR;AAGEnB,IAAAA,SAAS,EAAE,CAAC,CAACmB;AAHf,GA7GK,EAkHL;AACE1B,IAAAA,KAAK,EAAE,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEEK,IAAAA,IAAI,EAAEsB,OAAO,CAFf,cAEe,CAFf;AAGEpB,IAAAA,SAAS,EAAE,CAAC,CAACqB;AAHf,GAlHK,CAAP;AA1BF,CAAA;;AAoJA,MAAMC,kBAAkB,GAAG,CAAC;AAAA,EAAA,IAAA;AAAQC,EAAAA;AAAR,CAAD,KACzB,oBAAA,QAAA;AACE,EAAA,KAAA,EADF,KAAA;AAEE,EAAA,IAAA,EAAMpC,eAAe,CAFvB,IAEuB,CAFvB;AAGE,EAAA,aAAA,EAAe,CAAA,EAAA,EAAK;AAAEoC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb;AAAT,GAAL;AAHjB,EADF;;AAlKA,MAAA,CAAA,aAAA,CA0KA,kBA1KA","sourcesContent":["// @flow\nimport React from 'react';\n\nimport Calculator from '../../../../../../utils/Calculator';\nimport T from '../../../../../../components/Translation';\nimport {\n  PROPERTY_TYPE,\n  FLAT_TYPE,\n} from '../../../../../properties/propertyConstants';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport PdfTable, { ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype PdfPropertyDetailsProps = {};\n\nconst getPropertyRows = (loan) => {\n  const {\n    address1,\n    zipCode,\n    city,\n    propertyType,\n    houseType,\n    flatType,\n    roomCount,\n    insideArea,\n    landArea,\n    volume,\n    volumeNorm,\n    terraceArea,\n    numberOfFloors,\n    floorNumber,\n    constructionYear,\n    renovationYear,\n    parkingInside = 0,\n    parkingOutside = 0,\n    minergie,\n    yearlyExpenses,\n    promotion,\n  } = Calculator.selectProperty({ loan });\n  const { residenceType } = loan;\n\n  return [\n    {\n      label: 'Bien immobilier',\n      colspan: 2,\n      type: ROW_TYPES.TITLE,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.promotionName\" />,\n      data: (\n        <T\n          id=\"PDF.projectInfos.property.promotionNameData\"\n          values={{ name: promotion && promotion.name }}\n        />\n      ),\n      condition: !!promotion,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.address\" />,\n      data: (\n        <span>\n          {address1},<br />\n          {zipCode} {city}\n        </span>\n      ),\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.residenceType\" />,\n      data: <T id={`PDF.residenceType.${residenceType}`} />,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.propertyType\" />,\n      data: <T id={`PDF.projectInfos.property.propertyType.${propertyType}`} />,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.houseType\" />,\n      data: <T id={`PDF.projectInfos.property.houseType.${houseType}`} />,\n      condition: !!houseType && propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.flatType\" />,\n      data: <T id={`PDF.projectInfos.property.flatType.${flatType}`} />,\n      condition: !!flatType && propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.roomCount\" />,\n      data: roomCount,\n      tooltip: {\n        text: <T id=\"PDF.projectInfos.property.roomCount.tooltip\" />,\n        symbol: '*',\n      },\n      condition: !!roomCount,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.insideArea\" />,\n      data: `${insideArea} m2`,\n      condition: !!insideArea && propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.landArea\" />,\n      data: `${landArea} m2`,\n      condition: !!landArea && propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.volume\" />,\n      data: (\n        <span>\n          {volume} m3 (\n          <T id={`PDF.projectInfos.property.volumeNorm.${volumeNorm}`} />)\n        </span>\n      ),\n      condition:\n        !!volume && !!volumeNorm && propertyType === PROPERTY_TYPE.HOUSE,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.terraceArea\" />,\n      data: `${terraceArea} m2`,\n      condition:\n        !!terraceArea\n        && propertyType === PROPERTY_TYPE.FLAT\n        && flatType === FLAT_TYPE.TERRACE_APARTMENT,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.numberOfFloors\" />,\n      data: numberOfFloors,\n      condition: !!numberOfFloors && propertyType === PROPERTY_TYPE.FLAT,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.floorNumber\" />,\n      data: floorNumber,\n      condition:\n        propertyType === PROPERTY_TYPE.FLAT\n        && (flatType === FLAT_TYPE.SINGLE_FLOOR_APARTMENT\n          || flatType === FLAT_TYPE.DUPLEX_APARTMENT),\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.constructionYear\" />,\n      data: constructionYear,\n      condition: !!constructionYear,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.renovationYear\" />,\n      data: renovationYear,\n      condition: !!renovationYear,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.parking\" />,\n      data: `${parkingInside} int., ${parkingOutside} ext.`,\n      condition: !!parkingInside || !!parkingOutside,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.minergie\" />,\n      data: <T id={`PDF.projectInfos.property.minergie.${minergie}`} />,\n      condition: !!minergie,\n    },\n    {\n      label: <T id=\"PDF.projectInfos.property.maintenance\" />,\n      data: toMoney(yearlyExpenses),\n      condition: !!yearlyExpenses,\n    },\n  ];\n};\n\nconst PdfPropertyDetails = ({ loan, style }: PdfPropertyDetailsProps) => (\n  <PdfTable\n    style={style}\n    rows={getPropertyRows(loan)}\n    columnOptions={[{}, { style: { textAlign: 'right' } }]}\n  />\n);\n\nexport default PdfPropertyDetails;\n"]},"sourceType":"script","hash":"8762115f56b1eb5ddd018b83da414e7f8f3da9f4"}
