{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/helpers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/helpers/helpers.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/helpers.js","inputSourceMap":{"version":3,"sources":["imports/core/api/helpers/helpers.js"],"names":["Meteor","Loans","Borrowers","Offers","Properties","Tasks","Users","LOANS_COLLECTION","BORROWERS_COLLECTION","PROPERTIES_COLLECTION","getDocFromCollection","collectionName","docId","collection","findOne","getIdFieldNameFromCollection","getCollectionNameFromIdField","idFieldName","loanId","borrowerId","propertyId","createMeteorAsyncFunction","promiseFunc","wrapAsync","params","callback","then","result","catch","flattenObject","object","delimiter","delim","flattened","Object","keys","forEach","key","val","Array","strip","k","v","getUserOrganisationName","user","organisations","organisationName","length","name","getUserNameAndOrganisation","isReferredByOrganisation","referredByOrganisation","some","_id","isReferredByOrganisationUser","organisationUsers","referredByUser","getReferredBy","proUser","isAdmin","raw","label","users","sortObject","sortedObject","sort"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Loans, Borrowers, Offers, Properties, Tasks, Users } from '..';\nimport {\n  LOANS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n} from '../constants';\n\nexport const getDocFromCollection = (collectionName, docId) => {\n  let collection;\n  switch (collectionName) {\n  case 'loans':\n    collection = Loans;\n    break;\n  case 'borrowers':\n    collection = Borrowers;\n    break;\n  case 'properties':\n    collection = Properties;\n    break;\n  case 'offers':\n    collection = Offers;\n    break;\n  case 'tasks':\n    collection = Tasks;\n    break;\n  case 'users':\n    collection = Users;\n    break;\n  default:\n    break;\n  }\n\n  return collection.findOne(docId);\n};\n\nexport const getIdFieldNameFromCollection = collectionName =>\n  ({\n    [LOANS_COLLECTION]: 'loanId',\n    [BORROWERS_COLLECTION]: 'borrowerId',\n    [PROPERTIES_COLLECTION]: 'propertyId',\n  }[collectionName]);\n\nexport const getCollectionNameFromIdField = idFieldName =>\n  ({\n    loanId: LOANS_COLLECTION,\n    borrowerId: BORROWERS_COLLECTION,\n    propertyId: PROPERTIES_COLLECTION,\n  }[idFieldName]);\n\nexport const createMeteorAsyncFunction = promiseFunc =>\n  Meteor.wrapAsync((params, callback) =>\n    promiseFunc(params)\n      .then(result => callback(null, result))\n      .catch(callback));\n\nexport const flattenObject = (object, delimiter) => {\n  const delim = delimiter || '.';\n  let flattened = {};\n\n  Object.keys(object).forEach((key) => {\n    const val = object[key];\n    if (val instanceof Object && !(val instanceof Array)) {\n      const strip = flattenObject(val);\n      Object.keys(strip).forEach((k) => {\n        const v = strip[k];\n        flattened = { ...flattened, [`${key}${delim}${k}`]: v };\n      });\n    } else {\n      flattened = { ...flattened, [key]: val };\n    }\n  });\n\n  return flattened;\n};\n\nexport const getUserOrganisationName = ({ user }) => {\n  const { organisations = [] } = user;\n  const organisationName = !!organisations.length && organisations[0].name;\n  return organisationName;\n};\n\nexport const getUserNameAndOrganisation = ({ user }) => {\n  const { name, organisations = [] } = user;\n  const organisationName = !!organisations.length && organisations[0].name;\n  return organisationName ? `${name} (${organisationName})` : name;\n};\n\nconst isReferredByOrganisation = ({ organisations, referredByOrganisation }) =>\n  organisations.some(({ _id }) => referredByOrganisation._id === _id);\nconst isReferredByOrganisationUser = ({ organisationUsers, referredByUser }) =>\n  organisationUsers.some(({ _id }) => referredByUser._id === _id);\n\nexport const getReferredBy = ({ user, proUser = {}, isAdmin }) => {\n  if (!user) {\n    return { raw: null, label: '' };\n  }\n\n  const { organisations = [] } = proUser;\n  const organisationUsers = organisations.length ? organisations[0].users : [];\n  const { referredByUser = {}, referredByOrganisation = {} } = user;\n\n  let label = 'Déjà référé';\n\n  if (\n    isAdmin\n    || isReferredByOrganisation({ organisations, referredByOrganisation })\n    || isReferredByOrganisationUser({ organisationUsers, referredByUser })\n  ) {\n    label = getUserNameAndOrganisation({ user: referredByUser });\n  }\n\n  return { raw: referredByUser.name, label };\n};\n\nexport const sortObject = (object) => {\n  if (!object || typeof object !== 'object' || object instanceof Array) {\n    return object;\n  }\n\n  const sortedObject = {};\n  const keys = Object.keys(object);\n\n  keys.sort();\n\n  keys.forEach((key) => {\n    sortedObject[key] = sortObject(object[key]);\n  });\n\n  return sortedObject;\n};\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/helpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/helpers/helpers.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  getDocFromCollection: () => getDocFromCollection,\n  getIdFieldNameFromCollection: () => getIdFieldNameFromCollection,\n  getCollectionNameFromIdField: () => getCollectionNameFromIdField,\n  createMeteorAsyncFunction: () => createMeteorAsyncFunction,\n  flattenObject: () => flattenObject,\n  getUserOrganisationName: () => getUserOrganisationName,\n  getUserNameAndOrganisation: () => getUserNameAndOrganisation,\n  getReferredBy: () => getReferredBy,\n  sortObject: () => sortObject\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Loans, Borrowers, Offers, Properties, Tasks, Users;\nmodule.link(\"..\", {\n  Loans(v) {\n    Loans = v;\n  },\n\n  Borrowers(v) {\n    Borrowers = v;\n  },\n\n  Offers(v) {\n    Offers = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Tasks(v) {\n    Tasks = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\nlet LOANS_COLLECTION, BORROWERS_COLLECTION, PROPERTIES_COLLECTION;\nmodule.link(\"../constants\", {\n  LOANS_COLLECTION(v) {\n    LOANS_COLLECTION = v;\n  },\n\n  BORROWERS_COLLECTION(v) {\n    BORROWERS_COLLECTION = v;\n  },\n\n  PROPERTIES_COLLECTION(v) {\n    PROPERTIES_COLLECTION = v;\n  }\n\n}, 2);\n\nconst getDocFromCollection = (collectionName, docId) => {\n  let collection;\n\n  switch (collectionName) {\n    case 'loans':\n      collection = Loans;\n      break;\n\n    case 'borrowers':\n      collection = Borrowers;\n      break;\n\n    case 'properties':\n      collection = Properties;\n      break;\n\n    case 'offers':\n      collection = Offers;\n      break;\n\n    case 'tasks':\n      collection = Tasks;\n      break;\n\n    case 'users':\n      collection = Users;\n      break;\n\n    default:\n      break;\n  }\n\n  return collection.findOne(docId);\n};\n\nconst getIdFieldNameFromCollection = collectionName => ({\n  [LOANS_COLLECTION]: 'loanId',\n  [BORROWERS_COLLECTION]: 'borrowerId',\n  [PROPERTIES_COLLECTION]: 'propertyId'\n})[collectionName];\n\nconst getCollectionNameFromIdField = idFieldName => ({\n  loanId: LOANS_COLLECTION,\n  borrowerId: BORROWERS_COLLECTION,\n  propertyId: PROPERTIES_COLLECTION\n})[idFieldName];\n\nconst createMeteorAsyncFunction = promiseFunc => Meteor.wrapAsync((params, callback) => promiseFunc(params).then(result => callback(null, result)).catch(callback));\n\nconst flattenObject = (object, delimiter) => {\n  const delim = delimiter || '.';\n  let flattened = {};\n  Object.keys(object).forEach(key => {\n    const val = object[key];\n\n    if (val instanceof Object && !(val instanceof Array)) {\n      const strip = flattenObject(val);\n      Object.keys(strip).forEach(k => {\n        const v = strip[k];\n        flattened = (0, _objectSpread2.default)({}, flattened, {\n          [`${key}${delim}${k}`]: v\n        });\n      });\n    } else {\n      flattened = (0, _objectSpread2.default)({}, flattened, {\n        [key]: val\n      });\n    }\n  });\n  return flattened;\n};\n\nconst getUserOrganisationName = ({\n  user\n}) => {\n  const {\n    organisations = []\n  } = user;\n  const organisationName = !!organisations.length && organisations[0].name;\n  return organisationName;\n};\n\nconst getUserNameAndOrganisation = ({\n  user\n}) => {\n  const {\n    name,\n    organisations = []\n  } = user;\n  const organisationName = !!organisations.length && organisations[0].name;\n  return organisationName ? `${name} (${organisationName})` : name;\n};\n\nconst isReferredByOrganisation = ({\n  organisations,\n  referredByOrganisation\n}) => organisations.some(({\n  _id\n}) => referredByOrganisation._id === _id);\n\nconst isReferredByOrganisationUser = ({\n  organisationUsers,\n  referredByUser\n}) => organisationUsers.some(({\n  _id\n}) => referredByUser._id === _id);\n\nconst getReferredBy = ({\n  user,\n  proUser = {},\n  isAdmin\n}) => {\n  if (!user) {\n    return {\n      raw: null,\n      label: ''\n    };\n  }\n\n  const {\n    organisations = []\n  } = proUser;\n  const organisationUsers = organisations.length ? organisations[0].users : [];\n  const {\n    referredByUser = {},\n    referredByOrganisation = {}\n  } = user;\n  let label = 'Déjà référé';\n\n  if (isAdmin || isReferredByOrganisation({\n    organisations,\n    referredByOrganisation\n  }) || isReferredByOrganisationUser({\n    organisationUsers,\n    referredByUser\n  })) {\n    label = getUserNameAndOrganisation({\n      user: referredByUser\n    });\n  }\n\n  return {\n    raw: referredByUser.name,\n    label\n  };\n};\n\nconst sortObject = object => {\n  if (!object || typeof object !== 'object' || object instanceof Array) {\n    return object;\n  }\n\n  const sortedObject = {};\n  const keys = Object.keys(object);\n  keys.sort();\n  keys.forEach(key => {\n    sortedObject[key] = sortObject(object[key]);\n  });\n  return sortedObject;\n};","map":{"version":3,"sources":["imports/core/api/helpers/helpers.js"],"names":["Meteor","getDocFromCollection","collection","getIdFieldNameFromCollection","collectionName","getCollectionNameFromIdField","idFieldName","loanId","borrowerId","propertyId","PROPERTIES_COLLECTION","createMeteorAsyncFunction","promiseFunc","result","callback","flattenObject","delim","delimiter","flattened","Object","key","val","object","strip","k","v","getUserOrganisationName","user","organisations","organisationName","getUserNameAndOrganisation","name","isReferredByOrganisation","referredByOrganisation","_id","isReferredByOrganisationUser","referredByUser","organisationUsers","getReferredBy","proUser","isAdmin","raw","label","sortObject","sortedObject","keys"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { Loans, Borrowers, Offers, Properties, Tasks, Users } from '..';\nimport {\n  LOANS_COLLECTION,\n  BORROWERS_COLLECTION,\n  PROPERTIES_COLLECTION,\n} from '../constants';\n\nexport const getDocFromCollection = (collectionName, docId) => {\n  let collection;\n  switch (collectionName) {\n  case 'loans':\n    collection = Loans;\n    break;\n  case 'borrowers':\n    collection = Borrowers;\n    break;\n  case 'properties':\n    collection = Properties;\n    break;\n  case 'offers':\n    collection = Offers;\n    break;\n  case 'tasks':\n    collection = Tasks;\n    break;\n  case 'users':\n    collection = Users;\n    break;\n  default:\n    break;\n  }\n\n  return collection.findOne(docId);\n};\n\nexport const getIdFieldNameFromCollection = collectionName =>\n  ({\n    [LOANS_COLLECTION]: 'loanId',\n    [BORROWERS_COLLECTION]: 'borrowerId',\n    [PROPERTIES_COLLECTION]: 'propertyId',\n  }[collectionName]);\n\nexport const getCollectionNameFromIdField = idFieldName =>\n  ({\n    loanId: LOANS_COLLECTION,\n    borrowerId: BORROWERS_COLLECTION,\n    propertyId: PROPERTIES_COLLECTION,\n  }[idFieldName]);\n\nexport const createMeteorAsyncFunction = promiseFunc =>\n  Meteor.wrapAsync((params, callback) =>\n    promiseFunc(params)\n      .then(result => callback(null, result))\n      .catch(callback));\n\nexport const flattenObject = (object, delimiter) => {\n  const delim = delimiter || '.';\n  let flattened = {};\n\n  Object.keys(object).forEach((key) => {\n    const val = object[key];\n    if (val instanceof Object && !(val instanceof Array)) {\n      const strip = flattenObject(val);\n      Object.keys(strip).forEach((k) => {\n        const v = strip[k];\n        flattened = { ...flattened, [`${key}${delim}${k}`]: v };\n      });\n    } else {\n      flattened = { ...flattened, [key]: val };\n    }\n  });\n\n  return flattened;\n};\n\nexport const getUserOrganisationName = ({ user }) => {\n  const { organisations = [] } = user;\n  const organisationName = !!organisations.length && organisations[0].name;\n  return organisationName;\n};\n\nexport const getUserNameAndOrganisation = ({ user }) => {\n  const { name, organisations = [] } = user;\n  const organisationName = !!organisations.length && organisations[0].name;\n  return organisationName ? `${name} (${organisationName})` : name;\n};\n\nconst isReferredByOrganisation = ({ organisations, referredByOrganisation }) =>\n  organisations.some(({ _id }) => referredByOrganisation._id === _id);\nconst isReferredByOrganisationUser = ({ organisationUsers, referredByUser }) =>\n  organisationUsers.some(({ _id }) => referredByUser._id === _id);\n\nexport const getReferredBy = ({ user, proUser = {}, isAdmin }) => {\n  if (!user) {\n    return { raw: null, label: '' };\n  }\n\n  const { organisations = [] } = proUser;\n  const organisationUsers = organisations.length ? organisations[0].users : [];\n  const { referredByUser = {}, referredByOrganisation = {} } = user;\n\n  let label = 'Déjà référé';\n\n  if (\n    isAdmin\n    || isReferredByOrganisation({ organisations, referredByOrganisation })\n    || isReferredByOrganisationUser({ organisationUsers, referredByUser })\n  ) {\n    label = getUserNameAndOrganisation({ user: referredByUser });\n  }\n\n  return { raw: referredByUser.name, label };\n};\n\nexport const sortObject = (object) => {\n  if (!object || typeof object !== 'object' || object instanceof Array) {\n    return object;\n  }\n\n  const sortedObject = {};\n  const keys = Object.keys(object);\n\n  keys.sort();\n\n  keys.forEach((key) => {\n    sortedObject[key] = sortObject(object[key]);\n  });\n\n  return sortedObject;\n};\n"]},"sourceType":"script","hash":"2af247e4e4c2b1b3ce38c23b7974846625158712"}
