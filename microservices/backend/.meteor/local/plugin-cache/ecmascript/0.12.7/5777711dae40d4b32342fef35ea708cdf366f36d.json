{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/offers/server/test/OfferService.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/offers/server/test/OfferService.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/offers/server/test/OfferService.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/offers/server/test/OfferService.test.js"],"names":["expect","resetDatabase","Factory","checkEmails","LenderService","EMAIL_TEMPLATES","EMAIL_IDS","OfferService","describe","offer","offerId","beforeEach","it","create","interest10","loanId","_id","to","equal","update","object","get","lenderId","insert","maxAmount","amortizationGoal","createdAt","not","undefined","interest1","remove","timeout","adminId","firstName","lastName","emails","address","verified","userId","assignedEmployeeId","contactId","organisationId","contactIds","lender","feedback","sendFeedback","then","length","emailId","response","status","template","template_name","message","from_email","subject","global_merge_vars","from_name","bcc_address","SEND_FEEDBACK_TO_LENDER","SIMPLE","mandrillId","include","find","name","content"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\nimport { Factory } from 'meteor/dburles:factory';\n\nimport { checkEmails } from '../../../../utils/testHelpers';\nimport LenderService from '../../../lenders/server/LenderService';\nimport { EMAIL_TEMPLATES, EMAIL_IDS } from '../../../email/emailConstants';\nimport OfferService from '../OfferService';\n\ndescribe('OfferService', () => {\n  let offer;\n  let offerId;\n\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('update', () => {\n    it('modifies an offer', () => {\n      offer = Factory.create('offer', { interest10: 0.05, loanId: 'loanId' });\n      offerId = offer._id;\n      expect(offer.interest10).to.equal(0.05);\n\n      OfferService.update({ offerId, object: { interest10: 0.1 } });\n      offer = OfferService.get(offerId);\n\n      expect(offer.interest10).to.equal(0.1);\n    });\n  });\n\n  describe('insert', () => {\n    it('inserts an offer', () => {\n      const lenderId = Factory.create('lender')._id;\n      offerId = OfferService.insert({\n        offer: {\n          lenderId,\n          maxAmount: 800000,\n          amortizationGoal: 0.65,\n        },\n      });\n      offer = OfferService.get(offerId);\n\n      expect(offer.createdAt).to.not.equal(undefined);\n    });\n\n    it('rounds interestRates', () => {\n      const lenderId = Factory.create('lender')._id;\n      offerId = OfferService.insert({\n        offer: {\n          lenderId,\n          maxAmount: 800000,\n          amortizationGoal: 0.65,\n          interest1: 0.01234,\n        },\n      });\n\n      expect(OfferService.get(offerId).interest1).to.equal(0.0123);\n    });\n  });\n\n  describe('remove', () => {\n    it('removes an offer', () => {\n      offer = Factory.create('offer', { interest10: 1 });\n      offerId = offer._id;\n\n      OfferService.remove({ offerId });\n      offer = OfferService.get(offerId);\n\n      expect(offer).to.equal(undefined);\n    });\n  });\n\n  describe('send feedback', function () {\n    this.timeout(10000);\n\n    it('sends the feedback to the lender', () => {\n      const adminId = Factory.create('admin', {\n        firstName: 'Dev',\n        lastName: 'e-Potek',\n        emails: [{ address: 'dev@e-potek.ch', verified: true }],\n      })._id;\n      const userId = Factory.create('user', { assignedEmployeeId: adminId })\n        ._id;\n      const loanId = Factory.create('loan', { userId })._id;\n      const contactId = Factory.create('contact', {\n        emails: [{ address: 'john@doe.com' }],\n        firstName: 'John',\n        lastName: 'Doe',\n      })._id;\n      const organisationId = Factory.create('organisation', {\n        contactIds: [{ _id: contactId }],\n      })._id;\n      const lenderId = LenderService.insert({\n        lender: { loanId },\n        organisationId,\n        contactId,\n      });\n      offerId = OfferService.insert({\n        offer: {\n          interest10: 1,\n          maxAmount: 1000000,\n          lenderId,\n        },\n      });\n\n      const feedback = 'This is my feedback';\n      OfferService.sendFeedback({ offerId, feedback });\n\n      return checkEmails(1).then((emails) => {\n        expect(emails.length).to.equal(1);\n        const {\n          emailId,\n          address,\n          response: { status },\n          template: {\n            template_name,\n            message: {\n              from_email,\n              subject,\n              global_merge_vars,\n              from_name,\n              to,\n              bcc_address,\n            },\n          },\n        } = emails[0];\n\n        expect(status).to.equal('sent');\n        expect(emailId).to.equal(EMAIL_IDS.SEND_FEEDBACK_TO_LENDER);\n        expect(template_name).to.equal(EMAIL_TEMPLATES.SIMPLE.mandrillId);\n        expect(address).to.equal('john@doe.com');\n        expect(from_email).to.equal('dev@e-potek.ch');\n        expect(bcc_address).to.equal('dev@e-potek.ch');\n        expect(from_name).to.equal('Dev e-Potek');\n        expect(subject).to.include('Feedback client sur');\n        expect(global_merge_vars.find(({ name }) => name === 'BODY').content).to.include(feedback);\n      });\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/offers/server/test/OfferService.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/offers/server/test/OfferService.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 1);\nlet Factory;\nmodule.link(\"meteor/dburles:factory\", {\n  Factory(v) {\n    Factory = v;\n  }\n\n}, 2);\nlet checkEmails;\nmodule.link(\"../../../../utils/testHelpers\", {\n  checkEmails(v) {\n    checkEmails = v;\n  }\n\n}, 3);\nlet LenderService;\nmodule.link(\"../../../lenders/server/LenderService\", {\n  default(v) {\n    LenderService = v;\n  }\n\n}, 4);\nlet EMAIL_TEMPLATES, EMAIL_IDS;\nmodule.link(\"../../../email/emailConstants\", {\n  EMAIL_TEMPLATES(v) {\n    EMAIL_TEMPLATES = v;\n  },\n\n  EMAIL_IDS(v) {\n    EMAIL_IDS = v;\n  }\n\n}, 5);\nlet OfferService;\nmodule.link(\"../OfferService\", {\n  default(v) {\n    OfferService = v;\n  }\n\n}, 6);\ndescribe('OfferService', () => {\n  let offer;\n  let offerId;\n  beforeEach(() => {\n    resetDatabase();\n  });\n  describe('update', () => {\n    it('modifies an offer', () => {\n      offer = Factory.create('offer', {\n        interest10: 0.05,\n        loanId: 'loanId'\n      });\n      offerId = offer._id;\n      expect(offer.interest10).to.equal(0.05);\n      OfferService.update({\n        offerId,\n        object: {\n          interest10: 0.1\n        }\n      });\n      offer = OfferService.get(offerId);\n      expect(offer.interest10).to.equal(0.1);\n    });\n  });\n  describe('insert', () => {\n    it('inserts an offer', () => {\n      const lenderId = Factory.create('lender')._id;\n\n      offerId = OfferService.insert({\n        offer: {\n          lenderId,\n          maxAmount: 800000,\n          amortizationGoal: 0.65\n        }\n      });\n      offer = OfferService.get(offerId);\n      expect(offer.createdAt).to.not.equal(undefined);\n    });\n    it('rounds interestRates', () => {\n      const lenderId = Factory.create('lender')._id;\n\n      offerId = OfferService.insert({\n        offer: {\n          lenderId,\n          maxAmount: 800000,\n          amortizationGoal: 0.65,\n          interest1: 0.01234\n        }\n      });\n      expect(OfferService.get(offerId).interest1).to.equal(0.0123);\n    });\n  });\n  describe('remove', () => {\n    it('removes an offer', () => {\n      offer = Factory.create('offer', {\n        interest10: 1\n      });\n      offerId = offer._id;\n      OfferService.remove({\n        offerId\n      });\n      offer = OfferService.get(offerId);\n      expect(offer).to.equal(undefined);\n    });\n  });\n  describe('send feedback', function () {\n    this.timeout(10000);\n    it('sends the feedback to the lender', () => {\n      const adminId = Factory.create('admin', {\n        firstName: 'Dev',\n        lastName: 'e-Potek',\n        emails: [{\n          address: 'dev@e-potek.ch',\n          verified: true\n        }]\n      })._id;\n\n      const userId = Factory.create('user', {\n        assignedEmployeeId: adminId\n      })._id;\n\n      const loanId = Factory.create('loan', {\n        userId\n      })._id;\n\n      const contactId = Factory.create('contact', {\n        emails: [{\n          address: 'john@doe.com'\n        }],\n        firstName: 'John',\n        lastName: 'Doe'\n      })._id;\n\n      const organisationId = Factory.create('organisation', {\n        contactIds: [{\n          _id: contactId\n        }]\n      })._id;\n\n      const lenderId = LenderService.insert({\n        lender: {\n          loanId\n        },\n        organisationId,\n        contactId\n      });\n      offerId = OfferService.insert({\n        offer: {\n          interest10: 1,\n          maxAmount: 1000000,\n          lenderId\n        }\n      });\n      const feedback = 'This is my feedback';\n      OfferService.sendFeedback({\n        offerId,\n        feedback\n      });\n      return checkEmails(1).then(emails => {\n        expect(emails.length).to.equal(1);\n        const {\n          emailId,\n          address,\n          response: {\n            status\n          },\n          template: {\n            template_name,\n            message: {\n              from_email,\n              subject,\n              global_merge_vars,\n              from_name,\n              to,\n              bcc_address\n            }\n          }\n        } = emails[0];\n        expect(status).to.equal('sent');\n        expect(emailId).to.equal(EMAIL_IDS.SEND_FEEDBACK_TO_LENDER);\n        expect(template_name).to.equal(EMAIL_TEMPLATES.SIMPLE.mandrillId);\n        expect(address).to.equal('john@doe.com');\n        expect(from_email).to.equal('dev@e-potek.ch');\n        expect(bcc_address).to.equal('dev@e-potek.ch');\n        expect(from_name).to.equal('Dev e-Potek');\n        expect(subject).to.include('Feedback client sur');\n        expect(global_merge_vars.find(({\n          name\n        }) => name === 'BODY').content).to.include(feedback);\n      });\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/api/offers/server/test/OfferService.test.js"],"names":["describe","beforeEach","resetDatabase","it","offer","interest10","loanId","offerId","expect","OfferService","object","lenderId","Factory","maxAmount","amortizationGoal","interest1","adminId","firstName","lastName","emails","address","verified","userId","assignedEmployeeId","contactId","organisationId","contactIds","_id","lender","feedback","response","status","template","message","bcc_address","EMAIL_IDS","EMAIL_TEMPLATES","global_merge_vars","name"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\nimport { Factory } from 'meteor/dburles:factory';\n\nimport { checkEmails } from '../../../../utils/testHelpers';\nimport LenderService from '../../../lenders/server/LenderService';\nimport { EMAIL_TEMPLATES, EMAIL_IDS } from '../../../email/emailConstants';\nimport OfferService from '../OfferService';\n\ndescribe('OfferService', () => {\n  let offer;\n  let offerId;\n\n  beforeEach(() => {\n    resetDatabase();\n  });\n\n  describe('update', () => {\n    it('modifies an offer', () => {\n      offer = Factory.create('offer', { interest10: 0.05, loanId: 'loanId' });\n      offerId = offer._id;\n      expect(offer.interest10).to.equal(0.05);\n\n      OfferService.update({ offerId, object: { interest10: 0.1 } });\n      offer = OfferService.get(offerId);\n\n      expect(offer.interest10).to.equal(0.1);\n    });\n  });\n\n  describe('insert', () => {\n    it('inserts an offer', () => {\n      const lenderId = Factory.create('lender')._id;\n      offerId = OfferService.insert({\n        offer: {\n          lenderId,\n          maxAmount: 800000,\n          amortizationGoal: 0.65,\n        },\n      });\n      offer = OfferService.get(offerId);\n\n      expect(offer.createdAt).to.not.equal(undefined);\n    });\n\n    it('rounds interestRates', () => {\n      const lenderId = Factory.create('lender')._id;\n      offerId = OfferService.insert({\n        offer: {\n          lenderId,\n          maxAmount: 800000,\n          amortizationGoal: 0.65,\n          interest1: 0.01234,\n        },\n      });\n\n      expect(OfferService.get(offerId).interest1).to.equal(0.0123);\n    });\n  });\n\n  describe('remove', () => {\n    it('removes an offer', () => {\n      offer = Factory.create('offer', { interest10: 1 });\n      offerId = offer._id;\n\n      OfferService.remove({ offerId });\n      offer = OfferService.get(offerId);\n\n      expect(offer).to.equal(undefined);\n    });\n  });\n\n  describe('send feedback', function () {\n    this.timeout(10000);\n\n    it('sends the feedback to the lender', () => {\n      const adminId = Factory.create('admin', {\n        firstName: 'Dev',\n        lastName: 'e-Potek',\n        emails: [{ address: 'dev@e-potek.ch', verified: true }],\n      })._id;\n      const userId = Factory.create('user', { assignedEmployeeId: adminId })\n        ._id;\n      const loanId = Factory.create('loan', { userId })._id;\n      const contactId = Factory.create('contact', {\n        emails: [{ address: 'john@doe.com' }],\n        firstName: 'John',\n        lastName: 'Doe',\n      })._id;\n      const organisationId = Factory.create('organisation', {\n        contactIds: [{ _id: contactId }],\n      })._id;\n      const lenderId = LenderService.insert({\n        lender: { loanId },\n        organisationId,\n        contactId,\n      });\n      offerId = OfferService.insert({\n        offer: {\n          interest10: 1,\n          maxAmount: 1000000,\n          lenderId,\n        },\n      });\n\n      const feedback = 'This is my feedback';\n      OfferService.sendFeedback({ offerId, feedback });\n\n      return checkEmails(1).then((emails) => {\n        expect(emails.length).to.equal(1);\n        const {\n          emailId,\n          address,\n          response: { status },\n          template: {\n            template_name,\n            message: {\n              from_email,\n              subject,\n              global_merge_vars,\n              from_name,\n              to,\n              bcc_address,\n            },\n          },\n        } = emails[0];\n\n        expect(status).to.equal('sent');\n        expect(emailId).to.equal(EMAIL_IDS.SEND_FEEDBACK_TO_LENDER);\n        expect(template_name).to.equal(EMAIL_TEMPLATES.SIMPLE.mandrillId);\n        expect(address).to.equal('john@doe.com');\n        expect(from_email).to.equal('dev@e-potek.ch');\n        expect(bcc_address).to.equal('dev@e-potek.ch');\n        expect(from_name).to.equal('Dev e-Potek');\n        expect(subject).to.include('Feedback client sur');\n        expect(global_merge_vars.find(({ name }) => name === 'BODY').content).to.include(feedback);\n      });\n    });\n  });\n});\n"]},"sourceType":"script","hash":"5777711dae40d4b32342fef35ea708cdf366f36d"}
