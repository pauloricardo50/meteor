{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/redis/getRedisClient.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/cultofcoders:redis-oplog/lib/redis/getRedisClient.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/redis/getRedisClient.js","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/redis/getRedisClient.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:redis-oplog/lib/redis/getRedisClient.js"}},"code":"module.export({\n  getRedisPusher: () => getRedisPusher,\n  getRedisListener: () => getRedisListener\n});\nlet redis;\nmodule.link(\"redis\", {\n  default(v) {\n    redis = v;\n  }\n\n}, 0);\nlet Config;\nmodule.link(\"../config\", {\n  default(v) {\n    Config = v;\n  }\n\n}, 1);\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 2);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 3);\n// Redis requires two connections for pushing and listening to data\nlet redisPusher;\nlet redisListener;\n/**\n * Returns the pusher for events in Redis\n *\n * @returns {*}\n */\n\nfunction getRedisPusher() {\n  if (!redisPusher) {\n    redisPusher = redis.createClient(_.extend({}, Config.redis, {\n      retry_strategy: getRetryStrategy()\n    }));\n  }\n\n  return redisPusher;\n}\n\nfunction getRedisListener({\n  onConnect\n} = {}) {\n  if (!redisListener) {\n    redisListener = redis.createClient(_.extend({}, Config.redis, {\n      retry_strategy: getRetryStrategy()\n    })); // we only attach events here\n\n    attachEvents(redisListener, {\n      onConnect\n    });\n  }\n\n  return redisListener;\n}\n\n/**\n *\n * @param client\n * @param onConnect\n */\nfunction attachEvents(client, {\n  onConnect\n}) {\n  const functions = ['connect', 'reconnecting', 'error', 'end'];\n  functions.forEach(fn => {\n    redisListener.on(fn, Meteor.bindEnvironment(function (...args) {\n      if (fn === 'connect' && onConnect) {\n        onConnect();\n      }\n\n      if (Config.redisExtras.events[fn]) {\n        return Config.redisExtras.events[fn](...args);\n      }\n    }));\n  });\n}\n/**\n * Retrieves the retry strategy that can be modified\n * @returns {Function}\n */\n\n\nfunction getRetryStrategy() {\n  return function (...args) {\n    if (Config.redisExtras.retry_strategy) {\n      return Config.redisExtras.retry_strategy(...args);\n    }\n  };\n}","map":{"version":3,"sources":["packages/cultofcoders:redis-oplog/lib/redis/getRedisClient.js"],"names":["module","export","getRedisPusher","getRedisListener","redis","link","default","v","Config","_","Meteor","redisPusher","redisListener","createClient","extend","retry_strategy","getRetryStrategy","onConnect","attachEvents","client","functions","forEach","fn","on","bindEnvironment","args","redisExtras","events"],"mappings":"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","sourcesContent":["import redis from 'redis';\nimport Config from '../config';\nimport { _ } from 'meteor/underscore';\nimport {Meteor} from 'meteor/meteor';\n\n// Redis requires two connections for pushing and listening to data\nlet redisPusher;\nlet redisListener;\n\n/**\n * Returns the pusher for events in Redis\n *\n * @returns {*}\n */\nexport function getRedisPusher() {\n    if (!redisPusher) {\n        redisPusher = redis.createClient(_.extend({}, Config.redis, {\n            retry_strategy: getRetryStrategy()\n        }));\n    }\n\n    return redisPusher;\n}\n\n/**\n * Returns the listener for events in Redis\n *\n * @param onConnect\n * @returns {*}\n */\nexport function getRedisListener({onConnect} = {}) {\n    if (!redisListener) {\n        redisListener = redis.createClient(_.extend({}, Config.redis, {\n            retry_strategy: getRetryStrategy()\n        }));\n\n        // we only attach events here\n        attachEvents(redisListener, {onConnect});\n    }\n\n    return redisListener;\n}\n\n/**\n *\n * @param client\n * @param onConnect\n */\nfunction attachEvents(client, {onConnect}) {\n    const functions = ['connect', 'reconnecting', 'error', 'end'];\n\n    functions.forEach(fn => {\n        redisListener.on(fn, Meteor.bindEnvironment(function (...args) {\n            if (fn === 'connect' && onConnect) {\n                onConnect();\n            }\n            if (Config.redisExtras.events[fn]) {\n                return Config.redisExtras.events[fn](...args);\n            }\n        }))\n    });\n}\n\n/**\n * Retrieves the retry strategy that can be modified\n * @returns {Function}\n */\nfunction getRetryStrategy() {\n    return function(...args) {\n        if (Config.redisExtras.retry_strategy) {\n            return Config.redisExtras.retry_strategy(...args);\n        }\n    }\n}"]},"sourceType":"script","hash":"8a69758f1d6e25eb6a6ebb256dc78e8e4e017f49"}
