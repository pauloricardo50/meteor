{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/analytics/server/Analytics.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/analytics/server/Analytics.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/analytics/server/Analytics.js","inputSourceMap":{"version":3,"sources":["imports/core/api/analytics/server/Analytics.js"],"names":["DefaultNodeAnalytics","Meteor","Random","UserService","getClientHost","EVENTS_CONFIG","TRACKING_COOKIE","MiddlewareManager","impersonateMiddleware","TestAnalytics","NodeAnalytics","constructor","args","middlewareManager","initAnalytics","context","forEach","method","applyToMethod","Segment","settings","public","analyticsSettings","key","nodeAnalytics","isProduction","Error","Analytics","init","events","isTest","isAppTest","analytics","userId","connection","clientAddress","httpHeaders","userAgent","realIp","referer","referrer","user","fetchOne","$filters","_id","firstName","lastName","email","roles","host","identify","trackingId","alias","anonymousId","traits","role","track","event","data","Object","keys","includes","eventConfig","name","transform","eventProperties","properties","ip","previousId","formatRouteName","route","toLowerCase","split","map","w","i","slice","toUpperCase","join","page","params","cookies","sessionStorage","path","queryParams","queryString","formattedRoute","id","url"],"mappings":"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","sourcesContent":["import DefaultNodeAnalytics from 'analytics-node';\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nimport UserService from 'core/api/users/server/UserService';\nimport { getClientHost } from 'core/utils/server/getClientUrl';\nimport { EVENTS_CONFIG } from './eventsConfig';\nimport { TRACKING_COOKIE } from '../analyticsConstants';\nimport MiddlewareManager from '../../../utils/MiddlewareManager';\nimport { impersonateMiddleware } from './analyticsHelpers';\nimport TestAnalytics from './TestAnalytics';\n\nclass NodeAnalytics extends DefaultNodeAnalytics {\n  constructor(...args) {\n    super(...args);\n    this.middlewareManager = new MiddlewareManager(this);\n  }\n\n  initAnalytics(context) {\n    ['identify', 'track', 'page', 'alias'].forEach((method) => {\n      this.middlewareManager.applyToMethod(\n        method,\n        impersonateMiddleware(context),\n      );\n    });\n  }\n}\n\nconst { Segment = {} } = Meteor.settings.public.analyticsSettings;\nconst { key } = Segment;\nconst nodeAnalytics = new NodeAnalytics(key);\nif (Meteor.isProduction && !key) {\n  throw new Meteor.Error('No segment key found !');\n}\n\nclass Analytics {\n  constructor(context) {\n    this.init(context);\n  }\n\n  init(context) {\n    this.events = EVENTS_CONFIG;\n    if (Meteor.isTest || Meteor.isAppTest){// || Meteor.isDevelopment) {\n      this.analytics = new TestAnalytics();\n    } else {\n      this.analytics = nodeAnalytics;\n    }\n\n    this.context(context);\n  }\n\n  context(context) {\n    const {\n      userId,\n      connection: {\n        clientAddress,\n        httpHeaders: {\n          'user-agent': userAgent,\n          'x-real-ip': realIp,\n          referer: referrer,\n        },\n      },\n    } = context;\n    this.userId = userId;\n    this.user = UserService.fetchOne({\n      $filters: { _id: userId },\n      firstName: 1,\n      lastName: 1,\n      email: 1,\n      roles: 1,\n    });\n    this.clientAddress = realIp || clientAddress;\n    this.host = getClientHost();\n    this.userAgent = userAgent;\n    this.referrer = referrer;\n\n    this.analytics.initAnalytics(context);\n  }\n\n  identify(trackingId) {\n    this.alias(trackingId);\n\n    this.analytics.identify({\n      anonymousId: trackingId,\n      userId: this.userId,\n      traits: {\n        firstName: this.user.firstName,\n        lastName: this.user.lastName,\n        email: this.user.email,\n        role: this.user.roles[0],\n      },\n    });\n  }\n\n  track(event, data, trackingId) {\n    if (!Object.keys(this.events).includes(event)) {\n      throw new Meteor.Error(`Unknown event ${event}`);\n    }\n    const eventConfig = this.events[event];\n    const { name, transform } = eventConfig;\n\n    const eventProperties = transform ? transform(data) : {};\n\n    this.analytics.track({\n      ...(trackingId ? { anonymousId: trackingId } : {}),\n      userId: this.userId,\n      event: name,\n      properties: eventProperties,\n      context: {\n        ip: this.clientAddress,\n        userAgent: this.userAgent,\n      },\n    });\n  }\n\n  alias(trackingId) {\n    if (trackingId) {\n      this.analytics.alias({ userId: this.userId, previousId: trackingId });\n    }\n  }\n\n  // Returns the route string in a more readable format\n  // ex: APP_LOGIN_PAGE => App login page\n  formatRouteName(route) {\n    return route\n      .toLowerCase()\n      .split('_')\n      .map((w, i) => {\n        if (i === 0) {\n          return w.slice(0, 1).toUpperCase() + w.slice(1);\n        }\n\n        return w;\n      })\n      .join(' ');\n  }\n\n  page(params) {\n    const {\n      cookies,\n      sessionStorage,\n      path,\n      route,\n      queryParams,\n      queryString,\n    } = params;\n    const trackingId = cookies[TRACKING_COOKIE];\n    const formattedRoute = this.formatRouteName(route);\n\n    this.analytics.page({\n      name: formattedRoute,\n      anonymousId: trackingId || Random.id(),\n      ...(this.userId ? { userId: this.userId } : {}),\n      context: {\n        ip: this.clientAddress,\n        userAgent: this.userAgent,\n      },\n      properties: {\n        path,\n        url: `${this.host}${path === '/' ? '' : path}`,\n        referrer: this.referrer,\n        ...queryString,\n        ...queryParams,\n      },\n    });\n  }\n}\n\nexport default Analytics;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/analytics/server/Analytics.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/analytics/server/Analytics.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet DefaultNodeAnalytics;\nmodule.link(\"analytics-node\", {\n  default(v) {\n    DefaultNodeAnalytics = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 2);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 3);\nlet getClientHost;\nmodule.link(\"../../../utils/server/getClientUrl\", {\n  getClientHost(v) {\n    getClientHost = v;\n  }\n\n}, 4);\nlet EVENTS_CONFIG;\nmodule.link(\"./eventsConfig\", {\n  EVENTS_CONFIG(v) {\n    EVENTS_CONFIG = v;\n  }\n\n}, 5);\nlet TRACKING_COOKIE;\nmodule.link(\"../analyticsConstants\", {\n  TRACKING_COOKIE(v) {\n    TRACKING_COOKIE = v;\n  }\n\n}, 6);\nlet MiddlewareManager;\nmodule.link(\"../../../utils/MiddlewareManager\", {\n  default(v) {\n    MiddlewareManager = v;\n  }\n\n}, 7);\nlet impersonateMiddleware;\nmodule.link(\"./analyticsHelpers\", {\n  impersonateMiddleware(v) {\n    impersonateMiddleware = v;\n  }\n\n}, 8);\nlet TestAnalytics;\nmodule.link(\"./TestAnalytics\", {\n  default(v) {\n    TestAnalytics = v;\n  }\n\n}, 9);\n\nclass NodeAnalytics extends DefaultNodeAnalytics {\n  constructor(...args) {\n    super(...args);\n    this.middlewareManager = new MiddlewareManager(this);\n  }\n\n  initAnalytics(context) {\n    ['identify', 'track', 'page', 'alias'].forEach(method => {\n      this.middlewareManager.applyToMethod(method, impersonateMiddleware(context));\n    });\n  }\n\n}\n\nconst {\n  Segment = {}\n} = Meteor.settings.public.analyticsSettings;\nconst {\n  key\n} = Segment;\nconst nodeAnalytics = new NodeAnalytics(key);\n\nif (Meteor.isProduction && !key) {\n  throw new Meteor.Error('No segment key found !');\n}\n\nclass Analytics {\n  constructor(context) {\n    this.init(context);\n  }\n\n  init(context) {\n    this.events = EVENTS_CONFIG;\n\n    if (Meteor.isTest || Meteor.isAppTest) {\n      // || Meteor.isDevelopment) {\n      this.analytics = new TestAnalytics();\n    } else {\n      this.analytics = nodeAnalytics;\n    }\n\n    this.context(context);\n  }\n\n  context(context) {\n    const {\n      userId,\n      connection: {\n        clientAddress,\n        httpHeaders: {\n          'user-agent': userAgent,\n          'x-real-ip': realIp,\n          referer: referrer\n        }\n      }\n    } = context;\n    this.userId = userId;\n    this.user = UserService.fetchOne({\n      $filters: {\n        _id: userId\n      },\n      firstName: 1,\n      lastName: 1,\n      email: 1,\n      roles: 1\n    });\n    this.clientAddress = realIp || clientAddress;\n    this.host = getClientHost();\n    this.userAgent = userAgent;\n    this.referrer = referrer;\n    this.analytics.initAnalytics(context);\n  }\n\n  identify(trackingId) {\n    this.alias(trackingId);\n    this.analytics.identify({\n      anonymousId: trackingId,\n      userId: this.userId,\n      traits: {\n        firstName: this.user.firstName,\n        lastName: this.user.lastName,\n        email: this.user.email,\n        role: this.user.roles[0]\n      }\n    });\n  }\n\n  track(event, data, trackingId) {\n    if (!Object.keys(this.events).includes(event)) {\n      throw new Meteor.Error(`Unknown event ${event}`);\n    }\n\n    const eventConfig = this.events[event];\n    const {\n      name,\n      transform\n    } = eventConfig;\n    const eventProperties = transform ? transform(data) : {};\n    this.analytics.track((0, _objectSpread2.default)({}, trackingId ? {\n      anonymousId: trackingId\n    } : {}, {\n      userId: this.userId,\n      event: name,\n      properties: eventProperties,\n      context: {\n        ip: this.clientAddress,\n        userAgent: this.userAgent\n      }\n    }));\n  }\n\n  alias(trackingId) {\n    if (trackingId) {\n      this.analytics.alias({\n        userId: this.userId,\n        previousId: trackingId\n      });\n    }\n  } // Returns the route string in a more readable format\n  // ex: APP_LOGIN_PAGE => App login page\n\n\n  formatRouteName(route) {\n    return route.toLowerCase().split('_').map((w, i) => {\n      if (i === 0) {\n        return w.slice(0, 1).toUpperCase() + w.slice(1);\n      }\n\n      return w;\n    }).join(' ');\n  }\n\n  page(params) {\n    const {\n      cookies,\n      sessionStorage,\n      path,\n      route,\n      queryParams,\n      queryString\n    } = params;\n    const trackingId = cookies[TRACKING_COOKIE];\n    const formattedRoute = this.formatRouteName(route);\n    this.analytics.page((0, _objectSpread2.default)({\n      name: formattedRoute,\n      anonymousId: trackingId || Random.id()\n    }, this.userId ? {\n      userId: this.userId\n    } : {}, {\n      context: {\n        ip: this.clientAddress,\n        userAgent: this.userAgent\n      },\n      properties: (0, _objectSpread2.default)({\n        path,\n        url: `${this.host}${path === '/' ? '' : path}`,\n        referrer: this.referrer\n      }, queryString, queryParams)\n    }));\n  }\n\n}\n\nmodule.exportDefault(Analytics);","map":{"version":3,"sources":["imports/core/api/analytics/server/Analytics.js"],"names":["DefaultNodeAnalytics","constructor","initAnalytics","method","impersonateMiddleware","Segment","Meteor","key","nodeAnalytics","init","context","connection","httpHeaders","referer","referrer","$filters","_id","userId","firstName","lastName","email","roles","realIp","getClientHost","identify","anonymousId","traits","role","track","Object","event","eventConfig","transform","eventProperties","trackingId","properties","ip","userAgent","alias","previousId","formatRouteName","i","w","page","queryString","cookies","formattedRoute","name","Random","url","host","path","queryParams"],"mappings":"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","sourcesContent":["import DefaultNodeAnalytics from 'analytics-node';\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nimport UserService from 'core/api/users/server/UserService';\nimport { getClientHost } from 'core/utils/server/getClientUrl';\nimport { EVENTS_CONFIG } from './eventsConfig';\nimport { TRACKING_COOKIE } from '../analyticsConstants';\nimport MiddlewareManager from '../../../utils/MiddlewareManager';\nimport { impersonateMiddleware } from './analyticsHelpers';\nimport TestAnalytics from './TestAnalytics';\n\nclass NodeAnalytics extends DefaultNodeAnalytics {\n  constructor(...args) {\n    super(...args);\n    this.middlewareManager = new MiddlewareManager(this);\n  }\n\n  initAnalytics(context) {\n    ['identify', 'track', 'page', 'alias'].forEach((method) => {\n      this.middlewareManager.applyToMethod(\n        method,\n        impersonateMiddleware(context),\n      );\n    });\n  }\n}\n\nconst { Segment = {} } = Meteor.settings.public.analyticsSettings;\nconst { key } = Segment;\nconst nodeAnalytics = new NodeAnalytics(key);\nif (Meteor.isProduction && !key) {\n  throw new Meteor.Error('No segment key found !');\n}\n\nclass Analytics {\n  constructor(context) {\n    this.init(context);\n  }\n\n  init(context) {\n    this.events = EVENTS_CONFIG;\n    if (Meteor.isTest || Meteor.isAppTest){// || Meteor.isDevelopment) {\n      this.analytics = new TestAnalytics();\n    } else {\n      this.analytics = nodeAnalytics;\n    }\n\n    this.context(context);\n  }\n\n  context(context) {\n    const {\n      userId,\n      connection: {\n        clientAddress,\n        httpHeaders: {\n          'user-agent': userAgent,\n          'x-real-ip': realIp,\n          referer: referrer,\n        },\n      },\n    } = context;\n    this.userId = userId;\n    this.user = UserService.fetchOne({\n      $filters: { _id: userId },\n      firstName: 1,\n      lastName: 1,\n      email: 1,\n      roles: 1,\n    });\n    this.clientAddress = realIp || clientAddress;\n    this.host = getClientHost();\n    this.userAgent = userAgent;\n    this.referrer = referrer;\n\n    this.analytics.initAnalytics(context);\n  }\n\n  identify(trackingId) {\n    this.alias(trackingId);\n\n    this.analytics.identify({\n      anonymousId: trackingId,\n      userId: this.userId,\n      traits: {\n        firstName: this.user.firstName,\n        lastName: this.user.lastName,\n        email: this.user.email,\n        role: this.user.roles[0],\n      },\n    });\n  }\n\n  track(event, data, trackingId) {\n    if (!Object.keys(this.events).includes(event)) {\n      throw new Meteor.Error(`Unknown event ${event}`);\n    }\n    const eventConfig = this.events[event];\n    const { name, transform } = eventConfig;\n\n    const eventProperties = transform ? transform(data) : {};\n\n    this.analytics.track({\n      ...(trackingId ? { anonymousId: trackingId } : {}),\n      userId: this.userId,\n      event: name,\n      properties: eventProperties,\n      context: {\n        ip: this.clientAddress,\n        userAgent: this.userAgent,\n      },\n    });\n  }\n\n  alias(trackingId) {\n    if (trackingId) {\n      this.analytics.alias({ userId: this.userId, previousId: trackingId });\n    }\n  }\n\n  // Returns the route string in a more readable format\n  // ex: APP_LOGIN_PAGE => App login page\n  formatRouteName(route) {\n    return route\n      .toLowerCase()\n      .split('_')\n      .map((w, i) => {\n        if (i === 0) {\n          return w.slice(0, 1).toUpperCase() + w.slice(1);\n        }\n\n        return w;\n      })\n      .join(' ');\n  }\n\n  page(params) {\n    const {\n      cookies,\n      sessionStorage,\n      path,\n      route,\n      queryParams,\n      queryString,\n    } = params;\n    const trackingId = cookies[TRACKING_COOKIE];\n    const formattedRoute = this.formatRouteName(route);\n\n    this.analytics.page({\n      name: formattedRoute,\n      anonymousId: trackingId || Random.id(),\n      ...(this.userId ? { userId: this.userId } : {}),\n      context: {\n        ip: this.clientAddress,\n        userAgent: this.userAgent,\n      },\n      properties: {\n        path,\n        url: `${this.host}${path === '/' ? '' : path}`,\n        referrer: this.referrer,\n        ...queryString,\n        ...queryParams,\n      },\n    });\n  }\n}\n\nexport default Analytics;\n"]},"sourceType":"script","hash":"eda5ae7bbc48f37e1ca9a91a84b603e496c2f66d"}
