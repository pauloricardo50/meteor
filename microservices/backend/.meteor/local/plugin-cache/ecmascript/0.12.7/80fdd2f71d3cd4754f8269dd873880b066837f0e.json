{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/email/server/emailConfigs.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/email/server/emailConfigs.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/email/server/emailConfigs.js","inputSourceMap":{"version":3,"sources":["imports/core/api/email/server/emailConfigs.js"],"names":["ReactDOMServer","moment","Meteor","Intl","EMAIL_TEMPLATES","EMAIL_IDS","CTA_URL_DEFAULT","FOOTER_TYPES","EPOTEK_PHONE","getAccountsUrl","notificationTemplateDefaultOverride","notificationAndCtaTemplateDefaultOverride","PromotionLogos","LoanChecklistEmail","styles","emailConfigs","emailDefaults","allowUnsubscribe","footerType","USER","createIntlValues","params","variables","addEmailConfig","emailId","config","template","NOTIFICATION","createOverrides","NOTIFICATION_AND_CTA","VERIFY_EMAIL","user","url","title","body","cta","verifyUrl","name","TITLE","content","BODY","CTA","CTA_URL","RESET_PASSWORD","resetPasswordUrl","ENROLL_ACCOUNT","enrollUrl","VERIFICATION_REQUESTED","VERIFICATION_ERROR","VERIFICATION_PASSED","getFirstName","string","trim","split","CONTACT_US","VISITOR","details","CONTACT_US_ADMIN","INVITE_USER_TO_PROMOTION","PROMOTION_INVITATION","coverImageUrl","logoUrls","ctaUrl","COVER_IMAGE_URL","senderName","templateContent","renderToStaticMarkup","promotionName","promotion","phoneNumber","contacts","length","epotekNumber","assignedEmployeeName","assignedEmployee","assignedEmployeeFirstName","firstName","assignedEmployeePhone","phoneNumbers","invitedBy","SEND_FEEDBACK_TO_LENDER","SIMPLE","assigneeName","assigneeAddress","feedback","senderAddress","bccAddress","INVITE_USER_TO_PROPERTY","REFER_USER","rest","rest2","FIND_LENDER_NOTIFICATION","loanId","CONFIRM_USER_INVITATION","LOAN_CHECKLIST","NOTIFICATION_AND_CTA_V2","loan","customMessage","settings","public","subdomains","app","_id","CSS","intl","formatMessage","bind","today","format"],"mappings":"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","sourcesContent":["import ReactDOMServer from 'react-dom/server';\nimport moment from 'moment';\nimport { Meteor } from 'meteor/meteor';\n\nimport Intl from 'core/utils/server/intl';\nimport {\n  EMAIL_TEMPLATES,\n  EMAIL_IDS,\n  CTA_URL_DEFAULT,\n  FOOTER_TYPES,\n  EPOTEK_PHONE,\n} from '../emailConstants';\nimport {\n  getAccountsUrl,\n  notificationTemplateDefaultOverride,\n  notificationAndCtaTemplateDefaultOverride,\n} from './emailHelpers';\nimport PromotionLogos from './components/PromotionLogos';\nimport LoanChecklistEmail from '../../../components/LoanChecklist/LoanChecklistEmail/LoanChecklistEmail';\nimport styles from '../../../components/LoanChecklist/LoanChecklistEmail/styles';\n\nconst emailConfigs = {};\n\nconst emailDefaults = {\n  allowUnsubscribe: false,\n  footerType: FOOTER_TYPES.USER,\n  createIntlValues: params => ({ variables: [], ...params }),\n};\n\n/**\n * addEmailConfig - A function that creates a config for a given emailId\n *\n * @param {String} emailId A unique id representing the email, from EMAIL_IDS\n * @param {Object} config A config object that can have the following keys:\n * {Object} template A template object from EMAIL_TEMPLATES\n * {Boolean} allowUnsubscribe Defines whether the email will be rendered with\n * a footer that allows the user to unsubscribe to notifications.\n * default is `false`\n * {Function} createOverrides A function that gets the params and\n * returns an object with overrides for the email template\n * {Function} createIntlValues A function that gets the params and\n * returns an object with intl values that need to be injected inside of the\n * i18n strings\n */\nconst addEmailConfig = (emailId, config) => {\n  if (config.template === EMAIL_TEMPLATES.NOTIFICATION) {\n    emailConfigs[emailId] = {\n      createOverrides: notificationTemplateDefaultOverride,\n      ...emailDefaults,\n      ...config,\n    };\n  } else if (config.template === EMAIL_TEMPLATES.NOTIFICATION_AND_CTA) {\n    emailConfigs[emailId] = {\n      createOverrides: notificationAndCtaTemplateDefaultOverride,\n      ...emailDefaults,\n      ...config,\n    };\n  } else {\n    emailConfigs[emailId] = { ...emailDefaults, ...config };\n  }\n};\n\naddEmailConfig(EMAIL_IDS.VERIFY_EMAIL, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ user, url }, { title, body, cta }) {\n    const { variables } = this.template;\n    const verifyUrl = getAccountsUrl('verify-email')(user, url);\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: verifyUrl },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.RESET_PASSWORD, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ user, url }, { title, body, cta }) {\n    const { variables } = this.template;\n    const resetPasswordUrl = getAccountsUrl('reset-password')(user, url);\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        {\n          name: variables.CTA_URL,\n          content: resetPasswordUrl || CTA_URL_DEFAULT,\n        },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.ENROLL_ACCOUNT, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ user, url }, { title, body, cta }) {\n    const { variables } = this.template;\n    const enrollUrl = getAccountsUrl('enroll-account')(user, url);\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: enrollUrl || CTA_URL_DEFAULT },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.VERIFICATION_REQUESTED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n});\n\naddEmailConfig(EMAIL_IDS.VERIFICATION_ERROR, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\naddEmailConfig(EMAIL_IDS.VERIFICATION_PASSED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\nconst getFirstName = string => string.trim().split(' ')[0];\n\naddEmailConfig(EMAIL_IDS.CONTACT_US, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n  footerType: FOOTER_TYPES.VISITOR,\n  createIntlValues: params => ({\n    ...params,\n    // Only show first names to clients\n    name: getFirstName(params.name),\n    // params.details check is required because details is optional\n    //  and it breaks react-intl if not provided\n    details: params.details || '',\n  }),\n});\n\naddEmailConfig(EMAIL_IDS.CONTACT_US_ADMIN, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n  footerType: FOOTER_TYPES.VISITOR,\n  createIntlValues: params => ({\n    ...params,\n    details: params.details || 'Pas de message',\n  }),\n});\n\naddEmailConfig(EMAIL_IDS.INVITE_USER_TO_PROMOTION, {\n  template: EMAIL_TEMPLATES.PROMOTION_INVITATION,\n  createOverrides(\n    { coverImageUrl, logoUrls = [], ctaUrl },\n    { title, body, cta },\n  ) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: ctaUrl || CTA_URL_DEFAULT },\n        { name: variables.COVER_IMAGE_URL, content: coverImageUrl },\n      ],\n      senderName: 'e-Potek',\n      templateContent: [\n        {\n          name: 'logos',\n          content: ReactDOMServer.renderToStaticMarkup(PromotionLogos({ logoUrls })),\n        },\n      ],\n    };\n  },\n  createIntlValues: params => ({\n    ...params,\n    promotionName: params.promotion.name,\n    phoneNumber:\n      params.promotion.contacts.length\n      && params.promotion.contacts[0].phoneNumber,\n    name: params.promotion.contacts.length && params.promotion.contacts[0].name,\n    epotekNumber: EPOTEK_PHONE,\n    assignedEmployeeName:\n      (params.promotion.assignedEmployee\n        && params.promotion.assignedEmployee.name)\n      || 'Yannis Eggert',\n    assignedEmployeeFirstName:\n      (params.promotion.assignedEmployee\n        && params.promotion.assignedEmployee.firstName)\n      || 'Yannis',\n    assignedEmployeePhone:\n      (params.promotion.assignedEmployee\n        && params.promotion.assignedEmployee.phoneNumbers[0])\n      || EPOTEK_PHONE,\n    invitedBy: params.invitedBy || 'e-Potek',\n  }),\n});\n\naddEmailConfig(EMAIL_IDS.SEND_FEEDBACK_TO_LENDER, {\n  template: EMAIL_TEMPLATES.SIMPLE,\n  createOverrides(\n    {\n      assigneeName = 'e-Potek',\n      assigneeAddress = 'financements@e-potek.ch',\n      feedback,\n    },\n    { title },\n  ) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: feedback },\n      ],\n      senderName: assigneeName,\n      senderAddress: assigneeAddress,\n      bccAddress: assigneeAddress,\n    };\n  },\n});\n\n// Required params:\n// proName\n// address\n// ctaUrl\naddEmailConfig(EMAIL_IDS.INVITE_USER_TO_PROPERTY, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ ctaUrl }, { title, body, cta }) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: ctaUrl },\n      ],\n    };\n  },\n});\n\n// Required params\n// proName\naddEmailConfig(EMAIL_IDS.REFER_USER, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ ctaUrl, ...rest }, { title, body, cta, ...rest2 }) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: ctaUrl },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.FIND_LENDER_NOTIFICATION, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ loanId }, { title, body, cta }) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        {\n          name: variables.CTA_URL,\n          content: `${CTA_URL_DEFAULT}/loans/${loanId}/financing`,\n        },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.CONFIRM_USER_INVITATION, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\naddEmailConfig(EMAIL_IDS.LOAN_CHECKLIST, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA_V2,\n  createOverrides(\n    {\n      loan,\n      customMessage = '',\n      assigneeName = 'e-Potek',\n      assigneeAddress = 'info@e-potek.ch',\n      ...rest\n    },\n    { title, cta, ...rest2 },\n  ) {\n    const { variables } = this.template;\n    const ctaUrl = `${Meteor.settings.public.subdomains.app}/loans/${loan._id}`;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: customMessage },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: ctaUrl },\n        { name: variables.CSS, content: styles },\n      ],\n      templateContent: [\n        {\n          name: 'body-content-1',\n          content: ReactDOMServer.renderToStaticMarkup(LoanChecklistEmail({\n            loan,\n            intl: { formatMessage: Intl.formatMessage.bind(Intl) },\n          })),\n        },\n      ],\n      senderName: assigneeName,\n      senderAddress: assigneeAddress,\n      bccAddress: assigneeAddress,\n    };\n  },\n  createIntlValues: params => ({\n    ...params,\n    today: moment().format('DD MMM YYYY'),\n  }),\n});\n\nexport default emailConfigs;\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/email/server/emailConfigs.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/email/server/emailConfigs.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet ReactDOMServer;\nmodule.link(\"react-dom/server\", {\n  default(v) {\n    ReactDOMServer = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Intl;\nmodule.link(\"../../../utils/server/intl\", {\n  default(v) {\n    Intl = v;\n  }\n\n}, 3);\nlet EMAIL_TEMPLATES, EMAIL_IDS, CTA_URL_DEFAULT, FOOTER_TYPES, EPOTEK_PHONE;\nmodule.link(\"../emailConstants\", {\n  EMAIL_TEMPLATES(v) {\n    EMAIL_TEMPLATES = v;\n  },\n\n  EMAIL_IDS(v) {\n    EMAIL_IDS = v;\n  },\n\n  CTA_URL_DEFAULT(v) {\n    CTA_URL_DEFAULT = v;\n  },\n\n  FOOTER_TYPES(v) {\n    FOOTER_TYPES = v;\n  },\n\n  EPOTEK_PHONE(v) {\n    EPOTEK_PHONE = v;\n  }\n\n}, 4);\nlet getAccountsUrl, notificationTemplateDefaultOverride, notificationAndCtaTemplateDefaultOverride;\nmodule.link(\"./emailHelpers\", {\n  getAccountsUrl(v) {\n    getAccountsUrl = v;\n  },\n\n  notificationTemplateDefaultOverride(v) {\n    notificationTemplateDefaultOverride = v;\n  },\n\n  notificationAndCtaTemplateDefaultOverride(v) {\n    notificationAndCtaTemplateDefaultOverride = v;\n  }\n\n}, 5);\nlet PromotionLogos;\nmodule.link(\"./components/PromotionLogos\", {\n  default(v) {\n    PromotionLogos = v;\n  }\n\n}, 6);\nlet LoanChecklistEmail;\nmodule.link(\"../../../components/LoanChecklist/LoanChecklistEmail/LoanChecklistEmail\", {\n  default(v) {\n    LoanChecklistEmail = v;\n  }\n\n}, 7);\nlet styles;\nmodule.link(\"../../../components/LoanChecklist/LoanChecklistEmail/styles\", {\n  default(v) {\n    styles = v;\n  }\n\n}, 8);\nconst emailConfigs = {};\nconst emailDefaults = {\n  allowUnsubscribe: false,\n  footerType: FOOTER_TYPES.USER,\n  createIntlValues: params => (0, _objectSpread2.default)({\n    variables: []\n  }, params)\n};\n/**\n * addEmailConfig - A function that creates a config for a given emailId\n *\n * @param {String} emailId A unique id representing the email, from EMAIL_IDS\n * @param {Object} config A config object that can have the following keys:\n * {Object} template A template object from EMAIL_TEMPLATES\n * {Boolean} allowUnsubscribe Defines whether the email will be rendered with\n * a footer that allows the user to unsubscribe to notifications.\n * default is `false`\n * {Function} createOverrides A function that gets the params and\n * returns an object with overrides for the email template\n * {Function} createIntlValues A function that gets the params and\n * returns an object with intl values that need to be injected inside of the\n * i18n strings\n */\n\nconst addEmailConfig = (emailId, config) => {\n  if (config.template === EMAIL_TEMPLATES.NOTIFICATION) {\n    emailConfigs[emailId] = (0, _objectSpread2.default)({\n      createOverrides: notificationTemplateDefaultOverride\n    }, emailDefaults, config);\n  } else if (config.template === EMAIL_TEMPLATES.NOTIFICATION_AND_CTA) {\n    emailConfigs[emailId] = (0, _objectSpread2.default)({\n      createOverrides: notificationAndCtaTemplateDefaultOverride\n    }, emailDefaults, config);\n  } else {\n    emailConfigs[emailId] = (0, _objectSpread2.default)({}, emailDefaults, config);\n  }\n};\n\naddEmailConfig(EMAIL_IDS.VERIFY_EMAIL, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n\n  createOverrides({\n    user,\n    url\n  }, {\n    title,\n    body,\n    cta\n  }) {\n    const {\n      variables\n    } = this.template;\n    const verifyUrl = getAccountsUrl('verify-email')(user, url);\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: verifyUrl\n      }]\n    };\n  }\n\n});\naddEmailConfig(EMAIL_IDS.RESET_PASSWORD, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n\n  createOverrides({\n    user,\n    url\n  }, {\n    title,\n    body,\n    cta\n  }) {\n    const {\n      variables\n    } = this.template;\n    const resetPasswordUrl = getAccountsUrl('reset-password')(user, url);\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: resetPasswordUrl || CTA_URL_DEFAULT\n      }]\n    };\n  }\n\n});\naddEmailConfig(EMAIL_IDS.ENROLL_ACCOUNT, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n\n  createOverrides({\n    user,\n    url\n  }, {\n    title,\n    body,\n    cta\n  }) {\n    const {\n      variables\n    } = this.template;\n    const enrollUrl = getAccountsUrl('enroll-account')(user, url);\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: enrollUrl || CTA_URL_DEFAULT\n      }]\n    };\n  }\n\n});\naddEmailConfig(EMAIL_IDS.VERIFICATION_REQUESTED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION\n});\naddEmailConfig(EMAIL_IDS.VERIFICATION_ERROR, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA\n});\naddEmailConfig(EMAIL_IDS.VERIFICATION_PASSED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA\n});\n\nconst getFirstName = string => string.trim().split(' ')[0];\n\naddEmailConfig(EMAIL_IDS.CONTACT_US, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n  footerType: FOOTER_TYPES.VISITOR,\n  createIntlValues: params => (0, _objectSpread2.default)({}, params, {\n    // Only show first names to clients\n    name: getFirstName(params.name),\n    // params.details check is required because details is optional\n    //  and it breaks react-intl if not provided\n    details: params.details || ''\n  })\n});\naddEmailConfig(EMAIL_IDS.CONTACT_US_ADMIN, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n  footerType: FOOTER_TYPES.VISITOR,\n  createIntlValues: params => (0, _objectSpread2.default)({}, params, {\n    details: params.details || 'Pas de message'\n  })\n});\naddEmailConfig(EMAIL_IDS.INVITE_USER_TO_PROMOTION, {\n  template: EMAIL_TEMPLATES.PROMOTION_INVITATION,\n\n  createOverrides({\n    coverImageUrl,\n    logoUrls = [],\n    ctaUrl\n  }, {\n    title,\n    body,\n    cta\n  }) {\n    const {\n      variables\n    } = this.template;\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: ctaUrl || CTA_URL_DEFAULT\n      }, {\n        name: variables.COVER_IMAGE_URL,\n        content: coverImageUrl\n      }],\n      senderName: 'e-Potek',\n      templateContent: [{\n        name: 'logos',\n        content: ReactDOMServer.renderToStaticMarkup(PromotionLogos({\n          logoUrls\n        }))\n      }]\n    };\n  },\n\n  createIntlValues: params => (0, _objectSpread2.default)({}, params, {\n    promotionName: params.promotion.name,\n    phoneNumber: params.promotion.contacts.length && params.promotion.contacts[0].phoneNumber,\n    name: params.promotion.contacts.length && params.promotion.contacts[0].name,\n    epotekNumber: EPOTEK_PHONE,\n    assignedEmployeeName: params.promotion.assignedEmployee && params.promotion.assignedEmployee.name || 'Yannis Eggert',\n    assignedEmployeeFirstName: params.promotion.assignedEmployee && params.promotion.assignedEmployee.firstName || 'Yannis',\n    assignedEmployeePhone: params.promotion.assignedEmployee && params.promotion.assignedEmployee.phoneNumbers[0] || EPOTEK_PHONE,\n    invitedBy: params.invitedBy || 'e-Potek'\n  })\n});\naddEmailConfig(EMAIL_IDS.SEND_FEEDBACK_TO_LENDER, {\n  template: EMAIL_TEMPLATES.SIMPLE,\n\n  createOverrides({\n    assigneeName = 'e-Potek',\n    assigneeAddress = 'financements@e-potek.ch',\n    feedback\n  }, {\n    title\n  }) {\n    const {\n      variables\n    } = this.template;\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: feedback\n      }],\n      senderName: assigneeName,\n      senderAddress: assigneeAddress,\n      bccAddress: assigneeAddress\n    };\n  }\n\n}); // Required params:\n// proName\n// address\n// ctaUrl\n\naddEmailConfig(EMAIL_IDS.INVITE_USER_TO_PROPERTY, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n\n  createOverrides({\n    ctaUrl\n  }, {\n    title,\n    body,\n    cta\n  }) {\n    const {\n      variables\n    } = this.template;\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: ctaUrl\n      }]\n    };\n  }\n\n}); // Required params\n// proName\n\naddEmailConfig(EMAIL_IDS.REFER_USER, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n\n  createOverrides(_ref2, _ref) {\n    let {\n      ctaUrl\n    } = _ref2,\n        rest = (0, _objectWithoutProperties2.default)(_ref2, [\"ctaUrl\"]);\n    let {\n      title,\n      body,\n      cta\n    } = _ref,\n        rest2 = (0, _objectWithoutProperties2.default)(_ref, [\"title\", \"body\", \"cta\"]);\n    const {\n      variables\n    } = this.template;\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: ctaUrl\n      }]\n    };\n  }\n\n});\naddEmailConfig(EMAIL_IDS.FIND_LENDER_NOTIFICATION, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n\n  createOverrides({\n    loanId\n  }, {\n    title,\n    body,\n    cta\n  }) {\n    const {\n      variables\n    } = this.template;\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: body\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: `${CTA_URL_DEFAULT}/loans/${loanId}/financing`\n      }]\n    };\n  }\n\n});\naddEmailConfig(EMAIL_IDS.CONFIRM_USER_INVITATION, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA\n});\naddEmailConfig(EMAIL_IDS.LOAN_CHECKLIST, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA_V2,\n\n  createOverrides(_ref4, _ref3) {\n    let {\n      loan,\n      customMessage = '',\n      assigneeName = 'e-Potek',\n      assigneeAddress = 'info@e-potek.ch'\n    } = _ref4,\n        rest = (0, _objectWithoutProperties2.default)(_ref4, [\"loan\", \"customMessage\", \"assigneeName\", \"assigneeAddress\"]);\n    let {\n      title,\n      cta\n    } = _ref3,\n        rest2 = (0, _objectWithoutProperties2.default)(_ref3, [\"title\", \"cta\"]);\n    const {\n      variables\n    } = this.template;\n    const ctaUrl = `${Meteor.settings.public.subdomains.app}/loans/${loan._id}`;\n    return {\n      variables: [{\n        name: variables.TITLE,\n        content: title\n      }, {\n        name: variables.BODY,\n        content: customMessage\n      }, {\n        name: variables.CTA,\n        content: cta\n      }, {\n        name: variables.CTA_URL,\n        content: ctaUrl\n      }, {\n        name: variables.CSS,\n        content: styles\n      }],\n      templateContent: [{\n        name: 'body-content-1',\n        content: ReactDOMServer.renderToStaticMarkup(LoanChecklistEmail({\n          loan,\n          intl: {\n            formatMessage: Intl.formatMessage.bind(Intl)\n          }\n        }))\n      }],\n      senderName: assigneeName,\n      senderAddress: assigneeAddress,\n      bccAddress: assigneeAddress\n    };\n  },\n\n  createIntlValues: params => (0, _objectSpread2.default)({}, params, {\n    today: moment().format('DD MMM YYYY')\n  })\n});\nmodule.exportDefault(emailConfigs);","map":{"version":3,"sources":["imports/core/api/email/server/emailConfigs.js"],"names":["ReactDOMServer","emailConfigs","emailDefaults","allowUnsubscribe","footerType","FOOTER_TYPES","createIntlValues","params","variables","addEmailConfig","config","EMAIL_TEMPLATES","createOverrides","EMAIL_IDS","template","url","cta","verifyUrl","getAccountsUrl","name","content","title","body","resetPasswordUrl","CTA_URL_DEFAULT","enrollUrl","NOTIFICATION","NOTIFICATION_AND_CTA","getFirstName","string","details","logoUrls","ctaUrl","coverImageUrl","senderName","templateContent","PromotionLogos","promotionName","phoneNumber","epotekNumber","assignedEmployeeName","assignedEmployeeFirstName","assignedEmployeePhone","invitedBy","assigneeName","assigneeAddress","feedback","senderAddress","bccAddress","rest","rest2","loanId","customMessage","Meteor","app","loan","_id","styles","LoanChecklistEmail","intl","formatMessage","Intl","today","moment"],"mappings":"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","sourcesContent":["import ReactDOMServer from 'react-dom/server';\nimport moment from 'moment';\nimport { Meteor } from 'meteor/meteor';\n\nimport Intl from 'core/utils/server/intl';\nimport {\n  EMAIL_TEMPLATES,\n  EMAIL_IDS,\n  CTA_URL_DEFAULT,\n  FOOTER_TYPES,\n  EPOTEK_PHONE,\n} from '../emailConstants';\nimport {\n  getAccountsUrl,\n  notificationTemplateDefaultOverride,\n  notificationAndCtaTemplateDefaultOverride,\n} from './emailHelpers';\nimport PromotionLogos from './components/PromotionLogos';\nimport LoanChecklistEmail from '../../../components/LoanChecklist/LoanChecklistEmail/LoanChecklistEmail';\nimport styles from '../../../components/LoanChecklist/LoanChecklistEmail/styles';\n\nconst emailConfigs = {};\n\nconst emailDefaults = {\n  allowUnsubscribe: false,\n  footerType: FOOTER_TYPES.USER,\n  createIntlValues: params => ({ variables: [], ...params }),\n};\n\n/**\n * addEmailConfig - A function that creates a config for a given emailId\n *\n * @param {String} emailId A unique id representing the email, from EMAIL_IDS\n * @param {Object} config A config object that can have the following keys:\n * {Object} template A template object from EMAIL_TEMPLATES\n * {Boolean} allowUnsubscribe Defines whether the email will be rendered with\n * a footer that allows the user to unsubscribe to notifications.\n * default is `false`\n * {Function} createOverrides A function that gets the params and\n * returns an object with overrides for the email template\n * {Function} createIntlValues A function that gets the params and\n * returns an object with intl values that need to be injected inside of the\n * i18n strings\n */\nconst addEmailConfig = (emailId, config) => {\n  if (config.template === EMAIL_TEMPLATES.NOTIFICATION) {\n    emailConfigs[emailId] = {\n      createOverrides: notificationTemplateDefaultOverride,\n      ...emailDefaults,\n      ...config,\n    };\n  } else if (config.template === EMAIL_TEMPLATES.NOTIFICATION_AND_CTA) {\n    emailConfigs[emailId] = {\n      createOverrides: notificationAndCtaTemplateDefaultOverride,\n      ...emailDefaults,\n      ...config,\n    };\n  } else {\n    emailConfigs[emailId] = { ...emailDefaults, ...config };\n  }\n};\n\naddEmailConfig(EMAIL_IDS.VERIFY_EMAIL, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ user, url }, { title, body, cta }) {\n    const { variables } = this.template;\n    const verifyUrl = getAccountsUrl('verify-email')(user, url);\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: verifyUrl },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.RESET_PASSWORD, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ user, url }, { title, body, cta }) {\n    const { variables } = this.template;\n    const resetPasswordUrl = getAccountsUrl('reset-password')(user, url);\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        {\n          name: variables.CTA_URL,\n          content: resetPasswordUrl || CTA_URL_DEFAULT,\n        },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.ENROLL_ACCOUNT, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ user, url }, { title, body, cta }) {\n    const { variables } = this.template;\n    const enrollUrl = getAccountsUrl('enroll-account')(user, url);\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: enrollUrl || CTA_URL_DEFAULT },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.VERIFICATION_REQUESTED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n});\n\naddEmailConfig(EMAIL_IDS.VERIFICATION_ERROR, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\naddEmailConfig(EMAIL_IDS.VERIFICATION_PASSED, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\nconst getFirstName = string => string.trim().split(' ')[0];\n\naddEmailConfig(EMAIL_IDS.CONTACT_US, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n  footerType: FOOTER_TYPES.VISITOR,\n  createIntlValues: params => ({\n    ...params,\n    // Only show first names to clients\n    name: getFirstName(params.name),\n    // params.details check is required because details is optional\n    //  and it breaks react-intl if not provided\n    details: params.details || '',\n  }),\n});\n\naddEmailConfig(EMAIL_IDS.CONTACT_US_ADMIN, {\n  template: EMAIL_TEMPLATES.NOTIFICATION,\n  footerType: FOOTER_TYPES.VISITOR,\n  createIntlValues: params => ({\n    ...params,\n    details: params.details || 'Pas de message',\n  }),\n});\n\naddEmailConfig(EMAIL_IDS.INVITE_USER_TO_PROMOTION, {\n  template: EMAIL_TEMPLATES.PROMOTION_INVITATION,\n  createOverrides(\n    { coverImageUrl, logoUrls = [], ctaUrl },\n    { title, body, cta },\n  ) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: ctaUrl || CTA_URL_DEFAULT },\n        { name: variables.COVER_IMAGE_URL, content: coverImageUrl },\n      ],\n      senderName: 'e-Potek',\n      templateContent: [\n        {\n          name: 'logos',\n          content: ReactDOMServer.renderToStaticMarkup(PromotionLogos({ logoUrls })),\n        },\n      ],\n    };\n  },\n  createIntlValues: params => ({\n    ...params,\n    promotionName: params.promotion.name,\n    phoneNumber:\n      params.promotion.contacts.length\n      && params.promotion.contacts[0].phoneNumber,\n    name: params.promotion.contacts.length && params.promotion.contacts[0].name,\n    epotekNumber: EPOTEK_PHONE,\n    assignedEmployeeName:\n      (params.promotion.assignedEmployee\n        && params.promotion.assignedEmployee.name)\n      || 'Yannis Eggert',\n    assignedEmployeeFirstName:\n      (params.promotion.assignedEmployee\n        && params.promotion.assignedEmployee.firstName)\n      || 'Yannis',\n    assignedEmployeePhone:\n      (params.promotion.assignedEmployee\n        && params.promotion.assignedEmployee.phoneNumbers[0])\n      || EPOTEK_PHONE,\n    invitedBy: params.invitedBy || 'e-Potek',\n  }),\n});\n\naddEmailConfig(EMAIL_IDS.SEND_FEEDBACK_TO_LENDER, {\n  template: EMAIL_TEMPLATES.SIMPLE,\n  createOverrides(\n    {\n      assigneeName = 'e-Potek',\n      assigneeAddress = 'financements@e-potek.ch',\n      feedback,\n    },\n    { title },\n  ) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: feedback },\n      ],\n      senderName: assigneeName,\n      senderAddress: assigneeAddress,\n      bccAddress: assigneeAddress,\n    };\n  },\n});\n\n// Required params:\n// proName\n// address\n// ctaUrl\naddEmailConfig(EMAIL_IDS.INVITE_USER_TO_PROPERTY, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ ctaUrl }, { title, body, cta }) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: ctaUrl },\n      ],\n    };\n  },\n});\n\n// Required params\n// proName\naddEmailConfig(EMAIL_IDS.REFER_USER, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ ctaUrl, ...rest }, { title, body, cta, ...rest2 }) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: ctaUrl },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.FIND_LENDER_NOTIFICATION, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n  createOverrides({ loanId }, { title, body, cta }) {\n    const { variables } = this.template;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: body },\n        { name: variables.CTA, content: cta },\n        {\n          name: variables.CTA_URL,\n          content: `${CTA_URL_DEFAULT}/loans/${loanId}/financing`,\n        },\n      ],\n    };\n  },\n});\n\naddEmailConfig(EMAIL_IDS.CONFIRM_USER_INVITATION, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA,\n});\n\naddEmailConfig(EMAIL_IDS.LOAN_CHECKLIST, {\n  template: EMAIL_TEMPLATES.NOTIFICATION_AND_CTA_V2,\n  createOverrides(\n    {\n      loan,\n      customMessage = '',\n      assigneeName = 'e-Potek',\n      assigneeAddress = 'info@e-potek.ch',\n      ...rest\n    },\n    { title, cta, ...rest2 },\n  ) {\n    const { variables } = this.template;\n    const ctaUrl = `${Meteor.settings.public.subdomains.app}/loans/${loan._id}`;\n\n    return {\n      variables: [\n        { name: variables.TITLE, content: title },\n        { name: variables.BODY, content: customMessage },\n        { name: variables.CTA, content: cta },\n        { name: variables.CTA_URL, content: ctaUrl },\n        { name: variables.CSS, content: styles },\n      ],\n      templateContent: [\n        {\n          name: 'body-content-1',\n          content: ReactDOMServer.renderToStaticMarkup(LoanChecklistEmail({\n            loan,\n            intl: { formatMessage: Intl.formatMessage.bind(Intl) },\n          })),\n        },\n      ],\n      senderName: assigneeName,\n      senderAddress: assigneeAddress,\n      bccAddress: assigneeAddress,\n    };\n  },\n  createIntlValues: params => ({\n    ...params,\n    today: moment().format('DD MMM YYYY'),\n  }),\n});\n\nexport default emailConfigs;\n"]},"sourceType":"script","hash":"80fdd2f71d3cd4754f8269dd873880b066837f0e"}
