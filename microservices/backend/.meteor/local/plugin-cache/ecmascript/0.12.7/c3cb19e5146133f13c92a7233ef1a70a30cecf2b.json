{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher-react/legacy/createQueryContainer.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/cultofcoders:grapher-react/legacy/createQueryContainer.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher-react/legacy/createQueryContainer.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher-react/legacy/createQueryContainer.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher-react/legacy/createQueryContainer.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet createContainer;\nmodule.link(\"meteor/react-meteor-data\", {\n  createContainer(v) {\n    createContainer = v;\n  }\n\n}, 1);\nmodule.exportDefault((query, component, options = {}) => {\n  if (Meteor.isDevelopment) {\n    console.warn('createQueryContainer() is deprecated, please use withQuery() instead');\n  }\n\n  if (options.reactive) {\n    return createContainer(props => {\n      if (props.params) {\n        query.setParams(props.params);\n      }\n\n      const handler = query.subscribe();\n      return (0, _objectSpread2.default)({\n        query,\n        loading: !handler.ready(),\n        [options.dataProp]: options.single ? _.first(query.fetch()) : query.fetch()\n      }, props);\n    }, component);\n  }\n\n  class MethodQueryComponent extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        [options.dataProp]: undefined,\n        error: undefined,\n        loading: true\n      };\n    }\n\n    componentWillReceiveProps(nextProps) {\n      this._fetch(nextProps.params);\n    }\n\n    componentDidMount() {\n      this._fetch(this.props.params);\n    }\n\n    _fetch(params) {\n      if (params) {\n        query.setParams(params);\n      }\n\n      query.fetch((error, data) => {\n        const state = {\n          error,\n          [options.dataProp]: options.single ? _.first(data) : data,\n          loading: false\n        };\n        this.setState(state);\n      });\n    }\n\n    render() {\n      const {\n        state,\n        props\n      } = this;\n      return React.createElement(component, (0, _objectSpread2.default)({\n        query\n      }, state, props));\n    }\n\n  }\n\n  MethodQueryComponent.propTypes = {\n    params: React.PropTypes.object\n  };\n  return MethodQueryComponent;\n});","map":{"version":3,"sources":["packages/cultofcoders:grapher-react/legacy/createQueryContainer.js"],"names":["React","module","link","default","v","createContainer","exportDefault","query","component","options","Meteor","isDevelopment","console","warn","reactive","props","params","setParams","handler","subscribe","loading","ready","dataProp","single","_","first","fetch","MethodQueryComponent","Component","constructor","state","undefined","error","componentWillReceiveProps","nextProps","_fetch","componentDidMount","data","setState","render","createElement","propTypes","PropTypes","object"],"mappings":";;;;AAAA,IAAIA,KAAJ;AAAUC,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,KAAK,GAACI,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIC,eAAJ;AAAoBJ,MAAM,CAACC,IAAP,CAAY,0BAAZ,EAAuC;AAACG,EAAAA,eAAe,CAACD,CAAD,EAAG;AAACC,IAAAA,eAAe,GAACD,CAAhB;AAAkB;;AAAtC,CAAvC,EAA+E,CAA/E;AAA3EH,MAAM,CAACK,aAAP,CAGe,CAACC,KAAD,EAAQC,SAAR,EAAmBC,OAAO,GAAG,EAA7B,KAAoC;AAC/C,MAAIC,MAAM,CAACC,aAAX,EAA0B;AACtBC,IAAAA,OAAO,CAACC,IAAR,CAAa,sEAAb;AACH;;AAED,MAAIJ,OAAO,CAACK,QAAZ,EAAsB;AAClB,WAAOT,eAAe,CAAEU,KAAD,IAAW;AAC9B,UAAIA,KAAK,CAACC,MAAV,EAAkB;AACdT,QAAAA,KAAK,CAACU,SAAN,CAAgBF,KAAK,CAACC,MAAtB;AACH;;AAED,YAAME,OAAO,GAAGX,KAAK,CAACY,SAAN,EAAhB;AAEA;AACIZ,QAAAA,KADJ;AAEIa,QAAAA,OAAO,EAAE,CAACF,OAAO,CAACG,KAAR,EAFd;AAGI,SAACZ,OAAO,CAACa,QAAT,GAAoBb,OAAO,CAACc,MAAR,GAAiBC,CAAC,CAACC,KAAF,CAAQlB,KAAK,CAACmB,KAAN,EAAR,CAAjB,GAA0CnB,KAAK,CAACmB,KAAN;AAHlE,SAIOX,KAJP;AAMH,KAbqB,EAanBP,SAbmB,CAAtB;AAcH;;AAED,QAAMmB,oBAAN,SAAmC3B,KAAK,CAAC4B,SAAzC,CAAmD;AAC/CC,IAAAA,WAAW,GAAG;AACV;AACA,WAAKC,KAAL,GAAa;AACT,SAACrB,OAAO,CAACa,QAAT,GAAoBS,SADX;AAETC,QAAAA,KAAK,EAAED,SAFE;AAGTX,QAAAA,OAAO,EAAE;AAHA,OAAb;AAKH;;AAEDa,IAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,WAAKC,MAAL,CAAYD,SAAS,CAAClB,MAAtB;AACH;;AAEDoB,IAAAA,iBAAiB,GAAG;AAChB,WAAKD,MAAL,CAAY,KAAKpB,KAAL,CAAWC,MAAvB;AACH;;AAEDmB,IAAAA,MAAM,CAACnB,MAAD,EAAS;AACX,UAAIA,MAAJ,EAAY;AACRT,QAAAA,KAAK,CAACU,SAAN,CAAgBD,MAAhB;AACH;;AAEDT,MAAAA,KAAK,CAACmB,KAAN,CAAY,CAACM,KAAD,EAAQK,IAAR,KAAiB;AACzB,cAAMP,KAAK,GAAG;AACVE,UAAAA,KADU;AAEV,WAACvB,OAAO,CAACa,QAAT,GAAoBb,OAAO,CAACc,MAAR,GAAiBC,CAAC,CAACC,KAAF,CAAQY,IAAR,CAAjB,GAAiCA,IAF3C;AAGVjB,UAAAA,OAAO,EAAE;AAHC,SAAd;AAMA,aAAKkB,QAAL,CAAcR,KAAd;AACH,OARD;AASH;;AAEDS,IAAAA,MAAM,GAAG;AACL,YAAM;AAACT,QAAAA,KAAD;AAAQf,QAAAA;AAAR,UAAiB,IAAvB;AAEA,aAAOf,KAAK,CAACwC,aAAN,CAAoBhC,SAApB;AACHD,QAAAA;AADG,SAEAuB,KAFA,EAGAf,KAHA,EAAP;AAKH;;AA1C8C;;AA6CnDY,EAAAA,oBAAoB,CAACc,SAArB,GAAiC;AAC7BzB,IAAAA,MAAM,EAAEhB,KAAK,CAAC0C,SAAN,CAAgBC;AADK,GAAjC;AAIA,SAAOhB,oBAAP;AACH,CA3ED","sourcesContent":["import React from 'react';\nimport {createContainer} from 'meteor/react-meteor-data';\n\nexport default (query, component, options = {}) => {\n    if (Meteor.isDevelopment) {\n        console.warn('createQueryContainer() is deprecated, please use withQuery() instead')\n    }\n\n    if (options.reactive) {\n        return createContainer((props) => {\n            if (props.params) {\n                query.setParams(props.params);\n            }\n\n            const handler = query.subscribe();\n\n            return {\n                query,\n                loading: !handler.ready(),\n                [options.dataProp]: options.single ? _.first(query.fetch()) : query.fetch(),\n                ...props\n            }\n        }, component);\n    }\n\n    class MethodQueryComponent extends React.Component {\n        constructor() {\n            super();\n            this.state = {\n                [options.dataProp]: undefined,\n                error: undefined,\n                loading: true\n            }\n        }\n\n        componentWillReceiveProps(nextProps) {\n            this._fetch(nextProps.params);\n        }\n\n        componentDidMount() {\n            this._fetch(this.props.params);\n        }\n\n        _fetch(params) {\n            if (params) {\n                query.setParams(params);\n            }\n\n            query.fetch((error, data) => {\n                const state = {\n                    error,\n                    [options.dataProp]: options.single ? _.first(data) : data,\n                    loading: false\n                };\n\n                this.setState(state);\n            });\n        }\n\n        render() {\n            const {state, props} = this;\n\n            return React.createElement(component, {\n                query,\n                ...state,\n                ...props\n            })\n        }\n    }\n\n    MethodQueryComponent.propTypes = {\n        params: React.PropTypes.object\n    };\n\n    return MethodQueryComponent;\n}"]},"sourceType":"script","hash":"c3cb19e5146133f13c92a7233ef1a70a30cecf2b"}
