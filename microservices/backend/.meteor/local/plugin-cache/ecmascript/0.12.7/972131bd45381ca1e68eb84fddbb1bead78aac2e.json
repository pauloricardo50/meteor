{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/CollectionService.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/api/helpers/CollectionService.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/CollectionService.js","inputSourceMap":{"version":3,"sources":["imports/core/api/helpers/CollectionService.js"],"names":["Meteor","CollectionService","constructor","collection","Error","insert","object","_update","id","operator","Object","keys","length","update","baseUpdate","args","remove","get","findOne","safeGet","result","_name","find","checkQuery","body","$filter","createQuery","fetchOne","safeFetchOne","$filters","arg","JSON","stringify","fetch","getLink","count","getCount","countAll","getAll","rawCollection","exists","_id","fields","aggregate","addLink","linkName","linkId","metadata","linker","strategy","set","add","removeLink","split","unset","updateLinkMetadata","getAssignedEmployee","assignee","getAdditionalDocLabel","label","additionalDoc","undefined","setAdditionalDoc","additionalDocId","requiredByAdmin","category","additionalDocuments","doc","additionalDocumentsUpdate","filter","removeAdditionalDoc","docId"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nclass CollectionService {\n  constructor(collection) {\n    if (!collection) {\n      throw new Error('A collection is needed in CollectionService, but none was passed');\n    }\n    this.collection = collection;\n  }\n\n  insert(object = {}) {\n    return this.collection.insert(object);\n  }\n\n  _update({ id, object, operator = '$set' }) {\n    if (Object.keys(object).length > 0) {\n      // debugger;\n      return this.collection.update(id, { [operator]: object });\n    }\n    return null;\n  }\n\n  baseUpdate(...args) {\n    return this.collection.update(...args);\n  }\n\n  remove(...args) {\n    return this.collection.remove(...args);\n  }\n\n  get(id) {\n    return this.collection.findOne(id);\n  }\n\n  safeGet(id) {\n    const result = this.get(id);\n\n    if (!result) {\n      throw new Meteor.Error(`Could not find object with id \"${id}\" in collection \"${\n        this.collection._name\n      }\"`);\n    }\n\n    return result;\n  }\n\n  find(...args) {\n    return this.collection.find(...args);\n  }\n\n  findOne(...args) {\n    return this.collection.findOne(...args);\n  }\n\n  checkQuery(body) {\n    if (body && body.$filter) {\n      throw new Meteor.Error('$filter found in query body, did you mean $filters?');\n    }\n  }\n\n  createQuery(...args) {\n    this.checkQuery(args[0]);\n    return this.collection.createQuery(...args);\n  }\n\n  fetchOne(...args) {\n    this.checkQuery(args[0]);\n    return this.createQuery(...args).fetchOne();\n  }\n\n  safeFetchOne(...args) {\n    const { $filters = {} } = args.find(arg => arg.$filters);\n    const result = this.fetchOne(...args);\n\n    if (!result) {\n      throw new Meteor.Error(`Could not find object with filters \"${JSON.stringify($filters)}\" in collection \"${this.collection._name}\"`);\n    }\n\n    return result;\n  }\n\n  fetch(...args) {\n    this.checkQuery(args[0]);\n    return this.createQuery(...args).fetch();\n  }\n\n  getLink(...args) {\n    return this.collection.getLink(...args);\n  }\n\n  count(...args) {\n    this.checkQuery(args[0]);\n    return this.createQuery(...args).getCount();\n  }\n\n  countAll() {\n    return this.find({}).count();\n  }\n\n  getAll() {\n    return this.find({}).fetch();\n  }\n\n  get rawCollection() {\n    return this.collection.rawCollection();\n  }\n\n  exists(_id) {\n    return !!(_id && this.findOne({ _id }, { fields: { _id: 1 } }));\n  }\n\n  aggregate(...args) {\n    return this.rawCollection.aggregate(...args);\n  }\n\n  // Don't return the results from linker\n  addLink({ id, linkName, linkId, metadata = {} }) {\n    const linker = this.collection.getLink(id, linkName);\n    const {\n      linker: { strategy },\n    } = linker;\n\n    switch (strategy) {\n    case 'one':\n      linker.set(linkId);\n      return;\n    case 'many':\n      linker.add(linkId);\n      return;\n    case 'one-meta':\n      linker.set(linkId, metadata);\n      return;\n    case 'many-meta':\n      linker.add(linkId, metadata);\n      return;\n    default:\n      return null;\n    }\n  }\n\n  // Don't return the results from linker\n  removeLink({ id, linkName, linkId }) {\n    const linker = this.getLink(id, linkName);\n    const {\n      linker: { strategy },\n    } = linker;\n\n    switch (strategy.split('-')[0]) {\n    case 'one':\n      linker.unset(linkId);\n      return;\n    case 'many':\n      linker.remove(linkId);\n      return;\n    default:\n      return null;\n    }\n  }\n\n  updateLinkMetadata({ id, linkName, linkId, metadata }) {\n    const linker = this.getLink(id, linkName);\n    const {\n      linker: { strategy },\n    } = linker;\n\n    switch (strategy.split('-')[0]) {\n    case 'one':\n      linker.metadata(metadata);\n      return;\n    case 'many':\n      linker.metadata(linkId, metadata);\n      return;\n    default:\n      return null;\n    }\n  }\n\n  getAssignedEmployee({ id }) {\n    const { assignee } = this.fetchOne({ $filters: { _id: id }, assignee: 1 });\n\n    return assignee;\n  }\n\n  getAdditionalDocLabel({ label, additionalDoc }) {\n    if (label) {\n      return label;\n    }\n    if (additionalDoc.label) {\n      return additionalDoc.label;\n    }\n\n    return undefined;\n  }\n\n  setAdditionalDoc({ id, additionalDocId, requiredByAdmin, label, category }) {\n    const { additionalDocuments } = this.get(id);\n\n    const additionalDoc = additionalDocuments.find(doc => doc.id === additionalDocId);\n\n    if (additionalDoc) {\n      const additionalDocumentsUpdate = [\n        ...additionalDocuments.filter(doc => doc.id !== additionalDocId),\n        {\n          id: additionalDocId,\n          requiredByAdmin,\n          label: this.getAdditionalDocLabel({ label, additionalDoc }),\n          category,\n        },\n      ];\n      return this._update({\n        id,\n        object: { additionalDocuments: additionalDocumentsUpdate },\n      });\n    }\n\n    return this._update({\n      id,\n      object: {\n        additionalDocuments: [\n          ...additionalDocuments,\n          { id: additionalDocId, requiredByAdmin, label, category },\n        ],\n      },\n    });\n  }\n\n  removeAdditionalDoc({ id: docId, additionalDocId }) {\n    const { additionalDocuments = [] } = this.get(docId);\n    return this._update({\n      id: docId,\n      object: {\n        additionalDocuments: additionalDocuments.filter(({ id }) => id !== additionalDocId),\n      },\n    });\n  }\n}\n\nexport default CollectionService;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/helpers/CollectionService.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/helpers/CollectionService.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\n\nvar CollectionService =\n/*#__PURE__*/\nfunction () {\n  function CollectionService(collection) {\n    if (!collection) {\n      throw new Error('A collection is needed in CollectionService, but none was passed');\n    }\n\n    this.collection = collection;\n  }\n\n  var _proto = CollectionService.prototype;\n\n  _proto.insert = function () {\n    function insert() {\n      var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.collection.insert(object);\n    }\n\n    return insert;\n  }();\n\n  _proto._update = function () {\n    function _update(_ref) {\n      var id = _ref.id,\n          object = _ref.object,\n          _ref$operator = _ref.operator,\n          operator = _ref$operator === void 0 ? '$set' : _ref$operator;\n\n      if (Object.keys(object).length > 0) {\n        var _this$collection$upda;\n\n        // debugger;\n        return this.collection.update(id, (_this$collection$upda = {}, _this$collection$upda[operator] = object, _this$collection$upda));\n      }\n\n      return null;\n    }\n\n    return _update;\n  }();\n\n  _proto.baseUpdate = function () {\n    function baseUpdate() {\n      var _this$collection;\n\n      return (_this$collection = this.collection).update.apply(_this$collection, arguments);\n    }\n\n    return baseUpdate;\n  }();\n\n  _proto.remove = function () {\n    function remove() {\n      var _this$collection2;\n\n      return (_this$collection2 = this.collection).remove.apply(_this$collection2, arguments);\n    }\n\n    return remove;\n  }();\n\n  _proto.get = function () {\n    function get(id) {\n      return this.collection.findOne(id);\n    }\n\n    return get;\n  }();\n\n  _proto.safeGet = function () {\n    function safeGet(id) {\n      var result = this.get(id);\n\n      if (!result) {\n        throw new Meteor.Error(\"Could not find object with id \\\"\" + id + \"\\\" in collection \\\"\" + this.collection._name + \"\\\"\");\n      }\n\n      return result;\n    }\n\n    return safeGet;\n  }();\n\n  _proto.find = function () {\n    function find() {\n      var _this$collection3;\n\n      return (_this$collection3 = this.collection).find.apply(_this$collection3, arguments);\n    }\n\n    return find;\n  }();\n\n  _proto.findOne = function () {\n    function findOne() {\n      var _this$collection4;\n\n      return (_this$collection4 = this.collection).findOne.apply(_this$collection4, arguments);\n    }\n\n    return findOne;\n  }();\n\n  _proto.checkQuery = function () {\n    function checkQuery(body) {\n      if (body && body.$filter) {\n        throw new Meteor.Error('$filter found in query body, did you mean $filters?');\n      }\n    }\n\n    return checkQuery;\n  }();\n\n  _proto.createQuery = function () {\n    function createQuery() {\n      var _this$collection5;\n\n      this.checkQuery(arguments.length <= 0 ? undefined : arguments[0]);\n      return (_this$collection5 = this.collection).createQuery.apply(_this$collection5, arguments);\n    }\n\n    return createQuery;\n  }();\n\n  _proto.fetchOne = function () {\n    function fetchOne() {\n      this.checkQuery(arguments.length <= 0 ? undefined : arguments[0]);\n      return this.createQuery.apply(this, arguments).fetchOne();\n    }\n\n    return fetchOne;\n  }();\n\n  _proto.safeFetchOne = function () {\n    function safeFetchOne() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var _args$find = args.find(function (arg) {\n        return arg.$filters;\n      }),\n          _args$find$$filters = _args$find.$filters,\n          $filters = _args$find$$filters === void 0 ? {} : _args$find$$filters;\n\n      var result = this.fetchOne.apply(this, args);\n\n      if (!result) {\n        throw new Meteor.Error(\"Could not find object with filters \\\"\" + JSON.stringify($filters) + \"\\\" in collection \\\"\" + this.collection._name + \"\\\"\");\n      }\n\n      return result;\n    }\n\n    return safeFetchOne;\n  }();\n\n  _proto.fetch = function () {\n    function fetch() {\n      this.checkQuery(arguments.length <= 0 ? undefined : arguments[0]);\n      return this.createQuery.apply(this, arguments).fetch();\n    }\n\n    return fetch;\n  }();\n\n  _proto.getLink = function () {\n    function getLink() {\n      var _this$collection6;\n\n      return (_this$collection6 = this.collection).getLink.apply(_this$collection6, arguments);\n    }\n\n    return getLink;\n  }();\n\n  _proto.count = function () {\n    function count() {\n      this.checkQuery(arguments.length <= 0 ? undefined : arguments[0]);\n      return this.createQuery.apply(this, arguments).getCount();\n    }\n\n    return count;\n  }();\n\n  _proto.countAll = function () {\n    function countAll() {\n      return this.find({}).count();\n    }\n\n    return countAll;\n  }();\n\n  _proto.getAll = function () {\n    function getAll() {\n      return this.find({}).fetch();\n    }\n\n    return getAll;\n  }();\n\n  _proto.exists = function () {\n    function exists(_id) {\n      return !!(_id && this.findOne({\n        _id: _id\n      }, {\n        fields: {\n          _id: 1\n        }\n      }));\n    }\n\n    return exists;\n  }();\n\n  _proto.aggregate = function () {\n    function aggregate() {\n      var _this$rawCollection;\n\n      return (_this$rawCollection = this.rawCollection).aggregate.apply(_this$rawCollection, arguments);\n    }\n\n    return aggregate;\n  }() // Don't return the results from linker\n  ;\n\n  _proto.addLink = function () {\n    function addLink(_ref2) {\n      var id = _ref2.id,\n          linkName = _ref2.linkName,\n          linkId = _ref2.linkId,\n          _ref2$metadata = _ref2.metadata,\n          metadata = _ref2$metadata === void 0 ? {} : _ref2$metadata;\n      var linker = this.collection.getLink(id, linkName);\n      var strategy = linker.linker.strategy;\n\n      switch (strategy) {\n        case 'one':\n          linker.set(linkId);\n          return;\n\n        case 'many':\n          linker.add(linkId);\n          return;\n\n        case 'one-meta':\n          linker.set(linkId, metadata);\n          return;\n\n        case 'many-meta':\n          linker.add(linkId, metadata);\n          return;\n\n        default:\n          return null;\n      }\n    }\n\n    return addLink;\n  }() // Don't return the results from linker\n  ;\n\n  _proto.removeLink = function () {\n    function removeLink(_ref3) {\n      var id = _ref3.id,\n          linkName = _ref3.linkName,\n          linkId = _ref3.linkId;\n      var linker = this.getLink(id, linkName);\n      var strategy = linker.linker.strategy;\n\n      switch (strategy.split('-')[0]) {\n        case 'one':\n          linker.unset(linkId);\n          return;\n\n        case 'many':\n          linker.remove(linkId);\n          return;\n\n        default:\n          return null;\n      }\n    }\n\n    return removeLink;\n  }();\n\n  _proto.updateLinkMetadata = function () {\n    function updateLinkMetadata(_ref4) {\n      var id = _ref4.id,\n          linkName = _ref4.linkName,\n          linkId = _ref4.linkId,\n          metadata = _ref4.metadata;\n      var linker = this.getLink(id, linkName);\n      var strategy = linker.linker.strategy;\n\n      switch (strategy.split('-')[0]) {\n        case 'one':\n          linker.metadata(metadata);\n          return;\n\n        case 'many':\n          linker.metadata(linkId, metadata);\n          return;\n\n        default:\n          return null;\n      }\n    }\n\n    return updateLinkMetadata;\n  }();\n\n  _proto.getAssignedEmployee = function () {\n    function getAssignedEmployee(_ref5) {\n      var id = _ref5.id;\n\n      var _this$fetchOne = this.fetchOne({\n        $filters: {\n          _id: id\n        },\n        assignee: 1\n      }),\n          assignee = _this$fetchOne.assignee;\n\n      return assignee;\n    }\n\n    return getAssignedEmployee;\n  }();\n\n  _proto.getAdditionalDocLabel = function () {\n    function getAdditionalDocLabel(_ref6) {\n      var label = _ref6.label,\n          additionalDoc = _ref6.additionalDoc;\n\n      if (label) {\n        return label;\n      }\n\n      if (additionalDoc.label) {\n        return additionalDoc.label;\n      }\n\n      return undefined;\n    }\n\n    return getAdditionalDocLabel;\n  }();\n\n  _proto.setAdditionalDoc = function () {\n    function setAdditionalDoc(_ref7) {\n      var id = _ref7.id,\n          additionalDocId = _ref7.additionalDocId,\n          requiredByAdmin = _ref7.requiredByAdmin,\n          label = _ref7.label,\n          category = _ref7.category;\n\n      var _this$get = this.get(id),\n          additionalDocuments = _this$get.additionalDocuments;\n\n      var additionalDoc = additionalDocuments.find(function (doc) {\n        return doc.id === additionalDocId;\n      });\n\n      if (additionalDoc) {\n        var additionalDocumentsUpdate = [].concat((0, _toConsumableArray2.default)(additionalDocuments.filter(function (doc) {\n          return doc.id !== additionalDocId;\n        })), [{\n          id: additionalDocId,\n          requiredByAdmin: requiredByAdmin,\n          label: this.getAdditionalDocLabel({\n            label: label,\n            additionalDoc: additionalDoc\n          }),\n          category: category\n        }]);\n        return this._update({\n          id: id,\n          object: {\n            additionalDocuments: additionalDocumentsUpdate\n          }\n        });\n      }\n\n      return this._update({\n        id: id,\n        object: {\n          additionalDocuments: [].concat((0, _toConsumableArray2.default)(additionalDocuments), [{\n            id: additionalDocId,\n            requiredByAdmin: requiredByAdmin,\n            label: label,\n            category: category\n          }])\n        }\n      });\n    }\n\n    return setAdditionalDoc;\n  }();\n\n  _proto.removeAdditionalDoc = function () {\n    function removeAdditionalDoc(_ref8) {\n      var docId = _ref8.id,\n          additionalDocId = _ref8.additionalDocId;\n\n      var _this$get2 = this.get(docId),\n          _this$get2$additional = _this$get2.additionalDocuments,\n          additionalDocuments = _this$get2$additional === void 0 ? [] : _this$get2$additional;\n\n      return this._update({\n        id: docId,\n        object: {\n          additionalDocuments: additionalDocuments.filter(function (_ref9) {\n            var id = _ref9.id;\n            return id !== additionalDocId;\n          })\n        }\n      });\n    }\n\n    return removeAdditionalDoc;\n  }();\n\n  (0, _createClass2.default)(CollectionService, [{\n    key: \"rawCollection\",\n    get: function () {\n      return this.collection.rawCollection();\n    }\n  }]);\n  return CollectionService;\n}();\n\nmodule.exportDefault(CollectionService);","map":{"version":3,"sources":["imports/core/api/helpers/CollectionService.js"],"names":["constructor","insert","object","_update","operator","Object","baseUpdate","remove","get","safeGet","result","Meteor","id","find","findOne","checkQuery","body","createQuery","fetchOne","safeFetchOne","$filters","args","arg","JSON","fetch","getLink","count","countAll","getAll","exists","_id","fields","aggregate","addLink","metadata","linker","strategy","removeLink","linkId","updateLinkMetadata","getAssignedEmployee","assignee","getAdditionalDocLabel","additionalDoc","setAdditionalDoc","category","additionalDocuments","doc","additionalDocumentsUpdate","requiredByAdmin","label","removeAdditionalDoc","additionalDocId"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nclass CollectionService {\n  constructor(collection) {\n    if (!collection) {\n      throw new Error('A collection is needed in CollectionService, but none was passed');\n    }\n    this.collection = collection;\n  }\n\n  insert(object = {}) {\n    return this.collection.insert(object);\n  }\n\n  _update({ id, object, operator = '$set' }) {\n    if (Object.keys(object).length > 0) {\n      // debugger;\n      return this.collection.update(id, { [operator]: object });\n    }\n    return null;\n  }\n\n  baseUpdate(...args) {\n    return this.collection.update(...args);\n  }\n\n  remove(...args) {\n    return this.collection.remove(...args);\n  }\n\n  get(id) {\n    return this.collection.findOne(id);\n  }\n\n  safeGet(id) {\n    const result = this.get(id);\n\n    if (!result) {\n      throw new Meteor.Error(`Could not find object with id \"${id}\" in collection \"${\n        this.collection._name\n      }\"`);\n    }\n\n    return result;\n  }\n\n  find(...args) {\n    return this.collection.find(...args);\n  }\n\n  findOne(...args) {\n    return this.collection.findOne(...args);\n  }\n\n  checkQuery(body) {\n    if (body && body.$filter) {\n      throw new Meteor.Error('$filter found in query body, did you mean $filters?');\n    }\n  }\n\n  createQuery(...args) {\n    this.checkQuery(args[0]);\n    return this.collection.createQuery(...args);\n  }\n\n  fetchOne(...args) {\n    this.checkQuery(args[0]);\n    return this.createQuery(...args).fetchOne();\n  }\n\n  safeFetchOne(...args) {\n    const { $filters = {} } = args.find(arg => arg.$filters);\n    const result = this.fetchOne(...args);\n\n    if (!result) {\n      throw new Meteor.Error(`Could not find object with filters \"${JSON.stringify($filters)}\" in collection \"${this.collection._name}\"`);\n    }\n\n    return result;\n  }\n\n  fetch(...args) {\n    this.checkQuery(args[0]);\n    return this.createQuery(...args).fetch();\n  }\n\n  getLink(...args) {\n    return this.collection.getLink(...args);\n  }\n\n  count(...args) {\n    this.checkQuery(args[0]);\n    return this.createQuery(...args).getCount();\n  }\n\n  countAll() {\n    return this.find({}).count();\n  }\n\n  getAll() {\n    return this.find({}).fetch();\n  }\n\n  get rawCollection() {\n    return this.collection.rawCollection();\n  }\n\n  exists(_id) {\n    return !!(_id && this.findOne({ _id }, { fields: { _id: 1 } }));\n  }\n\n  aggregate(...args) {\n    return this.rawCollection.aggregate(...args);\n  }\n\n  // Don't return the results from linker\n  addLink({ id, linkName, linkId, metadata = {} }) {\n    const linker = this.collection.getLink(id, linkName);\n    const {\n      linker: { strategy },\n    } = linker;\n\n    switch (strategy) {\n    case 'one':\n      linker.set(linkId);\n      return;\n    case 'many':\n      linker.add(linkId);\n      return;\n    case 'one-meta':\n      linker.set(linkId, metadata);\n      return;\n    case 'many-meta':\n      linker.add(linkId, metadata);\n      return;\n    default:\n      return null;\n    }\n  }\n\n  // Don't return the results from linker\n  removeLink({ id, linkName, linkId }) {\n    const linker = this.getLink(id, linkName);\n    const {\n      linker: { strategy },\n    } = linker;\n\n    switch (strategy.split('-')[0]) {\n    case 'one':\n      linker.unset(linkId);\n      return;\n    case 'many':\n      linker.remove(linkId);\n      return;\n    default:\n      return null;\n    }\n  }\n\n  updateLinkMetadata({ id, linkName, linkId, metadata }) {\n    const linker = this.getLink(id, linkName);\n    const {\n      linker: { strategy },\n    } = linker;\n\n    switch (strategy.split('-')[0]) {\n    case 'one':\n      linker.metadata(metadata);\n      return;\n    case 'many':\n      linker.metadata(linkId, metadata);\n      return;\n    default:\n      return null;\n    }\n  }\n\n  getAssignedEmployee({ id }) {\n    const { assignee } = this.fetchOne({ $filters: { _id: id }, assignee: 1 });\n\n    return assignee;\n  }\n\n  getAdditionalDocLabel({ label, additionalDoc }) {\n    if (label) {\n      return label;\n    }\n    if (additionalDoc.label) {\n      return additionalDoc.label;\n    }\n\n    return undefined;\n  }\n\n  setAdditionalDoc({ id, additionalDocId, requiredByAdmin, label, category }) {\n    const { additionalDocuments } = this.get(id);\n\n    const additionalDoc = additionalDocuments.find(doc => doc.id === additionalDocId);\n\n    if (additionalDoc) {\n      const additionalDocumentsUpdate = [\n        ...additionalDocuments.filter(doc => doc.id !== additionalDocId),\n        {\n          id: additionalDocId,\n          requiredByAdmin,\n          label: this.getAdditionalDocLabel({ label, additionalDoc }),\n          category,\n        },\n      ];\n      return this._update({\n        id,\n        object: { additionalDocuments: additionalDocumentsUpdate },\n      });\n    }\n\n    return this._update({\n      id,\n      object: {\n        additionalDocuments: [\n          ...additionalDocuments,\n          { id: additionalDocId, requiredByAdmin, label, category },\n        ],\n      },\n    });\n  }\n\n  removeAdditionalDoc({ id: docId, additionalDocId }) {\n    const { additionalDocuments = [] } = this.get(docId);\n    return this._update({\n      id: docId,\n      object: {\n        additionalDocuments: additionalDocuments.filter(({ id }) => id !== additionalDocId),\n      },\n    });\n  }\n}\n\nexport default CollectionService;\n"]},"sourceType":"script","hash":"972131bd45381ca1e68eb84fddbb1bead78aac2e"}
