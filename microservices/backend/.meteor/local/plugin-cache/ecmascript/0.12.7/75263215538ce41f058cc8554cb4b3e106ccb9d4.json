{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/BaseRouter/test/client/HistoryWatcher.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/BaseRouter/test/client/HistoryWatcher.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/BaseRouter/test/client/HistoryWatcher.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/components/BaseRouter/test/client/HistoryWatcher.spec.js"],"names":["expect","TRACKING_COOKIE","getCookie","HistoryWatcher","routes","bar","path","foo","deleteAllCookies","cookies","document","cookie","split","i","length","eqPos","indexOf","name","substr","describe","watcher","history","location","context","it","getMatchingPath","to","deep","equal","route","params","queryString","id","beforeEach","generateTrackingId","not","trackingId"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { TRACKING_COOKIE } from 'core/api/analytics/analyticsConstants';\n\nimport { getCookie } from 'core/utils/cookiesHelpers';\nimport HistoryWatcher from '../../HistoryWatcher';\n\nconst routes = {\n  bar: { path: '/foo/:id' },\n  foo: { path: '/foo' },\n};\n\nconst deleteAllCookies = () => {\n  const cookies = document.cookie.split(';');\n\n  for (let i = 0; i < cookies.length; i++) {\n    const cookie = cookies[i];\n    const eqPos = cookie.indexOf('=');\n    const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n    document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n  }\n};\n\ndescribe('HistoryWatcher', () => {\n  const watcher = new HistoryWatcher({ routes, history: { location: {} } });\n\n  context('getMatchingPath', () => {\n    it('returns the matching path', () => {\n      const path = watcher.getMatchingPath('/foo');\n      expect(path).to.deep.equal({\n        path: '/foo',\n        route: 'foo',\n        params: {},\n        queryString: {},\n      });\n    });\n\n    it('returns the matching path with params', () => {\n      const path = watcher.getMatchingPath('/foo/abc');\n      expect(path).to.deep.equal({\n        path: '/foo/abc',\n        route: 'bar',\n        params: { id: 'abc' },\n        queryString: {},\n      });\n    });\n\n    it('returns the NOT_FOUND if no matching path is found', () => {\n      const path = watcher.getMatchingPath('/test');\n      expect(path).to.deep.equal({\n        path: '/test',\n        route: 'NOT_FOUND',\n        params: {},\n        queryString: {},\n      });\n    });\n  });\n\n  context('generateTrackingId', () => {\n    beforeEach(() => {\n      deleteAllCookies();\n    });\n\n    it('generates a new tracking id', () => {\n      expect(getCookie(TRACKING_COOKIE)).to.equal('');\n      watcher.generateTrackingId();\n      expect(getCookie(TRACKING_COOKIE)).to.not.equal('');\n    });\n\n    it('does not generate a new tracking id if one already exists', () => {\n      watcher.generateTrackingId();\n      const trackingId = getCookie(TRACKING_COOKIE);\n      watcher.generateTrackingId();\n      expect(getCookie(TRACKING_COOKIE)).to.equal(trackingId);\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/BaseRouter/test/client/HistoryWatcher.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/BaseRouter/test/client/HistoryWatcher.spec.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet TRACKING_COOKIE;\nmodule.link(\"../../../../api/analytics/analyticsConstants\", {\n  TRACKING_COOKIE(v) {\n    TRACKING_COOKIE = v;\n  }\n\n}, 1);\nlet getCookie;\nmodule.link(\"../../../../utils/cookiesHelpers\", {\n  getCookie(v) {\n    getCookie = v;\n  }\n\n}, 2);\nlet HistoryWatcher;\nmodule.link(\"../../HistoryWatcher\", {\n  default(v) {\n    HistoryWatcher = v;\n  }\n\n}, 3);\nconst routes = {\n  bar: {\n    path: '/foo/:id'\n  },\n  foo: {\n    path: '/foo'\n  }\n};\n\nconst deleteAllCookies = () => {\n  const cookies = document.cookie.split(';');\n\n  for (let i = 0; i < cookies.length; i++) {\n    const cookie = cookies[i];\n    const eqPos = cookie.indexOf('=');\n    const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n    document.cookie = \"\".concat(name, \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\");\n  }\n};\n\ndescribe('HistoryWatcher', () => {\n  const watcher = new HistoryWatcher({\n    routes,\n    history: {\n      location: {}\n    }\n  });\n  context('getMatchingPath', () => {\n    it('returns the matching path', () => {\n      const path = watcher.getMatchingPath('/foo');\n      expect(path).to.deep.equal({\n        path: '/foo',\n        route: 'foo',\n        params: {},\n        queryString: {}\n      });\n    });\n    it('returns the matching path with params', () => {\n      const path = watcher.getMatchingPath('/foo/abc');\n      expect(path).to.deep.equal({\n        path: '/foo/abc',\n        route: 'bar',\n        params: {\n          id: 'abc'\n        },\n        queryString: {}\n      });\n    });\n    it('returns the NOT_FOUND if no matching path is found', () => {\n      const path = watcher.getMatchingPath('/test');\n      expect(path).to.deep.equal({\n        path: '/test',\n        route: 'NOT_FOUND',\n        params: {},\n        queryString: {}\n      });\n    });\n  });\n  context('generateTrackingId', () => {\n    beforeEach(() => {\n      deleteAllCookies();\n    });\n    it('generates a new tracking id', () => {\n      expect(getCookie(TRACKING_COOKIE)).to.equal('');\n      watcher.generateTrackingId();\n      expect(getCookie(TRACKING_COOKIE)).to.not.equal('');\n    });\n    it('does not generate a new tracking id if one already exists', () => {\n      watcher.generateTrackingId();\n      const trackingId = getCookie(TRACKING_COOKIE);\n      watcher.generateTrackingId();\n      expect(getCookie(TRACKING_COOKIE)).to.equal(trackingId);\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/components/BaseRouter/test/client/HistoryWatcher.spec.js"],"names":["routes","bar","path","foo","deleteAllCookies","cookies","document","i","cookie","eqPos","name","describe","watcher","history","location","context","it","expect","route","params","queryString","id","beforeEach","getCookie","trackingId"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\nimport { TRACKING_COOKIE } from 'core/api/analytics/analyticsConstants';\n\nimport { getCookie } from 'core/utils/cookiesHelpers';\nimport HistoryWatcher from '../../HistoryWatcher';\n\nconst routes = {\n  bar: { path: '/foo/:id' },\n  foo: { path: '/foo' },\n};\n\nconst deleteAllCookies = () => {\n  const cookies = document.cookie.split(';');\n\n  for (let i = 0; i < cookies.length; i++) {\n    const cookie = cookies[i];\n    const eqPos = cookie.indexOf('=');\n    const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n    document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n  }\n};\n\ndescribe('HistoryWatcher', () => {\n  const watcher = new HistoryWatcher({ routes, history: { location: {} } });\n\n  context('getMatchingPath', () => {\n    it('returns the matching path', () => {\n      const path = watcher.getMatchingPath('/foo');\n      expect(path).to.deep.equal({\n        path: '/foo',\n        route: 'foo',\n        params: {},\n        queryString: {},\n      });\n    });\n\n    it('returns the matching path with params', () => {\n      const path = watcher.getMatchingPath('/foo/abc');\n      expect(path).to.deep.equal({\n        path: '/foo/abc',\n        route: 'bar',\n        params: { id: 'abc' },\n        queryString: {},\n      });\n    });\n\n    it('returns the NOT_FOUND if no matching path is found', () => {\n      const path = watcher.getMatchingPath('/test');\n      expect(path).to.deep.equal({\n        path: '/test',\n        route: 'NOT_FOUND',\n        params: {},\n        queryString: {},\n      });\n    });\n  });\n\n  context('generateTrackingId', () => {\n    beforeEach(() => {\n      deleteAllCookies();\n    });\n\n    it('generates a new tracking id', () => {\n      expect(getCookie(TRACKING_COOKIE)).to.equal('');\n      watcher.generateTrackingId();\n      expect(getCookie(TRACKING_COOKIE)).to.not.equal('');\n    });\n\n    it('does not generate a new tracking id if one already exists', () => {\n      watcher.generateTrackingId();\n      const trackingId = getCookie(TRACKING_COOKIE);\n      watcher.generateTrackingId();\n      expect(getCookie(TRACKING_COOKIE)).to.equal(trackingId);\n    });\n  });\n});\n"]},"sourceType":"script","hash":"75263215538ce41f058cc8554cb4b3e106ccb9d4"}
