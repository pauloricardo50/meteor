{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/factories/factories.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/api/factories/factories.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/factories/factories.js","inputSourceMap":{"version":3,"sources":["imports/core/api/factories/factories.js"],"names":["Factory","faker","LOT_TYPES","ORGANISATION_TYPES","PROMOTION_TYPES","REVENUE_TYPES","ROLES","STEPS","TASK_STATUS","DEFAULT_VALUE_FOR_ALL","DEFAULT_MAIN_RESIDENCE_RULES","DEFAULT_SECONDARY_RESIDENCE_RULES","Borrowers","Contacts","InterestRates","LenderRules","Lenders","Loans","Lots","MortgageNotes","Offers","Organisations","PromotionLots","PromotionOptions","Promotions","Properties","Revenues","Tasks","Users","PROPERTY_CATEGORY","Notifications","Activities","TEST_LASTNAME","TEST_FIRSTNAME","TEST_PHONE","getRandomLoanName","Math","floor","random","define","roles","USER","emails","address","internet","email","verified","lastName","firstName","phoneNumbers","DEV","ADMIN","PRO","createdAt","Date","status","ACTIVE","borrowerIds","documents","step","SOLVENCY","name","findOne","propertyIds","value","category","userId","uuid","canton","conditions","maxAmount","amortizationGoal","type","CREDIT","PARKING_CAR","company","companyName","BANK","filter","and","order","amount","MORTGAGE","maxBorrowRatio"],"mappings":"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","sourcesContent":["import { Factory } from 'meteor/dburles:factory';\nimport faker from 'faker';\n\nimport {\n  LOT_TYPES,\n  ORGANISATION_TYPES,\n  PROMOTION_TYPES,\n  REVENUE_TYPES,\n  ROLES,\n  STEPS,\n  TASK_STATUS,\n  DEFAULT_VALUE_FOR_ALL,\n  DEFAULT_MAIN_RESIDENCE_RULES,\n  DEFAULT_SECONDARY_RESIDENCE_RULES,\n} from '../constants';\nimport {\n  Borrowers,\n  Contacts,\n  InterestRates,\n  LenderRules,\n  Lenders,\n  Loans,\n  Lots,\n  MortgageNotes,\n  Offers,\n  Organisations,\n  PromotionLots,\n  PromotionOptions,\n  Promotions,\n  Properties,\n  Revenues,\n  Tasks,\n  Users,\n} from '..';\nimport { PROPERTY_CATEGORY } from '../properties/propertyConstants';\nimport Notifications from '../notifications/index';\nimport Activities from '../activities/index';\n\nconst TEST_LASTNAME = 'TestLastName';\nconst TEST_FIRSTNAME = 'TestFirstName';\nconst TEST_PHONE = '0123456789';\n\nconst getRandomLoanName = () => `19-0${Math.floor(Math.random() * 899 + 100)}`;\n\nFactory.define('user', Users, {\n  roles: [ROLES.USER],\n  emails: () => [{ address: faker.internet.email(), verified: false }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('dev', Users, {\n  roles: [ROLES.DEV],\n  emails: () => [{ address: faker.internet.email(), verified: false }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('admin', Users, {\n  roles: [ROLES.ADMIN],\n  emails: () => [{ address: faker.internet.email(), verified: false }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('adminEpotek', Users, {\n  roles: [ROLES.ADMIN],\n  emails: () => [{ address: 'dev@e-potek.ch', verified: true }],\n  lastName: 'e-Potek',\n  firstName: 'Dev',\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('pro', Users, {\n  roles: [ROLES.PRO],\n  emails: () => [{ address: faker.internet.email(), verified: false }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('borrower', Borrowers);\n\nFactory.define('task', Tasks, {\n  createdAt: () => new Date(),\n  status: TASK_STATUS.ACTIVE,\n});\n\nFactory.define('loan', Loans, {\n  createdAt: () => new Date(),\n  borrowerIds: [],\n  documents: () => ({}),\n  step: STEPS.SOLVENCY,\n  name: () => {\n    // there is a 1/900% chance that 2 loan names collide,\n    // make sure it never happens instead\n    while (true) {\n      const name = getRandomLoanName();\n\n      if (!Loans.findOne({ name })) {\n        return name;\n      }\n    }\n  },\n  emails: () => [],\n  propertyIds: [],\n});\n\nFactory.define('property', Properties, {\n  value: 1000000,\n  category: PROPERTY_CATEGORY.USER,\n});\n\nFactory.define('offer', Offers, {\n  userId: () => faker.random.uuid(),\n  createdAt: () => new Date(),\n  canton: 'GE',\n  conditions: ['Do something'],\n  maxAmount: 800000,\n  amortizationGoal: 0.65,\n});\n\nFactory.define('promotion', Promotions, {\n  name: 'Test promotion',\n  type: PROMOTION_TYPES.CREDIT,\n});\n\nFactory.define('promotionOption', PromotionOptions, {});\nFactory.define('promotionLot', PromotionLots, {});\n\nFactory.define('lot', Lots, {\n  name: 'test',\n  type: LOT_TYPES.PARKING_CAR,\n  value: 1000,\n});\n\nFactory.define('task', Tasks, {});\n\nFactory.define('mortgageNote', MortgageNotes, {\n  value: 100000,\n  canton: 'GE',\n});\n\nFactory.define('organisation', Organisations, {\n  name: () => {\n    // Make sure organisation names don't collide\n    while (true) {\n      const name = faker.company.companyName();\n\n      if (!Organisations.findOne({ name })) {\n        return name;\n      }\n    }\n  },\n  type: ORGANISATION_TYPES.BANK,\n});\n\nFactory.define('lender', Lenders, {});\n\nFactory.define('interestRates', InterestRates, {});\n\nFactory.define('contact', Contacts, {\n  firstName: 'John',\n  lastName: 'Doe',\n});\n\nFactory.define('lenderRules', LenderRules, {\n  filter: { and: [] },\n  order: 0,\n});\n\nFactory.define('revenues', Revenues, {\n  amount: 1000,\n  type: REVENUE_TYPES.MORTGAGE,\n});\n\nFactory.define('lenderRulesAll', LenderRules, {\n  ...DEFAULT_VALUE_FOR_ALL,\n  order: 0,\n  filter: { and: [true] },\n});\n\nFactory.define('lenderRulesMain', LenderRules, {\n  maxBorrowRatio: 0.8,\n  order: 0,\n  filter: { and: DEFAULT_MAIN_RESIDENCE_RULES },\n});\n\nFactory.define('lenderRulesSecondary', LenderRules, {\n  maxBorrowRatio: 0.7,\n  order: 0,\n  filter: { and: DEFAULT_SECONDARY_RESIDENCE_RULES },\n});\n\nFactory.define('notification', Notifications, {});\n\nFactory.define('activity', Activities, {});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/factories/factories.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/factories/factories.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Factory;\nmodule.link(\"meteor/dburles:factory\", {\n  Factory(v) {\n    Factory = v;\n  }\n\n}, 0);\nlet faker;\nmodule.link(\"faker\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 1);\nlet LOT_TYPES, ORGANISATION_TYPES, PROMOTION_TYPES, REVENUE_TYPES, ROLES, STEPS, TASK_STATUS, DEFAULT_VALUE_FOR_ALL, DEFAULT_MAIN_RESIDENCE_RULES, DEFAULT_SECONDARY_RESIDENCE_RULES;\nmodule.link(\"../constants\", {\n  LOT_TYPES(v) {\n    LOT_TYPES = v;\n  },\n\n  ORGANISATION_TYPES(v) {\n    ORGANISATION_TYPES = v;\n  },\n\n  PROMOTION_TYPES(v) {\n    PROMOTION_TYPES = v;\n  },\n\n  REVENUE_TYPES(v) {\n    REVENUE_TYPES = v;\n  },\n\n  ROLES(v) {\n    ROLES = v;\n  },\n\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  TASK_STATUS(v) {\n    TASK_STATUS = v;\n  },\n\n  DEFAULT_VALUE_FOR_ALL(v) {\n    DEFAULT_VALUE_FOR_ALL = v;\n  },\n\n  DEFAULT_MAIN_RESIDENCE_RULES(v) {\n    DEFAULT_MAIN_RESIDENCE_RULES = v;\n  },\n\n  DEFAULT_SECONDARY_RESIDENCE_RULES(v) {\n    DEFAULT_SECONDARY_RESIDENCE_RULES = v;\n  }\n\n}, 2);\nlet Borrowers, Contacts, InterestRates, LenderRules, Lenders, Loans, Lots, MortgageNotes, Offers, Organisations, PromotionLots, PromotionOptions, Promotions, Properties, Revenues, Tasks, Users;\nmodule.link(\"..\", {\n  Borrowers(v) {\n    Borrowers = v;\n  },\n\n  Contacts(v) {\n    Contacts = v;\n  },\n\n  InterestRates(v) {\n    InterestRates = v;\n  },\n\n  LenderRules(v) {\n    LenderRules = v;\n  },\n\n  Lenders(v) {\n    Lenders = v;\n  },\n\n  Loans(v) {\n    Loans = v;\n  },\n\n  Lots(v) {\n    Lots = v;\n  },\n\n  MortgageNotes(v) {\n    MortgageNotes = v;\n  },\n\n  Offers(v) {\n    Offers = v;\n  },\n\n  Organisations(v) {\n    Organisations = v;\n  },\n\n  PromotionLots(v) {\n    PromotionLots = v;\n  },\n\n  PromotionOptions(v) {\n    PromotionOptions = v;\n  },\n\n  Promotions(v) {\n    Promotions = v;\n  },\n\n  Properties(v) {\n    Properties = v;\n  },\n\n  Revenues(v) {\n    Revenues = v;\n  },\n\n  Tasks(v) {\n    Tasks = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 3);\nlet PROPERTY_CATEGORY;\nmodule.link(\"../properties/propertyConstants\", {\n  PROPERTY_CATEGORY(v) {\n    PROPERTY_CATEGORY = v;\n  }\n\n}, 4);\nlet Notifications;\nmodule.link(\"../notifications/index\", {\n  default(v) {\n    Notifications = v;\n  }\n\n}, 5);\nlet Activities;\nmodule.link(\"../activities/index\", {\n  default(v) {\n    Activities = v;\n  }\n\n}, 6);\nconst TEST_LASTNAME = 'TestLastName';\nconst TEST_FIRSTNAME = 'TestFirstName';\nconst TEST_PHONE = '0123456789';\n\nconst getRandomLoanName = () => \"19-0\".concat(Math.floor(Math.random() * 899 + 100));\n\nFactory.define('user', Users, {\n  roles: [ROLES.USER],\n  emails: () => [{\n    address: faker.internet.email(),\n    verified: false\n  }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE]\n});\nFactory.define('dev', Users, {\n  roles: [ROLES.DEV],\n  emails: () => [{\n    address: faker.internet.email(),\n    verified: false\n  }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE]\n});\nFactory.define('admin', Users, {\n  roles: [ROLES.ADMIN],\n  emails: () => [{\n    address: faker.internet.email(),\n    verified: false\n  }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE]\n});\nFactory.define('adminEpotek', Users, {\n  roles: [ROLES.ADMIN],\n  emails: () => [{\n    address: 'dev@e-potek.ch',\n    verified: true\n  }],\n  lastName: 'e-Potek',\n  firstName: 'Dev',\n  phoneNumbers: [TEST_PHONE]\n});\nFactory.define('pro', Users, {\n  roles: [ROLES.PRO],\n  emails: () => [{\n    address: faker.internet.email(),\n    verified: false\n  }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE]\n});\nFactory.define('borrower', Borrowers);\nFactory.define('task', Tasks, {\n  createdAt: () => new Date(),\n  status: TASK_STATUS.ACTIVE\n});\nFactory.define('loan', Loans, {\n  createdAt: () => new Date(),\n  borrowerIds: [],\n  documents: () => ({}),\n  step: STEPS.SOLVENCY,\n  name: () => {\n    // there is a 1/900% chance that 2 loan names collide,\n    // make sure it never happens instead\n    while (true) {\n      const name = getRandomLoanName();\n\n      if (!Loans.findOne({\n        name\n      })) {\n        return name;\n      }\n    }\n  },\n  emails: () => [],\n  propertyIds: []\n});\nFactory.define('property', Properties, {\n  value: 1000000,\n  category: PROPERTY_CATEGORY.USER\n});\nFactory.define('offer', Offers, {\n  userId: () => faker.random.uuid(),\n  createdAt: () => new Date(),\n  canton: 'GE',\n  conditions: ['Do something'],\n  maxAmount: 800000,\n  amortizationGoal: 0.65\n});\nFactory.define('promotion', Promotions, {\n  name: 'Test promotion',\n  type: PROMOTION_TYPES.CREDIT\n});\nFactory.define('promotionOption', PromotionOptions, {});\nFactory.define('promotionLot', PromotionLots, {});\nFactory.define('lot', Lots, {\n  name: 'test',\n  type: LOT_TYPES.PARKING_CAR,\n  value: 1000\n});\nFactory.define('task', Tasks, {});\nFactory.define('mortgageNote', MortgageNotes, {\n  value: 100000,\n  canton: 'GE'\n});\nFactory.define('organisation', Organisations, {\n  name: () => {\n    // Make sure organisation names don't collide\n    while (true) {\n      const name = faker.company.companyName();\n\n      if (!Organisations.findOne({\n        name\n      })) {\n        return name;\n      }\n    }\n  },\n  type: ORGANISATION_TYPES.BANK\n});\nFactory.define('lender', Lenders, {});\nFactory.define('interestRates', InterestRates, {});\nFactory.define('contact', Contacts, {\n  firstName: 'John',\n  lastName: 'Doe'\n});\nFactory.define('lenderRules', LenderRules, {\n  filter: {\n    and: []\n  },\n  order: 0\n});\nFactory.define('revenues', Revenues, {\n  amount: 1000,\n  type: REVENUE_TYPES.MORTGAGE\n});\nFactory.define('lenderRulesAll', LenderRules, (0, _objectSpread2.default)({}, DEFAULT_VALUE_FOR_ALL, {\n  order: 0,\n  filter: {\n    and: [true]\n  }\n}));\nFactory.define('lenderRulesMain', LenderRules, {\n  maxBorrowRatio: 0.8,\n  order: 0,\n  filter: {\n    and: DEFAULT_MAIN_RESIDENCE_RULES\n  }\n});\nFactory.define('lenderRulesSecondary', LenderRules, {\n  maxBorrowRatio: 0.7,\n  order: 0,\n  filter: {\n    and: DEFAULT_SECONDARY_RESIDENCE_RULES\n  }\n});\nFactory.define('notification', Notifications, {});\nFactory.define('activity', Activities, {});","map":{"version":3,"sources":["imports/core/api/factories/factories.js"],"names":["TEST_LASTNAME","TEST_FIRSTNAME","TEST_PHONE","getRandomLoanName","Math","Factory","roles","ROLES","emails","address","faker","verified","lastName","firstName","phoneNumbers","createdAt","status","TASK_STATUS","ACTIVE","borrowerIds","documents","step","STEPS","name","propertyIds","value","category","PROPERTY_CATEGORY","USER","userId","canton","conditions","maxAmount","amortizationGoal","type","PROMOTION_TYPES","CREDIT","LOT_TYPES","ORGANISATION_TYPES","BANK","filter","and","order","amount","REVENUE_TYPES","MORTGAGE","maxBorrowRatio","DEFAULT_MAIN_RESIDENCE_RULES","DEFAULT_SECONDARY_RESIDENCE_RULES"],"mappings":"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","sourcesContent":["import { Factory } from 'meteor/dburles:factory';\nimport faker from 'faker';\n\nimport {\n  LOT_TYPES,\n  ORGANISATION_TYPES,\n  PROMOTION_TYPES,\n  REVENUE_TYPES,\n  ROLES,\n  STEPS,\n  TASK_STATUS,\n  DEFAULT_VALUE_FOR_ALL,\n  DEFAULT_MAIN_RESIDENCE_RULES,\n  DEFAULT_SECONDARY_RESIDENCE_RULES,\n} from '../constants';\nimport {\n  Borrowers,\n  Contacts,\n  InterestRates,\n  LenderRules,\n  Lenders,\n  Loans,\n  Lots,\n  MortgageNotes,\n  Offers,\n  Organisations,\n  PromotionLots,\n  PromotionOptions,\n  Promotions,\n  Properties,\n  Revenues,\n  Tasks,\n  Users,\n} from '..';\nimport { PROPERTY_CATEGORY } from '../properties/propertyConstants';\nimport Notifications from '../notifications/index';\nimport Activities from '../activities/index';\n\nconst TEST_LASTNAME = 'TestLastName';\nconst TEST_FIRSTNAME = 'TestFirstName';\nconst TEST_PHONE = '0123456789';\n\nconst getRandomLoanName = () => `19-0${Math.floor(Math.random() * 899 + 100)}`;\n\nFactory.define('user', Users, {\n  roles: [ROLES.USER],\n  emails: () => [{ address: faker.internet.email(), verified: false }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('dev', Users, {\n  roles: [ROLES.DEV],\n  emails: () => [{ address: faker.internet.email(), verified: false }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('admin', Users, {\n  roles: [ROLES.ADMIN],\n  emails: () => [{ address: faker.internet.email(), verified: false }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('adminEpotek', Users, {\n  roles: [ROLES.ADMIN],\n  emails: () => [{ address: 'dev@e-potek.ch', verified: true }],\n  lastName: 'e-Potek',\n  firstName: 'Dev',\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('pro', Users, {\n  roles: [ROLES.PRO],\n  emails: () => [{ address: faker.internet.email(), verified: false }],\n  lastName: TEST_LASTNAME,\n  firstName: TEST_FIRSTNAME,\n  phoneNumbers: [TEST_PHONE],\n});\n\nFactory.define('borrower', Borrowers);\n\nFactory.define('task', Tasks, {\n  createdAt: () => new Date(),\n  status: TASK_STATUS.ACTIVE,\n});\n\nFactory.define('loan', Loans, {\n  createdAt: () => new Date(),\n  borrowerIds: [],\n  documents: () => ({}),\n  step: STEPS.SOLVENCY,\n  name: () => {\n    // there is a 1/900% chance that 2 loan names collide,\n    // make sure it never happens instead\n    while (true) {\n      const name = getRandomLoanName();\n\n      if (!Loans.findOne({ name })) {\n        return name;\n      }\n    }\n  },\n  emails: () => [],\n  propertyIds: [],\n});\n\nFactory.define('property', Properties, {\n  value: 1000000,\n  category: PROPERTY_CATEGORY.USER,\n});\n\nFactory.define('offer', Offers, {\n  userId: () => faker.random.uuid(),\n  createdAt: () => new Date(),\n  canton: 'GE',\n  conditions: ['Do something'],\n  maxAmount: 800000,\n  amortizationGoal: 0.65,\n});\n\nFactory.define('promotion', Promotions, {\n  name: 'Test promotion',\n  type: PROMOTION_TYPES.CREDIT,\n});\n\nFactory.define('promotionOption', PromotionOptions, {});\nFactory.define('promotionLot', PromotionLots, {});\n\nFactory.define('lot', Lots, {\n  name: 'test',\n  type: LOT_TYPES.PARKING_CAR,\n  value: 1000,\n});\n\nFactory.define('task', Tasks, {});\n\nFactory.define('mortgageNote', MortgageNotes, {\n  value: 100000,\n  canton: 'GE',\n});\n\nFactory.define('organisation', Organisations, {\n  name: () => {\n    // Make sure organisation names don't collide\n    while (true) {\n      const name = faker.company.companyName();\n\n      if (!Organisations.findOne({ name })) {\n        return name;\n      }\n    }\n  },\n  type: ORGANISATION_TYPES.BANK,\n});\n\nFactory.define('lender', Lenders, {});\n\nFactory.define('interestRates', InterestRates, {});\n\nFactory.define('contact', Contacts, {\n  firstName: 'John',\n  lastName: 'Doe',\n});\n\nFactory.define('lenderRules', LenderRules, {\n  filter: { and: [] },\n  order: 0,\n});\n\nFactory.define('revenues', Revenues, {\n  amount: 1000,\n  type: REVENUE_TYPES.MORTGAGE,\n});\n\nFactory.define('lenderRulesAll', LenderRules, {\n  ...DEFAULT_VALUE_FOR_ALL,\n  order: 0,\n  filter: { and: [true] },\n});\n\nFactory.define('lenderRulesMain', LenderRules, {\n  maxBorrowRatio: 0.8,\n  order: 0,\n  filter: { and: DEFAULT_MAIN_RESIDENCE_RULES },\n});\n\nFactory.define('lenderRulesSecondary', LenderRules, {\n  maxBorrowRatio: 0.7,\n  order: 0,\n  filter: { and: DEFAULT_SECONDARY_RESIDENCE_RULES },\n});\n\nFactory.define('notification', Notifications, {});\n\nFactory.define('activity', Activities, {});\n"]},"sourceType":"script","hash":"80e4be61253454996e3c6c339115d975c8c98461"}
