{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/PasswordResetPage/PasswordResetPage.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/PasswordResetPage/PasswordResetPage.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/PasswordResetPage/PasswordResetPage.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/PasswordResetPage/PasswordResetPage.jsx"],"names":["Meteor","React","FontAwesomeIcon","faUserCircle","Redirect","cx","TextField","Loading","Button","Checkbox","T","getUserDisplayName","PasswordResetPageContainer","PasswordResetPage","newPassword","newPassword2","hasReadConditions","handleChange","handleSubmit","user","error","submitting","isEnrollment","window","location","pathname","includes","isValid","e","target","value","link","settings","public","subdomains","app","c","enrollment"],"mappings":"AAAA;AACA,SAASA,MAAT,QAAuB,eAAvB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,+CAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,OAAOC,CAAP;AACA,SAASC,kBAAT;AACA,OAAOC,0BAAP;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAChCC,EAAAA,WADgC;AAEhCC,EAAAA,YAFgC;AAGhCC,EAAAA,iBAHgC;AAIhCC,EAAAA,YAJgC;AAKhCC,EAAAA,YALgC;AAMhCC,EAAAA,IANgC;AAOhCC,EAAAA,KAPgC;AAQhCC,EAAAA;AARgC,CAAD,KAS3B;AACJ,QAAMC,YAAY,GAAGC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,QAAzB,CAAkC,gBAAlC,CAAxC;AACA,QAAMC,OAAO,GAAG,CAAC,CAACb,WAAF,IACXA,WAAW,KAAKC,YADL,KAEV,CAACO,YAAD,IAAiBN,iBAFP,CAAhB;;AAIA,MAAII,KAAJ,EAAW;AACT,WAAO,CAAC,QAAD,CAAU,GAAG,QAAb,GAAP;AACD;;AAED,MAAI,CAACD,IAAL,EAAW;AACT,WAAO,CAAC,OAAD,GAAP;AACD;;AAED,SACE,CAAC,IAAD,CACE,SAAS,CAACD,YAAD,CADX,CAEE,GAAG,qBAFL,CAGE,UAAU,qBAHZ;MAKE,CAAC,GAAD,CAAK,UAAU,gBAAf;QACE,CAAC,GAAD,CAAK,UAAU,KAAf;UACE,CAAC,GAAD,CAAK,UAAU,MAAf;YACE,CAAC,eAAD,CAAiB,KAAK,CAACf,YAAD,CAAtB,CAAqC,UAAU,MAA/C;YACA,CAAC,EAAD,CAAI,CAACQ,kBAAkB,CAACQ,IAAD,CAAnB,CAA0B,EAAE,EAAF;UAChC,EAAE,GAAF;UACA,CAAC,EAAD,CAAI,UAAU,WAAd;YACE,CAAC,CAAD,CAAG,GAAG,+BAAN;UACF,EAAE,EAAF;QACF,EAAE,GAAF;QACA,CAAC,SAAD,CACE,MAAM,CAAC,CAAC,CAAD,CAAG,GAAG,4BAAN,GAAD,CADR,CAEE,kBAFF,CAGE,KAAK,UAHP,CAIE,MAAM,CAACL,WAAD,CAJR,CAKE,SAAS,CAACc,CAAC,IAAIX,YAAY,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,EAAiB,aAAjB,CAAlB,CALX,CAME,UAAU,2BANZ;QAQA,CAAC,SAAD,CACE,MAAM,CAAC,CAAC,CAAD,CAAG,GAAG,mCAAN,GAAD,CADR,CAEE,kBAFF,CAGE,KAAK,UAHP,CAIE,MAAM,CAACf,YAAD,CAJR,CAKE,SAAS,CAACa,CAAC,IAAIX,YAAY,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,EAAiB,cAAjB,CAAlB,CALX,CAME,UAAU,2BANZ;;QASA,CAACR,YAAY,IACX,CAAC,QAAD,CACE,MAAM,CACJ,CAAC,IAAD,CAAM,UAAU,YAAhB;gBACE,CAAC,CAAD,CACE,GAAG,8BADL,CAEE,OAAO,CAAC;AACNS,UAAAA,IAAI,EACF,CAAC,CAAD,CACE,OAAO,QADT,CAEE,IAAI,qBAFN,CAGE,KAAK,CAAE,GAAE/B,MAAM,CAACgC,QAAP,CAAgBC,MAAhB,CAAuBC,UAAvB,CAAkCC,GAAI,qCAA1C,CAHP;wBAKE,CAAC,CAAD,CAAG,GAAG,4CAAN;sBACF,EAAE,CAAF;AARI,SAAD,CAFT;cAcF,EAAE,IAAF,CAhBI,CADR,CAmBE,MAAM,CAACnB,iBAAD,CAnBR,CAoBE,SAAS,CAAC,CAACY,CAAD,EAAIQ,CAAJ,KAAUnB,YAAY,CAACmB,CAAD,EAAI,mBAAJ,CAAvB,CApBX,GADF;;QAyBA,CAAC,GAAD,CACE,UAAU,CAAC/B,EAAE,CAAC,4BAAD,EAA+B;AAC1CgC,QAAAA,UAAU,EAAEf;AAD8B,OAA/B,CAAH,CADZ;UAKE,CAAC,MAAD,CACE,MADF,CAEE,MAAM,CAAC,CAAC,CAAD,CAAG,GAAG,uBAAN,GAAD,CAFR,CAGE,SAAS,CAAC,CAACK,OAAF,CAHX,CAIE,KAAK,QAJP,CAKE,OALF,CAME,QAAQ,CAACN,UAAD,CANV;QAQF,EAAE,GAAF;MACF,EAAE,GAAF;IACF,EAAE,IAAF,CAzEF;AA2ED,CAlGM;AAoGP,eAAeT,0BAA0B,CAACC,iBAAD,CAAzC","sourcesContent":["// @flow\nimport { Meteor } from 'meteor/meteor';\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/pro-light-svg-icons/faUserCircle';\nimport { Redirect } from 'react-router-dom';\nimport cx from 'classnames';\n\nimport TextField from '../Material/TextField';\nimport Loading from '../Loading/Loading';\nimport Button from '../Button';\nimport Checkbox from '../Checkbox';\nimport T from '../Translation';\nimport { getUserDisplayName } from '../../utils/userFunctions';\nimport PasswordResetPageContainer from './PasswordResetPageContainer';\n\nexport const PasswordResetPage = ({\n  newPassword,\n  newPassword2,\n  hasReadConditions,\n  handleChange,\n  handleSubmit,\n  user,\n  error,\n  submitting,\n}) => {\n  const isEnrollment = window.location && window.location.pathname.includes('enroll-account');\n  const isValid = !!newPassword\n    && newPassword === newPassword2\n    && (!isEnrollment || hasReadConditions);\n\n  if (error) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  if (!user) {\n    return <Loading />;\n  }\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      id=\"password-reset-page\"\n      className=\"password-reset-page\"\n    >\n      <div className=\"card1 card-top\">\n        <div className=\"top\">\n          <div className=\"text\">\n            <FontAwesomeIcon icon={faUserCircle} className=\"icon\" />\n            <h1>{getUserDisplayName(user)}</h1>\n          </div>\n          <h4 className=\"secondary\">\n            <T id=\"PasswordResetPage.description\" />\n          </h4>\n        </div>\n        <TextField\n          label={<T id=\"PasswordResetPage.password\" />}\n          floatingLabelFixed\n          type=\"password\"\n          value={newPassword}\n          onChange={e => handleChange(e.target.value, 'newPassword')}\n          className=\"password-reset-page-input\"\n        />\n        <TextField\n          label={<T id=\"PasswordResetPage.confirmPassword\" />}\n          floatingLabelFixed\n          type=\"password\"\n          value={newPassword2}\n          onChange={e => handleChange(e.target.value, 'newPassword2')}\n          className=\"password-reset-page-input\"\n        />\n\n        {isEnrollment && (\n          <Checkbox\n            label={(\n              <span className=\"disclaimer\">\n                <T\n                  id=\"PasswordResetPage.disclaimer\"\n                  values={{\n                    link: (\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={`${Meteor.settings.public.subdomains.app}/files/Privacy Policy - e-Potek.pdf`}\n                      >\n                        <T id=\"PasswordResetPage.disclaimer.privacyPolicy\" />\n                      </a>\n                    ),\n                  }}\n                />\n              </span>\n            )}\n            value={hasReadConditions}\n            onChange={(e, c) => handleChange(c, 'hasReadConditions')}\n          />\n        )}\n\n        <div\n          className={cx('password-reset-page-button', {\n            enrollment: isEnrollment,\n          })}\n        >\n          <Button\n            raised\n            label={<T id=\"PasswordResetPage.CTA\" />}\n            disabled={!isValid}\n            type=\"submit\"\n            primary\n            loading={submitting}\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default PasswordResetPageContainer(PasswordResetPage);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/PasswordResetPage/PasswordResetPage.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/PasswordResetPage/PasswordResetPage.jsx"}},"code":"module.export({\n  PasswordResetPage: () => PasswordResetPage\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\nlet FontAwesomeIcon;\nmodule.link(\"@fortawesome/react-fontawesome\", {\n  FontAwesomeIcon(v) {\n    FontAwesomeIcon = v;\n  }\n\n}, 2);\nlet faUserCircle;\nmodule.link(\"@fortawesome/pro-light-svg-icons/faUserCircle\", {\n  faUserCircle(v) {\n    faUserCircle = v;\n  }\n\n}, 3);\nlet Redirect;\nmodule.link(\"react-router-dom\", {\n  Redirect(v) {\n    Redirect = v;\n  }\n\n}, 4);\nlet cx;\nmodule.link(\"classnames\", {\n  default(v) {\n    cx = v;\n  }\n\n}, 5);\nlet TextField;\nmodule.link(\"../Material/TextField\", {\n  default(v) {\n    TextField = v;\n  }\n\n}, 6);\nlet Loading;\nmodule.link(\"../Loading/Loading\", {\n  default(v) {\n    Loading = v;\n  }\n\n}, 7);\nlet Button;\nmodule.link(\"../Button\", {\n  default(v) {\n    Button = v;\n  }\n\n}, 8);\nlet Checkbox;\nmodule.link(\"../Checkbox\", {\n  default(v) {\n    Checkbox = v;\n  }\n\n}, 9);\nlet T;\nmodule.link(\"../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 10);\nlet getUserDisplayName;\nmodule.link(\"../../utils/userFunctions\", {\n  getUserDisplayName(v) {\n    getUserDisplayName = v;\n  }\n\n}, 11);\nlet PasswordResetPageContainer;\nmodule.link(\"./PasswordResetPageContainer\", {\n  default(v) {\n    PasswordResetPageContainer = v;\n  }\n\n}, 12);\n\nconst PasswordResetPage = (_ref) => {\n  let {\n    newPassword,\n    newPassword2,\n    hasReadConditions,\n    handleChange,\n    handleSubmit,\n    user,\n    error,\n    submitting\n  } = _ref;\n  const isEnrollment = window.location && window.location.pathname.includes('enroll-account');\n  const isValid = !!newPassword && newPassword === newPassword2 && (!isEnrollment || hasReadConditions);\n\n  if (error) {\n    return React.createElement(Redirect, {\n      to: \"/login\"\n    });\n  }\n\n  if (!user) {\n    return React.createElement(Loading, null);\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    id: \"password-reset-page\",\n    className: \"password-reset-page\"\n  }, React.createElement(\"div\", {\n    className: \"card1 card-top\"\n  }, React.createElement(\"div\", {\n    className: \"top\"\n  }, React.createElement(\"div\", {\n    className: \"text\"\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faUserCircle,\n    className: \"icon\"\n  }), React.createElement(\"h1\", null, getUserDisplayName(user))), React.createElement(\"h4\", {\n    className: \"secondary\"\n  }, React.createElement(T, {\n    id: \"PasswordResetPage.description\"\n  }))), React.createElement(TextField, {\n    label: React.createElement(T, {\n      id: \"PasswordResetPage.password\"\n    }),\n    floatingLabelFixed: true,\n    type: \"password\",\n    value: newPassword,\n    onChange: e => handleChange(e.target.value, 'newPassword'),\n    className: \"password-reset-page-input\"\n  }), React.createElement(TextField, {\n    label: React.createElement(T, {\n      id: \"PasswordResetPage.confirmPassword\"\n    }),\n    floatingLabelFixed: true,\n    type: \"password\",\n    value: newPassword2,\n    onChange: e => handleChange(e.target.value, 'newPassword2'),\n    className: \"password-reset-page-input\"\n  }), isEnrollment && React.createElement(Checkbox, {\n    label: React.createElement(\"span\", {\n      className: \"disclaimer\"\n    }, React.createElement(T, {\n      id: \"PasswordResetPage.disclaimer\",\n      values: {\n        link: React.createElement(\"a\", {\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          href: \"\".concat(Meteor.settings.public.subdomains.app, \"/files/Privacy Policy - e-Potek.pdf\")\n        }, React.createElement(T, {\n          id: \"PasswordResetPage.disclaimer.privacyPolicy\"\n        }))\n      }\n    })),\n    value: hasReadConditions,\n    onChange: (e, c) => handleChange(c, 'hasReadConditions')\n  }), React.createElement(\"div\", {\n    className: cx('password-reset-page-button', {\n      enrollment: isEnrollment\n    })\n  }, React.createElement(Button, {\n    raised: true,\n    label: React.createElement(T, {\n      id: \"PasswordResetPage.CTA\"\n    }),\n    disabled: !isValid,\n    type: \"submit\",\n    primary: true,\n    loading: submitting\n  }))));\n};\n\nmodule.exportDefault(PasswordResetPageContainer(PasswordResetPage));","map":{"version":3,"sources":["imports/core/components/PasswordResetPage/PasswordResetPage.jsx"],"names":["PasswordResetPage","submitting","isEnrollment","window","isValid","newPassword","getUserDisplayName","e","handleChange","link","Meteor","cx","enrollment","PasswordResetPageContainer"],"mappings":"AAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,iBAAA,EAAA,MAAA;AAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+CAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,EAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,EAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,aAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,CAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,CAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,EAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,kBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,EAAA;AAAA,IAAA,0BAAA;AAAA,MAAA,CAAA,IAAA,CAAA,8BAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,0BAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,EAAA;;AAiBO,MAAMA,iBAAiB,GAAG,UAS3B;AAAA,MAT4B;AAAA,IAAA,WAAA;AAAA,IAAA,YAAA;AAAA,IAAA,iBAAA;AAAA,IAAA,YAAA;AAAA,IAAA,YAAA;AAAA,IAAA,IAAA;AAAA,IAAA,KAAA;AAQhCC,IAAAA;AARgC,GAS5B;AACJ,QAAMC,YAAY,GAAGC,MAAM,CAANA,QAAAA,IAAmBA,MAAM,CAANA,QAAAA,CAAAA,QAAAA,CAAAA,QAAAA,CAAxC,gBAAwCA,CAAxC;AACA,QAAMC,OAAO,GAAG,CAAC,CAAD,WAAA,IACXC,WAAW,KADA,YAAA,KAEV,CAAA,YAAA,IAFN,iBAAgB,CAAhB;;AAIA,MAAA,KAAA,EAAW;AACT,WAAO,oBAAA,QAAA;AAAU,MAAA,EAAA,EAAjB;AAAO,MAAP;AACD;;AAED,MAAI,CAAJ,IAAA,EAAW;AACT,WAAO,oBAAP,OAAO,OAAP;AACD;;AAED,SACE;AACE,IAAA,QAAA,EADF,YAAA;AAEE,IAAA,EAAA,EAFF,qBAAA;AAGE,IAAA,SAAA,EAHF;AAAA,KAKE;AAAK,IAAA,SAAA,EAAL;AAAA,KACE;AAAK,IAAA,SAAA,EAAL;AAAA,KACE;AAAK,IAAA,SAAA,EAAL;AAAA,KACE,oBAAA,eAAA;AAAiB,IAAA,IAAA,EAAjB,YAAA;AAAqC,IAAA,SAAA,EAArC;AAAA,IADF,EAEE,gCAAKC,kBAAkB,CAAnB,IAAmB,CAAvB,CAFF,CADF,EAKE;AAAI,IAAA,SAAA,EAAJ;AAAA,KACE,oBAAA,CAAA;AAAG,IAAA,EAAA,EAAH;AAAA,IADF,CALF,CADF,EAUE,oBAAA,SAAA;AACE,IAAA,KAAA,EAAO,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEE,IAAA,kBAFF,MAAA;AAGE,IAAA,IAAA,EAHF,UAAA;AAIE,IAAA,KAAA,EAJF,WAAA;AAKE,IAAA,QAAA,EAAUC,CAAC,IAAIC,YAAY,CAACD,CAAC,CAADA,MAAAA,CAAD,KAAA,EAL7B,aAK6B,CAL7B;AAME,IAAA,SAAA,EANF;AAAA,IAVF,EAkBE,oBAAA,SAAA;AACE,IAAA,KAAA,EAAO,oBAAA,CAAA;AAAG,MAAA,EAAA,EADZ;AACS,MADT;AAEE,IAAA,kBAFF,MAAA;AAGE,IAAA,IAAA,EAHF,UAAA;AAIE,IAAA,KAAA,EAJF,YAAA;AAKE,IAAA,QAAA,EAAUA,CAAC,IAAIC,YAAY,CAACD,CAAC,CAADA,MAAAA,CAAD,KAAA,EAL7B,cAK6B,CAL7B;AAME,IAAA,SAAA,EANF;AAAA,IAlBF,EA2BGL,YAAY,IACX,oBAAA,QAAA;AACE,IAAA,KAAA,EACE;AAAM,MAAA,SAAA,EAAN;AAAA,OACE,oBAAA,CAAA;AACE,MAAA,EAAA,EADF,8BAAA;AAEE,MAAA,MAAA,EAAQ;AACNO,QAAAA,IAAI,EACF;AACE,UAAA,MAAA,EADF,QAAA;AAEE,UAAA,GAAA,EAFF,qBAAA;AAGE,UAAA,IAAA,YAASC,MAAM,CAANA,QAAAA,CAAAA,MAAAA,CAAAA,UAAAA,CAHX,GAGE;AAHF,WAKE,oBAAA,CAAA;AAAG,UAAA,EAAA,EAAH;AAAA,UALF;AAFI;AAFV,MADF,CAFJ;AAmBE,IAAA,KAAA,EAnBF,iBAAA;AAoBE,IAAA,QAAA,EAAU,CAAA,CAAA,EAAA,CAAA,KAAUF,YAAY,CAAA,CAAA,EArBpC,mBAqBoC;AApBlC,IA5BJ,EAoDE;AACE,IAAA,SAAA,EAAWG,EAAE,CAAA,4BAAA,EAA+B;AAC1CC,MAAAA,UAAU,EAAEV;AAD8B,KAA/B;AADf,KAKE,oBAAA,MAAA;AACE,IAAA,MADF,MAAA;AAEE,IAAA,KAAA,EAAO,oBAAA,CAAA;AAAG,MAAA,EAAA,EAFZ;AAES,MAFT;AAGE,IAAA,QAAA,EAAU,CAHZ,OAAA;AAIE,IAAA,IAAA,EAJF,QAAA;AAKE,IAAA,OALF,MAAA;AAME,IAAA,OAAA,EANF;AAAA,IALF,CApDF,CALF,CADF;AAvBK,CAAA;;AAjBP,MAAA,CAAA,aAAA,CAqHeW,0BAA0B,CAAzC,iBAAyC,CArHzC","sourcesContent":["// @flow\nimport { Meteor } from 'meteor/meteor';\n\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/pro-light-svg-icons/faUserCircle';\nimport { Redirect } from 'react-router-dom';\nimport cx from 'classnames';\n\nimport TextField from '../Material/TextField';\nimport Loading from '../Loading/Loading';\nimport Button from '../Button';\nimport Checkbox from '../Checkbox';\nimport T from '../Translation';\nimport { getUserDisplayName } from '../../utils/userFunctions';\nimport PasswordResetPageContainer from './PasswordResetPageContainer';\n\nexport const PasswordResetPage = ({\n  newPassword,\n  newPassword2,\n  hasReadConditions,\n  handleChange,\n  handleSubmit,\n  user,\n  error,\n  submitting,\n}) => {\n  const isEnrollment = window.location && window.location.pathname.includes('enroll-account');\n  const isValid = !!newPassword\n    && newPassword === newPassword2\n    && (!isEnrollment || hasReadConditions);\n\n  if (error) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  if (!user) {\n    return <Loading />;\n  }\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      id=\"password-reset-page\"\n      className=\"password-reset-page\"\n    >\n      <div className=\"card1 card-top\">\n        <div className=\"top\">\n          <div className=\"text\">\n            <FontAwesomeIcon icon={faUserCircle} className=\"icon\" />\n            <h1>{getUserDisplayName(user)}</h1>\n          </div>\n          <h4 className=\"secondary\">\n            <T id=\"PasswordResetPage.description\" />\n          </h4>\n        </div>\n        <TextField\n          label={<T id=\"PasswordResetPage.password\" />}\n          floatingLabelFixed\n          type=\"password\"\n          value={newPassword}\n          onChange={e => handleChange(e.target.value, 'newPassword')}\n          className=\"password-reset-page-input\"\n        />\n        <TextField\n          label={<T id=\"PasswordResetPage.confirmPassword\" />}\n          floatingLabelFixed\n          type=\"password\"\n          value={newPassword2}\n          onChange={e => handleChange(e.target.value, 'newPassword2')}\n          className=\"password-reset-page-input\"\n        />\n\n        {isEnrollment && (\n          <Checkbox\n            label={(\n              <span className=\"disclaimer\">\n                <T\n                  id=\"PasswordResetPage.disclaimer\"\n                  values={{\n                    link: (\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={`${Meteor.settings.public.subdomains.app}/files/Privacy Policy - e-Potek.pdf`}\n                      >\n                        <T id=\"PasswordResetPage.disclaimer.privacyPolicy\" />\n                      </a>\n                    ),\n                  }}\n                />\n              </span>\n            )}\n            value={hasReadConditions}\n            onChange={(e, c) => handleChange(c, 'hasReadConditions')}\n          />\n        )}\n\n        <div\n          className={cx('password-reset-page-button', {\n            enrollment: isEnrollment,\n          })}\n        >\n          <Button\n            raised\n            label={<T id=\"PasswordResetPage.CTA\" />}\n            disabled={!isValid}\n            type=\"submit\"\n            primary\n            loading={submitting}\n          />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default PasswordResetPageContainer(PasswordResetPage);\n"]},"sourceType":"script","hash":"c786bb016598a9413fde73e37b2db8b25dec05c6"}
