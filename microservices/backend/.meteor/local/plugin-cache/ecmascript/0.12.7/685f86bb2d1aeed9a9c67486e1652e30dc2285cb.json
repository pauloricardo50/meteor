{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/MiddlewareManager/test/MiddlewareManager.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/utils/MiddlewareManager/test/MiddlewareManager.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/MiddlewareManager/test/MiddlewareManager.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/MiddlewareManager/test/MiddlewareManager.spec.js"],"names":["expect","MiddlewareManager","addingMiddleware","calc","next","args","subtractingMiddleware","describe","Calculator","multiply","a","b","divide","middlewareManager","beforeEach","it","to","equal","applyToMethod","calcMiddleware","calcMiddleware1","calcMiddleware2","applyToAllMethods","middlewareManager2"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport MiddlewareManager from '../MiddlewareManager';\n\nconst addingMiddleware = calc => next => (...args) =>\n  next(args[0] + 1, args[1]);\nconst subtractingMiddleware = calc => next => (...args) =>\n  next(args[0] - 1, args[1]);\n\ndescribe('MiddlewareManager', () => {\n  describe('with Classes', () => {\n    class Calculator {\n      multiply(a, b) {\n        return a * b;\n      }\n\n      divide(a, b) {\n        return a / b;\n      }\n    }\n\n    let calc;\n    let middlewareManager;\n\n    beforeEach(() => {\n      calc = new Calculator();\n      middlewareManager = new MiddlewareManager(calc);\n    });\n\n    it('behaves normally without wrapping', () => {\n      expect(calc.multiply(2, 3)).to.equal(6);\n    });\n\n    describe('applyToMethod', () => {\n      it('intercepts a class method and modifies it', () => {\n        middlewareManager.applyToMethod('multiply', [addingMiddleware]);\n        expect(calc.multiply(2, 3)).to.equal(9);\n      });\n\n      it('allows non-arrays to be passed as a single param', () => {\n        middlewareManager.applyToMethod('multiply', addingMiddleware);\n        expect(calc.multiply(2, 3)).to.equal(9);\n      });\n\n      it('works with multiple middlewares', () => {\n        middlewareManager.applyToMethod('multiply', [\n          addingMiddleware,\n          subtractingMiddleware,\n        ]);\n        expect(calc.multiply(2, 3)).to.equal(6);\n      });\n    });\n\n    describe('middlewareObjects', () => {\n      it('works with a middleware object', () => {\n        const calcMiddleware = {\n          multiply: addingMiddleware,\n        };\n        middlewareManager = new MiddlewareManager(calc, calcMiddleware);\n        expect(calc.multiply(2, 3)).to.equal(9);\n      });\n\n      it('works with a middleware object in array', () => {\n        const calcMiddleware = {\n          multiply: addingMiddleware,\n        };\n        middlewareManager = new MiddlewareManager(calc, [calcMiddleware]);\n        expect(calc.multiply(2, 3)).to.equal(9);\n      });\n\n      it('works with multiple middleware object', () => {\n        const calcMiddleware1 = {\n          multiply: addingMiddleware,\n        };\n        const calcMiddleware2 = {\n          multiply: subtractingMiddleware,\n        };\n        middlewareManager = new MiddlewareManager(calc, [\n          calcMiddleware1,\n          calcMiddleware2,\n        ]);\n        expect(calc.multiply(2, 3)).to.equal(6);\n      });\n    });\n\n    describe('applyToAllMethods', () => {\n      it('applies one middleware to all methods', () => {\n        expect(calc.multiply(2, 3)).to.equal(6);\n        expect(calc.divide(4, 4)).to.equal(1);\n\n        middlewareManager.applyToAllMethods(addingMiddleware);\n\n        expect(calc.multiply(2, 3)).to.equal(9);\n        expect(calc.divide(4, 4)).to.equal(1.25);\n      });\n    });\n\n    it('works with multiple middleware managers', () => {\n      middlewareManager.applyToMethod('multiply', [addingMiddleware]);\n\n      const middlewareManager2 = new MiddlewareManager(calc);\n      middlewareManager2.applyToMethod('multiply', [subtractingMiddleware]);\n\n      expect(calc.multiply(2, 3)).to.equal(6);\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/MiddlewareManager/test/MiddlewareManager.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/MiddlewareManager/test/MiddlewareManager.spec.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet MiddlewareManager;\nmodule.link(\"../MiddlewareManager\", {\n  default(v) {\n    MiddlewareManager = v;\n  }\n\n}, 1);\n\nconst addingMiddleware = calc => next => (...args) => next(args[0] + 1, args[1]);\n\nconst subtractingMiddleware = calc => next => (...args) => next(args[0] - 1, args[1]);\n\ndescribe('MiddlewareManager', () => {\n  describe('with Classes', () => {\n    class Calculator {\n      multiply(a, b) {\n        return a * b;\n      }\n\n      divide(a, b) {\n        return a / b;\n      }\n\n    }\n\n    let calc;\n    let middlewareManager;\n    beforeEach(() => {\n      calc = new Calculator();\n      middlewareManager = new MiddlewareManager(calc);\n    });\n    it('behaves normally without wrapping', () => {\n      expect(calc.multiply(2, 3)).to.equal(6);\n    });\n    describe('applyToMethod', () => {\n      it('intercepts a class method and modifies it', () => {\n        middlewareManager.applyToMethod('multiply', [addingMiddleware]);\n        expect(calc.multiply(2, 3)).to.equal(9);\n      });\n      it('allows non-arrays to be passed as a single param', () => {\n        middlewareManager.applyToMethod('multiply', addingMiddleware);\n        expect(calc.multiply(2, 3)).to.equal(9);\n      });\n      it('works with multiple middlewares', () => {\n        middlewareManager.applyToMethod('multiply', [addingMiddleware, subtractingMiddleware]);\n        expect(calc.multiply(2, 3)).to.equal(6);\n      });\n    });\n    describe('middlewareObjects', () => {\n      it('works with a middleware object', () => {\n        const calcMiddleware = {\n          multiply: addingMiddleware\n        };\n        middlewareManager = new MiddlewareManager(calc, calcMiddleware);\n        expect(calc.multiply(2, 3)).to.equal(9);\n      });\n      it('works with a middleware object in array', () => {\n        const calcMiddleware = {\n          multiply: addingMiddleware\n        };\n        middlewareManager = new MiddlewareManager(calc, [calcMiddleware]);\n        expect(calc.multiply(2, 3)).to.equal(9);\n      });\n      it('works with multiple middleware object', () => {\n        const calcMiddleware1 = {\n          multiply: addingMiddleware\n        };\n        const calcMiddleware2 = {\n          multiply: subtractingMiddleware\n        };\n        middlewareManager = new MiddlewareManager(calc, [calcMiddleware1, calcMiddleware2]);\n        expect(calc.multiply(2, 3)).to.equal(6);\n      });\n    });\n    describe('applyToAllMethods', () => {\n      it('applies one middleware to all methods', () => {\n        expect(calc.multiply(2, 3)).to.equal(6);\n        expect(calc.divide(4, 4)).to.equal(1);\n        middlewareManager.applyToAllMethods(addingMiddleware);\n        expect(calc.multiply(2, 3)).to.equal(9);\n        expect(calc.divide(4, 4)).to.equal(1.25);\n      });\n    });\n    it('works with multiple middleware managers', () => {\n      middlewareManager.applyToMethod('multiply', [addingMiddleware]);\n      const middlewareManager2 = new MiddlewareManager(calc);\n      middlewareManager2.applyToMethod('multiply', [subtractingMiddleware]);\n      expect(calc.multiply(2, 3)).to.equal(6);\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/utils/MiddlewareManager/test/MiddlewareManager.spec.js"],"names":["addingMiddleware","calc","next","args","subtractingMiddleware","describe","multiply","a","divide","beforeEach","middlewareManager","it","expect","calcMiddleware","calcMiddleware1","calcMiddleware2","middlewareManager2"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport MiddlewareManager from '../MiddlewareManager';\n\nconst addingMiddleware = calc => next => (...args) =>\n  next(args[0] + 1, args[1]);\nconst subtractingMiddleware = calc => next => (...args) =>\n  next(args[0] - 1, args[1]);\n\ndescribe('MiddlewareManager', () => {\n  describe('with Classes', () => {\n    class Calculator {\n      multiply(a, b) {\n        return a * b;\n      }\n\n      divide(a, b) {\n        return a / b;\n      }\n    }\n\n    let calc;\n    let middlewareManager;\n\n    beforeEach(() => {\n      calc = new Calculator();\n      middlewareManager = new MiddlewareManager(calc);\n    });\n\n    it('behaves normally without wrapping', () => {\n      expect(calc.multiply(2, 3)).to.equal(6);\n    });\n\n    describe('applyToMethod', () => {\n      it('intercepts a class method and modifies it', () => {\n        middlewareManager.applyToMethod('multiply', [addingMiddleware]);\n        expect(calc.multiply(2, 3)).to.equal(9);\n      });\n\n      it('allows non-arrays to be passed as a single param', () => {\n        middlewareManager.applyToMethod('multiply', addingMiddleware);\n        expect(calc.multiply(2, 3)).to.equal(9);\n      });\n\n      it('works with multiple middlewares', () => {\n        middlewareManager.applyToMethod('multiply', [\n          addingMiddleware,\n          subtractingMiddleware,\n        ]);\n        expect(calc.multiply(2, 3)).to.equal(6);\n      });\n    });\n\n    describe('middlewareObjects', () => {\n      it('works with a middleware object', () => {\n        const calcMiddleware = {\n          multiply: addingMiddleware,\n        };\n        middlewareManager = new MiddlewareManager(calc, calcMiddleware);\n        expect(calc.multiply(2, 3)).to.equal(9);\n      });\n\n      it('works with a middleware object in array', () => {\n        const calcMiddleware = {\n          multiply: addingMiddleware,\n        };\n        middlewareManager = new MiddlewareManager(calc, [calcMiddleware]);\n        expect(calc.multiply(2, 3)).to.equal(9);\n      });\n\n      it('works with multiple middleware object', () => {\n        const calcMiddleware1 = {\n          multiply: addingMiddleware,\n        };\n        const calcMiddleware2 = {\n          multiply: subtractingMiddleware,\n        };\n        middlewareManager = new MiddlewareManager(calc, [\n          calcMiddleware1,\n          calcMiddleware2,\n        ]);\n        expect(calc.multiply(2, 3)).to.equal(6);\n      });\n    });\n\n    describe('applyToAllMethods', () => {\n      it('applies one middleware to all methods', () => {\n        expect(calc.multiply(2, 3)).to.equal(6);\n        expect(calc.divide(4, 4)).to.equal(1);\n\n        middlewareManager.applyToAllMethods(addingMiddleware);\n\n        expect(calc.multiply(2, 3)).to.equal(9);\n        expect(calc.divide(4, 4)).to.equal(1.25);\n      });\n    });\n\n    it('works with multiple middleware managers', () => {\n      middlewareManager.applyToMethod('multiply', [addingMiddleware]);\n\n      const middlewareManager2 = new MiddlewareManager(calc);\n      middlewareManager2.applyToMethod('multiply', [subtractingMiddleware]);\n\n      expect(calc.multiply(2, 3)).to.equal(6);\n    });\n  });\n});\n"]},"sourceType":"script","hash":"685f86bb2d1aeed9a9c67486e1652e30dc2285cb"}
