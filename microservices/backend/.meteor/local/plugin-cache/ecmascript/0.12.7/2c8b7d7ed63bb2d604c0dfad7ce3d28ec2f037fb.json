{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/LoanChecklist/LoanChecklistEmail/test/server/LoanChecklistEmail.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/components/LoanChecklist/LoanChecklistEmail/test/server/LoanChecklistEmail.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/LoanChecklist/LoanChecklistEmail/test/server/LoanChecklistEmail.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/components/LoanChecklist/LoanChecklistEmail/test/server/LoanChecklistEmail.spec.js"],"names":["expect","Intl","getChecklistMissingInformations","describe","context","it","fields","documents","loan","borrowers","_id","additionalDocuments","id","structure","intl","formatMessage","bind","property","to","equal","undefined","length","title","labels","name","propertyId","properties","not"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\nimport Intl from 'core/utils/server/intl';\n\nimport { getChecklistMissingInformations } from '../../../helpers';\n\ndescribe('LoanChecklist', () => {\n  context('getChecklistMissingInformations', () => {\n    describe('returns the right missing informations', () => {\n      it('with one borrower without name', () => {\n        const { fields, documents } = getChecklistMissingInformations({\n          loan: {\n            borrowers: [{ _id: 'paul', additionalDocuments: [{ id: 'doc' }] }],\n            structure: {},\n          },\n          intl: { formatMessage: Intl.formatMessage.bind(Intl) },\n        });\n        expect(fields.property).to.equal(undefined);\n        expect(documents.property).to.equal(undefined);\n        expect(fields.borrowers.length).to.equal(1);\n        expect(documents.borrowers.length).to.equal(1);\n        expect(fields.borrowers[0].title).to.equal('Emprunteur 1');\n        expect(fields.borrowers[0].labels.length).to.equal(18);\n        expect(documents.borrowers[0].title).to.equal('Emprunteur 1');\n        expect(documents.borrowers[0].labels.length).to.equal(1);\n      });\n\n      it('with two borrowers with name', () => {\n        const { fields, documents } = getChecklistMissingInformations({\n          loan: {\n            borrowers: [\n              {\n                _id: 'paul',\n                name: 'Paul',\n                additionalDocuments: [{ id: 'doc' }],\n              },\n              { _id: 'michel', name: 'Michel' },\n            ],\n            structure: {},\n          },\n          intl: { formatMessage: Intl.formatMessage.bind(Intl) },\n        });\n        expect(fields.property).to.equal(undefined);\n        expect(documents.property).to.equal(undefined);\n        expect(fields.borrowers.length).to.equal(2);\n        expect(documents.borrowers.length).to.equal(2);\n        expect(fields.borrowers[0].title).to.equal('Paul');\n        expect(fields.borrowers[0].labels.length).to.equal(18);\n        expect(documents.borrowers[0].title).to.equal('Paul');\n        expect(documents.borrowers[0].labels.length).to.equal(1);\n        expect(fields.borrowers[1].title).to.equal('Michel');\n        expect(fields.borrowers[1].labels.length).to.equal(18);\n        expect(documents.borrowers[1].title).to.equal('Michel');\n        expect(documents.borrowers[1].labels.length).to.equal(0);\n      });\n\n      it('with two borrowers with name and property', () => {\n        const { fields, documents } = getChecklistMissingInformations({\n          loan: {\n            borrowers: [\n              {\n                _id: 'paul',\n                name: 'Paul',\n                additionalDocuments: [{ id: 'doc' }],\n              },\n              { _id: 'michel', name: 'Michel' },\n            ],\n            structure: { propertyId: 'property' },\n            properties: [\n              { _id: 'property', additionalDocuments: [{ id: 'doc' }] },\n            ],\n          },\n          intl: { formatMessage: Intl.formatMessage.bind(Intl) },\n        });\n        expect(fields.property).to.not.equal(undefined);\n        expect(fields.property.title).to.equal('Bien immobilier');\n        expect(fields.property.labels.length).to.equal(14);\n        expect(documents.property).to.not.equal(undefined);\n        expect(documents.property.labels.length).to.equal(1);\n        expect(fields.borrowers.length).to.equal(2);\n        expect(documents.borrowers.length).to.equal(2);\n        expect(fields.borrowers[0].title).to.equal('Paul');\n        expect(fields.borrowers[0].labels.length).to.equal(18);\n        expect(documents.borrowers[0].title).to.equal('Paul');\n        expect(documents.borrowers[0].labels.length).to.equal(1);\n        expect(fields.borrowers[1].title).to.equal('Michel');\n        expect(fields.borrowers[1].labels.length).to.equal(18);\n        expect(documents.borrowers[1].title).to.equal('Michel');\n        expect(documents.borrowers[1].labels.length).to.equal(0);\n      });\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/LoanChecklist/LoanChecklistEmail/test/server/LoanChecklistEmail.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/LoanChecklist/LoanChecklistEmail/test/server/LoanChecklistEmail.spec.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet Intl;\nmodule.link(\"../../../../../utils/server/intl\", {\n  default(v) {\n    Intl = v;\n  }\n\n}, 1);\nlet getChecklistMissingInformations;\nmodule.link(\"../../../helpers\", {\n  getChecklistMissingInformations(v) {\n    getChecklistMissingInformations = v;\n  }\n\n}, 2);\ndescribe('LoanChecklist', () => {\n  context('getChecklistMissingInformations', () => {\n    describe('returns the right missing informations', () => {\n      it('with one borrower without name', () => {\n        const {\n          fields,\n          documents\n        } = getChecklistMissingInformations({\n          loan: {\n            borrowers: [{\n              _id: 'paul',\n              additionalDocuments: [{\n                id: 'doc'\n              }]\n            }],\n            structure: {}\n          },\n          intl: {\n            formatMessage: Intl.formatMessage.bind(Intl)\n          }\n        });\n        expect(fields.property).to.equal(undefined);\n        expect(documents.property).to.equal(undefined);\n        expect(fields.borrowers.length).to.equal(1);\n        expect(documents.borrowers.length).to.equal(1);\n        expect(fields.borrowers[0].title).to.equal('Emprunteur 1');\n        expect(fields.borrowers[0].labels.length).to.equal(18);\n        expect(documents.borrowers[0].title).to.equal('Emprunteur 1');\n        expect(documents.borrowers[0].labels.length).to.equal(1);\n      });\n      it('with two borrowers with name', () => {\n        const {\n          fields,\n          documents\n        } = getChecklistMissingInformations({\n          loan: {\n            borrowers: [{\n              _id: 'paul',\n              name: 'Paul',\n              additionalDocuments: [{\n                id: 'doc'\n              }]\n            }, {\n              _id: 'michel',\n              name: 'Michel'\n            }],\n            structure: {}\n          },\n          intl: {\n            formatMessage: Intl.formatMessage.bind(Intl)\n          }\n        });\n        expect(fields.property).to.equal(undefined);\n        expect(documents.property).to.equal(undefined);\n        expect(fields.borrowers.length).to.equal(2);\n        expect(documents.borrowers.length).to.equal(2);\n        expect(fields.borrowers[0].title).to.equal('Paul');\n        expect(fields.borrowers[0].labels.length).to.equal(18);\n        expect(documents.borrowers[0].title).to.equal('Paul');\n        expect(documents.borrowers[0].labels.length).to.equal(1);\n        expect(fields.borrowers[1].title).to.equal('Michel');\n        expect(fields.borrowers[1].labels.length).to.equal(18);\n        expect(documents.borrowers[1].title).to.equal('Michel');\n        expect(documents.borrowers[1].labels.length).to.equal(0);\n      });\n      it('with two borrowers with name and property', () => {\n        const {\n          fields,\n          documents\n        } = getChecklistMissingInformations({\n          loan: {\n            borrowers: [{\n              _id: 'paul',\n              name: 'Paul',\n              additionalDocuments: [{\n                id: 'doc'\n              }]\n            }, {\n              _id: 'michel',\n              name: 'Michel'\n            }],\n            structure: {\n              propertyId: 'property'\n            },\n            properties: [{\n              _id: 'property',\n              additionalDocuments: [{\n                id: 'doc'\n              }]\n            }]\n          },\n          intl: {\n            formatMessage: Intl.formatMessage.bind(Intl)\n          }\n        });\n        expect(fields.property).to.not.equal(undefined);\n        expect(fields.property.title).to.equal('Bien immobilier');\n        expect(fields.property.labels.length).to.equal(14);\n        expect(documents.property).to.not.equal(undefined);\n        expect(documents.property.labels.length).to.equal(1);\n        expect(fields.borrowers.length).to.equal(2);\n        expect(documents.borrowers.length).to.equal(2);\n        expect(fields.borrowers[0].title).to.equal('Paul');\n        expect(fields.borrowers[0].labels.length).to.equal(18);\n        expect(documents.borrowers[0].title).to.equal('Paul');\n        expect(documents.borrowers[0].labels.length).to.equal(1);\n        expect(fields.borrowers[1].title).to.equal('Michel');\n        expect(fields.borrowers[1].labels.length).to.equal(18);\n        expect(documents.borrowers[1].title).to.equal('Michel');\n        expect(documents.borrowers[1].labels.length).to.equal(0);\n      });\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/components/LoanChecklist/LoanChecklistEmail/test/server/LoanChecklistEmail.spec.js"],"names":["describe","context","it","documents","getChecklistMissingInformations","loan","borrowers","_id","additionalDocuments","id","structure","intl","formatMessage","Intl","expect","fields","name","propertyId","properties"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\nimport Intl from 'core/utils/server/intl';\n\nimport { getChecklistMissingInformations } from '../../../helpers';\n\ndescribe('LoanChecklist', () => {\n  context('getChecklistMissingInformations', () => {\n    describe('returns the right missing informations', () => {\n      it('with one borrower without name', () => {\n        const { fields, documents } = getChecklistMissingInformations({\n          loan: {\n            borrowers: [{ _id: 'paul', additionalDocuments: [{ id: 'doc' }] }],\n            structure: {},\n          },\n          intl: { formatMessage: Intl.formatMessage.bind(Intl) },\n        });\n        expect(fields.property).to.equal(undefined);\n        expect(documents.property).to.equal(undefined);\n        expect(fields.borrowers.length).to.equal(1);\n        expect(documents.borrowers.length).to.equal(1);\n        expect(fields.borrowers[0].title).to.equal('Emprunteur 1');\n        expect(fields.borrowers[0].labels.length).to.equal(18);\n        expect(documents.borrowers[0].title).to.equal('Emprunteur 1');\n        expect(documents.borrowers[0].labels.length).to.equal(1);\n      });\n\n      it('with two borrowers with name', () => {\n        const { fields, documents } = getChecklistMissingInformations({\n          loan: {\n            borrowers: [\n              {\n                _id: 'paul',\n                name: 'Paul',\n                additionalDocuments: [{ id: 'doc' }],\n              },\n              { _id: 'michel', name: 'Michel' },\n            ],\n            structure: {},\n          },\n          intl: { formatMessage: Intl.formatMessage.bind(Intl) },\n        });\n        expect(fields.property).to.equal(undefined);\n        expect(documents.property).to.equal(undefined);\n        expect(fields.borrowers.length).to.equal(2);\n        expect(documents.borrowers.length).to.equal(2);\n        expect(fields.borrowers[0].title).to.equal('Paul');\n        expect(fields.borrowers[0].labels.length).to.equal(18);\n        expect(documents.borrowers[0].title).to.equal('Paul');\n        expect(documents.borrowers[0].labels.length).to.equal(1);\n        expect(fields.borrowers[1].title).to.equal('Michel');\n        expect(fields.borrowers[1].labels.length).to.equal(18);\n        expect(documents.borrowers[1].title).to.equal('Michel');\n        expect(documents.borrowers[1].labels.length).to.equal(0);\n      });\n\n      it('with two borrowers with name and property', () => {\n        const { fields, documents } = getChecklistMissingInformations({\n          loan: {\n            borrowers: [\n              {\n                _id: 'paul',\n                name: 'Paul',\n                additionalDocuments: [{ id: 'doc' }],\n              },\n              { _id: 'michel', name: 'Michel' },\n            ],\n            structure: { propertyId: 'property' },\n            properties: [\n              { _id: 'property', additionalDocuments: [{ id: 'doc' }] },\n            ],\n          },\n          intl: { formatMessage: Intl.formatMessage.bind(Intl) },\n        });\n        expect(fields.property).to.not.equal(undefined);\n        expect(fields.property.title).to.equal('Bien immobilier');\n        expect(fields.property.labels.length).to.equal(14);\n        expect(documents.property).to.not.equal(undefined);\n        expect(documents.property.labels.length).to.equal(1);\n        expect(fields.borrowers.length).to.equal(2);\n        expect(documents.borrowers.length).to.equal(2);\n        expect(fields.borrowers[0].title).to.equal('Paul');\n        expect(fields.borrowers[0].labels.length).to.equal(18);\n        expect(documents.borrowers[0].title).to.equal('Paul');\n        expect(documents.borrowers[0].labels.length).to.equal(1);\n        expect(fields.borrowers[1].title).to.equal('Michel');\n        expect(fields.borrowers[1].labels.length).to.equal(18);\n        expect(documents.borrowers[1].title).to.equal('Michel');\n        expect(documents.borrowers[1].labels.length).to.equal(0);\n      });\n    });\n  });\n});\n"]},"sourceType":"script","hash":"2c8b7d7ed63bb2d604c0dfad7ce3d28ec2f037fb"}
