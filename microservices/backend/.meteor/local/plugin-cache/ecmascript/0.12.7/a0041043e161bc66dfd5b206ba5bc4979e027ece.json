{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/tooltips/TooltipSynonyms.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/components/tooltips/TooltipSynonyms.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/tooltips/TooltipSynonyms.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/tooltips/TooltipSynonyms.jsx"],"names":["React","PropTypes","withProps","generalTooltips","T","findSynonymsForTooltipId","tooltipId","match","tooltips","Object","keys","filter","tooltipMatcher","id","synonym","toLowerCase","TooltipSynonyms","synonyms","length","count","join","propTypes","string","isRequired","object"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,SAASC,eAAT;AACA,OAAOC,CAAP;;AAEA,MAAMC,wBAAwB,GAAG,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,QAAnB,KAC/BC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EACGG,MADH,CACUC,cAAc,IAAIJ,QAAQ,CAACI,cAAD,CAAR,CAAyBC,EAAzB,KAAgCP,SAD5D,EAEGK,MAFH,CAEUG,OAAO,IAAIA,OAAO,KAAKP,KAAK,CAACQ,WAAN,EAFjC,CADF;;AAKA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEV,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAoC;AACjE,QAAMS,QAAQ,GAAGZ,wBAAwB,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,QAAnB,CAAzC;;AAEA,MAAI,CAACS,QAAD,IAAaA,QAAQ,CAACC,MAAT,IAAmB,CAApC,EAAuC;AACrC,WAAO,IAAP;AACD;;AAED,SACE,CAAC,IAAD,CAAM,UAAU,kBAAhB;MACE,CAAC,CAAD;QACE,CAAC,CAAD,CAAG,GAAG,uBAAN,CAA8B,OAAO,CAAC;AAAEC,QAAAA,KAAK,EAAEF,QAAQ,CAACC;AAAlB,OAAD,CAArC;QACA,CAAC,IAAD;MACF,EAAE,CAAF;MACA,CAAC,CAAD,CAAG,CAACD,QAAQ,CAACG,IAAT,CAAc,IAAd,CAAD,CAAqB,EAAE,CAAF;IAC1B,EAAE,IAAF,CAPF;AASD,CAhBM;AAkBPJ,eAAe,CAACK,SAAhB,GAA4B;AAC1Bd,EAAAA,KAAK,EAAEN,SAAS,CAACqB,MAAV,CAAiBC,UADE;AAE1BjB,EAAAA,SAAS,EAAEL,SAAS,CAACqB,MAAV,CAAiBC,UAFF;AAG1Bf,EAAAA,QAAQ,EAAEP,SAAS,CAACuB,MAAV,CAAiBD;AAHD,CAA5B;AAMA,eAAerB,SAAS,CAAC;AAAEM,EAAAA,QAAQ,EAAEL;AAAZ,CAAD,CAAT,CAAyCa,eAAzC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withProps } from 'recompose';\n\nimport { generalTooltips } from '../../arrays/tooltips';\nimport T from '../Translation';\n\nconst findSynonymsForTooltipId = (tooltipId, match, tooltips) =>\n  Object.keys(tooltips)\n    .filter(tooltipMatcher => tooltips[tooltipMatcher].id === tooltipId)\n    .filter(synonym => synonym !== match.toLowerCase());\n\nexport const TooltipSynonyms = ({ tooltipId, match, tooltips }) => {\n  const synonyms = findSynonymsForTooltipId(tooltipId, match, tooltips);\n\n  if (!synonyms || synonyms.length <= 0) {\n    return null;\n  }\n\n  return (\n    <span className=\"tooltip-synonyms\">\n      <b>\n        <T id=\"TooltipSynonyms.title\" values={{ count: synonyms.length }} />\n        {': '}\n      </b>\n      <i>{synonyms.join(', ')}</i>\n    </span>\n  );\n};\n\nTooltipSynonyms.propTypes = {\n  match: PropTypes.string.isRequired,\n  tooltipId: PropTypes.string.isRequired,\n  tooltips: PropTypes.object.isRequired,\n};\n\nexport default withProps({ tooltips: generalTooltips })(TooltipSynonyms);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/tooltips/TooltipSynonyms.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/tooltips/TooltipSynonyms.jsx"}},"code":"module.export({\n  TooltipSynonyms: () => TooltipSynonyms\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet withProps;\nmodule.link(\"recompose\", {\n  withProps(v) {\n    withProps = v;\n  }\n\n}, 2);\nlet generalTooltips;\nmodule.link(\"../../arrays/tooltips\", {\n  generalTooltips(v) {\n    generalTooltips = v;\n  }\n\n}, 3);\nlet T;\nmodule.link(\"../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 4);\n\nconst findSynonymsForTooltipId = (tooltipId, match, tooltips) => Object.keys(tooltips).filter(tooltipMatcher => tooltips[tooltipMatcher].id === tooltipId).filter(synonym => synonym !== match.toLowerCase());\n\nconst TooltipSynonyms = ({\n  tooltipId,\n  match,\n  tooltips\n}) => {\n  const synonyms = findSynonymsForTooltipId(tooltipId, match, tooltips);\n\n  if (!synonyms || synonyms.length <= 0) {\n    return null;\n  }\n\n  return React.createElement(\"span\", {\n    className: \"tooltip-synonyms\"\n  }, React.createElement(\"b\", null, React.createElement(T, {\n    id: \"TooltipSynonyms.title\",\n    values: {\n      count: synonyms.length\n    }\n  }), ': '), React.createElement(\"i\", null, synonyms.join(', ')));\n};\n\nTooltipSynonyms.propTypes = {\n  match: PropTypes.string.isRequired,\n  tooltipId: PropTypes.string.isRequired,\n  tooltips: PropTypes.object.isRequired\n};\nmodule.exportDefault(withProps({\n  tooltips: generalTooltips\n})(TooltipSynonyms));","map":{"version":3,"sources":["imports/core/components/tooltips/TooltipSynonyms.jsx"],"names":["findSynonymsForTooltipId","Object","tooltipMatcher","tooltips","synonym","match","TooltipSynonyms","synonyms","count","length","PropTypes","tooltipId","isRequired","generalTooltips"],"mappings":"AAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,eAAA,EAAA,MAAA;AAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,CAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,CAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAOA,MAAMA,wBAAwB,GAAG,CAAA,SAAA,EAAA,KAAA,EAAA,QAAA,KAC/BC,MAAM,CAANA,IAAAA,CAAAA,QAAAA,EAAAA,MAAAA,CACUC,cAAc,IAAIC,QAAQ,CAARA,cAAQ,CAARA,CAAAA,EAAAA,KAD5BF,SAAAA,EAAAA,MAAAA,CAEUG,OAAO,IAAIA,OAAO,KAAKC,KAAK,CAHxC,WAGmCA,EAFjCJ,CADF;;AAKO,MAAMK,eAAe,GAAG,CAAC;AAAA,EAAA,SAAA;AAAA,EAAA,KAAA;AAAoBH,EAAAA;AAApB,CAAD,KAAoC;AACjE,QAAMI,QAAQ,GAAGP,wBAAwB,CAAA,SAAA,EAAA,KAAA,EAAzC,QAAyC,CAAzC;;AAEA,MAAI,CAAA,QAAA,IAAaO,QAAQ,CAARA,MAAAA,IAAjB,CAAA,EAAuC;AACrC,WAAA,IAAA;AACD;;AAED,SACE;AAAM,IAAA,SAAA,EAAN;AAAA,KACE,+BACE,oBAAA,CAAA;AAAG,IAAA,EAAA,EAAH,uBAAA;AAA8B,IAAA,MAAA,EAAQ;AAAEC,MAAAA,KAAK,EAAED,QAAQ,CAACE;AAAlB;AAAtC,IADF,EAEE,IAFF,CADF,EAKE,+BAAIF,QAAQ,CAARA,IAAAA,CAAD,IAACA,CAAJ,CALF,CADF;AAPK,CAAA;;AAkBPD,eAAe,CAAfA,SAAAA,GAA4B;AAC1BD,EAAAA,KAAK,EAAEK,SAAS,CAATA,MAAAA,CADmB,UAAA;AAE1BC,EAAAA,SAAS,EAAED,SAAS,CAATA,MAAAA,CAFe,UAAA;AAG1BP,EAAAA,QAAQ,EAAEO,SAAS,CAATA,MAAAA,CAAiBE;AAHD,CAA5BN;AA9BA,MAAA,CAAA,aAAA,CAoCe,SAAS,CAAC;AAAEH,EAAAA,QAAQ,EAAEU;AAAZ,CAAD,CAAT,CAAf,eAAe,CApCf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withProps } from 'recompose';\n\nimport { generalTooltips } from '../../arrays/tooltips';\nimport T from '../Translation';\n\nconst findSynonymsForTooltipId = (tooltipId, match, tooltips) =>\n  Object.keys(tooltips)\n    .filter(tooltipMatcher => tooltips[tooltipMatcher].id === tooltipId)\n    .filter(synonym => synonym !== match.toLowerCase());\n\nexport const TooltipSynonyms = ({ tooltipId, match, tooltips }) => {\n  const synonyms = findSynonymsForTooltipId(tooltipId, match, tooltips);\n\n  if (!synonyms || synonyms.length <= 0) {\n    return null;\n  }\n\n  return (\n    <span className=\"tooltip-synonyms\">\n      <b>\n        <T id=\"TooltipSynonyms.title\" values={{ count: synonyms.length }} />\n        {': '}\n      </b>\n      <i>{synonyms.join(', ')}</i>\n    </span>\n  );\n};\n\nTooltipSynonyms.propTypes = {\n  match: PropTypes.string.isRequired,\n  tooltipId: PropTypes.string.isRequired,\n  tooltips: PropTypes.object.isRequired,\n};\n\nexport default withProps({ tooltips: generalTooltips })(TooltipSynonyms);\n"]},"sourceType":"script","hash":"a0041043e161bc66dfd5b206ba5bc4979e027ece"}
