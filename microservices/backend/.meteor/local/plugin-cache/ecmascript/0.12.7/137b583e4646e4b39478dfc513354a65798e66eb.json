{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/BorrowerFormArray.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/arrays/BorrowerFormArray.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/BorrowerFormArray.jsx","inputSourceMap":{"version":3,"sources":["imports/core/arrays/BorrowerFormArray.jsx"],"names":["constants","React","CantonField","BorrowerAddPartner","shouldDisplayAddPartner","b","civilStatus","multiple","isFirst","CIVIL_STATUS","MARRIED","makeArrayOfObjectsInput","id","type","required","inputs","money","getBorrowerInfoArray","borrowers","borrowerId","loanId","find","_id","length","Error","disableAddress","sameAddress","addressFieldsAreNecessary","options","Object","values","GENDER","intlValues","name","firstName","condition","placeholder","address1","noIntl","address2","component","canton","conditionalTrueValue","RESIDENCY_PERMIT","isSwiss","map","value","number","autoComplete","getBorrowerFinanceArray","incomeArray","ignore","className","year","bonus2015","OTHER_INCOME","EXPENSES","percent","fortuneArray","RESIDENCE_TYPE","insuranceArray","concat","getSimpleBorrowerFinanceArray","getBorrowerSimpleArray","loan","borrower","simpleBorrowersForm","simple","anonymous"],"mappings":"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","sourcesContent":["import * as constants from 'core/api/constants';\nimport React from 'react';\n\nimport CantonField from 'core/components/CantonField/CantonField';\nimport BorrowerAddPartner from '../components/BorrowerAddPartner';\n\nconst shouldDisplayAddPartner = ({ b: { civilStatus }, multiple, isFirst }) =>\n  civilStatus === constants.CIVIL_STATUS.MARRIED && !multiple && isFirst;\n\nconst makeArrayOfObjectsInput = id => ({\n  id,\n  type: 'arrayInput',\n  required: false,\n  inputs: [\n    { id: 'description', type: 'textInput' },\n    { id: 'value', type: 'textInput', money: true },\n  ],\n});\n\nexport const getBorrowerInfoArray = ({ borrowers, borrowerId, loanId }) => {\n  const b = borrowers.find(({ _id }) => _id === borrowerId);\n  const multiple = borrowers.length > 1;\n  // If this is the first borrower in the array of borrowers, don't ask for same address\n  const isFirst = borrowers[0]._id === borrowerId;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const disableAddress = !!b.sameAddress && !isFirst;\n  const addressFieldsAreNecessary = !b.sameAddress;\n\n  return [\n    { id: 'firstName', type: 'textInput' },\n    { id: 'lastName', type: 'textInput' },\n    {\n      id: 'gender',\n      type: 'radioInput',\n      options: Object.values(constants.GENDER),\n    },\n    {\n      id: 'sameAddress',\n      type: 'radioInput',\n      intlValues: { name: borrowers[0].firstName || 'Emprunteur 1' },\n      options: [true, false],\n      condition: multiple && !isFirst,\n    },\n    // {\n    //   id: 'isForeignAddress',\n    //   type: 'radioInput',\n    //   options: [true, false],\n    //   condition: !disableAddress,\n    //   required: addressFieldsAreNecessary,\n    // },\n    {\n      id: 'address1',\n      type: 'textInput',\n      condition: !disableAddress,\n      placeholder: disableAddress && borrowers[0].address1,\n      noIntl: disableAddress,\n      required: addressFieldsAreNecessary,\n    },\n    {\n      id: 'address2',\n      type: 'textInput',\n      condition: !disableAddress,\n      required: false,\n      placeholder: disableAddress && borrowers[0].address2,\n      noIntl: disableAddress,\n    },\n    {\n      id: 'city',\n      type: 'textInput',\n      condition: !disableAddress,\n      placeholder: disableAddress && borrowers[0].address1,\n      noIntl: disableAddress,\n      required: addressFieldsAreNecessary,\n    },\n    {\n      id: 'zipCode',\n      type: 'textInput',\n      condition: !disableAddress,\n      placeholder: disableAddress && borrowers[0].address1,\n      noIntl: disableAddress,\n      required: addressFieldsAreNecessary,\n    },\n    {\n      type: 'custom',\n      id: 'canton',\n      component: <CantonField canton={b.canton} />,\n      condition: !disableAddress,\n      required: addressFieldsAreNecessary,\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: false,\n      inputs: [\n        { id: 'isSwiss', type: 'radioInput', options: [true, false] },\n        {\n          id: 'residencyPermit',\n          type: 'selectFieldInput',\n          options: Object.values(constants.RESIDENCY_PERMIT),\n        },\n      ],\n    },\n    // {\n    //   id: 'age',\n    //   type: 'textInput',\n    //   number: true,\n    //   saveOnChange: false,\n    // },\n    {\n      id: 'birthDate',\n      type: 'dateInput',\n    },\n    { id: 'citizenship', type: 'textInput', condition: !b.isSwiss },\n    { id: 'isUSPerson', type: 'radioInput', options: [true, false] },\n    {\n      id: 'civilStatus',\n      type: 'radioInput',\n      options: Object.values(constants.CIVIL_STATUS).map(value => ({\n        id: value,\n      })),\n    },\n    {\n      id: 'addPartner',\n      type: 'custom',\n      component: <BorrowerAddPartner loanId={loanId} />,\n      condition: shouldDisplayAddPartner({ b, multiple, isFirst }),\n      required: false,\n    },\n    { id: 'childrenCount', type: 'textInput', number: true },\n    {\n      id: 'company',\n      type: 'textInput',\n      required: false,\n      autoComplete: 'organisation',\n    },\n  ];\n};\n\nexport const getBorrowerFinanceArray = ({ borrowers, borrowerId }) => {\n  const b = borrowers.find(({ _id }) => _id === borrowerId);\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const incomeArray = [\n    {\n      type: 'h3',\n      id: 'incomeAndExpenses',\n      ignore: true,\n      required: false,\n      className: 'v-align-incomeAndExpenses',\n    },\n    { id: 'salary', type: 'textInput', money: true },\n    { id: 'netSalary', type: 'textInput', money: true },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: true,\n      inputs: [\n        {\n          id: 'bonusExists',\n          type: 'radioInput',\n          options: [true, false],\n        },\n        ...[2019, 2018, 2017, 2016, 2015].map(year => ({\n          id: `bonus${year}`,\n          type: 'textInput',\n          money: true,\n          condition: year === 2015 ? !!b.bonus2015 : true,\n        })),\n      ],\n    },\n    {\n      id: 'otherIncome',\n      type: 'arrayInput',\n      required: false,\n      inputs: [\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.OTHER_INCOME),\n        },\n        { id: 'value', type: 'textInput', money: true },\n      ],\n    },\n    {\n      id: 'expenses',\n      type: 'arrayInput',\n      required: false,\n      inputs: [\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.EXPENSES),\n        },\n        { id: 'value', type: 'textInput', money: true },\n      ],\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: true,\n      inputs: [\n        {\n          id: 'hasOwnCompany',\n          type: 'radioInput',\n          options: [true, false],\n        },\n        {\n          id: 'ownCompanies',\n          type: 'arrayInput',\n          inputs: [\n            { id: 'description', type: 'textInput' },\n            { id: 'ownership', type: 'textInput', percent: true },\n            { id: 'netIncome2018', type: 'textInput', money: true },\n            { id: 'netIncome2017', type: 'textInput', money: true },\n            { id: 'netIncome2016', type: 'textInput', money: true },\n          ],\n        },\n      ],\n    },\n  ];\n\n  const fortuneArray = [\n    {\n      type: 'h3',\n      id: 'fortune',\n      ignore: true,\n      required: false,\n      className: 'v-align-fortune',\n    },\n    { id: 'bankFortune', type: 'textInput', money: true },\n    {\n      id: 'thirdPartyFortune',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n    {\n      id: 'realEstate',\n      type: 'arrayInput',\n      required: false,\n      inputs: [\n        { id: 'name', type: 'textInput' },\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.RESIDENCE_TYPE),\n        },\n        { id: 'value', type: 'textInput', money: true },\n        { id: 'loan', type: 'textInput', money: true },\n        { id: 'income', type: 'textInput', money: true, required: false },\n      ],\n    },\n    makeArrayOfObjectsInput('otherFortune'),\n  ];\n\n  const insuranceArray = [\n    {\n      type: 'h3',\n      id: 'insurance',\n      required: false,\n      ignore: true,\n      className: 'v-align-insurance',\n    },\n    makeArrayOfObjectsInput('insurance2'),\n    makeArrayOfObjectsInput('bank3A'),\n    makeArrayOfObjectsInput('insurance3A'),\n    makeArrayOfObjectsInput('insurance3B'),\n  ];\n\n  return incomeArray.concat([...fortuneArray, ...insuranceArray]);\n};\n\nexport const getSimpleBorrowerFinanceArray = ({ borrowers, borrowerId }) => {\n  const b = borrowers.find(({ _id }) => _id === borrowerId);\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const incomeArray = [\n    {\n      type: 'h3',\n      id: 'financeInformations',\n      ignore: true,\n      required: false,\n      className: 'v-align-financeInformations',\n    },\n    { id: 'salary', type: 'textInput', money: true },\n    { id: 'netSalary', type: 'textInput', money: true },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: true,\n      inputs: [\n        {\n          id: 'bonusExists',\n          type: 'radioInput',\n          options: [true, false],\n        },\n        ...[2019, 2018, 2017, 2016, 2015].map(year => ({\n          id: `bonus${year}`,\n          type: 'textInput',\n          money: true,\n          condition: year === 2015 ? !!b.bonus2015 : true,\n        })),\n      ],\n    },\n  ];\n\n  const fortuneArray = [{ id: 'bankFortune', type: 'textInput', money: true }];\n\n  const insuranceArray = [\n    { id: 'insurance2Simple', type: 'textInput', money: true, required: false },\n    { id: 'bank3ASimple', type: 'textInput', money: true, required: false },\n    {\n      id: 'insurance3ASimple',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n    {\n      id: 'insurance3BSimple',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n  ];\n\n  return incomeArray.concat([...fortuneArray, ...insuranceArray]);\n};\n\nexport const getBorrowerSimpleArray = ({\n  borrowers,\n  borrowerId,\n  loan = {},\n}) => {\n  const b = borrowers.find(borrower => borrower._id === borrowerId);\n  const { simpleBorrowersForm: simple = true } = loan;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  return [\n    { id: 'firstName', type: 'textInput', condition: !loan.anonymous },\n    { id: 'lastName', type: 'textInput', condition: !loan.anonymous },\n    { id: 'birthDate', type: 'dateInput', condition: !loan.anonymous },\n    ...(simple\n      ? getSimpleBorrowerFinanceArray({ borrowers, borrowerId })\n      : getBorrowerFinanceArray({ borrowers, borrowerId })),\n  ];\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/BorrowerFormArray.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/arrays/BorrowerFormArray.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nmodule.export({\n  getBorrowerInfoArray: function () {\n    return getBorrowerInfoArray;\n  },\n  getBorrowerFinanceArray: function () {\n    return getBorrowerFinanceArray;\n  },\n  getSimpleBorrowerFinanceArray: function () {\n    return getSimpleBorrowerFinanceArray;\n  },\n  getBorrowerSimpleArray: function () {\n    return getBorrowerSimpleArray;\n  }\n});\nvar constants;\nmodule.link(\"../api/constants\", {\n  \"*\": function (v) {\n    constants = v;\n  }\n}, 0);\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 1);\nvar CantonField;\nmodule.link(\"../components/CantonField/CantonField\", {\n  \"default\": function (v) {\n    CantonField = v;\n  }\n}, 2);\nvar BorrowerAddPartner;\nmodule.link(\"../components/BorrowerAddPartner\", {\n  \"default\": function (v) {\n    BorrowerAddPartner = v;\n  }\n}, 3);\n\nvar shouldDisplayAddPartner = function (_ref) {\n  var civilStatus = _ref.b.civilStatus,\n      multiple = _ref.multiple,\n      isFirst = _ref.isFirst;\n  return civilStatus === constants.CIVIL_STATUS.MARRIED && !multiple && isFirst;\n};\n\nvar makeArrayOfObjectsInput = function (id) {\n  return {\n    id: id,\n    type: 'arrayInput',\n    required: false,\n    inputs: [{\n      id: 'description',\n      type: 'textInput'\n    }, {\n      id: 'value',\n      type: 'textInput',\n      money: true\n    }]\n  };\n};\n\nvar getBorrowerInfoArray = function (_ref2) {\n  var borrowers = _ref2.borrowers,\n      borrowerId = _ref2.borrowerId,\n      loanId = _ref2.loanId;\n  var b = borrowers.find(function (_ref3) {\n    var _id = _ref3._id;\n    return _id === borrowerId;\n  });\n  var multiple = borrowers.length > 1; // If this is the first borrower in the array of borrowers, don't ask for same address\n\n  var isFirst = borrowers[0]._id === borrowerId;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  var disableAddress = !!b.sameAddress && !isFirst;\n  var addressFieldsAreNecessary = !b.sameAddress;\n  return [{\n    id: 'firstName',\n    type: 'textInput'\n  }, {\n    id: 'lastName',\n    type: 'textInput'\n  }, {\n    id: 'gender',\n    type: 'radioInput',\n    options: Object.values(constants.GENDER)\n  }, {\n    id: 'sameAddress',\n    type: 'radioInput',\n    intlValues: {\n      name: borrowers[0].firstName || 'Emprunteur 1'\n    },\n    options: [true, false],\n    condition: multiple && !isFirst\n  }, // {\n  //   id: 'isForeignAddress',\n  //   type: 'radioInput',\n  //   options: [true, false],\n  //   condition: !disableAddress,\n  //   required: addressFieldsAreNecessary,\n  // },\n  {\n    id: 'address1',\n    type: 'textInput',\n    condition: !disableAddress,\n    placeholder: disableAddress && borrowers[0].address1,\n    noIntl: disableAddress,\n    required: addressFieldsAreNecessary\n  }, {\n    id: 'address2',\n    type: 'textInput',\n    condition: !disableAddress,\n    required: false,\n    placeholder: disableAddress && borrowers[0].address2,\n    noIntl: disableAddress\n  }, {\n    id: 'city',\n    type: 'textInput',\n    condition: !disableAddress,\n    placeholder: disableAddress && borrowers[0].address1,\n    noIntl: disableAddress,\n    required: addressFieldsAreNecessary\n  }, {\n    id: 'zipCode',\n    type: 'textInput',\n    condition: !disableAddress,\n    placeholder: disableAddress && borrowers[0].address1,\n    noIntl: disableAddress,\n    required: addressFieldsAreNecessary\n  }, {\n    type: 'custom',\n    id: 'canton',\n    component: React.createElement(CantonField, {\n      canton: b.canton\n    }),\n    condition: !disableAddress,\n    required: addressFieldsAreNecessary\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: false,\n    inputs: [{\n      id: 'isSwiss',\n      type: 'radioInput',\n      options: [true, false]\n    }, {\n      id: 'residencyPermit',\n      type: 'selectFieldInput',\n      options: Object.values(constants.RESIDENCY_PERMIT)\n    }]\n  }, // {\n  //   id: 'age',\n  //   type: 'textInput',\n  //   number: true,\n  //   saveOnChange: false,\n  // },\n  {\n    id: 'birthDate',\n    type: 'dateInput'\n  }, {\n    id: 'citizenship',\n    type: 'textInput',\n    condition: !b.isSwiss\n  }, {\n    id: 'isUSPerson',\n    type: 'radioInput',\n    options: [true, false]\n  }, {\n    id: 'civilStatus',\n    type: 'radioInput',\n    options: Object.values(constants.CIVIL_STATUS).map(function (value) {\n      return {\n        id: value\n      };\n    })\n  }, {\n    id: 'addPartner',\n    type: 'custom',\n    component: React.createElement(BorrowerAddPartner, {\n      loanId: loanId\n    }),\n    condition: shouldDisplayAddPartner({\n      b: b,\n      multiple: multiple,\n      isFirst: isFirst\n    }),\n    required: false\n  }, {\n    id: 'childrenCount',\n    type: 'textInput',\n    number: true\n  }, {\n    id: 'company',\n    type: 'textInput',\n    required: false,\n    autoComplete: 'organisation'\n  }];\n};\n\nvar getBorrowerFinanceArray = function (_ref4) {\n  var borrowers = _ref4.borrowers,\n      borrowerId = _ref4.borrowerId;\n  var b = borrowers.find(function (_ref5) {\n    var _id = _ref5._id;\n    return _id === borrowerId;\n  });\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  var incomeArray = [{\n    type: 'h3',\n    id: 'incomeAndExpenses',\n    ignore: true,\n    required: false,\n    className: 'v-align-incomeAndExpenses'\n  }, {\n    id: 'salary',\n    type: 'textInput',\n    money: true\n  }, {\n    id: 'netSalary',\n    type: 'textInput',\n    money: true\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: true,\n    inputs: [{\n      id: 'bonusExists',\n      type: 'radioInput',\n      options: [true, false]\n    }].concat((0, _toConsumableArray2.default)([2019, 2018, 2017, 2016, 2015].map(function (year) {\n      return {\n        id: \"bonus\" + year,\n        type: 'textInput',\n        money: true,\n        condition: year === 2015 ? !!b.bonus2015 : true\n      };\n    })))\n  }, {\n    id: 'otherIncome',\n    type: 'arrayInput',\n    required: false,\n    inputs: [{\n      id: 'description',\n      type: 'selectInput',\n      options: Object.values(constants.OTHER_INCOME)\n    }, {\n      id: 'value',\n      type: 'textInput',\n      money: true\n    }]\n  }, {\n    id: 'expenses',\n    type: 'arrayInput',\n    required: false,\n    inputs: [{\n      id: 'description',\n      type: 'selectInput',\n      options: Object.values(constants.EXPENSES)\n    }, {\n      id: 'value',\n      type: 'textInput',\n      money: true\n    }]\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: true,\n    inputs: [{\n      id: 'hasOwnCompany',\n      type: 'radioInput',\n      options: [true, false]\n    }, {\n      id: 'ownCompanies',\n      type: 'arrayInput',\n      inputs: [{\n        id: 'description',\n        type: 'textInput'\n      }, {\n        id: 'ownership',\n        type: 'textInput',\n        percent: true\n      }, {\n        id: 'netIncome2018',\n        type: 'textInput',\n        money: true\n      }, {\n        id: 'netIncome2017',\n        type: 'textInput',\n        money: true\n      }, {\n        id: 'netIncome2016',\n        type: 'textInput',\n        money: true\n      }]\n    }]\n  }];\n  var fortuneArray = [{\n    type: 'h3',\n    id: 'fortune',\n    ignore: true,\n    required: false,\n    className: 'v-align-fortune'\n  }, {\n    id: 'bankFortune',\n    type: 'textInput',\n    money: true\n  }, {\n    id: 'thirdPartyFortune',\n    type: 'textInput',\n    money: true,\n    required: false\n  }, {\n    id: 'realEstate',\n    type: 'arrayInput',\n    required: false,\n    inputs: [{\n      id: 'name',\n      type: 'textInput'\n    }, {\n      id: 'description',\n      type: 'selectInput',\n      options: Object.values(constants.RESIDENCE_TYPE)\n    }, {\n      id: 'value',\n      type: 'textInput',\n      money: true\n    }, {\n      id: 'loan',\n      type: 'textInput',\n      money: true\n    }, {\n      id: 'income',\n      type: 'textInput',\n      money: true,\n      required: false\n    }]\n  }, makeArrayOfObjectsInput('otherFortune')];\n  var insuranceArray = [{\n    type: 'h3',\n    id: 'insurance',\n    required: false,\n    ignore: true,\n    className: 'v-align-insurance'\n  }, makeArrayOfObjectsInput('insurance2'), makeArrayOfObjectsInput('bank3A'), makeArrayOfObjectsInput('insurance3A'), makeArrayOfObjectsInput('insurance3B')];\n  return incomeArray.concat([].concat(fortuneArray, insuranceArray));\n};\n\nvar getSimpleBorrowerFinanceArray = function (_ref6) {\n  var borrowers = _ref6.borrowers,\n      borrowerId = _ref6.borrowerId;\n  var b = borrowers.find(function (_ref7) {\n    var _id = _ref7._id;\n    return _id === borrowerId;\n  });\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  var incomeArray = [{\n    type: 'h3',\n    id: 'financeInformations',\n    ignore: true,\n    required: false,\n    className: 'v-align-financeInformations'\n  }, {\n    id: 'salary',\n    type: 'textInput',\n    money: true\n  }, {\n    id: 'netSalary',\n    type: 'textInput',\n    money: true\n  }, {\n    type: 'conditionalInput',\n    conditionalTrueValue: true,\n    inputs: [{\n      id: 'bonusExists',\n      type: 'radioInput',\n      options: [true, false]\n    }].concat((0, _toConsumableArray2.default)([2019, 2018, 2017, 2016, 2015].map(function (year) {\n      return {\n        id: \"bonus\" + year,\n        type: 'textInput',\n        money: true,\n        condition: year === 2015 ? !!b.bonus2015 : true\n      };\n    })))\n  }];\n  var fortuneArray = [{\n    id: 'bankFortune',\n    type: 'textInput',\n    money: true\n  }];\n  var insuranceArray = [{\n    id: 'insurance2Simple',\n    type: 'textInput',\n    money: true,\n    required: false\n  }, {\n    id: 'bank3ASimple',\n    type: 'textInput',\n    money: true,\n    required: false\n  }, {\n    id: 'insurance3ASimple',\n    type: 'textInput',\n    money: true,\n    required: false\n  }, {\n    id: 'insurance3BSimple',\n    type: 'textInput',\n    money: true,\n    required: false\n  }];\n  return incomeArray.concat([].concat(fortuneArray, insuranceArray));\n};\n\nvar getBorrowerSimpleArray = function (_ref8) {\n  var borrowers = _ref8.borrowers,\n      borrowerId = _ref8.borrowerId,\n      _ref8$loan = _ref8.loan,\n      loan = _ref8$loan === void 0 ? {} : _ref8$loan;\n  var b = borrowers.find(function (borrower) {\n    return borrower._id === borrowerId;\n  });\n  var _loan$simpleBorrowers = loan.simpleBorrowersForm,\n      simple = _loan$simpleBorrowers === void 0 ? true : _loan$simpleBorrowers;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  return [{\n    id: 'firstName',\n    type: 'textInput',\n    condition: !loan.anonymous\n  }, {\n    id: 'lastName',\n    type: 'textInput',\n    condition: !loan.anonymous\n  }, {\n    id: 'birthDate',\n    type: 'dateInput',\n    condition: !loan.anonymous\n  }].concat((0, _toConsumableArray2.default)(simple ? getSimpleBorrowerFinanceArray({\n    borrowers: borrowers,\n    borrowerId: borrowerId\n  }) : getBorrowerFinanceArray({\n    borrowers: borrowers,\n    borrowerId: borrowerId\n  })));\n};","map":{"version":3,"sources":["imports/core/arrays/BorrowerFormArray.jsx"],"names":["constants","shouldDisplayAddPartner","b","civilStatus","isFirst","makeArrayOfObjectsInput","id","type","required","inputs","money","getBorrowerInfoArray","loanId","borrowers","_id","multiple","disableAddress","addressFieldsAreNecessary","options","Object","intlValues","name","condition","placeholder","noIntl","component","conditionalTrueValue","isSwiss","value","number","autoComplete","getBorrowerFinanceArray","borrowerId","incomeArray","ignore","className","year","percent","fortuneArray","insuranceArray","getSimpleBorrowerFinanceArray","getBorrowerSimpleArray","loan","borrower","simpleBorrowersForm","simple","anonymous"],"mappings":";;;;AAAA,MAAA,CAAO,MAAP,CAAYA;AAAZ,EAAA,oBAAA,EAAA;AAAA,WAAA,oBAAA;AAAA,GAAYA;AAAZ,EAAA,uBAAA,EAAA;AAAA,WAAA,uBAAA;AAAA,GAAYA;AAAZ,EAAA,6BAAA,EAAA;AAAA,WAAA,6BAAA;AAAA,GAAYA;AAAZ,EAAA,sBAAA,EAAA;AAAA,WAAA,sBAAA;AAAA;AAAYA,CAAZ;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,KAAA,YAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uCAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,kBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kCAAA,EAAA;AAAA,uBAAA,CAAA,EAAA;AAAA,IAAA,kBAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;;AAMA,IAAMC,uBAAuB,GAAG;AAAA,MAAQE,WAAR,QAAGD,CAAH,CAAQC,WAAR;AAAA,MAAC,QAAD,QAAC,QAAD;AAAA,MAAiCC,OAAjC,QAAiCA,OAAjC;AAAA,SAC9BD,WAAW,KAAKH,SAAS,CAATA,YAAAA,CAAhBG,OAAAA,IAAkD,CAAlDA,QAAAA,IADF,OAAgC;AAAA,CAAhC;;AAGA,IAAME,uBAAuB,GAAGC,UAAAA,EAAE;AAAA,SAAK;AACrCA,IAAAA,EADqC,EACrCA,EADqC;AAErCC,IAAAA,IAAI,EAFiC,YAAA;AAGrCC,IAAAA,QAAQ,EAH6B,KAAA;AAIrCC,IAAAA,MAAM,EAAE,CACN;AAAEH,MAAAA,EAAE,EAAJ,aAAA;AAAqBC,MAAAA,IAAI,EAAE;AAA3B,KADM,EAEN;AAAED,MAAAA,EAAE,EAAJ,OAAA;AAAeC,MAAAA,IAAI,EAAnB,WAAA;AAAkCG,MAAAA,KAAK,EAAE;AAAzC,KAFM;AAJ6B,GAAL;AAAA,CAAlC;;AAUO,IAAMC,oBAAoB,GAAG,iBAAuC;AAAA,MAAtC,SAAsC,SAAtC,SAAsC;AAAA,MAAtC,UAAsC,SAAtC,UAAsC;AAAA,MAAbC,MAAa,SAAbA,MAAa;AACzE,MAAMV,CAAC,GAAGW,SAAS,CAATA,IAAAA,CAAe;AAAA,QAAGC,GAAH,SAAGA,GAAH;AAAA,WAAaA,GAAG,KAAzC,UAAyB;AAAA,GAAfD,CAAV;AACA,MAAME,QAAQ,GAAGF,SAAS,CAATA,MAAAA,GAFwD,CAEzE,CAFyE,CAGzE;;AACA,MAAMT,OAAO,GAAGS,SAAS,CAATA,CAAS,CAATA,CAAAA,GAAAA,KAAhB,UAAA;;AAEA,MAAI,CAAJ,CAAA,EAAQ;AACN,UAAM,IAAA,KAAA,CAAN,wBAAM,CAAN;AACD;;AAED,MAAMG,cAAc,GAAG,CAAC,CAACd,CAAC,CAAH,WAAA,IAAmB,CAA1C,OAAA;AACA,MAAMe,yBAAyB,GAAG,CAACf,CAAC,CAApC,WAAA;AAEA,SAAO,CACL;AAAEI,IAAAA,EAAE,EAAJ,WAAA;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GADK,EAEL;AAAED,IAAAA,EAAE,EAAJ,UAAA;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAFK,EAGL;AACED,IAAAA,EAAE,EADJ,QAAA;AAEEC,IAAAA,IAAI,EAFN,YAAA;AAGEW,IAAAA,OAAO,EAAEC,MAAM,CAANA,MAAAA,CAAcnB,SAAS,CAAvBmB,MAAAA;AAHX,GAHK,EAQL;AACEb,IAAAA,EAAE,EADJ,aAAA;AAEEC,IAAAA,IAAI,EAFN,YAAA;AAGEa,IAAAA,UAAU,EAAE;AAAEC,MAAAA,IAAI,EAAER,SAAS,CAATA,CAAS,CAATA,CAAAA,SAAAA,IAA0B;AAAlC,KAHd;AAIEK,IAAAA,OAAO,EAAE,CAAA,IAAA,EAJX,KAIW,CAJX;AAKEI,IAAAA,SAAS,EAAEP,QAAQ,IAAI,CAACX;AAL1B,GARK,EAeL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEE,IAAAA,EAAE,EADJ,UAAA;AAEEC,IAAAA,IAAI,EAFN,WAAA;AAGEe,IAAAA,SAAS,EAAE,CAHb,cAAA;AAIEC,IAAAA,WAAW,EAAEP,cAAc,IAAIH,SAAS,CAATA,CAAS,CAATA,CAJjC,QAAA;AAKEW,IAAAA,MAAM,EALR,cAAA;AAMEhB,IAAAA,QAAQ,EAAES;AANZ,GAtBK,EA8BL;AACEX,IAAAA,EAAE,EADJ,UAAA;AAEEC,IAAAA,IAAI,EAFN,WAAA;AAGEe,IAAAA,SAAS,EAAE,CAHb,cAAA;AAIEd,IAAAA,QAAQ,EAJV,KAAA;AAKEe,IAAAA,WAAW,EAAEP,cAAc,IAAIH,SAAS,CAATA,CAAS,CAATA,CALjC,QAAA;AAMEW,IAAAA,MAAM,EAAER;AANV,GA9BK,EAsCL;AACEV,IAAAA,EAAE,EADJ,MAAA;AAEEC,IAAAA,IAAI,EAFN,WAAA;AAGEe,IAAAA,SAAS,EAAE,CAHb,cAAA;AAIEC,IAAAA,WAAW,EAAEP,cAAc,IAAIH,SAAS,CAATA,CAAS,CAATA,CAJjC,QAAA;AAKEW,IAAAA,MAAM,EALR,cAAA;AAMEhB,IAAAA,QAAQ,EAAES;AANZ,GAtCK,EA8CL;AACEX,IAAAA,EAAE,EADJ,SAAA;AAEEC,IAAAA,IAAI,EAFN,WAAA;AAGEe,IAAAA,SAAS,EAAE,CAHb,cAAA;AAIEC,IAAAA,WAAW,EAAEP,cAAc,IAAIH,SAAS,CAATA,CAAS,CAATA,CAJjC,QAAA;AAKEW,IAAAA,MAAM,EALR,cAAA;AAMEhB,IAAAA,QAAQ,EAAES;AANZ,GA9CK,EAsDL;AACEV,IAAAA,IAAI,EADN,QAAA;AAEED,IAAAA,EAAE,EAFJ,QAAA;AAGEmB,IAAAA,SAAS,EAAE,oBAAA,WAAA;AAAa,MAAA,MAAA,EAAQvB,CAAC,CAHnC;AAGa,MAHb;AAIEoB,IAAAA,SAAS,EAAE,CAJb,cAAA;AAKEd,IAAAA,QAAQ,EAAES;AALZ,GAtDK,EA6DL;AACEV,IAAAA,IAAI,EADN,kBAAA;AAEEmB,IAAAA,oBAAoB,EAFtB,KAAA;AAGEjB,IAAAA,MAAM,EAAE,CACN;AAAEH,MAAAA,EAAE,EAAJ,SAAA;AAAiBC,MAAAA,IAAI,EAArB,YAAA;AAAqCW,MAAAA,OAAO,EAAE,CAAA,IAAA,EAAA,KAAA;AAA9C,KADM,EAEN;AACEZ,MAAAA,EAAE,EADJ,iBAAA;AAEEC,MAAAA,IAAI,EAFN,kBAAA;AAGEW,MAAAA,OAAO,EAAEC,MAAM,CAANA,MAAAA,CAAcnB,SAAS,CAAvBmB,gBAAAA;AAHX,KAFM;AAHV,GA7DK,EAyEL;AACA;AACA;AACA;AACA;AACA;AACA;AACEb,IAAAA,EAAE,EADJ,WAAA;AAEEC,IAAAA,IAAI,EAAE;AAFR,GA/EK,EAmFL;AAAED,IAAAA,EAAE,EAAJ,aAAA;AAAqBC,IAAAA,IAAI,EAAzB,WAAA;AAAwCe,IAAAA,SAAS,EAAE,CAACpB,CAAC,CAACyB;AAAtD,GAnFK,EAoFL;AAAErB,IAAAA,EAAE,EAAJ,YAAA;AAAoBC,IAAAA,IAAI,EAAxB,YAAA;AAAwCW,IAAAA,OAAO,EAAE,CAAA,IAAA,EAAA,KAAA;AAAjD,GApFK,EAqFL;AACEZ,IAAAA,EAAE,EADJ,aAAA;AAEEC,IAAAA,IAAI,EAFN,YAAA;AAGEW,IAAAA,OAAO,EAAE,MAAM,CAAN,MAAA,CAAclB,SAAS,CAAvB,YAAA,EAAA,GAAA,CAA0C4B,UAAAA,KAAK;AAAA,aAAK;AAC3DtB,QAAAA,EAAE,EAAEsB;AADuD,OAAL;AAAA,KAA/C;AAHX,GArFK,EA4FL;AACEtB,IAAAA,EAAE,EADJ,YAAA;AAEEC,IAAAA,IAAI,EAFN,QAAA;AAGEkB,IAAAA,SAAS,EAAE,oBAAA,kBAAA;AAAoB,MAAA,MAAA,EAHjC;AAGa,MAHb;AAIEH,IAAAA,SAAS,EAAErB,uBAAuB,CAAC;AAAEC,MAAAA,CAAF,EAAEA,CAAF;AAAKa,MAAAA,QAAL,EAAKA,QAAL;AAAeX,MAAAA,OAAAA,EAAAA;AAAf,KAAD,CAJpC;AAKEI,IAAAA,QAAQ,EAAE;AALZ,GA5FK,EAmGL;AAAEF,IAAAA,EAAE,EAAJ,eAAA;AAAuBC,IAAAA,IAAI,EAA3B,WAAA;AAA0CsB,IAAAA,MAAM,EAAE;AAAlD,GAnGK,EAoGL;AACEvB,IAAAA,EAAE,EADJ,SAAA;AAEEC,IAAAA,IAAI,EAFN,WAAA;AAGEC,IAAAA,QAAQ,EAHV,KAAA;AAIEsB,IAAAA,YAAY,EAAE;AAJhB,GApGK,CAAP;AAbK,CAAA;;AA0HA,IAAMC,uBAAuB,GAAG,iBAA+B;AAAA,MAA9B,SAA8B,SAA9B,SAA8B;AAAA,MAAjBC,UAAiB,SAAjBA,UAAiB;AACpE,MAAM9B,CAAC,GAAGW,SAAS,CAATA,IAAAA,CAAe;AAAA,QAAGC,GAAH,SAAGA,GAAH;AAAA,WAAaA,GAAG,KAAzC,UAAyB;AAAA,GAAfD,CAAV;;AAEA,MAAI,CAAJ,CAAA,EAAQ;AACN,UAAM,IAAA,KAAA,CAAN,wBAAM,CAAN;AACD;;AAED,MAAMoB,WAAW,GAAG,CAClB;AACE1B,IAAAA,IAAI,EADN,IAAA;AAEED,IAAAA,EAAE,EAFJ,mBAAA;AAGE4B,IAAAA,MAAM,EAHR,IAAA;AAIE1B,IAAAA,QAAQ,EAJV,KAAA;AAKE2B,IAAAA,SAAS,EAAE;AALb,GADkB,EAQlB;AAAE7B,IAAAA,EAAE,EAAJ,QAAA;AAAgBC,IAAAA,IAAI,EAApB,WAAA;AAAmCG,IAAAA,KAAK,EAAE;AAA1C,GARkB,EASlB;AAAEJ,IAAAA,EAAE,EAAJ,WAAA;AAAmBC,IAAAA,IAAI,EAAvB,WAAA;AAAsCG,IAAAA,KAAK,EAAE;AAA7C,GATkB,EAUlB;AACEH,IAAAA,IAAI,EADN,kBAAA;AAEEmB,IAAAA,oBAAoB,EAFtB,IAAA;AAGEjB,IAAAA,MAAM,GACJ;AACEH,MAAAA,EAAE,EADJ,aAAA;AAEEC,MAAAA,IAAI,EAFN,YAAA;AAGEW,MAAAA,OAAO,EAAE,CAAA,IAAA,EAAA,KAAA;AAHX,KADI,0CAMD,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,CAAmCkB,UAAAA,IAAI;AAAA,aAAK;AAC7C9B,QAAAA,EAAE,YAD2C,IAAA;AAE7CC,QAAAA,IAAI,EAFyC,WAAA;AAG7CG,QAAAA,KAAK,EAHwC,IAAA;AAI7CY,QAAAA,SAAS,EAAEc,IAAI,KAAJA,IAAAA,GAAgB,CAAC,CAAClC,CAAC,CAAnBkC,SAAAA,GAAgC;AAJE,OAAL;AAAA,KAAvC,CANC;AAHR,GAVkB,EA2BlB;AACE9B,IAAAA,EAAE,EADJ,aAAA;AAEEC,IAAAA,IAAI,EAFN,YAAA;AAGEC,IAAAA,QAAQ,EAHV,KAAA;AAIEC,IAAAA,MAAM,EAAE,CACN;AACEH,MAAAA,EAAE,EADJ,aAAA;AAEEC,MAAAA,IAAI,EAFN,aAAA;AAGEW,MAAAA,OAAO,EAAEC,MAAM,CAANA,MAAAA,CAAcnB,SAAS,CAAvBmB,YAAAA;AAHX,KADM,EAMN;AAAEb,MAAAA,EAAE,EAAJ,OAAA;AAAeC,MAAAA,IAAI,EAAnB,WAAA;AAAkCG,MAAAA,KAAK,EAAE;AAAzC,KANM;AAJV,GA3BkB,EAwClB;AACEJ,IAAAA,EAAE,EADJ,UAAA;AAEEC,IAAAA,IAAI,EAFN,YAAA;AAGEC,IAAAA,QAAQ,EAHV,KAAA;AAIEC,IAAAA,MAAM,EAAE,CACN;AACEH,MAAAA,EAAE,EADJ,aAAA;AAEEC,MAAAA,IAAI,EAFN,aAAA;AAGEW,MAAAA,OAAO,EAAEC,MAAM,CAANA,MAAAA,CAAcnB,SAAS,CAAvBmB,QAAAA;AAHX,KADM,EAMN;AAAEb,MAAAA,EAAE,EAAJ,OAAA;AAAeC,MAAAA,IAAI,EAAnB,WAAA;AAAkCG,MAAAA,KAAK,EAAE;AAAzC,KANM;AAJV,GAxCkB,EAqDlB;AACEH,IAAAA,IAAI,EADN,kBAAA;AAEEmB,IAAAA,oBAAoB,EAFtB,IAAA;AAGEjB,IAAAA,MAAM,EAAE,CACN;AACEH,MAAAA,EAAE,EADJ,eAAA;AAEEC,MAAAA,IAAI,EAFN,YAAA;AAGEW,MAAAA,OAAO,EAAE,CAAA,IAAA,EAAA,KAAA;AAHX,KADM,EAMN;AACEZ,MAAAA,EAAE,EADJ,cAAA;AAEEC,MAAAA,IAAI,EAFN,YAAA;AAGEE,MAAAA,MAAM,EAAE,CACN;AAAEH,QAAAA,EAAE,EAAJ,aAAA;AAAqBC,QAAAA,IAAI,EAAE;AAA3B,OADM,EAEN;AAAED,QAAAA,EAAE,EAAJ,WAAA;AAAmBC,QAAAA,IAAI,EAAvB,WAAA;AAAsC8B,QAAAA,OAAO,EAAE;AAA/C,OAFM,EAGN;AAAE/B,QAAAA,EAAE,EAAJ,eAAA;AAAuBC,QAAAA,IAAI,EAA3B,WAAA;AAA0CG,QAAAA,KAAK,EAAE;AAAjD,OAHM,EAIN;AAAEJ,QAAAA,EAAE,EAAJ,eAAA;AAAuBC,QAAAA,IAAI,EAA3B,WAAA;AAA0CG,QAAAA,KAAK,EAAE;AAAjD,OAJM,EAKN;AAAEJ,QAAAA,EAAE,EAAJ,eAAA;AAAuBC,QAAAA,IAAI,EAA3B,WAAA;AAA0CG,QAAAA,KAAK,EAAE;AAAjD,OALM;AAHV,KANM;AAHV,GArDkB,CAApB;AA6EA,MAAM4B,YAAY,GAAG,CACnB;AACE/B,IAAAA,IAAI,EADN,IAAA;AAEED,IAAAA,EAAE,EAFJ,SAAA;AAGE4B,IAAAA,MAAM,EAHR,IAAA;AAIE1B,IAAAA,QAAQ,EAJV,KAAA;AAKE2B,IAAAA,SAAS,EAAE;AALb,GADmB,EAQnB;AAAE7B,IAAAA,EAAE,EAAJ,aAAA;AAAqBC,IAAAA,IAAI,EAAzB,WAAA;AAAwCG,IAAAA,KAAK,EAAE;AAA/C,GARmB,EASnB;AACEJ,IAAAA,EAAE,EADJ,mBAAA;AAEEC,IAAAA,IAAI,EAFN,WAAA;AAGEG,IAAAA,KAAK,EAHP,IAAA;AAIEF,IAAAA,QAAQ,EAAE;AAJZ,GATmB,EAenB;AACEF,IAAAA,EAAE,EADJ,YAAA;AAEEC,IAAAA,IAAI,EAFN,YAAA;AAGEC,IAAAA,QAAQ,EAHV,KAAA;AAIEC,IAAAA,MAAM,EAAE,CACN;AAAEH,MAAAA,EAAE,EAAJ,MAAA;AAAcC,MAAAA,IAAI,EAAE;AAApB,KADM,EAEN;AACED,MAAAA,EAAE,EADJ,aAAA;AAEEC,MAAAA,IAAI,EAFN,aAAA;AAGEW,MAAAA,OAAO,EAAEC,MAAM,CAANA,MAAAA,CAAcnB,SAAS,CAAvBmB,cAAAA;AAHX,KAFM,EAON;AAAEb,MAAAA,EAAE,EAAJ,OAAA;AAAeC,MAAAA,IAAI,EAAnB,WAAA;AAAkCG,MAAAA,KAAK,EAAE;AAAzC,KAPM,EAQN;AAAEJ,MAAAA,EAAE,EAAJ,MAAA;AAAcC,MAAAA,IAAI,EAAlB,WAAA;AAAiCG,MAAAA,KAAK,EAAE;AAAxC,KARM,EASN;AAAEJ,MAAAA,EAAE,EAAJ,QAAA;AAAgBC,MAAAA,IAAI,EAApB,WAAA;AAAmCG,MAAAA,KAAK,EAAxC,IAAA;AAAgDF,MAAAA,QAAQ,EAAE;AAA1D,KATM;AAJV,GAfmB,EA+BnBH,uBAAuB,CA/BzB,cA+ByB,CA/BJ,CAArB;AAkCA,MAAMkC,cAAc,GAAG,CACrB;AACEhC,IAAAA,IAAI,EADN,IAAA;AAEED,IAAAA,EAAE,EAFJ,WAAA;AAGEE,IAAAA,QAAQ,EAHV,KAAA;AAIE0B,IAAAA,MAAM,EAJR,IAAA;AAKEC,IAAAA,SAAS,EAAE;AALb,GADqB,EAQrB9B,uBAAuB,CARF,YAQE,CARF,EASrBA,uBAAuB,CATF,QASE,CATF,EAUrBA,uBAAuB,CAVF,aAUE,CAVF,EAWrBA,uBAAuB,CAXzB,aAWyB,CAXF,CAAvB;AAcA,SAAO4B,WAAW,CAAXA,MAAAA,WAAmB,YAAnBA,EAAP,cAAOA,EAAP;AApIK,CAAA;;AAuIA,IAAMO,6BAA6B,GAAG,iBAA+B;AAAA,MAA9B,SAA8B,SAA9B,SAA8B;AAAA,MAAjBR,UAAiB,SAAjBA,UAAiB;AAC1E,MAAM9B,CAAC,GAAGW,SAAS,CAATA,IAAAA,CAAe;AAAA,QAAGC,GAAH,SAAGA,GAAH;AAAA,WAAaA,GAAG,KAAzC,UAAyB;AAAA,GAAfD,CAAV;;AAEA,MAAI,CAAJ,CAAA,EAAQ;AACN,UAAM,IAAA,KAAA,CAAN,wBAAM,CAAN;AACD;;AAED,MAAMoB,WAAW,GAAG,CAClB;AACE1B,IAAAA,IAAI,EADN,IAAA;AAEED,IAAAA,EAAE,EAFJ,qBAAA;AAGE4B,IAAAA,MAAM,EAHR,IAAA;AAIE1B,IAAAA,QAAQ,EAJV,KAAA;AAKE2B,IAAAA,SAAS,EAAE;AALb,GADkB,EAQlB;AAAE7B,IAAAA,EAAE,EAAJ,QAAA;AAAgBC,IAAAA,IAAI,EAApB,WAAA;AAAmCG,IAAAA,KAAK,EAAE;AAA1C,GARkB,EASlB;AAAEJ,IAAAA,EAAE,EAAJ,WAAA;AAAmBC,IAAAA,IAAI,EAAvB,WAAA;AAAsCG,IAAAA,KAAK,EAAE;AAA7C,GATkB,EAUlB;AACEH,IAAAA,IAAI,EADN,kBAAA;AAEEmB,IAAAA,oBAAoB,EAFtB,IAAA;AAGEjB,IAAAA,MAAM,GACJ;AACEH,MAAAA,EAAE,EADJ,aAAA;AAEEC,MAAAA,IAAI,EAFN,YAAA;AAGEW,MAAAA,OAAO,EAAE,CAAA,IAAA,EAAA,KAAA;AAHX,KADI,0CAMD,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,CAAmCkB,UAAAA,IAAI;AAAA,aAAK;AAC7C9B,QAAAA,EAAE,YAD2C,IAAA;AAE7CC,QAAAA,IAAI,EAFyC,WAAA;AAG7CG,QAAAA,KAAK,EAHwC,IAAA;AAI7CY,QAAAA,SAAS,EAAEc,IAAI,KAAJA,IAAAA,GAAgB,CAAC,CAAClC,CAAC,CAAnBkC,SAAAA,GAAgC;AAJE,OAAL;AAAA,KAAvC,CANC;AAHR,GAVkB,CAApB;AA6BA,MAAME,YAAY,GAAG,CAAC;AAAEhC,IAAAA,EAAE,EAAJ,aAAA;AAAqBC,IAAAA,IAAI,EAAzB,WAAA;AAAwCG,IAAAA,KAAK,EAAE;AAA/C,GAAD,CAArB;AAEA,MAAM6B,cAAc,GAAG,CACrB;AAAEjC,IAAAA,EAAE,EAAJ,kBAAA;AAA0BC,IAAAA,IAAI,EAA9B,WAAA;AAA6CG,IAAAA,KAAK,EAAlD,IAAA;AAA0DF,IAAAA,QAAQ,EAAE;AAApE,GADqB,EAErB;AAAEF,IAAAA,EAAE,EAAJ,cAAA;AAAsBC,IAAAA,IAAI,EAA1B,WAAA;AAAyCG,IAAAA,KAAK,EAA9C,IAAA;AAAsDF,IAAAA,QAAQ,EAAE;AAAhE,GAFqB,EAGrB;AACEF,IAAAA,EAAE,EADJ,mBAAA;AAEEC,IAAAA,IAAI,EAFN,WAAA;AAGEG,IAAAA,KAAK,EAHP,IAAA;AAIEF,IAAAA,QAAQ,EAAE;AAJZ,GAHqB,EASrB;AACEF,IAAAA,EAAE,EADJ,mBAAA;AAEEC,IAAAA,IAAI,EAFN,WAAA;AAGEG,IAAAA,KAAK,EAHP,IAAA;AAIEF,IAAAA,QAAQ,EAAE;AAJZ,GATqB,CAAvB;AAiBA,SAAOyB,WAAW,CAAXA,MAAAA,WAAmB,YAAnBA,EAAP,cAAOA,EAAP;AAvDK,CAAA;;AA0DA,IAAMQ,sBAAsB,GAAG,iBAIhC;AAAA,MAJiC,SAIjC,SAJiC,SAIjC;AAAA,MAJiC,UAIjC,SAJiC,UAIjC;AAAA,yBADJC,IACI;AAAA,MADJA,IACI,2BADG,EACH;AACJ,MAAMxC,CAAC,GAAGW,SAAS,CAATA,IAAAA,CAAe8B,UAAAA,QAAQ;AAAA,WAAIA,QAAQ,CAARA,GAAAA,KAArC,UAAiC;AAAA,GAAvB9B,CAAV;AADI,8BAEJ,IAFI,CAEI+B,mBAFJ;AAAA,MAEyBC,MAFzB,sCAEkC,IAFlC;;AAIJ,MAAI,CAAJ,CAAA,EAAQ;AACN,UAAM,IAAA,KAAA,CAAN,wBAAM,CAAN;AACD;;AAED,UACE;AAAEvC,IAAAA,EAAE,EAAJ,WAAA;AAAmBC,IAAAA,IAAI,EAAvB,WAAA;AAAsCe,IAAAA,SAAS,EAAE,CAACoB,IAAI,CAACI;AAAvD,GADF,EAEE;AAAExC,IAAAA,EAAE,EAAJ,UAAA;AAAkBC,IAAAA,IAAI,EAAtB,WAAA;AAAqCe,IAAAA,SAAS,EAAE,CAACoB,IAAI,CAACI;AAAtD,GAFF,EAGE;AAAExC,IAAAA,EAAE,EAAJ,WAAA;AAAmBC,IAAAA,IAAI,EAAvB,WAAA;AAAsCe,IAAAA,SAAS,EAAE,CAACoB,IAAI,CAACI;AAAvD,GAHF,0CAIMD,MAAM,GACNL,6BAA6B,CAAC;AAAE3B,IAAAA,SAAF,EAAEA,SAAF;AAAamB,IAAAA,UAAAA,EAAAA;AAAb,GAAD,CADvB,GAEND,uBAAuB,CAAC;AAAElB,IAAAA,SAAF,EAAEA,SAAF;AAAamB,IAAAA,UAAAA,EAAAA;AAAb,GAAD,CAN7B;AAZK,CAAA","sourcesContent":["import * as constants from 'core/api/constants';\nimport React from 'react';\n\nimport CantonField from 'core/components/CantonField/CantonField';\nimport BorrowerAddPartner from '../components/BorrowerAddPartner';\n\nconst shouldDisplayAddPartner = ({ b: { civilStatus }, multiple, isFirst }) =>\n  civilStatus === constants.CIVIL_STATUS.MARRIED && !multiple && isFirst;\n\nconst makeArrayOfObjectsInput = id => ({\n  id,\n  type: 'arrayInput',\n  required: false,\n  inputs: [\n    { id: 'description', type: 'textInput' },\n    { id: 'value', type: 'textInput', money: true },\n  ],\n});\n\nexport const getBorrowerInfoArray = ({ borrowers, borrowerId, loanId }) => {\n  const b = borrowers.find(({ _id }) => _id === borrowerId);\n  const multiple = borrowers.length > 1;\n  // If this is the first borrower in the array of borrowers, don't ask for same address\n  const isFirst = borrowers[0]._id === borrowerId;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const disableAddress = !!b.sameAddress && !isFirst;\n  const addressFieldsAreNecessary = !b.sameAddress;\n\n  return [\n    { id: 'firstName', type: 'textInput' },\n    { id: 'lastName', type: 'textInput' },\n    {\n      id: 'gender',\n      type: 'radioInput',\n      options: Object.values(constants.GENDER),\n    },\n    {\n      id: 'sameAddress',\n      type: 'radioInput',\n      intlValues: { name: borrowers[0].firstName || 'Emprunteur 1' },\n      options: [true, false],\n      condition: multiple && !isFirst,\n    },\n    // {\n    //   id: 'isForeignAddress',\n    //   type: 'radioInput',\n    //   options: [true, false],\n    //   condition: !disableAddress,\n    //   required: addressFieldsAreNecessary,\n    // },\n    {\n      id: 'address1',\n      type: 'textInput',\n      condition: !disableAddress,\n      placeholder: disableAddress && borrowers[0].address1,\n      noIntl: disableAddress,\n      required: addressFieldsAreNecessary,\n    },\n    {\n      id: 'address2',\n      type: 'textInput',\n      condition: !disableAddress,\n      required: false,\n      placeholder: disableAddress && borrowers[0].address2,\n      noIntl: disableAddress,\n    },\n    {\n      id: 'city',\n      type: 'textInput',\n      condition: !disableAddress,\n      placeholder: disableAddress && borrowers[0].address1,\n      noIntl: disableAddress,\n      required: addressFieldsAreNecessary,\n    },\n    {\n      id: 'zipCode',\n      type: 'textInput',\n      condition: !disableAddress,\n      placeholder: disableAddress && borrowers[0].address1,\n      noIntl: disableAddress,\n      required: addressFieldsAreNecessary,\n    },\n    {\n      type: 'custom',\n      id: 'canton',\n      component: <CantonField canton={b.canton} />,\n      condition: !disableAddress,\n      required: addressFieldsAreNecessary,\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: false,\n      inputs: [\n        { id: 'isSwiss', type: 'radioInput', options: [true, false] },\n        {\n          id: 'residencyPermit',\n          type: 'selectFieldInput',\n          options: Object.values(constants.RESIDENCY_PERMIT),\n        },\n      ],\n    },\n    // {\n    //   id: 'age',\n    //   type: 'textInput',\n    //   number: true,\n    //   saveOnChange: false,\n    // },\n    {\n      id: 'birthDate',\n      type: 'dateInput',\n    },\n    { id: 'citizenship', type: 'textInput', condition: !b.isSwiss },\n    { id: 'isUSPerson', type: 'radioInput', options: [true, false] },\n    {\n      id: 'civilStatus',\n      type: 'radioInput',\n      options: Object.values(constants.CIVIL_STATUS).map(value => ({\n        id: value,\n      })),\n    },\n    {\n      id: 'addPartner',\n      type: 'custom',\n      component: <BorrowerAddPartner loanId={loanId} />,\n      condition: shouldDisplayAddPartner({ b, multiple, isFirst }),\n      required: false,\n    },\n    { id: 'childrenCount', type: 'textInput', number: true },\n    {\n      id: 'company',\n      type: 'textInput',\n      required: false,\n      autoComplete: 'organisation',\n    },\n  ];\n};\n\nexport const getBorrowerFinanceArray = ({ borrowers, borrowerId }) => {\n  const b = borrowers.find(({ _id }) => _id === borrowerId);\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const incomeArray = [\n    {\n      type: 'h3',\n      id: 'incomeAndExpenses',\n      ignore: true,\n      required: false,\n      className: 'v-align-incomeAndExpenses',\n    },\n    { id: 'salary', type: 'textInput', money: true },\n    { id: 'netSalary', type: 'textInput', money: true },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: true,\n      inputs: [\n        {\n          id: 'bonusExists',\n          type: 'radioInput',\n          options: [true, false],\n        },\n        ...[2019, 2018, 2017, 2016, 2015].map(year => ({\n          id: `bonus${year}`,\n          type: 'textInput',\n          money: true,\n          condition: year === 2015 ? !!b.bonus2015 : true,\n        })),\n      ],\n    },\n    {\n      id: 'otherIncome',\n      type: 'arrayInput',\n      required: false,\n      inputs: [\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.OTHER_INCOME),\n        },\n        { id: 'value', type: 'textInput', money: true },\n      ],\n    },\n    {\n      id: 'expenses',\n      type: 'arrayInput',\n      required: false,\n      inputs: [\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.EXPENSES),\n        },\n        { id: 'value', type: 'textInput', money: true },\n      ],\n    },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: true,\n      inputs: [\n        {\n          id: 'hasOwnCompany',\n          type: 'radioInput',\n          options: [true, false],\n        },\n        {\n          id: 'ownCompanies',\n          type: 'arrayInput',\n          inputs: [\n            { id: 'description', type: 'textInput' },\n            { id: 'ownership', type: 'textInput', percent: true },\n            { id: 'netIncome2018', type: 'textInput', money: true },\n            { id: 'netIncome2017', type: 'textInput', money: true },\n            { id: 'netIncome2016', type: 'textInput', money: true },\n          ],\n        },\n      ],\n    },\n  ];\n\n  const fortuneArray = [\n    {\n      type: 'h3',\n      id: 'fortune',\n      ignore: true,\n      required: false,\n      className: 'v-align-fortune',\n    },\n    { id: 'bankFortune', type: 'textInput', money: true },\n    {\n      id: 'thirdPartyFortune',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n    {\n      id: 'realEstate',\n      type: 'arrayInput',\n      required: false,\n      inputs: [\n        { id: 'name', type: 'textInput' },\n        {\n          id: 'description',\n          type: 'selectInput',\n          options: Object.values(constants.RESIDENCE_TYPE),\n        },\n        { id: 'value', type: 'textInput', money: true },\n        { id: 'loan', type: 'textInput', money: true },\n        { id: 'income', type: 'textInput', money: true, required: false },\n      ],\n    },\n    makeArrayOfObjectsInput('otherFortune'),\n  ];\n\n  const insuranceArray = [\n    {\n      type: 'h3',\n      id: 'insurance',\n      required: false,\n      ignore: true,\n      className: 'v-align-insurance',\n    },\n    makeArrayOfObjectsInput('insurance2'),\n    makeArrayOfObjectsInput('bank3A'),\n    makeArrayOfObjectsInput('insurance3A'),\n    makeArrayOfObjectsInput('insurance3B'),\n  ];\n\n  return incomeArray.concat([...fortuneArray, ...insuranceArray]);\n};\n\nexport const getSimpleBorrowerFinanceArray = ({ borrowers, borrowerId }) => {\n  const b = borrowers.find(({ _id }) => _id === borrowerId);\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  const incomeArray = [\n    {\n      type: 'h3',\n      id: 'financeInformations',\n      ignore: true,\n      required: false,\n      className: 'v-align-financeInformations',\n    },\n    { id: 'salary', type: 'textInput', money: true },\n    { id: 'netSalary', type: 'textInput', money: true },\n    {\n      type: 'conditionalInput',\n      conditionalTrueValue: true,\n      inputs: [\n        {\n          id: 'bonusExists',\n          type: 'radioInput',\n          options: [true, false],\n        },\n        ...[2019, 2018, 2017, 2016, 2015].map(year => ({\n          id: `bonus${year}`,\n          type: 'textInput',\n          money: true,\n          condition: year === 2015 ? !!b.bonus2015 : true,\n        })),\n      ],\n    },\n  ];\n\n  const fortuneArray = [{ id: 'bankFortune', type: 'textInput', money: true }];\n\n  const insuranceArray = [\n    { id: 'insurance2Simple', type: 'textInput', money: true, required: false },\n    { id: 'bank3ASimple', type: 'textInput', money: true, required: false },\n    {\n      id: 'insurance3ASimple',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n    {\n      id: 'insurance3BSimple',\n      type: 'textInput',\n      money: true,\n      required: false,\n    },\n  ];\n\n  return incomeArray.concat([...fortuneArray, ...insuranceArray]);\n};\n\nexport const getBorrowerSimpleArray = ({\n  borrowers,\n  borrowerId,\n  loan = {},\n}) => {\n  const b = borrowers.find(borrower => borrower._id === borrowerId);\n  const { simpleBorrowersForm: simple = true } = loan;\n\n  if (!b) {\n    throw new Error(\"couldn't find borrower\");\n  }\n\n  return [\n    { id: 'firstName', type: 'textInput', condition: !loan.anonymous },\n    { id: 'lastName', type: 'textInput', condition: !loan.anonymous },\n    { id: 'birthDate', type: 'dateInput', condition: !loan.anonymous },\n    ...(simple\n      ? getSimpleBorrowerFinanceArray({ borrowers, borrowerId })\n      : getBorrowerFinanceArray({ borrowers, borrowerId })),\n  ];\n};\n"]},"sourceType":"script","hash":"137b583e4646e4b39478dfc513354a65798e66eb"}
