{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Translation/numberComponents/Money.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/Translation/numberComponents/Money.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Translation/numberComponents/Money.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/Translation/numberComponents/Money.jsx"],"names":["React","PropTypes","toMoney","getValue","displayZero","value","currency","rounded","Money","className","tag","Tag","propTypes","string","bool","number","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,QAAtB;AAAgCC,EAAAA;AAAhC,CAAD,KAA+C;AAC9D,MAAI,CAACH,WAAD,KAAiB,CAACC,KAAD,IAAUA,KAAK,KAAK,CAArC,CAAJ,EAA6C;AAC3C,WAAO,GAAP;AACD;;AAED,MAAIA,KAAK,KAAK,CAAV,IAAe,CAACA,KAApB,EAA2B;AACzB,WAAOC,QAAQ,GAAG,CAAH,GAAO,EAAE,UAAU,GAAlC;AACD;;AAED,SAAOA,QAAQ,GACb;;MAEE,CAACJ,OAAO,CAACG,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,CAAR;IACF,GAJa,GAMbL,OAAO,CAACG,KAAD,EAAQ;AAAEE,IAAAA;AAAF,GAAR,CANT;AAQD,CAjBD,C,CAmBA;AACA;AACA;;;AACA,MAAMC,KAAK,GAAG,CAAC;AACbH,EAAAA,KADa;AAEbC,EAAAA,QAFa;AAGbF,EAAAA,WAHa;AAIbK,EAAAA,SAJa;AAKbC,EAAAA,GAAG,EAAEC,GALQ;AAMbJ,EAAAA;AANa,CAAD,KAQZ,CAAC,GAAD,CAAK,UAAU,CAACE,SAAD,CAAf;IACE,CAACN,QAAQ,CAAC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,GAAD,CAAT;EACF,EAAE,GAAF,CAVF;;AAaAC,KAAK,CAACI,SAAN,GAAkB;AAChBH,EAAAA,SAAS,EAAER,SAAS,CAACY,MADL;AAEhBP,EAAAA,QAAQ,EAAEL,SAAS,CAACa,IAFJ;AAGhBV,EAAAA,WAAW,EAAEH,SAAS,CAACa,IAHP;AAIhBJ,EAAAA,GAAG,EAAET,SAAS,CAACY,MAJC;AAKhBR,EAAAA,KAAK,EAAEJ,SAAS,CAACc;AALD,CAAlB;AAQAP,KAAK,CAACQ,YAAN,GAAqB;AACnBP,EAAAA,SAAS,EAAE,EADQ;AAEnBH,EAAAA,QAAQ,EAAE,IAFS;AAGnBF,EAAAA,WAAW,EAAE,IAHM;AAInBM,EAAAA,GAAG,EAAE,MAJc;AAKnBL,EAAAA,KAAK,EAAE;AALY,CAArB;AAQA,eAAeG,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { toMoney } from '../../../utils/conversionFunctions';\n\nconst getValue = ({ displayZero, value, currency, rounded }) => {\n  if (!displayZero && (!value || value === 0)) {\n    return '-';\n  }\n\n  if (value !== 0 && !value) {\n    return currency ? 0 : <>CHF&nbsp;0</>;\n  }\n\n  return currency ? (\n    <>\n      CHF&nbsp;\n      {toMoney(value, { rounded })}\n    </>\n  ) : (\n    toMoney(value, { rounded })\n  );\n};\n\n// The Intl standard for CHF is messed up, and display the currency after the\n// monetary value, which is not what we want. We can use IntlNumber later on\n// if needed\nconst Money = ({\n  value,\n  currency,\n  displayZero,\n  className,\n  tag: Tag,\n  rounded,\n}) => (\n  <Tag className={className}>\n    {getValue({ displayZero, value, currency, rounded })}\n  </Tag>\n);\n\nMoney.propTypes = {\n  className: PropTypes.string,\n  currency: PropTypes.bool,\n  displayZero: PropTypes.bool,\n  tag: PropTypes.string,\n  value: PropTypes.number,\n};\n\nMoney.defaultProps = {\n  className: '',\n  currency: true,\n  displayZero: true,\n  tag: 'span',\n  value: 0,\n};\n\nexport default Money;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Translation/numberComponents/Money.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Translation/numberComponents/Money.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet toMoney;\nmodule.link(\"../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 2);\n\nconst getValue = (_ref) => {\n  let {\n    displayZero,\n    value,\n    currency,\n    rounded\n  } = _ref;\n\n  if (!displayZero && (!value || value === 0)) {\n    return '-';\n  }\n\n  if (value !== 0 && !value) {\n    return currency ? 0 : React.createElement(React.Fragment, null, \"CHF\\xA00\");\n  }\n\n  return currency ? React.createElement(React.Fragment, null, \"CHF\\xA0\", toMoney(value, {\n    rounded\n  })) : toMoney(value, {\n    rounded\n  });\n}; // The Intl standard for CHF is messed up, and display the currency after the\n// monetary value, which is not what we want. We can use IntlNumber later on\n// if needed\n\n\nconst Money = (_ref2) => {\n  let {\n    value,\n    currency,\n    displayZero,\n    className,\n    tag: Tag,\n    rounded\n  } = _ref2;\n  return React.createElement(Tag, {\n    className: className\n  }, getValue({\n    displayZero,\n    value,\n    currency,\n    rounded\n  }));\n};\n\nMoney.propTypes = {\n  className: PropTypes.string,\n  currency: PropTypes.bool,\n  displayZero: PropTypes.bool,\n  tag: PropTypes.string,\n  value: PropTypes.number\n};\nMoney.defaultProps = {\n  className: '',\n  currency: true,\n  displayZero: true,\n  tag: 'span',\n  value: 0\n};\nmodule.exportDefault(Money);","map":{"version":3,"sources":["imports/core/components/Translation/numberComponents/Money.jsx"],"names":["React","getValue","rounded","value","currency","toMoney","Money","tag","className","PropTypes","displayZero","number"],"mappings":"AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oCAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAKA,MAAMC,QAAQ,GAAG,UAA+C;AAAA,MAA9C;AAAA,IAAA,WAAA;AAAA,IAAA,KAAA;AAAA,IAAA,QAAA;AAAgCC,IAAAA;AAAhC,GAA8C;;AAC9D,MAAI,CAAA,WAAA,KAAiB,CAAA,KAAA,IAAUC,KAAK,KAApC,CAAI,CAAJ,EAA6C;AAC3C,WAAA,GAAA;AACD;;AAED,MAAIA,KAAK,KAALA,CAAAA,IAAe,CAAnB,KAAA,EAA2B;AACzB,WAAOC,QAAQ,GAAA,CAAA,GAAf,qDAAA;AACD;;AAED,SAAOA,QAAQ,GACb,qDAEGC,OAAO,CAAA,KAAA,EAAQ;AAAEH,IAAAA;AAAF,GAAR,CAFV,CADa,GAMbG,OAAO,CAAA,KAAA,EAAQ;AAAEH,IAAAA;AAAF,GAAR,CANT;AATF,CAAA,C,CAmBA;AACA;AACA;;;AACA,MAAMI,KAAK,GAAG;AAAA,MAAC;AAAA,IAAA,KAAA;AAAA,IAAA,QAAA;AAAA,IAAA,WAAA;AAAA,IAAA,SAAA;AAKbC,IAAAA,GAAG,EALU,GAAA;AAMbL,IAAAA;AANa,GAAD;AAAA,SAQZ,oBAAA,GAAA;AAAK,IAAA,SAAA,EAAL;AAAA,KACGD,QAAQ,CAAC;AAAA,IAAA,WAAA;AAAA,IAAA,KAAA;AAAA,IAAA,QAAA;AAAgCC,IAAAA;AAAhC,GAAD,CADX,CARY;AAAA,CAAd;;AAaAI,KAAK,CAALA,SAAAA,GAAkB;AAChBE,EAAAA,SAAS,EAAEC,SAAS,CADJ,MAAA;AAEhBL,EAAAA,QAAQ,EAAEK,SAAS,CAFH,IAAA;AAGhBC,EAAAA,WAAW,EAAED,SAAS,CAHN,IAAA;AAIhBF,EAAAA,GAAG,EAAEE,SAAS,CAJE,MAAA;AAKhBN,EAAAA,KAAK,EAAEM,SAAS,CAACE;AALD,CAAlBL;AAQAA,KAAK,CAALA,YAAAA,GAAqB;AACnBE,EAAAA,SAAS,EADU,EAAA;AAEnBJ,EAAAA,QAAQ,EAFW,IAAA;AAGnBM,EAAAA,WAAW,EAHQ,IAAA;AAInBH,EAAAA,GAAG,EAJgB,MAAA;AAKnBJ,EAAAA,KAAK,EAAE;AALY,CAArBG;AAhDA,MAAA,CAAON,aAAP,CAwDA,KAxDA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { toMoney } from '../../../utils/conversionFunctions';\n\nconst getValue = ({ displayZero, value, currency, rounded }) => {\n  if (!displayZero && (!value || value === 0)) {\n    return '-';\n  }\n\n  if (value !== 0 && !value) {\n    return currency ? 0 : <>CHF&nbsp;0</>;\n  }\n\n  return currency ? (\n    <>\n      CHF&nbsp;\n      {toMoney(value, { rounded })}\n    </>\n  ) : (\n    toMoney(value, { rounded })\n  );\n};\n\n// The Intl standard for CHF is messed up, and display the currency after the\n// monetary value, which is not what we want. We can use IntlNumber later on\n// if needed\nconst Money = ({\n  value,\n  currency,\n  displayZero,\n  className,\n  tag: Tag,\n  rounded,\n}) => (\n  <Tag className={className}>\n    {getValue({ displayZero, value, currency, rounded })}\n  </Tag>\n);\n\nMoney.propTypes = {\n  className: PropTypes.string,\n  currency: PropTypes.bool,\n  displayZero: PropTypes.bool,\n  tag: PropTypes.string,\n  value: PropTypes.number,\n};\n\nMoney.defaultProps = {\n  className: '',\n  currency: true,\n  displayZero: true,\n  tag: 'span',\n  value: 0,\n};\n\nexport default Money;\n"]},"sourceType":"script","hash":"1b2cf6014a57bc14dc0dac6de6b54403161d4218"}
