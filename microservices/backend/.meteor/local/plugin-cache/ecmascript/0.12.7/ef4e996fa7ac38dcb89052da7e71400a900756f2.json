{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/offerFixtures.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/fixtures/offerFixtures.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/offerFixtures.js","inputSourceMap":{"version":3,"sources":["imports/core/fixtures/offerFixtures.js"],"names":["shuffle","getRandomOffer","OfferService","LenderService","OrganisationService","LoanService","PropertyService","createOrganisations","getOrgIds","fetch","map","_id","createFakeOffer","loanId","loan","findOne","property","propertyIds","offer","allOrganisationIds","length","randomOrganisationId","lenderId","lender","insert","contactId","organisationId"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,SAASC,cAAT;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,WAAP;AACA,OAAOC,eAAP;AACA,SAASC,mBAAT;;AAEA,MAAMC,SAAS,GAAG,MAAMJ,mBAAmB,CAACK,KAApB,CAA0B,EAA1B,EAA8BC,GAA9B,CAAkC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAaA,GAA/C,CAAxB;;AAEA,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAAY;AACzC,QAAMC,IAAI,GAAGT,WAAW,CAACU,OAAZ,CAAoBF,MAApB,CAAb;AACA,QAAMG,QAAQ,GAAGV,eAAe,CAACS,OAAhB,CAAwBD,IAAI,CAACG,WAAL,CAAiB,CAAjB,CAAxB,CAAjB;AACA,QAAMC,KAAK,GAAGjB,cAAc,CAC1B;AAAEa,IAAAA,IAAI,EAAE,EAAE,GAAGA,IAAL;AAAWH,MAAAA,GAAG,EAAEG,IAAI,CAACH;AAArB,KAAR;AAAoCK,IAAAA;AAApC,GAD0B,EAE1B,IAF0B,CAA5B;AAIA,MAAIG,kBAAkB,GAAGX,SAAS,EAAlC;;AAEA,MAAIW,kBAAkB,CAACC,MAAnB,KAA8B,CAAlC,EAAqC;AACnCb,IAAAA,mBAAmB;AACnBY,IAAAA,kBAAkB,GAAGX,SAAS,EAA9B;AACD;;AAED,QAAMa,oBAAoB,GAAGrB,OAAO,CAACmB,kBAAD,CAAP,CAA4B,CAA5B,CAA7B;AACA,MAAIG,QAAJ;AAEA,QAAMC,MAAM,GAAGpB,aAAa,CAACY,OAAd,CAAsB;AACnC,oBAAgBF,MADmB;AAEnC,4BAAwBQ;AAFW,GAAtB,CAAf;;AAKA,MAAIE,MAAJ,EAAY;AACVD,IAAAA,QAAQ,GAAGC,MAAM,CAACZ,GAAlB;AACD,GAFD,MAEO;AACLW,IAAAA,QAAQ,GAAGnB,aAAa,CAACqB,MAAd,CAAqB;AAC9BD,MAAAA,MAAM,EAAE;AAAEV,QAAAA,MAAM,EAAEC,IAAI,CAACH;AAAf,OADsB;AAE9Bc,MAAAA,SAAS,EAAE,IAFmB;AAG9BC,MAAAA,cAAc,EAAEL;AAHc,KAArB,CAAX;AAKD;;AAED,SAAOnB,YAAY,CAACsB,MAAb,CAAoB;AAAEN,IAAAA,KAAK,EAAE,EAAE,GAAGA,KAAL;AAAYI,MAAAA;AAAZ;AAAT,GAApB,CAAP;AACD,CAjCM","sourcesContent":["import shuffle from 'lodash/shuffle';\n\nimport { getRandomOffer } from '../api/offers/fakes';\nimport OfferService from '../api/offers/server/OfferService';\nimport LenderService from '../api/lenders/server/LenderService';\nimport OrganisationService from '../api/organisations/server/OrganisationService';\nimport LoanService from '../api/loans/server/LoanService';\nimport PropertyService from '../api/properties/server/PropertyService';\nimport { createOrganisations } from './organisationFixtures';\n\nconst getOrgIds = () => OrganisationService.fetch({}).map(({ _id }) => _id);\n\nexport const createFakeOffer = (loanId) => {\n  const loan = LoanService.findOne(loanId);\n  const property = PropertyService.findOne(loan.propertyIds[0]);\n  const offer = getRandomOffer(\n    { loan: { ...loan, _id: loan._id }, property },\n    true,\n  );\n  let allOrganisationIds = getOrgIds();\n\n  if (allOrganisationIds.length === 0) {\n    createOrganisations();\n    allOrganisationIds = getOrgIds();\n  }\n\n  const randomOrganisationId = shuffle(allOrganisationIds)[0];\n  let lenderId;\n\n  const lender = LenderService.findOne({\n    'loanLink._id': loanId,\n    'organisationLink._id': randomOrganisationId,\n  });\n\n  if (lender) {\n    lenderId = lender._id;\n  } else {\n    lenderId = LenderService.insert({\n      lender: { loanId: loan._id },\n      contactId: null,\n      organisationId: randomOrganisationId,\n    });\n  }\n\n  return OfferService.insert({ offer: { ...offer, lenderId } });\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/offerFixtures.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/fixtures/offerFixtures.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  createFakeOffer: () => createFakeOffer\n});\nlet shuffle;\nmodule.link(\"lodash/shuffle\", {\n  default(v) {\n    shuffle = v;\n  }\n\n}, 0);\nlet getRandomOffer;\nmodule.link(\"../api/offers/fakes\", {\n  getRandomOffer(v) {\n    getRandomOffer = v;\n  }\n\n}, 1);\nlet OfferService;\nmodule.link(\"../api/offers/server/OfferService\", {\n  default(v) {\n    OfferService = v;\n  }\n\n}, 2);\nlet LenderService;\nmodule.link(\"../api/lenders/server/LenderService\", {\n  default(v) {\n    LenderService = v;\n  }\n\n}, 3);\nlet OrganisationService;\nmodule.link(\"../api/organisations/server/OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 4);\nlet LoanService;\nmodule.link(\"../api/loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 5);\nlet PropertyService;\nmodule.link(\"../api/properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 6);\nlet createOrganisations;\nmodule.link(\"./organisationFixtures\", {\n  createOrganisations(v) {\n    createOrganisations = v;\n  }\n\n}, 7);\n\nconst getOrgIds = () => OrganisationService.fetch({}).map(({\n  _id\n}) => _id);\n\nconst createFakeOffer = loanId => {\n  const loan = LoanService.findOne(loanId);\n  const property = PropertyService.findOne(loan.propertyIds[0]);\n  const offer = getRandomOffer({\n    loan: (0, _objectSpread2.default)({}, loan, {\n      _id: loan._id\n    }),\n    property\n  }, true);\n  let allOrganisationIds = getOrgIds();\n\n  if (allOrganisationIds.length === 0) {\n    createOrganisations();\n    allOrganisationIds = getOrgIds();\n  }\n\n  const randomOrganisationId = shuffle(allOrganisationIds)[0];\n  let lenderId;\n  const lender = LenderService.findOne({\n    'loanLink._id': loanId,\n    'organisationLink._id': randomOrganisationId\n  });\n\n  if (lender) {\n    lenderId = lender._id;\n  } else {\n    lenderId = LenderService.insert({\n      lender: {\n        loanId: loan._id\n      },\n      contactId: null,\n      organisationId: randomOrganisationId\n    });\n  }\n\n  return OfferService.insert({\n    offer: (0, _objectSpread2.default)({}, offer, {\n      lenderId\n    })\n  });\n};","map":{"version":3,"sources":["imports/core/fixtures/offerFixtures.js"],"names":["shuffle","getOrgIds","_id","createFakeOffer","loanId","loan","LoanService","property","PropertyService","offer","getRandomOffer","allOrganisationIds","createOrganisations","randomOrganisationId","lender","lenderId","contactId","organisationId"],"mappings":"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","sourcesContent":["import shuffle from 'lodash/shuffle';\n\nimport { getRandomOffer } from '../api/offers/fakes';\nimport OfferService from '../api/offers/server/OfferService';\nimport LenderService from '../api/lenders/server/LenderService';\nimport OrganisationService from '../api/organisations/server/OrganisationService';\nimport LoanService from '../api/loans/server/LoanService';\nimport PropertyService from '../api/properties/server/PropertyService';\nimport { createOrganisations } from './organisationFixtures';\n\nconst getOrgIds = () => OrganisationService.fetch({}).map(({ _id }) => _id);\n\nexport const createFakeOffer = (loanId) => {\n  const loan = LoanService.findOne(loanId);\n  const property = PropertyService.findOne(loan.propertyIds[0]);\n  const offer = getRandomOffer(\n    { loan: { ...loan, _id: loan._id }, property },\n    true,\n  );\n  let allOrganisationIds = getOrgIds();\n\n  if (allOrganisationIds.length === 0) {\n    createOrganisations();\n    allOrganisationIds = getOrgIds();\n  }\n\n  const randomOrganisationId = shuffle(allOrganisationIds)[0];\n  let lenderId;\n\n  const lender = LenderService.findOne({\n    'loanLink._id': loanId,\n    'organisationLink._id': randomOrganisationId,\n  });\n\n  if (lender) {\n    lenderId = lender._id;\n  } else {\n    lenderId = LenderService.insert({\n      lender: { loanId: loan._id },\n      contactId: null,\n      organisationId: randomOrganisationId,\n    });\n  }\n\n  return OfferService.insert({ offer: { ...offer, lenderId } });\n};\n"]},"sourceType":"script","hash":"ef4e996fa7ac38dcb89052da7e71400a900756f2"}
