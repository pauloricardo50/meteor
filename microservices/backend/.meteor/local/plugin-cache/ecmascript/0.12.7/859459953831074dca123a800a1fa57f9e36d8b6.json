{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/FinancingOwnFundsPickerHelpers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/FinancingOwnFundsPickerHelpers.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/FinancingOwnFundsPickerHelpers.js","inputSourceMap":{"version":3,"sources":["imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/FinancingOwnFundsPickerHelpers.js"],"names":["OWN_FUNDS_TYPES","OWN_FUNDS_USAGE_TYPES","Calculator","calculateMaxLoan","chooseOwnFundsTypes","loan","residenceType","getAllowedOwnFundsTypes","shouldAskForUsageType","type","INSURANCE_2","INSURANCE_3A","INSURANCE_3B","BANK_3A","includes","getOwnFundsOfTypeAndBorrower","structure","ownFundsIndex","borrowerId","ownFunds","filter","_","index","otherType","bId","reduce","sum","value","getAvailableFundsOfTypeAndBorrower","borrowers","getFunds","find","_id","calculateRemainingFunds","undefined","usedValue","available","makeNewOwnFundsArray","usageType","shouldDelete","slice","newObject","getCurrentPledgedFunds","PLEDGE","getNewWantedLoanAfterPledge","props","structureId","wantedLoan","selectStructure","currentPledgedFunds","maxLoanWithNewPledge","getMaxPledge","propertyWork","propertyValue","selectPropertyValue","Math","round","maxBorrowRatioWithPledge","maxBorrowRatio"],"mappings":"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","sourcesContent":["import {\n  OWN_FUNDS_TYPES,\n  OWN_FUNDS_USAGE_TYPES,\n} from '../../../../../api/constants';\nimport Calculator from '../../../../../utils/Calculator';\nimport { calculateMaxLoan } from '../../FinancingFinancing/FinancingFinancing';\n\nexport const chooseOwnFundsTypes = ({ loan: { residenceType } }) =>\n  Calculator.getAllowedOwnFundsTypes({ residenceType });\n\nexport const shouldAskForUsageType = type =>\n  [\n    OWN_FUNDS_TYPES.INSURANCE_2,\n    OWN_FUNDS_TYPES.INSURANCE_3A,\n    OWN_FUNDS_TYPES.INSURANCE_3B,\n    OWN_FUNDS_TYPES.BANK_3A,\n  ].includes(type);\n\nexport const getOwnFundsOfTypeAndBorrower = ({\n  structure,\n  ownFundsIndex = -1,\n  type,\n  borrowerId,\n}) =>\n  structure\n  && structure.ownFunds\n    .filter((_, index) => index !== ownFundsIndex)\n    .filter(({ type: otherType, borrowerId: bId }) =>\n      otherType === type && bId === borrowerId)\n    .reduce((sum, { value }) => sum + value, 0);\n\nexport const getAvailableFundsOfTypeAndBorrower = ({\n  type,\n  borrowerId,\n  borrowers,\n}) =>\n  Calculator.getFunds({\n    borrowers: borrowers.find(({ _id }) => _id === borrowerId),\n    type,\n  });\n\nexport const calculateRemainingFunds = ({\n  type,\n  ownFundsIndex,\n  structure,\n  borrowers,\n  borrowerId,\n}) => {\n  if (!type) {\n    return undefined;\n  }\n  const usedValue = getOwnFundsOfTypeAndBorrower({\n    structure,\n    ownFundsIndex,\n    type,\n    borrowerId,\n  });\n  const available = getAvailableFundsOfTypeAndBorrower({\n    borrowerId,\n    type,\n    borrowers,\n  });\n\n  return available - usedValue;\n};\n\nexport const makeNewOwnFundsArray = ({\n  type,\n  usageType,\n  borrowerId,\n  value,\n  structure,\n  ownFundsIndex,\n  shouldDelete,\n}) => {\n  if (shouldDelete || value === 0) {\n    return [\n      ...structure.ownFunds.slice(0, ownFundsIndex),\n      ...structure.ownFunds.slice(ownFundsIndex + 1),\n    ];\n  }\n\n  const newObject = {\n    type,\n    usageType: shouldAskForUsageType(type) ? usageType : undefined,\n    borrowerId,\n    value,\n  };\n\n  if (ownFundsIndex < 0) {\n    return [...structure.ownFunds, newObject];\n  }\n\n  return [\n    ...structure.ownFunds.slice(0, ownFundsIndex),\n    newObject,\n    ...structure.ownFunds.slice(ownFundsIndex + 1),\n  ];\n};\n\nexport const getCurrentPledgedFunds = ({ ownFundsIndex, ownFunds }) =>\n  ownFunds\n    .filter((_, index) => index !== ownFundsIndex)\n    .filter(({ usageType }) => usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE)\n    .reduce((sum, { value }) => sum + value, 0);\n\nexport const getNewWantedLoanAfterPledge = (props) => {\n  const { loan, structureId, usageType, value, ownFundsIndex } = props;\n  const { wantedLoan, ownFunds } = Calculator.selectStructure({\n    loan,\n    structureId,\n  });\n  if (usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE) {\n    return wantedLoan;\n  }\n  const currentPledgedFunds = getCurrentPledgedFunds({\n    ownFunds,\n    ownFundsIndex,\n  });\n  const maxLoanWithNewPledge = calculateMaxLoan(\n    props,\n    currentPledgedFunds + value,\n  );\n\n  return maxLoanWithNewPledge;\n};\n\nexport const getMaxPledge = (props) => {\n  const { loan, structureId } = props;\n  const { propertyWork } = Calculator.selectStructure({\n    loan,\n    structureId,\n  });\n  const propertyValue = Calculator.selectPropertyValue({\n    loan,\n    structureId,\n  });\n\n  return Math.round((Calculator.maxBorrowRatioWithPledge - Calculator.maxBorrowRatio)\n      * (propertyValue + propertyWork));\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/FinancingOwnFundsPickerHelpers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/FinancingOwnFundsPickerHelpers.js"}},"code":"module.export({\n  chooseOwnFundsTypes: () => chooseOwnFundsTypes,\n  shouldAskForUsageType: () => shouldAskForUsageType,\n  getOwnFundsOfTypeAndBorrower: () => getOwnFundsOfTypeAndBorrower,\n  getAvailableFundsOfTypeAndBorrower: () => getAvailableFundsOfTypeAndBorrower,\n  calculateRemainingFunds: () => calculateRemainingFunds,\n  makeNewOwnFundsArray: () => makeNewOwnFundsArray,\n  getCurrentPledgedFunds: () => getCurrentPledgedFunds,\n  getNewWantedLoanAfterPledge: () => getNewWantedLoanAfterPledge,\n  getMaxPledge: () => getMaxPledge\n});\nlet OWN_FUNDS_TYPES, OWN_FUNDS_USAGE_TYPES;\nmodule.link(\"../../../../../api/constants\", {\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  },\n\n  OWN_FUNDS_USAGE_TYPES(v) {\n    OWN_FUNDS_USAGE_TYPES = v;\n  }\n\n}, 0);\nlet Calculator;\nmodule.link(\"../../../../../utils/Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 1);\nlet calculateMaxLoan;\nmodule.link(\"../../FinancingFinancing/FinancingFinancing\", {\n  calculateMaxLoan(v) {\n    calculateMaxLoan = v;\n  }\n\n}, 2);\n\nconst chooseOwnFundsTypes = (_ref) => {\n  let {\n    loan: {\n      residenceType\n    }\n  } = _ref;\n  return Calculator.getAllowedOwnFundsTypes({\n    residenceType\n  });\n};\n\nconst shouldAskForUsageType = type => [OWN_FUNDS_TYPES.INSURANCE_2, OWN_FUNDS_TYPES.INSURANCE_3A, OWN_FUNDS_TYPES.INSURANCE_3B, OWN_FUNDS_TYPES.BANK_3A].includes(type);\n\nconst getOwnFundsOfTypeAndBorrower = (_ref2) => {\n  let {\n    structure,\n    ownFundsIndex = -1,\n    type,\n    borrowerId\n  } = _ref2;\n  return structure && structure.ownFunds.filter((_, index) => index !== ownFundsIndex).filter((_ref3) => {\n    let {\n      type: otherType,\n      borrowerId: bId\n    } = _ref3;\n    return otherType === type && bId === borrowerId;\n  }).reduce((sum, _ref4) => {\n    let {\n      value\n    } = _ref4;\n    return sum + value;\n  }, 0);\n};\n\nconst getAvailableFundsOfTypeAndBorrower = (_ref5) => {\n  let {\n    type,\n    borrowerId,\n    borrowers\n  } = _ref5;\n  return Calculator.getFunds({\n    borrowers: borrowers.find((_ref6) => {\n      let {\n        _id\n      } = _ref6;\n      return _id === borrowerId;\n    }),\n    type\n  });\n};\n\nconst calculateRemainingFunds = (_ref7) => {\n  let {\n    type,\n    ownFundsIndex,\n    structure,\n    borrowers,\n    borrowerId\n  } = _ref7;\n\n  if (!type) {\n    return undefined;\n  }\n\n  const usedValue = getOwnFundsOfTypeAndBorrower({\n    structure,\n    ownFundsIndex,\n    type,\n    borrowerId\n  });\n  const available = getAvailableFundsOfTypeAndBorrower({\n    borrowerId,\n    type,\n    borrowers\n  });\n  return available - usedValue;\n};\n\nconst makeNewOwnFundsArray = (_ref8) => {\n  let {\n    type,\n    usageType,\n    borrowerId,\n    value,\n    structure,\n    ownFundsIndex,\n    shouldDelete\n  } = _ref8;\n\n  if (shouldDelete || value === 0) {\n    return [...structure.ownFunds.slice(0, ownFundsIndex), ...structure.ownFunds.slice(ownFundsIndex + 1)];\n  }\n\n  const newObject = {\n    type,\n    usageType: shouldAskForUsageType(type) ? usageType : undefined,\n    borrowerId,\n    value\n  };\n\n  if (ownFundsIndex < 0) {\n    return [...structure.ownFunds, newObject];\n  }\n\n  return [...structure.ownFunds.slice(0, ownFundsIndex), newObject, ...structure.ownFunds.slice(ownFundsIndex + 1)];\n};\n\nconst getCurrentPledgedFunds = (_ref9) => {\n  let {\n    ownFundsIndex,\n    ownFunds\n  } = _ref9;\n  return ownFunds.filter((_, index) => index !== ownFundsIndex).filter((_ref10) => {\n    let {\n      usageType\n    } = _ref10;\n    return usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE;\n  }).reduce((sum, _ref11) => {\n    let {\n      value\n    } = _ref11;\n    return sum + value;\n  }, 0);\n};\n\nconst getNewWantedLoanAfterPledge = props => {\n  const {\n    loan,\n    structureId,\n    usageType,\n    value,\n    ownFundsIndex\n  } = props;\n  const {\n    wantedLoan,\n    ownFunds\n  } = Calculator.selectStructure({\n    loan,\n    structureId\n  });\n\n  if (usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE) {\n    return wantedLoan;\n  }\n\n  const currentPledgedFunds = getCurrentPledgedFunds({\n    ownFunds,\n    ownFundsIndex\n  });\n  const maxLoanWithNewPledge = calculateMaxLoan(props, currentPledgedFunds + value);\n  return maxLoanWithNewPledge;\n};\n\nconst getMaxPledge = props => {\n  const {\n    loan,\n    structureId\n  } = props;\n  const {\n    propertyWork\n  } = Calculator.selectStructure({\n    loan,\n    structureId\n  });\n  const propertyValue = Calculator.selectPropertyValue({\n    loan,\n    structureId\n  });\n  return Math.round((Calculator.maxBorrowRatioWithPledge - Calculator.maxBorrowRatio) * (propertyValue + propertyWork));\n};","map":{"version":3,"sources":["imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/FinancingOwnFundsPickerHelpers.js"],"names":["OWN_FUNDS_TYPES","OWN_FUNDS_USAGE_TYPES","chooseOwnFundsTypes","loan","residenceType","shouldAskForUsageType","type","getOwnFundsOfTypeAndBorrower","ownFundsIndex","borrowerId","structure","index","bId","otherType","value","sum","getAvailableFundsOfTypeAndBorrower","borrowers","_id","calculateRemainingFunds","usedValue","available","makeNewOwnFundsArray","shouldDelete","newObject","usageType","getCurrentPledgedFunds","ownFunds","getNewWantedLoanAfterPledge","props","structureId","currentPledgedFunds","maxLoanWithNewPledge","calculateMaxLoan","getMaxPledge","propertyWork","propertyValue","Math","Calculator"],"mappings":"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","sourcesContent":["import {\n  OWN_FUNDS_TYPES,\n  OWN_FUNDS_USAGE_TYPES,\n} from '../../../../../api/constants';\nimport Calculator from '../../../../../utils/Calculator';\nimport { calculateMaxLoan } from '../../FinancingFinancing/FinancingFinancing';\n\nexport const chooseOwnFundsTypes = ({ loan: { residenceType } }) =>\n  Calculator.getAllowedOwnFundsTypes({ residenceType });\n\nexport const shouldAskForUsageType = type =>\n  [\n    OWN_FUNDS_TYPES.INSURANCE_2,\n    OWN_FUNDS_TYPES.INSURANCE_3A,\n    OWN_FUNDS_TYPES.INSURANCE_3B,\n    OWN_FUNDS_TYPES.BANK_3A,\n  ].includes(type);\n\nexport const getOwnFundsOfTypeAndBorrower = ({\n  structure,\n  ownFundsIndex = -1,\n  type,\n  borrowerId,\n}) =>\n  structure\n  && structure.ownFunds\n    .filter((_, index) => index !== ownFundsIndex)\n    .filter(({ type: otherType, borrowerId: bId }) =>\n      otherType === type && bId === borrowerId)\n    .reduce((sum, { value }) => sum + value, 0);\n\nexport const getAvailableFundsOfTypeAndBorrower = ({\n  type,\n  borrowerId,\n  borrowers,\n}) =>\n  Calculator.getFunds({\n    borrowers: borrowers.find(({ _id }) => _id === borrowerId),\n    type,\n  });\n\nexport const calculateRemainingFunds = ({\n  type,\n  ownFundsIndex,\n  structure,\n  borrowers,\n  borrowerId,\n}) => {\n  if (!type) {\n    return undefined;\n  }\n  const usedValue = getOwnFundsOfTypeAndBorrower({\n    structure,\n    ownFundsIndex,\n    type,\n    borrowerId,\n  });\n  const available = getAvailableFundsOfTypeAndBorrower({\n    borrowerId,\n    type,\n    borrowers,\n  });\n\n  return available - usedValue;\n};\n\nexport const makeNewOwnFundsArray = ({\n  type,\n  usageType,\n  borrowerId,\n  value,\n  structure,\n  ownFundsIndex,\n  shouldDelete,\n}) => {\n  if (shouldDelete || value === 0) {\n    return [\n      ...structure.ownFunds.slice(0, ownFundsIndex),\n      ...structure.ownFunds.slice(ownFundsIndex + 1),\n    ];\n  }\n\n  const newObject = {\n    type,\n    usageType: shouldAskForUsageType(type) ? usageType : undefined,\n    borrowerId,\n    value,\n  };\n\n  if (ownFundsIndex < 0) {\n    return [...structure.ownFunds, newObject];\n  }\n\n  return [\n    ...structure.ownFunds.slice(0, ownFundsIndex),\n    newObject,\n    ...structure.ownFunds.slice(ownFundsIndex + 1),\n  ];\n};\n\nexport const getCurrentPledgedFunds = ({ ownFundsIndex, ownFunds }) =>\n  ownFunds\n    .filter((_, index) => index !== ownFundsIndex)\n    .filter(({ usageType }) => usageType === OWN_FUNDS_USAGE_TYPES.PLEDGE)\n    .reduce((sum, { value }) => sum + value, 0);\n\nexport const getNewWantedLoanAfterPledge = (props) => {\n  const { loan, structureId, usageType, value, ownFundsIndex } = props;\n  const { wantedLoan, ownFunds } = Calculator.selectStructure({\n    loan,\n    structureId,\n  });\n  if (usageType !== OWN_FUNDS_USAGE_TYPES.PLEDGE) {\n    return wantedLoan;\n  }\n  const currentPledgedFunds = getCurrentPledgedFunds({\n    ownFunds,\n    ownFundsIndex,\n  });\n  const maxLoanWithNewPledge = calculateMaxLoan(\n    props,\n    currentPledgedFunds + value,\n  );\n\n  return maxLoanWithNewPledge;\n};\n\nexport const getMaxPledge = (props) => {\n  const { loan, structureId } = props;\n  const { propertyWork } = Calculator.selectStructure({\n    loan,\n    structureId,\n  });\n  const propertyValue = Calculator.selectPropertyValue({\n    loan,\n    structureId,\n  });\n\n  return Math.round((Calculator.maxBorrowRatioWithPledge - Calculator.maxBorrowRatio)\n      * (propertyValue + propertyWork));\n};\n"]},"sourceType":"script","hash":"859459953831074dca123a800a1fa57f9e36d8b6"}
