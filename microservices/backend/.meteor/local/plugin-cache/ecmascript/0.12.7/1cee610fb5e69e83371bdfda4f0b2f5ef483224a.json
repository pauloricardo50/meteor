{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/MoneyInput/MoneyInput.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/MoneyInput/MoneyInput.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/MoneyInput/MoneyInput.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/MoneyInput/MoneyInput.jsx"],"names":["React","MaskedInput","InputAdornment","FormHelperText","InputLabel","useInputLabelWidth","FormControl","Input","swissFrancMask","swissFrancMaskDecimal","toNumber","toDecimalNumber","MoneyInputProps","fullWidth","helperText","Node","label","margin","onChange","Function","required","value","MoneyInput","decimal","props","inputLabelRef","labelWidth","parse","mask","event","target"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,OAAOC,cAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP,IAAqBC,kBAArB;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP;AACA,SAASC,cAAT,EAAyBC,qBAAzB;AACA,SAASC,QAAT,EAAmBC,eAAnB;AAEA,KAAKC,eAAL,GAAuB;AACrBC,EAAAA,SAAS,GAAG,OADS;AAErBC,EAAAA,UAAU,GAAGd,KAAK,CAACe,IAFE;AAGrBC,EAAAA,KAAK,GAAGhB,KAAK,CAACe,IAHO;AAIrBE,EAAAA,MAAM,GAAG,MAJY;AAKrBC,EAAAA,QAAQ,EAAEC,QALW;AAMrBC,EAAAA,QAAQ,GAAG,OANU;AAOrBC,EAAAA,KAAK,EAAE,MAPc;AAAA,CAAvB;;AAUA,MAAMC,UAAU,GAAG,CAAC;AAClBT,EAAAA,SAAS,GAAG,IADM;AAElBC,EAAAA,UAFkB;AAGlBE,EAAAA,KAHkB;AAIlBE,EAAAA,QAJkB;AAKlBE,EAAAA,QALkB;AAMlBH,EAAAA,MANkB;AAOlBM,EAAAA,OAAO,GAAG,KAPQ;AAQlB,KAAGC;AARe,CASnB,EAAEZ,eATgB,KASI;AACrB,QAAM;AAAEa,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAgCrB,kBAAkB,CAAC,CAAC,CAACW,KAAH,CAAxD;AACA,QAAMW,KAAK,GAAGJ,OAAO,GAAGZ,eAAH,GAAqBD,QAA1C;AACA,QAAMkB,IAAI,GAAGL,OAAO,GAAGd,qBAAH,GAA2BD,cAA/C;AAEA,SACE,CAAC,WAAD,CACE,UAAU,aADZ,CAEE,SAAS,CAACY,QAAD,CAFX,CAGE,UAAU,CAACP,SAAD,CAHZ,CAIE,OAAO,CAACI,MAAD,CAJT;MAME,CAACD,KAAK,IAAI,CAAC,UAAD,CAAY,IAAI,CAACS,aAAD,CAAhB,CAAgC,CAACT,KAAD,CAAO,EAAE,UAAF,CAAjD;MACA,CAAC,KAAD,CACE,WAAW,CAACU,UAAD,CADb,CAEE,eAAe,CAAC,CAAC,cAAD,CAAgB,SAAS,OAAzB,CAAiC,GAAG,EAAE,cAAF,CAArC,CAFjB,CAGE,SAAS,CAACG,KAAK,IAAIX,QAAQ,CAACS,KAAK,CAACE,KAAK,CAACC,MAAN,CAAaT,KAAd,CAAN,CAAlB,CAHX,CAIE,KAAK,KAJP,CAKE,eAAe,CAACpB,WAAD,CALjB,CAME,WAAW,CAAC;AAAE2B,MAAAA;AAAF,KAAD,CANb,CAOE,IAAIJ,KAAJ,CAPF;MASA,CAACV,UAAU,IAAI,CAAC,cAAD,CAAgB,CAACA,UAAD,CAAY,EAAE,cAAF,CAA3C;IACF,EAAE,WAAF,CAlBF;AAoBD,CAlCD;;AAmCA,eAAeQ,UAAf","sourcesContent":["// @flow\nimport React from 'react';\nimport MaskedInput from 'react-text-mask';\n\nimport InputAdornment from '../Material/InputAdornment';\nimport FormHelperText from '../Material/FormHelperText';\nimport InputLabel, { useInputLabelWidth } from '../Material/InputLabel';\nimport FormControl from '../Material/FormControl';\nimport Input from '../Material/Input';\nimport { swissFrancMask, swissFrancMaskDecimal } from '../../utils/textMasks';\nimport { toNumber, toDecimalNumber } from '../../utils/conversionFunctions';\n\ntype MoneyInputProps = {\n  fullWidth?: boolean,\n  helperText?: React.Node,\n  label?: React.Node,\n  margin?: string,\n  onChange: Function,\n  required?: boolean,\n  value: number,\n};\n\nconst MoneyInput = ({\n  fullWidth = true,\n  helperText,\n  label,\n  onChange,\n  required,\n  margin,\n  decimal = false,\n  ...props\n}: MoneyInputProps) => {\n  const { inputLabelRef, labelWidth } = useInputLabelWidth(!!label);\n  const parse = decimal ? toDecimalNumber : toNumber;\n  const mask = decimal ? swissFrancMaskDecimal : swissFrancMask;\n\n  return (\n    <FormControl\n      className=\"money-input\"\n      required={required}\n      fullWidth={fullWidth}\n      margin={margin}\n    >\n      {label && <InputLabel ref={inputLabelRef}>{label}</InputLabel>}\n      <Input\n        labelWidth={labelWidth}\n        startAdornment={<InputAdornment position=\"start\">CHF</InputAdornment>}\n        onChange={event => onChange(parse(event.target.value))}\n        type=\"tel\"\n        inputComponent={MaskedInput}\n        inputProps={{ mask }}\n        {...props}\n      />\n      {helperText && <FormHelperText>{helperText}</FormHelperText>}\n    </FormControl>\n  );\n};\nexport default MoneyInput;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/MoneyInput/MoneyInput.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/MoneyInput/MoneyInput.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar MaskedInput;\nmodule.link(\"react-text-mask\", {\n  \"default\": function (v) {\n    MaskedInput = v;\n  }\n}, 1);\nvar InputAdornment;\nmodule.link(\"../Material/InputAdornment\", {\n  \"default\": function (v) {\n    InputAdornment = v;\n  }\n}, 2);\nvar FormHelperText;\nmodule.link(\"../Material/FormHelperText\", {\n  \"default\": function (v) {\n    FormHelperText = v;\n  }\n}, 3);\nvar InputLabel, useInputLabelWidth;\nmodule.link(\"../Material/InputLabel\", {\n  \"default\": function (v) {\n    InputLabel = v;\n  },\n  useInputLabelWidth: function (v) {\n    useInputLabelWidth = v;\n  }\n}, 4);\nvar FormControl;\nmodule.link(\"../Material/FormControl\", {\n  \"default\": function (v) {\n    FormControl = v;\n  }\n}, 5);\nvar Input;\nmodule.link(\"../Material/Input\", {\n  \"default\": function (v) {\n    Input = v;\n  }\n}, 6);\nvar swissFrancMask, swissFrancMaskDecimal;\nmodule.link(\"../../utils/textMasks\", {\n  swissFrancMask: function (v) {\n    swissFrancMask = v;\n  },\n  swissFrancMaskDecimal: function (v) {\n    swissFrancMaskDecimal = v;\n  }\n}, 7);\nvar toNumber, toDecimalNumber;\nmodule.link(\"../../utils/conversionFunctions\", {\n  toNumber: function (v) {\n    toNumber = v;\n  },\n  toDecimalNumber: function (v) {\n    toDecimalNumber = v;\n  }\n}, 8);\n\nvar MoneyInput = function (_ref) {\n  var _ref$fullWidth = _ref.fullWidth,\n      fullWidth = _ref$fullWidth === void 0 ? true : _ref$fullWidth,\n      helperText = _ref.helperText,\n      label = _ref.label,\n      onChange = _ref.onChange,\n      required = _ref.required,\n      margin = _ref.margin,\n      _ref$decimal = _ref.decimal,\n      decimal = _ref$decimal === void 0 ? false : _ref$decimal,\n      props = (0, _objectWithoutProperties2.default)(_ref, [\"fullWidth\", \"helperText\", \"label\", \"onChange\", \"required\", \"margin\", \"decimal\"]);\n\n  var _useInputLabelWidth = useInputLabelWidth(!!label),\n      inputLabelRef = _useInputLabelWidth.inputLabelRef,\n      labelWidth = _useInputLabelWidth.labelWidth;\n\n  var parse = decimal ? toDecimalNumber : toNumber;\n  var mask = decimal ? swissFrancMaskDecimal : swissFrancMask;\n  return React.createElement(FormControl, {\n    className: \"money-input\",\n    required: required,\n    fullWidth: fullWidth,\n    margin: margin\n  }, label && React.createElement(InputLabel, {\n    ref: inputLabelRef\n  }, label), React.createElement(Input, (0, _extends2.default)({\n    labelWidth: labelWidth,\n    startAdornment: React.createElement(InputAdornment, {\n      position: \"start\"\n    }, \"CHF\"),\n    onChange: function (event) {\n      return onChange(parse(event.target.value));\n    },\n    type: \"tel\",\n    inputComponent: MaskedInput,\n    inputProps: {\n      mask: mask\n    }\n  }, props)), helperText && React.createElement(FormHelperText, null, helperText));\n};\n\nmodule.exportDefault(MoneyInput);","map":{"version":3,"sources":["imports/core/components/MoneyInput/MoneyInput.jsx"],"names":["MoneyInput","fullWidth","decimal","props","labelWidth","useInputLabelWidth","parse","mask","label","event","onChange","helperText"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport MaskedInput from 'react-text-mask';\n\nimport InputAdornment from '../Material/InputAdornment';\nimport FormHelperText from '../Material/FormHelperText';\nimport InputLabel, { useInputLabelWidth } from '../Material/InputLabel';\nimport FormControl from '../Material/FormControl';\nimport Input from '../Material/Input';\nimport { swissFrancMask, swissFrancMaskDecimal } from '../../utils/textMasks';\nimport { toNumber, toDecimalNumber } from '../../utils/conversionFunctions';\n\ntype MoneyInputProps = {\n  fullWidth?: boolean,\n  helperText?: React.Node,\n  label?: React.Node,\n  margin?: string,\n  onChange: Function,\n  required?: boolean,\n  value: number,\n};\n\nconst MoneyInput = ({\n  fullWidth = true,\n  helperText,\n  label,\n  onChange,\n  required,\n  margin,\n  decimal = false,\n  ...props\n}: MoneyInputProps) => {\n  const { inputLabelRef, labelWidth } = useInputLabelWidth(!!label);\n  const parse = decimal ? toDecimalNumber : toNumber;\n  const mask = decimal ? swissFrancMaskDecimal : swissFrancMask;\n\n  return (\n    <FormControl\n      className=\"money-input\"\n      required={required}\n      fullWidth={fullWidth}\n      margin={margin}\n    >\n      {label && <InputLabel ref={inputLabelRef}>{label}</InputLabel>}\n      <Input\n        labelWidth={labelWidth}\n        startAdornment={<InputAdornment position=\"start\">CHF</InputAdornment>}\n        onChange={event => onChange(parse(event.target.value))}\n        type=\"tel\"\n        inputComponent={MaskedInput}\n        inputProps={{ mask }}\n        {...props}\n      />\n      {helperText && <FormHelperText>{helperText}</FormHelperText>}\n    </FormControl>\n  );\n};\nexport default MoneyInput;\n"]},"sourceType":"script","hash":"1cee610fb5e69e83371bdfda4f0b2f5ef483224a"}
