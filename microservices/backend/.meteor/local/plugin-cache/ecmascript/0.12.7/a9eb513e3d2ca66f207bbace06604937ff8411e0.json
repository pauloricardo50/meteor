{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/MiddlewareManager/MiddlewareManager.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/utils/MiddlewareManager/MiddlewareManager.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/MiddlewareManager/MiddlewareManager.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/MiddlewareManager/MiddlewareManager.js"],"names":["compose","isArray","difference","middlewareManagerHash","CLASS_METHODS_TO_EXCLUDE","MiddlewareType","Array","Function","MiddlewareObjectType","Object","MiddlewareManager","constructor","target","middlewareObjects","instance","find","key","_target","undefined","_methods","_methodMiddlewares","push","useObjectMiddleware","applyToAllMethods","_middlewares","omit","middlewares","arrayify","methods","getAllMethodNames","filter","name","includes","forEach","method","applyToMethod","obj","stop","methodNames","proto","getPrototypeOf","getOwnPropertyNames","hasMethod","desc","getOwnPropertyDescriptor","value","methodName","stringStartsWithUnderscore","middleware","bind","string","test","_objectMiddlewares","objectMiddlewares","prototype","slice","call","arg","middlewareMethods","keys","maybeArray"],"mappings":"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","sourcesContent":["// @flow\nimport { compose } from 'recompose';\nimport isArray from 'lodash/isArray';\nimport difference from 'lodash/difference';\n\nconst middlewareManagerHash = [];\nconst CLASS_METHODS_TO_EXCLUDE = [\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toString',\n  'valueOf',\n  'toLocaleString',\n  '__defineGetter__',\n  '__defineSetter__',\n  '__lookupGetter__',\n  '__lookupSetter__',\n];\n\ntype MiddlewareType = Array<Function> | Function;\ntype MiddlewareObjectType = Array<Object> | Object;\n\n// Careful, methods starting with \"_\" will not be wrapped by middleware,\n// except if you use a middlewareObject\nclass MiddlewareManager {\n  constructor(target: Object, middlewareObjects?: MiddlewareObjectType) {\n    let instance = middlewareManagerHash.find(key => key._target === target);\n    // a target can only has one MiddlewareManager instance\n    if (instance === undefined) {\n      this._target = target;\n      this._methods = {};\n      this._methodMiddlewares = {};\n      middlewareManagerHash.push(this);\n      instance = this;\n    }\n\n    if (middlewareObjects) {\n      instance.useObjectMiddleware(middlewareObjects);\n    }\n\n    return instance;\n  }\n\n  applyToAllMethods(_middlewares: MiddlewareType, omit) {\n    const middlewares = this.arrayify(_middlewares);\n    const methods = this.getAllMethodNames(this._target);\n\n    methods\n      .filter((name) => {\n        if (omit) {\n          return !omit.includes(name);\n        }\n        return true;\n      })\n      .forEach(method => this.applyToMethod(method, middlewares));\n\n    return this;\n  }\n\n  getAllMethodNames(obj: Object = {}, stop: mixed) {\n    const methodNames = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (proto && proto !== stop) {\n      Object.getOwnPropertyNames(proto).forEach((name) => {\n        if (name !== 'constructor') {\n          if (this.hasMethod(proto, name)) {\n            methodNames.push(name);\n          }\n        }\n      });\n      proto = Object.getPrototypeOf(proto);\n    }\n    return difference(methodNames, CLASS_METHODS_TO_EXCLUDE);\n  }\n\n  hasMethod(obj: Object, name: string) {\n    const desc = Object.getOwnPropertyDescriptor(obj, name);\n    return !!desc && typeof desc.value === 'function';\n  }\n\n  applyToMethod(methodName: string, _middlewares: MiddlewareType) {\n    const middlewares = this.arrayify(_middlewares);\n\n    if (\n      typeof methodName === 'string'\n      && !this.stringStartsWithUnderscore(methodName)\n    ) {\n      const method = this._methods[methodName] || this._target[methodName];\n      if (typeof method === 'function') {\n        this._methods[methodName] = method;\n\n        if (\n          this._methodMiddlewares[methodName] === undefined\n          || !isArray(this._methodMiddlewares[methodName])\n        ) {\n          this._methodMiddlewares[methodName] = [];\n        }\n\n        middlewares.forEach(middleware =>\n          typeof middleware === 'function'\n            && this._methodMiddlewares[methodName].push(middleware(this._target)));\n        this._target[methodName] = compose(...this._methodMiddlewares[methodName])(method.bind(this._target));\n      }\n    }\n\n    return this;\n  }\n\n  stringStartsWithUnderscore(string: string) {\n    return /^_+|_+$/g.test(string);\n  }\n\n  useObjectMiddleware(_objectMiddlewares: MiddlewareObjectType) {\n    const objectMiddlewares = this.arrayify(_objectMiddlewares);\n\n    Array.prototype.slice.call(objectMiddlewares).forEach((arg) => {\n      // A middleware object can specify target functions within middlewareMethods (Array).\n      // e.g. obj.middlewareMethods = ['method1', 'method2'];\n      // only method1 and method2 will be the target function.\n      typeof arg === 'object'\n        && (arg.middlewareMethods || Object.keys(arg)).forEach((key) => {\n          typeof arg[key] === 'function'\n            && this.applyToMethod(key, arg[key].bind(arg));\n        });\n    });\n\n    return this;\n  }\n\n  arrayify(maybeArray: mixed | Array): Array<Object | Function> {\n    return isArray(maybeArray) ? maybeArray : [maybeArray];\n  }\n}\n\nexport default MiddlewareManager;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/MiddlewareManager/MiddlewareManager.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/MiddlewareManager/MiddlewareManager.js"}},"code":"let compose;\nmodule.link(\"recompose\", {\n  compose(v) {\n    compose = v;\n  }\n\n}, 0);\nlet isArray;\nmodule.link(\"lodash/isArray\", {\n  default(v) {\n    isArray = v;\n  }\n\n}, 1);\nlet difference;\nmodule.link(\"lodash/difference\", {\n  default(v) {\n    difference = v;\n  }\n\n}, 2);\nconst middlewareManagerHash = [];\nconst CLASS_METHODS_TO_EXCLUDE = ['hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toString', 'valueOf', 'toLocaleString', '__defineGetter__', '__defineSetter__', '__lookupGetter__', '__lookupSetter__'];\n\n// Careful, methods starting with \"_\" will not be wrapped by middleware,\n// except if you use a middlewareObject\nclass MiddlewareManager {\n  constructor(target, middlewareObjects) {\n    let instance = middlewareManagerHash.find(key => key._target === target); // a target can only has one MiddlewareManager instance\n\n    if (instance === undefined) {\n      this._target = target;\n      this._methods = {};\n      this._methodMiddlewares = {};\n      middlewareManagerHash.push(this);\n      instance = this;\n    }\n\n    if (middlewareObjects) {\n      instance.useObjectMiddleware(middlewareObjects);\n    }\n\n    return instance;\n  }\n\n  applyToAllMethods(_middlewares, omit) {\n    const middlewares = this.arrayify(_middlewares);\n    const methods = this.getAllMethodNames(this._target);\n    methods.filter(name => {\n      if (omit) {\n        return !omit.includes(name);\n      }\n\n      return true;\n    }).forEach(method => this.applyToMethod(method, middlewares));\n    return this;\n  }\n\n  getAllMethodNames(obj = {}, stop) {\n    const methodNames = [];\n    let proto = Object.getPrototypeOf(obj);\n\n    while (proto && proto !== stop) {\n      Object.getOwnPropertyNames(proto).forEach(name => {\n        if (name !== 'constructor') {\n          if (this.hasMethod(proto, name)) {\n            methodNames.push(name);\n          }\n        }\n      });\n      proto = Object.getPrototypeOf(proto);\n    }\n\n    return difference(methodNames, CLASS_METHODS_TO_EXCLUDE);\n  }\n\n  hasMethod(obj, name) {\n    const desc = Object.getOwnPropertyDescriptor(obj, name);\n    return !!desc && typeof desc.value === 'function';\n  }\n\n  applyToMethod(methodName, _middlewares) {\n    const middlewares = this.arrayify(_middlewares);\n\n    if (typeof methodName === 'string' && !this.stringStartsWithUnderscore(methodName)) {\n      const method = this._methods[methodName] || this._target[methodName];\n\n      if (typeof method === 'function') {\n        this._methods[methodName] = method;\n\n        if (this._methodMiddlewares[methodName] === undefined || !isArray(this._methodMiddlewares[methodName])) {\n          this._methodMiddlewares[methodName] = [];\n        }\n\n        middlewares.forEach(middleware => typeof middleware === 'function' && this._methodMiddlewares[methodName].push(middleware(this._target)));\n        this._target[methodName] = compose(...this._methodMiddlewares[methodName])(method.bind(this._target));\n      }\n    }\n\n    return this;\n  }\n\n  stringStartsWithUnderscore(string) {\n    return /^_+|_+$/g.test(string);\n  }\n\n  useObjectMiddleware(_objectMiddlewares) {\n    const objectMiddlewares = this.arrayify(_objectMiddlewares);\n    Array.prototype.slice.call(objectMiddlewares).forEach(arg => {\n      // A middleware object can specify target functions within middlewareMethods (Array).\n      // e.g. obj.middlewareMethods = ['method1', 'method2'];\n      // only method1 and method2 will be the target function.\n      typeof arg === 'object' && (arg.middlewareMethods || Object.keys(arg)).forEach(key => {\n        typeof arg[key] === 'function' && this.applyToMethod(key, arg[key].bind(arg));\n      });\n    });\n    return this;\n  }\n\n  arrayify(maybeArray) {\n    return isArray(maybeArray) ? maybeArray : [maybeArray];\n  }\n\n}\n\nmodule.exportDefault(MiddlewareManager);","map":{"version":3,"sources":["imports/core/utils/MiddlewareManager/MiddlewareManager.js"],"names":["middlewareManagerHash","CLASS_METHODS_TO_EXCLUDE","constructor","instance","key","applyToAllMethods","middlewares","methods","name","omit","method","getAllMethodNames","obj","methodNames","proto","Object","difference","hasMethod","desc","applyToMethod","isArray","middleware","compose","stringStartsWithUnderscore","useObjectMiddleware","objectMiddlewares","Array","arg","arrayify"],"mappings":"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","sourcesContent":["// @flow\nimport { compose } from 'recompose';\nimport isArray from 'lodash/isArray';\nimport difference from 'lodash/difference';\n\nconst middlewareManagerHash = [];\nconst CLASS_METHODS_TO_EXCLUDE = [\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toString',\n  'valueOf',\n  'toLocaleString',\n  '__defineGetter__',\n  '__defineSetter__',\n  '__lookupGetter__',\n  '__lookupSetter__',\n];\n\ntype MiddlewareType = Array<Function> | Function;\ntype MiddlewareObjectType = Array<Object> | Object;\n\n// Careful, methods starting with \"_\" will not be wrapped by middleware,\n// except if you use a middlewareObject\nclass MiddlewareManager {\n  constructor(target: Object, middlewareObjects?: MiddlewareObjectType) {\n    let instance = middlewareManagerHash.find(key => key._target === target);\n    // a target can only has one MiddlewareManager instance\n    if (instance === undefined) {\n      this._target = target;\n      this._methods = {};\n      this._methodMiddlewares = {};\n      middlewareManagerHash.push(this);\n      instance = this;\n    }\n\n    if (middlewareObjects) {\n      instance.useObjectMiddleware(middlewareObjects);\n    }\n\n    return instance;\n  }\n\n  applyToAllMethods(_middlewares: MiddlewareType, omit) {\n    const middlewares = this.arrayify(_middlewares);\n    const methods = this.getAllMethodNames(this._target);\n\n    methods\n      .filter((name) => {\n        if (omit) {\n          return !omit.includes(name);\n        }\n        return true;\n      })\n      .forEach(method => this.applyToMethod(method, middlewares));\n\n    return this;\n  }\n\n  getAllMethodNames(obj: Object = {}, stop: mixed) {\n    const methodNames = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (proto && proto !== stop) {\n      Object.getOwnPropertyNames(proto).forEach((name) => {\n        if (name !== 'constructor') {\n          if (this.hasMethod(proto, name)) {\n            methodNames.push(name);\n          }\n        }\n      });\n      proto = Object.getPrototypeOf(proto);\n    }\n    return difference(methodNames, CLASS_METHODS_TO_EXCLUDE);\n  }\n\n  hasMethod(obj: Object, name: string) {\n    const desc = Object.getOwnPropertyDescriptor(obj, name);\n    return !!desc && typeof desc.value === 'function';\n  }\n\n  applyToMethod(methodName: string, _middlewares: MiddlewareType) {\n    const middlewares = this.arrayify(_middlewares);\n\n    if (\n      typeof methodName === 'string'\n      && !this.stringStartsWithUnderscore(methodName)\n    ) {\n      const method = this._methods[methodName] || this._target[methodName];\n      if (typeof method === 'function') {\n        this._methods[methodName] = method;\n\n        if (\n          this._methodMiddlewares[methodName] === undefined\n          || !isArray(this._methodMiddlewares[methodName])\n        ) {\n          this._methodMiddlewares[methodName] = [];\n        }\n\n        middlewares.forEach(middleware =>\n          typeof middleware === 'function'\n            && this._methodMiddlewares[methodName].push(middleware(this._target)));\n        this._target[methodName] = compose(...this._methodMiddlewares[methodName])(method.bind(this._target));\n      }\n    }\n\n    return this;\n  }\n\n  stringStartsWithUnderscore(string: string) {\n    return /^_+|_+$/g.test(string);\n  }\n\n  useObjectMiddleware(_objectMiddlewares: MiddlewareObjectType) {\n    const objectMiddlewares = this.arrayify(_objectMiddlewares);\n\n    Array.prototype.slice.call(objectMiddlewares).forEach((arg) => {\n      // A middleware object can specify target functions within middlewareMethods (Array).\n      // e.g. obj.middlewareMethods = ['method1', 'method2'];\n      // only method1 and method2 will be the target function.\n      typeof arg === 'object'\n        && (arg.middlewareMethods || Object.keys(arg)).forEach((key) => {\n          typeof arg[key] === 'function'\n            && this.applyToMethod(key, arg[key].bind(arg));\n        });\n    });\n\n    return this;\n  }\n\n  arrayify(maybeArray: mixed | Array): Array<Object | Function> {\n    return isArray(maybeArray) ? maybeArray : [maybeArray];\n  }\n}\n\nexport default MiddlewareManager;\n"]},"sourceType":"script","hash":"a9eb513e3d2ca66f207bbace06604937ff8411e0"}
