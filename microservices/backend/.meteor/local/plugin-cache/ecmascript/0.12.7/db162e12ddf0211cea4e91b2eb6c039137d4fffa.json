{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/client/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/lmieulet:meteor-coverage/client/methods.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/client/methods.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/client/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/lmieulet:meteor-coverage/client/methods.js"}},"code":"let HTTP;\nmodule.link(\"meteor/http\", {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nvar stats = {\n  SUCCESS: 0,\n  FAILED: 0,\n  TOTAL: 0\n};\n\nMeteor.getStats = function () {\n  return stats;\n};\n\nMeteor.increaseSuccess = function () {\n  stats.SUCCESS++;\n};\n\nMeteor.increaseFailures = function () {\n  stats.FAILED++;\n};\n\nMeteor.increaseTotal = function () {\n  stats.TOTAL++;\n};\n\nMeteor.getCoverageObject = function () {\n  return global['__coverage__'];\n};\n\nMeteor.getCoverageReportObject = function (propertyKey, value) {\n  var coverageReport = {};\n  coverageReport[propertyKey] = value;\n  return JSON.stringify(coverageReport);\n};\n/**\n* Usage: Meteor.sendCoverage(function(stats,err) {console.log(stats,err);});\n*/\n\n\nMeteor.sendCoverage = function (callback) {\n  var coverageReport = {};\n  var globalCoverage = Meteor.getCoverageObject();\n\n  if (!globalCoverage) {\n    return callback(Meteor.getStats());\n  } // Send each property alone\n\n\n  for (var property in globalCoverage) {\n    /* istanbul ignore else */\n    if (globalCoverage.hasOwnProperty(property)) {\n      Meteor.increaseTotal();\n      HTTP.call('POST', '/coverage/client', {\n        content: Meteor.getCoverageReportObject(property, globalCoverage[property]),\n        headers: {\n          'Content-Type': 'application/json; charset=UTF-8'\n        }\n      }, (error, res) => {\n        if (error) {\n          Meteor.increaseFailures();\n        } else {\n          Meteor.increaseSuccess();\n        }\n\n        var stats = Meteor.getStats();\n        /* istanbul ignore else */\n\n        if (stats.SUCCESS + stats.FAILED === stats.TOTAL) {\n          if (stats.FAILED > 0) {\n            // This is bullshit. Should not be done like that\n            // Test runners test if the second params is a truth value, so let's use a number\n            return callback(stats, stats.FAILED);\n          }\n\n          return callback(stats);\n        }\n      });\n    }\n  }\n};\n/**\n* Usage: Meteor.exportCoverage(null, function(err) {console.log(err)})\n*/\n\n\nMeteor.exportCoverage = function (type, callback) {\n  /* istanbul ignore next: ternary operator */\n  var url = type ? '/coverage/export/' + type : '/coverage/export';\n  HTTP.call('GET', url, {}, (error, res) => {\n    if (error) {\n      return callback('Error: ' + JSON.stringify(arguments) + '. A server error occurred while trying to export coverage data');\n    }\n\n    try {\n      let result = JSON.parse(res.content);\n      /* istanbul ignore else */\n\n      if (result.type !== 'success') {\n        throw new Error('Error: ' + JSON.stringify(arguments) + '. An unexpected error occurred while trying to export coverage data');\n      }\n\n      return callback();\n    } catch (e) {\n      return callback(e);\n    }\n  });\n};\n/**\n* Usage: Meteor.importCoverage(function(err) {console.log(err)})\n*/\n\n\nMeteor.importCoverage = function (callback) {\n  HTTP.call('GET', '/coverage/import', {}, (error, res) => {\n    if (error) {\n      return callback(error, [error]);\n    }\n\n    try {\n      let result = JSON.parse(res.content);\n      /* istanbul ignore else */\n\n      if (result.type !== 'success') {\n        throw new Error('Error: ' + JSON.stringify(arguments) + '. An unexpected error occurred while trying to import coverage data');\n      }\n\n      return callback();\n    } catch (e) {\n      callback(e, [res]);\n    }\n  });\n};\n\nmodule.exportDefault(Meteor);","map":{"version":3,"sources":["packages/lmieulet:meteor-coverage/client/methods.js"],"names":["HTTP","module","link","v","Meteor","stats","SUCCESS","FAILED","TOTAL","getStats","increaseSuccess","increaseFailures","increaseTotal","getCoverageObject","global","getCoverageReportObject","propertyKey","value","coverageReport","JSON","stringify","sendCoverage","callback","globalCoverage","property","hasOwnProperty","call","content","headers","error","res","exportCoverage","type","url","arguments","result","parse","Error","e","importCoverage","exportDefault"],"mappings":"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","sourcesContent":["import { HTTP } from 'meteor/http';\nimport { Meteor } from 'meteor/meteor';\n\nvar stats = {SUCCESS: 0, FAILED: 0, TOTAL: 0};\nMeteor.getStats = function () {\n  return stats;\n};\n\nMeteor.increaseSuccess = function () {\n  stats.SUCCESS++;\n};\n\nMeteor.increaseFailures = function () {\n  stats.FAILED++;\n};\n\nMeteor.increaseTotal = function () {\n  stats.TOTAL++;\n};\n\nMeteor.getCoverageObject = function () {\n  return global['__coverage__'];\n};\n\nMeteor.getCoverageReportObject = function (propertyKey, value) {\n  var coverageReport = {};\n  coverageReport[propertyKey] = value;\n\n  return JSON.stringify(coverageReport);\n};\n\n/**\n* Usage: Meteor.sendCoverage(function(stats,err) {console.log(stats,err);});\n*/\nMeteor.sendCoverage = function (callback) {\n  var coverageReport = {};\n\n  var globalCoverage = Meteor.getCoverageObject();\n  if (!globalCoverage) {\n    return callback(Meteor.getStats());\n  }\n\n  // Send each property alone\n  for (var property in globalCoverage) {\n    /* istanbul ignore else */\n    if (globalCoverage.hasOwnProperty(property)) {\n      Meteor.increaseTotal();\n\n      HTTP.call('POST', '/coverage/client', {\n        content: Meteor.getCoverageReportObject(property, globalCoverage[property]),\n        headers: {\n          'Content-Type': 'application/json; charset=UTF-8'\n        }\n      }, (error, res) => {\n        if (error) {\n          Meteor.increaseFailures();\n        } else {\n          Meteor.increaseSuccess();\n        }\n\n        var stats = Meteor.getStats();\n        /* istanbul ignore else */\n        if (stats.SUCCESS + stats.FAILED === stats.TOTAL) {\n          if (stats.FAILED > 0) {\n            // This is bullshit. Should not be done like that\n            // Test runners test if the second params is a truth value, so let's use a number\n            return callback(stats, stats.FAILED);\n          }\n          return callback(stats);\n        }\n      });\n    }\n  }\n};\n/**\n* Usage: Meteor.exportCoverage(null, function(err) {console.log(err)})\n*/\nMeteor.exportCoverage = function (type, callback) {\n  /* istanbul ignore next: ternary operator */\n  var url = type ? '/coverage/export/'+type : '/coverage/export';\n  HTTP.call('GET', url, {}, (error, res) => {\n    if (error) {\n      return callback('Error: '+JSON.stringify(arguments)+'. A server error occurred while trying to export coverage data');\n    }\n\n    try {\n      let result = JSON.parse(res.content);\n      /* istanbul ignore else */\n      if (result.type !== 'success') {\n        throw new Error('Error: '+JSON.stringify(arguments)+'. An unexpected error occurred while trying to export coverage data');\n      }\n\n      return callback();\n    } catch (e) {\n      return callback(e);\n    }\n  });\n};\n\n/**\n* Usage: Meteor.importCoverage(function(err) {console.log(err)})\n*/\nMeteor.importCoverage = function (callback) {\n  HTTP.call('GET', '/coverage/import', {}, (error, res) => {\n    if (error) {\n      return callback(error, [error]);\n    }\n\n    try {\n      let result = JSON.parse(res.content);\n      /* istanbul ignore else */\n      if (result.type !== 'success') {\n        throw new Error('Error: '+JSON.stringify(arguments)+'. An unexpected error occurred while trying to import coverage data');\n      }\n\n      return callback();\n    } catch (e) {\n      callback(e, [res]);\n    }\n  });\n};\n\nexport default Meteor;\n"]},"sourceType":"script","hash":"db162e12ddf0211cea4e91b2eb6c039137d4fffa"}
