{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/email/server/EmailService.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/email/server/EmailService.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/email/server/EmailService.js","inputSourceMap":{"version":3,"sources":["imports/core/api/email/server/EmailService.js"],"names":["Meteor","UserService","emailConfigs","getEmailContent","getEmailPart","sendMandrillTemplate","getMandrillTemplate","getSimpleMandrillTemplate","renderMandrillTemplate","FROM_NAME","FROM_EMAIL","isEmailTestEnv","isTest","isAppTest","skipEmails","isDevelopment","isDevEnvironment","EmailService","emailId","address","name","params","templateOptions","createTemplateOptions","template","then","response","emailLogger","userId","email","fetchOne","$filters","_id","sendEmail","emailConfig","getEmailConfig","mandrillId","templateName","createIntlValues","otherOptions","intlValues","emailContent","overrides","createOverrides","recipientAddress","recipientName","senderAddress","senderName","subject","sendAt","undefined","part","result","error","Error","reason","message","call","date","Date","now","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport UserService from '../../users/server/UserService';\nimport emailConfigs from './emailConfigs';\nimport { getEmailContent, getEmailPart } from './emailHelpers';\nimport {\n  sendMandrillTemplate,\n  getMandrillTemplate,\n  getSimpleMandrillTemplate,\n  renderMandrillTemplate,\n} from './mandrill';\nimport { FROM_NAME, FROM_EMAIL } from '../emailConstants';\n\nexport const isEmailTestEnv = Meteor.isTest || Meteor.isAppTest;\nexport const skipEmails = (Meteor.isDevelopment || Meteor.isDevEnvironment) && !isEmailTestEnv;\n// export const skipEmails = false;\n\nclass EmailService {\n  sendEmail = ({ emailId, address, name, params }) => {\n    const templateOptions = this.createTemplateOptions({\n      emailId,\n      address,\n      name,\n      params,\n    });\n    const template = getMandrillTemplate(templateOptions);\n    return sendMandrillTemplate(template).then((response) => {\n      this.emailLogger({ emailId, address, template, response });\n    });\n  };\n\n  sendEmailToUser = ({ emailId, userId, params }) => {\n    const { email, name } = UserService.fetchOne({\n      $filters: { _id: userId },\n      email: 1,\n      name: 1,\n    });\n    this.sendEmail({ emailId, address: email, name, params });\n  };\n\n  getEmailConfig = emailId => emailConfigs[emailId];\n\n  createTemplateOptions = ({ emailId, address, name, params }) => {\n    const emailConfig = this.getEmailConfig(emailId);\n    const {\n      template: { mandrillId: templateName },\n      createIntlValues,\n      ...otherOptions\n    } = emailConfig;\n\n    const intlValues = createIntlValues(params);\n    const emailContent = getEmailContent(emailId, intlValues);\n\n    // Make sure you call `createOverrides` from emailConfig, to preserve `this`\n    // See: https://github.com/Microsoft/vscode/issues/43930\n    const overrides = emailConfig.createOverrides(params, emailContent);\n\n    return {\n      templateName,\n      recipientAddress: address,\n      recipientName: name,\n      senderAddress: FROM_EMAIL,\n      senderName: FROM_NAME,\n      subject: emailContent.subject,\n      sendAt: undefined,\n      ...overrides,\n      ...otherOptions,\n    };\n  };\n\n  getAccountsTemplate = (emailId, params = {}) => {\n    const templateOptions = this.createTemplateOptions({ emailId, params });\n    return getSimpleMandrillTemplate(templateOptions);\n  };\n\n  getEmailPart = (emailId, part) => getEmailPart({ emailId, part });\n\n  renderTemplate = (templateOptions, emailId) => {\n    let result;\n    this.emailLogger({ emailId, template: templateOptions });\n\n    try {\n      result = renderMandrillTemplate(templateOptions);\n    } catch (error) {\n      throw new Meteor.Error(\n        'MANDRILL_ERROR',\n        `Error while rendering mandrill template for ${emailId}: ${error.reason\n          || error.message\n          || error}`,\n      );\n    }\n\n    return result;\n  };\n\n  emailLogger = ({ emailId, address, template, response }) => {\n    if (isEmailTestEnv) {\n      // Store all sent emails in the DB, to be asserted in tests\n      return Meteor.call('storeTestEmail', {\n        date: Date.now(),\n        emailId,\n        address,\n        template,\n        response,\n      });\n    }\n    if (skipEmails) {\n      if (address) {\n        console.log(`EmailService dev: Would've sent ${emailId} to ${address} with this template:`);\n      } else {\n        console.log(`EmailService dev: Would've sent ${emailId} with this template:`);\n      }\n      console.log(JSON.stringify(template, null, 2));\n    }\n  };\n}\n\nexport default new EmailService();\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/email/server/EmailService.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/email/server/EmailService.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nmodule.export({\n  isEmailTestEnv: () => isEmailTestEnv,\n  skipEmails: () => skipEmails\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet UserService;\nmodule.link(\"../../users/server/UserService\", {\n  default(v) {\n    UserService = v;\n  }\n\n}, 1);\nlet emailConfigs;\nmodule.link(\"./emailConfigs\", {\n  default(v) {\n    emailConfigs = v;\n  }\n\n}, 2);\nlet getEmailContent, getEmailPart;\nmodule.link(\"./emailHelpers\", {\n  getEmailContent(v) {\n    getEmailContent = v;\n  },\n\n  getEmailPart(v) {\n    getEmailPart = v;\n  }\n\n}, 3);\nlet sendMandrillTemplate, getMandrillTemplate, getSimpleMandrillTemplate, renderMandrillTemplate;\nmodule.link(\"./mandrill\", {\n  sendMandrillTemplate(v) {\n    sendMandrillTemplate = v;\n  },\n\n  getMandrillTemplate(v) {\n    getMandrillTemplate = v;\n  },\n\n  getSimpleMandrillTemplate(v) {\n    getSimpleMandrillTemplate = v;\n  },\n\n  renderMandrillTemplate(v) {\n    renderMandrillTemplate = v;\n  }\n\n}, 4);\nlet FROM_NAME, FROM_EMAIL;\nmodule.link(\"../emailConstants\", {\n  FROM_NAME(v) {\n    FROM_NAME = v;\n  },\n\n  FROM_EMAIL(v) {\n    FROM_EMAIL = v;\n  }\n\n}, 5);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst isEmailTestEnv = Meteor.isTest || Meteor.isAppTest;\nconst skipEmails = (Meteor.isDevelopment || Meteor.isDevEnvironment) && !isEmailTestEnv;\n\n// export const skipEmails = false;\nclass EmailService {\n  constructor() {\n    _defineProperty(this, \"sendEmail\", ({\n      emailId,\n      address,\n      name,\n      params\n    }) => {\n      const templateOptions = this.createTemplateOptions({\n        emailId,\n        address,\n        name,\n        params\n      });\n      const template = getMandrillTemplate(templateOptions);\n      return sendMandrillTemplate(template).then(response => {\n        this.emailLogger({\n          emailId,\n          address,\n          template,\n          response\n        });\n      });\n    });\n\n    _defineProperty(this, \"sendEmailToUser\", ({\n      emailId,\n      userId,\n      params\n    }) => {\n      const {\n        email,\n        name\n      } = UserService.fetchOne({\n        $filters: {\n          _id: userId\n        },\n        email: 1,\n        name: 1\n      });\n      this.sendEmail({\n        emailId,\n        address: email,\n        name,\n        params\n      });\n    });\n\n    _defineProperty(this, \"getEmailConfig\", emailId => emailConfigs[emailId]);\n\n    _defineProperty(this, \"createTemplateOptions\", ({\n      emailId,\n      address,\n      name,\n      params\n    }) => {\n      const emailConfig = this.getEmailConfig(emailId);\n      const {\n        template: {\n          mandrillId: templateName\n        },\n        createIntlValues\n      } = emailConfig,\n            otherOptions = (0, _objectWithoutProperties2.default)(emailConfig, [\"template\", \"createIntlValues\"]);\n      const intlValues = createIntlValues(params);\n      const emailContent = getEmailContent(emailId, intlValues); // Make sure you call `createOverrides` from emailConfig, to preserve `this`\n      // See: https://github.com/Microsoft/vscode/issues/43930\n\n      const overrides = emailConfig.createOverrides(params, emailContent);\n      return (0, _objectSpread2.default)({\n        templateName,\n        recipientAddress: address,\n        recipientName: name,\n        senderAddress: FROM_EMAIL,\n        senderName: FROM_NAME,\n        subject: emailContent.subject,\n        sendAt: undefined\n      }, overrides, otherOptions);\n    });\n\n    _defineProperty(this, \"getAccountsTemplate\", (emailId, params = {}) => {\n      const templateOptions = this.createTemplateOptions({\n        emailId,\n        params\n      });\n      return getSimpleMandrillTemplate(templateOptions);\n    });\n\n    _defineProperty(this, \"getEmailPart\", (emailId, part) => getEmailPart({\n      emailId,\n      part\n    }));\n\n    _defineProperty(this, \"renderTemplate\", (templateOptions, emailId) => {\n      let result;\n      this.emailLogger({\n        emailId,\n        template: templateOptions\n      });\n\n      try {\n        result = renderMandrillTemplate(templateOptions);\n      } catch (error) {\n        throw new Meteor.Error('MANDRILL_ERROR', `Error while rendering mandrill template for ${emailId}: ${error.reason || error.message || error}`);\n      }\n\n      return result;\n    });\n\n    _defineProperty(this, \"emailLogger\", ({\n      emailId,\n      address,\n      template,\n      response\n    }) => {\n      if (isEmailTestEnv) {\n        // Store all sent emails in the DB, to be asserted in tests\n        return Meteor.call('storeTestEmail', {\n          date: Date.now(),\n          emailId,\n          address,\n          template,\n          response\n        });\n      }\n\n      if (skipEmails) {\n        if (address) {\n          console.log(`EmailService dev: Would've sent ${emailId} to ${address} with this template:`);\n        } else {\n          console.log(`EmailService dev: Would've sent ${emailId} with this template:`);\n        }\n\n        console.log(JSON.stringify(template, null, 2));\n      }\n    });\n  }\n\n}\n\nmodule.exportDefault(new EmailService());","map":{"version":3,"sources":["imports/core/api/email/server/EmailService.js"],"names":["isEmailTestEnv","Meteor","skipEmails","params","templateOptions","template","getMandrillTemplate","response","name","$filters","_id","userId","email","address","emailId","emailConfigs","emailConfig","mandrillId","templateName","otherOptions","intlValues","createIntlValues","emailContent","getEmailContent","overrides","recipientAddress","recipientName","senderAddress","senderName","subject","sendAt","getSimpleMandrillTemplate","getEmailPart","part","result","renderMandrillTemplate","error","date","Date","console","JSON"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport UserService from '../../users/server/UserService';\nimport emailConfigs from './emailConfigs';\nimport { getEmailContent, getEmailPart } from './emailHelpers';\nimport {\n  sendMandrillTemplate,\n  getMandrillTemplate,\n  getSimpleMandrillTemplate,\n  renderMandrillTemplate,\n} from './mandrill';\nimport { FROM_NAME, FROM_EMAIL } from '../emailConstants';\n\nexport const isEmailTestEnv = Meteor.isTest || Meteor.isAppTest;\nexport const skipEmails = (Meteor.isDevelopment || Meteor.isDevEnvironment) && !isEmailTestEnv;\n// export const skipEmails = false;\n\nclass EmailService {\n  sendEmail = ({ emailId, address, name, params }) => {\n    const templateOptions = this.createTemplateOptions({\n      emailId,\n      address,\n      name,\n      params,\n    });\n    const template = getMandrillTemplate(templateOptions);\n    return sendMandrillTemplate(template).then((response) => {\n      this.emailLogger({ emailId, address, template, response });\n    });\n  };\n\n  sendEmailToUser = ({ emailId, userId, params }) => {\n    const { email, name } = UserService.fetchOne({\n      $filters: { _id: userId },\n      email: 1,\n      name: 1,\n    });\n    this.sendEmail({ emailId, address: email, name, params });\n  };\n\n  getEmailConfig = emailId => emailConfigs[emailId];\n\n  createTemplateOptions = ({ emailId, address, name, params }) => {\n    const emailConfig = this.getEmailConfig(emailId);\n    const {\n      template: { mandrillId: templateName },\n      createIntlValues,\n      ...otherOptions\n    } = emailConfig;\n\n    const intlValues = createIntlValues(params);\n    const emailContent = getEmailContent(emailId, intlValues);\n\n    // Make sure you call `createOverrides` from emailConfig, to preserve `this`\n    // See: https://github.com/Microsoft/vscode/issues/43930\n    const overrides = emailConfig.createOverrides(params, emailContent);\n\n    return {\n      templateName,\n      recipientAddress: address,\n      recipientName: name,\n      senderAddress: FROM_EMAIL,\n      senderName: FROM_NAME,\n      subject: emailContent.subject,\n      sendAt: undefined,\n      ...overrides,\n      ...otherOptions,\n    };\n  };\n\n  getAccountsTemplate = (emailId, params = {}) => {\n    const templateOptions = this.createTemplateOptions({ emailId, params });\n    return getSimpleMandrillTemplate(templateOptions);\n  };\n\n  getEmailPart = (emailId, part) => getEmailPart({ emailId, part });\n\n  renderTemplate = (templateOptions, emailId) => {\n    let result;\n    this.emailLogger({ emailId, template: templateOptions });\n\n    try {\n      result = renderMandrillTemplate(templateOptions);\n    } catch (error) {\n      throw new Meteor.Error(\n        'MANDRILL_ERROR',\n        `Error while rendering mandrill template for ${emailId}: ${error.reason\n          || error.message\n          || error}`,\n      );\n    }\n\n    return result;\n  };\n\n  emailLogger = ({ emailId, address, template, response }) => {\n    if (isEmailTestEnv) {\n      // Store all sent emails in the DB, to be asserted in tests\n      return Meteor.call('storeTestEmail', {\n        date: Date.now(),\n        emailId,\n        address,\n        template,\n        response,\n      });\n    }\n    if (skipEmails) {\n      if (address) {\n        console.log(`EmailService dev: Would've sent ${emailId} to ${address} with this template:`);\n      } else {\n        console.log(`EmailService dev: Would've sent ${emailId} with this template:`);\n      }\n      console.log(JSON.stringify(template, null, 2));\n    }\n  };\n}\n\nexport default new EmailService();\n"]},"sourceType":"script","hash":"de450e0b8ba218f45ce34d9ad3cf02dc07082ef1"}
