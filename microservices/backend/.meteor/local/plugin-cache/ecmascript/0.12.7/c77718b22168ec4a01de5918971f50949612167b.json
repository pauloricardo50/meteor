{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/offers/server/OfferService.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/offers/server/OfferService.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/offers/server/OfferService.js","inputSourceMap":{"version":3,"sources":["imports/core/api/offers/server/OfferService.js"],"names":["moment","CollectionService","LoanService","LenderService","LENDER_STATUS","fullOffer","EMAIL_IDS","sendEmailToAddress","Offers","OfferService","constructor","offerId","object","update","$set","feedback","saveFeedback","message","date","Date","createdAt","lender","organisation","name","organisationName","contact","email","address","loan","loanName","user","assignedEmployee","fetchOne","$filters","_id","assigneeAddress","assigneeName","run","emailId","SEND_FEEDBACK_TO_LENDER","params","format","offer","lenderId","insert","addLink","id","linkName","linkId","_update","status","OFFER_RECEIVED","remove","structures","$elemMatch","loanId","map","structure","undefined"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAOC,iBAAP;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,SAASC,aAAT;AACA,SAASC,SAAT;AACA,SAASC,SAAT;AACA,SAASC,kBAAT;AACA,OAAOC,MAAP;AAEA,OAAO,MAAMC,YAAN,SAA2BR,iBAA3B,CAA6C;AAClDS,EAAAA,WAAW,GAAG;AACZ,UAAMF,MAAN;;AADY,oCAIL,CAAC;AAAEG,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,KAAyBJ,MAAM,CAACK,MAAP,CAAcF,OAAd,EAAuB;AAAEG,MAAAA,IAAI,EAAEF;AAAR,KAAvB,CAJpB;;AAAA,0CAMC,CAAC;AAAED,MAAAA,OAAF;AAAWI,MAAAA,QAAX;AAAqBC,MAAAA,YAAY,GAAG;AAApC,KAAD,KAAgD;AAC7D,UAAIA,YAAJ,EAAkB;AAChB,aAAKH,MAAL,CAAY;AACVF,UAAAA,OADU;AAEVC,UAAAA,MAAM,EAAE;AAAEG,YAAAA,QAAQ,EAAE;AAAEE,cAAAA,OAAO,EAAEF,QAAX;AAAqBG,cAAAA,IAAI,EAAE,IAAIC,IAAJ;AAA3B;AAAZ;AAFE,SAAZ;AAID;;AAED,YAAM;AACJC,QAAAA,SADI;AAEJC,QAAAA,MAAM,EAAE;AACNC,UAAAA,YAAY,EAAE;AAAEC,YAAAA,IAAI,EAAEC;AAAR,WADR;AAENC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,KAAK,EAAEC,OAAT;AAAkBJ,YAAAA;AAAlB,WAFH;AAGNK,UAAAA,IAAI,EAAE;AACJL,YAAAA,IAAI,EAAEM,QADF;AAEJC,YAAAA,IAAI,EAAE;AAAEC,cAAAA;AAAF;AAFF;AAHA;AAFJ,UAUF,KAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,GAAG,EAAEvB;AAAP,SAAZ;AAA8B,WAAGN,SAAS;AAA1C,OAAd,CAVJ;AAYA,YAAM;AAAEqB,QAAAA,KAAK,EAAES,eAAT;AAA0BZ,QAAAA,IAAI,EAAEa;AAAhC,UAAiDL,gBAAgB,IAAI,EAA3E;AAEA,aAAOxB,kBAAkB,CAAC8B,GAAnB,CAAuB;AAC5BC,QAAAA,OAAO,EAAEhC,SAAS,CAACiC,uBADS;AAE5BZ,QAAAA,OAF4B;AAG5BJ,QAAAA,IAH4B;AAI5BiB,QAAAA,MAAM,EAAE;AACNL,UAAAA,eADM;AAENC,UAAAA,YAFM;AAGNP,UAAAA,QAHM;AAINL,UAAAA,gBAJM;AAKNN,UAAAA,IAAI,EAAElB,MAAM,CAACoB,SAAD,CAAN,CAAkBqB,MAAlB,CAAyB,YAAzB,CALA;AAMN1B,UAAAA;AANM;AAJoB,OAAvB,CAAP;AAaD,KAzCa;;AAAA,oCA2CL,CAAC;AAAE2B,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAF;AAAY,WAAGD;AAAf;AAAT,KAAD,KAAuC;AAC9C,YAAM/B,OAAO,GAAGH,MAAM,CAACoC,MAAP,CAAc,EAAE,GAAGF;AAAL,OAAd,CAAhB;AACA,WAAKG,OAAL,CAAa;AAAEC,QAAAA,EAAE,EAAEnC,OAAN;AAAeoC,QAAAA,QAAQ,EAAE,QAAzB;AAAmCC,QAAAA,MAAM,EAAEL;AAA3C,OAAb;;AACAxC,MAAAA,aAAa,CAAC8C,OAAd,CAAsB;AACpBH,QAAAA,EAAE,EAAEH,QADgB;AAEpB/B,QAAAA,MAAM,EAAE;AAAEsC,UAAAA,MAAM,EAAE9C,aAAa,CAAC+C;AAAxB;AAFY,OAAtB;;AAIA,aAAOxC,OAAP;AACD,KAnDa;;AAAA,oCAqDL,CAAC;AAAEA,MAAAA;AAAF,KAAD,KAAiBH,MAAM,CAAC4C,MAAP,CAAczC,OAAd,CArDZ;;AAAA,0CAuDC,CAAC;AAAEA,MAAAA;AAAF,KAAD,KAAiB;AAC9B,YAAMiB,IAAI,GAAG1B,WAAW,CAAC8B,QAAZ,CAAqB;AAChCC,QAAAA,QAAQ,EAAE;AACRoB,UAAAA,UAAU,EAAE;AAAEC,YAAAA,UAAU,EAAE;AAAE3C,cAAAA;AAAF;AAAd;AADJ;AADsB,OAArB,CAAb;;AAMA,UAAIiB,IAAJ,EAAU;AACR1B,QAAAA,WAAW,CAACW,MAAZ,CAAmB;AACjB0C,UAAAA,MAAM,EAAE3B,IAAI,CAACM,GADI;AAEjBtB,UAAAA,MAAM,EAAE;AACNyC,YAAAA,UAAU,EAAEzB,IAAI,CAACyB,UAAL,CAAgBG,GAAhB,CAAoBC,SAAS,KAAK,EAC5C,GAAGA,SADyC;AAE5C9C,cAAAA,OAAO,EACL8C,SAAS,CAAC9C,OAAV,KAAsBA,OAAtB,GAAgC+C,SAAhC,GAA4CD,SAAS,CAAC9C;AAHZ,aAAL,CAA7B;AADN;AAFS,SAAnB;AAUD;AACF,KA1Ea;AAEb;;AAHiD;AA8EpD,eAAe,IAAIF,YAAJ,EAAf","sourcesContent":["import moment from 'moment';\n\nimport CollectionService from '../../helpers/CollectionService';\nimport LoanService from '../../loans/server/LoanService';\nimport LenderService from '../../lenders/server/LenderService';\nimport { LENDER_STATUS } from '../../lenders/lenderConstants';\nimport { fullOffer } from '../../fragments';\nimport { EMAIL_IDS } from '../../email/emailConstants';\nimport { sendEmailToAddress } from '../../methods';\nimport Offers from '../offers';\n\nexport class OfferService extends CollectionService {\n  constructor() {\n    super(Offers);\n  }\n\n  update = ({ offerId, object }) => Offers.update(offerId, { $set: object });\n\n  sendFeedback = ({ offerId, feedback, saveFeedback = true }) => {\n    if (saveFeedback) {\n      this.update({\n        offerId,\n        object: { feedback: { message: feedback, date: new Date() } },\n      });\n    }\n\n    const {\n      createdAt,\n      lender: {\n        organisation: { name: organisationName },\n        contact: { email: address, name },\n        loan: {\n          name: loanName,\n          user: { assignedEmployee },\n        },\n      },\n    } = this.fetchOne({ $filters: { _id: offerId }, ...fullOffer() });\n\n    const { email: assigneeAddress, name: assigneeName } = assignedEmployee || {};\n\n    return sendEmailToAddress.run({\n      emailId: EMAIL_IDS.SEND_FEEDBACK_TO_LENDER,\n      address,\n      name,\n      params: {\n        assigneeAddress,\n        assigneeName,\n        loanName,\n        organisationName,\n        date: moment(createdAt).format('DD.MM.YYYY'),\n        feedback,\n      },\n    });\n  };\n\n  insert = ({ offer: { lenderId, ...offer } }) => {\n    const offerId = Offers.insert({ ...offer });\n    this.addLink({ id: offerId, linkName: 'lender', linkId: lenderId });\n    LenderService._update({\n      id: lenderId,\n      object: { status: LENDER_STATUS.OFFER_RECEIVED },\n    });\n    return offerId;\n  };\n\n  remove = ({ offerId }) => Offers.remove(offerId);\n\n  cleanUpOffer = ({ offerId }) => {\n    const loan = LoanService.fetchOne({\n      $filters: {\n        structures: { $elemMatch: { offerId } },\n      },\n    });\n\n    if (loan) {\n      LoanService.update({\n        loanId: loan._id,\n        object: {\n          structures: loan.structures.map(structure => ({\n            ...structure,\n            offerId:\n              structure.offerId === offerId ? undefined : structure.offerId,\n          })),\n        },\n      });\n    }\n  };\n}\n\nexport default new OfferService();\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/offers/server/OfferService.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/offers/server/OfferService.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  OfferService: () => OfferService\n});\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet CollectionService;\nmodule.link(\"../../helpers/CollectionService\", {\n  default(v) {\n    CollectionService = v;\n  }\n\n}, 1);\nlet LoanService;\nmodule.link(\"../../loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 2);\nlet LenderService;\nmodule.link(\"../../lenders/server/LenderService\", {\n  default(v) {\n    LenderService = v;\n  }\n\n}, 3);\nlet LENDER_STATUS;\nmodule.link(\"../../lenders/lenderConstants\", {\n  LENDER_STATUS(v) {\n    LENDER_STATUS = v;\n  }\n\n}, 4);\nlet fullOffer;\nmodule.link(\"../../fragments\", {\n  fullOffer(v) {\n    fullOffer = v;\n  }\n\n}, 5);\nlet EMAIL_IDS;\nmodule.link(\"../../email/emailConstants\", {\n  EMAIL_IDS(v) {\n    EMAIL_IDS = v;\n  }\n\n}, 6);\nlet sendEmailToAddress;\nmodule.link(\"../../methods\", {\n  sendEmailToAddress(v) {\n    sendEmailToAddress = v;\n  }\n\n}, 7);\nlet Offers;\nmodule.link(\"../offers\", {\n  default(v) {\n    Offers = v;\n  }\n\n}, 8);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass OfferService extends CollectionService {\n  constructor() {\n    super(Offers);\n\n    _defineProperty(this, \"update\", ({\n      offerId,\n      object\n    }) => Offers.update(offerId, {\n      $set: object\n    }));\n\n    _defineProperty(this, \"sendFeedback\", ({\n      offerId,\n      feedback,\n      saveFeedback = true\n    }) => {\n      if (saveFeedback) {\n        this.update({\n          offerId,\n          object: {\n            feedback: {\n              message: feedback,\n              date: new Date()\n            }\n          }\n        });\n      }\n\n      const {\n        createdAt,\n        lender: {\n          organisation: {\n            name: organisationName\n          },\n          contact: {\n            email: address,\n            name\n          },\n          loan: {\n            name: loanName,\n            user: {\n              assignedEmployee\n            }\n          }\n        }\n      } = this.fetchOne((0, _objectSpread2.default)({\n        $filters: {\n          _id: offerId\n        }\n      }, fullOffer()));\n      const {\n        email: assigneeAddress,\n        name: assigneeName\n      } = assignedEmployee || {};\n      return sendEmailToAddress.run({\n        emailId: EMAIL_IDS.SEND_FEEDBACK_TO_LENDER,\n        address,\n        name,\n        params: {\n          assigneeAddress,\n          assigneeName,\n          loanName,\n          organisationName,\n          date: moment(createdAt).format('DD.MM.YYYY'),\n          feedback\n        }\n      });\n    });\n\n    _defineProperty(this, \"insert\", (_ref) => {\n      let {\n        offer: {\n          lenderId\n        }\n      } = _ref,\n          offer = (0, _objectWithoutProperties2.default)(_ref.offer, [\"lenderId\"]);\n      const offerId = Offers.insert((0, _objectSpread2.default)({}, offer));\n      this.addLink({\n        id: offerId,\n        linkName: 'lender',\n        linkId: lenderId\n      });\n\n      LenderService._update({\n        id: lenderId,\n        object: {\n          status: LENDER_STATUS.OFFER_RECEIVED\n        }\n      });\n\n      return offerId;\n    });\n\n    _defineProperty(this, \"remove\", ({\n      offerId\n    }) => Offers.remove(offerId));\n\n    _defineProperty(this, \"cleanUpOffer\", ({\n      offerId\n    }) => {\n      const loan = LoanService.fetchOne({\n        $filters: {\n          structures: {\n            $elemMatch: {\n              offerId\n            }\n          }\n        }\n      });\n\n      if (loan) {\n        LoanService.update({\n          loanId: loan._id,\n          object: {\n            structures: loan.structures.map(structure => (0, _objectSpread2.default)({}, structure, {\n              offerId: structure.offerId === offerId ? undefined : structure.offerId\n            }))\n          }\n        });\n      }\n    });\n  }\n\n}\n\nmodule.exportDefault(new OfferService());","map":{"version":3,"sources":["imports/core/api/offers/server/OfferService.js"],"names":["constructor","object","$set","saveFeedback","feedback","message","date","lender","organisation","name","organisationName","contact","email","loan","user","assignedEmployee","$filters","_id","offerId","fullOffer","assigneeName","emailId","EMAIL_IDS","params","moment","offer","id","linkName","linkId","lenderId","LenderService","status","LENDER_STATUS","OFFER_RECEIVED","Offers","structures","$elemMatch","LoanService","loanId","structure"],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nimport CollectionService from '../../helpers/CollectionService';\nimport LoanService from '../../loans/server/LoanService';\nimport LenderService from '../../lenders/server/LenderService';\nimport { LENDER_STATUS } from '../../lenders/lenderConstants';\nimport { fullOffer } from '../../fragments';\nimport { EMAIL_IDS } from '../../email/emailConstants';\nimport { sendEmailToAddress } from '../../methods';\nimport Offers from '../offers';\n\nexport class OfferService extends CollectionService {\n  constructor() {\n    super(Offers);\n  }\n\n  update = ({ offerId, object }) => Offers.update(offerId, { $set: object });\n\n  sendFeedback = ({ offerId, feedback, saveFeedback = true }) => {\n    if (saveFeedback) {\n      this.update({\n        offerId,\n        object: { feedback: { message: feedback, date: new Date() } },\n      });\n    }\n\n    const {\n      createdAt,\n      lender: {\n        organisation: { name: organisationName },\n        contact: { email: address, name },\n        loan: {\n          name: loanName,\n          user: { assignedEmployee },\n        },\n      },\n    } = this.fetchOne({ $filters: { _id: offerId }, ...fullOffer() });\n\n    const { email: assigneeAddress, name: assigneeName } = assignedEmployee || {};\n\n    return sendEmailToAddress.run({\n      emailId: EMAIL_IDS.SEND_FEEDBACK_TO_LENDER,\n      address,\n      name,\n      params: {\n        assigneeAddress,\n        assigneeName,\n        loanName,\n        organisationName,\n        date: moment(createdAt).format('DD.MM.YYYY'),\n        feedback,\n      },\n    });\n  };\n\n  insert = ({ offer: { lenderId, ...offer } }) => {\n    const offerId = Offers.insert({ ...offer });\n    this.addLink({ id: offerId, linkName: 'lender', linkId: lenderId });\n    LenderService._update({\n      id: lenderId,\n      object: { status: LENDER_STATUS.OFFER_RECEIVED },\n    });\n    return offerId;\n  };\n\n  remove = ({ offerId }) => Offers.remove(offerId);\n\n  cleanUpOffer = ({ offerId }) => {\n    const loan = LoanService.fetchOne({\n      $filters: {\n        structures: { $elemMatch: { offerId } },\n      },\n    });\n\n    if (loan) {\n      LoanService.update({\n        loanId: loan._id,\n        object: {\n          structures: loan.structures.map(structure => ({\n            ...structure,\n            offerId:\n              structure.offerId === offerId ? undefined : structure.offerId,\n          })),\n        },\n      });\n    }\n  };\n}\n\nexport default new OfferService();\n"]},"sourceType":"script","hash":"c77718b22168ec4a01de5918971f50949612167b"}
