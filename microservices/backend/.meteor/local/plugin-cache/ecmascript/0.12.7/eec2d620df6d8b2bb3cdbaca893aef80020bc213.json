{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingFinancing/MortgageNotesPicker/MortgageNotesPickerContainer.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/Financing/client/FinancingFinancing/MortgageNotesPicker/MortgageNotesPickerContainer.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingFinancing/MortgageNotesPicker/MortgageNotesPickerContainer.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/Financing/client/FinancingFinancing/MortgageNotesPicker/MortgageNotesPickerContainer.jsx"],"names":["React","withProps","compose","T","FinancingDataContainer","SingleStructureContainer","StructureUpdateContainer","getProperty","formatMortgageNotes","mortgageNoteIds","borrowers","reduce","arr","mortgageNotes","notes","name","index","notesWithName","map","note","borrowerName","isBorrower","formatBorrowerMortgageNote","canton","updateStructure","selected","includes","_id","available","onClick","props","structure","property","currentMortgageNotes","borrowerMortgageNotes","removeMortgageNote","mortgageNoteId","filter","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,WAAnC;AAEA,OAAOC,CAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,wBAAP;AACA,SAASC,WAAT;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,eAAD,EAAkBC,SAAlB,KAC1BA,SAAS,CAACC,MAAV,CAAiB,CAACC,GAAD,EAAM;AAAEC,EAAAA,aAAa,EAAEC,KAAK,GAAG,EAAzB;AAA6BC,EAAAA;AAA7B,CAAN,EAA2CC,KAA3C,KAAqD;AACpE,QAAMC,aAAa,GAAGH,KAAK,CAACI,GAAN,CAAUC,IAAI,KAAK,EACvC,GAAGA,IADoC;AAEvCC,IAAAA,YAAY,EAAEL,IAAI,IAChB,CAAC,CAAD,CAAG,GAAG,2BAAN,CAAkC,OAAO,CAAC;AAAEC,MAAAA,KAAK,EAAEA,KAAK,GAAG;AAAjB,KAAD,CAAzC,GAHqC;AAKvCK,IAAAA,UAAU,EAAE;AAL2B,GAAL,CAAd,CAAtB;AAOA,SAAO,CAAC,GAAGT,GAAJ,EAAS,GAAGK,aAAZ,CAAP;AACD,CATD,EASG,EATH,CADF;;AAYA,MAAMK,0BAA0B,GAAG,CACjCR,KADiC,EAEjCS,MAFiC,EAGjCC,eAHiC,EAIjCf,eAJiC,KAMjCK,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAU;AAClB,QAAMM,QAAQ,GAAGhB,eAAe,CAACiB,QAAhB,CAAyBP,IAAI,CAACQ,GAA9B,CAAjB;AACA,QAAMC,SAAS,GAAGT,IAAI,CAACI,MAAL,KAAgBA,MAAlC;AAEA,SAAO,EACL,GAAGJ,IADE;AAELM,IAAAA,QAFK;AAGLG,IAAAA,SAHK;AAILC,IAAAA,OAAO,EAAE,MAAM;AACb,UAAID,SAAJ,EAAe;AACb,eAAOJ,eAAe,CAAC;AACrBf,UAAAA,eAAe,EAAE,CAAC,GAAGA,eAAJ,EAAqBU,IAAI,CAACQ,GAA1B;AADI,SAAD,CAAtB;AAGD;AACF;AAVI,GAAP;AAYD,CAhBD,CANF;;AAwBA,eAAezB,OAAO,CACpBE,sBADoB,EAEpBC,wBAFoB,EAGpBC,wBAHoB,EAIpBL,SAAS,CAAE6B,KAAD,IAAW;AACnB,QAAM;AACJC,IAAAA,SAAS,EAAE;AAAEtB,MAAAA,eAAe,GAAG;AAApB,KADP;AAEJC,IAAAA,SAAS,GAAG,EAFR;AAGJc,IAAAA;AAHI,MAIFM,KAJJ;AAKA,QAAME,QAAQ,GAAGzB,WAAW,CAACuB,KAAD,CAA5B;AACA,QAAM;AAAEjB,IAAAA,aAAa,GAAG,EAAlB;AAAsBU,IAAAA;AAAtB,MAAiCS,QAAvC;AACA,QAAMlB,KAAK,GAAGN,mBAAmB,CAACC,eAAD,EAAkBC,SAAlB,CAAjC;AAEA,SAAO;AACLuB,IAAAA,oBAAoB,EAAEpB,aADjB;AAELqB,IAAAA,qBAAqB,EAAEZ,0BAA0B,CAC/CR,KAD+C,EAE/CS,MAF+C,EAG/CC,eAH+C,EAI/Cf,eAJ+C,CAF5C;AAQL0B,IAAAA,kBAAkB,EAAEC,cAAc,IAChCZ,eAAe,CAAC;AACdf,MAAAA,eAAe,EAAEA,eAAe,CAAC4B,MAAhB,CAAuBC,EAAE,IAAIA,EAAE,KAAKF,cAApC;AADH,KAAD;AATZ,GAAP;AAaD,CAvBQ,CAJW,CAAtB","sourcesContent":["import React from 'react';\nimport { withProps, compose } from 'recompose';\n\nimport T from '../../../../Translation';\nimport FinancingDataContainer from '../../containers/FinancingDataContainer';\nimport SingleStructureContainer from '../../containers/SingleStructureContainer';\nimport StructureUpdateContainer from '../../containers/StructureUpdateContainer';\nimport { getProperty } from '../../FinancingCalculator';\n\nconst formatMortgageNotes = (mortgageNoteIds, borrowers) =>\n  borrowers.reduce((arr, { mortgageNotes: notes = [], name }, index) => {\n    const notesWithName = notes.map(note => ({\n      ...note,\n      borrowerName: name || (\n        <T id=\"general.borrowerWithIndex\" values={{ index: index + 1 }} />\n      ),\n      isBorrower: true,\n    }));\n    return [...arr, ...notesWithName];\n  }, []);\n\nconst formatBorrowerMortgageNote = (\n  notes,\n  canton,\n  updateStructure,\n  mortgageNoteIds,\n) =>\n  notes.map((note) => {\n    const selected = mortgageNoteIds.includes(note._id);\n    const available = note.canton === canton;\n\n    return {\n      ...note,\n      selected,\n      available,\n      onClick: () => {\n        if (available) {\n          return updateStructure({\n            mortgageNoteIds: [...mortgageNoteIds, note._id],\n          });\n        }\n      },\n    };\n  });\n\nexport default compose(\n  FinancingDataContainer,\n  SingleStructureContainer,\n  StructureUpdateContainer,\n  withProps((props) => {\n    const {\n      structure: { mortgageNoteIds = [] },\n      borrowers = [],\n      updateStructure,\n    } = props;\n    const property = getProperty(props);\n    const { mortgageNotes = [], canton } = property;\n    const notes = formatMortgageNotes(mortgageNoteIds, borrowers);\n\n    return {\n      currentMortgageNotes: mortgageNotes,\n      borrowerMortgageNotes: formatBorrowerMortgageNote(\n        notes,\n        canton,\n        updateStructure,\n        mortgageNoteIds,\n      ),\n      removeMortgageNote: mortgageNoteId =>\n        updateStructure({\n          mortgageNoteIds: mortgageNoteIds.filter(id => id !== mortgageNoteId),\n        }),\n    };\n  }),\n);\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingFinancing/MortgageNotesPicker/MortgageNotesPickerContainer.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Financing/client/FinancingFinancing/MortgageNotesPicker/MortgageNotesPickerContainer.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar withProps, compose;\nmodule.link(\"recompose\", {\n  withProps: function (v) {\n    withProps = v;\n  },\n  compose: function (v) {\n    compose = v;\n  }\n}, 1);\nvar T;\nmodule.link(\"../../../../Translation\", {\n  \"default\": function (v) {\n    T = v;\n  }\n}, 2);\nvar FinancingDataContainer;\nmodule.link(\"../../containers/FinancingDataContainer\", {\n  \"default\": function (v) {\n    FinancingDataContainer = v;\n  }\n}, 3);\nvar SingleStructureContainer;\nmodule.link(\"../../containers/SingleStructureContainer\", {\n  \"default\": function (v) {\n    SingleStructureContainer = v;\n  }\n}, 4);\nvar StructureUpdateContainer;\nmodule.link(\"../../containers/StructureUpdateContainer\", {\n  \"default\": function (v) {\n    StructureUpdateContainer = v;\n  }\n}, 5);\nvar getProperty;\nmodule.link(\"../../FinancingCalculator\", {\n  getProperty: function (v) {\n    getProperty = v;\n  }\n}, 6);\n\nvar formatMortgageNotes = function (mortgageNoteIds, borrowers) {\n  return borrowers.reduce(function (arr, _ref, index) {\n    var _ref$mortgageNotes = _ref.mortgageNotes,\n        notes = _ref$mortgageNotes === void 0 ? [] : _ref$mortgageNotes,\n        name = _ref.name;\n    var notesWithName = notes.map(function (note) {\n      return (0, _objectSpread2.default)({}, note, {\n        borrowerName: name || React.createElement(T, {\n          id: \"general.borrowerWithIndex\",\n          values: {\n            index: index + 1\n          }\n        }),\n        isBorrower: true\n      });\n    });\n    return [].concat((0, _toConsumableArray2.default)(arr), (0, _toConsumableArray2.default)(notesWithName));\n  }, []);\n};\n\nvar formatBorrowerMortgageNote = function (notes, canton, updateStructure, mortgageNoteIds) {\n  return notes.map(function (note) {\n    var selected = mortgageNoteIds.includes(note._id);\n    var available = note.canton === canton;\n    return (0, _objectSpread2.default)({}, note, {\n      selected: selected,\n      available: available,\n      onClick: function () {\n        if (available) {\n          return updateStructure({\n            mortgageNoteIds: [].concat((0, _toConsumableArray2.default)(mortgageNoteIds), [note._id])\n          });\n        }\n      }\n    });\n  });\n};\n\nmodule.exportDefault(compose(FinancingDataContainer, SingleStructureContainer, StructureUpdateContainer, withProps(function (props) {\n  var _props$structure$mort = props.structure.mortgageNoteIds,\n      mortgageNoteIds = _props$structure$mort === void 0 ? [] : _props$structure$mort,\n      _props$borrowers = props.borrowers,\n      borrowers = _props$borrowers === void 0 ? [] : _props$borrowers,\n      updateStructure = props.updateStructure;\n  var property = getProperty(props);\n  var _property$mortgageNot = property.mortgageNotes,\n      mortgageNotes = _property$mortgageNot === void 0 ? [] : _property$mortgageNot,\n      canton = property.canton;\n  var notes = formatMortgageNotes(mortgageNoteIds, borrowers);\n  return {\n    currentMortgageNotes: mortgageNotes,\n    borrowerMortgageNotes: formatBorrowerMortgageNote(notes, canton, updateStructure, mortgageNoteIds),\n    removeMortgageNote: function (mortgageNoteId) {\n      return updateStructure({\n        mortgageNoteIds: mortgageNoteIds.filter(function (id) {\n          return id !== mortgageNoteId;\n        })\n      });\n    }\n  };\n})));","map":{"version":3,"sources":["imports/core/components/Financing/client/FinancingFinancing/MortgageNotesPicker/MortgageNotesPickerContainer.jsx"],"names":["React","formatMortgageNotes","mortgageNotes","notes","name","notesWithName","note","borrowerName","index","isBorrower","formatBorrowerMortgageNote","selected","mortgageNoteIds","available","onClick","updateStructure","compose","withProps","props","structure","borrowers","property","getProperty","canton","currentMortgageNotes","borrowerMortgageNotes","removeMortgageNote","mortgageNoteId","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withProps, compose } from 'recompose';\n\nimport T from '../../../../Translation';\nimport FinancingDataContainer from '../../containers/FinancingDataContainer';\nimport SingleStructureContainer from '../../containers/SingleStructureContainer';\nimport StructureUpdateContainer from '../../containers/StructureUpdateContainer';\nimport { getProperty } from '../../FinancingCalculator';\n\nconst formatMortgageNotes = (mortgageNoteIds, borrowers) =>\n  borrowers.reduce((arr, { mortgageNotes: notes = [], name }, index) => {\n    const notesWithName = notes.map(note => ({\n      ...note,\n      borrowerName: name || (\n        <T id=\"general.borrowerWithIndex\" values={{ index: index + 1 }} />\n      ),\n      isBorrower: true,\n    }));\n    return [...arr, ...notesWithName];\n  }, []);\n\nconst formatBorrowerMortgageNote = (\n  notes,\n  canton,\n  updateStructure,\n  mortgageNoteIds,\n) =>\n  notes.map((note) => {\n    const selected = mortgageNoteIds.includes(note._id);\n    const available = note.canton === canton;\n\n    return {\n      ...note,\n      selected,\n      available,\n      onClick: () => {\n        if (available) {\n          return updateStructure({\n            mortgageNoteIds: [...mortgageNoteIds, note._id],\n          });\n        }\n      },\n    };\n  });\n\nexport default compose(\n  FinancingDataContainer,\n  SingleStructureContainer,\n  StructureUpdateContainer,\n  withProps((props) => {\n    const {\n      structure: { mortgageNoteIds = [] },\n      borrowers = [],\n      updateStructure,\n    } = props;\n    const property = getProperty(props);\n    const { mortgageNotes = [], canton } = property;\n    const notes = formatMortgageNotes(mortgageNoteIds, borrowers);\n\n    return {\n      currentMortgageNotes: mortgageNotes,\n      borrowerMortgageNotes: formatBorrowerMortgageNote(\n        notes,\n        canton,\n        updateStructure,\n        mortgageNoteIds,\n      ),\n      removeMortgageNote: mortgageNoteId =>\n        updateStructure({\n          mortgageNoteIds: mortgageNoteIds.filter(id => id !== mortgageNoteId),\n        }),\n    };\n  }),\n);\n"]},"sourceType":"script","hash":"eec2d620df6d8b2bb3cdbaca893aef80020bc213"}
