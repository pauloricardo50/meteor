{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/test/partnerList.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/arrays/test/partnerList.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/test/partnerList.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/arrays/test/partnerList.spec.js"],"names":["expect","getPartnerList","describe","it","list","to","equal","have","length","above","forEach","partner","base","filtered","find","key","be","false"],"mappings":"AAAA;AACA,SAASA,MAAT,QAAuB,MAAvB;AAEA,SAASC,cAAT;AAEAC,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC/BC,EAAAA,EAAE,CAAC,6BAAD,EAAgC,MAAM;AACtC,UAAMC,IAAI,GAAGH,cAAc,CAAC,IAAD,EAAO,EAAP,CAA3B;AACAD,IAAAA,MAAM,CAAC,OAAOI,IAAR,CAAN,CAAoBC,EAApB,CAAuBC,KAAvB,CAA6B,QAA7B;AACAN,IAAAA,MAAM,CAACI,IAAD,CAAN,CAAaC,EAAb,CAAgBE,IAAhB,CAAqBC,MAArB,CAA4BC,KAA5B,CAAkC,CAAlC;AACAL,IAAAA,IAAI,CAACM,OAAL,CAAaC,OAAO,IAAIX,MAAM,CAAC,OAAOW,OAAR,CAAN,CAAuBN,EAAvB,CAA0BC,KAA1B,CAAgC,QAAhC,CAAxB;AACD,GALC,CAAF;AAOAH,EAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACxC,UAAMS,IAAI,GAAGX,cAAc,CAAC,IAAD,CAA3B;AACA,UAAMY,QAAQ,GAAGZ,cAAc,CAAC,IAAD,EAAO,CAAC,eAAD,CAAP,CAA/B;AAEAD,IAAAA,MAAM,CAACY,IAAI,CAACJ,MAAN,CAAN,CAAoBH,EAApB,CAAuBC,KAAvB,CAA6BO,QAAQ,CAACL,MAAT,GAAkB,CAA/C;AACAR,IAAAA,MAAM,CAAC,CAAC,CAACa,QAAQ,CAACC,IAAT,CAAcH,OAAO,IAAIA,OAAO,CAACI,GAAR,KAAgB,eAAzC,CAAH,CAAN,CAAoEV,EAApE,CAAuEW,EAAvE,CACGC,KADH;AAED,GAPC,CAAF;AASAd,EAAAA,EAAE,CAAC,oEAAD,EAAuE,MAAM;AAC7E,UAAMS,IAAI,GAAGX,cAAc,CAAC,IAAD,CAA3B;AACA,UAAMY,QAAQ,GAAGZ,cAAc,CAAC,IAAD,EAAO,CAAC,eAAD,CAAP,CAA/B;AAEAD,IAAAA,MAAM,CAACY,IAAI,CAACJ,MAAN,CAAN,CAAoBH,EAApB,CAAuBC,KAAvB,CAA6BO,QAAQ,CAACL,MAAtC;AACD,GALC,CAAF;AAOAL,EAAAA,EAAE,CAAC,kEAAD,EAAqE,MAAM;AAC3E,UAAMS,IAAI,GAAGX,cAAc,CAAC,IAAD,CAA3B;AACA,UAAMY,QAAQ,GAAGZ,cAAc,CAAC,IAAD,EAAO,CAAC,aAAD,CAAP,CAA/B;AAEAD,IAAAA,MAAM,CAACY,IAAI,CAACJ,MAAN,CAAN,CAAoBH,EAApB,CAAuBC,KAAvB,CAA6BO,QAAQ,CAACL,MAAtC;AACD,GALC,CAAF;AAMD,CA9BO,CAAR","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { getPartnerList } from '../partnerList';\n\ndescribe('getPartnerList', () => {\n  it('returns an array of objects', () => {\n    const list = getPartnerList('GE', '');\n    expect(typeof list).to.equal('object');\n    expect(list).to.have.length.above(0);\n    list.forEach(partner => expect(typeof partner).to.equal('object'));\n  });\n\n  it('filters out partners to avoid', () => {\n    const base = getPartnerList('GE');\n    const filtered = getPartnerList('GE', ['banqueDuLeman']);\n\n    expect(base.length).to.equal(filtered.length + 1);\n    expect(!!filtered.find(partner => partner.key === 'banqueDuLeman')).to.be\n      .false;\n  });\n\n  it(\"doesn't filter anything if the partner doesn't exist in the canton\", () => {\n    const base = getPartnerList('VD');\n    const filtered = getPartnerList('VD', ['banqueDuLeman']);\n\n    expect(base.length).to.equal(filtered.length);\n  });\n\n  it(\"doesn't filter anything if the partner doesn't exist in the list\", () => {\n    const base = getPartnerList('GE');\n    const filtered = getPartnerList('GE', ['fakePartner']);\n\n    expect(base.length).to.equal(filtered.length);\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/arrays/test/partnerList.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/arrays/test/partnerList.spec.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 0);\nvar getPartnerList;\nmodule.link(\"../partnerList\", {\n  getPartnerList: function (v) {\n    getPartnerList = v;\n  }\n}, 1);\ndescribe('getPartnerList', function () {\n  it('returns an array of objects', function () {\n    var list = getPartnerList('GE', '');\n    expect((0, _typeof2.default)(list)).to.equal('object');\n    expect(list).to.have.length.above(0);\n    list.forEach(function (partner) {\n      return expect((0, _typeof2.default)(partner)).to.equal('object');\n    });\n  });\n  it('filters out partners to avoid', function () {\n    var base = getPartnerList('GE');\n    var filtered = getPartnerList('GE', ['banqueDuLeman']);\n    expect(base.length).to.equal(filtered.length + 1);\n    expect(!!filtered.find(function (partner) {\n      return partner.key === 'banqueDuLeman';\n    })).to.be.false;\n  });\n  it(\"doesn't filter anything if the partner doesn't exist in the canton\", function () {\n    var base = getPartnerList('VD');\n    var filtered = getPartnerList('VD', ['banqueDuLeman']);\n    expect(base.length).to.equal(filtered.length);\n  });\n  it(\"doesn't filter anything if the partner doesn't exist in the list\", function () {\n    var base = getPartnerList('GE');\n    var filtered = getPartnerList('GE', ['fakePartner']);\n    expect(base.length).to.equal(filtered.length);\n  });\n});","map":{"version":3,"sources":["imports/core/arrays/test/partnerList.spec.js"],"names":["describe","it","list","getPartnerList","expect","partner","base","filtered"],"mappings":";;;;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,MAAA,YAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,cAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,EAAA,cAAA,YAAA,CAAA,EAAA;AAAA,IAAA,cAAA,GAAA,CAAA;AAAA;AAAA,CAAA,EAAA,CAAA;AAKAA,QAAQ,CAAA,gBAAA,EAAmB,YAAM;AAC/BC,EAAAA,EAAE,CAAA,6BAAA,EAAgC,YAAM;AACtC,QAAMC,IAAI,GAAGC,cAAc,CAAA,IAAA,EAA3B,EAA2B,CAA3B;AACAC,IAAAA,MAAM,uBAANA,IAAM,EAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,QAAAA;AACAA,IAAAA,MAAM,CAANA,IAAM,CAANA,CAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,CAAAA,CAAAA;AACAF,IAAAA,IAAI,CAAJA,OAAAA,CAAaG,UAAAA,OAAO;AAAA,aAAID,MAAM,uBAANA,OAAM,EAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAxBF,QAAwBE,CAAJ;AAAA,KAApBF;AAJFD,GAAE,CAAFA;AAOAA,EAAAA,EAAE,CAAA,+BAAA,EAAkC,YAAM;AACxC,QAAMK,IAAI,GAAGH,cAAc,CAA3B,IAA2B,CAA3B;AACA,QAAMI,QAAQ,GAAGJ,cAAc,CAAA,IAAA,EAAO,CAAtC,eAAsC,CAAP,CAA/B;AAEAC,IAAAA,MAAM,CAACE,IAAI,CAAXF,MAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAA6BG,QAAQ,CAARA,MAAAA,GAA7BH,CAAAA;AACAA,IAAAA,MAAM,CAAC,CAAC,CAACG,QAAQ,CAARA,IAAAA,CAAcF,UAAAA,OAAO;AAAA,aAAIA,OAAO,CAAPA,GAAAA,KAAlCD,eAA8B;AAAA,KAArBG,CAAH,CAANH,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,KAAAA;AALFH,GAAE,CAAFA;AASAA,EAAAA,EAAE,CAAA,oEAAA,EAAuE,YAAM;AAC7E,QAAMK,IAAI,GAAGH,cAAc,CAA3B,IAA2B,CAA3B;AACA,QAAMI,QAAQ,GAAGJ,cAAc,CAAA,IAAA,EAAO,CAAtC,eAAsC,CAAP,CAA/B;AAEAC,IAAAA,MAAM,CAACE,IAAI,CAAXF,MAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAA6BG,QAAQ,CAArCH,MAAAA;AAJFH,GAAE,CAAFA;AAOAA,EAAAA,EAAE,CAAA,kEAAA,EAAqE,YAAM;AAC3E,QAAMK,IAAI,GAAGH,cAAc,CAA3B,IAA2B,CAA3B;AACA,QAAMI,QAAQ,GAAGJ,cAAc,CAAA,IAAA,EAAO,CAAtC,aAAsC,CAAP,CAA/B;AAEAC,IAAAA,MAAM,CAACE,IAAI,CAAXF,MAAM,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAA6BG,QAAQ,CAArCH,MAAAA;AAJFH,GAAE,CAAFA;AAxBFD,CAAQ,CAARA","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { getPartnerList } from '../partnerList';\n\ndescribe('getPartnerList', () => {\n  it('returns an array of objects', () => {\n    const list = getPartnerList('GE', '');\n    expect(typeof list).to.equal('object');\n    expect(list).to.have.length.above(0);\n    list.forEach(partner => expect(typeof partner).to.equal('object'));\n  });\n\n  it('filters out partners to avoid', () => {\n    const base = getPartnerList('GE');\n    const filtered = getPartnerList('GE', ['banqueDuLeman']);\n\n    expect(base.length).to.equal(filtered.length + 1);\n    expect(!!filtered.find(partner => partner.key === 'banqueDuLeman')).to.be\n      .false;\n  });\n\n  it(\"doesn't filter anything if the partner doesn't exist in the canton\", () => {\n    const base = getPartnerList('VD');\n    const filtered = getPartnerList('VD', ['banqueDuLeman']);\n\n    expect(base.length).to.equal(filtered.length);\n  });\n\n  it(\"doesn't filter anything if the partner doesn't exist in the list\", () => {\n    const base = getPartnerList('GE');\n    const filtered = getPartnerList('GE', ['fakePartner']);\n\n    expect(base.length).to.equal(filtered.length);\n  });\n});\n"]},"sourceType":"script","hash":"142f15aadbd80fdc149dcfc24f0c82006a038abe"}
