{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/testHelpers/getMountedComponent.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/utils/testHelpers/getMountedComponent.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/testHelpers/getMountedComponent.jsx","inputSourceMap":{"version":3,"sources":["imports/core/utils/testHelpers/getMountedComponent.jsx"],"names":["Meteor","React","MemoryRouter","IntlProvider","intlShape","mount","getUserLocale","getFormats","messages","customMount","Component","props","withRouter","withStore","customMountData","intlProvider","locale","formats","defaultLocale","intl","getChildContext","testComponent","cloneElement","history","location","pathname","configureStore","require","default","Provider","mockStore","initialState","store","mountedComponent","context","childContextTypes","getMountedComponent","getData","reset","undefined","isServer","global","document","window","jsdom","JSDOM","defaultView","performance","now"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport React from 'react';\nimport { MemoryRouter } from 'react-router-dom';\nimport { IntlProvider, intlShape } from 'react-intl';\n\nimport { mount } from './enzyme';\nimport { getUserLocale, getFormats } from '../localization';\nimport messages from '../../lang/fr.json';\n\n// Mounts a component for testing, and wraps it around everything it needs\nconst customMount = ({ Component, props = {}, withRouter, withStore }) => {\n  const customMountData = {};\n  const intlProvider = new IntlProvider({\n    locale: getUserLocale(),\n    messages,\n    formats: getFormats(),\n    defaultLocale: 'fr',\n  });\n  const { intl } = intlProvider.getChildContext();\n\n  let testComponent = <Component {...props} />;\n\n  if (withRouter) {\n    testComponent = (\n      <MemoryRouter>\n        {React.cloneElement(testComponent, {\n          history: { location: { pathname: '' } },\n        })}\n      </MemoryRouter>\n    );\n  }\n\n  if (withStore) {\n    const configureStore = require('redux-mock-store').default;\n    const { Provider } = require('react-redux');\n    const mockStore = configureStore();\n    const initialState = withStore;\n    const store = mockStore(initialState);\n    testComponent = <Provider store={store}>{testComponent}</Provider>;\n    customMountData.store = store;\n  }\n\n  return {\n    mountedComponent: mount(testComponent, {\n      context: { intl },\n      childContextTypes: { intl: intlShape },\n    }),\n    customMountData,\n  };\n};\n\n/**\n * getMountedComponent - Returns a mounted component with all the required\n * wrappers for testing\n *\n * @param {object} Component  A React component\n * @param {object} props      optional props to be passed into the component\n * @param {boolean} withRouter Wraps the component with a mocked router if this\n * component uses any of the react-router-dom components, like Link or NavLink\n *\n * @return {object} A mounted component, ready for testing with Enzyme\n */\nconst getMountedComponent = ({ Component, props, withRouter, withStore }) => {\n  if (!getMountedComponent.mountedComponent) {\n    const { mountedComponent, customMountData } = customMount({\n      Component,\n      props,\n      withRouter,\n      withStore,\n    });\n    getMountedComponent.getData = () => customMountData;\n    getMountedComponent.mountedComponent = mountedComponent;\n  }\n  return getMountedComponent.mountedComponent;\n};\n\n/**\n * Unknown - Resets the component, to be called in beforeEach hooks\n *\n * @return {type} undefined\n */\ngetMountedComponent.reset = () => {\n  getMountedComponent.mountedComponent = undefined;\n  if (Meteor.isServer) {\n    global.document = undefined;\n    global.window = undefined;\n    const jsdom = require('jsdom');\n    const { JSDOM } = jsdom;\n    const { document } = new JSDOM('<!doctype html><html><body></body></html>').window;\n    global.document = document;\n    global.window = document.defaultView;\n    // Do this to avoid an annoying bug resulting of the mix of jsdom and kadira\n    // https://github.com/kadirahq/node-eventloop-monitor/blob/master/lib/index.js:73\n    // https://github.com/jsdom/jsdom/blob/master/lib/jsdom/living/hr-time/Performance-impl.js:13\n    global.window.performance.now = () => {};\n  }\n};\n\nexport default getMountedComponent;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/testHelpers/getMountedComponent.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/testHelpers/getMountedComponent.jsx"}},"code":"var Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 1);\nvar MemoryRouter;\nmodule.link(\"react-router-dom\", {\n  MemoryRouter: function (v) {\n    MemoryRouter = v;\n  }\n}, 2);\nvar IntlProvider, intlShape;\nmodule.link(\"react-intl\", {\n  IntlProvider: function (v) {\n    IntlProvider = v;\n  },\n  intlShape: function (v) {\n    intlShape = v;\n  }\n}, 3);\nvar mount;\nmodule.link(\"./enzyme\", {\n  mount: function (v) {\n    mount = v;\n  }\n}, 4);\nvar getUserLocale, getFormats;\nmodule.link(\"../localization\", {\n  getUserLocale: function (v) {\n    getUserLocale = v;\n  },\n  getFormats: function (v) {\n    getFormats = v;\n  }\n}, 5);\nvar messages;\nmodule.link(\"../../lang/fr.json\", {\n  \"default\": function (v) {\n    messages = v;\n  }\n}, 6);\n\n// Mounts a component for testing, and wraps it around everything it needs\nvar customMount = function (_ref) {\n  var Component = _ref.Component,\n      _ref$props = _ref.props,\n      props = _ref$props === void 0 ? {} : _ref$props,\n      withRouter = _ref.withRouter,\n      withStore = _ref.withStore;\n  var customMountData = {};\n  var intlProvider = new IntlProvider({\n    locale: getUserLocale(),\n    messages: messages,\n    formats: getFormats(),\n    defaultLocale: 'fr'\n  });\n\n  var _intlProvider$getChil = intlProvider.getChildContext(),\n      intl = _intlProvider$getChil.intl;\n\n  var testComponent = React.createElement(Component, props);\n\n  if (withRouter) {\n    testComponent = React.createElement(MemoryRouter, null, React.cloneElement(testComponent, {\n      history: {\n        location: {\n          pathname: ''\n        }\n      }\n    }));\n  }\n\n  if (withStore) {\n    var configureStore = require('redux-mock-store').default;\n\n    var _require = require('react-redux'),\n        Provider = _require.Provider;\n\n    var mockStore = configureStore();\n    var initialState = withStore;\n    var store = mockStore(initialState);\n    testComponent = React.createElement(Provider, {\n      store: store\n    }, testComponent);\n    customMountData.store = store;\n  }\n\n  return {\n    mountedComponent: mount(testComponent, {\n      context: {\n        intl: intl\n      },\n      childContextTypes: {\n        intl: intlShape\n      }\n    }),\n    customMountData: customMountData\n  };\n};\n/**\n * getMountedComponent - Returns a mounted component with all the required\n * wrappers for testing\n *\n * @param {object} Component  A React component\n * @param {object} props      optional props to be passed into the component\n * @param {boolean} withRouter Wraps the component with a mocked router if this\n * component uses any of the react-router-dom components, like Link or NavLink\n *\n * @return {object} A mounted component, ready for testing with Enzyme\n */\n\n\nvar getMountedComponent = function (_ref2) {\n  var Component = _ref2.Component,\n      props = _ref2.props,\n      withRouter = _ref2.withRouter,\n      withStore = _ref2.withStore;\n\n  if (!getMountedComponent.mountedComponent) {\n    var _customMount = customMount({\n      Component: Component,\n      props: props,\n      withRouter: withRouter,\n      withStore: withStore\n    }),\n        mountedComponent = _customMount.mountedComponent,\n        customMountData = _customMount.customMountData;\n\n    getMountedComponent.getData = function () {\n      return customMountData;\n    };\n\n    getMountedComponent.mountedComponent = mountedComponent;\n  }\n\n  return getMountedComponent.mountedComponent;\n};\n/**\n * Unknown - Resets the component, to be called in beforeEach hooks\n *\n * @return {type} undefined\n */\n\n\ngetMountedComponent.reset = function () {\n  getMountedComponent.mountedComponent = undefined;\n\n  if (Meteor.isServer) {\n    global.document = undefined;\n    global.window = undefined;\n\n    var jsdom = require('jsdom');\n\n    var JSDOM = jsdom.JSDOM;\n    var document = new JSDOM('<!doctype html><html><body></body></html>').window.document;\n    global.document = document;\n    global.window = document.defaultView; // Do this to avoid an annoying bug resulting of the mix of jsdom and kadira\n    // https://github.com/kadirahq/node-eventloop-monitor/blob/master/lib/index.js:73\n    // https://github.com/jsdom/jsdom/blob/master/lib/jsdom/living/hr-time/Performance-impl.js:13\n\n    global.window.performance.now = function () {};\n  }\n};\n\nmodule.exportDefault(getMountedComponent);","map":{"version":3,"sources":["imports/core/utils/testHelpers/getMountedComponent.jsx"],"names":["customMount","props","withStore","customMountData","intlProvider","locale","getUserLocale","messages","formats","getFormats","defaultLocale","intl","testComponent","history","location","pathname","configureStore","require","Provider","mockStore","initialState","store","mountedComponent","mount","context","childContextTypes","intlShape","getMountedComponent","Component","withRouter","Meteor","global","jsdom","JSDOM","document"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport React from 'react';\nimport { MemoryRouter } from 'react-router-dom';\nimport { IntlProvider, intlShape } from 'react-intl';\n\nimport { mount } from './enzyme';\nimport { getUserLocale, getFormats } from '../localization';\nimport messages from '../../lang/fr.json';\n\n// Mounts a component for testing, and wraps it around everything it needs\nconst customMount = ({ Component, props = {}, withRouter, withStore }) => {\n  const customMountData = {};\n  const intlProvider = new IntlProvider({\n    locale: getUserLocale(),\n    messages,\n    formats: getFormats(),\n    defaultLocale: 'fr',\n  });\n  const { intl } = intlProvider.getChildContext();\n\n  let testComponent = <Component {...props} />;\n\n  if (withRouter) {\n    testComponent = (\n      <MemoryRouter>\n        {React.cloneElement(testComponent, {\n          history: { location: { pathname: '' } },\n        })}\n      </MemoryRouter>\n    );\n  }\n\n  if (withStore) {\n    const configureStore = require('redux-mock-store').default;\n    const { Provider } = require('react-redux');\n    const mockStore = configureStore();\n    const initialState = withStore;\n    const store = mockStore(initialState);\n    testComponent = <Provider store={store}>{testComponent}</Provider>;\n    customMountData.store = store;\n  }\n\n  return {\n    mountedComponent: mount(testComponent, {\n      context: { intl },\n      childContextTypes: { intl: intlShape },\n    }),\n    customMountData,\n  };\n};\n\n/**\n * getMountedComponent - Returns a mounted component with all the required\n * wrappers for testing\n *\n * @param {object} Component  A React component\n * @param {object} props      optional props to be passed into the component\n * @param {boolean} withRouter Wraps the component with a mocked router if this\n * component uses any of the react-router-dom components, like Link or NavLink\n *\n * @return {object} A mounted component, ready for testing with Enzyme\n */\nconst getMountedComponent = ({ Component, props, withRouter, withStore }) => {\n  if (!getMountedComponent.mountedComponent) {\n    const { mountedComponent, customMountData } = customMount({\n      Component,\n      props,\n      withRouter,\n      withStore,\n    });\n    getMountedComponent.getData = () => customMountData;\n    getMountedComponent.mountedComponent = mountedComponent;\n  }\n  return getMountedComponent.mountedComponent;\n};\n\n/**\n * Unknown - Resets the component, to be called in beforeEach hooks\n *\n * @return {type} undefined\n */\ngetMountedComponent.reset = () => {\n  getMountedComponent.mountedComponent = undefined;\n  if (Meteor.isServer) {\n    global.document = undefined;\n    global.window = undefined;\n    const jsdom = require('jsdom');\n    const { JSDOM } = jsdom;\n    const { document } = new JSDOM('<!doctype html><html><body></body></html>').window;\n    global.document = document;\n    global.window = document.defaultView;\n    // Do this to avoid an annoying bug resulting of the mix of jsdom and kadira\n    // https://github.com/kadirahq/node-eventloop-monitor/blob/master/lib/index.js:73\n    // https://github.com/jsdom/jsdom/blob/master/lib/jsdom/living/hr-time/Performance-impl.js:13\n    global.window.performance.now = () => {};\n  }\n};\n\nexport default getMountedComponent;\n"]},"sourceType":"script","hash":"eaa42820b5a8910855c64ad68b0e6097a3b8a4c2"}
