{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/loanFixtures.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/fixtures/loanFixtures.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/loanFixtures.js","inputSourceMap":{"version":3,"sources":["imports/core/fixtures/loanFixtures.js"],"names":["faker","LoanService","PURCHASE_TYPE","INTEREST_RATES","OWN_FUNDS_TYPES","OWN_FUNDS_USAGE_TYPES","STEPS","APPLICATION_TYPES","createFakeBorrowers","createFakeProperty","adminLoans","BorrowerService","PropertyService","createFakeOffer","purchaseTypes","Object","values","getRandomValueInArray","array","Math","floor","random","length","getRandomStructure","propertyValue","borrowerId","ownFunds","value","round","type","BANK_FORTUNE","INSURANCE_2","usageType","PLEDGE","WITHDRAW","INSURANCE_3A","INSURANCE_3B","createFakeLoan","userId","step","twoBorrowers","borrowerIds","_id","propertyId","loan","name","address","streetAddress","propertyIds","purchaseType","contacts","structures","id","loanTranches","YEARS_10","wantedLoan","selectedStructure","OFFERS","applicationType","FULL","displayWelcomeScreen","REQUEST","SOLVENCY","insert","getRelatedLoansIds","usersIds","fetch","$filters","$in","map","item","addLoanWithData","borrowers","properties","loanData","addOffers","loanId","fullLoanInsert","update","object","clone","fetchOne","property","undefined","addPropertyToLoan","structureId","borrowerId1","updateStructure","structure","YEARS_5","borrowerId2","borrower","addLink","linkName","linkId","offerIds","offerId"],"mappings":"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","sourcesContent":["import faker from 'faker/locale/fr';\n\nimport LoanService from '../api/loans/server/LoanService';\nimport {\n  PURCHASE_TYPE,\n  INTEREST_RATES,\n  OWN_FUNDS_TYPES,\n  OWN_FUNDS_USAGE_TYPES,\n  STEPS,\n  APPLICATION_TYPES,\n} from '../api/constants';\nimport { createFakeBorrowers } from './borrowerFixtures';\nimport { createFakeProperty } from './propertyFixtures';\nimport { adminLoans } from '../api/loans/queries';\nimport BorrowerService from '../api/borrowers/server/BorrowerService';\nimport PropertyService from '../api/properties/server/PropertyService';\nimport { createFakeOffer } from './offerFixtures';\n\nconst purchaseTypes = Object.values(PURCHASE_TYPE);\n\nconst getRandomValueInArray = array =>\n  array[Math.floor(Math.random() * array.length)];\n\nconst getRandomStructure = (propertyValue, borrowerId) => {\n  if (!borrowerId) {\n    return {};\n  }\n  return getRandomValueInArray([\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.15 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.1 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.25 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.15 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.1 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.15 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.05 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.05 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.15 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.08 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.02 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_3A,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.2 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.05 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_3B,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n          borrowerId,\n        },\n      ],\n    },\n  ]);\n};\n\nexport const createFakeLoan = ({ userId, step, twoBorrowers }) => {\n  const borrowerIds = createFakeBorrowers(userId, twoBorrowers);\n  const { _id: propertyId, value } = createFakeProperty(userId);\n  const loan = {\n    name: faker.address.streetAddress(),\n    borrowerIds,\n    propertyIds: [propertyId],\n    purchaseType:\n      purchaseTypes[Math.floor(Math.random() * purchaseTypes.length)],\n    contacts: [],\n    structures: [\n      {\n        id: 'struct1',\n        propertyId,\n        loanTranches: [{ type: INTEREST_RATES.YEARS_10, value: 1 }],\n        wantedLoan: Math.round(0.8 * value),\n        ...getRandomStructure(value, borrowerIds[0]),\n      },\n    ],\n    selectedStructure: 'struct1',\n  };\n\n  switch (step) {\n  case STEPS.OFFERS:\n    loan.step = STEPS.OFFERS;\n    loan.loanTranches = [{ value: 750000, type: 'interest10' }];\n    loan.applicationType = APPLICATION_TYPES.FULL;\n    loan.displayWelcomeScreen = false;\n    break;\n  case STEPS.REQUEST:\n    loan.step = STEPS.REQUEST;\n    loan.applicationType = APPLICATION_TYPES.FULL;\n    loan.displayWelcomeScreen = false;\n    break;\n  default:\n    loan.step = STEPS.SOLVENCY;\n  }\n\n  return LoanService.insert({ loan, userId });\n};\n\nexport const getRelatedLoansIds = usersIds =>\n  LoanService.fetch({ $filters: { userId: { $in: usersIds } }, _id: 1 }).map(item => item._id);\n\nexport const addLoanWithData = ({\n  borrowers = [],\n  properties = [],\n  loan: loanData,\n  userId,\n  addOffers,\n}) => {\n  const loanId = LoanService.fullLoanInsert({ userId });\n  LoanService.update({ loanId, object: loanData });\n  const loan = adminLoans.clone({ _id: loanId }).fetchOne();\n  const propertyId = properties.length\n    ? PropertyService.insert({ property: {}, userId })\n    : undefined;\n\n  if (propertyId) {\n    LoanService.addPropertyToLoan({ propertyId, loanId });\n  }\n\n  const structureId = loan.structures[0].id;\n  const [borrowerId1] = loan.borrowers.map(({ _id }) => _id);\n\n  LoanService.updateStructure({\n    loanId,\n    structureId,\n    structure: {\n      propertyId,\n      loanTranches: [\n        { type: INTEREST_RATES.YEARS_10, value: 0.8 },\n        { type: INTEREST_RATES.YEARS_5, value: 0.2 },\n      ],\n      ...getRandomStructure(1000000, borrowerId1),\n    },\n  });\n\n  if (borrowerId1) {\n    BorrowerService.update({ borrowerId: borrowerId1, object: borrowers[0] });\n  }\n\n  if (borrowers.length > 1) {\n    const borrowerId2 = BorrowerService.insert({ borrower: borrowers[1] });\n    BorrowerService.update({ borrowerId: borrowerId2, object: borrowers[1] });\n    LoanService.addLink({\n      id: loanId,\n      linkName: 'borrowers',\n      linkId: borrowerId2,\n    });\n  }\n\n  if (propertyId) {\n    PropertyService.update({\n      propertyId,\n      object: properties[0],\n    });\n  }\n\n  if (addOffers) {\n    const offerIds = [1, 2, 3, 4, 5].map(() => createFakeOffer(loanId));\n    LoanService.updateStructure({\n      loanId,\n      structureId,\n      structure: { offerId: getRandomValueInArray(offerIds) },\n    });\n  }\n\n  return loanId;\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/loanFixtures.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/fixtures/loanFixtures.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  createFakeLoan: () => createFakeLoan,\n  getRelatedLoansIds: () => getRelatedLoansIds,\n  addLoanWithData: () => addLoanWithData\n});\nlet faker;\nmodule.link(\"faker/locale/fr\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 0);\nlet LoanService;\nmodule.link(\"../api/loans/server/LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 1);\nlet PURCHASE_TYPE, INTEREST_RATES, OWN_FUNDS_TYPES, OWN_FUNDS_USAGE_TYPES, STEPS, APPLICATION_TYPES;\nmodule.link(\"../api/constants\", {\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  },\n\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  },\n\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  },\n\n  OWN_FUNDS_USAGE_TYPES(v) {\n    OWN_FUNDS_USAGE_TYPES = v;\n  },\n\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  APPLICATION_TYPES(v) {\n    APPLICATION_TYPES = v;\n  }\n\n}, 2);\nlet createFakeBorrowers;\nmodule.link(\"./borrowerFixtures\", {\n  createFakeBorrowers(v) {\n    createFakeBorrowers = v;\n  }\n\n}, 3);\nlet createFakeProperty;\nmodule.link(\"./propertyFixtures\", {\n  createFakeProperty(v) {\n    createFakeProperty = v;\n  }\n\n}, 4);\nlet adminLoans;\nmodule.link(\"../api/loans/queries\", {\n  adminLoans(v) {\n    adminLoans = v;\n  }\n\n}, 5);\nlet BorrowerService;\nmodule.link(\"../api/borrowers/server/BorrowerService\", {\n  default(v) {\n    BorrowerService = v;\n  }\n\n}, 6);\nlet PropertyService;\nmodule.link(\"../api/properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 7);\nlet createFakeOffer;\nmodule.link(\"./offerFixtures\", {\n  createFakeOffer(v) {\n    createFakeOffer = v;\n  }\n\n}, 8);\nconst purchaseTypes = Object.values(PURCHASE_TYPE);\n\nconst getRandomValueInArray = array => array[Math.floor(Math.random() * array.length)];\n\nconst getRandomStructure = (propertyValue, borrowerId) => {\n  if (!borrowerId) {\n    return {};\n  }\n\n  return getRandomValueInArray([{\n    ownFunds: [{\n      value: Math.round(0.15 * propertyValue),\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      borrowerId\n    }, {\n      value: Math.round(0.1 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_2,\n      usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n      borrowerId\n    }]\n  }, {\n    ownFunds: [{\n      value: Math.round(0.25 * propertyValue),\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      borrowerId\n    }]\n  }, {\n    ownFunds: [{\n      value: Math.round(0.15 * propertyValue),\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      borrowerId\n    }, {\n      value: Math.round(0.1 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_2,\n      usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n      borrowerId\n    }]\n  }, {\n    ownFunds: [{\n      value: Math.round(0.15 * propertyValue),\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      borrowerId\n    }, {\n      value: Math.round(0.05 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_2,\n      usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n      borrowerId\n    }, {\n      value: Math.round(0.05 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_2,\n      usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n      borrowerId\n    }]\n  }, {\n    ownFunds: [{\n      value: Math.round(0.15 * propertyValue),\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      borrowerId\n    }, {\n      value: Math.round(0.08 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_2,\n      usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n      borrowerId\n    }, {\n      value: Math.round(0.02 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_3A,\n      usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n      borrowerId\n    }]\n  }, {\n    ownFunds: [{\n      value: Math.round(0.2 * propertyValue),\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      borrowerId\n    }, {\n      value: Math.round(0.05 * propertyValue),\n      type: OWN_FUNDS_TYPES.INSURANCE_3B,\n      usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n      borrowerId\n    }]\n  }]);\n};\n\nconst createFakeLoan = ({\n  userId,\n  step,\n  twoBorrowers\n}) => {\n  const borrowerIds = createFakeBorrowers(userId, twoBorrowers);\n  const {\n    _id: propertyId,\n    value\n  } = createFakeProperty(userId);\n  const loan = {\n    name: faker.address.streetAddress(),\n    borrowerIds,\n    propertyIds: [propertyId],\n    purchaseType: purchaseTypes[Math.floor(Math.random() * purchaseTypes.length)],\n    contacts: [],\n    structures: [(0, _objectSpread2.default)({\n      id: 'struct1',\n      propertyId,\n      loanTranches: [{\n        type: INTEREST_RATES.YEARS_10,\n        value: 1\n      }],\n      wantedLoan: Math.round(0.8 * value)\n    }, getRandomStructure(value, borrowerIds[0]))],\n    selectedStructure: 'struct1'\n  };\n\n  switch (step) {\n    case STEPS.OFFERS:\n      loan.step = STEPS.OFFERS;\n      loan.loanTranches = [{\n        value: 750000,\n        type: 'interest10'\n      }];\n      loan.applicationType = APPLICATION_TYPES.FULL;\n      loan.displayWelcomeScreen = false;\n      break;\n\n    case STEPS.REQUEST:\n      loan.step = STEPS.REQUEST;\n      loan.applicationType = APPLICATION_TYPES.FULL;\n      loan.displayWelcomeScreen = false;\n      break;\n\n    default:\n      loan.step = STEPS.SOLVENCY;\n  }\n\n  return LoanService.insert({\n    loan,\n    userId\n  });\n};\n\nconst getRelatedLoansIds = usersIds => LoanService.fetch({\n  $filters: {\n    userId: {\n      $in: usersIds\n    }\n  },\n  _id: 1\n}).map(item => item._id);\n\nconst addLoanWithData = ({\n  borrowers = [],\n  properties = [],\n  loan: loanData,\n  userId,\n  addOffers\n}) => {\n  const loanId = LoanService.fullLoanInsert({\n    userId\n  });\n  LoanService.update({\n    loanId,\n    object: loanData\n  });\n  const loan = adminLoans.clone({\n    _id: loanId\n  }).fetchOne();\n  const propertyId = properties.length ? PropertyService.insert({\n    property: {},\n    userId\n  }) : undefined;\n\n  if (propertyId) {\n    LoanService.addPropertyToLoan({\n      propertyId,\n      loanId\n    });\n  }\n\n  const structureId = loan.structures[0].id;\n  const [borrowerId1] = loan.borrowers.map(({\n    _id\n  }) => _id);\n  LoanService.updateStructure({\n    loanId,\n    structureId,\n    structure: (0, _objectSpread2.default)({\n      propertyId,\n      loanTranches: [{\n        type: INTEREST_RATES.YEARS_10,\n        value: 0.8\n      }, {\n        type: INTEREST_RATES.YEARS_5,\n        value: 0.2\n      }]\n    }, getRandomStructure(1000000, borrowerId1))\n  });\n\n  if (borrowerId1) {\n    BorrowerService.update({\n      borrowerId: borrowerId1,\n      object: borrowers[0]\n    });\n  }\n\n  if (borrowers.length > 1) {\n    const borrowerId2 = BorrowerService.insert({\n      borrower: borrowers[1]\n    });\n    BorrowerService.update({\n      borrowerId: borrowerId2,\n      object: borrowers[1]\n    });\n    LoanService.addLink({\n      id: loanId,\n      linkName: 'borrowers',\n      linkId: borrowerId2\n    });\n  }\n\n  if (propertyId) {\n    PropertyService.update({\n      propertyId,\n      object: properties[0]\n    });\n  }\n\n  if (addOffers) {\n    const offerIds = [1, 2, 3, 4, 5].map(() => createFakeOffer(loanId));\n    LoanService.updateStructure({\n      loanId,\n      structureId,\n      structure: {\n        offerId: getRandomValueInArray(offerIds)\n      }\n    });\n  }\n\n  return loanId;\n};","map":{"version":3,"sources":["imports/core/fixtures/loanFixtures.js"],"names":["purchaseTypes","Object","getRandomValueInArray","array","Math","getRandomStructure","ownFunds","value","type","OWN_FUNDS_TYPES","borrowerId","usageType","OWN_FUNDS_USAGE_TYPES","createFakeLoan","twoBorrowers","borrowerIds","createFakeBorrowers","_id","createFakeProperty","loan","name","faker","propertyIds","purchaseType","contacts","structures","id","loanTranches","INTEREST_RATES","wantedLoan","selectedStructure","STEPS","APPLICATION_TYPES","userId","getRelatedLoansIds","usersIds","$filters","$in","item","addLoanWithData","borrowers","properties","addOffers","loanId","LoanService","object","loanData","propertyId","property","structureId","structure","BorrowerService","borrowerId2","borrower","linkName","linkId","PropertyService","offerIds","createFakeOffer","offerId"],"mappings":"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","sourcesContent":["import faker from 'faker/locale/fr';\n\nimport LoanService from '../api/loans/server/LoanService';\nimport {\n  PURCHASE_TYPE,\n  INTEREST_RATES,\n  OWN_FUNDS_TYPES,\n  OWN_FUNDS_USAGE_TYPES,\n  STEPS,\n  APPLICATION_TYPES,\n} from '../api/constants';\nimport { createFakeBorrowers } from './borrowerFixtures';\nimport { createFakeProperty } from './propertyFixtures';\nimport { adminLoans } from '../api/loans/queries';\nimport BorrowerService from '../api/borrowers/server/BorrowerService';\nimport PropertyService from '../api/properties/server/PropertyService';\nimport { createFakeOffer } from './offerFixtures';\n\nconst purchaseTypes = Object.values(PURCHASE_TYPE);\n\nconst getRandomValueInArray = array =>\n  array[Math.floor(Math.random() * array.length)];\n\nconst getRandomStructure = (propertyValue, borrowerId) => {\n  if (!borrowerId) {\n    return {};\n  }\n  return getRandomValueInArray([\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.15 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.1 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.25 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.15 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.1 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.15 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.05 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.05 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.15 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.08 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_2,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.02 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_3A,\n          usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n          borrowerId,\n        },\n      ],\n    },\n    {\n      ownFunds: [\n        {\n          value: Math.round(0.2 * propertyValue),\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n          borrowerId,\n        },\n        {\n          value: Math.round(0.05 * propertyValue),\n          type: OWN_FUNDS_TYPES.INSURANCE_3B,\n          usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n          borrowerId,\n        },\n      ],\n    },\n  ]);\n};\n\nexport const createFakeLoan = ({ userId, step, twoBorrowers }) => {\n  const borrowerIds = createFakeBorrowers(userId, twoBorrowers);\n  const { _id: propertyId, value } = createFakeProperty(userId);\n  const loan = {\n    name: faker.address.streetAddress(),\n    borrowerIds,\n    propertyIds: [propertyId],\n    purchaseType:\n      purchaseTypes[Math.floor(Math.random() * purchaseTypes.length)],\n    contacts: [],\n    structures: [\n      {\n        id: 'struct1',\n        propertyId,\n        loanTranches: [{ type: INTEREST_RATES.YEARS_10, value: 1 }],\n        wantedLoan: Math.round(0.8 * value),\n        ...getRandomStructure(value, borrowerIds[0]),\n      },\n    ],\n    selectedStructure: 'struct1',\n  };\n\n  switch (step) {\n  case STEPS.OFFERS:\n    loan.step = STEPS.OFFERS;\n    loan.loanTranches = [{ value: 750000, type: 'interest10' }];\n    loan.applicationType = APPLICATION_TYPES.FULL;\n    loan.displayWelcomeScreen = false;\n    break;\n  case STEPS.REQUEST:\n    loan.step = STEPS.REQUEST;\n    loan.applicationType = APPLICATION_TYPES.FULL;\n    loan.displayWelcomeScreen = false;\n    break;\n  default:\n    loan.step = STEPS.SOLVENCY;\n  }\n\n  return LoanService.insert({ loan, userId });\n};\n\nexport const getRelatedLoansIds = usersIds =>\n  LoanService.fetch({ $filters: { userId: { $in: usersIds } }, _id: 1 }).map(item => item._id);\n\nexport const addLoanWithData = ({\n  borrowers = [],\n  properties = [],\n  loan: loanData,\n  userId,\n  addOffers,\n}) => {\n  const loanId = LoanService.fullLoanInsert({ userId });\n  LoanService.update({ loanId, object: loanData });\n  const loan = adminLoans.clone({ _id: loanId }).fetchOne();\n  const propertyId = properties.length\n    ? PropertyService.insert({ property: {}, userId })\n    : undefined;\n\n  if (propertyId) {\n    LoanService.addPropertyToLoan({ propertyId, loanId });\n  }\n\n  const structureId = loan.structures[0].id;\n  const [borrowerId1] = loan.borrowers.map(({ _id }) => _id);\n\n  LoanService.updateStructure({\n    loanId,\n    structureId,\n    structure: {\n      propertyId,\n      loanTranches: [\n        { type: INTEREST_RATES.YEARS_10, value: 0.8 },\n        { type: INTEREST_RATES.YEARS_5, value: 0.2 },\n      ],\n      ...getRandomStructure(1000000, borrowerId1),\n    },\n  });\n\n  if (borrowerId1) {\n    BorrowerService.update({ borrowerId: borrowerId1, object: borrowers[0] });\n  }\n\n  if (borrowers.length > 1) {\n    const borrowerId2 = BorrowerService.insert({ borrower: borrowers[1] });\n    BorrowerService.update({ borrowerId: borrowerId2, object: borrowers[1] });\n    LoanService.addLink({\n      id: loanId,\n      linkName: 'borrowers',\n      linkId: borrowerId2,\n    });\n  }\n\n  if (propertyId) {\n    PropertyService.update({\n      propertyId,\n      object: properties[0],\n    });\n  }\n\n  if (addOffers) {\n    const offerIds = [1, 2, 3, 4, 5].map(() => createFakeOffer(loanId));\n    LoanService.updateStructure({\n      loanId,\n      structureId,\n      structure: { offerId: getRandomValueInArray(offerIds) },\n    });\n  }\n\n  return loanId;\n};\n"]},"sourceType":"script","hash":"97807712c90ea022409f2c3afc3ebbffcc7a2251"}
