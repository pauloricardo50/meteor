{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/methods/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/methods/methods.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/methods/methods.js","inputSourceMap":{"version":3,"sources":["imports/core/api/methods/methods.js"],"names":["Meteor","Mutation","Match","check","isTest","isDebugEnabled","omit","Method","run","callParams","options","config","location","isClient","window","href","host","pathname","aopData","params","callAOP","executeBefores","name","additionalData","Promise","resolve","reject","apply","error","result","executeAfters","setHandler","fn","self","methods","Object","Maybe","String","isServer","setClientUrl","require","validate","context","executionAOP","call","e"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mutation } from 'meteor/cultofcoders:mutations';\nimport { Match, check } from 'meteor/check';\n\nif (Meteor.isTest) {\n  Mutation.isDebugEnabled = false;\n} else {\n  Mutation.isDebugEnabled = { omit: ['analyticsPage', 'analyticsLogin'] };\n}\n\nexport class Method extends Mutation {\n  run(callParams = {}, options = {}) {\n    const { config } = this;\n    let location;\n    if (Meteor.isClient && window && window.location) {\n      location = {\n        href: window.location.href,\n        host: window.location.host,\n        pathname: window.location.pathname,\n      };\n    }\n\n    const aopData = { config, params: callParams };\n    Mutation.callAOP.executeBefores(aopData);\n    this.callAOP.executeBefores(aopData);\n\n    const { name, params } = config;\n    const additionalData = { location };\n\n    return new Promise((resolve, reject) => {\n      Meteor.apply(\n        name,\n        [callParams, additionalData],\n        options,\n        (error, result) => {\n          const aopData = {\n            config,\n            params: callParams,\n            result,\n            error,\n          };\n\n          Mutation.callAOP.executeAfters(aopData);\n          this.callAOP.executeAfters(aopData);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(result);\n          }\n        },\n      );\n    });\n  }\n\n  setHandler(fn) {\n    const { config } = this;\n    const { name, params } = config;\n    const self = this;\n\n    Meteor.methods({\n      [name](params = {}, additionalData) {\n        check(additionalData, Object);\n        check(\n          additionalData.location,\n          Match.Maybe({\n            href: Match.Maybe(String),\n            host: Match.Maybe(String),\n            pathname: Match.Maybe(String),\n          }),\n        );\n\n        if (Meteor.isServer && additionalData.location) {\n          const { setClientUrl } = require('../../utils/server/getClientUrl');\n          setClientUrl(additionalData.location);\n        }\n\n        if (config.validate) {\n          config.validate(params);\n        } else if (config.params) {\n          check(params, config.params);\n        }\n\n        let aopData = {\n          context: this,\n          config,\n          params,\n        };\n\n        Mutation.executionAOP.executeBefores(aopData);\n        self.executionAOP.executeBefores(aopData);\n\n        let error;\n        let result;\n        try {\n          result = fn.call(null, this, params);\n        } catch (e) {\n          error = e;\n        }\n\n        aopData = {\n          context: this,\n          config,\n          params,\n          result,\n          error,\n        };\n\n        Mutation.executionAOP.executeAfters(aopData);\n        self.executionAOP.executeAfters(aopData);\n\n        if (error) {\n          throw error;\n        }\n\n        return result;\n      },\n    });\n  }\n}\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/methods/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/methods/methods.js"}},"code":"module.export({\n  Method: () => Method\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mutation;\nmodule.link(\"meteor/cultofcoders:mutations\", {\n  Mutation(v) {\n    Mutation = v;\n  }\n\n}, 1);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 2);\n\nif (Meteor.isTest) {\n  Mutation.isDebugEnabled = false;\n} else {\n  Mutation.isDebugEnabled = {\n    omit: ['analyticsPage', 'analyticsLogin']\n  };\n}\n\nclass Method extends Mutation {\n  run(callParams = {}, options = {}) {\n    const {\n      config\n    } = this;\n    let location;\n\n    if (Meteor.isClient && window && window.location) {\n      location = {\n        href: window.location.href,\n        host: window.location.host,\n        pathname: window.location.pathname\n      };\n    }\n\n    const aopData = {\n      config,\n      params: callParams\n    };\n    Mutation.callAOP.executeBefores(aopData);\n    this.callAOP.executeBefores(aopData);\n    const {\n      name,\n      params\n    } = config;\n    const additionalData = {\n      location\n    };\n    return new Promise((resolve, reject) => {\n      Meteor.apply(name, [callParams, additionalData], options, (error, result) => {\n        const aopData = {\n          config,\n          params: callParams,\n          result,\n          error\n        };\n        Mutation.callAOP.executeAfters(aopData);\n        this.callAOP.executeAfters(aopData);\n\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n\n  setHandler(fn) {\n    const {\n      config\n    } = this;\n    const {\n      name,\n      params\n    } = config;\n    const self = this;\n    Meteor.methods({\n      [name](params = {}, additionalData) {\n        check(additionalData, Object);\n        check(additionalData.location, Match.Maybe({\n          href: Match.Maybe(String),\n          host: Match.Maybe(String),\n          pathname: Match.Maybe(String)\n        }));\n\n        if (Meteor.isServer && additionalData.location) {\n          const {\n            setClientUrl\n          } = require(\"../../utils/server/getClientUrl\");\n\n          setClientUrl(additionalData.location);\n        }\n\n        if (config.validate) {\n          config.validate(params);\n        } else if (config.params) {\n          check(params, config.params);\n        }\n\n        let aopData = {\n          context: this,\n          config,\n          params\n        };\n        Mutation.executionAOP.executeBefores(aopData);\n        self.executionAOP.executeBefores(aopData);\n        let error;\n        let result;\n\n        try {\n          result = fn.call(null, this, params);\n        } catch (e) {\n          error = e;\n        }\n\n        aopData = {\n          context: this,\n          config,\n          params,\n          result,\n          error\n        };\n        Mutation.executionAOP.executeAfters(aopData);\n        self.executionAOP.executeAfters(aopData);\n\n        if (error) {\n          throw error;\n        }\n\n        return result;\n      }\n\n    });\n  }\n\n}","map":{"version":3,"sources":["imports/core/api/methods/methods.js"],"names":["Meteor","Mutation","omit","run","callParams","options","config","window","location","href","host","pathname","aopData","params","additionalData","error","reject","resolve","setHandler","self","check","Match","setClientUrl","require","context","result","fn"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mutation } from 'meteor/cultofcoders:mutations';\nimport { Match, check } from 'meteor/check';\n\nif (Meteor.isTest) {\n  Mutation.isDebugEnabled = false;\n} else {\n  Mutation.isDebugEnabled = { omit: ['analyticsPage', 'analyticsLogin'] };\n}\n\nexport class Method extends Mutation {\n  run(callParams = {}, options = {}) {\n    const { config } = this;\n    let location;\n    if (Meteor.isClient && window && window.location) {\n      location = {\n        href: window.location.href,\n        host: window.location.host,\n        pathname: window.location.pathname,\n      };\n    }\n\n    const aopData = { config, params: callParams };\n    Mutation.callAOP.executeBefores(aopData);\n    this.callAOP.executeBefores(aopData);\n\n    const { name, params } = config;\n    const additionalData = { location };\n\n    return new Promise((resolve, reject) => {\n      Meteor.apply(\n        name,\n        [callParams, additionalData],\n        options,\n        (error, result) => {\n          const aopData = {\n            config,\n            params: callParams,\n            result,\n            error,\n          };\n\n          Mutation.callAOP.executeAfters(aopData);\n          this.callAOP.executeAfters(aopData);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(result);\n          }\n        },\n      );\n    });\n  }\n\n  setHandler(fn) {\n    const { config } = this;\n    const { name, params } = config;\n    const self = this;\n\n    Meteor.methods({\n      [name](params = {}, additionalData) {\n        check(additionalData, Object);\n        check(\n          additionalData.location,\n          Match.Maybe({\n            href: Match.Maybe(String),\n            host: Match.Maybe(String),\n            pathname: Match.Maybe(String),\n          }),\n        );\n\n        if (Meteor.isServer && additionalData.location) {\n          const { setClientUrl } = require('../../utils/server/getClientUrl');\n          setClientUrl(additionalData.location);\n        }\n\n        if (config.validate) {\n          config.validate(params);\n        } else if (config.params) {\n          check(params, config.params);\n        }\n\n        let aopData = {\n          context: this,\n          config,\n          params,\n        };\n\n        Mutation.executionAOP.executeBefores(aopData);\n        self.executionAOP.executeBefores(aopData);\n\n        let error;\n        let result;\n        try {\n          result = fn.call(null, this, params);\n        } catch (e) {\n          error = e;\n        }\n\n        aopData = {\n          context: this,\n          config,\n          params,\n          result,\n          error,\n        };\n\n        Mutation.executionAOP.executeAfters(aopData);\n        self.executionAOP.executeAfters(aopData);\n\n        if (error) {\n          throw error;\n        }\n\n        return result;\n      },\n    });\n  }\n}\n"]},"sourceType":"script","hash":"7d6071d4696e77b0a21dc17f1ba4fcedcecbf736"}
