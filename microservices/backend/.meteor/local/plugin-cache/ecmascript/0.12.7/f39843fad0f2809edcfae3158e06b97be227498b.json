{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/inviteUserToPromotion.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/inviteUserToPromotion.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/inviteUserToPromotion.js","inputSourceMap":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/inviteUserToPromotion.js"],"names":["Meteor","proInviteUser","withMeteorUserId","literalToString","stringToLiteral","updateCustomerReferral","checkQuery","impersonateSchema","inviteUserToPromotionAPI","user","_id","userId","body","params","query","shareSolvency","promotionId","impersonateUser","schema","promotionIds","map","filter","x","length","Error","run","invitedBy","then","customer","message","email"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AAEA,SAASC,aAAT;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,sBAJF;AAMA,SAASC,UAAT,EAAqBC,iBAArB;;AAEA,MAAMC,wBAAwB,GAAG,CAAC;AAChCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GAD0B;AAEhCC,EAAAA,IAFgC;AAGhCC,EAAAA,MAHgC;AAIhCC,EAAAA;AAJgC,CAAD,KAK3B;AACJ,QAAM;AAAEL,IAAAA,IAAF;AAAQM,IAAAA;AAAR,MAA0BH,IAAhC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAkBH,MAAxB;AACA,QAAM;AAAE,wBAAoBI;AAAtB,MAA0CX,UAAU,CAAC;AACzDQ,IAAAA,KADyD;AAEzDI,IAAAA,MAAM,EAAEX;AAFiD,GAAD,CAA1D;AAKA,QAAMY,YAAY,GAAG,CAACH,WAAD,EAClBI,GADkB,CACdhB,eADc,EAElBiB,MAFkB,CAEXC,CAAC,IAAIA,CAFM,EAGlBF,GAHkB,CAGdjB,eAHc,CAArB;;AAKA,MAAI,CAACgB,YAAY,CAACI,MAAlB,EAA0B;AACxB,UAAM,IAAIvB,MAAM,CAACwB,KAAX,CAAiB,yBAAjB,CAAN;AACD;;AAED,SAAOtB,gBAAgB,CAAC;AAAES,IAAAA,MAAF;AAAUM,IAAAA;AAAV,GAAD,EAA8B,MACnDhB,aAAa,CAACwB,GAAd,CAAkB;AAChBN,IAAAA,YADgB;AAEhBV,IAAAA,IAAI,EAAE,EAAE,GAAGA,IAAL;AAAWiB,MAAAA,SAAS,EAAEf;AAAtB,KAFU;AAGhBI,IAAAA;AAHgB,GAAlB,CADqB,CAAhB,CAMJY,IANI,CAMC,MACJtB,sBAAsB,CAAC;AAAEuB,IAAAA,QAAQ,EAAEnB,IAAZ;AAAkBE,IAAAA,MAAlB;AAA0BM,IAAAA;AAA1B,GAAD,CAPnB,EAQJU,IARI,CAQC,OAAO;AACXE,IAAAA,OAAO,EAAG,8BACRpB,IAAI,CAACqB,KACN,sBAAqBd,WAAY;AAHvB,GAAP,CARD,CAAP;AAaD,CAnCD;;AAqCA,eAAeR,wBAAf","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { proInviteUser } from '../../../methods';\nimport {\n  withMeteorUserId,\n  literalToString,\n  stringToLiteral,\n  updateCustomerReferral,\n} from '../helpers';\nimport { checkQuery, impersonateSchema } from './helpers';\n\nconst inviteUserToPromotionAPI = ({\n  user: { _id: userId },\n  body,\n  params,\n  query,\n}) => {\n  const { user, shareSolvency } = body;\n  const { promotionId } = params;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const promotionIds = [promotionId]\n    .map(stringToLiteral)\n    .filter(x => x)\n    .map(literalToString);\n\n  if (!promotionIds.length) {\n    throw new Meteor.Error('No promotionId provided');\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () =>\n    proInviteUser.run({\n      promotionIds,\n      user: { ...user, invitedBy: userId },\n      shareSolvency,\n    }))\n    .then(() =>\n      updateCustomerReferral({ customer: user, userId, impersonateUser }))\n    .then(() => ({\n      message: `Successfully invited user \"${\n        user.email\n      }\" to promotion id \"${promotionId}\"`,\n    }));\n};\n\nexport default inviteUserToPromotionAPI;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/inviteUserToPromotion.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/inviteUserToPromotion.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet proInviteUser;\nmodule.link(\"../../../methods\", {\n  proInviteUser(v) {\n    proInviteUser = v;\n  }\n\n}, 1);\nlet withMeteorUserId, literalToString, stringToLiteral, updateCustomerReferral;\nmodule.link(\"../helpers\", {\n  withMeteorUserId(v) {\n    withMeteorUserId = v;\n  },\n\n  literalToString(v) {\n    literalToString = v;\n  },\n\n  stringToLiteral(v) {\n    stringToLiteral = v;\n  },\n\n  updateCustomerReferral(v) {\n    updateCustomerReferral = v;\n  }\n\n}, 2);\nlet checkQuery, impersonateSchema;\nmodule.link(\"./helpers\", {\n  checkQuery(v) {\n    checkQuery = v;\n  },\n\n  impersonateSchema(v) {\n    impersonateSchema = v;\n  }\n\n}, 3);\n\nconst inviteUserToPromotionAPI = ({\n  user: {\n    _id: userId\n  },\n  body,\n  params,\n  query\n}) => {\n  const {\n    user,\n    shareSolvency\n  } = body;\n  const {\n    promotionId\n  } = params;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: impersonateSchema\n  });\n  const promotionIds = [promotionId].map(stringToLiteral).filter(x => x).map(literalToString);\n\n  if (!promotionIds.length) {\n    throw new Meteor.Error('No promotionId provided');\n  }\n\n  return withMeteorUserId({\n    userId,\n    impersonateUser\n  }, () => proInviteUser.run({\n    promotionIds,\n    user: (0, _objectSpread2.default)({}, user, {\n      invitedBy: userId\n    }),\n    shareSolvency\n  })).then(() => updateCustomerReferral({\n    customer: user,\n    userId,\n    impersonateUser\n  })).then(() => ({\n    message: `Successfully invited user \"${user.email}\" to promotion id \"${promotionId}\"`\n  }));\n};\n\nmodule.exportDefault(inviteUserToPromotionAPI);","map":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/inviteUserToPromotion.js"],"names":["inviteUserToPromotionAPI","user","_id","userId","query","shareSolvency","promotionId","impersonateUser","checkQuery","schema","impersonateSchema","promotionIds","x","Meteor","invitedBy","updateCustomerReferral","customer","message","email"],"mappings":";;;;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA,EAAA,eAAA,EAAA,eAAA,EAAA,sBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,sBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,sBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA,EAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,UAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAWA,MAAMA,wBAAwB,GAAG,CAAC;AAChCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GAD0B;AAAA,EAAA,IAAA;AAAA,EAAA,MAAA;AAIhCC,EAAAA;AAJgC,CAAD,KAK3B;AACJ,QAAM;AAAA,IAAA,IAAA;AAAQC,IAAAA;AAAR,MAAN,IAAA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAN,MAAA;AACA,QAAM;AAAE,wBAAoBC;AAAtB,MAA0CC,UAAU,CAAC;AAAA,IAAA,KAAA;AAEzDC,IAAAA,MAAM,EAAEC;AAFiD,GAAD,CAA1D;AAKA,QAAMC,YAAY,GAAG,CAAA,WAAA,EAAA,GAAA,CAAA,eAAA,EAAA,MAAA,CAEXC,CAAC,IAFU,CAAA,EAAA,GAAA,CAArB,eAAqB,CAArB;;AAKA,MAAI,CAACD,YAAY,CAAjB,MAAA,EAA0B;AACxB,UAAM,IAAIE,MAAM,CAAV,KAAA,CAAN,yBAAM,CAAN;AACD;;AAED,SAAO,gBAAgB,CAAC;AAAA,IAAA,MAAA;AAAUN,IAAAA;AAAV,GAAD,EAA8B,MACnD,aAAa,CAAb,GAAA,CAAkB;AAAA,IAAA,YAAA;AAEhBN,IAAAA,IAAI,kCAAE,IAAF;AAAaa,MAAAA,SAAS,EAAEX;AAAxB,MAFY;AAGhBE,IAAAA;AAHgB,GAAlB,CADqB,CAAhB,CAAA,IAAA,CAMC,MACJU,sBAAsB,CAAC;AAAEC,IAAAA,QAAQ,EAAV,IAAA;AAAA,IAAA,MAAA;AAA0BT,IAAAA;AAA1B,GAAD,CAPnB,EAAA,IAAA,CAQC,OAAO;AACXU,IAAAA,OAAO,EAAG,8BACRhB,IAAI,CAACiB,KACN,sBAAqBZ,WAAY;AAHvB,GAAP,CARD,CAAP;AAtBF,CAAA;;AAXA,MAAA,CAAA,aAAA,CAgDA,wBAhDA","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { proInviteUser } from '../../../methods';\nimport {\n  withMeteorUserId,\n  literalToString,\n  stringToLiteral,\n  updateCustomerReferral,\n} from '../helpers';\nimport { checkQuery, impersonateSchema } from './helpers';\n\nconst inviteUserToPromotionAPI = ({\n  user: { _id: userId },\n  body,\n  params,\n  query,\n}) => {\n  const { user, shareSolvency } = body;\n  const { promotionId } = params;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: impersonateSchema,\n  });\n\n  const promotionIds = [promotionId]\n    .map(stringToLiteral)\n    .filter(x => x)\n    .map(literalToString);\n\n  if (!promotionIds.length) {\n    throw new Meteor.Error('No promotionId provided');\n  }\n\n  return withMeteorUserId({ userId, impersonateUser }, () =>\n    proInviteUser.run({\n      promotionIds,\n      user: { ...user, invitedBy: userId },\n      shareSolvency,\n    }))\n    .then(() =>\n      updateCustomerReferral({ customer: user, userId, impersonateUser }))\n    .then(() => ({\n      message: `Successfully invited user \"${\n        user.email\n      }\" to promotion id \"${promotionId}\"`,\n    }));\n};\n\nexport default inviteUserToPromotionAPI;\n"]},"sourceType":"script","hash":"f39843fad0f2809edcfae3158e06b97be227498b"}
