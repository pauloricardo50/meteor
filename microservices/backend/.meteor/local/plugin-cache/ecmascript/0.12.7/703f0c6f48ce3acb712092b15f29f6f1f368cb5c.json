{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/test/testFactories/fakes.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/pdf/server/test/testFactories/fakes.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/test/testFactories/fakes.js","inputSourceMap":{"version":3,"sources":["imports/core/api/pdf/server/test/testFactories/fakes.js"],"names":["Random","sample","EXPENSES","FLAT_TYPE","HOUSE_TYPE","MINERGIE_CERTIFICATE","OTHER_INCOME","OWN_FUNDS_TYPES","OWN_FUNDS_USAGE_TYPES","PROPERTY_TYPE","FAKE_SALARY","FAKE_BANK_FORTUNE","FAKE_INSURANCE_2","insurance2","value","FAKE_INSURANCE_3A","insurance3A","FAKE_BANK_3A","bank3A","FAKE_INSURANCE_3B","insurance3B","FAKE_THIRD_PARTY_FORTUNE","thirdPartyFortune","FAKE_OTHER_INCOME","otherIncome","description","PENSIONS","WELFARE","FAKE_OTHER_FORTUNE","otherFortune","FAKE_EXPENSES","expenses","PERSONAL_LOAN","FAKE_REAL_ESTATE","realEstate","loan","FAKE_BONUS","bonusExists","bonus2015","bonus2016","bonus2017","bonus2018","FAKE_LOAN_NAME","FAKE_USER","user","assignedEmployee","name","email","phoneNumber","fakeOwnFunds","borrowerId","type","usageType","fakeBankFortuneWithdraw","BANK_FORTUNE","WITHDRAW","fakeInsurance2Withdraw","INSURANCE_2","fakeInsurance2Pledge","PLEDGE","fakeInsurance3AWithdraw","INSURANCE_3A","fakeInsurance3APledge","fakeInsurance3BWithdraw","INSURANCE_3B","fakeInsurance3BPledge","fakeBank3AWithdraw","BANK_3A","fakeBank3APledge","fakeBank3BWithdraw","BANK_3B","fakeBank3BPledge","fakeThirdPartyFortuneWithdraw","THIRD_PARTY_FORTUNE","FAKE_WANTED_LOAN","FAKE_NOTARY_FEES","fakeStructure","borrowerIds","propertyId","withBank3APledge","withBank3AWithdraw","withBank3BPledge","withBank3BWithdraw","withBankWithdraw","withCustomNotaryFees","withInsurance2Pledge","withInsurance2Withdraw","withInsurance3APledge","withInsurance3AWithdraw","withInsurance3BPledge","withInsurance3BWithdraw","withThirdPartyFortuneWithdraw","id","wantedLoan","notaryFees","ownFunds","filter","x","fakeBorrower","borrowerInfos","withBank3A","withBankFortune","withBonus","withExpenses","withInsurance2","withInsurance3A","withInsurance3B","withOtherFortune","withOtherIncome","withRealEstate","withSalary","withThirdPartyFortune","bankFortune","salary","FAKE_HOUSE","address1","city","constructionYear","houseType","DETACHED","landArea","minergie","MINERGIE_P","parkingInside","parkingOutside","propertyType","HOUSE","renovationYear","roomCount","volume","yearlyExpenses","zipCode","FAKE_APPARTMENT","flatType","SINGLE_FLOOR_APARTMENT","floorNumber","insideArea","numberOfFloors","FLAT"],"mappings":"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","sourcesContent":["import { Random } from 'meteor/random';\nimport sample from 'lodash/sample';\n\nimport {\n  EXPENSES,\n  FLAT_TYPE,\n  HOUSE_TYPE,\n  MINERGIE_CERTIFICATE,\n  OTHER_INCOME,\n  OWN_FUNDS_TYPES,\n  OWN_FUNDS_USAGE_TYPES,\n  PROPERTY_TYPE,\n} from '../../../../constants';\n\nexport const FAKE_SALARY = 150000;\nexport const FAKE_BANK_FORTUNE = 1000000;\nexport const FAKE_INSURANCE_2 = { insurance2: [{ value: 200000 }] };\nexport const FAKE_INSURANCE_3A = { insurance3A: [{ value: 150000 }] };\nexport const FAKE_BANK_3A = { bank3A: [{ value: 250000 }] };\nexport const FAKE_INSURANCE_3B = { insurance3B: [{ value: 50000 }] };\nexport const FAKE_THIRD_PARTY_FORTUNE = {\n  thirdPartyFortune: 5000,\n};\nexport const FAKE_OTHER_INCOME = {\n  otherIncome: [\n    { description: OTHER_INCOME.PENSIONS, value: 150000 },\n    { description: OTHER_INCOME.WELFARE, value: 25000 },\n  ],\n};\nexport const FAKE_OTHER_FORTUNE = {\n  otherFortune: [{ value: 10000 }],\n};\nexport const FAKE_EXPENSES = {\n  expenses: [\n    { description: EXPENSES.PENSIONS, value: 12000 },\n    { description: EXPENSES.PERSONAL_LOAN, value: 3000 },\n  ],\n};\n\nexport const FAKE_REAL_ESTATE = {\n  realEstate: [{ value: 1200000, loan: 850000 }],\n};\n\nexport const FAKE_BONUS = {\n  bonusExists: true,\n  bonus2015: 2000,\n  bonus2016: 5000,\n  bonus2017: 1500,\n  bonus2018: 5000,\n};\n\nexport const FAKE_LOAN_NAME = '18-0001';\nexport const FAKE_USER = {\n  user: {\n    assignedEmployee: {\n      name: 'Bob Dylan',\n      email: 'bob.dylan@gmail.com',\n      phoneNumber: '+41 22 577 45 23',\n    },\n  },\n};\n\nexport const fakeOwnFunds = ({ borrowerId, type, value, usageType }) => ({\n  borrowerId,\n  type,\n  value,\n  usageType,\n});\n\nexport const fakeBankFortuneWithdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n    value: 200000,\n    usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n  });\nexport const fakeInsurance2Withdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.INSURANCE_2,\n    value: 150000,\n    usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n  });\nexport const fakeInsurance2Pledge = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.INSURANCE_2,\n    value: 25000,\n    usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n  });\nexport const fakeInsurance3AWithdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.INSURANCE_3A,\n    value: 85000,\n    usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n  });\nexport const fakeInsurance3APledge = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.INSURANCE_3A,\n    value: 125000,\n    usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n  });\nexport const fakeInsurance3BWithdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.INSURANCE_3B,\n    value: 80000,\n    usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n  });\nexport const fakeInsurance3BPledge = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.INSURANCE_3B,\n    value: 15000,\n    usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n  });\nexport const fakeBank3AWithdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.BANK_3A,\n    value: 75000,\n    usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n  });\nexport const fakeBank3APledge = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.BANK_3A,\n    value: 50000,\n    usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n  });\nexport const fakeBank3BWithdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.BANK_3B,\n    value: 75000,\n    usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n  });\nexport const fakeBank3BPledge = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.BANK_3B,\n    value: 18000,\n    usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n  });\nexport const fakeThirdPartyFortuneWithdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n    value: 3000,\n    usageType: OWN_FUNDS_TYPES.WITHDRAW,\n  });\n\nexport const FAKE_WANTED_LOAN = 800000;\nexport const FAKE_NOTARY_FEES = 14500;\n\nexport const fakeStructure = ({\n  borrowerIds,\n  propertyId,\n  withBank3APledge,\n  withBank3AWithdraw,\n  withBank3BPledge,\n  withBank3BWithdraw,\n  withBankWithdraw,\n  withCustomNotaryFees,\n  withInsurance2Pledge,\n  withInsurance2Withdraw,\n  withInsurance3APledge,\n  withInsurance3AWithdraw,\n  withInsurance3BPledge,\n  withInsurance3BWithdraw,\n  withThirdPartyFortuneWithdraw,\n}) => ({\n  id: Random.id(),\n  propertyId,\n  wantedLoan: FAKE_WANTED_LOAN,\n  notaryFees: withCustomNotaryFees ? FAKE_NOTARY_FEES : 0.05 * FAKE_WANTED_LOAN,\n  ownFunds: [\n    withBankWithdraw ? fakeBankFortuneWithdraw(sample(borrowerIds)) : null,\n    withInsurance2Withdraw ? fakeInsurance2Withdraw(sample(borrowerIds)) : null,\n    withInsurance2Pledge ? fakeInsurance2Pledge(sample(borrowerIds)) : null,\n    withInsurance3AWithdraw\n      ? fakeInsurance3AWithdraw(sample(borrowerIds))\n      : null,\n    withInsurance3APledge ? fakeInsurance3APledge(sample(borrowerIds)) : null,\n    withBank3AWithdraw ? fakeBank3AWithdraw(sample(borrowerIds)) : null,\n    withBank3APledge ? fakeBank3APledge(sample(borrowerIds)) : null,\n    withInsurance3BWithdraw\n      ? fakeInsurance3BWithdraw(sample(borrowerIds))\n      : null,\n    withInsurance3BPledge ? fakeInsurance3BPledge(sample(borrowerIds)) : null,\n    withBank3BWithdraw ? fakeBank3BWithdraw(sample(borrowerIds)) : null,\n    withBank3BPledge ? fakeBank3BPledge(sample(borrowerIds)) : null,\n    withThirdPartyFortuneWithdraw\n      ? fakeThirdPartyFortuneWithdraw(sample(borrowerIds))\n      : null,\n  ].filter(x => x),\n});\n\nexport const fakeBorrower = ({\n  borrowerInfos,\n  withBank3A,\n  withBankFortune,\n  withBonus,\n  withExpenses,\n  withInsurance2,\n  withInsurance3A,\n  withInsurance3B,\n  withOtherFortune,\n  withOtherIncome,\n  withRealEstate,\n  withSalary,\n  withThirdPartyFortune,\n}) => ({\n  bankFortune: withBankFortune ? FAKE_BANK_FORTUNE : 0,\n  salary: withSalary ? FAKE_SALARY : 0,\n  ...(withBank3A ? FAKE_BANK_3A : {}),\n  ...(withBonus ? FAKE_BONUS : {}),\n  ...(withExpenses ? FAKE_EXPENSES : {}),\n  ...(withInsurance2 ? FAKE_INSURANCE_2 : {}),\n  ...(withInsurance3A ? FAKE_INSURANCE_3A : {}),\n  ...(withInsurance3B ? FAKE_INSURANCE_3B : {}),\n  ...(withOtherFortune ? FAKE_OTHER_FORTUNE : {}),\n  ...(withOtherIncome ? FAKE_OTHER_INCOME : {}),\n  ...(withRealEstate ? FAKE_REAL_ESTATE : {}),\n  ...(withThirdPartyFortune ? FAKE_THIRD_PARTY_FORTUNE : {}),\n  ...borrowerInfos,\n});\n\nexport const FAKE_HOUSE = {\n  address1: 'Rue du Succès 18',\n  city: 'Lausanne',\n  constructionYear: 1987,\n  houseType: HOUSE_TYPE.DETACHED,\n  landArea: 300,\n  minergie: MINERGIE_CERTIFICATE.MINERGIE_P,\n  parkingInside: 1,\n  parkingOutside: 2,\n  propertyType: PROPERTY_TYPE.HOUSE,\n  renovationYear: 2010,\n  roomCount: 5,\n  volume: 1500,\n  yearlyExpenses: 12000,\n  zipCode: 1000,\n};\n\nexport const FAKE_APPARTMENT = {\n  address1: 'Rue du Succès 18',\n  city: 'Lausanne',\n  constructionYear: 1987,\n  flatType: FLAT_TYPE.SINGLE_FLOOR_APARTMENT,\n  floorNumber: 4,\n  insideArea: 140,\n  minergie: MINERGIE_CERTIFICATE.MINERGIE_P,\n  numberOfFloors: 8,\n  parkingInside: 1,\n  parkingOutside: 2,\n  propertyType: PROPERTY_TYPE.FLAT,\n  renovationYear: 2010,\n  roomCount: 5,\n  yearlyExpenses: 12000,\n  zipCode: 1000,\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/test/testFactories/fakes.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/pdf/server/test/testFactories/fakes.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  FAKE_SALARY: () => FAKE_SALARY,\n  FAKE_BANK_FORTUNE: () => FAKE_BANK_FORTUNE,\n  FAKE_INSURANCE_2: () => FAKE_INSURANCE_2,\n  FAKE_INSURANCE_3A: () => FAKE_INSURANCE_3A,\n  FAKE_BANK_3A: () => FAKE_BANK_3A,\n  FAKE_INSURANCE_3B: () => FAKE_INSURANCE_3B,\n  FAKE_THIRD_PARTY_FORTUNE: () => FAKE_THIRD_PARTY_FORTUNE,\n  FAKE_OTHER_INCOME: () => FAKE_OTHER_INCOME,\n  FAKE_OTHER_FORTUNE: () => FAKE_OTHER_FORTUNE,\n  FAKE_EXPENSES: () => FAKE_EXPENSES,\n  FAKE_REAL_ESTATE: () => FAKE_REAL_ESTATE,\n  FAKE_BONUS: () => FAKE_BONUS,\n  FAKE_LOAN_NAME: () => FAKE_LOAN_NAME,\n  FAKE_USER: () => FAKE_USER,\n  fakeOwnFunds: () => fakeOwnFunds,\n  fakeBankFortuneWithdraw: () => fakeBankFortuneWithdraw,\n  fakeInsurance2Withdraw: () => fakeInsurance2Withdraw,\n  fakeInsurance2Pledge: () => fakeInsurance2Pledge,\n  fakeInsurance3AWithdraw: () => fakeInsurance3AWithdraw,\n  fakeInsurance3APledge: () => fakeInsurance3APledge,\n  fakeInsurance3BWithdraw: () => fakeInsurance3BWithdraw,\n  fakeInsurance3BPledge: () => fakeInsurance3BPledge,\n  fakeBank3AWithdraw: () => fakeBank3AWithdraw,\n  fakeBank3APledge: () => fakeBank3APledge,\n  fakeBank3BWithdraw: () => fakeBank3BWithdraw,\n  fakeBank3BPledge: () => fakeBank3BPledge,\n  fakeThirdPartyFortuneWithdraw: () => fakeThirdPartyFortuneWithdraw,\n  FAKE_WANTED_LOAN: () => FAKE_WANTED_LOAN,\n  FAKE_NOTARY_FEES: () => FAKE_NOTARY_FEES,\n  fakeStructure: () => fakeStructure,\n  fakeBorrower: () => fakeBorrower,\n  FAKE_HOUSE: () => FAKE_HOUSE,\n  FAKE_APPARTMENT: () => FAKE_APPARTMENT\n});\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 0);\nlet sample;\nmodule.link(\"lodash/sample\", {\n  default(v) {\n    sample = v;\n  }\n\n}, 1);\nlet EXPENSES, FLAT_TYPE, HOUSE_TYPE, MINERGIE_CERTIFICATE, OTHER_INCOME, OWN_FUNDS_TYPES, OWN_FUNDS_USAGE_TYPES, PROPERTY_TYPE;\nmodule.link(\"../../../../constants\", {\n  EXPENSES(v) {\n    EXPENSES = v;\n  },\n\n  FLAT_TYPE(v) {\n    FLAT_TYPE = v;\n  },\n\n  HOUSE_TYPE(v) {\n    HOUSE_TYPE = v;\n  },\n\n  MINERGIE_CERTIFICATE(v) {\n    MINERGIE_CERTIFICATE = v;\n  },\n\n  OTHER_INCOME(v) {\n    OTHER_INCOME = v;\n  },\n\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  },\n\n  OWN_FUNDS_USAGE_TYPES(v) {\n    OWN_FUNDS_USAGE_TYPES = v;\n  },\n\n  PROPERTY_TYPE(v) {\n    PROPERTY_TYPE = v;\n  }\n\n}, 2);\nconst FAKE_SALARY = 150000;\nconst FAKE_BANK_FORTUNE = 1000000;\nconst FAKE_INSURANCE_2 = {\n  insurance2: [{\n    value: 200000\n  }]\n};\nconst FAKE_INSURANCE_3A = {\n  insurance3A: [{\n    value: 150000\n  }]\n};\nconst FAKE_BANK_3A = {\n  bank3A: [{\n    value: 250000\n  }]\n};\nconst FAKE_INSURANCE_3B = {\n  insurance3B: [{\n    value: 50000\n  }]\n};\nconst FAKE_THIRD_PARTY_FORTUNE = {\n  thirdPartyFortune: 5000\n};\nconst FAKE_OTHER_INCOME = {\n  otherIncome: [{\n    description: OTHER_INCOME.PENSIONS,\n    value: 150000\n  }, {\n    description: OTHER_INCOME.WELFARE,\n    value: 25000\n  }]\n};\nconst FAKE_OTHER_FORTUNE = {\n  otherFortune: [{\n    value: 10000\n  }]\n};\nconst FAKE_EXPENSES = {\n  expenses: [{\n    description: EXPENSES.PENSIONS,\n    value: 12000\n  }, {\n    description: EXPENSES.PERSONAL_LOAN,\n    value: 3000\n  }]\n};\nconst FAKE_REAL_ESTATE = {\n  realEstate: [{\n    value: 1200000,\n    loan: 850000\n  }]\n};\nconst FAKE_BONUS = {\n  bonusExists: true,\n  bonus2015: 2000,\n  bonus2016: 5000,\n  bonus2017: 1500,\n  bonus2018: 5000\n};\nconst FAKE_LOAN_NAME = '18-0001';\nconst FAKE_USER = {\n  user: {\n    assignedEmployee: {\n      name: 'Bob Dylan',\n      email: 'bob.dylan@gmail.com',\n      phoneNumber: '+41 22 577 45 23'\n    }\n  }\n};\n\nconst fakeOwnFunds = ({\n  borrowerId,\n  type,\n  value,\n  usageType\n}) => ({\n  borrowerId,\n  type,\n  value,\n  usageType\n});\n\nconst fakeBankFortuneWithdraw = borrowerId => fakeOwnFunds({\n  borrowerId,\n  type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n  value: 200000,\n  usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW\n});\n\nconst fakeInsurance2Withdraw = borrowerId => fakeOwnFunds({\n  borrowerId,\n  type: OWN_FUNDS_TYPES.INSURANCE_2,\n  value: 150000,\n  usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW\n});\n\nconst fakeInsurance2Pledge = borrowerId => fakeOwnFunds({\n  borrowerId,\n  type: OWN_FUNDS_TYPES.INSURANCE_2,\n  value: 25000,\n  usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE\n});\n\nconst fakeInsurance3AWithdraw = borrowerId => fakeOwnFunds({\n  borrowerId,\n  type: OWN_FUNDS_TYPES.INSURANCE_3A,\n  value: 85000,\n  usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW\n});\n\nconst fakeInsurance3APledge = borrowerId => fakeOwnFunds({\n  borrowerId,\n  type: OWN_FUNDS_TYPES.INSURANCE_3A,\n  value: 125000,\n  usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE\n});\n\nconst fakeInsurance3BWithdraw = borrowerId => fakeOwnFunds({\n  borrowerId,\n  type: OWN_FUNDS_TYPES.INSURANCE_3B,\n  value: 80000,\n  usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW\n});\n\nconst fakeInsurance3BPledge = borrowerId => fakeOwnFunds({\n  borrowerId,\n  type: OWN_FUNDS_TYPES.INSURANCE_3B,\n  value: 15000,\n  usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE\n});\n\nconst fakeBank3AWithdraw = borrowerId => fakeOwnFunds({\n  borrowerId,\n  type: OWN_FUNDS_TYPES.BANK_3A,\n  value: 75000,\n  usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW\n});\n\nconst fakeBank3APledge = borrowerId => fakeOwnFunds({\n  borrowerId,\n  type: OWN_FUNDS_TYPES.BANK_3A,\n  value: 50000,\n  usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE\n});\n\nconst fakeBank3BWithdraw = borrowerId => fakeOwnFunds({\n  borrowerId,\n  type: OWN_FUNDS_TYPES.BANK_3B,\n  value: 75000,\n  usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW\n});\n\nconst fakeBank3BPledge = borrowerId => fakeOwnFunds({\n  borrowerId,\n  type: OWN_FUNDS_TYPES.BANK_3B,\n  value: 18000,\n  usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE\n});\n\nconst fakeThirdPartyFortuneWithdraw = borrowerId => fakeOwnFunds({\n  borrowerId,\n  type: OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n  value: 3000,\n  usageType: OWN_FUNDS_TYPES.WITHDRAW\n});\n\nconst FAKE_WANTED_LOAN = 800000;\nconst FAKE_NOTARY_FEES = 14500;\n\nconst fakeStructure = ({\n  borrowerIds,\n  propertyId,\n  withBank3APledge,\n  withBank3AWithdraw,\n  withBank3BPledge,\n  withBank3BWithdraw,\n  withBankWithdraw,\n  withCustomNotaryFees,\n  withInsurance2Pledge,\n  withInsurance2Withdraw,\n  withInsurance3APledge,\n  withInsurance3AWithdraw,\n  withInsurance3BPledge,\n  withInsurance3BWithdraw,\n  withThirdPartyFortuneWithdraw\n}) => ({\n  id: Random.id(),\n  propertyId,\n  wantedLoan: FAKE_WANTED_LOAN,\n  notaryFees: withCustomNotaryFees ? FAKE_NOTARY_FEES : 0.05 * FAKE_WANTED_LOAN,\n  ownFunds: [withBankWithdraw ? fakeBankFortuneWithdraw(sample(borrowerIds)) : null, withInsurance2Withdraw ? fakeInsurance2Withdraw(sample(borrowerIds)) : null, withInsurance2Pledge ? fakeInsurance2Pledge(sample(borrowerIds)) : null, withInsurance3AWithdraw ? fakeInsurance3AWithdraw(sample(borrowerIds)) : null, withInsurance3APledge ? fakeInsurance3APledge(sample(borrowerIds)) : null, withBank3AWithdraw ? fakeBank3AWithdraw(sample(borrowerIds)) : null, withBank3APledge ? fakeBank3APledge(sample(borrowerIds)) : null, withInsurance3BWithdraw ? fakeInsurance3BWithdraw(sample(borrowerIds)) : null, withInsurance3BPledge ? fakeInsurance3BPledge(sample(borrowerIds)) : null, withBank3BWithdraw ? fakeBank3BWithdraw(sample(borrowerIds)) : null, withBank3BPledge ? fakeBank3BPledge(sample(borrowerIds)) : null, withThirdPartyFortuneWithdraw ? fakeThirdPartyFortuneWithdraw(sample(borrowerIds)) : null].filter(x => x)\n});\n\nconst fakeBorrower = ({\n  borrowerInfos,\n  withBank3A,\n  withBankFortune,\n  withBonus,\n  withExpenses,\n  withInsurance2,\n  withInsurance3A,\n  withInsurance3B,\n  withOtherFortune,\n  withOtherIncome,\n  withRealEstate,\n  withSalary,\n  withThirdPartyFortune\n}) => (0, _objectSpread2.default)({\n  bankFortune: withBankFortune ? FAKE_BANK_FORTUNE : 0,\n  salary: withSalary ? FAKE_SALARY : 0\n}, withBank3A ? FAKE_BANK_3A : {}, withBonus ? FAKE_BONUS : {}, withExpenses ? FAKE_EXPENSES : {}, withInsurance2 ? FAKE_INSURANCE_2 : {}, withInsurance3A ? FAKE_INSURANCE_3A : {}, withInsurance3B ? FAKE_INSURANCE_3B : {}, withOtherFortune ? FAKE_OTHER_FORTUNE : {}, withOtherIncome ? FAKE_OTHER_INCOME : {}, withRealEstate ? FAKE_REAL_ESTATE : {}, withThirdPartyFortune ? FAKE_THIRD_PARTY_FORTUNE : {}, borrowerInfos);\n\nconst FAKE_HOUSE = {\n  address1: 'Rue du Succès 18',\n  city: 'Lausanne',\n  constructionYear: 1987,\n  houseType: HOUSE_TYPE.DETACHED,\n  landArea: 300,\n  minergie: MINERGIE_CERTIFICATE.MINERGIE_P,\n  parkingInside: 1,\n  parkingOutside: 2,\n  propertyType: PROPERTY_TYPE.HOUSE,\n  renovationYear: 2010,\n  roomCount: 5,\n  volume: 1500,\n  yearlyExpenses: 12000,\n  zipCode: 1000\n};\nconst FAKE_APPARTMENT = {\n  address1: 'Rue du Succès 18',\n  city: 'Lausanne',\n  constructionYear: 1987,\n  flatType: FLAT_TYPE.SINGLE_FLOOR_APARTMENT,\n  floorNumber: 4,\n  insideArea: 140,\n  minergie: MINERGIE_CERTIFICATE.MINERGIE_P,\n  numberOfFloors: 8,\n  parkingInside: 1,\n  parkingOutside: 2,\n  propertyType: PROPERTY_TYPE.FLAT,\n  renovationYear: 2010,\n  roomCount: 5,\n  yearlyExpenses: 12000,\n  zipCode: 1000\n};","map":{"version":3,"sources":["imports/core/api/pdf/server/test/testFactories/fakes.js"],"names":["Random","FAKE_SALARY","FAKE_BANK_FORTUNE","FAKE_INSURANCE_2","insurance2","value","FAKE_INSURANCE_3A","insurance3A","FAKE_BANK_3A","bank3A","FAKE_INSURANCE_3B","insurance3B","FAKE_THIRD_PARTY_FORTUNE","thirdPartyFortune","FAKE_OTHER_INCOME","otherIncome","description","OTHER_INCOME","FAKE_OTHER_FORTUNE","otherFortune","FAKE_EXPENSES","expenses","EXPENSES","FAKE_REAL_ESTATE","realEstate","loan","FAKE_BONUS","bonusExists","bonus2015","bonus2016","bonus2017","bonus2018","FAKE_LOAN_NAME","FAKE_USER","user","assignedEmployee","name","email","phoneNumber","fakeOwnFunds","usageType","fakeBankFortuneWithdraw","borrowerId","type","OWN_FUNDS_TYPES","OWN_FUNDS_USAGE_TYPES","WITHDRAW","fakeInsurance2Withdraw","fakeInsurance2Pledge","PLEDGE","fakeInsurance3AWithdraw","fakeInsurance3APledge","fakeInsurance3BWithdraw","fakeInsurance3BPledge","fakeBank3AWithdraw","fakeBank3APledge","fakeBank3BWithdraw","fakeBank3BPledge","fakeThirdPartyFortuneWithdraw","FAKE_WANTED_LOAN","FAKE_NOTARY_FEES","fakeStructure","withThirdPartyFortuneWithdraw","id","wantedLoan","notaryFees","withCustomNotaryFees","ownFunds","withBankWithdraw","sample","withInsurance2Withdraw","withInsurance2Pledge","withInsurance3AWithdraw","withInsurance3APledge","withBank3AWithdraw","withBank3APledge","withInsurance3BWithdraw","withInsurance3BPledge","withBank3BWithdraw","withBank3BPledge","x","fakeBorrower","withThirdPartyFortune","bankFortune","withBankFortune","salary","withSalary","withBank3A","withBonus","withExpenses","withInsurance2","withInsurance3A","withInsurance3B","withOtherFortune","withOtherIncome","withRealEstate","borrowerInfos","FAKE_HOUSE","address1","city","constructionYear","houseType","HOUSE_TYPE","landArea","minergie","MINERGIE_CERTIFICATE","parkingInside","parkingOutside","propertyType","PROPERTY_TYPE","renovationYear","roomCount","volume","yearlyExpenses","zipCode","FAKE_APPARTMENT","flatType","FLAT_TYPE","floorNumber","insideArea","numberOfFloors"],"mappings":"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","sourcesContent":["import { Random } from 'meteor/random';\nimport sample from 'lodash/sample';\n\nimport {\n  EXPENSES,\n  FLAT_TYPE,\n  HOUSE_TYPE,\n  MINERGIE_CERTIFICATE,\n  OTHER_INCOME,\n  OWN_FUNDS_TYPES,\n  OWN_FUNDS_USAGE_TYPES,\n  PROPERTY_TYPE,\n} from '../../../../constants';\n\nexport const FAKE_SALARY = 150000;\nexport const FAKE_BANK_FORTUNE = 1000000;\nexport const FAKE_INSURANCE_2 = { insurance2: [{ value: 200000 }] };\nexport const FAKE_INSURANCE_3A = { insurance3A: [{ value: 150000 }] };\nexport const FAKE_BANK_3A = { bank3A: [{ value: 250000 }] };\nexport const FAKE_INSURANCE_3B = { insurance3B: [{ value: 50000 }] };\nexport const FAKE_THIRD_PARTY_FORTUNE = {\n  thirdPartyFortune: 5000,\n};\nexport const FAKE_OTHER_INCOME = {\n  otherIncome: [\n    { description: OTHER_INCOME.PENSIONS, value: 150000 },\n    { description: OTHER_INCOME.WELFARE, value: 25000 },\n  ],\n};\nexport const FAKE_OTHER_FORTUNE = {\n  otherFortune: [{ value: 10000 }],\n};\nexport const FAKE_EXPENSES = {\n  expenses: [\n    { description: EXPENSES.PENSIONS, value: 12000 },\n    { description: EXPENSES.PERSONAL_LOAN, value: 3000 },\n  ],\n};\n\nexport const FAKE_REAL_ESTATE = {\n  realEstate: [{ value: 1200000, loan: 850000 }],\n};\n\nexport const FAKE_BONUS = {\n  bonusExists: true,\n  bonus2015: 2000,\n  bonus2016: 5000,\n  bonus2017: 1500,\n  bonus2018: 5000,\n};\n\nexport const FAKE_LOAN_NAME = '18-0001';\nexport const FAKE_USER = {\n  user: {\n    assignedEmployee: {\n      name: 'Bob Dylan',\n      email: 'bob.dylan@gmail.com',\n      phoneNumber: '+41 22 577 45 23',\n    },\n  },\n};\n\nexport const fakeOwnFunds = ({ borrowerId, type, value, usageType }) => ({\n  borrowerId,\n  type,\n  value,\n  usageType,\n});\n\nexport const fakeBankFortuneWithdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n    value: 200000,\n    usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n  });\nexport const fakeInsurance2Withdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.INSURANCE_2,\n    value: 150000,\n    usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n  });\nexport const fakeInsurance2Pledge = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.INSURANCE_2,\n    value: 25000,\n    usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n  });\nexport const fakeInsurance3AWithdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.INSURANCE_3A,\n    value: 85000,\n    usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n  });\nexport const fakeInsurance3APledge = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.INSURANCE_3A,\n    value: 125000,\n    usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n  });\nexport const fakeInsurance3BWithdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.INSURANCE_3B,\n    value: 80000,\n    usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n  });\nexport const fakeInsurance3BPledge = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.INSURANCE_3B,\n    value: 15000,\n    usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n  });\nexport const fakeBank3AWithdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.BANK_3A,\n    value: 75000,\n    usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n  });\nexport const fakeBank3APledge = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.BANK_3A,\n    value: 50000,\n    usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n  });\nexport const fakeBank3BWithdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.BANK_3B,\n    value: 75000,\n    usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n  });\nexport const fakeBank3BPledge = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.BANK_3B,\n    value: 18000,\n    usageType: OWN_FUNDS_USAGE_TYPES.PLEDGE,\n  });\nexport const fakeThirdPartyFortuneWithdraw = borrowerId =>\n  fakeOwnFunds({\n    borrowerId,\n    type: OWN_FUNDS_TYPES.THIRD_PARTY_FORTUNE,\n    value: 3000,\n    usageType: OWN_FUNDS_TYPES.WITHDRAW,\n  });\n\nexport const FAKE_WANTED_LOAN = 800000;\nexport const FAKE_NOTARY_FEES = 14500;\n\nexport const fakeStructure = ({\n  borrowerIds,\n  propertyId,\n  withBank3APledge,\n  withBank3AWithdraw,\n  withBank3BPledge,\n  withBank3BWithdraw,\n  withBankWithdraw,\n  withCustomNotaryFees,\n  withInsurance2Pledge,\n  withInsurance2Withdraw,\n  withInsurance3APledge,\n  withInsurance3AWithdraw,\n  withInsurance3BPledge,\n  withInsurance3BWithdraw,\n  withThirdPartyFortuneWithdraw,\n}) => ({\n  id: Random.id(),\n  propertyId,\n  wantedLoan: FAKE_WANTED_LOAN,\n  notaryFees: withCustomNotaryFees ? FAKE_NOTARY_FEES : 0.05 * FAKE_WANTED_LOAN,\n  ownFunds: [\n    withBankWithdraw ? fakeBankFortuneWithdraw(sample(borrowerIds)) : null,\n    withInsurance2Withdraw ? fakeInsurance2Withdraw(sample(borrowerIds)) : null,\n    withInsurance2Pledge ? fakeInsurance2Pledge(sample(borrowerIds)) : null,\n    withInsurance3AWithdraw\n      ? fakeInsurance3AWithdraw(sample(borrowerIds))\n      : null,\n    withInsurance3APledge ? fakeInsurance3APledge(sample(borrowerIds)) : null,\n    withBank3AWithdraw ? fakeBank3AWithdraw(sample(borrowerIds)) : null,\n    withBank3APledge ? fakeBank3APledge(sample(borrowerIds)) : null,\n    withInsurance3BWithdraw\n      ? fakeInsurance3BWithdraw(sample(borrowerIds))\n      : null,\n    withInsurance3BPledge ? fakeInsurance3BPledge(sample(borrowerIds)) : null,\n    withBank3BWithdraw ? fakeBank3BWithdraw(sample(borrowerIds)) : null,\n    withBank3BPledge ? fakeBank3BPledge(sample(borrowerIds)) : null,\n    withThirdPartyFortuneWithdraw\n      ? fakeThirdPartyFortuneWithdraw(sample(borrowerIds))\n      : null,\n  ].filter(x => x),\n});\n\nexport const fakeBorrower = ({\n  borrowerInfos,\n  withBank3A,\n  withBankFortune,\n  withBonus,\n  withExpenses,\n  withInsurance2,\n  withInsurance3A,\n  withInsurance3B,\n  withOtherFortune,\n  withOtherIncome,\n  withRealEstate,\n  withSalary,\n  withThirdPartyFortune,\n}) => ({\n  bankFortune: withBankFortune ? FAKE_BANK_FORTUNE : 0,\n  salary: withSalary ? FAKE_SALARY : 0,\n  ...(withBank3A ? FAKE_BANK_3A : {}),\n  ...(withBonus ? FAKE_BONUS : {}),\n  ...(withExpenses ? FAKE_EXPENSES : {}),\n  ...(withInsurance2 ? FAKE_INSURANCE_2 : {}),\n  ...(withInsurance3A ? FAKE_INSURANCE_3A : {}),\n  ...(withInsurance3B ? FAKE_INSURANCE_3B : {}),\n  ...(withOtherFortune ? FAKE_OTHER_FORTUNE : {}),\n  ...(withOtherIncome ? FAKE_OTHER_INCOME : {}),\n  ...(withRealEstate ? FAKE_REAL_ESTATE : {}),\n  ...(withThirdPartyFortune ? FAKE_THIRD_PARTY_FORTUNE : {}),\n  ...borrowerInfos,\n});\n\nexport const FAKE_HOUSE = {\n  address1: 'Rue du Succès 18',\n  city: 'Lausanne',\n  constructionYear: 1987,\n  houseType: HOUSE_TYPE.DETACHED,\n  landArea: 300,\n  minergie: MINERGIE_CERTIFICATE.MINERGIE_P,\n  parkingInside: 1,\n  parkingOutside: 2,\n  propertyType: PROPERTY_TYPE.HOUSE,\n  renovationYear: 2010,\n  roomCount: 5,\n  volume: 1500,\n  yearlyExpenses: 12000,\n  zipCode: 1000,\n};\n\nexport const FAKE_APPARTMENT = {\n  address1: 'Rue du Succès 18',\n  city: 'Lausanne',\n  constructionYear: 1987,\n  flatType: FLAT_TYPE.SINGLE_FLOOR_APARTMENT,\n  floorNumber: 4,\n  insideArea: 140,\n  minergie: MINERGIE_CERTIFICATE.MINERGIE_P,\n  numberOfFloors: 8,\n  parkingInside: 1,\n  parkingOutside: 2,\n  propertyType: PROPERTY_TYPE.FLAT,\n  renovationYear: 2010,\n  roomCount: 5,\n  yearlyExpenses: 12000,\n  zipCode: 1000,\n};\n"]},"sourceType":"script","hash":"703f0c6f48ce3acb712092b15f29f6f1f368cb5c"}
