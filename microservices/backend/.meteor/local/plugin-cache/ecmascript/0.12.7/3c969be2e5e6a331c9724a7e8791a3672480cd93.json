{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/phoneFormatting/test/phoneFormatting.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/utils/phoneFormatting/test/phoneFormatting.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/phoneFormatting/test/phoneFormatting.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/phoneFormatting/test/phoneFormatting.spec.js"],"names":["expect","formatPhoneNumber","describe","it","to","equal"],"mappings":"AAAA;;AACA;AACA,SAASA,MAAT,QAAuB,MAAvB;AAEA,SAASC,iBAAT,QAAkC,IAAlC;AAEAC,QAAQ,CAAC,mBAAD,EAAsB,MAAM;AAClCC,EAAAA,EAAE,CAAC,wBAAD,EAA2B,MAAM;AACjCH,IAAAA,MAAM,CAACC,iBAAiB,CAAC,WAAD,CAAlB,CAAN,CAAuCG,EAAvC,CAA0CC,KAA1C,CAAgD,kBAAhD;AACAL,IAAAA,MAAM,CAACC,iBAAiB,CAAC,UAAD,CAAlB,CAAN,CAAsCG,EAAtC,CAAyCC,KAAzC,CAA+C,UAA/C;AACAL,IAAAA,MAAM,CAACC,iBAAiB,CAAC,cAAD,CAAlB,CAAN,CAA0CG,EAA1C,CAA6CC,KAA7C,CAAmD,kBAAnD;AACAL,IAAAA,MAAM,CAACC,iBAAiB,CAAC,cAAD,CAAlB,CAAN,CAA0CG,EAA1C,CAA6CC,KAA7C,CAAmD,kBAAnD;AACD,GALC,CAAF;AAOAF,EAAAA,EAAE,CAAC,4CAAD,EAA+C,MAAM;AACrDH,IAAAA,MAAM,CAACC,iBAAiB,CAAC,GAAD,CAAlB,CAAN,CAA+BG,EAA/B,CAAkCC,KAAlC,CAAwC,GAAxC;AACAL,IAAAA,MAAM,CAACC,iBAAiB,CAAC,IAAD,CAAlB,CAAN,CAAgCG,EAAhC,CAAmCC,KAAnC,CAAyC,QAAzC;AACAL,IAAAA,MAAM,CAACC,iBAAiB,CAAC,UAAD,CAAlB,CAAN,CAAsCG,EAAtC,CAAyCC,KAAzC,CAA+C,cAA/C;AACD,GAJC,CAAF;AAMAF,EAAAA,EAAE,CAAC,kCAAD,EAAqC,MAAM;AAC3CH,IAAAA,MAAM,CAACC,iBAAiB,CAAC,cAAD,CAAlB,CAAN,CAA0CG,EAA1C,CAA6CC,KAA7C,CAAmD,mBAAnD;AACD,GAFC,CAAF;AAGD,CAjBO,CAAR","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { formatPhoneNumber } from '..';\n\ndescribe('formatPhoneNumber', () => {\n  it('formats a swiss number', () => {\n    expect(formatPhoneNumber('225660110')).to.equal('+41 22 566 01 10');\n    expect(formatPhoneNumber('00412332')).to.equal('+41 2332');\n    expect(formatPhoneNumber('22/566/01/10')).to.equal('+41 22 566 01 10');\n    expect(formatPhoneNumber('22.566.01.10')).to.equal('+41 22 566 01 10');\n  });\n\n  it('does not format an incomplete swiss number', () => {\n    expect(formatPhoneNumber('1')).to.equal('1');\n    expect(formatPhoneNumber('12')).to.equal('+41 12');\n    expect(formatPhoneNumber('22566011')).to.equal('+41 22566011');\n  });\n\n  it('formats foreign numbers properly', () => {\n    expect(formatPhoneNumber('+33645781457')).to.equal('+33 6 45 78 14 57');\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/phoneFormatting/test/phoneFormatting.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/phoneFormatting/test/phoneFormatting.spec.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet formatPhoneNumber;\nmodule.link(\"..\", {\n  formatPhoneNumber(v) {\n    formatPhoneNumber = v;\n  }\n\n}, 1);\ndescribe('formatPhoneNumber', () => {\n  it('formats a swiss number', () => {\n    expect(formatPhoneNumber('225660110')).to.equal('+41 22 566 01 10');\n    expect(formatPhoneNumber('00412332')).to.equal('+41 2332');\n    expect(formatPhoneNumber('22/566/01/10')).to.equal('+41 22 566 01 10');\n    expect(formatPhoneNumber('22.566.01.10')).to.equal('+41 22 566 01 10');\n  });\n  it('does not format an incomplete swiss number', () => {\n    expect(formatPhoneNumber('1')).to.equal('1');\n    expect(formatPhoneNumber('12')).to.equal('+41 12');\n    expect(formatPhoneNumber('22566011')).to.equal('+41 22566011');\n  });\n  it('formats foreign numbers properly', () => {\n    expect(formatPhoneNumber('+33645781457')).to.equal('+33 6 45 78 14 57');\n  });\n});","map":{"version":3,"sources":["imports/core/utils/phoneFormatting/test/phoneFormatting.spec.js"],"names":["describe","it","expect","formatPhoneNumber"],"mappings":"AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAMAA,QAAQ,CAAA,mBAAA,EAAsB,MAAM;AAClCC,EAAAA,EAAE,CAAA,wBAAA,EAA2B,MAAM;AACjCC,IAAAA,MAAM,CAACC,iBAAiB,CAAxBD,WAAwB,CAAlB,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,kBAAAA;AACAA,IAAAA,MAAM,CAACC,iBAAiB,CAAxBD,UAAwB,CAAlB,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,UAAAA;AACAA,IAAAA,MAAM,CAACC,iBAAiB,CAAxBD,cAAwB,CAAlB,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,kBAAAA;AACAA,IAAAA,MAAM,CAACC,iBAAiB,CAAxBD,cAAwB,CAAlB,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,kBAAAA;AAJFD,GAAE,CAAFA;AAOAA,EAAAA,EAAE,CAAA,4CAAA,EAA+C,MAAM;AACrDC,IAAAA,MAAM,CAACC,iBAAiB,CAAxBD,GAAwB,CAAlB,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,GAAAA;AACAA,IAAAA,MAAM,CAACC,iBAAiB,CAAxBD,IAAwB,CAAlB,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,QAAAA;AACAA,IAAAA,MAAM,CAACC,iBAAiB,CAAxBD,UAAwB,CAAlB,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,cAAAA;AAHFD,GAAE,CAAFA;AAMAA,EAAAA,EAAE,CAAA,kCAAA,EAAqC,MAAM;AAC3CC,IAAAA,MAAM,CAACC,iBAAiB,CAAxBD,cAAwB,CAAlB,CAANA,CAAAA,EAAAA,CAAAA,KAAAA,CAAAA,mBAAAA;AADFD,GAAE,CAAFA;AAdFD,CAAQ,CAARA","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { formatPhoneNumber } from '..';\n\ndescribe('formatPhoneNumber', () => {\n  it('formats a swiss number', () => {\n    expect(formatPhoneNumber('225660110')).to.equal('+41 22 566 01 10');\n    expect(formatPhoneNumber('00412332')).to.equal('+41 2332');\n    expect(formatPhoneNumber('22/566/01/10')).to.equal('+41 22 566 01 10');\n    expect(formatPhoneNumber('22.566.01.10')).to.equal('+41 22 566 01 10');\n  });\n\n  it('does not format an incomplete swiss number', () => {\n    expect(formatPhoneNumber('1')).to.equal('1');\n    expect(formatPhoneNumber('12')).to.equal('+41 12');\n    expect(formatPhoneNumber('22566011')).to.equal('+41 22566011');\n  });\n\n  it('formats foreign numbers properly', () => {\n    expect(formatPhoneNumber('+33645781457')).to.equal('+33 6 45 78 14 57');\n  });\n});\n"]},"sourceType":"script","hash":"3c969be2e5e6a331c9724a7e8791a3672480cd93"}
