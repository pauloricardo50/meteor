{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/epotek:accounts-ui/imports/ui/components/Field.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/epotek:accounts-ui/imports/ui/components/Field.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/epotek:accounts-ui/imports/ui/components/Field.jsx","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/epotek:accounts-ui/imports/ui/components/Field.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/epotek:accounts-ui/imports/ui/components/Field.jsx"}},"code":"module.export({\n  Field: () => Field\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 2);\n\nclass Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mount: true\n    };\n  }\n\n  triggerUpdate() {\n    // Trigger an onChange on inital load, to support browser prefilled values.\n    const {\n      onChange\n    } = this.props;\n\n    if (this.input && onChange) {\n      onChange({\n        target: {\n          value: this.input.value\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.triggerUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Re-mount component so that we don't expose browser prefilled passwords if the component was\n    // a password before and now something else.\n    if (prevProps.id !== this.props.id) {\n      this.setState({\n        mount: false\n      });\n    } else if (!this.state.mount) {\n      this.setState({\n        mount: true\n      });\n      this.triggerUpdate();\n    }\n  }\n\n  render() {\n    const {\n      id,\n      hint,\n      label,\n      type = 'text',\n      onChange,\n      required = false,\n      className = 'field',\n      defaultValue = '',\n      message\n    } = this.props;\n    const {\n      mount = true\n    } = this.state;\n\n    if (type == 'notice') {\n      return React.createElement(\"div\", {\n        className: className\n      }, label);\n    }\n\n    return mount ? React.createElement(\"div\", {\n      className: className\n    }, React.createElement(\"label\", {\n      htmlFor: id\n    }, label), React.createElement(\"input\", {\n      id: id,\n      ref: ref => this.input = ref,\n      type: type,\n      onChange: onChange,\n      placeholder: hint,\n      defaultValue: defaultValue\n    }), message && React.createElement(\"span\", {\n      className: ['message', message.type].join(' ').trim()\n    }, message.message)) : null;\n  }\n\n}\n\nField.propTypes = {\n  onChange: PropTypes.func\n};\nAccounts.ui.Field = Field;","map":{"version":3,"sources":["packages/epotek:accounts-ui/imports/ui/components/Field.jsx"],"names":["module","export","Field","React","link","default","v","PropTypes","Accounts","Component","constructor","props","state","mount","triggerUpdate","onChange","input","target","value","componentDidMount","componentDidUpdate","prevProps","id","setState","render","hint","label","type","required","className","defaultValue","message","ref","join","trim","propTypes","func","ui"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,KAAK,EAAC,MAAIA;AAAX,CAAd;AAAiC,IAAIC,KAAJ;AAAUH,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACH,IAAAA,KAAK,GAACG,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIC,SAAJ;AAAcP,MAAM,CAACI,IAAP,CAAY,YAAZ,EAAyB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACC,IAAAA,SAAS,GAACD,CAAV;AAAY;;AAAxB,CAAzB,EAAmD,CAAnD;AAAsD,IAAIE,QAAJ;AAAaR,MAAM,CAACI,IAAP,CAAY,sBAAZ,EAAmC;AAACI,EAAAA,QAAQ,CAACF,CAAD,EAAG;AAACE,IAAAA,QAAQ,GAACF,CAAT;AAAW;;AAAxB,CAAnC,EAA6D,CAA7D;;AAIlK,MAAMJ,KAAN,SAAoBC,KAAK,CAACM,SAA1B,CAAoC;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,aAAa,GAAG;AACd;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKJ,KAA1B;;AACA,QAAI,KAAKK,KAAL,IAAcD,QAAlB,EAA4B;AAC1BA,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAApB;AAAV,OAAD,CAAR;AACD;AACF;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,aAAL;AACD;;AAEDM,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B;AACA;AACA,QAAIA,SAAS,CAACC,EAAV,KAAiB,KAAKX,KAAL,CAAWW,EAAhC,EAAoC;AAClC,WAAKC,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAFD,MAEO,IAAI,CAAC,KAAKD,KAAL,CAAWC,KAAhB,EAAuB;AAC5B,WAAKU,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAAE;AAAT,OAAd;AACA,WAAKC,aAAL;AACD;AACF;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AACJF,MAAAA,EADI;AAEJG,MAAAA,IAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,IAAI,GAAG,MAJH;AAKJZ,MAAAA,QALI;AAMJa,MAAAA,QAAQ,GAAG,KANP;AAOJC,MAAAA,SAAS,GAAG,OAPR;AAQJC,MAAAA,YAAY,GAAG,EARX;AASJC,MAAAA;AATI,QAUF,KAAKpB,KAVT;AAWA,UAAM;AAAEE,MAAAA,KAAK,GAAG;AAAV,QAAmB,KAAKD,KAA9B;;AACA,QAAIe,IAAI,IAAI,QAAZ,EAAsB;AACpB,aAAO;AAAK,QAAA,SAAS,EAAEE;AAAhB,SAA4BH,KAA5B,CAAP;AACD;;AACD,WAAOb,KAAK,GACV;AAAK,MAAA,SAAS,EAAEgB;AAAhB,OACE;AAAO,MAAA,OAAO,EAAEP;AAAhB,OAAqBI,KAArB,CADF,EAEE;AACE,MAAA,EAAE,EAAEJ,EADN;AAEE,MAAA,GAAG,EAAEU,GAAG,IAAK,KAAKhB,KAAL,GAAagB,GAF5B;AAGE,MAAA,IAAI,EAAEL,IAHR;AAIE,MAAA,QAAQ,EAAEZ,QAJZ;AAKE,MAAA,WAAW,EAAEU,IALf;AAME,MAAA,YAAY,EAAEK;AANhB,MAFF,EAUGC,OAAO,IACN;AAAM,MAAA,SAAS,EAAE,CAAC,SAAD,EAAYA,OAAO,CAACJ,IAApB,EAA0BM,IAA1B,CAA+B,GAA/B,EAAoCC,IAApC;AAAjB,OACGH,OAAO,CAACA,OADX,CAXJ,CADU,GAiBR,IAjBJ;AAkBD;;AAjEwC;;AAoE3C7B,KAAK,CAACiC,SAAN,GAAkB;AAChBpB,EAAAA,QAAQ,EAAER,SAAS,CAAC6B;AADJ,CAAlB;AAIA5B,QAAQ,CAAC6B,EAAT,CAAYnC,KAAZ,GAAoBA,KAApB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Accounts } from 'meteor/accounts-base';\n\nexport class Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mount: true\n    };\n  }\n\n  triggerUpdate() {\n    // Trigger an onChange on inital load, to support browser prefilled values.\n    const { onChange } = this.props;\n    if (this.input && onChange) {\n      onChange({ target: { value: this.input.value } });\n    }\n  }\n\n  componentDidMount() {\n    this.triggerUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Re-mount component so that we don't expose browser prefilled passwords if the component was\n    // a password before and now something else.\n    if (prevProps.id !== this.props.id) {\n      this.setState({ mount: false });\n    } else if (!this.state.mount) {\n      this.setState({ mount: true });\n      this.triggerUpdate();\n    }\n  }\n\n  render() {\n    const {\n      id,\n      hint,\n      label,\n      type = 'text',\n      onChange,\n      required = false,\n      className = 'field',\n      defaultValue = '',\n      message\n    } = this.props;\n    const { mount = true } = this.state;\n    if (type == 'notice') {\n      return <div className={className}>{label}</div>;\n    }\n    return mount ? (\n      <div className={className}>\n        <label htmlFor={id}>{label}</label>\n        <input\n          id={id}\n          ref={ref => (this.input = ref)}\n          type={type}\n          onChange={onChange}\n          placeholder={hint}\n          defaultValue={defaultValue}\n        />\n        {message && (\n          <span className={['message', message.type].join(' ').trim()}>\n            {message.message}\n          </span>\n        )}\n      </div>\n    ) : null;\n  }\n}\n\nField.propTypes = {\n  onChange: PropTypes.func\n};\n\nAccounts.ui.Field = Field;\n"]},"sourceType":"script","hash":"ac3594bab625957ac2810b30e6dc65bae94a0687"}
