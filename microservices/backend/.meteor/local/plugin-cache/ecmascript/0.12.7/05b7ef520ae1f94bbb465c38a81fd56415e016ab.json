{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/CurrentownFunds.spec.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/CurrentownFunds.spec.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/CurrentownFunds.spec.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/CurrentownFunds.spec.jsx"],"names":["React","expect","shallow","sinon","T","CurrentOwnFunds","OWN_FUNDS_TYPES","describe","props","component","beforeEach","ownFunds","value","type","BANK_FORTUNE","borrowerId","borrowers","bankFortune","_id","structure","it","usageType","find","length","to","equal","at","id","include","firstName","contains","spy","handleOpen","simulate","calledOnce","exists"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'core/utils/testHelpers/enzyme';\nimport sinon from 'sinon';\n\nimport T from '../../../../../Translation';\nimport { CurrentOwnFunds } from '../CurrentOwnFunds';\nimport { OWN_FUNDS_TYPES } from '../../../../../../api/constants';\n\ndescribe('CurrentOwnFunds', () => {\n  let props;\n  const component = () => shallow(<CurrentOwnFunds {...props} />);\n\n  beforeEach(() => {\n    props = {\n      ownFunds: {\n        value: 10,\n        type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n        borrowerId: 'id',\n      },\n      borrowers: [{ bankFortune: 100, _id: 'id' }],\n      structure: { ownFunds: [] },\n    };\n  });\n\n  it('displays usageType only if it is defined', () => {\n    const usageType = 'some type';\n    expect(component().find(T).length).to.equal(1);\n\n    props.ownFunds = { usageType };\n\n    expect(component()\n      .find(T)\n      .at(1)\n      .props().id).to.include(usageType);\n  });\n\n  it('does not display firstName if there is only one', () => {\n    props.borrowers = [{ firstName: 'joe' }];\n    props.ownFunds = { borrowerId: 'id1' };\n    expect(component().contains('joe')).to.equal(false);\n  });\n\n  it('displays firstName if there are multiple', () => {\n    props.borrowers = [{ firstName: 'joe', _id: 'id1' }, {}];\n    props.ownFunds = { borrowerId: 'id1' };\n    expect(component().contains('joe')).to.equal(true);\n  });\n\n  it('opens modal if root div is clicked', () => {\n    const spy = sinon.spy();\n    props.handleOpen = spy;\n\n    component()\n      .find('div')\n      .simulate('click');\n    expect(spy.calledOnce).to.equal(true);\n  });\n\n  it('displays an error message if funds have changed to be lower than used', () => {\n    props.borrowers = [{ firstName: 'joe', _id: 'id1', bankFortune: 20 }];\n    props.ownFunds = [\n      {\n        borrowerId: 'id1',\n        value: 100000,\n        type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      },\n    ];\n    props.structure = { ownFunds: [props.ownFunds] };\n    expect(component()\n      .find('p.error')\n      .exists()).to.equal(true);\n  });\n\n  it('displays an error message if funds have changed to be lower than used', () => {\n    props.borrowers = [{ firstName: 'joe', _id: 'id1', bankFortune: 150 }];\n    props.ownFunds = {\n      borrowerId: 'id1',\n      value: 80,\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n    };\n    props.structure = {\n      ownFunds: [\n        props.ownFunds,\n        {\n          borrowerId: 'id1',\n          value: 80,\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n        },\n      ],\n    };\n    expect(component()\n      .find('p.error')\n      .exists()).to.equal(true);\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/CurrentownFunds.spec.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/CurrentownFunds.spec.jsx"}},"code":"var React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar expect;\nmodule.link(\"chai\", {\n  expect: function (v) {\n    expect = v;\n  }\n}, 1);\nvar shallow;\nmodule.link(\"../../../../../../utils/testHelpers/enzyme\", {\n  shallow: function (v) {\n    shallow = v;\n  }\n}, 2);\nvar sinon;\nmodule.link(\"sinon\", {\n  \"default\": function (v) {\n    sinon = v;\n  }\n}, 3);\nvar T;\nmodule.link(\"../../../../../Translation\", {\n  \"default\": function (v) {\n    T = v;\n  }\n}, 4);\nvar CurrentOwnFunds;\nmodule.link(\"../CurrentOwnFunds\", {\n  CurrentOwnFunds: function (v) {\n    CurrentOwnFunds = v;\n  }\n}, 5);\nvar OWN_FUNDS_TYPES;\nmodule.link(\"../../../../../../api/constants\", {\n  OWN_FUNDS_TYPES: function (v) {\n    OWN_FUNDS_TYPES = v;\n  }\n}, 6);\ndescribe('CurrentOwnFunds', function () {\n  var props;\n\n  var component = function () {\n    return shallow(React.createElement(CurrentOwnFunds, props));\n  };\n\n  beforeEach(function () {\n    props = {\n      ownFunds: {\n        value: 10,\n        type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n        borrowerId: 'id'\n      },\n      borrowers: [{\n        bankFortune: 100,\n        _id: 'id'\n      }],\n      structure: {\n        ownFunds: []\n      }\n    };\n  });\n  it('displays usageType only if it is defined', function () {\n    var usageType = 'some type';\n    expect(component().find(T).length).to.equal(1);\n    props.ownFunds = {\n      usageType: usageType\n    };\n    expect(component().find(T).at(1).props().id).to.include(usageType);\n  });\n  it('does not display firstName if there is only one', function () {\n    props.borrowers = [{\n      firstName: 'joe'\n    }];\n    props.ownFunds = {\n      borrowerId: 'id1'\n    };\n    expect(component().contains('joe')).to.equal(false);\n  });\n  it('displays firstName if there are multiple', function () {\n    props.borrowers = [{\n      firstName: 'joe',\n      _id: 'id1'\n    }, {}];\n    props.ownFunds = {\n      borrowerId: 'id1'\n    };\n    expect(component().contains('joe')).to.equal(true);\n  });\n  it('opens modal if root div is clicked', function () {\n    var spy = sinon.spy();\n    props.handleOpen = spy;\n    component().find('div').simulate('click');\n    expect(spy.calledOnce).to.equal(true);\n  });\n  it('displays an error message if funds have changed to be lower than used', function () {\n    props.borrowers = [{\n      firstName: 'joe',\n      _id: 'id1',\n      bankFortune: 20\n    }];\n    props.ownFunds = [{\n      borrowerId: 'id1',\n      value: 100000,\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE\n    }];\n    props.structure = {\n      ownFunds: [props.ownFunds]\n    };\n    expect(component().find('p.error').exists()).to.equal(true);\n  });\n  it('displays an error message if funds have changed to be lower than used', function () {\n    props.borrowers = [{\n      firstName: 'joe',\n      _id: 'id1',\n      bankFortune: 150\n    }];\n    props.ownFunds = {\n      borrowerId: 'id1',\n      value: 80,\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE\n    };\n    props.structure = {\n      ownFunds: [props.ownFunds, {\n        borrowerId: 'id1',\n        value: 80,\n        type: OWN_FUNDS_TYPES.BANK_FORTUNE\n      }]\n    };\n    expect(component().find('p.error').exists()).to.equal(true);\n  });\n});","map":{"version":3,"sources":["imports/core/components/Financing/client/FinancingOwnFunds/FinancingOwnFundsPicker/test/CurrentownFunds.spec.jsx"],"names":["describe","component","shallow","beforeEach","props","ownFunds","value","type","OWN_FUNDS_TYPES","borrowerId","borrowers","bankFortune","_id","structure","it","usageType","expect","firstName","spy","sinon","BANK_FORTUNE"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'core/utils/testHelpers/enzyme';\nimport sinon from 'sinon';\n\nimport T from '../../../../../Translation';\nimport { CurrentOwnFunds } from '../CurrentOwnFunds';\nimport { OWN_FUNDS_TYPES } from '../../../../../../api/constants';\n\ndescribe('CurrentOwnFunds', () => {\n  let props;\n  const component = () => shallow(<CurrentOwnFunds {...props} />);\n\n  beforeEach(() => {\n    props = {\n      ownFunds: {\n        value: 10,\n        type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n        borrowerId: 'id',\n      },\n      borrowers: [{ bankFortune: 100, _id: 'id' }],\n      structure: { ownFunds: [] },\n    };\n  });\n\n  it('displays usageType only if it is defined', () => {\n    const usageType = 'some type';\n    expect(component().find(T).length).to.equal(1);\n\n    props.ownFunds = { usageType };\n\n    expect(component()\n      .find(T)\n      .at(1)\n      .props().id).to.include(usageType);\n  });\n\n  it('does not display firstName if there is only one', () => {\n    props.borrowers = [{ firstName: 'joe' }];\n    props.ownFunds = { borrowerId: 'id1' };\n    expect(component().contains('joe')).to.equal(false);\n  });\n\n  it('displays firstName if there are multiple', () => {\n    props.borrowers = [{ firstName: 'joe', _id: 'id1' }, {}];\n    props.ownFunds = { borrowerId: 'id1' };\n    expect(component().contains('joe')).to.equal(true);\n  });\n\n  it('opens modal if root div is clicked', () => {\n    const spy = sinon.spy();\n    props.handleOpen = spy;\n\n    component()\n      .find('div')\n      .simulate('click');\n    expect(spy.calledOnce).to.equal(true);\n  });\n\n  it('displays an error message if funds have changed to be lower than used', () => {\n    props.borrowers = [{ firstName: 'joe', _id: 'id1', bankFortune: 20 }];\n    props.ownFunds = [\n      {\n        borrowerId: 'id1',\n        value: 100000,\n        type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      },\n    ];\n    props.structure = { ownFunds: [props.ownFunds] };\n    expect(component()\n      .find('p.error')\n      .exists()).to.equal(true);\n  });\n\n  it('displays an error message if funds have changed to be lower than used', () => {\n    props.borrowers = [{ firstName: 'joe', _id: 'id1', bankFortune: 150 }];\n    props.ownFunds = {\n      borrowerId: 'id1',\n      value: 80,\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n    };\n    props.structure = {\n      ownFunds: [\n        props.ownFunds,\n        {\n          borrowerId: 'id1',\n          value: 80,\n          type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n        },\n      ],\n    };\n    expect(component()\n      .find('p.error')\n      .exists()).to.equal(true);\n  });\n});\n"]},"sourceType":"script","hash":"05b7ef520ae1f94bbb465c38a81fd56415e016ab"}
