{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/test/LenderRulesInitializator.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/utils/Calculator/test/LenderRulesInitializator.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/test/LenderRulesInitializator.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/Calculator/test/LenderRulesInitializator.spec.js"],"names":["expect","Calculator","LENDER_RULES_VARIABLES","describe","loan","lenderRules","structure","property","beforeEach","_id","value","id","propertyId","structures","properties","selectedStructure","it","calc","maxBorrowRatio","to","equal","filter","and","var","PROPERTY_VALUE","calc2","skip","bonusConsideration","INCOME","maxIncomeRatio","adminComments","deep","dividendsConsideration","undefined"],"mappings":"AAAA;;AACA;AACA,SAASA,MAAT,QAAuB,MAAvB;AAEA,SAASC,UAAT,QAA2B,IAA3B;AACA,SAASC,sBAAT;AAEAC,QAAQ,CAAC,0BAAD,EAA6B,MAAM;AACzC,MAAIC,IAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,QAAJ;AAEAC,EAAAA,UAAU,CAAC,MAAM;AACfD,IAAAA,QAAQ,GAAG;AACTE,MAAAA,GAAG,EAAE,YADI;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAX;AAIAJ,IAAAA,SAAS,GAAG;AACVK,MAAAA,EAAE,EAAE,mBADM;AAEVC,MAAAA,UAAU,EAAE,YAFF;AAGVL,MAAAA;AAHU,KAAZ;AAKAH,IAAAA,IAAI,GAAG;AACLS,MAAAA,UAAU,EAAE,CAACP,SAAD,CADP;AAELQ,MAAAA,UAAU,EAAE,CAACP,QAAD,CAFP;AAGLQ,MAAAA,iBAAiB,EAAE;AAHd,KAAP;AAKAV,IAAAA,WAAW,GAAG,EAAd;AACD,GAhBS,CAAV;AAkBAW,EAAAA,EAAE,CAAC,qEAAD,EAAwE,MAAM;AAC9E,UAAMC,IAAI,GAAG,IAAIhB,UAAJ,CAAe,EAAf,CAAb;AACAD,IAAAA,MAAM,CAACiB,IAAI,CAACC,cAAN,CAAN,CAA4BC,EAA5B,CAA+BC,KAA/B,CAAqC,GAArC;AACD,GAHC,CAAF;AAKAJ,EAAAA,EAAE,CAAC,mDAAD,EAAsD,MAAM;AAC5DX,IAAAA,WAAW,GAAG,CACZ;AACEgB,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,CACH;AAAE,eAAK,CAAC;AAAEC,YAAAA,GAAG,EAAErB,sBAAsB,CAACsB;AAA9B,WAAD,EAAiD,MAAjD;AAAP,SADG;AADC,OADV;AAMEN,MAAAA,cAAc,EAAE;AANlB,KADY,CAAd;AAUA,UAAMD,IAAI,GAAG,IAAIhB,UAAJ,CAAe;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAf,CAAb;AACAL,IAAAA,MAAM,CAACiB,IAAI,CAACC,cAAN,CAAN,CAA4BC,EAA5B,CAA+BC,KAA/B,CAAqC,GAArC;AAEAb,IAAAA,QAAQ,CAACG,KAAT,GAAiB,KAAjB;AACA,UAAMe,KAAK,GAAG,IAAIxB,UAAJ,CAAe;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAf,CAAd;AACAL,IAAAA,MAAM,CAACyB,KAAK,CAACP,cAAP,CAAN,CAA6BC,EAA7B,CAAgCC,KAAhC,CAAsC,GAAtC;AACD,GAjBC,CAAF,CA7ByC,CAgDzC;;AACAJ,EAAAA,EAAE,CAACU,IAAH,CAAQ,6CAAR,EAAuD,MAAM;AAC3DrB,IAAAA,WAAW,GAAG,CACZ;AACEgB,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,CACH;AAAE,eAAK,CAAC;AAAEC,YAAAA,GAAG,EAAErB,sBAAsB,CAACsB;AAA9B,WAAD,EAAiD,MAAjD;AAAP,SADG;AADC,OADV;AAMEG,MAAAA,kBAAkB,EAAE;AANtB,KADY,EASZ;AACEN,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,CAAC;AAAE,eAAK,CAAC;AAAEC,YAAAA,GAAG,EAAErB,sBAAsB,CAAC0B;AAA9B,WAAD,EAAyC,GAAzC;AAAP,SAAD;AADC,OADV;AAIEC,MAAAA,cAAc,EAAE;AAJlB,KATY,CAAd;AAgBD,GAjBD;AAmBAb,EAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CX,IAAAA,WAAW,GAAG,CACZ;AACEgB,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,CACH;AAAE,eAAK,CAAC;AAAEC,YAAAA,GAAG,EAAErB,sBAAsB,CAACsB;AAA9B,WAAD,EAAiD,MAAjD;AAAP,SADG;AADC,OADV;AAMEN,MAAAA,cAAc,EAAE;AANlB,KADY,EASZ;AACEG,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,CACH;AAAE,eAAK,CAAC;AAAEC,YAAAA,GAAG,EAAErB,sBAAsB,CAACsB;AAA9B,WAAD,EAAiD,MAAjD;AAAP,SADG;AADC,OADV;AAMEN,MAAAA,cAAc,EAAE;AANlB,KATY,CAAd;AAkBA,UAAMD,IAAI,GAAG,IAAIhB,UAAJ,CAAe;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAf,CAAb;AACAL,IAAAA,MAAM,CAACiB,IAAI,CAACC,cAAN,CAAN,CAA4BC,EAA5B,CAA+BC,KAA/B,CAAqC,GAArC;AACD,GArBC,CAAF;AAuBAJ,EAAAA,EAAE,CAAC,0BAAD,EAA6B,MAAM;AACnCX,IAAAA,WAAW,GAAG,CACZ;AACEgB,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,CACH;AAAE,eAAK,CAAC;AAAEC,YAAAA,GAAG,EAAErB,sBAAsB,CAACsB;AAA9B,WAAD,EAAiD,MAAjD;AAAP,SADG;AADC,OADV;AAMEM,MAAAA,aAAa,EAAE,CAAC,GAAD;AANjB,KADY,EASZ;AACET,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,CACH;AAAE,eAAK,CAAC;AAAEC,YAAAA,GAAG,EAAErB,sBAAsB,CAACsB;AAA9B,WAAD,EAAiD,MAAjD;AAAP,SADG;AADC,OADV;AAMEM,MAAAA,aAAa,EAAE,CAAC,GAAD;AANjB,KATY,CAAd;AAkBA,UAAMb,IAAI,GAAG,IAAIhB,UAAJ,CAAe;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAf,CAAb;AACAL,IAAAA,MAAM,CAACiB,IAAI,CAACa,aAAN,CAAN,CAA2BX,EAA3B,CAA8BY,IAA9B,CAAmCX,KAAnC,CAAyC,CAAC,GAAD,EAAM,GAAN,CAAzC;AACD,GArBC,CAAF;AAuBAJ,EAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AAC1CX,IAAAA,WAAW,GAAG,CAAC;AAAEgB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAC,IAAD;AAAP,OAAV;AAA2BU,MAAAA,sBAAsB,EAAE;AAAnD,KAAD,CAAd;AACA,UAAMf,IAAI,GAAG,IAAIhB,UAAJ,CAAe;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAf,CAAb;AACAL,IAAAA,MAAM,CAACiB,IAAI,CAACe,sBAAN,CAAN,CAAoCb,EAApC,CAAuCC,KAAvC,CAA6C,CAA7C;AACD,GAJC,CAAF;AAMAJ,EAAAA,EAAE,CAAC,gCAAD,EAAmC,MAAM;AACzCX,IAAAA,WAAW,GAAG,CACZ;AAAEgB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAC,IAAD;AAAP,OAAV;AAA2BU,MAAAA,sBAAsB,EAAE;AAAnD,KADY,EAEZ;AAAEX,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAC,IAAD;AAAP,OAAV;AAA2BU,MAAAA,sBAAsB,EAAEC;AAAnD,KAFY,EAGZ;AAAEZ,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAC,IAAD;AAAP,OAAV;AAA2BU,MAAAA,sBAAsB,EAAE;AAAnD,KAHY,CAAd;AAKA,UAAMf,IAAI,GAAG,IAAIhB,UAAJ,CAAe;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAf,CAAb;AACAL,IAAAA,MAAM,CAACiB,IAAI,CAACe,sBAAN,CAAN,CAAoCb,EAApC,CAAuCC,KAAvC,CAA6C,GAA7C;AACD,GARC,CAAF;AASD,CAjIO,CAAR","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { Calculator } from '..';\nimport { LENDER_RULES_VARIABLES } from '../../../api/constants';\n\ndescribe('LenderRulesInitializator', () => {\n  let loan;\n  let lenderRules;\n  let structure;\n  let property;\n\n  beforeEach(() => {\n    property = {\n      _id: 'propertyId',\n      value: 120000,\n    };\n    structure = {\n      id: 'selectedStructure',\n      propertyId: 'propertyId',\n      property,\n    };\n    loan = {\n      structures: [structure],\n      properties: [property],\n      selectedStructure: 'selectedStructure',\n    };\n    lenderRules = [];\n  });\n\n  it('does not initialize if no lenderRules are passed in the constructor', () => {\n    const calc = new Calculator({});\n    expect(calc.maxBorrowRatio).to.equal(0.8);\n  });\n\n  it('changes the rules based on the selected structure', () => {\n    lenderRules = [\n      {\n        filter: {\n          and: [\n            { '>': [{ var: LENDER_RULES_VARIABLES.PROPERTY_VALUE }, 100000] },\n          ],\n        },\n        maxBorrowRatio: 0.7,\n      },\n    ];\n    const calc = new Calculator({ loan, lenderRules });\n    expect(calc.maxBorrowRatio).to.equal(0.7);\n\n    property.value = 90000;\n    const calc2 = new Calculator({ loan, lenderRules });\n    expect(calc2.maxBorrowRatio).to.equal(0.8);\n  });\n\n  // TODO\n  it.skip('uses primary rules to match secondary rules', () => {\n    lenderRules = [\n      {\n        filter: {\n          and: [\n            { '>': [{ var: LENDER_RULES_VARIABLES.PROPERTY_VALUE }, 100000] },\n          ],\n        },\n        bonusConsideration: 1,\n      },\n      {\n        filter: {\n          and: [{ '<': [{ var: LENDER_RULES_VARIABLES.INCOME }, 0.5] }],\n        },\n        maxIncomeRatio: 0.39,\n      },\n    ];\n  });\n\n  it('merges rules in the right order', () => {\n    lenderRules = [\n      {\n        filter: {\n          and: [\n            { '>': [{ var: LENDER_RULES_VARIABLES.PROPERTY_VALUE }, 100000] },\n          ],\n        },\n        maxBorrowRatio: 0.7,\n      },\n      {\n        filter: {\n          and: [\n            { '>': [{ var: LENDER_RULES_VARIABLES.PROPERTY_VALUE }, 110000] },\n          ],\n        },\n        maxBorrowRatio: 0.6,\n      },\n    ];\n    const calc = new Calculator({ loan, lenderRules });\n    expect(calc.maxBorrowRatio).to.equal(0.6);\n  });\n\n  it('merges comments together', () => {\n    lenderRules = [\n      {\n        filter: {\n          and: [\n            { '>': [{ var: LENDER_RULES_VARIABLES.PROPERTY_VALUE }, 100000] },\n          ],\n        },\n        adminComments: ['a'],\n      },\n      {\n        filter: {\n          and: [\n            { '>': [{ var: LENDER_RULES_VARIABLES.PROPERTY_VALUE }, 110000] },\n          ],\n        },\n        adminComments: ['b'],\n      },\n    ];\n    const calc = new Calculator({ loan, lenderRules });\n    expect(calc.adminComments).to.deep.equal(['a', 'b']);\n  });\n\n  it('does not skip a rule if it is 0', () => {\n    lenderRules = [{ filter: { and: [true] }, dividendsConsideration: 0 }];\n    const calc = new Calculator({ loan, lenderRules });\n    expect(calc.dividendsConsideration).to.equal(0);\n  });\n\n  it('skips undefined and null rules', () => {\n    lenderRules = [\n      { filter: { and: [true] }, dividendsConsideration: 0.5 },\n      { filter: { and: [true] }, dividendsConsideration: undefined },\n      { filter: { and: [true] }, dividendsConsideration: null },\n    ];\n    const calc = new Calculator({ loan, lenderRules });\n    expect(calc.dividendsConsideration).to.equal(0.5);\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/test/LenderRulesInitializator.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/Calculator/test/LenderRulesInitializator.spec.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet Calculator;\nmodule.link(\"..\", {\n  Calculator(v) {\n    Calculator = v;\n  }\n\n}, 1);\nlet LENDER_RULES_VARIABLES;\nmodule.link(\"../../../api/constants\", {\n  LENDER_RULES_VARIABLES(v) {\n    LENDER_RULES_VARIABLES = v;\n  }\n\n}, 2);\ndescribe('LenderRulesInitializator', () => {\n  let loan;\n  let lenderRules;\n  let structure;\n  let property;\n  beforeEach(() => {\n    property = {\n      _id: 'propertyId',\n      value: 120000\n    };\n    structure = {\n      id: 'selectedStructure',\n      propertyId: 'propertyId',\n      property\n    };\n    loan = {\n      structures: [structure],\n      properties: [property],\n      selectedStructure: 'selectedStructure'\n    };\n    lenderRules = [];\n  });\n  it('does not initialize if no lenderRules are passed in the constructor', () => {\n    const calc = new Calculator({});\n    expect(calc.maxBorrowRatio).to.equal(0.8);\n  });\n  it('changes the rules based on the selected structure', () => {\n    lenderRules = [{\n      filter: {\n        and: [{\n          '>': [{\n            var: LENDER_RULES_VARIABLES.PROPERTY_VALUE\n          }, 100000]\n        }]\n      },\n      maxBorrowRatio: 0.7\n    }];\n    const calc = new Calculator({\n      loan,\n      lenderRules\n    });\n    expect(calc.maxBorrowRatio).to.equal(0.7);\n    property.value = 90000;\n    const calc2 = new Calculator({\n      loan,\n      lenderRules\n    });\n    expect(calc2.maxBorrowRatio).to.equal(0.8);\n  }); // TODO\n\n  it.skip('uses primary rules to match secondary rules', () => {\n    lenderRules = [{\n      filter: {\n        and: [{\n          '>': [{\n            var: LENDER_RULES_VARIABLES.PROPERTY_VALUE\n          }, 100000]\n        }]\n      },\n      bonusConsideration: 1\n    }, {\n      filter: {\n        and: [{\n          '<': [{\n            var: LENDER_RULES_VARIABLES.INCOME\n          }, 0.5]\n        }]\n      },\n      maxIncomeRatio: 0.39\n    }];\n  });\n  it('merges rules in the right order', () => {\n    lenderRules = [{\n      filter: {\n        and: [{\n          '>': [{\n            var: LENDER_RULES_VARIABLES.PROPERTY_VALUE\n          }, 100000]\n        }]\n      },\n      maxBorrowRatio: 0.7\n    }, {\n      filter: {\n        and: [{\n          '>': [{\n            var: LENDER_RULES_VARIABLES.PROPERTY_VALUE\n          }, 110000]\n        }]\n      },\n      maxBorrowRatio: 0.6\n    }];\n    const calc = new Calculator({\n      loan,\n      lenderRules\n    });\n    expect(calc.maxBorrowRatio).to.equal(0.6);\n  });\n  it('merges comments together', () => {\n    lenderRules = [{\n      filter: {\n        and: [{\n          '>': [{\n            var: LENDER_RULES_VARIABLES.PROPERTY_VALUE\n          }, 100000]\n        }]\n      },\n      adminComments: ['a']\n    }, {\n      filter: {\n        and: [{\n          '>': [{\n            var: LENDER_RULES_VARIABLES.PROPERTY_VALUE\n          }, 110000]\n        }]\n      },\n      adminComments: ['b']\n    }];\n    const calc = new Calculator({\n      loan,\n      lenderRules\n    });\n    expect(calc.adminComments).to.deep.equal(['a', 'b']);\n  });\n  it('does not skip a rule if it is 0', () => {\n    lenderRules = [{\n      filter: {\n        and: [true]\n      },\n      dividendsConsideration: 0\n    }];\n    const calc = new Calculator({\n      loan,\n      lenderRules\n    });\n    expect(calc.dividendsConsideration).to.equal(0);\n  });\n  it('skips undefined and null rules', () => {\n    lenderRules = [{\n      filter: {\n        and: [true]\n      },\n      dividendsConsideration: 0.5\n    }, {\n      filter: {\n        and: [true]\n      },\n      dividendsConsideration: undefined\n    }, {\n      filter: {\n        and: [true]\n      },\n      dividendsConsideration: null\n    }];\n    const calc = new Calculator({\n      loan,\n      lenderRules\n    });\n    expect(calc.dividendsConsideration).to.equal(0.5);\n  });\n});","map":{"version":3,"sources":["imports/core/utils/Calculator/test/LenderRulesInitializator.spec.js"],"names":["describe","beforeEach","property","_id","value","structure","id","propertyId","loan","structures","properties","selectedStructure","lenderRules","it","calc","expect","filter","and","var","LENDER_RULES_VARIABLES","PROPERTY_VALUE","maxBorrowRatio","calc2","bonusConsideration","INCOME","maxIncomeRatio","adminComments","dividendsConsideration","undefined"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport { Calculator } from '..';\nimport { LENDER_RULES_VARIABLES } from '../../../api/constants';\n\ndescribe('LenderRulesInitializator', () => {\n  let loan;\n  let lenderRules;\n  let structure;\n  let property;\n\n  beforeEach(() => {\n    property = {\n      _id: 'propertyId',\n      value: 120000,\n    };\n    structure = {\n      id: 'selectedStructure',\n      propertyId: 'propertyId',\n      property,\n    };\n    loan = {\n      structures: [structure],\n      properties: [property],\n      selectedStructure: 'selectedStructure',\n    };\n    lenderRules = [];\n  });\n\n  it('does not initialize if no lenderRules are passed in the constructor', () => {\n    const calc = new Calculator({});\n    expect(calc.maxBorrowRatio).to.equal(0.8);\n  });\n\n  it('changes the rules based on the selected structure', () => {\n    lenderRules = [\n      {\n        filter: {\n          and: [\n            { '>': [{ var: LENDER_RULES_VARIABLES.PROPERTY_VALUE }, 100000] },\n          ],\n        },\n        maxBorrowRatio: 0.7,\n      },\n    ];\n    const calc = new Calculator({ loan, lenderRules });\n    expect(calc.maxBorrowRatio).to.equal(0.7);\n\n    property.value = 90000;\n    const calc2 = new Calculator({ loan, lenderRules });\n    expect(calc2.maxBorrowRatio).to.equal(0.8);\n  });\n\n  // TODO\n  it.skip('uses primary rules to match secondary rules', () => {\n    lenderRules = [\n      {\n        filter: {\n          and: [\n            { '>': [{ var: LENDER_RULES_VARIABLES.PROPERTY_VALUE }, 100000] },\n          ],\n        },\n        bonusConsideration: 1,\n      },\n      {\n        filter: {\n          and: [{ '<': [{ var: LENDER_RULES_VARIABLES.INCOME }, 0.5] }],\n        },\n        maxIncomeRatio: 0.39,\n      },\n    ];\n  });\n\n  it('merges rules in the right order', () => {\n    lenderRules = [\n      {\n        filter: {\n          and: [\n            { '>': [{ var: LENDER_RULES_VARIABLES.PROPERTY_VALUE }, 100000] },\n          ],\n        },\n        maxBorrowRatio: 0.7,\n      },\n      {\n        filter: {\n          and: [\n            { '>': [{ var: LENDER_RULES_VARIABLES.PROPERTY_VALUE }, 110000] },\n          ],\n        },\n        maxBorrowRatio: 0.6,\n      },\n    ];\n    const calc = new Calculator({ loan, lenderRules });\n    expect(calc.maxBorrowRatio).to.equal(0.6);\n  });\n\n  it('merges comments together', () => {\n    lenderRules = [\n      {\n        filter: {\n          and: [\n            { '>': [{ var: LENDER_RULES_VARIABLES.PROPERTY_VALUE }, 100000] },\n          ],\n        },\n        adminComments: ['a'],\n      },\n      {\n        filter: {\n          and: [\n            { '>': [{ var: LENDER_RULES_VARIABLES.PROPERTY_VALUE }, 110000] },\n          ],\n        },\n        adminComments: ['b'],\n      },\n    ];\n    const calc = new Calculator({ loan, lenderRules });\n    expect(calc.adminComments).to.deep.equal(['a', 'b']);\n  });\n\n  it('does not skip a rule if it is 0', () => {\n    lenderRules = [{ filter: { and: [true] }, dividendsConsideration: 0 }];\n    const calc = new Calculator({ loan, lenderRules });\n    expect(calc.dividendsConsideration).to.equal(0);\n  });\n\n  it('skips undefined and null rules', () => {\n    lenderRules = [\n      { filter: { and: [true] }, dividendsConsideration: 0.5 },\n      { filter: { and: [true] }, dividendsConsideration: undefined },\n      { filter: { and: [true] }, dividendsConsideration: null },\n    ];\n    const calc = new Calculator({ loan, lenderRules });\n    expect(calc.dividendsConsideration).to.equal(0.5);\n  });\n});\n"]},"sourceType":"script","hash":"b855d757949736d389b4c8db5cbef0f61900ba84"}
