{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/init.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/cultofcoders:redis-oplog/lib/init.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/init.js","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/init.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:redis-oplog/lib/init.js"}},"code":"let Config;\nmodule.link(\"./config\", {\n  default(v) {\n    Config = v;\n  }\n\n}, 0);\nlet extendMongoCollection;\nmodule.link(\"./mongo/extendMongoCollection\", {\n  default(v) {\n    extendMongoCollection = v;\n  }\n\n}, 1);\nlet RedisSubscriptionManager;\nmodule.link(\"./redis/RedisSubscriptionManager\", {\n  default(v) {\n    RedisSubscriptionManager = v;\n  }\n\n}, 2);\nlet publishWithRedis;\nmodule.link(\"./publishWithRedis\", {\n  default(v) {\n    publishWithRedis = v;\n  }\n\n}, 3);\nlet PubSubManager;\nmodule.link(\"./redis/PubSubManager\", {\n  default(v) {\n    PubSubManager = v;\n  }\n\n}, 4);\nlet getRedisListener;\nmodule.link(\"./redis/getRedisClient\", {\n  getRedisListener(v) {\n    getRedisListener = v;\n  }\n\n}, 5);\nlet PublicationFactory;\nmodule.link(\"./cache/PublicationFactory\", {\n  default(v) {\n    PublicationFactory = v;\n  }\n\n}, 6);\nlet deepExtend;\nmodule.link(\"deep-extend\", {\n  default(v) {\n    deepExtend = v;\n  }\n\n}, 7);\nlet isInitialized = false;\nmodule.exportDefault((config = {}) => {\n  if (isInitialized) {\n    throw 'You cannot initialize RedisOplog twice.';\n  }\n\n  isInitialized = true;\n  deepExtend(Config, config);\n\n  _.extend(Config, {\n    isInitialized: true,\n    oldPublish: Meteor.publish\n  });\n\n  extendMongoCollection();\n  Meteor.publishWithRedis = publishWithRedis.bind(Meteor);\n\n  if (Config.overridePublishFunction) {\n    Meteor.publish = Meteor.publishWithRedis;\n    Meteor.server.publish = Meteor.publishWithRedis;\n  } // this initializes the listener singleton with the proper onConnect functionality\n\n\n  getRedisListener({\n    onConnect() {\n      // this will be executed initially, but since there won't be any observable collections, nothing will happen\n      PublicationFactory.reloadAll();\n    }\n\n  });\n  RedisSubscriptionManager.init();\n  Config.pubSubManager = new PubSubManager();\n});","map":{"version":3,"sources":["packages/cultofcoders:redis-oplog/lib/init.js"],"names":["Config","module","link","default","v","extendMongoCollection","RedisSubscriptionManager","publishWithRedis","PubSubManager","getRedisListener","PublicationFactory","deepExtend","isInitialized","exportDefault","config","_","extend","oldPublish","Meteor","publish","bind","overridePublishFunction","server","onConnect","reloadAll","init","pubSubManager"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,UAAZ,EAAuB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,MAAM,GAACI,CAAP;AAAS;;AAArB,CAAvB,EAA8C,CAA9C;AAAiD,IAAIC,qBAAJ;AAA0BJ,MAAM,CAACC,IAAP,CAAY,+BAAZ,EAA4C;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACC,IAAAA,qBAAqB,GAACD,CAAtB;AAAwB;;AAApC,CAA5C,EAAkF,CAAlF;AAAqF,IAAIE,wBAAJ;AAA6BL,MAAM,CAACC,IAAP,CAAY,kCAAZ,EAA+C;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACE,IAAAA,wBAAwB,GAACF,CAAzB;AAA2B;;AAAvC,CAA/C,EAAwF,CAAxF;AAA2F,IAAIG,gBAAJ;AAAqBN,MAAM,CAACC,IAAP,CAAY,oBAAZ,EAAiC;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACG,IAAAA,gBAAgB,GAACH,CAAjB;AAAmB;;AAA/B,CAAjC,EAAkE,CAAlE;AAAqE,IAAII,aAAJ;AAAkBP,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAoC;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACI,IAAAA,aAAa,GAACJ,CAAd;AAAgB;;AAA5B,CAApC,EAAkE,CAAlE;AAAqE,IAAIK,gBAAJ;AAAqBR,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACO,EAAAA,gBAAgB,CAACL,CAAD,EAAG;AAACK,IAAAA,gBAAgB,GAACL,CAAjB;AAAmB;;AAAxC,CAArC,EAA+E,CAA/E;AAAkF,IAAIM,kBAAJ;AAAuBT,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAAyC;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACM,IAAAA,kBAAkB,GAACN,CAAnB;AAAqB;;AAAjC,CAAzC,EAA4E,CAA5E;AAA+E,IAAIO,UAAJ;AAAeV,MAAM,CAACC,IAAP,CAAY,aAAZ,EAA0B;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACO,IAAAA,UAAU,GAACP,CAAX;AAAa;;AAAzB,CAA1B,EAAqD,CAArD;AAUhrB,IAAIQ,aAAa,GAAG,KAApB;AAVAX,MAAM,CAACY,aAAP,CAYe,CAACC,MAAM,GAAG,EAAV,KAAiB;AAC5B,MAAIF,aAAJ,EAAmB;AACf,UAAM,yCAAN;AACH;;AAEDA,EAAAA,aAAa,GAAG,IAAhB;AAEAD,EAAAA,UAAU,CAACX,MAAD,EAASc,MAAT,CAAV;;AAEAC,EAAAA,CAAC,CAACC,MAAF,CAAShB,MAAT,EAAiB;AACbY,IAAAA,aAAa,EAAE,IADF;AAEbK,IAAAA,UAAU,EAAEC,MAAM,CAACC;AAFN,GAAjB;;AAKAd,EAAAA,qBAAqB;AAErBa,EAAAA,MAAM,CAACX,gBAAP,GAA0BA,gBAAgB,CAACa,IAAjB,CAAsBF,MAAtB,CAA1B;;AAEA,MAAIlB,MAAM,CAACqB,uBAAX,EAAoC;AAChCH,IAAAA,MAAM,CAACC,OAAP,GAAiBD,MAAM,CAACX,gBAAxB;AACAW,IAAAA,MAAM,CAACI,MAAP,CAAcH,OAAd,GAAwBD,MAAM,CAACX,gBAA/B;AACH,GArB2B,CAuB5B;;;AACAE,EAAAA,gBAAgB,CAAC;AACbc,IAAAA,SAAS,GAAG;AACR;AACAb,MAAAA,kBAAkB,CAACc,SAAnB;AACH;;AAJY,GAAD,CAAhB;AAOAlB,EAAAA,wBAAwB,CAACmB,IAAzB;AACAzB,EAAAA,MAAM,CAAC0B,aAAP,GAAuB,IAAIlB,aAAJ,EAAvB;AACH,CA7CD","sourcesContent":["// https://github.com/luin/ioredis#connect-to-redis\nimport Config from './config';\nimport extendMongoCollection from './mongo/extendMongoCollection';\nimport RedisSubscriptionManager from './redis/RedisSubscriptionManager';\nimport publishWithRedis from './publishWithRedis';\nimport PubSubManager from './redis/PubSubManager';\nimport {getRedisListener} from './redis/getRedisClient';\nimport PublicationFactory from './cache/PublicationFactory';\nimport deepExtend from 'deep-extend';\n\nlet isInitialized = false;\n\nexport default (config = {}) => {\n    if (isInitialized) {\n        throw 'You cannot initialize RedisOplog twice.';\n    }\n\n    isInitialized = true;\n\n    deepExtend(Config, config);\n\n    _.extend(Config, {\n        isInitialized: true,\n        oldPublish: Meteor.publish,\n    });\n\n    extendMongoCollection();\n\n    Meteor.publishWithRedis = publishWithRedis.bind(Meteor);\n\n    if (Config.overridePublishFunction) {\n        Meteor.publish = Meteor.publishWithRedis;\n        Meteor.server.publish = Meteor.publishWithRedis;\n    }\n\n    // this initializes the listener singleton with the proper onConnect functionality\n    getRedisListener({\n        onConnect() {\n            // this will be executed initially, but since there won't be any observable collections, nothing will happen\n            PublicationFactory.reloadAll();\n        }\n    });\n\n    RedisSubscriptionManager.init();\n    Config.pubSubManager = new PubSubManager();\n}\n"]},"sourceType":"script","hash":"d49b4f35b80a927f7469ea602b7f4018ed91ed82"}
