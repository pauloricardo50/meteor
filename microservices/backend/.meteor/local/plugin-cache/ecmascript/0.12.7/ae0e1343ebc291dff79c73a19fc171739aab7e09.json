{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/cache/PublicationFactory.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/cultofcoders:redis-oplog/lib/cache/PublicationFactory.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/cache/PublicationFactory.js","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:redis-oplog/lib/cache/PublicationFactory.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:redis-oplog/lib/cache/PublicationFactory.js"}},"code":"let EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 0);\nlet PublicationStore;\nmodule.link(\"./PublicationStore\", {\n  default(v) {\n    PublicationStore = v;\n  }\n\n}, 1);\nlet PublicationEntry;\nmodule.link(\"./PublicationEntry\", {\n  default(v) {\n    PublicationEntry = v;\n  }\n\n}, 2);\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 3);\nlet reload;\nmodule.link(\"../processors/actions/reload\", {\n  default(v) {\n    reload = v;\n  }\n\n}, 4);\nlet debug;\nmodule.link(\"../debug\", {\n  default(v) {\n    debug = v;\n  }\n\n}, 5);\nmodule.exportDefault(new class PublicationFactory {\n  constructor() {\n    this.store = new PublicationStore();\n    this.queue = new Meteor._SynchronousQueue();\n  }\n  /**\n   * Potentially creates a new publicationEntry and returns the id\n   *\n   * @param cursor\n   * @param observer\n   * @returns {PublicationEntry}\n   */\n\n\n  create(cursor, observer) {\n    let description = cursor._cursorDescription;\n\n    if (!description.selector) {\n      description.selector = {};\n    }\n\n    if (!description.options) {\n      description.options = {};\n    }\n\n    this.extendCursorWithCollectionDefaults(observer, cursor);\n    let id = this.getPublicationId(cursor);\n    let publicationEntry;\n\n    if (this.store.has(id)) {\n      publicationEntry = this.store.find(id);\n      debug(`[PublicationFactory] Re-using existing publication ${publicationEntry.id}`);\n    } else {\n      publicationEntry = new PublicationEntry(id, cursor, this);\n      debug(`[PublicationFactory] Created new subscribers for redis for: ${publicationEntry.id}`);\n      this.store.add(id, publicationEntry);\n    }\n\n    publicationEntry.addObserver(observer);\n    return publicationEntry;\n  }\n  /**\n   * @param id\n   */\n\n\n  remove(id) {\n    this.store.remove(id);\n  }\n  /**\n   * Gets an unique id based on the cursors selector and options\n   * @param cursor\n   * @returns {string}\n   */\n\n\n  getPublicationId(cursor) {\n    const description = cursor._cursorDescription;\n\n    const collectionName = this._getCollectionName(cursor);\n\n    const {\n      selector,\n      options\n    } = description; // because of some compatibility stuff\n\n    return collectionName + '::' + EJSON.stringify(selector) + EJSON.stringify(_.omit(options, 'transform'));\n  }\n  /**\n   * Refreshes all observableCollections\n   */\n\n\n  reloadAll() {\n    const entries = this.store.getAll();\n    entries.forEach(entry => {\n      reload(entry.observableCollection);\n    });\n  }\n  /**\n   * @param context\n   * @param _cursor\n   */\n\n\n  extendCursorWithCollectionDefaults(context, _cursor) {\n    const collectionName = this._getCollectionName(_cursor);\n\n    const collection = Mongo.Collection.__getCollectionByName(collectionName);\n\n    if (collection && collection._redisOplog) {\n      const {\n        cursor\n      } = collection._redisOplog;\n\n      if (cursor) {\n        let {\n          selector,\n          options\n        } = _cursor._cursorDescription;\n        cursor.call(context, options, selector);\n      }\n    }\n  }\n  /**\n   * @param cursor\n   * @returns {*|string}\n   * @private\n   */\n\n\n  _getCollectionName(cursor) {\n    const description = cursor._cursorDescription; // because of some compatibility stuff\n\n    let collectionName = description.collectionName;\n\n    if (!collectionName) {\n      return description.collection.name;\n    }\n\n    return collectionName;\n  }\n\n}());","map":{"version":3,"sources":["packages/cultofcoders:redis-oplog/lib/cache/PublicationFactory.js"],"names":["EJSON","module","link","v","PublicationStore","default","PublicationEntry","_","reload","debug","exportDefault","PublicationFactory","constructor","store","queue","Meteor","_SynchronousQueue","create","cursor","observer","description","_cursorDescription","selector","options","extendCursorWithCollectionDefaults","id","getPublicationId","publicationEntry","has","find","add","addObserver","remove","collectionName","_getCollectionName","stringify","omit","reloadAll","entries","getAll","forEach","entry","observableCollection","context","_cursor","collection","Mongo","Collection","__getCollectionByName","_redisOplog","call","name"],"mappings":"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","sourcesContent":["import { EJSON } from 'meteor/ejson';\nimport PublicationStore from './PublicationStore';\nimport PublicationEntry from './PublicationEntry';\nimport { _ } from 'meteor/underscore';\nimport reload from '../processors/actions/reload';\nimport debug from '../debug';\n\nexport default new class PublicationFactory {\n    constructor() {\n        this.store = new PublicationStore();\n        this.queue = new Meteor._SynchronousQueue();\n    }\n\n    /**\n     * Potentially creates a new publicationEntry and returns the id\n     *\n     * @param cursor\n     * @param observer\n     * @returns {PublicationEntry}\n     */\n    create(cursor, observer) {\n        let description = cursor._cursorDescription;\n\n        if (!description.selector) {\n            description.selector = {};\n        }\n        if (!description.options) {\n            description.options = {};\n        }\n\n        this.extendCursorWithCollectionDefaults(observer, cursor);\n\n        let id = this.getPublicationId(cursor);\n        let publicationEntry;\n\n        if (this.store.has(id)) {\n            publicationEntry = this.store.find(id);\n            debug(\n                `[PublicationFactory] Re-using existing publication ${\n                    publicationEntry.id\n                }`\n            );\n        } else {\n            publicationEntry = new PublicationEntry(id, cursor, this);\n            debug(\n                `[PublicationFactory] Created new subscribers for redis for: ${\n                    publicationEntry.id\n                }`\n            );\n\n            this.store.add(id, publicationEntry);\n        }\n\n        publicationEntry.addObserver(observer);\n\n        return publicationEntry;\n    }\n\n    /**\n     * @param id\n     */\n    remove(id) {\n        this.store.remove(id);\n    }\n\n    /**\n     * Gets an unique id based on the cursors selector and options\n     * @param cursor\n     * @returns {string}\n     */\n    getPublicationId(cursor) {\n        const description = cursor._cursorDescription;\n        const collectionName = this._getCollectionName(cursor);\n\n        const { selector, options } = description;\n\n        // because of some compatibility stuff\n        return (\n            collectionName +\n            '::' +\n            EJSON.stringify(selector) +\n            EJSON.stringify(_.omit(options, 'transform'))\n        );\n    }\n\n    /**\n     * Refreshes all observableCollections\n     */\n    reloadAll() {\n        const entries = this.store.getAll();\n\n        entries.forEach(entry => {\n            reload(entry.observableCollection);\n        });\n    }\n\n    /**\n     * @param context\n     * @param _cursor\n     */\n    extendCursorWithCollectionDefaults(context, _cursor) {\n        const collectionName = this._getCollectionName(_cursor);\n        const collection = Mongo.Collection.__getCollectionByName(\n            collectionName\n        );\n\n        if (collection && collection._redisOplog) {\n            const { cursor } = collection._redisOplog;\n            if (cursor) {\n                let { selector, options } = _cursor._cursorDescription;\n                cursor.call(context, options, selector);\n            }\n        }\n    }\n\n    /**\n     * @param cursor\n     * @returns {*|string}\n     * @private\n     */\n    _getCollectionName(cursor) {\n        const description = cursor._cursorDescription;\n\n        // because of some compatibility stuff\n        let collectionName = description.collectionName;\n        if (!collectionName) {\n            return description.collection.name;\n        }\n\n        return collectionName;\n    }\n}();\n"]},"sourceType":"script","hash":"ae0e1343ebc291dff79c73a19fc171739aab7e09"}
