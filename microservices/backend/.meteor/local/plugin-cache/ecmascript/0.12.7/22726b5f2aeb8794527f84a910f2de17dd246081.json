{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/report/report-common.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/lmieulet:meteor-coverage/server/report/report-common.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/report/report-common.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/lmieulet:meteor-coverage/server/report/report-common.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/lmieulet:meteor-coverage/server/report/report-common.js"}},"code":"let fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 0);\nlet mkdirp;\nmodule.link(\"mkdirp\", {\n  default(v) {\n    mkdirp = v;\n  }\n\n}, 1);\nlet path;\nmodule.link(\"path\", {\n  default(v) {\n    path = v;\n  }\n\n}, 2);\nlet Log;\nmodule.link(\"./../context/log\", {\n  default(v) {\n    Log = v;\n  }\n\n}, 3);\n\nconst Report = Npm.require('istanbul-lib-report');\n\nmodule.exportDefault(ReportCommon = {\n  /**\n     * Alter fs to add a new method writer\n     * Used by the istanbul-reports library\n     * @param filepath\n     * @returns {*|Context}\n     */\n  getContext(filepath) {\n    let context = Report.createContext();\n    const dirpath = path.dirname(filepath);\n    this.checkDirectory(dirpath);\n    this.checkFile(filepath);\n    Object.defineProperty(context, 'writer', {\n      value: {\n        writeFile: function (path) {\n          return {\n            write: function (data) {\n              fs.appendFileSync(path, data);\n            },\n            println: function (data) {\n              fs.appendFileSync(path, data + '\\r\\n');\n            },\n            close: function () {},\n            colorize: function (string) {\n              return string;\n            }\n          };\n        }\n      }\n    });\n    return context;\n  },\n\n  checkDirectory(dirpath) {\n    let succeed = true; // Create folder\n\n    try {\n      const stat = fs.statSync(dirpath);\n    } catch (e) {\n      succeed = false;\n      Log.info('Creating a new folder', dirpath);\n\n      try {\n        mkdirp.sync(dirpath);\n      } catch (e) {\n        console.error('Something went wrong while creating folder', e, e.stack);\n      }\n    }\n\n    return succeed;\n  },\n\n  checkFile(filepath) {\n    let succeed = true; // Reset file\n\n    try {\n      Log.info('Try to remove the content & create the file', filepath);\n      fs.writeFileSync(filepath, '');\n    } catch (e) {\n      succeed = false;\n      console.error('Something went wrong while creating the file', filepath, e, e.stack);\n    }\n\n    return succeed;\n  }\n\n});","map":{"version":3,"sources":["packages/lmieulet:meteor-coverage/server/report/report-common.js"],"names":["fs","module","link","default","v","mkdirp","path","Log","Report","Npm","require","exportDefault","ReportCommon","getContext","filepath","context","createContext","dirpath","dirname","checkDirectory","checkFile","Object","defineProperty","value","writeFile","write","data","appendFileSync","println","close","colorize","string","succeed","stat","statSync","e","info","sync","console","error","stack","writeFileSync"],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport mkdirp from 'mkdirp';\nimport path from 'path';\nimport Log from './../context/log';\nconst Report = Npm.require('istanbul-lib-report');\n\n\nexport default ReportCommon = {\n  /**\n     * Alter fs to add a new method writer\n     * Used by the istanbul-reports library\n     * @param filepath\n     * @returns {*|Context}\n     */\n\n  getContext (filepath) {\n    let context = Report.createContext();\n\n    const dirpath = path.dirname(filepath);\n    this.checkDirectory(dirpath);\n    this.checkFile(filepath);\n\n    Object.defineProperty(context, 'writer', {\n      value: {\n        writeFile: function (path) {\n          return {\n            write: function (data) {\n              fs.appendFileSync(path, data);\n            },\n            println: function (data) {\n              fs.appendFileSync(path, data + '\\r\\n');\n            },\n            close: function () {},\n            colorize: function(string) {\n              return string;\n            }\n          };\n        }\n      }\n    });\n    return context;\n  },\n  checkDirectory (dirpath) {\n    let succeed = true;\n    // Create folder\n    try {\n      const stat = fs.statSync(dirpath);\n    } catch (e) {\n      succeed = false;\n      Log.info('Creating a new folder', dirpath);\n      try {\n        mkdirp.sync(dirpath);\n      } catch (e) {\n        console.error('Something went wrong while creating folder', e, e.stack);\n      }\n    }\n    return succeed;\n  },\n  checkFile (filepath) {\n    let succeed = true;\n    // Reset file\n    try {\n      Log.info('Try to remove the content & create the file', filepath);\n      fs.writeFileSync(filepath, '');\n    } catch (e) {\n      succeed = false;\n      console.error('Something went wrong while creating the file', filepath, e, e.stack);\n    }\n    return succeed;\n  }\n};\n"]},"sourceType":"script","hash":"22726b5f2aeb8794527f84a910f2de17dd246081"}
