{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOffers/OfferPicker/test/offerPickerHelpers.spec.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/Financing/client/FinancingOffers/OfferPicker/test/offerPickerHelpers.spec.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOffers/OfferPicker/test/offerPickerHelpers.spec.js","inputSourceMap":{"version":3,"sources":["imports/core/components/Financing/client/FinancingOffers/OfferPicker/test/offerPickerHelpers.spec.js"],"names":["expect","getAmortizationForStructureWithOffer","getMonthlyForStructureWithOffer","describe","it","props","loan","structure","wantedLoan","propertyWork","propertyId","offerId","offers","_id","interest10","amortizationGoal","amortizationYears","properties","value","to","equal","loanTranches","type","yearlyExpenses"],"mappings":"AAAA;;AACA;AACA,SAASA,MAAT,QAAuB,MAAvB;AAEA,SACEC,oCADF,EAEEC,+BAFF;AAKAC,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AACnCA,EAAAA,QAAQ,CAAC,sCAAD,EAAyC,MAAM;AACrDC,IAAAA,EAAE,CAAC,8CAAD,EAAiD,MAAM;AACvD,YAAMC,KAAK,GAAG;AACZC,QAAAA,IAAI,EAAE;AACJC,UAAAA,SAAS,EAAE;AACTC,YAAAA,UAAU,EAAE,MADH;AAETC,YAAAA,YAAY,EAAE,CAFL;AAGTC,YAAAA,UAAU,EAAE,MAHH;AAITC,YAAAA,OAAO,EAAE;AAJA,WADP;AAOJC,UAAAA,MAAM,EAAE,CACN;AACEC,YAAAA,GAAG,EAAE,KADP;AAEEC,YAAAA,UAAU,EAAE,IAFd;AAGEC,YAAAA,gBAAgB,EAAE,GAHpB;AAIEC,YAAAA,iBAAiB,EAAE;AAJrB,WADM,CAPJ;AAeJC,UAAAA,UAAU,EAAE,CAAC;AAAEJ,YAAAA,GAAG,EAAE,MAAP;AAAeK,YAAAA,KAAK,EAAE;AAAtB,WAAD;AAfR;AADM,OAAd;AAmBAlB,MAAAA,MAAM,CAACC,oCAAoC,CAACI,KAAD,CAArC,CAAN,CAAoDc,EAApD,CAAuDC,KAAvD,CAA6D,IAA7D;AACD,KArBC,CAAF;AAsBD,GAvBO,CAAR;AAyBAjB,EAAAA,QAAQ,CAAC,iCAAD,EAAoC,MAAM;AAChDC,IAAAA,EAAE,CAAC,WAAD,EAAc,MAAM;AACpB,YAAMC,KAAK,GAAG;AACZC,QAAAA,IAAI,EAAE;AACJC,UAAAA,SAAS,EAAE;AACTC,YAAAA,UAAU,EAAE,MADH;AAETC,YAAAA,YAAY,EAAE,CAFL;AAGTY,YAAAA,YAAY,EAAE,CAAC;AAAEC,cAAAA,IAAI,EAAE,YAAR;AAAsBJ,cAAAA,KAAK,EAAE;AAA7B,aAAD,CAHL;AAITP,YAAAA,OAAO,EAAE,KAJA;AAKTD,YAAAA,UAAU,EAAE;AALH,WADP;AAQJE,UAAAA,MAAM,EAAE,CACN;AACEC,YAAAA,GAAG,EAAE,KADP;AAEEC,YAAAA,UAAU,EAAE,IAFd;AAGEC,YAAAA,gBAAgB,EAAE,GAHpB;AAIEC,YAAAA,iBAAiB,EAAE;AAJrB,WADM,CARJ;AAgBJC,UAAAA,UAAU,EAAE,CAAC;AAAEJ,YAAAA,GAAG,EAAE,MAAP;AAAeK,YAAAA,KAAK,EAAE,OAAtB;AAA+BK,YAAAA,cAAc,EAAE;AAA/C,WAAD;AAhBR,SADM;AAmBZhB,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE,MADH;AAETC,UAAAA,YAAY,EAAE,CAFL;AAGTY,UAAAA,YAAY,EAAE,CAAC;AAAEC,YAAAA,IAAI,EAAE,YAAR;AAAsBJ,YAAAA,KAAK,EAAE;AAA7B,WAAD,CAHL;AAITP,UAAAA,OAAO,EAAE,KAJA;AAKTD,UAAAA,UAAU,EAAE;AALH;AAnBC,OAAd,CADoB,CA6BpB;AACA;AACA;;AAEAV,MAAAA,MAAM,CAACE,+BAA+B,CAACG,KAAD,CAAhC,CAAN,CAA+Cc,EAA/C,CAAkDC,KAAlD,CAAwD,OAAO,IAAP,GAAc,GAAtE;AACD,KAlCC,CAAF;AAmCD,GApCO,CAAR;AAqCD,CA/DO,CAAR","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport {\n  getAmortizationForStructureWithOffer,\n  getMonthlyForStructureWithOffer,\n} from '../offerPickerHelpers';\n\ndescribe('offerPickerHelpers', () => {\n  describe('getAmortizationForStructureWithOffer', () => {\n    it('returns correct amortization for a structure', () => {\n      const props = {\n        loan: {\n          structure: {\n            wantedLoan: 960000,\n            propertyWork: 0,\n            propertyId: 'prop',\n            offerId: 'off',\n          },\n          offers: [\n            {\n              _id: 'off',\n              interest10: 0.01,\n              amortizationGoal: 0.5,\n              amortizationYears: 20,\n            },\n          ],\n          properties: [{ _id: 'prop', value: 1200000 }],\n        },\n      };\n      expect(getAmortizationForStructureWithOffer(props)).to.equal(1500);\n    });\n  });\n\n  describe('getMonthlyForStructureWithOffer', () => {\n    it('test name', () => {\n      const props = {\n        loan: {\n          structure: {\n            wantedLoan: 960000,\n            propertyWork: 0,\n            loanTranches: [{ type: 'interest10', value: 1 }],\n            offerId: 'off',\n            propertyId: 'prop',\n          },\n          offers: [\n            {\n              _id: 'off',\n              interest10: 0.01,\n              amortizationGoal: 0.5,\n              amortizationYears: 20,\n            },\n          ],\n          properties: [{ _id: 'prop', value: 1200000, yearlyExpenses: 12000 }],\n        },\n        structure: {\n          wantedLoan: 960000,\n          propertyWork: 0,\n          loanTranches: [{ type: 'interest10', value: 1 }],\n          offerId: 'off',\n          propertyId: 'prop',\n        },\n      };\n\n      // 1000 property costs\n      // 1500 amortization\n      // 800 interests\n\n      expect(getMonthlyForStructureWithOffer(props)).to.equal(1000 + 1500 + 800);\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingOffers/OfferPicker/test/offerPickerHelpers.spec.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Financing/client/FinancingOffers/OfferPicker/test/offerPickerHelpers.spec.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet getAmortizationForStructureWithOffer, getMonthlyForStructureWithOffer;\nmodule.link(\"../offerPickerHelpers\", {\n  getAmortizationForStructureWithOffer(v) {\n    getAmortizationForStructureWithOffer = v;\n  },\n\n  getMonthlyForStructureWithOffer(v) {\n    getMonthlyForStructureWithOffer = v;\n  }\n\n}, 1);\ndescribe('offerPickerHelpers', () => {\n  describe('getAmortizationForStructureWithOffer', () => {\n    it('returns correct amortization for a structure', () => {\n      const props = {\n        loan: {\n          structure: {\n            wantedLoan: 960000,\n            propertyWork: 0,\n            propertyId: 'prop',\n            offerId: 'off'\n          },\n          offers: [{\n            _id: 'off',\n            interest10: 0.01,\n            amortizationGoal: 0.5,\n            amortizationYears: 20\n          }],\n          properties: [{\n            _id: 'prop',\n            value: 1200000\n          }]\n        }\n      };\n      expect(getAmortizationForStructureWithOffer(props)).to.equal(1500);\n    });\n  });\n  describe('getMonthlyForStructureWithOffer', () => {\n    it('test name', () => {\n      const props = {\n        loan: {\n          structure: {\n            wantedLoan: 960000,\n            propertyWork: 0,\n            loanTranches: [{\n              type: 'interest10',\n              value: 1\n            }],\n            offerId: 'off',\n            propertyId: 'prop'\n          },\n          offers: [{\n            _id: 'off',\n            interest10: 0.01,\n            amortizationGoal: 0.5,\n            amortizationYears: 20\n          }],\n          properties: [{\n            _id: 'prop',\n            value: 1200000,\n            yearlyExpenses: 12000\n          }]\n        },\n        structure: {\n          wantedLoan: 960000,\n          propertyWork: 0,\n          loanTranches: [{\n            type: 'interest10',\n            value: 1\n          }],\n          offerId: 'off',\n          propertyId: 'prop'\n        }\n      }; // 1000 property costs\n      // 1500 amortization\n      // 800 interests\n\n      expect(getMonthlyForStructureWithOffer(props)).to.equal(1000 + 1500 + 800);\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/components/Financing/client/FinancingOffers/OfferPicker/test/offerPickerHelpers.spec.js"],"names":["describe","it","props","loan","structure","wantedLoan","propertyWork","propertyId","offerId","offers","_id","interest10","amortizationGoal","amortizationYears","properties","value","expect","getAmortizationForStructureWithOffer","loanTranches","type","yearlyExpenses","getMonthlyForStructureWithOffer"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport { expect } from 'chai';\n\nimport {\n  getAmortizationForStructureWithOffer,\n  getMonthlyForStructureWithOffer,\n} from '../offerPickerHelpers';\n\ndescribe('offerPickerHelpers', () => {\n  describe('getAmortizationForStructureWithOffer', () => {\n    it('returns correct amortization for a structure', () => {\n      const props = {\n        loan: {\n          structure: {\n            wantedLoan: 960000,\n            propertyWork: 0,\n            propertyId: 'prop',\n            offerId: 'off',\n          },\n          offers: [\n            {\n              _id: 'off',\n              interest10: 0.01,\n              amortizationGoal: 0.5,\n              amortizationYears: 20,\n            },\n          ],\n          properties: [{ _id: 'prop', value: 1200000 }],\n        },\n      };\n      expect(getAmortizationForStructureWithOffer(props)).to.equal(1500);\n    });\n  });\n\n  describe('getMonthlyForStructureWithOffer', () => {\n    it('test name', () => {\n      const props = {\n        loan: {\n          structure: {\n            wantedLoan: 960000,\n            propertyWork: 0,\n            loanTranches: [{ type: 'interest10', value: 1 }],\n            offerId: 'off',\n            propertyId: 'prop',\n          },\n          offers: [\n            {\n              _id: 'off',\n              interest10: 0.01,\n              amortizationGoal: 0.5,\n              amortizationYears: 20,\n            },\n          ],\n          properties: [{ _id: 'prop', value: 1200000, yearlyExpenses: 12000 }],\n        },\n        structure: {\n          wantedLoan: 960000,\n          propertyWork: 0,\n          loanTranches: [{ type: 'interest10', value: 1 }],\n          offerId: 'off',\n          propertyId: 'prop',\n        },\n      };\n\n      // 1000 property costs\n      // 1500 amortization\n      // 800 interests\n\n      expect(getMonthlyForStructureWithOffer(props)).to.equal(1000 + 1500 + 800);\n    });\n  });\n});\n"]},"sourceType":"script","hash":"999d6302acace67bc6259ce5ab69af0f9a3835cd"}
