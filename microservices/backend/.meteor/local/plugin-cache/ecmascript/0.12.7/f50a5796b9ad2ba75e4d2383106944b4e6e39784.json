{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js"}},"code":"module.export({\n  default: () => LinkMany\n});\nlet Link;\nmodule.link(\"./base.js\", {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 1);\nlet SmartArgs;\nmodule.link(\"./lib/smartArguments.js\", {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 2);\n\nclass LinkMany extends Link {\n  clean() {\n    if (!this.object[this.linkStorageField]) {\n      this.object[this.linkStorageField] = [];\n    }\n  }\n  /**\n   * Ads the _ids to the object.\n   * @param what\n   */\n\n\n  add(what) {\n    if (this.isVirtual) {\n      this._virtualAction('add', what);\n\n      return this;\n    } //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n\n    this.clean();\n\n    const _ids = this.identifyIds(what, true);\n\n    this._validateIds(_ids);\n\n    const field = this.linkStorageField; // update the field\n\n    this.object[field] = _.union(this.object[field], _ids); // update the db\n\n    let modifier = {\n      $addToSet: {\n        [field]: {\n          $each: _ids\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n  /**\n   * @param what\n   */\n\n\n  remove(what) {\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n    this.clean();\n    const field = this.linkStorageField;\n    const [root, ...nested] = field.split('.');\n\n    const _ids = this.identifyIds(what); // update the field\n\n\n    this.object[root] = _.filter(this.object[root], _id => !_.contains(_ids, nested.length > 0 ? dot.pick(nested.join('.'), _id) : _id)); // update the db\n\n    let modifier = {\n      $pull: {\n        [root]: nested.length > 0 ? {\n          [nested.join('.')]: {\n            $in: _ids\n          }\n        } : {\n          $in: _ids\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n\n  set(what) {\n    if (this.isVirtual) {\n      this._virtualAction('set', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n  unset(what) {\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n}","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js"],"names":["module","export","default","LinkMany","Link","link","v","dot","SmartArgs","clean","object","linkStorageField","add","what","isVirtual","_virtualAction","_ids","identifyIds","_validateIds","field","_","union","modifier","$addToSet","$each","linker","mainCollection","update","_id","remove","Meteor","Error","root","nested","split","filter","contains","length","pick","join","$pull","$in","set","unset"],"mappings":"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","sourcesContent":["import Link from './base.js';\nimport dot from 'dot-object';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkMany extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * Ads the _ids to the object.\n     * @param what\n     */\n    add(what) {\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n        this.clean();\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        const field = this.linkStorageField;\n\n        // update the field\n        this.object[field] = _.union(this.object[field], _ids);\n\n        // update the db\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: _ids}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     */\n    remove(what) {\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n\n        this.clean();\n        const field = this.linkStorageField;\n        const [root, ...nested] = field.split('.');\n\n        const _ids = this.identifyIds(what);\n\n        // update the field\n        this.object[root] = _.filter(\n            this.object[root],\n    _id => !_.contains(_ids, nested.length > 0 ? dot.pick(nested.join('.'), _id) : _id)\n        );\n\n        // update the db\n        let modifier = {\n            $pull: {\n                [root]: nested.length > 0 ? {[nested.join('.')]: {$in: _ids}} : {$in: _ids},\n            },\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what) {\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}"]},"sourceType":"script","hash":"f50a5796b9ad2ba75e4d2383106944b4e6e39784"}
