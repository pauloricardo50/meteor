{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/startup/server/fetchIrs10yCron.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/startup/server/fetchIrs10yCron.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/startup/server/fetchIrs10yCron.js","inputSourceMap":{"version":3,"sources":["imports/startup/server/fetchIrs10yCron.js"],"names":["Meteor","SyncedCron","moment","logError","irs10yFetch","CronitorService","SlackService","getRandomMinute","Math","floor","random","jobName","cronitor","id","job","name","schedule","parser","randomMinute","tomorrow","add","format","parserText","parsedText","text","run","then","complete","remove","catch","error","message","includes","fail","sendError","additionalData","config","logger","level","tag","isProduction","console","log","startup","start"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,QAAT;AACA,SAASC,WAAT;AACA,OAAOC,eAAP;AACA,OAAOC,YAAP;;AAEA,MAAMC,eAAe,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,EAA/D;;AACA,MAAMC,OAAO,GAAG,eAAhB;AAEA,MAAMC,QAAQ,GAAG,IAAIP,eAAJ,CAAoB;AAAEQ,EAAAA,EAAE,EAAE;AAAN,CAApB,CAAjB,C,CAEA;;AACA,MAAMC,GAAG,GAAG,OAAO;AACjBC,EAAAA,IAAI,EAAEJ,OADW;;AAEjBK,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACf,UAAMC,YAAY,GAAGX,eAAe,EAApC;AACA,UAAMY,QAAQ,GAAGjB,MAAM,GACpBkB,GADc,CACV,CADU,EACP,MADO,EAEdC,MAFc,CAEP,MAFO,CAAjB;AAGA,UAAMC,UAAU,GAAI,QAAOJ,YAAa,OAAMC,QAAS,EAAvD;AACA,UAAMI,UAAU,GAAGN,MAAM,CAACO,IAAP,CAAYF,UAAZ,CAAnB;AAEA,WAAOC,UAAP;AACD,GAXgB;;AAYjBT,EAAAA,GAAG,GAAG;AACJ,QAAI;AACFF,MAAAA,QAAQ,CACLa,GADH,GAEGC,IAFH,CAEQ,MAAMtB,WAAW,CAACqB,GAAZ,CAAgB,EAAhB,CAFd,EAGGC,IAHH,CAGQd,QAAQ,CAACe,QAHjB,EAIGD,IAJH,CAIQ,MAAM;AACVzB,QAAAA,UAAU,CAAC2B,MAAX,CAAkBjB,OAAlB;AACAV,QAAAA,UAAU,CAACmB,GAAX,CAAeN,GAAG,EAAlB;AACD,OAPH,EAQGe,KARH,CAQUC,KAAD,IAAW;AAChB,YAAIA,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACC,OAAN,CAAcC,QAAd,CAAuB,aAAvB,CAArB,EAA4D;AAC1D,iBAAOpB,QAAQ,CAACe,QAAT,CAAkBG,KAAK,CAACC,OAAxB,CAAP;AACD;;AACD,eAAOnB,QAAQ,CAACqB,IAAT,CAAcH,KAAd,CAAP;AACD,OAbH;AAcD,KAfD,CAeE,OAAOA,KAAP,EAAc;AACdxB,MAAAA,YAAY,CAAC4B,SAAb,CAAuB;AACrBJ,QAAAA,KADqB;AAErBK,QAAAA,cAAc,EAAE,CAAC,oBAAD;AAFK,OAAvB;AAID;AACF;;AAlCgB,CAAP,CAAZ;;AAqCAlC,UAAU,CAACmC,MAAX,CAAkB;AAChBC,EAAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,KAAF;AAASP,IAAAA,OAAT;AAAkBQ,IAAAA;AAAlB,GAAD,KAA6B;AACnC,QAAIvC,MAAM,CAACwC,YAAX,EAAyB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,wDAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,OAAvB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,GAAnB;AACD;AACF;AARe,CAAlB;AAWAtC,UAAU,CAACmB,GAAX,CAAeN,GAAG,EAAlB;AAEAd,MAAM,CAAC2C,OAAP,CAAe,MAAM;AACnB,MAAI;AACF1C,IAAAA,UAAU,CAAC2C,KAAX;AACD,GAFD,CAEE,OAAOd,KAAP,EAAc;AACd3B,IAAAA,QAAQ,CAACsB,GAAT,CAAa;AAAEK,MAAAA;AAAF,KAAb;AACD;AACF,CAND","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { SyncedCron } from 'meteor/littledata:synced-cron';\n\nimport moment from 'moment';\n\nimport { logError } from 'core/api/methods';\nimport { irs10yFetch } from 'core/api/irs10y/server/methods';\nimport CronitorService from 'core/api/cronitor/server/CronitorService';\nimport SlackService from 'core/api/slack/server/SlackService';\n\nconst getRandomMinute = () => Math.floor(Math.random() * 49) + 10;\nconst jobName = 'Fetch IRS 10Y';\n\nconst cronitor = new CronitorService({ id: '19MCrQ' });\n\n// Make this a function so that randomMinute is always different\nconst job = () => ({\n  name: jobName,\n  schedule(parser) {\n    const randomMinute = getRandomMinute();\n    const tomorrow = moment()\n      .add(1, 'days')\n      .format('dddd');\n    const parserText = `at 6:${randomMinute} on ${tomorrow}`;\n    const parsedText = parser.text(parserText);\n\n    return parsedText;\n  },\n  job() {\n    try {\n      cronitor\n        .run()\n        .then(() => irs10yFetch.run({}))\n        .then(cronitor.complete)\n        .then(() => {\n          SyncedCron.remove(jobName);\n          SyncedCron.add(job());\n        })\n        .catch((error) => {\n          if (error.message && error.message.includes('existe déjà')) {\n            return cronitor.complete(error.message);\n          }\n          return cronitor.fail(error);\n        });\n    } catch (error) {\n      SlackService.sendError({\n        error,\n        additionalData: ['IRS 10Y CRON error'],\n      });\n    }\n  },\n});\n\nSyncedCron.config({\n  logger: ({ level, message, tag }) => {\n    if (Meteor.isProduction) {\n      console.log('---------------------- CRON LOG ----------------------');\n      console.log('Level', level);\n      console.log('Message', message);\n      console.log('Tag', tag);\n    }\n  },\n});\n\nSyncedCron.add(job());\n\nMeteor.startup(() => {\n  try {\n    SyncedCron.start();\n  } catch (error) {\n    logError.run({ error });\n  }\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/startup/server/fetchIrs10yCron.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/startup/server/fetchIrs10yCron.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SyncedCron;\nmodule.link(\"meteor/littledata:synced-cron\", {\n  SyncedCron(v) {\n    SyncedCron = v;\n  }\n\n}, 1);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 2);\nlet logError;\nmodule.link(\"../../core/api/methods\", {\n  logError(v) {\n    logError = v;\n  }\n\n}, 3);\nlet irs10yFetch;\nmodule.link(\"../../core/api/irs10y/server/methods\", {\n  irs10yFetch(v) {\n    irs10yFetch = v;\n  }\n\n}, 4);\nlet CronitorService;\nmodule.link(\"../../core/api/cronitor/server/CronitorService\", {\n  default(v) {\n    CronitorService = v;\n  }\n\n}, 5);\nlet SlackService;\nmodule.link(\"../../core/api/slack/server/SlackService\", {\n  default(v) {\n    SlackService = v;\n  }\n\n}, 6);\n\nconst getRandomMinute = () => Math.floor(Math.random() * 49) + 10;\n\nconst jobName = 'Fetch IRS 10Y';\nconst cronitor = new CronitorService({\n  id: '19MCrQ'\n}); // Make this a function so that randomMinute is always different\n\nconst job = () => ({\n  name: jobName,\n\n  schedule(parser) {\n    const randomMinute = getRandomMinute();\n    const tomorrow = moment().add(1, 'days').format('dddd');\n    const parserText = `at 6:${randomMinute} on ${tomorrow}`;\n    const parsedText = parser.text(parserText);\n    return parsedText;\n  },\n\n  job() {\n    try {\n      cronitor.run().then(() => irs10yFetch.run({})).then(cronitor.complete).then(() => {\n        SyncedCron.remove(jobName);\n        SyncedCron.add(job());\n      }).catch(error => {\n        if (error.message && error.message.includes('existe déjà')) {\n          return cronitor.complete(error.message);\n        }\n\n        return cronitor.fail(error);\n      });\n    } catch (error) {\n      SlackService.sendError({\n        error,\n        additionalData: ['IRS 10Y CRON error']\n      });\n    }\n  }\n\n});\n\nSyncedCron.config({\n  logger: ({\n    level,\n    message,\n    tag\n  }) => {\n    if (Meteor.isProduction) {\n      console.log('---------------------- CRON LOG ----------------------');\n      console.log('Level', level);\n      console.log('Message', message);\n      console.log('Tag', tag);\n    }\n  }\n});\nSyncedCron.add(job());\nMeteor.startup(() => {\n  try {\n    SyncedCron.start();\n  } catch (error) {\n    logError.run({\n      error\n    });\n  }\n});","map":{"version":3,"sources":["imports/startup/server/fetchIrs10yCron.js"],"names":["getRandomMinute","Math","jobName","cronitor","id","job","name","schedule","randomMinute","tomorrow","moment","parserText","parsedText","parser","irs10yFetch","SyncedCron","error","SlackService","additionalData","logger","tag","Meteor","console","logError"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { SyncedCron } from 'meteor/littledata:synced-cron';\n\nimport moment from 'moment';\n\nimport { logError } from 'core/api/methods';\nimport { irs10yFetch } from 'core/api/irs10y/server/methods';\nimport CronitorService from 'core/api/cronitor/server/CronitorService';\nimport SlackService from 'core/api/slack/server/SlackService';\n\nconst getRandomMinute = () => Math.floor(Math.random() * 49) + 10;\nconst jobName = 'Fetch IRS 10Y';\n\nconst cronitor = new CronitorService({ id: '19MCrQ' });\n\n// Make this a function so that randomMinute is always different\nconst job = () => ({\n  name: jobName,\n  schedule(parser) {\n    const randomMinute = getRandomMinute();\n    const tomorrow = moment()\n      .add(1, 'days')\n      .format('dddd');\n    const parserText = `at 6:${randomMinute} on ${tomorrow}`;\n    const parsedText = parser.text(parserText);\n\n    return parsedText;\n  },\n  job() {\n    try {\n      cronitor\n        .run()\n        .then(() => irs10yFetch.run({}))\n        .then(cronitor.complete)\n        .then(() => {\n          SyncedCron.remove(jobName);\n          SyncedCron.add(job());\n        })\n        .catch((error) => {\n          if (error.message && error.message.includes('existe déjà')) {\n            return cronitor.complete(error.message);\n          }\n          return cronitor.fail(error);\n        });\n    } catch (error) {\n      SlackService.sendError({\n        error,\n        additionalData: ['IRS 10Y CRON error'],\n      });\n    }\n  },\n});\n\nSyncedCron.config({\n  logger: ({ level, message, tag }) => {\n    if (Meteor.isProduction) {\n      console.log('---------------------- CRON LOG ----------------------');\n      console.log('Level', level);\n      console.log('Message', message);\n      console.log('Tag', tag);\n    }\n  },\n});\n\nSyncedCron.add(job());\n\nMeteor.startup(() => {\n  try {\n    SyncedCron.start();\n  } catch (error) {\n    logError.run({ error });\n  }\n});\n"]},"sourceType":"script","hash":"cf583be36a4479981d02a534f2477bf244fb9a9e"}
