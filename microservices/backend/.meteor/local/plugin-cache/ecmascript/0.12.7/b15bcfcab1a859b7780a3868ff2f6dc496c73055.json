{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/PromotionCalculator.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/utils/Calculator/PromotionCalculator.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/PromotionCalculator.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/Calculator/PromotionCalculator.js"],"names":["pick","PROMOTION_TYPES","PURCHASE_TYPE","withPromotionCalculator","SuperClass","canAffordPromotionLot","loan","promotionLot","value","notaryFees","getSolvency","income","getTotalIncome","bankFortune","getFortune","cashFortune","getCashFortune","insurance2","getInsurance2","results","withBankFortune","Math","round","maxBorrowRatio","withInsurance2","getMaxPropertyValueWithInsurance2","cash","withInsurance3","withInsurance2And3","Object","keys","reduce","obj","key","availableFortune","maxPropertyValue","minCash","canAffordProperty","getIncomeLimitedProperty","borrowers","fortune","propertyValue","getIncomeLimitedPropertyValue","nF","r","getAmortizationDuration","i","theoreticalInterestRate","mR","maxIncomeRatio","m","theoreticalMaintenanceRate","formatPromotionOptionIntoProperty","promotionOption","property","promotionLots","properties","promotion","totalValue","shouldUseConstructionNotaryFees","structureId","promotions","purchaseType","CONSTRUCTION","isPromotionProperty","length","type","SHARE"],"mappings":"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","sourcesContent":["import pick from 'lodash/pick';\n\nimport { PROMOTION_TYPES, PURCHASE_TYPE } from '../../api/constants';\n\nexport const withPromotionCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    canAffordPromotionLot({ loan, promotionLot }) {\n      const { value, notaryFees } = promotionLot;\n      return true;\n    }\n\n    getSolvency({ loan, notaryFees = 0 }) {\n      const income = this.getTotalIncome({ loan });\n      const bankFortune = this.getFortune({ loan });\n      const cashFortune = this.getCashFortune({ loan });\n      const insurance2 = this.getInsurance2({ loan });\n\n      const results = {\n        withBankFortune: Math.round((bankFortune - notaryFees) / (1 - this.maxBorrowRatio)),\n        withInsurance2: this.getMaxPropertyValueWithInsurance2({\n          cash: bankFortune,\n          insurance2,\n          notaryFees,\n        }),\n        withInsurance3: Math.round((cashFortune - notaryFees) / (1 - this.maxBorrowRatio)),\n        withInsurance2And3: this.getMaxPropertyValueWithInsurance2({\n          cash: cashFortune,\n          insurance2,\n          notaryFees,\n        }),\n      };\n\n      return Object.keys(results).reduce(\n        (obj, key) => ({ ...obj, [key]: Math.round(results[key]) }),\n        {},\n      );\n    }\n\n    getMaxPropertyValueWithInsurance2({ cash, insurance2, notaryFees }) {\n      const availableFortune = cash - notaryFees;\n      const maxPropertyValue = availableFortune / this.minCash;\n      const canAffordProperty = (maxPropertyValue - availableFortune - insurance2) / maxPropertyValue\n        <= this.maxBorrowRatio;\n\n      if (canAffordProperty) {\n        return Math.round(maxPropertyValue);\n      }\n\n      return Math.round((availableFortune + insurance2) / (1 - this.maxBorrowRatio));\n    }\n\n    getIncomeLimitedProperty({\n      borrowers,\n      income,\n      fortune,\n      propertyValue,\n      notaryFees,\n    }) {\n      return this.getIncomeLimitedPropertyValue({\n        nF: notaryFees / propertyValue,\n        r: this.getAmortizationDuration({ borrowers }),\n        i: this.theoreticalInterestRate,\n        mR: this.maxIncomeRatio,\n        m: this.theoreticalMaintenanceRate,\n      })({ income, fortune });\n    }\n\n    formatPromotionOptionIntoProperty(promotionOption) {\n      if (!promotionOption) {\n        return;\n      }\n\n      const property = promotionOption.promotionLots[0].properties[0];\n\n      return {\n        // Get the address from the promotion\n        ...pick(promotionOption.promotion, [\n          'address1',\n          'address2',\n          'zipCode',\n          'city',\n        ]),\n        ...promotionOption,\n        ...property,\n        totalValue: promotionOption.value,\n      };\n    }\n\n    shouldUseConstructionNotaryFees({ loan, structureId }) {\n      const { promotions } = loan;\n\n      if (loan.purchaseType === PURCHASE_TYPE.CONSTRUCTION) {\n        return true;\n      }\n\n      if (!this.isPromotionProperty({ loan, structureId })) {\n        return false;\n      }\n\n      if (!promotions || (promotions.length && promotions.length === 0)) {\n        return false;\n      }\n\n      const promotion = promotions[0];\n\n      return promotion.type === PROMOTION_TYPES.SHARE;\n    }\n  };\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/Calculator/PromotionCalculator.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/Calculator/PromotionCalculator.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  withPromotionCalculator: () => withPromotionCalculator\n});\nlet pick;\nmodule.link(\"lodash/pick\", {\n  default(v) {\n    pick = v;\n  }\n\n}, 0);\nlet PROMOTION_TYPES, PURCHASE_TYPE;\nmodule.link(\"../../api/constants\", {\n  PROMOTION_TYPES(v) {\n    PROMOTION_TYPES = v;\n  },\n\n  PURCHASE_TYPE(v) {\n    PURCHASE_TYPE = v;\n  }\n\n}, 1);\n\nconst withPromotionCalculator = (SuperClass = class {}) => class extends SuperClass {\n  canAffordPromotionLot({\n    loan,\n    promotionLot\n  }) {\n    const {\n      value,\n      notaryFees\n    } = promotionLot;\n    return true;\n  }\n\n  getSolvency({\n    loan,\n    notaryFees = 0\n  }) {\n    const income = this.getTotalIncome({\n      loan\n    });\n    const bankFortune = this.getFortune({\n      loan\n    });\n    const cashFortune = this.getCashFortune({\n      loan\n    });\n    const insurance2 = this.getInsurance2({\n      loan\n    });\n    const results = {\n      withBankFortune: Math.round((bankFortune - notaryFees) / (1 - this.maxBorrowRatio)),\n      withInsurance2: this.getMaxPropertyValueWithInsurance2({\n        cash: bankFortune,\n        insurance2,\n        notaryFees\n      }),\n      withInsurance3: Math.round((cashFortune - notaryFees) / (1 - this.maxBorrowRatio)),\n      withInsurance2And3: this.getMaxPropertyValueWithInsurance2({\n        cash: cashFortune,\n        insurance2,\n        notaryFees\n      })\n    };\n    return Object.keys(results).reduce((obj, key) => (0, _objectSpread2.default)({}, obj, {\n      [key]: Math.round(results[key])\n    }), {});\n  }\n\n  getMaxPropertyValueWithInsurance2({\n    cash,\n    insurance2,\n    notaryFees\n  }) {\n    const availableFortune = cash - notaryFees;\n    const maxPropertyValue = availableFortune / this.minCash;\n    const canAffordProperty = (maxPropertyValue - availableFortune - insurance2) / maxPropertyValue <= this.maxBorrowRatio;\n\n    if (canAffordProperty) {\n      return Math.round(maxPropertyValue);\n    }\n\n    return Math.round((availableFortune + insurance2) / (1 - this.maxBorrowRatio));\n  }\n\n  getIncomeLimitedProperty({\n    borrowers,\n    income,\n    fortune,\n    propertyValue,\n    notaryFees\n  }) {\n    return this.getIncomeLimitedPropertyValue({\n      nF: notaryFees / propertyValue,\n      r: this.getAmortizationDuration({\n        borrowers\n      }),\n      i: this.theoreticalInterestRate,\n      mR: this.maxIncomeRatio,\n      m: this.theoreticalMaintenanceRate\n    })({\n      income,\n      fortune\n    });\n  }\n\n  formatPromotionOptionIntoProperty(promotionOption) {\n    if (!promotionOption) {\n      return;\n    }\n\n    const property = promotionOption.promotionLots[0].properties[0];\n    return (0, _objectSpread2.default)({}, pick(promotionOption.promotion, ['address1', 'address2', 'zipCode', 'city']), promotionOption, property, {\n      totalValue: promotionOption.value\n    });\n  }\n\n  shouldUseConstructionNotaryFees({\n    loan,\n    structureId\n  }) {\n    const {\n      promotions\n    } = loan;\n\n    if (loan.purchaseType === PURCHASE_TYPE.CONSTRUCTION) {\n      return true;\n    }\n\n    if (!this.isPromotionProperty({\n      loan,\n      structureId\n    })) {\n      return false;\n    }\n\n    if (!promotions || promotions.length && promotions.length === 0) {\n      return false;\n    }\n\n    const promotion = promotions[0];\n    return promotion.type === PROMOTION_TYPES.SHARE;\n  }\n\n};","map":{"version":3,"sources":["imports/core/utils/Calculator/PromotionCalculator.js"],"names":["withPromotionCalculator","SuperClass","canAffordPromotionLot","promotionLot","notaryFees","getSolvency","income","loan","bankFortune","cashFortune","insurance2","results","withBankFortune","Math","withInsurance2","cash","withInsurance3","withInsurance2And3","getMaxPropertyValueWithInsurance2","availableFortune","maxPropertyValue","canAffordProperty","getIncomeLimitedProperty","nF","r","borrowers","i","mR","m","theoreticalMaintenanceRate","fortune","formatPromotionOptionIntoProperty","property","promotionOption","pick","totalValue","value","shouldUseConstructionNotaryFees","structureId","promotions","PURCHASE_TYPE","promotion","PROMOTION_TYPES"],"mappings":"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","sourcesContent":["import pick from 'lodash/pick';\n\nimport { PROMOTION_TYPES, PURCHASE_TYPE } from '../../api/constants';\n\nexport const withPromotionCalculator = (SuperClass = class {}) =>\n  class extends SuperClass {\n    canAffordPromotionLot({ loan, promotionLot }) {\n      const { value, notaryFees } = promotionLot;\n      return true;\n    }\n\n    getSolvency({ loan, notaryFees = 0 }) {\n      const income = this.getTotalIncome({ loan });\n      const bankFortune = this.getFortune({ loan });\n      const cashFortune = this.getCashFortune({ loan });\n      const insurance2 = this.getInsurance2({ loan });\n\n      const results = {\n        withBankFortune: Math.round((bankFortune - notaryFees) / (1 - this.maxBorrowRatio)),\n        withInsurance2: this.getMaxPropertyValueWithInsurance2({\n          cash: bankFortune,\n          insurance2,\n          notaryFees,\n        }),\n        withInsurance3: Math.round((cashFortune - notaryFees) / (1 - this.maxBorrowRatio)),\n        withInsurance2And3: this.getMaxPropertyValueWithInsurance2({\n          cash: cashFortune,\n          insurance2,\n          notaryFees,\n        }),\n      };\n\n      return Object.keys(results).reduce(\n        (obj, key) => ({ ...obj, [key]: Math.round(results[key]) }),\n        {},\n      );\n    }\n\n    getMaxPropertyValueWithInsurance2({ cash, insurance2, notaryFees }) {\n      const availableFortune = cash - notaryFees;\n      const maxPropertyValue = availableFortune / this.minCash;\n      const canAffordProperty = (maxPropertyValue - availableFortune - insurance2) / maxPropertyValue\n        <= this.maxBorrowRatio;\n\n      if (canAffordProperty) {\n        return Math.round(maxPropertyValue);\n      }\n\n      return Math.round((availableFortune + insurance2) / (1 - this.maxBorrowRatio));\n    }\n\n    getIncomeLimitedProperty({\n      borrowers,\n      income,\n      fortune,\n      propertyValue,\n      notaryFees,\n    }) {\n      return this.getIncomeLimitedPropertyValue({\n        nF: notaryFees / propertyValue,\n        r: this.getAmortizationDuration({ borrowers }),\n        i: this.theoreticalInterestRate,\n        mR: this.maxIncomeRatio,\n        m: this.theoreticalMaintenanceRate,\n      })({ income, fortune });\n    }\n\n    formatPromotionOptionIntoProperty(promotionOption) {\n      if (!promotionOption) {\n        return;\n      }\n\n      const property = promotionOption.promotionLots[0].properties[0];\n\n      return {\n        // Get the address from the promotion\n        ...pick(promotionOption.promotion, [\n          'address1',\n          'address2',\n          'zipCode',\n          'city',\n        ]),\n        ...promotionOption,\n        ...property,\n        totalValue: promotionOption.value,\n      };\n    }\n\n    shouldUseConstructionNotaryFees({ loan, structureId }) {\n      const { promotions } = loan;\n\n      if (loan.purchaseType === PURCHASE_TYPE.CONSTRUCTION) {\n        return true;\n      }\n\n      if (!this.isPromotionProperty({ loan, structureId })) {\n        return false;\n      }\n\n      if (!promotions || (promotions.length && promotions.length === 0)) {\n        return false;\n      }\n\n      const promotion = promotions[0];\n\n      return promotion.type === PROMOTION_TYPES.SHARE;\n    }\n  };\n"]},"sourceType":"script","hash":"b15bcfcab1a859b7780a3868ff2f6dc496c73055"}
