{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/loans/server/test/methods.test.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/loans/server/test/methods.test.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/loans/server/test/methods.test.js","inputSourceMap":{"version":3,"sources":["imports/core/api/loans/server/test/methods.test.js"],"names":["expect","sinon","Factory","resetDatabase","TaskService","SecurityService","generateData","requestLoanVerification","LoanService","userId","adminId","describe","beforeEach","user","admin","_id","forEach","variable","to","be","a","stub","loans","callsFake","afterEach","isAllowedToUpdate","restore","it","create","assignedEmployeeId","loan","loanId","userFormsEnabled","equal","run","then","task","findOne","assigneeLink","get"],"mappings":"AAAA;AACA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAOC,WAAP;AACA,OAAOC,eAAP;AACA,SAASC,YAAT;AACA,SAASC,uBAAT;AACA,OAAOC,WAAP;AAEA,IAAIC,MAAJ;AACA,IAAIC,OAAJ;AAEAC,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7BC,EAAAA,UAAU,CAAC,MAAM;AACfT,IAAAA,aAAa;AAEb,UAAM;AAAEU,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBR,YAAY,EAApC;AACAG,IAAAA,MAAM,GAAGI,IAAI,CAACE,GAAd;AACAL,IAAAA,OAAO,GAAGI,KAAK,CAACC,GAAhB;AAEA,KAACN,MAAD,EAASC,OAAT,EAAkBM,OAAlB,CAA2BC,QAAD,IAAc;AACtCjB,MAAAA,MAAM,CAACiB,QAAD,CAAN,CAAiBC,EAAjB,CAAoBC,EAApB,CAAuBC,CAAvB,CAAyB,QAAzB;AACD,KAFD;AAGD,GAVS,CAAV;AAYAT,EAAAA,QAAQ,CAAC,yBAAD,EAA4B,MAAM;AACxCC,IAAAA,UAAU,CAAC,MAAM;AACfT,MAAAA,aAAa;AACbF,MAAAA,KAAK,CACFoB,IADH,CACQhB,eAAe,CAACiB,KADxB,EAC+B,mBAD/B,EAEGC,SAFH,CAEa,MAAM,CAAE,CAFrB;AAGD,KALS,CAAV;AAOAC,IAAAA,SAAS,CAAC,MAAM;AACdnB,MAAAA,eAAe,CAACiB,KAAhB,CAAsBG,iBAAtB,CAAwCC,OAAxC;AACD,KAFQ,CAAT;AAIAC,IAAAA,EAAE,CAAC,4DAAD,EAA+D,MAAM;AACrE,YAAMb,KAAK,GAAGZ,OAAO,CAAC0B,MAAR,CAAe,OAAf,CAAd;AACA,YAAMf,IAAI,GAAGX,OAAO,CAAC0B,MAAR,CAAe,MAAf,EAAuB;AAAEC,QAAAA,kBAAkB,EAAEf,KAAK,CAACC;AAA5B,OAAvB,CAAb;AACA,YAAMe,IAAI,GAAG5B,OAAO,CAAC0B,MAAR,CAAe,MAAf,EAAuB;AAAEnB,QAAAA,MAAM,EAAEI,IAAI,CAACE;AAAf,OAAvB,CAAb;AACA,YAAMgB,MAAM,GAAGD,IAAI,CAACf,GAApB;AAEAf,MAAAA,MAAM,CAAC8B,IAAI,CAACE,gBAAN,CAAN,CAA8Bd,EAA9B,CAAiCe,KAAjC,CAAuC,IAAvC;AAEA,aAAO1B,uBAAuB,CAAC2B,GAAxB,CAA4B;AAAEH,QAAAA,MAAM,EAAED,IAAI,CAACf;AAAf,OAA5B,EAAkDoB,IAAlD,CAAuD,MAAM;AAClE,cAAMC,IAAI,GAAGhC,WAAW,CAACiC,OAAZ,CAAoB;AAAE,0BAAgBP,IAAI,CAACf;AAAvB,SAApB,CAAb;AACAf,QAAAA,MAAM,CAACoC,IAAI,CAACE,YAAL,CAAkBvB,GAAnB,CAAN,CAA8BG,EAA9B,CAAiCe,KAAjC,CAAuCnB,KAAK,CAACC,GAA7C;AACAf,QAAAA,MAAM,CAACQ,WAAW,CAAC+B,GAAZ,CAAgBR,MAAhB,EAAwBC,gBAAzB,CAAN,CAAiDd,EAAjD,CAAoDe,KAApD,CAA0D,KAA1D;AACD,OAJM,CAAP;AAKD,KAbC,CAAF;AAcD,GA1BO,CAAR;AA2BD,CAxCO,CAAR","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\nimport sinon from 'sinon';\nimport { Factory } from 'meteor/dburles:factory';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport TaskService from '../../../tasks/server/TaskService';\nimport SecurityService from '../../../security';\nimport { generateData } from '../../../../utils/testHelpers';\nimport { requestLoanVerification } from '../../methodDefinitions';\nimport LoanService from '../LoanService';\n\nlet userId;\nlet adminId;\n\ndescribe('Loan methods', () => {\n  beforeEach(() => {\n    resetDatabase();\n\n    const { user, admin } = generateData();\n    userId = user._id;\n    adminId = admin._id;\n\n    [userId, adminId].forEach((variable) => {\n      expect(variable).to.be.a('string');\n    });\n  });\n\n  describe('requestLoanVerification', () => {\n    beforeEach(() => {\n      resetDatabase();\n      sinon\n        .stub(SecurityService.loans, 'isAllowedToUpdate')\n        .callsFake(() => {});\n    });\n\n    afterEach(() => {\n      SecurityService.loans.isAllowedToUpdate.restore();\n    });\n\n    it('inserts a task with the proper assignee and disables forms', () => {\n      const admin = Factory.create('admin');\n      const user = Factory.create('user', { assignedEmployeeId: admin._id });\n      const loan = Factory.create('loan', { userId: user._id });\n      const loanId = loan._id;\n\n      expect(loan.userFormsEnabled).to.equal(true);\n\n      return requestLoanVerification.run({ loanId: loan._id }).then(() => {\n        const task = TaskService.findOne({ 'loanLink._id': loan._id });\n        expect(task.assigneeLink._id).to.equal(admin._id);\n        expect(LoanService.get(loanId).userFormsEnabled).to.equal(false);\n      });\n    });\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/loans/server/test/methods.test.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/loans/server/test/methods.test.js"}},"code":"let expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 0);\nlet sinon;\nmodule.link(\"sinon\", {\n  default(v) {\n    sinon = v;\n  }\n\n}, 1);\nlet Factory;\nmodule.link(\"meteor/dburles:factory\", {\n  Factory(v) {\n    Factory = v;\n  }\n\n}, 2);\nlet resetDatabase;\nmodule.link(\"meteor/xolvio:cleaner\", {\n  resetDatabase(v) {\n    resetDatabase = v;\n  }\n\n}, 3);\nlet TaskService;\nmodule.link(\"../../../tasks/server/TaskService\", {\n  default(v) {\n    TaskService = v;\n  }\n\n}, 4);\nlet SecurityService;\nmodule.link(\"../../../security\", {\n  default(v) {\n    SecurityService = v;\n  }\n\n}, 5);\nlet generateData;\nmodule.link(\"../../../../utils/testHelpers\", {\n  generateData(v) {\n    generateData = v;\n  }\n\n}, 6);\nlet requestLoanVerification;\nmodule.link(\"../../methodDefinitions\", {\n  requestLoanVerification(v) {\n    requestLoanVerification = v;\n  }\n\n}, 7);\nlet LoanService;\nmodule.link(\"../LoanService\", {\n  default(v) {\n    LoanService = v;\n  }\n\n}, 8);\nlet userId;\nlet adminId;\ndescribe('Loan methods', () => {\n  beforeEach(() => {\n    resetDatabase();\n    const {\n      user,\n      admin\n    } = generateData();\n    userId = user._id;\n    adminId = admin._id;\n    [userId, adminId].forEach(variable => {\n      expect(variable).to.be.a('string');\n    });\n  });\n  describe('requestLoanVerification', () => {\n    beforeEach(() => {\n      resetDatabase();\n      sinon.stub(SecurityService.loans, 'isAllowedToUpdate').callsFake(() => {});\n    });\n    afterEach(() => {\n      SecurityService.loans.isAllowedToUpdate.restore();\n    });\n    it('inserts a task with the proper assignee and disables forms', () => {\n      const admin = Factory.create('admin');\n      const user = Factory.create('user', {\n        assignedEmployeeId: admin._id\n      });\n      const loan = Factory.create('loan', {\n        userId: user._id\n      });\n      const loanId = loan._id;\n      expect(loan.userFormsEnabled).to.equal(true);\n      return requestLoanVerification.run({\n        loanId: loan._id\n      }).then(() => {\n        const task = TaskService.findOne({\n          'loanLink._id': loan._id\n        });\n        expect(task.assigneeLink._id).to.equal(admin._id);\n        expect(LoanService.get(loanId).userFormsEnabled).to.equal(false);\n      });\n    });\n  });\n});","map":{"version":3,"sources":["imports/core/api/loans/server/test/methods.test.js"],"names":["describe","beforeEach","resetDatabase","admin","generateData","userId","user","adminId","variable","expect","sinon","SecurityService","afterEach","it","Factory","assignedEmployeeId","_id","loan","loanId","task","LoanService"],"mappings":"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","sourcesContent":["/* eslint-env mocha */\nimport { expect } from 'chai';\nimport sinon from 'sinon';\nimport { Factory } from 'meteor/dburles:factory';\nimport { resetDatabase } from 'meteor/xolvio:cleaner';\n\nimport TaskService from '../../../tasks/server/TaskService';\nimport SecurityService from '../../../security';\nimport { generateData } from '../../../../utils/testHelpers';\nimport { requestLoanVerification } from '../../methodDefinitions';\nimport LoanService from '../LoanService';\n\nlet userId;\nlet adminId;\n\ndescribe('Loan methods', () => {\n  beforeEach(() => {\n    resetDatabase();\n\n    const { user, admin } = generateData();\n    userId = user._id;\n    adminId = admin._id;\n\n    [userId, adminId].forEach((variable) => {\n      expect(variable).to.be.a('string');\n    });\n  });\n\n  describe('requestLoanVerification', () => {\n    beforeEach(() => {\n      resetDatabase();\n      sinon\n        .stub(SecurityService.loans, 'isAllowedToUpdate')\n        .callsFake(() => {});\n    });\n\n    afterEach(() => {\n      SecurityService.loans.isAllowedToUpdate.restore();\n    });\n\n    it('inserts a task with the proper assignee and disables forms', () => {\n      const admin = Factory.create('admin');\n      const user = Factory.create('user', { assignedEmployeeId: admin._id });\n      const loan = Factory.create('loan', { userId: user._id });\n      const loanId = loan._id;\n\n      expect(loan.userFormsEnabled).to.equal(true);\n\n      return requestLoanVerification.run({ loanId: loan._id }).then(() => {\n        const task = TaskService.findOne({ 'loanLink._id': loan._id });\n        expect(task.assigneeLink._id).to.equal(admin._id);\n        expect(LoanService.get(loanId).userFormsEnabled).to.equal(false);\n      });\n    });\n  });\n});\n"]},"sourceType":"script","hash":"21c7534a5bd0b214d37451701a6285a4cbb4ae3d"}
