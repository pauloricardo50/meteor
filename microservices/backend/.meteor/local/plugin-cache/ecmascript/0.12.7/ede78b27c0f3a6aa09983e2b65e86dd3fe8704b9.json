{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/epotek:accounts-ui/imports/ui/components/LoginForm.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/epotek:accounts-ui/imports/ui/components/LoginForm.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/epotek:accounts-ui/imports/ui/components/LoginForm.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/epotek:accounts-ui/imports/ui/components/LoginForm.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/epotek:accounts-ui/imports/ui/components/LoginForm.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar React, Component;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar PropTypes;\nmodule.link(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar ReactDOM;\nmodule.link(\"react-dom\", {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 2);\nvar withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker: function (v) {\n    withTracker = v;\n  }\n}, 3);\nvar Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 4);\nvar T9n;\nmodule.link(\"meteor-accounts-t9n\", {\n  T9n: function (v) {\n    T9n = v;\n  }\n}, 5);\nvar KEY_PREFIX;\nmodule.link(\"../../login_session.js\", {\n  KEY_PREFIX: function (v) {\n    KEY_PREFIX = v;\n  }\n}, 6);\nmodule.link(\"./Form.jsx\");\nvar STATES, passwordSignupFields, validateEmail, validatePassword, validateUsername, loginResultCallback, getLoginServices, hasPasswordService, capitalize;\nmodule.link(\"../../helpers.js\", {\n  STATES: function (v) {\n    STATES = v;\n  },\n  passwordSignupFields: function (v) {\n    passwordSignupFields = v;\n  },\n  validateEmail: function (v) {\n    validateEmail = v;\n  },\n  validatePassword: function (v) {\n    validatePassword = v;\n  },\n  validateUsername: function (v) {\n    validateUsername = v;\n  },\n  loginResultCallback: function (v) {\n    loginResultCallback = v;\n  },\n  getLoginServices: function (v) {\n    getLoginServices = v;\n  },\n  hasPasswordService: function (v) {\n    hasPasswordService = v;\n  },\n  capitalize: function (v) {\n    capitalize = v;\n  }\n}, 7);\n\nfunction indexBy(array, key) {\n  var result = {};\n  array.forEach(function (obj) {\n    result[obj[key]] = obj;\n  });\n  return result;\n}\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(LoginForm, _Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    var formState = props.formState,\n        loginPath = props.loginPath,\n        signUpPath = props.signUpPath,\n        resetPasswordPath = props.resetPasswordPath,\n        profilePath = props.profilePath,\n        changePasswordPath = props.changePasswordPath;\n\n    if (formState === STATES.SIGN_IN && Package['accounts-password']) {\n      console.warn('Do not force the state to SIGN_IN on Accounts.ui.LoginForm, it will make it impossible to reset password in your app, this state is also the default state if logged out, so no need to force it.');\n    } // Set inital state.\n\n\n    _this.state = {\n      messages: [],\n      waiting: true,\n      formState: formState ? formState : Accounts.user() ? STATES.PROFILE : STATES.SIGN_IN,\n      onSubmitHook: props.onSubmitHook || Accounts.ui._options.onSubmitHook,\n      onSignedInHook: props.onSignedInHook || Accounts.ui._options.onSignedInHook,\n      onSignedOutHook: props.onSignedOutHook || Accounts.ui._options.onSignedOutHook,\n      onPreSignUpHook: props.onPreSignUpHook || Accounts.ui._options.onPreSignUpHook,\n      onPostSignUpHook: props.onPostSignUpHook || Accounts.ui._options.onPostSignUpHook\n    };\n    _this.translate = _this.translate.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  var _proto = LoginForm.prototype;\n\n  _proto.componentDidMount = function () {\n    function componentDidMount() {\n      var _this2 = this;\n\n      this.setState(function (prevState) {\n        return {\n          waiting: false,\n          ready: true\n        };\n      });\n      var changeState = Session.get(KEY_PREFIX + 'state');\n\n      switch (changeState) {\n        case 'enrollAccountToken':\n          this.setState(function (prevState) {\n            return {\n              formState: STATES.ENROLL_ACCOUNT\n            };\n          });\n          Session.set(KEY_PREFIX + 'state', null);\n          break;\n\n        case 'resetPasswordToken':\n          this.setState(function (prevState) {\n            return {\n              formState: STATES.PASSWORD_CHANGE\n            };\n          });\n          Session.set(KEY_PREFIX + 'state', null);\n          break;\n\n        case 'justVerifiedEmail':\n          this.setState(function (prevState) {\n            return {\n              formState: STATES.PROFILE\n            };\n          });\n          Session.set(KEY_PREFIX + 'state', null);\n          break;\n      } // Add default field values once the form did mount on the client\n\n\n      this.setState(function (prevState) {\n        return (0, _objectSpread2.default)({}, _this2.getDefaultFieldValues());\n      });\n    }\n\n    return componentDidMount;\n  }();\n\n  _proto.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps, nextContext) {\n      if (nextProps.formState && nextProps.formState !== this.state.formState) {\n        this.setState((0, _objectSpread2.default)({\n          formState: nextProps.formState\n        }, this.getDefaultFieldValues()));\n      }\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  _proto.componentDidUpdate = function () {\n    function componentDidUpdate(prevProps, prevState) {\n      if (!prevProps.user !== !this.props.user) {\n        this.setState({\n          formState: this.props.user ? STATES.PROFILE : STATES.SIGN_IN\n        });\n      }\n    }\n\n    return componentDidUpdate;\n  }();\n\n  _proto.translate = function () {\n    function translate(text) {\n      // if (this.props.t) {\n      //   return this.props.t(text);\n      // }\n      return T9n.get(text);\n    }\n\n    return translate;\n  }();\n\n  _proto.validateField = function () {\n    function validateField(field, value) {\n      var formState = this.state.formState;\n\n      switch (field) {\n        case 'email':\n          return validateEmail(value, this.showMessage.bind(this), this.clearMessage.bind(this));\n\n        case 'password':\n          return validatePassword(value, this.showMessage.bind(this), this.clearMessage.bind(this));\n\n        case 'username':\n          return validateUsername(value, this.showMessage.bind(this), this.clearMessage.bind(this), formState);\n      }\n    }\n\n    return validateField;\n  }();\n\n  _proto.getUsernameOrEmailField = function () {\n    function getUsernameOrEmailField() {\n      return {\n        id: 'usernameOrEmail',\n        hint: this.translate('enterUsernameOrEmail'),\n        label: this.translate('usernameOrEmail'),\n        required: true,\n        defaultValue: this.state.username || '',\n        onChange: this.handleChange.bind(this, 'usernameOrEmail'),\n        message: this.getMessageForField('usernameOrEmail')\n      };\n    }\n\n    return getUsernameOrEmailField;\n  }();\n\n  _proto.getUsernameField = function () {\n    function getUsernameField() {\n      return {\n        id: 'username',\n        hint: this.translate('enterUsername'),\n        label: this.translate('username'),\n        required: true,\n        defaultValue: this.state.username || '',\n        onChange: this.handleChange.bind(this, 'username'),\n        message: this.getMessageForField('username')\n      };\n    }\n\n    return getUsernameField;\n  }();\n\n  _proto.getEmailField = function () {\n    function getEmailField() {\n      return {\n        id: 'email',\n        hint: this.translate('enterEmail'),\n        label: this.translate('email'),\n        type: 'email',\n        required: true,\n        defaultValue: this.state.email || '',\n        onChange: this.handleChange.bind(this, 'email'),\n        message: this.getMessageForField('email')\n      };\n    }\n\n    return getEmailField;\n  }();\n\n  _proto.getPasswordField = function () {\n    function getPasswordField() {\n      return {\n        id: 'password',\n        hint: this.translate('enterPassword'),\n        label: this.translate('password'),\n        type: 'password',\n        required: true,\n        defaultValue: this.state.password || '',\n        onChange: this.handleChange.bind(this, 'password'),\n        message: this.getMessageForField('password')\n      };\n    }\n\n    return getPasswordField;\n  }();\n\n  _proto.getSetPasswordField = function () {\n    function getSetPasswordField() {\n      return {\n        id: 'newPassword',\n        hint: this.translate('enterPassword'),\n        label: this.translate('choosePassword'),\n        type: 'password',\n        required: true,\n        onChange: this.handleChange.bind(this, 'newPassword')\n      };\n    }\n\n    return getSetPasswordField;\n  }();\n\n  _proto.getNewPasswordField = function () {\n    function getNewPasswordField() {\n      return {\n        id: 'newPassword',\n        hint: this.translate('enterNewPassword'),\n        label: this.translate('newPassword'),\n        type: 'password',\n        required: true,\n        onChange: this.handleChange.bind(this, 'newPassword'),\n        message: this.getMessageForField('newPassword')\n      };\n    }\n\n    return getNewPasswordField;\n  }();\n\n  _proto.handleChange = function () {\n    function handleChange(field, evt) {\n      var _this$setState, _this$setDefaultField;\n\n      var value = evt.target.value;\n\n      switch (field) {\n        case 'password':\n          break;\n\n        default:\n          value = value.trim();\n          break;\n      }\n\n      this.setState((_this$setState = {}, _this$setState[field] = value, _this$setState));\n      this.setDefaultFieldValues((_this$setDefaultField = {}, _this$setDefaultField[field] = value, _this$setDefaultField));\n    }\n\n    return handleChange;\n  }();\n\n  _proto.fields = function () {\n    function fields() {\n      var loginFields = [];\n      var formState = this.state.formState;\n\n      if (!hasPasswordService() && getLoginServices().length == 0) {\n        loginFields.push({\n          label: 'No login service added, i.e. accounts-password',\n          type: 'notice'\n        });\n      }\n\n      if (hasPasswordService() && formState == STATES.SIGN_IN) {\n        if (['USERNAME_AND_EMAIL', 'USERNAME_AND_OPTIONAL_EMAIL', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n          loginFields.push(this.getUsernameOrEmailField());\n        }\n\n        if (passwordSignupFields() === 'USERNAME_ONLY') {\n          loginFields.push(this.getUsernameField());\n        }\n\n        if (['EMAIL_ONLY', 'EMAIL_ONLY_NO_PASSWORD'].includes(passwordSignupFields())) {\n          loginFields.push(this.getEmailField());\n        }\n\n        if (!['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n          loginFields.push(this.getPasswordField());\n        }\n      }\n\n      if (hasPasswordService() && formState == STATES.SIGN_UP) {\n        if (['USERNAME_AND_EMAIL', 'USERNAME_AND_OPTIONAL_EMAIL', 'USERNAME_ONLY', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n          loginFields.push(this.getUsernameField());\n        }\n\n        if (['USERNAME_AND_EMAIL', 'EMAIL_ONLY', 'EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n          loginFields.push(this.getEmailField());\n        }\n\n        if (['USERNAME_AND_OPTIONAL_EMAIL'].includes(passwordSignupFields())) {\n          loginFields.push(Object.assign(this.getEmailField(), {\n            required: false\n          }));\n        }\n\n        if (!['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n          loginFields.push(this.getPasswordField());\n        }\n      }\n\n      if (formState == STATES.PASSWORD_RESET) {\n        loginFields.push(this.getEmailField());\n      }\n\n      if (this.showPasswordChangeForm()) {\n        if (Meteor.isClient && !Accounts._loginButtonsSession.get('resetPasswordToken')) {\n          loginFields.push(this.getPasswordField());\n        }\n\n        loginFields.push(this.getNewPasswordField());\n      }\n\n      if (this.showEnrollAccountForm()) {\n        loginFields.push(this.getSetPasswordField());\n      }\n\n      return indexBy(loginFields, 'id');\n    }\n\n    return fields;\n  }();\n\n  _proto.buttons = function () {\n    function buttons() {\n      var _this$props = this.props,\n          _this$props$loginPath = _this$props.loginPath,\n          loginPath = _this$props$loginPath === void 0 ? Accounts.ui._options.loginPath : _this$props$loginPath,\n          _this$props$signUpPat = _this$props.signUpPath,\n          signUpPath = _this$props$signUpPat === void 0 ? Accounts.ui._options.signUpPath : _this$props$signUpPat,\n          _this$props$resetPass = _this$props.resetPasswordPath,\n          resetPasswordPath = _this$props$resetPass === void 0 ? Accounts.ui._options.resetPasswordPath : _this$props$resetPass,\n          _this$props$changePas = _this$props.changePasswordPath,\n          changePasswordPath = _this$props$changePas === void 0 ? Accounts.ui._options.changePasswordPath : _this$props$changePas,\n          _this$props$profilePa = _this$props.profilePath,\n          profilePath = _this$props$profilePa === void 0 ? Accounts.ui._options.profilePath : _this$props$profilePa;\n      var user = this.props.user;\n      var _this$state = this.state,\n          formState = _this$state.formState,\n          waiting = _this$state.waiting;\n      var loginButtons = [];\n\n      if (user && formState == STATES.PROFILE) {\n        loginButtons.push({\n          id: 'signOut',\n          label: this.translate('signOut'),\n          disabled: waiting,\n          onClick: this.signOut.bind(this)\n        });\n      }\n\n      if (this.showCreateAccountLink()) {\n        loginButtons.push({\n          id: 'switchToSignUp',\n          label: this.translate('signUp'),\n          type: 'link',\n          href: signUpPath,\n          onClick: this.switchToSignUp.bind(this)\n        });\n      }\n\n      if (formState == STATES.SIGN_UP || formState == STATES.PASSWORD_RESET) {\n        loginButtons.push({\n          id: 'switchToSignIn',\n          label: this.translate('signIn'),\n          type: 'link',\n          href: loginPath,\n          onClick: this.switchToSignIn.bind(this)\n        });\n      }\n\n      if (this.showForgotPasswordLink()) {\n        loginButtons.push({\n          id: 'switchToPasswordReset',\n          label: this.translate('forgotPassword'),\n          type: 'link',\n          href: resetPasswordPath,\n          onClick: this.switchToPasswordReset.bind(this)\n        });\n      }\n\n      if (user && !['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields()) && formState == STATES.PROFILE && user.services && 'password' in user.services) {\n        loginButtons.push({\n          id: 'switchToChangePassword',\n          label: this.translate('changePassword'),\n          type: 'link',\n          href: changePasswordPath,\n          onClick: this.switchToChangePassword.bind(this)\n        });\n      }\n\n      if (formState == STATES.SIGN_UP) {\n        loginButtons.push({\n          id: 'signUp',\n          label: this.translate('signUp'),\n          type: hasPasswordService() ? 'submit' : 'link',\n          className: 'active',\n          disabled: waiting,\n          onClick: hasPasswordService() ? this.signUp.bind(this, {}) : null\n        });\n      }\n\n      if (this.showSignInLink()) {\n        loginButtons.push({\n          id: 'signIn',\n          label: this.translate('signIn'),\n          type: hasPasswordService() ? 'submit' : 'link',\n          className: 'active',\n          disabled: waiting,\n          onClick: hasPasswordService() ? this.signIn.bind(this) : null\n        });\n      }\n\n      if (formState == STATES.PASSWORD_RESET) {\n        loginButtons.push({\n          id: 'emailResetLink',\n          label: this.translate('resetYourPassword'),\n          type: 'submit',\n          disabled: waiting,\n          onClick: this.passwordReset.bind(this)\n        });\n      }\n\n      if (this.showPasswordChangeForm() || this.showEnrollAccountForm()) {\n        loginButtons.push({\n          id: 'changePassword',\n          label: this.showPasswordChangeForm() ? this.translate('changePassword') : this.translate('setPassword'),\n          type: 'submit',\n          disabled: waiting,\n          onClick: this.passwordChange.bind(this)\n        });\n\n        if (Accounts.user()) {\n          loginButtons.push({\n            id: 'switchToSignOut',\n            label: this.translate('cancel'),\n            type: 'link',\n            href: profilePath,\n            onClick: this.switchToSignOut.bind(this)\n          });\n        } else {\n          loginButtons.push({\n            id: 'cancelResetPassword',\n            label: this.translate('cancel'),\n            type: 'link',\n            onClick: this.cancelResetPassword.bind(this)\n          });\n        }\n      } // Sort the button array so that the submit button always comes first, and\n      // buttons should also come before links.\n\n\n      loginButtons.sort(function (a, b) {\n        return (b.type == 'submit' && a.type != undefined) - (a.type == 'submit' && b.type != undefined);\n      });\n      return indexBy(loginButtons, 'id');\n    }\n\n    return buttons;\n  }();\n\n  _proto.showSignInLink = function () {\n    function showSignInLink() {\n      return this.state.formState == STATES.SIGN_IN && Package['accounts-password'];\n    }\n\n    return showSignInLink;\n  }();\n\n  _proto.showPasswordChangeForm = function () {\n    function showPasswordChangeForm() {\n      return Package['accounts-password'] && this.state.formState == STATES.PASSWORD_CHANGE;\n    }\n\n    return showPasswordChangeForm;\n  }();\n\n  _proto.showEnrollAccountForm = function () {\n    function showEnrollAccountForm() {\n      return Package['accounts-password'] && this.state.formState == STATES.ENROLL_ACCOUNT;\n    }\n\n    return showEnrollAccountForm;\n  }();\n\n  _proto.showCreateAccountLink = function () {\n    function showCreateAccountLink() {\n      return this.state.formState == STATES.SIGN_IN && !Accounts._options.forbidClientAccountCreation && Package['accounts-password'];\n    }\n\n    return showCreateAccountLink;\n  }();\n\n  _proto.showForgotPasswordLink = function () {\n    function showForgotPasswordLink() {\n      return !this.props.user && this.state.formState == STATES.SIGN_IN && ['USERNAME_AND_EMAIL', 'USERNAME_AND_OPTIONAL_EMAIL', 'EMAIL_ONLY'].includes(passwordSignupFields());\n    }\n\n    return showForgotPasswordLink;\n  }()\n  /**\n   * Helper to store field values while using the form.\n   */\n  ;\n\n  _proto.setDefaultFieldValues = function () {\n    function setDefaultFieldValues(defaults) {\n      if ((0, _typeof2.default)(defaults) !== 'object') {\n        throw new Error('Argument to setDefaultFieldValues is not of type object');\n      } else if (typeof localStorage !== 'undefined' && localStorage) {\n        localStorage.setItem('accounts_ui', JSON.stringify((0, _objectSpread2.default)({\n          passwordSignupFields: passwordSignupFields()\n        }, this.getDefaultFieldValues(), defaults)));\n      }\n    }\n\n    return setDefaultFieldValues;\n  }()\n  /**\n   * Helper to get field values when switching states in the form.\n   */\n  ;\n\n  _proto.getDefaultFieldValues = function () {\n    function getDefaultFieldValues() {\n      if (typeof localStorage !== 'undefined' && localStorage) {\n        var defaultFieldValues = JSON.parse(localStorage.getItem('accounts_ui') || null);\n\n        if (defaultFieldValues && defaultFieldValues.passwordSignupFields === passwordSignupFields()) {\n          return defaultFieldValues;\n        }\n      }\n    }\n\n    return getDefaultFieldValues;\n  }()\n  /**\n   * Helper to clear field values when signing in, up or out.\n   */\n  ;\n\n  _proto.clearDefaultFieldValues = function () {\n    function clearDefaultFieldValues() {\n      if (typeof localStorage !== 'undefined' && localStorage) {\n        localStorage.removeItem('accounts_ui');\n      }\n    }\n\n    return clearDefaultFieldValues;\n  }();\n\n  _proto.switchToSignUp = function () {\n    function switchToSignUp(event) {\n      event.preventDefault();\n      this.setState((0, _objectSpread2.default)({\n        formState: STATES.SIGN_UP\n      }, this.getDefaultFieldValues()));\n      this.clearMessages();\n    }\n\n    return switchToSignUp;\n  }();\n\n  _proto.switchToSignIn = function () {\n    function switchToSignIn(event) {\n      event.preventDefault();\n      this.setState((0, _objectSpread2.default)({\n        formState: STATES.SIGN_IN\n      }, this.getDefaultFieldValues()));\n      this.clearMessages();\n    }\n\n    return switchToSignIn;\n  }();\n\n  _proto.switchToPasswordReset = function () {\n    function switchToPasswordReset(event) {\n      event.preventDefault();\n      this.setState((0, _objectSpread2.default)({\n        formState: STATES.PASSWORD_RESET\n      }, this.getDefaultFieldValues()));\n      this.clearMessages();\n    }\n\n    return switchToPasswordReset;\n  }();\n\n  _proto.switchToChangePassword = function () {\n    function switchToChangePassword(event) {\n      event.preventDefault();\n      this.setState((0, _objectSpread2.default)({\n        formState: STATES.PASSWORD_CHANGE\n      }, this.getDefaultFieldValues()));\n      this.clearMessages();\n    }\n\n    return switchToChangePassword;\n  }();\n\n  _proto.switchToSignOut = function () {\n    function switchToSignOut(event) {\n      event.preventDefault();\n      this.setState({\n        formState: STATES.PROFILE\n      });\n      this.clearMessages();\n    }\n\n    return switchToSignOut;\n  }();\n\n  _proto.cancelResetPassword = function () {\n    function cancelResetPassword(event) {\n      event.preventDefault();\n\n      Accounts._loginButtonsSession.set('resetPasswordToken', null);\n\n      this.setState({\n        formState: STATES.SIGN_IN,\n        messages: []\n      });\n    }\n\n    return cancelResetPassword;\n  }();\n\n  _proto.signOut = function () {\n    function signOut() {\n      var _this3 = this;\n\n      Meteor.logout(function () {\n        _this3.setState({\n          formState: STATES.SIGN_IN,\n          password: null\n        });\n\n        _this3.state.onSignedOutHook();\n\n        _this3.clearMessages();\n\n        _this3.clearDefaultFieldValues();\n      });\n    }\n\n    return signOut;\n  }();\n\n  _proto.signIn = function () {\n    function signIn() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          _this$state2$username = _this$state2.username,\n          username = _this$state2$username === void 0 ? null : _this$state2$username,\n          _this$state2$email = _this$state2.email,\n          email = _this$state2$email === void 0 ? null : _this$state2$email,\n          _this$state2$username2 = _this$state2.usernameOrEmail,\n          usernameOrEmail = _this$state2$username2 === void 0 ? null : _this$state2$username2,\n          password = _this$state2.password,\n          formState = _this$state2.formState,\n          onSubmitHook = _this$state2.onSubmitHook;\n      var error = false;\n      var loginSelector;\n      this.clearMessages();\n\n      if (usernameOrEmail !== null) {\n        if (!this.validateField('username', usernameOrEmail)) {\n          if (this.state.formState == STATES.SIGN_UP) {\n            this.state.onSubmitHook('error.accounts.usernameRequired', this.state.formState);\n          }\n\n          error = true;\n        } else {\n          if (['USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n            this.loginWithoutPassword();\n            return;\n          } else {\n            loginSelector = usernameOrEmail;\n          }\n        }\n      } else if (username !== null) {\n        if (!this.validateField('username', username)) {\n          if (this.state.formState == STATES.SIGN_UP) {\n            this.state.onSubmitHook('error.accounts.usernameRequired', this.state.formState);\n          }\n\n          error = true;\n        } else {\n          loginSelector = {\n            username: username\n          };\n        }\n      } else if (usernameOrEmail == null) {\n        if (!this.validateField('email', email)) {\n          error = true;\n        } else {\n          if (['EMAIL_ONLY_NO_PASSWORD'].includes(passwordSignupFields())) {\n            this.loginWithoutPassword();\n            error = true;\n          } else {\n            loginSelector = {\n              email: email\n            };\n          }\n        }\n      }\n\n      if (!['EMAIL_ONLY_NO_PASSWORD'].includes(passwordSignupFields()) && !this.validateField('password', password)) {\n        error = true;\n      }\n\n      if (!error) {\n        Meteor.loginWithPassword(loginSelector, password, function (error, result) {\n          onSubmitHook(error, formState);\n\n          if (error) {\n            _this4.showMessage(\"error.accounts.\" + error.reason || 'unknown_error', 'error');\n          } else {\n            loginResultCallback(function () {\n              return _this4.state.onSignedInHook();\n            });\n\n            _this4.setState({\n              formState: STATES.PROFILE,\n              password: null\n            });\n\n            _this4.clearDefaultFieldValues();\n          }\n        });\n      }\n    }\n\n    return signIn;\n  }();\n\n  _proto.oauthButtons = function () {\n    function oauthButtons() {\n      var _this5 = this;\n\n      var _this$state3 = this.state,\n          formState = _this$state3.formState,\n          waiting = _this$state3.waiting;\n      var oauthButtons = [];\n\n      if (formState == STATES.SIGN_IN || formState == STATES.SIGN_UP) {\n        if (Accounts.oauth) {\n          Accounts.oauth.serviceNames().map(function (service) {\n            oauthButtons.push({\n              id: service,\n              label: capitalize(service),\n              disabled: waiting,\n              type: 'button',\n              className: \"btn-\" + service + \" \" + service,\n              onClick: _this5.oauthSignIn.bind(_this5, service)\n            });\n          });\n        }\n      }\n\n      return indexBy(oauthButtons, 'id');\n    }\n\n    return oauthButtons;\n  }();\n\n  _proto.oauthSignIn = function () {\n    function oauthSignIn(serviceName) {\n      var _this6 = this;\n\n      var user = this.props.user;\n      var _this$state4 = this.state,\n          formState = _this$state4.formState,\n          waiting = _this$state4.waiting,\n          onSubmitHook = _this$state4.onSubmitHook; //Thanks Josh Owens for this one.\n\n      function capitalService() {\n        return serviceName.charAt(0).toUpperCase() + serviceName.slice(1);\n      }\n\n      if (serviceName === 'meteor-developer') {\n        serviceName = 'meteorDeveloperAccount';\n      }\n\n      var loginWithService = Meteor['loginWith' + capitalService()];\n      var options = {}; // use default scope unless specified\n\n      if (Accounts.ui._options.requestPermissions[serviceName]) options.requestPermissions = Accounts.ui._options.requestPermissions[serviceName];\n      if (Accounts.ui._options.requestOfflineToken[serviceName]) options.requestOfflineToken = Accounts.ui._options.requestOfflineToken[serviceName];\n      if (Accounts.ui._options.forceApprovalPrompt[serviceName]) options.forceApprovalPrompt = Accounts.ui._options.forceApprovalPrompt[serviceName];\n      this.clearMessages();\n      var self = this;\n      loginWithService(options, function (error) {\n        onSubmitHook(error, formState);\n\n        if (error) {\n          _this6.showMessage(\"error.accounts.\" + error.reason || 'unknown_error');\n        } else {\n          _this6.setState({\n            formState: STATES.PROFILE\n          });\n\n          _this6.clearDefaultFieldValues();\n\n          loginResultCallback(function () {\n            Meteor.setTimeout(function () {\n              return _this6.state.onSignedInHook();\n            }, 100);\n          });\n        }\n      });\n    }\n\n    return oauthSignIn;\n  }();\n\n  _proto.signUp = function () {\n    function signUp() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$state5 = this.state,\n          _this$state5$username = _this$state5.username,\n          username = _this$state5$username === void 0 ? null : _this$state5$username,\n          _this$state5$email = _this$state5.email,\n          email = _this$state5$email === void 0 ? null : _this$state5$email,\n          _this$state5$username2 = _this$state5.usernameOrEmail,\n          usernameOrEmail = _this$state5$username2 === void 0 ? null : _this$state5$username2,\n          password = _this$state5.password,\n          formState = _this$state5.formState,\n          onSubmitHook = _this$state5.onSubmitHook;\n      var error = false;\n      this.clearMessages();\n\n      if (username !== null) {\n        if (!this.validateField('username', username)) {\n          if (this.state.formState == STATES.SIGN_UP) {\n            this.state.onSubmitHook('error.accounts.usernameRequired', this.state.formState);\n          }\n\n          error = true;\n        } else {\n          options.username = username;\n        }\n      } else {\n        if (['USERNAME_AND_EMAIL', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields()) && !this.validateField('username', username)) {\n          if (this.state.formState == STATES.SIGN_UP) {\n            this.state.onSubmitHook('error.accounts.usernameRequired', this.state.formState);\n          }\n\n          error = true;\n        }\n      }\n\n      if (!this.validateField('email', email)) {\n        error = true;\n      } else {\n        options.email = email;\n      }\n\n      if (['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n        // Generate a random password.\n        options.password = Meteor.uuid();\n      } else if (!this.validateField('password', password)) {\n        onSubmitHook('Invalid password', formState);\n        error = true;\n      } else {\n        options.password = password;\n      }\n\n      var SignUp = function (_options) {\n        var _this7 = this;\n\n        Accounts.createUser(_options, function (error) {\n          if (error) {\n            _this7.showMessage(\"error.accounts.\" + error.reason || 'unknown_error', 'error');\n\n            if (_this7.translate(\"error.accounts.\" + error.reason)) {\n              onSubmitHook(\"error.accounts.\" + error.reason, formState);\n            } else {\n              onSubmitHook('unknown_error', formState);\n            }\n          } else {\n            onSubmitHook(null, formState);\n\n            _this7.setState({\n              formState: STATES.PROFILE,\n              password: null\n            });\n\n            var user = Accounts.user();\n            loginResultCallback(_this7.state.onPostSignUpHook.bind(_this7, _options, user));\n\n            _this7.clearDefaultFieldValues();\n          }\n\n          _this7.setState({\n            waiting: false\n          });\n        });\n      };\n\n      if (!error) {\n        this.setState({\n          waiting: true\n        }); // Allow for Promises to return.\n\n        var promise = this.state.onPreSignUpHook(options);\n\n        if (promise instanceof Promise) {\n          promise.then(SignUp.bind(this, options));\n        } else {\n          SignUp(options);\n        }\n      }\n    }\n\n    return signUp;\n  }();\n\n  _proto.loginWithoutPassword = function () {\n    function loginWithoutPassword() {\n      var _this8 = this;\n\n      var _this$state6 = this.state,\n          _this$state6$email = _this$state6.email,\n          email = _this$state6$email === void 0 ? '' : _this$state6$email,\n          _this$state6$username = _this$state6.usernameOrEmail,\n          usernameOrEmail = _this$state6$username === void 0 ? '' : _this$state6$username,\n          waiting = _this$state6.waiting,\n          formState = _this$state6.formState,\n          onSubmitHook = _this$state6.onSubmitHook;\n\n      if (waiting) {\n        return;\n      }\n\n      if (this.validateField('email', email)) {\n        this.setState({\n          waiting: true\n        });\n        Accounts.loginWithoutPassword({\n          email: email\n        }, function (error) {\n          if (error) {\n            _this8.showMessage(\"error.accounts.\" + error.reason || 'unknown_error', 'error');\n          } else {\n            _this8.showMessage(_this8.translate('info.emailSent'), 'success', 5000);\n\n            _this8.clearDefaultFieldValues();\n          }\n\n          onSubmitHook(error, formState);\n\n          _this8.setState({\n            waiting: false\n          });\n        });\n      } else if (this.validateField('username', usernameOrEmail)) {\n        this.setState({\n          waiting: true\n        });\n        Accounts.loginWithoutPassword({\n          email: usernameOrEmail,\n          username: usernameOrEmail\n        }, function (error) {\n          if (error) {\n            _this8.showMessage(\"error.accounts.\" + error.reason || 'unknown_error', 'error');\n          } else {\n            _this8.showMessage(_this8.translate('info.emailSent'), 'success', 5000);\n\n            _this8.clearDefaultFieldValues();\n          }\n\n          onSubmitHook(error, formState);\n\n          _this8.setState({\n            waiting: false\n          });\n        });\n      } else {\n        var errMsg = null;\n\n        if (['USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n          errMsg = this.translate('error.accounts.invalid_email');\n        } else {\n          errMsg = this.translate('error.accounts.invalid_email');\n        }\n\n        this.showMessage(errMsg, 'warning');\n        onSubmitHook(errMsg, formState);\n      }\n    }\n\n    return loginWithoutPassword;\n  }();\n\n  _proto.passwordReset = function () {\n    function passwordReset() {\n      var _this9 = this;\n\n      var _this$state7 = this.state,\n          _this$state7$email = _this$state7.email,\n          email = _this$state7$email === void 0 ? '' : _this$state7$email,\n          waiting = _this$state7.waiting,\n          formState = _this$state7.formState,\n          onSubmitHook = _this$state7.onSubmitHook;\n\n      if (waiting) {\n        return;\n      }\n\n      this.clearMessages();\n\n      if (this.validateField('email', email)) {\n        this.setState({\n          waiting: true\n        });\n        Accounts.forgotPassword({\n          email: email\n        }, function (error) {\n          if (error) {\n            _this9.showMessage(\"error.accounts.\" + error.reason || 'unknown_error', 'error');\n          } else {\n            _this9.showMessage(_this9.translate('info.emailSent'), 'success', 5000);\n\n            _this9.clearDefaultFieldValues();\n          }\n\n          onSubmitHook(error, formState);\n\n          _this9.setState({\n            waiting: false\n          });\n        });\n      }\n    }\n\n    return passwordReset;\n  }();\n\n  _proto.passwordChange = function () {\n    function passwordChange() {\n      var _this10 = this;\n\n      var _this$state8 = this.state,\n          password = _this$state8.password,\n          newPassword = _this$state8.newPassword,\n          formState = _this$state8.formState,\n          onSubmitHook = _this$state8.onSubmitHook,\n          onSignedInHook = _this$state8.onSignedInHook;\n\n      if (!this.validateField('password', newPassword)) {\n        onSubmitHook('err.minChar', formState);\n        return;\n      }\n\n      var token = Accounts._loginButtonsSession.get('resetPasswordToken');\n\n      if (!token) {\n        token = Accounts._loginButtonsSession.get('enrollAccountToken');\n      }\n\n      if (token) {\n        Accounts.resetPassword(token, newPassword, function (error) {\n          if (error) {\n            _this10.showMessage(\"error.accounts.\" + error.reason || 'unknown_error', 'error');\n\n            onSubmitHook(error, formState);\n          } else {\n            _this10.showMessage(_this10.translate('info.passwordChanged'), 'success', 5000);\n\n            onSubmitHook(null, formState);\n\n            _this10.setState({\n              formState: STATES.PROFILE\n            });\n\n            Accounts._loginButtonsSession.set('resetPasswordToken', null);\n\n            Accounts._loginButtonsSession.set('enrollAccountToken', null);\n\n            onSignedInHook();\n          }\n        });\n      } else {\n        Accounts.changePassword(password, newPassword, function (error) {\n          if (error) {\n            _this10.showMessage(\"error.accounts.\" + error.reason || 'unknown_error', 'error');\n\n            onSubmitHook(error, formState);\n          } else {\n            _this10.showMessage('info.passwordChanged', 'success', 5000);\n\n            onSubmitHook(null, formState);\n\n            _this10.setState({\n              formState: STATES.PROFILE\n            });\n\n            _this10.clearDefaultFieldValues();\n          }\n        });\n      }\n    }\n\n    return passwordChange;\n  }();\n\n  _proto.showMessage = function () {\n    function showMessage(message, type, clearTimeout, field) {\n      var _this11 = this;\n\n      message = this.translate(message).trim();\n\n      if (message) {\n        this.setState(function (_ref) {\n          var _ref$messages = _ref.messages,\n              messages = _ref$messages === void 0 ? [] : _ref$messages;\n          messages.push((0, _objectSpread2.default)({\n            message: message,\n            type: type\n          }, field && {\n            field: field\n          }));\n          return {\n            messages: messages\n          };\n        });\n\n        if (clearTimeout) {\n          this.hideMessageTimout = setTimeout(function () {\n            // Filter out the message that timed out.\n            _this11.clearMessage(message);\n          }, clearTimeout);\n        }\n      }\n    }\n\n    return showMessage;\n  }();\n\n  _proto.getMessageForField = function () {\n    function getMessageForField(field) {\n      var _this$state$messages = this.state.messages,\n          messages = _this$state$messages === void 0 ? [] : _this$state$messages;\n      return messages.find(function (_ref2) {\n        var key = _ref2.field;\n        return key === field;\n      });\n    }\n\n    return getMessageForField;\n  }();\n\n  _proto.clearMessage = function () {\n    function clearMessage(message) {\n      if (message) {\n        this.setState(function (_ref3) {\n          var _ref3$messages = _ref3.messages,\n              messages = _ref3$messages === void 0 ? [] : _ref3$messages;\n          return {\n            messages: messages.filter(function (_ref4) {\n              var a = _ref4.message;\n              return a !== message;\n            })\n          };\n        });\n      }\n    }\n\n    return clearMessage;\n  }();\n\n  _proto.clearMessages = function () {\n    function clearMessages() {\n      if (this.hideMessageTimout) {\n        clearTimeout(this.hideMessageTimout);\n      }\n\n      this.setState({\n        messages: []\n      });\n    }\n\n    return clearMessages;\n  }();\n\n  _proto.componentWillMount = function () {\n    function componentWillMount() {\n      // XXX Check for backwards compatibility.\n      if (Meteor.isClient) {\n        var container = document.createElement('div');\n        ReactDOM.render(React.createElement(Accounts.ui.Field, {\n          message: \"test\"\n        }), container);\n\n        if (container.getElementsByClassName('message').length == 0) {\n          // Found backwards compatibility issue with 1.3.x\n          console.warn(\"Implementations of Accounts.ui.Field must render message in v1.2.11.\\n          https://github.com/studiointeract/accounts-ui/#deprecations\");\n        }\n      }\n    }\n\n    return componentWillMount;\n  }();\n\n  _proto.componentWillUnmount = function () {\n    function componentWillUnmount() {\n      if (this.hideMessageTimout) {\n        clearTimeout(this.hideMessageTimout);\n      }\n    }\n\n    return componentWillUnmount;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var _this12 = this;\n\n      this.oauthButtons(); // Backwords compatibility with v1.2.x.\n\n      var _this$state$messages2 = this.state.messages,\n          messages = _this$state$messages2 === void 0 ? [] : _this$state$messages2;\n      var message = {\n        deprecated: true,\n        message: messages.map(function (_ref5) {\n          var message = _ref5.message;\n          return message;\n        }).join(', ')\n      };\n      return React.createElement(Accounts.ui.Form, (0, _extends2.default)({\n        oauthServices: this.oauthButtons(),\n        fields: this.fields(),\n        buttons: this.buttons()\n      }, this.state, {\n        message: message,\n        translate: function (text) {\n          return _this12.translate(text);\n        }\n      }));\n    }\n\n    return render;\n  }();\n\n  return LoginForm;\n}(Component);\n\nLoginForm.propTypes = {\n  formState: PropTypes.symbol,\n  loginPath: PropTypes.string,\n  signUpPath: PropTypes.string,\n  resetPasswordPath: PropTypes.string,\n  profilePath: PropTypes.string,\n  changePasswordPath: PropTypes.string\n};\nLoginForm.defaultProps = {\n  formState: null,\n  loginPath: null,\n  signUpPath: null,\n  resetPasswordPath: null,\n  profilePath: null,\n  changePasswordPath: null\n};\nAccounts.ui.LoginForm = LoginForm;\nvar LoginFormContainer = withTracker(function () {\n  // Listen for the user to login/logout and the services list to the user.\n  Meteor.subscribe('servicesList');\n  return {\n    user: Accounts.user()\n  };\n})(LoginForm);\nAccounts.ui.LoginForm = LoginFormContainer;\nmodule.exportDefault(LoginFormContainer);","map":{"version":3,"sources":["packages/epotek:accounts-ui/imports/ui/components/LoginForm.jsx"],"names":["React","Component","module","link","v","PropTypes","ReactDOM","withTracker","Accounts","T9n","KEY_PREFIX","STATES","passwordSignupFields","validateEmail","validatePassword","validateUsername","loginResultCallback","getLoginServices","hasPasswordService","capitalize","indexBy","array","key","result","forEach","obj","LoginForm","props","formState","loginPath","signUpPath","resetPasswordPath","profilePath","changePasswordPath","SIGN_IN","Package","console","warn","state","messages","waiting","user","PROFILE","onSubmitHook","ui","_options","onSignedInHook","onSignedOutHook","onPreSignUpHook","onPostSignUpHook","translate","bind","componentDidMount","setState","prevState","ready","changeState","Session","get","ENROLL_ACCOUNT","set","PASSWORD_CHANGE","getDefaultFieldValues","componentWillReceiveProps","nextProps","nextContext","componentDidUpdate","prevProps","text","validateField","field","value","showMessage","clearMessage","getUsernameOrEmailField","id","hint","label","required","defaultValue","username","onChange","handleChange","message","getMessageForField","getUsernameField","getEmailField","type","email","getPasswordField","password","getSetPasswordField","getNewPasswordField","evt","target","trim","setDefaultFieldValues","fields","loginFields","length","push","includes","SIGN_UP","Object","assign","PASSWORD_RESET","showPasswordChangeForm","Meteor","isClient","_loginButtonsSession","showEnrollAccountForm","buttons","loginButtons","disabled","onClick","signOut","showCreateAccountLink","href","switchToSignUp","switchToSignIn","showForgotPasswordLink","switchToPasswordReset","services","switchToChangePassword","className","signUp","showSignInLink","signIn","passwordReset","passwordChange","switchToSignOut","cancelResetPassword","sort","a","b","undefined","forbidClientAccountCreation","defaults","Error","localStorage","setItem","JSON","stringify","defaultFieldValues","parse","getItem","clearDefaultFieldValues","removeItem","event","preventDefault","clearMessages","logout","usernameOrEmail","error","loginSelector","loginWithoutPassword","loginWithPassword","reason","oauthButtons","oauth","serviceNames","map","service","oauthSignIn","serviceName","capitalService","charAt","toUpperCase","slice","loginWithService","options","requestPermissions","requestOfflineToken","forceApprovalPrompt","self","setTimeout","uuid","SignUp","createUser","promise","Promise","then","errMsg","forgotPassword","newPassword","token","resetPassword","changePassword","clearTimeout","hideMessageTimout","find","filter","componentWillMount","container","document","createElement","render","getElementsByClassName","componentWillUnmount","deprecated","join","propTypes","symbol","string","defaultProps","LoginFormContainer","subscribe","exportDefault"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport { Accounts } from 'meteor/accounts-base';\nimport { T9n } from 'meteor-accounts-t9n';\nimport { KEY_PREFIX } from '../../login_session.js';\nimport './Form.jsx';\n\nimport {\n  STATES,\n  passwordSignupFields,\n  validateEmail,\n  validatePassword,\n  validateUsername,\n  loginResultCallback,\n  getLoginServices,\n  hasPasswordService,\n  capitalize\n} from '../../helpers.js';\n\nfunction indexBy(array, key) {\n  const result = {};\n  array.forEach(function(obj) {\n    result[obj[key]] = obj;\n  });\n  return result;\n}\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    let {\n      formState,\n      loginPath,\n      signUpPath,\n      resetPasswordPath,\n      profilePath,\n      changePasswordPath\n    } = props;\n\n    if (formState === STATES.SIGN_IN && Package['accounts-password']) {\n      console.warn(\n        'Do not force the state to SIGN_IN on Accounts.ui.LoginForm, it will make it impossible to reset password in your app, this state is also the default state if logged out, so no need to force it.'\n      );\n    }\n\n    // Set inital state.\n    this.state = {\n      messages: [],\n      waiting: true,\n      formState: formState\n        ? formState\n        : Accounts.user()\n          ? STATES.PROFILE\n          : STATES.SIGN_IN,\n      onSubmitHook: props.onSubmitHook || Accounts.ui._options.onSubmitHook,\n      onSignedInHook:\n        props.onSignedInHook || Accounts.ui._options.onSignedInHook,\n      onSignedOutHook:\n        props.onSignedOutHook || Accounts.ui._options.onSignedOutHook,\n      onPreSignUpHook:\n        props.onPreSignUpHook || Accounts.ui._options.onPreSignUpHook,\n      onPostSignUpHook:\n        props.onPostSignUpHook || Accounts.ui._options.onPostSignUpHook\n    };\n    this.translate = this.translate.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(prevState => ({ waiting: false, ready: true }));\n    let changeState = Session.get(KEY_PREFIX + 'state');\n    switch (changeState) {\n      case 'enrollAccountToken':\n        this.setState(prevState => ({\n          formState: STATES.ENROLL_ACCOUNT\n        }));\n        Session.set(KEY_PREFIX + 'state', null);\n        break;\n      case 'resetPasswordToken':\n        this.setState(prevState => ({\n          formState: STATES.PASSWORD_CHANGE\n        }));\n        Session.set(KEY_PREFIX + 'state', null);\n        break;\n\n      case 'justVerifiedEmail':\n        this.setState(prevState => ({\n          formState: STATES.PROFILE\n        }));\n        Session.set(KEY_PREFIX + 'state', null);\n        break;\n    }\n\n    // Add default field values once the form did mount on the client\n    this.setState(prevState => ({\n      ...this.getDefaultFieldValues()\n    }));\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.formState && nextProps.formState !== this.state.formState) {\n      this.setState({\n        formState: nextProps.formState,\n        ...this.getDefaultFieldValues()\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!prevProps.user !== !this.props.user) {\n      this.setState({\n        formState: this.props.user ? STATES.PROFILE : STATES.SIGN_IN\n      });\n    }\n  }\n\n  translate(text) {\n    // if (this.props.t) {\n    //   return this.props.t(text);\n    // }\n    return T9n.get(text);\n  }\n\n  validateField(field, value) {\n    const { formState } = this.state;\n    switch (field) {\n      case 'email':\n        return validateEmail(\n          value,\n          this.showMessage.bind(this),\n          this.clearMessage.bind(this)\n        );\n      case 'password':\n        return validatePassword(\n          value,\n          this.showMessage.bind(this),\n          this.clearMessage.bind(this)\n        );\n      case 'username':\n        return validateUsername(\n          value,\n          this.showMessage.bind(this),\n          this.clearMessage.bind(this),\n          formState\n        );\n    }\n  }\n\n  getUsernameOrEmailField() {\n    return {\n      id: 'usernameOrEmail',\n      hint: this.translate('enterUsernameOrEmail'),\n      label: this.translate('usernameOrEmail'),\n      required: true,\n      defaultValue: this.state.username || '',\n      onChange: this.handleChange.bind(this, 'usernameOrEmail'),\n      message: this.getMessageForField('usernameOrEmail')\n    };\n  }\n\n  getUsernameField() {\n    return {\n      id: 'username',\n      hint: this.translate('enterUsername'),\n      label: this.translate('username'),\n      required: true,\n      defaultValue: this.state.username || '',\n      onChange: this.handleChange.bind(this, 'username'),\n      message: this.getMessageForField('username')\n    };\n  }\n\n  getEmailField() {\n    return {\n      id: 'email',\n      hint: this.translate('enterEmail'),\n      label: this.translate('email'),\n      type: 'email',\n      required: true,\n      defaultValue: this.state.email || '',\n      onChange: this.handleChange.bind(this, 'email'),\n      message: this.getMessageForField('email')\n    };\n  }\n\n  getPasswordField() {\n    return {\n      id: 'password',\n      hint: this.translate('enterPassword'),\n      label: this.translate('password'),\n      type: 'password',\n      required: true,\n      defaultValue: this.state.password || '',\n      onChange: this.handleChange.bind(this, 'password'),\n      message: this.getMessageForField('password')\n    };\n  }\n\n  getSetPasswordField() {\n    return {\n      id: 'newPassword',\n      hint: this.translate('enterPassword'),\n      label: this.translate('choosePassword'),\n      type: 'password',\n      required: true,\n      onChange: this.handleChange.bind(this, 'newPassword')\n    };\n  }\n\n  getNewPasswordField() {\n    return {\n      id: 'newPassword',\n      hint: this.translate('enterNewPassword'),\n      label: this.translate('newPassword'),\n      type: 'password',\n      required: true,\n      onChange: this.handleChange.bind(this, 'newPassword'),\n      message: this.getMessageForField('newPassword')\n    };\n  }\n\n  handleChange(field, evt) {\n    let value = evt.target.value;\n    switch (field) {\n      case 'password':\n        break;\n      default:\n        value = value.trim();\n        break;\n    }\n    this.setState({ [field]: value });\n    this.setDefaultFieldValues({ [field]: value });\n  }\n\n  fields() {\n    const loginFields = [];\n    const { formState } = this.state;\n\n    if (!hasPasswordService() && getLoginServices().length == 0) {\n      loginFields.push({\n        label: 'No login service added, i.e. accounts-password',\n        type: 'notice'\n      });\n    }\n\n    if (hasPasswordService() && formState == STATES.SIGN_IN) {\n      if (\n        [\n          'USERNAME_AND_EMAIL',\n          'USERNAME_AND_OPTIONAL_EMAIL',\n          'USERNAME_AND_EMAIL_NO_PASSWORD'\n        ].includes(passwordSignupFields())\n      ) {\n        loginFields.push(this.getUsernameOrEmailField());\n      }\n\n      if (passwordSignupFields() === 'USERNAME_ONLY') {\n        loginFields.push(this.getUsernameField());\n      }\n\n      if (\n        ['EMAIL_ONLY', 'EMAIL_ONLY_NO_PASSWORD'].includes(\n          passwordSignupFields()\n        )\n      ) {\n        loginFields.push(this.getEmailField());\n      }\n\n      if (\n        !['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\n          passwordSignupFields()\n        )\n      ) {\n        loginFields.push(this.getPasswordField());\n      }\n    }\n\n    if (hasPasswordService() && formState == STATES.SIGN_UP) {\n      if (\n        [\n          'USERNAME_AND_EMAIL',\n          'USERNAME_AND_OPTIONAL_EMAIL',\n          'USERNAME_ONLY',\n          'USERNAME_AND_EMAIL_NO_PASSWORD'\n        ].includes(passwordSignupFields())\n      ) {\n        loginFields.push(this.getUsernameField());\n      }\n\n      if (\n        [\n          'USERNAME_AND_EMAIL',\n          'EMAIL_ONLY',\n          'EMAIL_ONLY_NO_PASSWORD',\n          'USERNAME_AND_EMAIL_NO_PASSWORD'\n        ].includes(passwordSignupFields())\n      ) {\n        loginFields.push(this.getEmailField());\n      }\n\n      if (['USERNAME_AND_OPTIONAL_EMAIL'].includes(passwordSignupFields())) {\n        loginFields.push(\n          Object.assign(this.getEmailField(), { required: false })\n        );\n      }\n\n      if (\n        !['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\n          passwordSignupFields()\n        )\n      ) {\n        loginFields.push(this.getPasswordField());\n      }\n    }\n\n    if (formState == STATES.PASSWORD_RESET) {\n      loginFields.push(this.getEmailField());\n    }\n\n    if (this.showPasswordChangeForm()) {\n      if (\n        Meteor.isClient &&\n        !Accounts._loginButtonsSession.get('resetPasswordToken')\n      ) {\n        loginFields.push(this.getPasswordField());\n      }\n      loginFields.push(this.getNewPasswordField());\n    }\n\n    if (this.showEnrollAccountForm()) {\n      loginFields.push(this.getSetPasswordField());\n    }\n    return indexBy(loginFields, 'id');\n  }\n\n  buttons() {\n    const {\n      loginPath = Accounts.ui._options.loginPath,\n      signUpPath = Accounts.ui._options.signUpPath,\n      resetPasswordPath = Accounts.ui._options.resetPasswordPath,\n      changePasswordPath = Accounts.ui._options.changePasswordPath,\n      profilePath = Accounts.ui._options.profilePath\n    } = this.props;\n    const { user } = this.props;\n    const { formState, waiting } = this.state;\n    let loginButtons = [];\n\n    if (user && formState == STATES.PROFILE) {\n      loginButtons.push({\n        id: 'signOut',\n        label: this.translate('signOut'),\n        disabled: waiting,\n        onClick: this.signOut.bind(this)\n      });\n    }\n\n    if (this.showCreateAccountLink()) {\n      loginButtons.push({\n        id: 'switchToSignUp',\n        label: this.translate('signUp'),\n        type: 'link',\n        href: signUpPath,\n        onClick: this.switchToSignUp.bind(this)\n      });\n    }\n\n    if (formState == STATES.SIGN_UP || formState == STATES.PASSWORD_RESET) {\n      loginButtons.push({\n        id: 'switchToSignIn',\n        label: this.translate('signIn'),\n        type: 'link',\n        href: loginPath,\n        onClick: this.switchToSignIn.bind(this)\n      });\n    }\n\n    if (this.showForgotPasswordLink()) {\n      loginButtons.push({\n        id: 'switchToPasswordReset',\n        label: this.translate('forgotPassword'),\n        type: 'link',\n        href: resetPasswordPath,\n        onClick: this.switchToPasswordReset.bind(this)\n      });\n    }\n\n    if (\n      user &&\n      !['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\n        passwordSignupFields()\n      ) &&\n      formState == STATES.PROFILE &&\n      (user.services && 'password' in user.services)\n    ) {\n      loginButtons.push({\n        id: 'switchToChangePassword',\n        label: this.translate('changePassword'),\n        type: 'link',\n        href: changePasswordPath,\n        onClick: this.switchToChangePassword.bind(this)\n      });\n    }\n\n    if (formState == STATES.SIGN_UP) {\n      loginButtons.push({\n        id: 'signUp',\n        label: this.translate('signUp'),\n        type: hasPasswordService() ? 'submit' : 'link',\n        className: 'active',\n        disabled: waiting,\n        onClick: hasPasswordService() ? this.signUp.bind(this, {}) : null\n      });\n    }\n\n    if (this.showSignInLink()) {\n      loginButtons.push({\n        id: 'signIn',\n        label: this.translate('signIn'),\n        type: hasPasswordService() ? 'submit' : 'link',\n        className: 'active',\n        disabled: waiting,\n        onClick: hasPasswordService() ? this.signIn.bind(this) : null\n      });\n    }\n\n    if (formState == STATES.PASSWORD_RESET) {\n      loginButtons.push({\n        id: 'emailResetLink',\n        label: this.translate('resetYourPassword'),\n        type: 'submit',\n        disabled: waiting,\n        onClick: this.passwordReset.bind(this)\n      });\n    }\n\n    if (this.showPasswordChangeForm() || this.showEnrollAccountForm()) {\n      loginButtons.push({\n        id: 'changePassword',\n        label: this.showPasswordChangeForm()\n          ? this.translate('changePassword')\n          : this.translate('setPassword'),\n        type: 'submit',\n        disabled: waiting,\n        onClick: this.passwordChange.bind(this)\n      });\n\n      if (Accounts.user()) {\n        loginButtons.push({\n          id: 'switchToSignOut',\n          label: this.translate('cancel'),\n          type: 'link',\n          href: profilePath,\n          onClick: this.switchToSignOut.bind(this)\n        });\n      } else {\n        loginButtons.push({\n          id: 'cancelResetPassword',\n          label: this.translate('cancel'),\n          type: 'link',\n          onClick: this.cancelResetPassword.bind(this)\n        });\n      }\n    }\n\n    // Sort the button array so that the submit button always comes first, and\n    // buttons should also come before links.\n    loginButtons.sort((a, b) => {\n      return (\n        (b.type == 'submit' && a.type != undefined) -\n        (a.type == 'submit' && b.type != undefined)\n      );\n    });\n\n    return indexBy(loginButtons, 'id');\n  }\n\n  showSignInLink() {\n    return (\n      this.state.formState == STATES.SIGN_IN && Package['accounts-password']\n    );\n  }\n\n  showPasswordChangeForm() {\n    return (\n      Package['accounts-password'] &&\n      this.state.formState == STATES.PASSWORD_CHANGE\n    );\n  }\n\n  showEnrollAccountForm() {\n    return (\n      Package['accounts-password'] &&\n      this.state.formState == STATES.ENROLL_ACCOUNT\n    );\n  }\n\n  showCreateAccountLink() {\n    return (\n      this.state.formState == STATES.SIGN_IN &&\n      !Accounts._options.forbidClientAccountCreation &&\n      Package['accounts-password']\n    );\n  }\n\n  showForgotPasswordLink() {\n    return (\n      !this.props.user &&\n      this.state.formState == STATES.SIGN_IN &&\n      [\n        'USERNAME_AND_EMAIL',\n        'USERNAME_AND_OPTIONAL_EMAIL',\n        'EMAIL_ONLY'\n      ].includes(passwordSignupFields())\n    );\n  }\n\n  /**\n   * Helper to store field values while using the form.\n   */\n  setDefaultFieldValues(defaults) {\n    if (typeof defaults !== 'object') {\n      throw new Error(\n        'Argument to setDefaultFieldValues is not of type object'\n      );\n    } else if (typeof localStorage !== 'undefined' && localStorage) {\n      localStorage.setItem(\n        'accounts_ui',\n        JSON.stringify({\n          passwordSignupFields: passwordSignupFields(),\n          ...this.getDefaultFieldValues(),\n          ...defaults\n        })\n      );\n    }\n  }\n\n  /**\n   * Helper to get field values when switching states in the form.\n   */\n  getDefaultFieldValues() {\n    if (typeof localStorage !== 'undefined' && localStorage) {\n      const defaultFieldValues = JSON.parse(\n        localStorage.getItem('accounts_ui') || null\n      );\n      if (\n        defaultFieldValues &&\n        defaultFieldValues.passwordSignupFields === passwordSignupFields()\n      ) {\n        return defaultFieldValues;\n      }\n    }\n  }\n\n  /**\n   * Helper to clear field values when signing in, up or out.\n   */\n  clearDefaultFieldValues() {\n    if (typeof localStorage !== 'undefined' && localStorage) {\n      localStorage.removeItem('accounts_ui');\n    }\n  }\n\n  switchToSignUp(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.SIGN_UP,\n      ...this.getDefaultFieldValues()\n    });\n    this.clearMessages();\n  }\n\n  switchToSignIn(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.SIGN_IN,\n      ...this.getDefaultFieldValues()\n    });\n    this.clearMessages();\n  }\n\n  switchToPasswordReset(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.PASSWORD_RESET,\n      ...this.getDefaultFieldValues()\n    });\n    this.clearMessages();\n  }\n\n  switchToChangePassword(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.PASSWORD_CHANGE,\n      ...this.getDefaultFieldValues()\n    });\n    this.clearMessages();\n  }\n\n  switchToSignOut(event) {\n    event.preventDefault();\n    this.setState({\n      formState: STATES.PROFILE\n    });\n    this.clearMessages();\n  }\n\n  cancelResetPassword(event) {\n    event.preventDefault();\n    Accounts._loginButtonsSession.set('resetPasswordToken', null);\n    this.setState({\n      formState: STATES.SIGN_IN,\n      messages: []\n    });\n  }\n\n  signOut() {\n    Meteor.logout(() => {\n      this.setState({\n        formState: STATES.SIGN_IN,\n        password: null\n      });\n      this.state.onSignedOutHook();\n      this.clearMessages();\n      this.clearDefaultFieldValues();\n    });\n  }\n\n  signIn() {\n    const {\n      username = null,\n      email = null,\n      usernameOrEmail = null,\n      password,\n      formState,\n      onSubmitHook\n    } = this.state;\n    let error = false;\n    let loginSelector;\n    this.clearMessages();\n\n    if (usernameOrEmail !== null) {\n      if (!this.validateField('username', usernameOrEmail)) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook(\n            'error.accounts.usernameRequired',\n            this.state.formState\n          );\n        }\n        error = true;\n      } else {\n        if (\n          ['USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())\n        ) {\n          this.loginWithoutPassword();\n          return;\n        } else {\n          loginSelector = usernameOrEmail;\n        }\n      }\n    } else if (username !== null) {\n      if (!this.validateField('username', username)) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook(\n            'error.accounts.usernameRequired',\n            this.state.formState\n          );\n        }\n        error = true;\n      } else {\n        loginSelector = { username: username };\n      }\n    } else if (usernameOrEmail == null) {\n      if (!this.validateField('email', email)) {\n        error = true;\n      } else {\n        if (['EMAIL_ONLY_NO_PASSWORD'].includes(passwordSignupFields())) {\n          this.loginWithoutPassword();\n          error = true;\n        } else {\n          loginSelector = { email };\n        }\n      }\n    }\n    if (\n      !['EMAIL_ONLY_NO_PASSWORD'].includes(passwordSignupFields()) &&\n      !this.validateField('password', password)\n    ) {\n      error = true;\n    }\n\n    if (!error) {\n      Meteor.loginWithPassword(loginSelector, password, (error, result) => {\n        onSubmitHook(error, formState);\n        if (error) {\n          this.showMessage(\n            `error.accounts.${error.reason}` || 'unknown_error',\n            'error'\n          );\n        } else {\n          loginResultCallback(() => this.state.onSignedInHook());\n          this.setState({\n            formState: STATES.PROFILE,\n            password: null\n          });\n          this.clearDefaultFieldValues();\n        }\n      });\n    }\n  }\n\n  oauthButtons() {\n    const { formState, waiting } = this.state;\n    let oauthButtons = [];\n    if (formState == STATES.SIGN_IN || formState == STATES.SIGN_UP) {\n      if (Accounts.oauth) {\n        Accounts.oauth.serviceNames().map(service => {\n          oauthButtons.push({\n            id: service,\n            label: capitalize(service),\n            disabled: waiting,\n            type: 'button',\n            className: `btn-${service} ${service}`,\n            onClick: this.oauthSignIn.bind(this, service)\n          });\n        });\n      }\n    }\n    return indexBy(oauthButtons, 'id');\n  }\n\n  oauthSignIn(serviceName) {\n    const { user } = this.props;\n    const { formState, waiting, onSubmitHook } = this.state;\n    //Thanks Josh Owens for this one.\n    function capitalService() {\n      return serviceName.charAt(0).toUpperCase() + serviceName.slice(1);\n    }\n\n    if (serviceName === 'meteor-developer') {\n      serviceName = 'meteorDeveloperAccount';\n    }\n\n    const loginWithService = Meteor['loginWith' + capitalService()];\n\n    let options = {}; // use default scope unless specified\n    if (Accounts.ui._options.requestPermissions[serviceName])\n      options.requestPermissions =\n        Accounts.ui._options.requestPermissions[serviceName];\n    if (Accounts.ui._options.requestOfflineToken[serviceName])\n      options.requestOfflineToken =\n        Accounts.ui._options.requestOfflineToken[serviceName];\n    if (Accounts.ui._options.forceApprovalPrompt[serviceName])\n      options.forceApprovalPrompt =\n        Accounts.ui._options.forceApprovalPrompt[serviceName];\n\n    this.clearMessages();\n    const self = this;\n    loginWithService(options, error => {\n      onSubmitHook(error, formState);\n      if (error) {\n        this.showMessage(`error.accounts.${error.reason}` || 'unknown_error');\n      } else {\n        this.setState({ formState: STATES.PROFILE });\n        this.clearDefaultFieldValues();\n        loginResultCallback(() => {\n          Meteor.setTimeout(() => this.state.onSignedInHook(), 100);\n        });\n      }\n    });\n  }\n\n  signUp(options = {}) {\n    const {\n      username = null,\n      email = null,\n      usernameOrEmail = null,\n      password,\n      formState,\n      onSubmitHook\n    } = this.state;\n    let error = false;\n    this.clearMessages();\n\n    if (username !== null) {\n      if (!this.validateField('username', username)) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook(\n            'error.accounts.usernameRequired',\n            this.state.formState\n          );\n        }\n        error = true;\n      } else {\n        options.username = username;\n      }\n    } else {\n      if (\n        ['USERNAME_AND_EMAIL', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\n          passwordSignupFields()\n        ) &&\n        !this.validateField('username', username)\n      ) {\n        if (this.state.formState == STATES.SIGN_UP) {\n          this.state.onSubmitHook(\n            'error.accounts.usernameRequired',\n            this.state.formState\n          );\n        }\n        error = true;\n      }\n    }\n\n    if (!this.validateField('email', email)) {\n      error = true;\n    } else {\n      options.email = email;\n    }\n\n    if (\n      ['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\n        passwordSignupFields()\n      )\n    ) {\n      // Generate a random password.\n      options.password = Meteor.uuid();\n    } else if (!this.validateField('password', password)) {\n      onSubmitHook('Invalid password', formState);\n      error = true;\n    } else {\n      options.password = password;\n    }\n\n    const SignUp = function(_options) {\n      Accounts.createUser(_options, error => {\n        if (error) {\n          this.showMessage(\n            `error.accounts.${error.reason}` || 'unknown_error',\n            'error'\n          );\n          if (this.translate(`error.accounts.${error.reason}`)) {\n            onSubmitHook(`error.accounts.${error.reason}`, formState);\n          } else {\n            onSubmitHook('unknown_error', formState);\n          }\n        } else {\n          onSubmitHook(null, formState);\n          this.setState({ formState: STATES.PROFILE, password: null });\n          let user = Accounts.user();\n          loginResultCallback(\n            this.state.onPostSignUpHook.bind(this, _options, user)\n          );\n          this.clearDefaultFieldValues();\n        }\n\n        this.setState({ waiting: false });\n      });\n    };\n\n    if (!error) {\n      this.setState({ waiting: true });\n      // Allow for Promises to return.\n      let promise = this.state.onPreSignUpHook(options);\n      if (promise instanceof Promise) {\n        promise.then(SignUp.bind(this, options));\n      } else {\n        SignUp(options);\n      }\n    }\n  }\n\n  loginWithoutPassword() {\n    const {\n      email = '',\n      usernameOrEmail = '',\n      waiting,\n      formState,\n      onSubmitHook\n    } = this.state;\n\n    if (waiting) {\n      return;\n    }\n\n    if (this.validateField('email', email)) {\n      this.setState({ waiting: true });\n\n      Accounts.loginWithoutPassword({ email: email }, error => {\n        if (error) {\n          this.showMessage(\n            `error.accounts.${error.reason}` || 'unknown_error',\n            'error'\n          );\n        } else {\n          this.showMessage(this.translate('info.emailSent'), 'success', 5000);\n          this.clearDefaultFieldValues();\n        }\n        onSubmitHook(error, formState);\n        this.setState({ waiting: false });\n      });\n    } else if (this.validateField('username', usernameOrEmail)) {\n      this.setState({ waiting: true });\n\n      Accounts.loginWithoutPassword(\n        { email: usernameOrEmail, username: usernameOrEmail },\n        error => {\n          if (error) {\n            this.showMessage(\n              `error.accounts.${error.reason}` || 'unknown_error',\n              'error'\n            );\n          } else {\n            this.showMessage(this.translate('info.emailSent'), 'success', 5000);\n            this.clearDefaultFieldValues();\n          }\n          onSubmitHook(error, formState);\n          this.setState({ waiting: false });\n        }\n      );\n    } else {\n      let errMsg = null;\n      if (['USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\n        errMsg = this.translate('error.accounts.invalid_email');\n      } else {\n        errMsg = this.translate('error.accounts.invalid_email');\n      }\n      this.showMessage(errMsg, 'warning');\n      onSubmitHook(errMsg, formState);\n    }\n  }\n\n  passwordReset() {\n    const { email = '', waiting, formState, onSubmitHook } = this.state;\n\n    if (waiting) {\n      return;\n    }\n\n    this.clearMessages();\n    if (this.validateField('email', email)) {\n      this.setState({ waiting: true });\n\n      Accounts.forgotPassword({ email: email }, error => {\n        if (error) {\n          this.showMessage(\n            `error.accounts.${error.reason}` || 'unknown_error',\n            'error'\n          );\n        } else {\n          this.showMessage(this.translate('info.emailSent'), 'success', 5000);\n          this.clearDefaultFieldValues();\n        }\n        onSubmitHook(error, formState);\n        this.setState({ waiting: false });\n      });\n    }\n  }\n\n  passwordChange() {\n    const {\n      password,\n      newPassword,\n      formState,\n      onSubmitHook,\n      onSignedInHook\n    } = this.state;\n\n    if (!this.validateField('password', newPassword)) {\n      onSubmitHook('err.minChar', formState);\n      return;\n    }\n\n    let token = Accounts._loginButtonsSession.get('resetPasswordToken');\n    if (!token) {\n      token = Accounts._loginButtonsSession.get('enrollAccountToken');\n    }\n    if (token) {\n      Accounts.resetPassword(token, newPassword, error => {\n        if (error) {\n          this.showMessage(\n            `error.accounts.${error.reason}` || 'unknown_error',\n            'error'\n          );\n          onSubmitHook(error, formState);\n        } else {\n          this.showMessage(\n            this.translate('info.passwordChanged'),\n            'success',\n            5000\n          );\n          onSubmitHook(null, formState);\n          this.setState({ formState: STATES.PROFILE });\n          Accounts._loginButtonsSession.set('resetPasswordToken', null);\n          Accounts._loginButtonsSession.set('enrollAccountToken', null);\n          onSignedInHook();\n        }\n      });\n    } else {\n      Accounts.changePassword(password, newPassword, error => {\n        if (error) {\n          this.showMessage(\n            `error.accounts.${error.reason}` || 'unknown_error',\n            'error'\n          );\n          onSubmitHook(error, formState);\n        } else {\n          this.showMessage('info.passwordChanged', 'success', 5000);\n          onSubmitHook(null, formState);\n          this.setState({ formState: STATES.PROFILE });\n          this.clearDefaultFieldValues();\n        }\n      });\n    }\n  }\n\n  showMessage(message, type, clearTimeout, field) {\n    message = this.translate(message).trim();\n    if (message) {\n      this.setState(({ messages = [] }) => {\n        messages.push({\n          message,\n          type,\n          ...(field && { field })\n        });\n        return { messages };\n      });\n      if (clearTimeout) {\n        this.hideMessageTimout = setTimeout(() => {\n          // Filter out the message that timed out.\n          this.clearMessage(message);\n        }, clearTimeout);\n      }\n    }\n  }\n\n  getMessageForField(field) {\n    const { messages = [] } = this.state;\n    return messages.find(({ field: key }) => key === field);\n  }\n\n  clearMessage(message) {\n    if (message) {\n      this.setState(({ messages = [] }) => ({\n        messages: messages.filter(({ message: a }) => a !== message)\n      }));\n    }\n  }\n\n  clearMessages() {\n    if (this.hideMessageTimout) {\n      clearTimeout(this.hideMessageTimout);\n    }\n    this.setState({ messages: [] });\n  }\n\n  componentWillMount() {\n    // XXX Check for backwards compatibility.\n    if (Meteor.isClient) {\n      const container = document.createElement('div');\n      ReactDOM.render(<Accounts.ui.Field message=\"test\" />, container);\n      if (container.getElementsByClassName('message').length == 0) {\n        // Found backwards compatibility issue with 1.3.x\n        console.warn(`Implementations of Accounts.ui.Field must render message in v1.2.11.\n          https://github.com/studiointeract/accounts-ui/#deprecations`);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.hideMessageTimout) {\n      clearTimeout(this.hideMessageTimout);\n    }\n  }\n\n  render() {\n    this.oauthButtons();\n    // Backwords compatibility with v1.2.x.\n    const { messages = [] } = this.state;\n    const message = {\n      deprecated: true,\n      message: messages.map(({ message }) => message).join(', ')\n    };\n    return (\n      <Accounts.ui.Form\n        oauthServices={this.oauthButtons()}\n        fields={this.fields()}\n        buttons={this.buttons()}\n        {...this.state}\n        message={message}\n        translate={text => this.translate(text)}\n      />\n    );\n  }\n}\nLoginForm.propTypes = {\n  formState: PropTypes.symbol,\n  loginPath: PropTypes.string,\n  signUpPath: PropTypes.string,\n  resetPasswordPath: PropTypes.string,\n  profilePath: PropTypes.string,\n  changePasswordPath: PropTypes.string\n};\nLoginForm.defaultProps = {\n  formState: null,\n  loginPath: null,\n  signUpPath: null,\n  resetPasswordPath: null,\n  profilePath: null,\n  changePasswordPath: null\n};\n\nAccounts.ui.LoginForm = LoginForm;\n\nconst LoginFormContainer = withTracker(() => {\n  // Listen for the user to login/logout and the services list to the user.\n  Meteor.subscribe('servicesList');\n  return {\n    user: Accounts.user()\n  };\n})(LoginForm);\nAccounts.ui.LoginForm = LoginFormContainer;\nexport default LoginFormContainer;\n"]},"sourceType":"script","hash":"ede78b27c0f3a6aa09983e2b65e86dd3fe8704b9"}
