{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nmodule.export({\n  \"default\": function () {\n    return AggregateFilters;\n  }\n});\nvar sift;\nmodule.link(\"sift\", {\n  \"default\": function (v) {\n    sift = v;\n  }\n}, 0);\nvar dot;\nmodule.link(\"dot-object\", {\n  \"default\": function (v) {\n    dot = v;\n  }\n}, 1);\n\nfunction extractIdsFromArray(array, field) {\n  return (array || []).map(function (obj) {\n    return _.isObject(obj) ? dot.pick(field, obj) : undefined;\n  }).filter(function (v) {\n    return !!v;\n  });\n}\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\n\n\nvar AggregateFilters =\n/*#__PURE__*/\nfunction () {\n  function AggregateFilters(collectionNode, metaFilters) {\n    this.collectionNode = collectionNode;\n    this.linker = collectionNode.linker;\n    this.metaFilters = metaFilters;\n    this.isVirtual = this.linker.isVirtual();\n    this.linkStorageField = this.linker.linkStorageField;\n  }\n\n  var _proto = AggregateFilters.prototype;\n\n  _proto.create = function () {\n    function create() {\n      switch (this.linker.strategy) {\n        case 'one':\n          return this.createOne();\n\n        case 'one-meta':\n          return this.createOneMeta();\n\n        case 'many':\n          return this.createMany();\n\n        case 'many-meta':\n          return this.createManyMeta();\n\n        default:\n          throw new Meteor.Error(\"Invalid linker type: \" + this.linker.type);\n      }\n    }\n\n    return create;\n  }();\n\n  _proto.createOne = function () {\n    function createOne() {\n      if (!this.isVirtual) {\n        return {\n          _id: {\n            $in: _.uniq(extractIdsFromArray(this.parentObjects, this.linkStorageField))\n          }\n        };\n      } else {\n        var _ref;\n\n        return _ref = {}, _ref[this.linkStorageField] = {\n          $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n        }, _ref;\n      }\n    }\n\n    return createOne;\n  }();\n\n  _proto.createOneMeta = function () {\n    function createOneMeta() {\n      var _this = this;\n\n      if (!this.isVirtual) {\n        var eligibleObjects = this.parentObjects;\n\n        if (this.metaFilters) {\n          eligibleObjects = _.filter(this.parentObjects, function (object) {\n            return sift(_this.metaFilters)(object[_this.linkStorageField]);\n          });\n        }\n\n        var storages = _.pluck(eligibleObjects, this.linkStorageField);\n\n        var ids = [];\n\n        _.each(storages, function (storage) {\n          if (storage) {\n            ids.push(storage._id);\n          }\n        });\n\n        return {\n          _id: {\n            $in: _.uniq(ids)\n          }\n        };\n      } else {\n        var filters = {};\n\n        if (this.metaFilters) {\n          _.each(this.metaFilters, function (value, key) {\n            filters[_this.linkStorageField + '.' + key] = value;\n          });\n        }\n\n        filters[this.linkStorageField + '._id'] = {\n          $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n        };\n        return filters;\n      }\n    }\n\n    return createOneMeta;\n  }();\n\n  _proto.createMany = function () {\n    function createMany() {\n      if (!this.isVirtual) {\n        var _ref2;\n\n        var _this$linkStorageFiel = this.linkStorageField.split('.'),\n            _this$linkStorageFiel2 = (0, _toArray2.default)(_this$linkStorageFiel),\n            root = _this$linkStorageFiel2[0],\n            nested = _this$linkStorageFiel2.slice(1);\n\n        var arrayOfIds = (_ref2 = _).union.apply(_ref2, (0, _toConsumableArray2.default)(extractIdsFromArray(this.parentObjects, root)));\n\n        return {\n          _id: {\n            $in: _.uniq(nested.length > 0 ? extractIdsFromArray(arrayOfIds, nested.join('.')) : arrayOfIds)\n          }\n        };\n      } else {\n        var _ref3, _ref4;\n\n        var _arrayOfIds = _.pluck(this.parentObjects, '_id');\n\n        return _ref4 = {}, _ref4[this.linkStorageField] = {\n          $in: _.uniq((_ref3 = _).union.apply(_ref3, (0, _toConsumableArray2.default)(_arrayOfIds)))\n        }, _ref4;\n      }\n    }\n\n    return createMany;\n  }();\n\n  _proto.createManyMeta = function () {\n    function createManyMeta() {\n      var _this2 = this;\n\n      if (!this.isVirtual) {\n        var ids = [];\n\n        _.each(this.parentObjects, function (object) {\n          if (object[_this2.linkStorageField]) {\n            if (_this2.metaFilters) {\n              var isValid = sift(_this2.metaFilters);\n\n              _.each(object[_this2.linkStorageField], function (object) {\n                if (isValid(object)) {\n                  ids.push(object._id);\n                }\n              });\n            } else {\n              _.each(object[_this2.linkStorageField], function (object) {\n                ids.push(object._id);\n              });\n            }\n          }\n        });\n\n        return {\n          _id: {\n            $in: _.uniq(ids)\n          }\n        };\n      } else {\n        var _ref5;\n\n        var filters = {};\n\n        if (this.metaFilters) {\n          _.each(this.metaFilters, function (value, key) {\n            filters[key] = value;\n          });\n        }\n\n        filters._id = {\n          $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n        };\n        return _ref5 = {}, _ref5[this.linkStorageField] = {\n          $elemMatch: filters\n        }, _ref5;\n      }\n    }\n\n    return createManyMeta;\n  }();\n\n  (0, _createClass2.default)(AggregateFilters, [{\n    key: \"parentObjects\",\n    get: function () {\n      return this.collectionNode.parent.results;\n    }\n  }]);\n  return AggregateFilters;\n}();","map":{"version":3,"sources":["packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js"],"names":["module","export","AggregateFilters","sift","link","v","dot","extractIdsFromArray","array","field","map","obj","_","isObject","pick","undefined","filter","collectionNode","metaFilters","linker","isVirtual","linkStorageField","create","strategy","createOne","createOneMeta","createMany","createManyMeta","Meteor","Error","type","_id","$in","uniq","parentObjects","pluck","eligibleObjects","object","storages","ids","each","storage","push","filters","value","key","split","root","nested","arrayOfIds","union","length","join","isValid","$elemMatch","parent","results"],"mappings":"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","sourcesContent":["import sift from 'sift';\nimport dot from 'dot-object';\n\nfunction extractIdsFromArray(array, field) {\n    return (array || []).map(obj => _.isObject(obj) ? dot.pick(field, obj) : undefined).filter(v => !!v);\n}\n\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\nexport default class AggregateFilters {\n    constructor(collectionNode, metaFilters) {\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    get parentObjects() {\n        return this.collectionNode.parent.results;\n    }\n\n    create() {\n        switch (this.linker.strategy) {\n            case 'one':\n                return this.createOne();\n            case 'one-meta':\n                return this.createOneMeta();\n            case 'many':\n                return this.createMany();\n            case 'many-meta':\n                return this.createManyMeta();\n            default:\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n        }\n    }\n\n    createOne() {\n        if (!this.isVirtual) {\n            return {\n                _id: {\n                    $in: _.uniq(extractIdsFromArray(this.parentObjects, this.linkStorageField))\n                }\n            };\n        } else {\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, '_id')\n                    )\n                }\n            };\n        }\n    }\n\n    createOneMeta() {\n        if (!this.isVirtual) {\n            let eligibleObjects = this.parentObjects;\n\n            if (this.metaFilters) {\n                eligibleObjects = _.filter(this.parentObjects, object => {\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\n                });\n            }\n\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\n            let ids = [];\n            _.each(storages, storage => {\n                if (storage) {\n                    ids.push(storage._id);\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[this.linkStorageField + '.' + key] = value;\n                })\n            }\n\n            filters[this.linkStorageField + '._id'] = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return filters;\n        }\n    }\n\n    createMany() {\n        if (!this.isVirtual) {\n            const [root, ...nested] = this.linkStorageField.split('.');\n            const arrayOfIds = _.union(...extractIdsFromArray(this.parentObjects, root));\n            return {\n                _id: {\n                    $in: _.uniq(nested.length > 0 ? extractIdsFromArray(arrayOfIds, nested.join('.')) : arrayOfIds)\n                }\n            };\n        } else {\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        }\n    }\n\n    createManyMeta() {\n        if (!this.isVirtual) {\n            let ids = [];\n\n            _.each(this.parentObjects, object => {\n                if (object[this.linkStorageField]) {\n                    if (this.metaFilters) {\n                        const isValid = sift(this.metaFilters);\n                        _.each(object[this.linkStorageField], object => {\n                            if (isValid(object)) {\n                                ids.push(object._id);\n                            }\n                        });\n                    } else {\n                        _.each(object[this.linkStorageField], object => {\n                            ids.push(object._id);\n                        });\n                    }\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[key] = value;\n                })\n            }\n\n            filters._id = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return {\n                [this.linkStorageField]: {\n                    $elemMatch: filters\n                }\n            };\n        }\n    }\n}"]},"sourceType":"script","hash":"4838a611d71bccb97b0fdf1080ab3d966d7b2117"}
