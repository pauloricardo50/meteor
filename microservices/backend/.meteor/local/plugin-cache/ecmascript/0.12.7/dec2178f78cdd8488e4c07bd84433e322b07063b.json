{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/OtherRealEstateTable.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/OtherRealEstateTable.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/OtherRealEstateTable.jsx","inputSourceMap":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/OtherRealEstateTable.jsx"],"names":["React","T","toMoney","classes","ROW_TYPES","OtherRealEstateTableProps","OtherRealEstateTable","loan","borrowers","realEstateArray","reduce","arr","realEstate","TITLE","map","value","name","description","income","index","REGULAR","textAlign"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,CAAP;AACA,SAASC,OAAT;AACA,SAASC,OAAT,EAAkBC,SAAlB;AAEA,KAAKC,yBAAL,GAAiC,EAAjC;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAC5BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AADsB,CAE7B,EAAEH,yBAF0B,KAEI;AAC/B,QAAMI,eAAe,GAAGD,SAAS,CAACE,MAAV,CACtB,CAACC,GAAD,EAAM;AAAEC,IAAAA;AAAF,GAAN,KAAyB,CAAC,GAAGD,GAAJ,EAAS,GAAGC,UAAZ,CADH,EAEtB,EAFsB,CAAxB;AAIA,SACE,CAAC,KAAD,CAAO,UAAU,6BAAjB;MACE,CAAC,EAAD,CAAI,UAAU,CAACT,OAAO,CAACC,SAAS,CAACS,KAAX,CAAR,CAAd;QACE,CAAC,EAAD,CAAI,QAAQ,CAAC,CAAD,CAAZ,CAAgB,qBAAqB,EAAE,EAAF;MACvC,EAAE,EAAF;MACA,CAACJ,eAAe,CAACK,GAAhB,CAAoB,CAAC;AAAEC,MAAAA,KAAF;AAASR,MAAAA,IAAT;AAAeS,MAAAA,IAAf;AAAqBC,MAAAA,WAArB;AAAkCC,MAAAA;AAAlC,KAAD,EAA6CC,KAA7C,KACnB,CAAC,EAAD,CAAI,IAAI,CAACA,KAAD,CAAR,CAAgB,UAAU,CAAChB,OAAO,CAACC,SAAS,CAACgB,OAAX,CAAR,CAA1B;UACE,CAAC,EAAD;YACE,CAAC,GAAD,CAAK,CAACJ,IAAD,CAAM,EAAE,GAAF;YACX,CAAC,GAAD,CAAK,UAAU,WAAf;cACE,CAAC,CAAD,CAAG,GAAG,CAAE,uBAAsBC,WAAY,EAApC,CAAN;YACF,EAAE,GAAF;UACF,EAAE,EAAF;UACA,CAAC,EAAD,CAAI,MAAM,CAAC;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAD,CAAV;YACE,CAAC,GAAD;cACE,CAAC,IAAD,CAAM,UAAU,WAAhB,CAA4B,OAAO,EAAE,IAAF,CAAO,MAAM,CAACnB,OAAO,CAACa,KAAD,CAAR;YAClD,EAAE,GAAF;;YAEA,CAAC,GAAD;cACE,CAAC,IAAD,CAAM,UAAU,WAAhB,CAA4B,MAAM,EAAE,IAAF,CAAO,MAAM,CAACb,OAAO,CAACK,IAAD,CAAR;YACjD,EAAE,GAAF;;YAEA,CAAC,GAAD;cACE,CAAC,IAAD,CAAM,UAAU,WAAhB,CAA4B,gBAAgB,EAAE,IAAF,CAAO;cACnD,CAACL,OAAO,CAACgB,MAAD,CAAR;YACF,EAAE,GAAF;UACF,EAAE,EAAF;QACF,EAAE,EAAF,CAtBD,CAAD;IAwBF,EAAE,KAAF,CA7BF;AA+BD,CAtCD;;AAwCA,eAAeZ,oBAAf","sourcesContent":["// @flow\nimport React from 'react';\n\nimport T from '../../../../../../components/Translation';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport { classes, ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype OtherRealEstateTableProps = {};\n\nconst OtherRealEstateTable = ({\n  loan: { borrowers },\n}: OtherRealEstateTableProps) => {\n  const realEstateArray = borrowers.reduce(\n    (arr, { realEstate }) => [...arr, ...realEstate],\n    [],\n  );\n  return (\n    <table className=\"pdf-table other-real-estate\">\n      <tr className={classes[ROW_TYPES.TITLE]}>\n        <td colSpan={2}>Patrimoine immobilier</td>\n      </tr>\n      {realEstateArray.map(({ value, loan, name, description, income }, index) => (\n        <tr key={index} className={classes[ROW_TYPES.REGULAR]}>\n          <td>\n            <div>{name}</div>\n            <div className=\"secondary\">\n              <T id={`Forms.residenceType.${description}`} />\n            </div>\n          </td>\n          <td style={{ textAlign: 'right' }}>\n            <div>\n              <span className=\"secondary\">Valeur:</span>&nbsp;{toMoney(value)}\n            </div>\n\n            <div>\n              <span className=\"secondary\">Dette:</span>&nbsp;{toMoney(loan)}\n            </div>\n\n            <div>\n              <span className=\"secondary\">Revenus annuels:</span>&nbsp;\n              {toMoney(income)}\n            </div>\n          </td>\n        </tr>\n      ))}\n    </table>\n  );\n};\n\nexport default OtherRealEstateTable;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/OtherRealEstateTable.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/OtherRealEstateTable.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet T;\nmodule.link(\"../../../../../../components/Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 1);\nlet toMoney;\nmodule.link(\"../../../../../../utils/conversionFunctions\", {\n  toMoney(v) {\n    toMoney = v;\n  }\n\n}, 2);\nlet classes, ROW_TYPES;\nmodule.link(\"../../PdfTable/PdfTable\", {\n  classes(v) {\n    classes = v;\n  },\n\n  ROW_TYPES(v) {\n    ROW_TYPES = v;\n  }\n\n}, 3);\n\nconst OtherRealEstateTable = ({\n  loan: {\n    borrowers\n  }\n}) => {\n  const realEstateArray = borrowers.reduce((arr, {\n    realEstate\n  }) => [...arr, ...realEstate], []);\n  return React.createElement(\"table\", {\n    className: \"pdf-table other-real-estate\"\n  }, React.createElement(\"tr\", {\n    className: classes[ROW_TYPES.TITLE]\n  }, React.createElement(\"td\", {\n    colSpan: 2\n  }, \"Patrimoine immobilier\")), realEstateArray.map(({\n    value,\n    loan,\n    name,\n    description,\n    income\n  }, index) => React.createElement(\"tr\", {\n    key: index,\n    className: classes[ROW_TYPES.REGULAR]\n  }, React.createElement(\"td\", null, React.createElement(\"div\", null, name), React.createElement(\"div\", {\n    className: \"secondary\"\n  }, React.createElement(T, {\n    id: `Forms.residenceType.${description}`\n  }))), React.createElement(\"td\", {\n    style: {\n      textAlign: 'right'\n    }\n  }, React.createElement(\"div\", null, React.createElement(\"span\", {\n    className: \"secondary\"\n  }, \"Valeur:\"), \"\\xA0\", toMoney(value)), React.createElement(\"div\", null, React.createElement(\"span\", {\n    className: \"secondary\"\n  }, \"Dette:\"), \"\\xA0\", toMoney(loan)), React.createElement(\"div\", null, React.createElement(\"span\", {\n    className: \"secondary\"\n  }, \"Revenus annuels:\"), \"\\xA0\", toMoney(income))))));\n};\n\nmodule.exportDefault(OtherRealEstateTable);","map":{"version":3,"sources":["imports/core/api/pdf/server/pdfComponents/pages/PropertyPdfPage/OtherRealEstateTable.jsx"],"names":["OtherRealEstateTable","loan","borrowers","realEstateArray","realEstate","classes","ROW_TYPES","income","description","textAlign","toMoney"],"mappings":"AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,CAAA;AAAA,MAAA,CAAA,IAAA,CAAA,0CAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,CAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA;AAAA,MAAA,CAAA,IAAA,CAAA,6CAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,OAAA,EAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AASA,MAAMA,oBAAoB,GAAG,CAAC;AAC5BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AADsB,CAAD,KAEI;AAC/B,QAAMC,eAAe,GAAGD,SAAS,CAATA,MAAAA,CACtB,CAAA,GAAA,EAAM;AAAEE,IAAAA;AAAF,GAAN,KAAyB,CAAC,GAAD,GAAA,EAAS,GADZF,UACG,CADHA,EAAxB,EAAwBA,CAAxB;AAIA,SACE;AAAO,IAAA,SAAA,EAAP;AAAA,KACE;AAAI,IAAA,SAAA,EAAWG,OAAO,CAACC,SAAS,CAAhC,KAAsB;AAAtB,KACE;AAAI,IAAA,OAAA,EAAJ;AAAA,6BADF,CADF,EAIGH,eAAe,CAAfA,GAAAA,CAAoB,CAAC;AAAA,IAAA,KAAA;AAAA,IAAA,IAAA;AAAA,IAAA,IAAA;AAAA,IAAA,WAAA;AAAkCI,IAAAA;AAAlC,GAAD,EAAA,KAAA,KACnB;AAAI,IAAA,GAAA,EAAJ,KAAA;AAAgB,IAAA,SAAA,EAAWF,OAAO,CAACC,SAAS,CAA5C,OAAkC;AAAlC,KACE,gCACE,iCAAK,IAAL,CADF,EAEE;AAAK,IAAA,SAAA,EAAL;AAAA,KACE,oBAAA,CAAA;AAAG,IAAA,EAAA,EAAK,uBAAsBE,WAA9B;AAAA,IADF,CAFF,CADF,EAOE;AAAI,IAAA,KAAA,EAAO;AAAEC,MAAAA,SAAS,EAAE;AAAb;AAAX,KACE,iCACE;AAAM,IAAA,SAAA,EAAN;AAAA,eADF,UACmDC,OAAO,CAAR,KAAQ,CAD1D,CADF,EAKE,iCACE;AAAM,IAAA,SAAA,EAAN;AAAA,cADF,UACkDA,OAAO,CAAR,IAAQ,CADzD,CALF,EASE,iCACE;AAAM,IAAA,SAAA,EAAN;AAAA,wBADF,UAEGA,OAAO,CAAR,MAAQ,CAFV,CATF,CAPF,CADDP,CAJH,CADF;AAPF,CAAA;;AATA,MAAA,CAAA,aAAA,CAiDA,oBAjDA","sourcesContent":["// @flow\nimport React from 'react';\n\nimport T from '../../../../../../components/Translation';\nimport { toMoney } from '../../../../../../utils/conversionFunctions';\nimport { classes, ROW_TYPES } from '../../PdfTable/PdfTable';\n\ntype OtherRealEstateTableProps = {};\n\nconst OtherRealEstateTable = ({\n  loan: { borrowers },\n}: OtherRealEstateTableProps) => {\n  const realEstateArray = borrowers.reduce(\n    (arr, { realEstate }) => [...arr, ...realEstate],\n    [],\n  );\n  return (\n    <table className=\"pdf-table other-real-estate\">\n      <tr className={classes[ROW_TYPES.TITLE]}>\n        <td colSpan={2}>Patrimoine immobilier</td>\n      </tr>\n      {realEstateArray.map(({ value, loan, name, description, income }, index) => (\n        <tr key={index} className={classes[ROW_TYPES.REGULAR]}>\n          <td>\n            <div>{name}</div>\n            <div className=\"secondary\">\n              <T id={`Forms.residenceType.${description}`} />\n            </div>\n          </td>\n          <td style={{ textAlign: 'right' }}>\n            <div>\n              <span className=\"secondary\">Valeur:</span>&nbsp;{toMoney(value)}\n            </div>\n\n            <div>\n              <span className=\"secondary\">Dette:</span>&nbsp;{toMoney(loan)}\n            </div>\n\n            <div>\n              <span className=\"secondary\">Revenus annuels:</span>&nbsp;\n              {toMoney(income)}\n            </div>\n          </td>\n        </tr>\n      ))}\n    </table>\n  );\n};\n\nexport default OtherRealEstateTable;\n"]},"sourceType":"script","hash":"dec2178f78cdd8488e4c07bd84433e322b07063b"}
