{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/loanFunctions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/utils/loanFunctions.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/loanFunctions.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/loanFunctions.js"],"names":["Meteor","STEPS","TASK_STATUS","Calculator","formatLoanWithStructure","selectedStructure","structures","properties","offers","promotionOptions","borrowers","length","undefined","structure","foundStructure","find","id","propertyId","property","_id","promotionOptionId","promotionOption","formatPromotionOptionIntoProperty","offerId","offer","mortgageNoteIds","borrowerMortgageNotes","reduce","arr","mortgageNotes","notes","map","formatLoanWithDocuments","loan","structureProperty","propertyDocuments","documents","formatLoanWithPromotion","selectProperty","structureId","shouldSendStepNotification","prevStep","nextStep","SOLVENCY","REQUEST","OFFERS","nextDueTaskReducer","tasksCache","tasks","activeTasks","filter","status","taskStatus","isPrivate","assigneeLink","assigneeId","ACTIVE","userId","tasksWithoutDate","dueAt","sort","createdAt","A","B","task","noDueDate","sortedTasks"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { STEPS, TASK_STATUS } from '../api/constants';\nimport Calculator from './Calculator';\n\nexport const formatLoanWithStructure = ({\n  selectedStructure,\n  structures = [],\n  properties,\n  offers,\n  promotionOptions,\n  borrowers = [],\n}) => {\n  if (structures.length === 0) {\n    return undefined;\n  }\n\n  let structure = {};\n\n  if (selectedStructure) {\n    const foundStructure = structures.find(({ id }) => id === selectedStructure);\n\n    if (foundStructure) {\n      structure = foundStructure;\n\n      if (structure.propertyId) {\n        const property = properties.find(({ _id }) => _id === structure.propertyId);\n        structure = { ...structure, property };\n      }\n\n      if (structure.promotionOptionId) {\n        const promotionOption = promotionOptions.find(({ _id }) => _id === structure.promotionOptionId);\n        structure = {\n          ...structure,\n          property: Calculator.formatPromotionOptionIntoProperty(promotionOption),\n        };\n      }\n\n      if (structure.offerId) {\n        const offer = offers.find(({ _id }) => _id === structure.offerId);\n        structure = { ...structure, offer };\n      }\n\n      if (structure.mortgageNoteIds) {\n        const borrowerMortgageNotes = borrowers.reduce(\n          (arr, { mortgageNotes: notes = [] }) => [...arr, ...notes],\n          [],\n        );\n        const mortgageNotes = structure.mortgageNoteIds.map(id =>\n          borrowerMortgageNotes.find(({ _id }) => _id === id));\n\n        structure = { ...structure, mortgageNotes };\n      }\n    } else {\n      structure = {};\n    }\n\n    return structure;\n  }\n\n  return structure;\n};\n\nexport const formatLoanWithDocuments = (loan) => {\n  if (!loan || !loan.structure) {\n    return loan;\n  }\n\n  const { structure, properties = [] } = loan;\n  const { property, propertyId } = structure;\n  const structureProperty = properties.find(({ _id }) => _id === propertyId);\n  const propertyDocuments = structureProperty && structureProperty.documents;\n\n  return {\n    ...loan,\n    structure: {\n      ...structure,\n      property: property && {\n        ...property,\n        documents: propertyDocuments,\n      },\n    },\n  };\n};\n\nexport const formatLoanWithPromotion = (loan) => {\n  if (loan.structure.promotionOptionId) {\n    const property = Calculator.selectProperty({\n      loan,\n      // Do this to make sure we're getting the promotionOption and not the\n      // fake property created from it\n      structureId: loan.structure.id,\n    });\n    return { ...loan, structure: { ...loan.structure, property } };\n  }\n\n  return loan;\n};\n\nexport const shouldSendStepNotification = (prevStep, nextStep) =>\n  (prevStep === STEPS.SOLVENCY || prevStep === STEPS.REQUEST)\n  && nextStep === STEPS.OFFERS;\n\nexport const nextDueTaskReducer = ({ tasksCache: tasks = [] }) => {\n  const activeTasks = tasks.filter(({\n    status: taskStatus,\n    isPrivate = false,\n    assigneeLink: { _id: assigneeId } = {},\n  }) => {\n    if (taskStatus !== TASK_STATUS.ACTIVE) {\n      return false;\n    }\n\n    if (isPrivate && assigneeId) {\n      return assigneeId === Meteor.userId();\n    }\n\n    return true;\n  });\n  const tasksWithoutDate = activeTasks\n    .filter(({ dueAt }) => !dueAt)\n    .sort(({ createdAt: A }, { createdAt: B }) => A - B);\n\n  if (tasksWithoutDate.length > 0) {\n    const task = tasksWithoutDate[0];\n    return { ...task, dueAt: task.createdAt, noDueDate: true };\n  }\n\n  const sortedTasks = activeTasks.sort(({ dueAt: A }, { dueAt: B }) => A - B);\n\n  if (sortedTasks.length > 0) {\n    return sortedTasks[0];\n  }\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/loanFunctions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/loanFunctions.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  formatLoanWithStructure: () => formatLoanWithStructure,\n  formatLoanWithDocuments: () => formatLoanWithDocuments,\n  formatLoanWithPromotion: () => formatLoanWithPromotion,\n  shouldSendStepNotification: () => shouldSendStepNotification,\n  nextDueTaskReducer: () => nextDueTaskReducer\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet STEPS, TASK_STATUS;\nmodule.link(\"../api/constants\", {\n  STEPS(v) {\n    STEPS = v;\n  },\n\n  TASK_STATUS(v) {\n    TASK_STATUS = v;\n  }\n\n}, 1);\nlet Calculator;\nmodule.link(\"./Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 2);\n\nconst formatLoanWithStructure = ({\n  selectedStructure,\n  structures = [],\n  properties,\n  offers,\n  promotionOptions,\n  borrowers = []\n}) => {\n  if (structures.length === 0) {\n    return undefined;\n  }\n\n  let structure = {};\n\n  if (selectedStructure) {\n    const foundStructure = structures.find(({\n      id\n    }) => id === selectedStructure);\n\n    if (foundStructure) {\n      structure = foundStructure;\n\n      if (structure.propertyId) {\n        const property = properties.find(({\n          _id\n        }) => _id === structure.propertyId);\n        structure = (0, _objectSpread2.default)({}, structure, {\n          property\n        });\n      }\n\n      if (structure.promotionOptionId) {\n        const promotionOption = promotionOptions.find(({\n          _id\n        }) => _id === structure.promotionOptionId);\n        structure = (0, _objectSpread2.default)({}, structure, {\n          property: Calculator.formatPromotionOptionIntoProperty(promotionOption)\n        });\n      }\n\n      if (structure.offerId) {\n        const offer = offers.find(({\n          _id\n        }) => _id === structure.offerId);\n        structure = (0, _objectSpread2.default)({}, structure, {\n          offer\n        });\n      }\n\n      if (structure.mortgageNoteIds) {\n        const borrowerMortgageNotes = borrowers.reduce((arr, {\n          mortgageNotes: notes = []\n        }) => [...arr, ...notes], []);\n        const mortgageNotes = structure.mortgageNoteIds.map(id => borrowerMortgageNotes.find(({\n          _id\n        }) => _id === id));\n        structure = (0, _objectSpread2.default)({}, structure, {\n          mortgageNotes\n        });\n      }\n    } else {\n      structure = {};\n    }\n\n    return structure;\n  }\n\n  return structure;\n};\n\nconst formatLoanWithDocuments = loan => {\n  if (!loan || !loan.structure) {\n    return loan;\n  }\n\n  const {\n    structure,\n    properties = []\n  } = loan;\n  const {\n    property,\n    propertyId\n  } = structure;\n  const structureProperty = properties.find(({\n    _id\n  }) => _id === propertyId);\n  const propertyDocuments = structureProperty && structureProperty.documents;\n  return (0, _objectSpread2.default)({}, loan, {\n    structure: (0, _objectSpread2.default)({}, structure, {\n      property: property && (0, _objectSpread2.default)({}, property, {\n        documents: propertyDocuments\n      })\n    })\n  });\n};\n\nconst formatLoanWithPromotion = loan => {\n  if (loan.structure.promotionOptionId) {\n    const property = Calculator.selectProperty({\n      loan,\n      // Do this to make sure we're getting the promotionOption and not the\n      // fake property created from it\n      structureId: loan.structure.id\n    });\n    return (0, _objectSpread2.default)({}, loan, {\n      structure: (0, _objectSpread2.default)({}, loan.structure, {\n        property\n      })\n    });\n  }\n\n  return loan;\n};\n\nconst shouldSendStepNotification = (prevStep, nextStep) => (prevStep === STEPS.SOLVENCY || prevStep === STEPS.REQUEST) && nextStep === STEPS.OFFERS;\n\nconst nextDueTaskReducer = ({\n  tasksCache: tasks = []\n}) => {\n  const activeTasks = tasks.filter(({\n    status: taskStatus,\n    isPrivate = false,\n    assigneeLink: {\n      _id: assigneeId\n    } = {}\n  }) => {\n    if (taskStatus !== TASK_STATUS.ACTIVE) {\n      return false;\n    }\n\n    if (isPrivate && assigneeId) {\n      return assigneeId === Meteor.userId();\n    }\n\n    return true;\n  });\n  const tasksWithoutDate = activeTasks.filter(({\n    dueAt\n  }) => !dueAt).sort(({\n    createdAt: A\n  }, {\n    createdAt: B\n  }) => A - B);\n\n  if (tasksWithoutDate.length > 0) {\n    const task = tasksWithoutDate[0];\n    return (0, _objectSpread2.default)({}, task, {\n      dueAt: task.createdAt,\n      noDueDate: true\n    });\n  }\n\n  const sortedTasks = activeTasks.sort(({\n    dueAt: A\n  }, {\n    dueAt: B\n  }) => A - B);\n\n  if (sortedTasks.length > 0) {\n    return sortedTasks[0];\n  }\n};","map":{"version":3,"sources":["imports/core/utils/loanFunctions.js"],"names":["Meteor","formatLoanWithStructure","structures","borrowers","structure","foundStructure","id","property","properties","_id","promotionOption","promotionOptions","Calculator","offer","offers","borrowerMortgageNotes","mortgageNotes","notes","formatLoanWithDocuments","loan","propertyId","structureProperty","propertyDocuments","documents","formatLoanWithPromotion","structureId","shouldSendStepNotification","prevStep","STEPS","nextStep","nextDueTaskReducer","tasksCache","tasks","activeTasks","status","isPrivate","assigneeLink","assigneeId","taskStatus","TASK_STATUS","tasksWithoutDate","dueAt","createdAt","A","B","task","noDueDate","sortedTasks"],"mappings":";;;;AAAA,MAAA,CAAA,MAAA,CAASA;AAAT,EAAA,uBAAA,EAAA,MAAA,uBAASA;AAAT,EAAA,uBAAA,EAAA,MAAA,uBAASA;AAAT,EAAA,uBAAA,EAAA,MAAA,uBAASA;AAAT,EAAA,0BAAA,EAAA,MAAA,0BAASA;AAAT,EAAA,kBAAA,EAAA,MAAA;AAASA,CAAT;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA,EAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,UAAA;AAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAIO,MAAMC,uBAAuB,GAAG,CAAC;AAAA,EAAA,iBAAA;AAEtCC,EAAAA,UAAU,GAF4B,EAAA;AAAA,EAAA,UAAA;AAAA,EAAA,MAAA;AAAA,EAAA,gBAAA;AAMtCC,EAAAA,SAAS,GAAG;AAN0B,CAAD,KAOjC;AACJ,MAAID,UAAU,CAAVA,MAAAA,KAAJ,CAAA,EAA6B;AAC3B,WAAA,SAAA;AACD;;AAED,MAAIE,SAAS,GAAb,EAAA;;AAEA,MAAA,iBAAA,EAAuB;AACrB,UAAMC,cAAc,GAAGH,UAAU,CAAVA,IAAAA,CAAgB,CAAC;AAAEI,MAAAA;AAAF,KAAD,KAAYA,EAAE,KAArD,iBAAuBJ,CAAvB;;AAEA,QAAA,cAAA,EAAoB;AAClBE,MAAAA,SAAS,GAATA,cAAAA;;AAEA,UAAIA,SAAS,CAAb,UAAA,EAA0B;AACxB,cAAMG,QAAQ,GAAGC,UAAU,CAAVA,IAAAA,CAAgB,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAaA,GAAG,KAAKL,SAAS,CAA/D,UAAiBI,CAAjB;AACAJ,QAAAA,SAAS,mCAAG,SAAH;AAAmBG,UAAAA;AAAnB,UAATH;AACD;;AAED,UAAIA,SAAS,CAAb,iBAAA,EAAiC;AAC/B,cAAMM,eAAe,GAAGC,gBAAgB,CAAhBA,IAAAA,CAAsB,CAAC;AAAEF,UAAAA;AAAF,SAAD,KAAaA,GAAG,KAAKL,SAAS,CAA5E,iBAAwBO,CAAxB;AACAP,QAAAA,SAAS,mCAAG,SAAH;AAEPG,UAAAA,QAAQ,EAAEK,UAAU,CAAVA,iCAAAA,CAAAA,eAAAA;AAFH,UAATR;AAID;;AAED,UAAIA,SAAS,CAAb,OAAA,EAAuB;AACrB,cAAMS,KAAK,GAAGC,MAAM,CAANA,IAAAA,CAAY,CAAC;AAAEL,UAAAA;AAAF,SAAD,KAAaA,GAAG,KAAKL,SAAS,CAAxD,OAAcU,CAAd;AACAV,QAAAA,SAAS,mCAAG,SAAH;AAAmBS,UAAAA;AAAnB,UAATT;AACD;;AAED,UAAIA,SAAS,CAAb,eAAA,EAA+B;AAC7B,cAAMW,qBAAqB,GAAG,SAAS,CAAT,MAAA,CAC5B,CAAA,GAAA,EAAM;AAAEC,UAAAA,aAAa,EAAEC,KAAK,GAAG;AAAzB,SAAN,KAAwC,CAAC,GAAD,GAAA,EAAS,GADrB,KACY,CADZ,EAA9B,EAA8B,CAA9B;AAIA,cAAMD,aAAa,GAAG,SAAS,CAAT,eAAA,CAAA,GAAA,CAA8BV,EAAE,IACpD,qBAAqB,CAArB,IAAA,CAA2B,CAAC;AAAEG,UAAAA;AAAF,SAAD,KAAaA,GAAG,KAD7C,EACE,CADoB,CAAtB;AAGAL,QAAAA,SAAS,mCAAG,SAAH;AAAmBY,UAAAA;AAAnB,UAATZ;AACD;AA9BH,KAAA,MA+BO;AACLA,MAAAA,SAAS,GAATA,EAAAA;AACD;;AAED,WAAA,SAAA;AACD;;AAED,SAAA,SAAA;AAvDK,CAAA;;AA0DA,MAAMc,uBAAuB,GAAIC,IAAD,IAAU;AAC/C,MAAI,CAAA,IAAA,IAAS,CAACA,IAAI,CAAlB,SAAA,EAA8B;AAC5B,WAAA,IAAA;AACD;;AAED,QAAM;AAAA,IAAA,SAAA;AAAaX,IAAAA,UAAU,GAAG;AAA1B,MAAN,IAAA;AACA,QAAM;AAAA,IAAA,QAAA;AAAYY,IAAAA;AAAZ,MAAN,SAAA;AACA,QAAMC,iBAAiB,GAAG,UAAU,CAAV,IAAA,CAAgB,CAAC;AAAEZ,IAAAA;AAAF,GAAD,KAAaA,GAAG,KAA1D,UAA0B,CAA1B;AACA,QAAMa,iBAAiB,GAAGD,iBAAiB,IAAIA,iBAAiB,CAAhE,SAAA;AAEA,yCAAO,IAAP;AAEEjB,IAAAA,SAAS,kCAAE,SAAF;AAEPG,MAAAA,QAAQ,EAAEA,QAAQ,oCAAI,QAAJ;AAEhBgB,QAAAA,SAAS,EAAED;AAFK;AAFX;AAFX;AAVK,CAAA;;AAsBA,MAAME,uBAAuB,GAAIL,IAAD,IAAU;AAC/C,MAAIA,IAAI,CAAJA,SAAAA,CAAJ,iBAAA,EAAsC;AACpC,UAAMZ,QAAQ,GAAG,UAAU,CAAV,cAAA,CAA0B;AAAA,MAAA,IAAA;AAEzC;AACA;AACAkB,MAAAA,WAAW,EAAEN,IAAI,CAAJA,SAAAA,CAAeb;AAJa,KAA1B,CAAjB;AAMA,2CAAO,IAAP;AAAkBF,MAAAA,SAAS,kCAAOe,IAAI,CAAT,SAAF;AAAuBZ,QAAAA;AAAvB;AAA3B;AACD;;AAED,SAAA,IAAA;AAXK,CAAA;;AAcA,MAAMmB,0BAA0B,GAAG,CAAA,QAAA,EAAA,QAAA,KACxC,CAACC,QAAQ,KAAKC,KAAK,CAAlBD,QAAAA,IAA+BA,QAAQ,KAAKC,KAAK,CAAlD,OAAA,KACGC,QAAQ,KAAKD,KAAK,CAFhB,MAAA;;AAIA,MAAME,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,UAAU,EAAEC,KAAK,GAAG;AAAtB,CAAD,KAAgC;AAChE,QAAMC,WAAW,GAAG,KAAK,CAAL,MAAA,CAAa,CAAC;AAChCC,IAAAA,MAAM,EAD0B,UAAA;AAEhCC,IAAAA,SAAS,GAFuB,KAAA;AAGhCC,IAAAA,YAAY,EAAE;AAAE3B,MAAAA,GAAG,EAAE4B;AAAP,QAAsB;AAHJ,GAAD,KAI3B;AACJ,QAAIC,UAAU,KAAKC,WAAW,CAA9B,MAAA,EAAuC;AACrC,aAAA,KAAA;AACD;;AAED,QAAIJ,SAAS,IAAb,UAAA,EAA6B;AAC3B,aAAOE,UAAU,KAAKrC,MAAM,CAA5B,MAAsBA,EAAtB;AACD;;AAED,WAAA,IAAA;AAbF,GAAoB,CAApB;AAeA,QAAMwC,gBAAgB,GAAG,WAAW,CAAX,MAAA,CACf,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAe,CADA,KAAA,EAAA,IAAA,CAEjB,CAAC;AAAEC,IAAAA,SAAS,EAAEC;AAAb,GAAD,EAAmB;AAAED,IAAAA,SAAS,EAAEE;AAAb,GAAnB,KAAwCD,CAAC,GAFjD,CAAyB,CAAzB;;AAIA,MAAIH,gBAAgB,CAAhBA,MAAAA,GAAJ,CAAA,EAAiC;AAC/B,UAAMK,IAAI,GAAGL,gBAAgB,CAA7B,CAA6B,CAA7B;AACA,2CAAO,IAAP;AAAkBC,MAAAA,KAAK,EAAEI,IAAI,CAAtB,SAAP;AAAyCC,MAAAA,SAAS,EAAE;AAApD;AACD;;AAED,QAAMC,WAAW,GAAG,WAAW,CAAX,IAAA,CAAiB,CAAC;AAAEN,IAAAA,KAAK,EAAEE;AAAT,GAAD,EAAe;AAAEF,IAAAA,KAAK,EAAEG;AAAT,GAAf,KAAgCD,CAAC,GAAtE,CAAoB,CAApB;;AAEA,MAAII,WAAW,CAAXA,MAAAA,GAAJ,CAAA,EAA4B;AAC1B,WAAOA,WAAW,CAAlB,CAAkB,CAAlB;AACD;AA7BI,CAAA","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { STEPS, TASK_STATUS } from '../api/constants';\nimport Calculator from './Calculator';\n\nexport const formatLoanWithStructure = ({\n  selectedStructure,\n  structures = [],\n  properties,\n  offers,\n  promotionOptions,\n  borrowers = [],\n}) => {\n  if (structures.length === 0) {\n    return undefined;\n  }\n\n  let structure = {};\n\n  if (selectedStructure) {\n    const foundStructure = structures.find(({ id }) => id === selectedStructure);\n\n    if (foundStructure) {\n      structure = foundStructure;\n\n      if (structure.propertyId) {\n        const property = properties.find(({ _id }) => _id === structure.propertyId);\n        structure = { ...structure, property };\n      }\n\n      if (structure.promotionOptionId) {\n        const promotionOption = promotionOptions.find(({ _id }) => _id === structure.promotionOptionId);\n        structure = {\n          ...structure,\n          property: Calculator.formatPromotionOptionIntoProperty(promotionOption),\n        };\n      }\n\n      if (structure.offerId) {\n        const offer = offers.find(({ _id }) => _id === structure.offerId);\n        structure = { ...structure, offer };\n      }\n\n      if (structure.mortgageNoteIds) {\n        const borrowerMortgageNotes = borrowers.reduce(\n          (arr, { mortgageNotes: notes = [] }) => [...arr, ...notes],\n          [],\n        );\n        const mortgageNotes = structure.mortgageNoteIds.map(id =>\n          borrowerMortgageNotes.find(({ _id }) => _id === id));\n\n        structure = { ...structure, mortgageNotes };\n      }\n    } else {\n      structure = {};\n    }\n\n    return structure;\n  }\n\n  return structure;\n};\n\nexport const formatLoanWithDocuments = (loan) => {\n  if (!loan || !loan.structure) {\n    return loan;\n  }\n\n  const { structure, properties = [] } = loan;\n  const { property, propertyId } = structure;\n  const structureProperty = properties.find(({ _id }) => _id === propertyId);\n  const propertyDocuments = structureProperty && structureProperty.documents;\n\n  return {\n    ...loan,\n    structure: {\n      ...structure,\n      property: property && {\n        ...property,\n        documents: propertyDocuments,\n      },\n    },\n  };\n};\n\nexport const formatLoanWithPromotion = (loan) => {\n  if (loan.structure.promotionOptionId) {\n    const property = Calculator.selectProperty({\n      loan,\n      // Do this to make sure we're getting the promotionOption and not the\n      // fake property created from it\n      structureId: loan.structure.id,\n    });\n    return { ...loan, structure: { ...loan.structure, property } };\n  }\n\n  return loan;\n};\n\nexport const shouldSendStepNotification = (prevStep, nextStep) =>\n  (prevStep === STEPS.SOLVENCY || prevStep === STEPS.REQUEST)\n  && nextStep === STEPS.OFFERS;\n\nexport const nextDueTaskReducer = ({ tasksCache: tasks = [] }) => {\n  const activeTasks = tasks.filter(({\n    status: taskStatus,\n    isPrivate = false,\n    assigneeLink: { _id: assigneeId } = {},\n  }) => {\n    if (taskStatus !== TASK_STATUS.ACTIVE) {\n      return false;\n    }\n\n    if (isPrivate && assigneeId) {\n      return assigneeId === Meteor.userId();\n    }\n\n    return true;\n  });\n  const tasksWithoutDate = activeTasks\n    .filter(({ dueAt }) => !dueAt)\n    .sort(({ createdAt: A }, { createdAt: B }) => A - B);\n\n  if (tasksWithoutDate.length > 0) {\n    const task = tasksWithoutDate[0];\n    return { ...task, dueAt: task.createdAt, noDueDate: true };\n  }\n\n  const sortedTasks = activeTasks.sort(({ dueAt: A }, { dueAt: B }) => A - B);\n\n  if (sortedTasks.length > 0) {\n    return sortedTasks[0];\n  }\n};\n"]},"sourceType":"script","hash":"0f72307ebe2b656911366ef1e8ba3b9da390a8cc"}
