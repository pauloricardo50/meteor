{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/TranchePickerContainer.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/TranchePicker/TranchePickerContainer.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/TranchePickerContainer.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/TranchePicker/TranchePickerContainer.jsx"],"names":["React","withStateHandlers","compose","withProps","INTEREST_RATES","T","TranchePickerContainer","initialTranches","tranches","addTranche","value","type","removeTranche","typeToRemove","filter","setValue","reduce","acc","tranche","setType","oldType","newType","types","Object","values","options","map","id","label"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,OAA5B,EAAqCC,SAArC,QAAsD,WAAtD;AACA,SAASC,cAAT;AACA,OAAOC,CAAP;AAEA,MAAMC,sBAAsB,GAAGJ,OAAO,CACpCD,iBAAiB,CACf,CAAC;AAAEM,EAAAA,eAAe,GAAG;AAApB,CAAD,MAA+B;AAAEC,EAAAA,QAAQ,EAAED;AAAZ,CAA/B,CADe,EAEf;AACEE,EAAAA,UAAU,EAAE,CAAC;AAAED,IAAAA;AAAF,GAAD,KAAkB,OAAO;AACnCA,IAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAc;AAAEE,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,IAAI,EAAE;AAAlB,KAAd;AADyB,GAAP,CADhC;AAIEC,EAAAA,aAAa,EAAE,CAAC;AAAEJ,IAAAA;AAAF,GAAD,KAAkBK,YAAY,KAAK;AAChDL,IAAAA,QAAQ,EAAEA,QAAQ,CAACM,MAAT,CAAgB,CAAC;AAAEH,MAAAA;AAAF,KAAD,KAAcA,IAAI,KAAKE,YAAvC;AADsC,GAAL,CAJ/C;AAOEE,EAAAA,QAAQ,EAAE,CAAC;AAAEP,IAAAA;AAAF,GAAD,KAAkB,CAACG,IAAD,EAAOD,KAAP,MAAkB;AAC5CF,IAAAA,QAAQ,EAAEA,QAAQ,CAACQ,MAAT,CACR,CAACC,GAAD,EAAMC,OAAN,KACGA,OAAO,CAACP,IAAR,KAAiBA,IAAjB,GACG,CAAC,GAAGM,GAAJ,EAAS,EAAE,GAAGC,OAAL;AAAcR,MAAAA;AAAd,KAAT,CADH,GAEG,CAAC,GAAGO,GAAJ,EAASC,OAAT,CAJE,EAKR,EALQ;AADkC,GAAlB,CAP9B;AAgBEC,EAAAA,OAAO,EAAE,CAAC;AAAEX,IAAAA;AAAF,GAAD,KAAkB,CAACY,OAAD,EAAUC,OAAV,MAAuB;AAChDb,IAAAA,QAAQ,EAAEA,QAAQ,CAACQ,MAAT,CACR,CAACC,GAAD,EAAMC,OAAN,KACGA,OAAO,CAACP,IAAR,KAAiBS,OAAjB,GACG,CAAC,GAAGH,GAAJ,EAAS,EAAE,GAAGC,OAAL;AAAcP,MAAAA,IAAI,EAAEU;AAApB,KAAT,CADH,GAEG,CAAC,GAAGJ,GAAJ,EAASC,OAAT,CAJE,EAKR,EALQ;AADsC,GAAvB;AAhB7B,CAFe,CADmB,EA8BpCf,SAAS,CAAC,CAAC;AAAEmB,EAAAA,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcpB,cAAd;AAAV,CAAD,MAAgD;AACxDqB,EAAAA,OAAO,EAAEH,KAAK,CAACI,GAAN,CAAUf,IAAI,KAAK;AAC1BgB,IAAAA,EAAE,EAAEhB,IADsB;AAE1BiB,IAAAA,KAAK,EAAE,CAAC,CAAD,CAAG,GAAG,CAAE,kBAAiBjB,IAAK,EAAxB,CAAN;AAFmB,GAAL,CAAd;AAD+C,CAAhD,CAAD,CA9B2B,CAAtC;AAsCA,eAAeL,sBAAf","sourcesContent":["import React from 'react';\nimport { withStateHandlers, compose, withProps } from 'recompose';\nimport { INTEREST_RATES } from '../../api/constants';\nimport T from '../Translation';\n\nconst TranchePickerContainer = compose(\n  withStateHandlers(\n    ({ initialTranches = [] }) => ({ tranches: initialTranches }),\n    {\n      addTranche: ({ tranches }) => () => ({\n        tranches: [...tranches, { value: 0, type: '' }],\n      }),\n      removeTranche: ({ tranches }) => typeToRemove => ({\n        tranches: tranches.filter(({ type }) => type !== typeToRemove),\n      }),\n      setValue: ({ tranches }) => (type, value) => ({\n        tranches: tranches.reduce(\n          (acc, tranche) =>\n            (tranche.type === type\n              ? [...acc, { ...tranche, value }]\n              : [...acc, tranche]),\n          [],\n        ),\n      }),\n      setType: ({ tranches }) => (oldType, newType) => ({\n        tranches: tranches.reduce(\n          (acc, tranche) =>\n            (tranche.type === oldType\n              ? [...acc, { ...tranche, type: newType }]\n              : [...acc, tranche]),\n          [],\n        ),\n      }),\n    },\n  ),\n  withProps(({ types = Object.values(INTEREST_RATES) }) => ({\n    options: types.map(type => ({\n      id: type,\n      label: <T id={`InterestsTable.${type}`} />,\n    })),\n  })),\n);\n\nexport default TranchePickerContainer;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/TranchePicker/TranchePickerContainer.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/TranchePicker/TranchePickerContainer.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet withStateHandlers, compose, withProps;\nmodule.link(\"recompose\", {\n  withStateHandlers(v) {\n    withStateHandlers = v;\n  },\n\n  compose(v) {\n    compose = v;\n  },\n\n  withProps(v) {\n    withProps = v;\n  }\n\n}, 1);\nlet INTEREST_RATES;\nmodule.link(\"../../api/constants\", {\n  INTEREST_RATES(v) {\n    INTEREST_RATES = v;\n  }\n\n}, 2);\nlet T;\nmodule.link(\"../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 3);\nconst TranchePickerContainer = compose(withStateHandlers((_ref) => {\n  let {\n    initialTranches = []\n  } = _ref;\n  return {\n    tranches: initialTranches\n  };\n}, {\n  addTranche: (_ref2) => {\n    let {\n      tranches\n    } = _ref2;\n    return () => ({\n      tranches: [...tranches, {\n        value: 0,\n        type: ''\n      }]\n    });\n  },\n  removeTranche: (_ref3) => {\n    let {\n      tranches\n    } = _ref3;\n    return typeToRemove => ({\n      tranches: tranches.filter((_ref4) => {\n        let {\n          type\n        } = _ref4;\n        return type !== typeToRemove;\n      })\n    });\n  },\n  setValue: (_ref5) => {\n    let {\n      tranches\n    } = _ref5;\n    return (type, value) => ({\n      tranches: tranches.reduce((acc, tranche) => tranche.type === type ? [...acc, (0, _objectSpread2.default)({}, tranche, {\n        value\n      })] : [...acc, tranche], [])\n    });\n  },\n  setType: (_ref6) => {\n    let {\n      tranches\n    } = _ref6;\n    return (oldType, newType) => ({\n      tranches: tranches.reduce((acc, tranche) => tranche.type === oldType ? [...acc, (0, _objectSpread2.default)({}, tranche, {\n        type: newType\n      })] : [...acc, tranche], [])\n    });\n  }\n}), withProps((_ref7) => {\n  let {\n    types = Object.values(INTEREST_RATES)\n  } = _ref7;\n  return {\n    options: types.map(type => ({\n      id: type,\n      label: React.createElement(T, {\n        id: \"InterestsTable.\".concat(type)\n      })\n    }))\n  };\n}));\nmodule.exportDefault(TranchePickerContainer);","map":{"version":3,"sources":["imports/core/components/TranchePicker/TranchePickerContainer.jsx"],"names":["React","TranchePickerContainer","compose","withStateHandlers","initialTranches","tranches","addTranche","value","type","removeTranche","typeToRemove","setValue","setType","newType","withProps","types","Object","options","id","label"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStateHandlers, compose, withProps } from 'recompose';\nimport { INTEREST_RATES } from '../../api/constants';\nimport T from '../Translation';\n\nconst TranchePickerContainer = compose(\n  withStateHandlers(\n    ({ initialTranches = [] }) => ({ tranches: initialTranches }),\n    {\n      addTranche: ({ tranches }) => () => ({\n        tranches: [...tranches, { value: 0, type: '' }],\n      }),\n      removeTranche: ({ tranches }) => typeToRemove => ({\n        tranches: tranches.filter(({ type }) => type !== typeToRemove),\n      }),\n      setValue: ({ tranches }) => (type, value) => ({\n        tranches: tranches.reduce(\n          (acc, tranche) =>\n            (tranche.type === type\n              ? [...acc, { ...tranche, value }]\n              : [...acc, tranche]),\n          [],\n        ),\n      }),\n      setType: ({ tranches }) => (oldType, newType) => ({\n        tranches: tranches.reduce(\n          (acc, tranche) =>\n            (tranche.type === oldType\n              ? [...acc, { ...tranche, type: newType }]\n              : [...acc, tranche]),\n          [],\n        ),\n      }),\n    },\n  ),\n  withProps(({ types = Object.values(INTEREST_RATES) }) => ({\n    options: types.map(type => ({\n      id: type,\n      label: <T id={`InterestsTable.${type}`} />,\n    })),\n  })),\n);\n\nexport default TranchePickerContainer;\n"]},"sourceType":"script","hash":"6633ca37c6083d972dd0862ed8d1ba5001f6c6d9"}
