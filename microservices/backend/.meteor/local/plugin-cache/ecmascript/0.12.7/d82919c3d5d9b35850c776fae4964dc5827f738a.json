{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/charts/Chart.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/charts/Chart.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/charts/Chart.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/charts/Chart.jsx"],"names":["React","PureComponent","PropTypes","ReactHighcharts","initialazeHighcharts","Highcharts","setOptions","lang","months","split","shortMonths","weekdays","shortWeekdays","wrap","Chart","prototype","proceed","options","callback","chart","forExport","series","forEach","serie","visible","showInLegend","call","constructor","props","data","getChart","setData","update","HighchartsExporting","HighchartsMore","HighchartsExportData","componentWillReceiveProps","nextData","prevData","length","some","dataPoint","index","value","componentWillUnmount","render","config","c","propTypes","object","isRequired","array"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactHighcharts from 'react-highcharts';\n\nconst initialazeHighcharts = () => {\n  ReactHighcharts.Highcharts.setOptions({\n    lang: {\n      months: 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n      shortMonths: 'Janv._Févr._Mars_Avr._Mai_Juin_Juil._Août_Sept._Oct._Nov._Déc.'.split('_'),\n      weekdays: 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n      shortWeekdays: 'Dim._Lun._Mar._Mer._Jeu._Ven._Sam.'.split('_'),\n    },\n  });\n\n  ReactHighcharts.Highcharts.wrap(\n    ReactHighcharts.Highcharts.Chart.prototype,\n    'init',\n    function (proceed, options, callback) {\n      if (options.chart && options.chart.forExport && options.series) {\n        options.series.forEach((serie) => {\n          if (serie.visible === false) {\n            serie.showInLegend = false;\n          }\n        });\n      }\n\n      return proceed.call(this, options, callback);\n    },\n  );\n};\n\nexport default class Chart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.chart = null;\n    const {\n      HighchartsExporting,\n      HighchartsMore,\n      HighchartsExportData,\n    } = this.props;\n\n    if (HighchartsExporting) {\n      HighchartsExporting(ReactHighcharts.Highcharts);\n    }\n    if (HighchartsMore) {\n      HighchartsMore(ReactHighcharts.Highcharts);\n    }\n    if (HighchartsExportData) {\n      HighchartsExportData(ReactHighcharts.Highcharts);\n    }\n\n    initialazeHighcharts();\n  }\n\n  componentWillReceiveProps({ data: nextData }) {\n    const { data: prevData } = this.props;\n    // If previous data[i].value is different from next data, update chart\n\n    if (\n      prevData.length !== nextData.length\n      || nextData.some((dataPoint, index) => dataPoint.value !== prevData[index].value)\n    ) {\n      this.update(nextData);\n    }\n  }\n\n  update = (data) => {\n    if (this.chart) {\n      // FIXME: This should animate the chart somehow\n      this.chart.getChart().series[0].setData(data);\n      this.chart.getChart().update({});\n    }\n  };\n\n  componentWillUnmount() {\n    this.chart = null;\n  }\n\n  render() {\n    const { config } = this.props;\n\n    return (\n      <ReactHighcharts\n        config={config}\n        ref={(c) => {\n          this.chart = c;\n        }}\n      />\n    );\n  }\n}\n\nChart.propTypes = {\n  config: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n};\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/charts/Chart.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/charts/Chart.jsx"}},"code":"module.export({\n  default: () => Chart\n});\nlet React, PureComponent;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  PureComponent(v) {\n    PureComponent = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet ReactHighcharts;\nmodule.link(\"react-highcharts\", {\n  default(v) {\n    ReactHighcharts = v;\n  }\n\n}, 2);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst initialazeHighcharts = () => {\n  ReactHighcharts.Highcharts.setOptions({\n    lang: {\n      months: 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n      shortMonths: 'Janv._Févr._Mars_Avr._Mai_Juin_Juil._Août_Sept._Oct._Nov._Déc.'.split('_'),\n      weekdays: 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n      shortWeekdays: 'Dim._Lun._Mar._Mer._Jeu._Ven._Sam.'.split('_')\n    }\n  });\n  ReactHighcharts.Highcharts.wrap(ReactHighcharts.Highcharts.Chart.prototype, 'init', function (proceed, options, callback) {\n    if (options.chart && options.chart.forExport && options.series) {\n      options.series.forEach(serie => {\n        if (serie.visible === false) {\n          serie.showInLegend = false;\n        }\n      });\n    }\n\n    return proceed.call(this, options, callback);\n  });\n};\n\nclass Chart extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"update\", data => {\n      if (this.chart) {\n        // FIXME: This should animate the chart somehow\n        this.chart.getChart().series[0].setData(data);\n        this.chart.getChart().update({});\n      }\n    });\n\n    this.chart = null;\n    const {\n      HighchartsExporting,\n      HighchartsMore,\n      HighchartsExportData\n    } = this.props;\n\n    if (HighchartsExporting) {\n      HighchartsExporting(ReactHighcharts.Highcharts);\n    }\n\n    if (HighchartsMore) {\n      HighchartsMore(ReactHighcharts.Highcharts);\n    }\n\n    if (HighchartsExportData) {\n      HighchartsExportData(ReactHighcharts.Highcharts);\n    }\n\n    initialazeHighcharts();\n  }\n\n  componentWillReceiveProps(_ref) {\n    let {\n      data: nextData\n    } = _ref;\n    const {\n      data: prevData\n    } = this.props; // If previous data[i].value is different from next data, update chart\n\n    if (prevData.length !== nextData.length || nextData.some((dataPoint, index) => dataPoint.value !== prevData[index].value)) {\n      this.update(nextData);\n    }\n  }\n\n  componentWillUnmount() {\n    this.chart = null;\n  }\n\n  render() {\n    const {\n      config\n    } = this.props;\n    return React.createElement(ReactHighcharts, {\n      config: config,\n      ref: c => {\n        this.chart = c;\n      }\n    });\n  }\n\n}\n\nChart.propTypes = {\n  config: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["imports/core/components/charts/Chart.jsx"],"names":["initialazeHighcharts","ReactHighcharts","lang","months","shortMonths","weekdays","shortWeekdays","options","serie","proceed","constructor","HighchartsExportData","HighchartsExporting","HighchartsMore","componentWillReceiveProps","data","nextData","prevData","dataPoint","componentWillUnmount","render","config","c","Chart","PropTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactHighcharts from 'react-highcharts';\n\nconst initialazeHighcharts = () => {\n  ReactHighcharts.Highcharts.setOptions({\n    lang: {\n      months: 'Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre'.split('_'),\n      shortMonths: 'Janv._Févr._Mars_Avr._Mai_Juin_Juil._Août_Sept._Oct._Nov._Déc.'.split('_'),\n      weekdays: 'Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi'.split('_'),\n      shortWeekdays: 'Dim._Lun._Mar._Mer._Jeu._Ven._Sam.'.split('_'),\n    },\n  });\n\n  ReactHighcharts.Highcharts.wrap(\n    ReactHighcharts.Highcharts.Chart.prototype,\n    'init',\n    function (proceed, options, callback) {\n      if (options.chart && options.chart.forExport && options.series) {\n        options.series.forEach((serie) => {\n          if (serie.visible === false) {\n            serie.showInLegend = false;\n          }\n        });\n      }\n\n      return proceed.call(this, options, callback);\n    },\n  );\n};\n\nexport default class Chart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.chart = null;\n    const {\n      HighchartsExporting,\n      HighchartsMore,\n      HighchartsExportData,\n    } = this.props;\n\n    if (HighchartsExporting) {\n      HighchartsExporting(ReactHighcharts.Highcharts);\n    }\n    if (HighchartsMore) {\n      HighchartsMore(ReactHighcharts.Highcharts);\n    }\n    if (HighchartsExportData) {\n      HighchartsExportData(ReactHighcharts.Highcharts);\n    }\n\n    initialazeHighcharts();\n  }\n\n  componentWillReceiveProps({ data: nextData }) {\n    const { data: prevData } = this.props;\n    // If previous data[i].value is different from next data, update chart\n\n    if (\n      prevData.length !== nextData.length\n      || nextData.some((dataPoint, index) => dataPoint.value !== prevData[index].value)\n    ) {\n      this.update(nextData);\n    }\n  }\n\n  update = (data) => {\n    if (this.chart) {\n      // FIXME: This should animate the chart somehow\n      this.chart.getChart().series[0].setData(data);\n      this.chart.getChart().update({});\n    }\n  };\n\n  componentWillUnmount() {\n    this.chart = null;\n  }\n\n  render() {\n    const { config } = this.props;\n\n    return (\n      <ReactHighcharts\n        config={config}\n        ref={(c) => {\n          this.chart = c;\n        }}\n      />\n    );\n  }\n}\n\nChart.propTypes = {\n  config: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n};\n"]},"sourceType":"script","hash":"d82919c3d5d9b35850c776fae4964dc5827f738a"}
