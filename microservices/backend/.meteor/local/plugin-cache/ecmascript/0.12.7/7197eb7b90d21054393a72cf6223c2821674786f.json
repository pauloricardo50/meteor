{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/organisationFixtures.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/fixtures/organisationFixtures.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/organisationFixtures.js","inputSourceMap":{"version":3,"sources":["imports/core/fixtures/organisationFixtures.js"],"names":["faker","random","OrganisationService","ContactService","ORGANISATION_TYPES","ORGANISATION_FEATURES","ORGANISATION_TAGS","createLenderRules","orgs","name","type","BANK","logo","features","LENDER","tags","CH_RETAIL","INSURANCE","PRIVATE_BANK","createOrganisations","map","org","orgId","insert","includes","contactCount","index","contactId","firstName","lastName","address1","address","streetAddress","zipCode","city","emails","internet","email","phoneNumbers","phone","phoneNumber","changeOrganisations","newOrganisations","_id","metadata","title","jobTitle"],"mappings":"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","sourcesContent":["import faker from 'faker/locale/fr';\nimport random from 'lodash/random';\n\nimport OrganisationService from '../api/organisations/server/OrganisationService';\nimport ContactService from '../api/contacts/server/ContactService';\nimport { ORGANISATION_TYPES, ORGANISATION_FEATURES, ORGANISATION_TAGS } from '../api/constants';\nimport { createLenderRules } from './lenderRulesFixtures';\n\nconst orgs = [\n  {\n    name: 'UBS',\n    type: ORGANISATION_TYPES.BANK,\n    logo: 'https://sos-ch-dk-2.exo.io/fixture-files/ubs-logo.png',\n    features: [ORGANISATION_FEATURES.LENDER],\n    tags: [ORGANISATION_TAGS.CH_RETAIL],\n  },\n  {\n    name: 'Crédit Suisse',\n    type: ORGANISATION_TYPES.BANK,\n    logo: 'https://sos-ch-dk-2.exo.io/fixture-files/cs-logo.png',\n    features: [ORGANISATION_FEATURES.LENDER],\n    tags: [ORGANISATION_TAGS.CH_RETAIL],\n  },\n  {\n    name: 'Allianz',\n    type: ORGANISATION_TYPES.INSURANCE,\n    logo: 'https://sos-ch-dk-2.exo.io/fixture-files/allianz-logo.png',\n    features: [ORGANISATION_FEATURES.LENDER],\n    tags: [ORGANISATION_TAGS.CH_RETAIL],\n  },\n  {\n    name: 'Pictet',\n    type: ORGANISATION_TYPES.PRIVATE_BANK,\n    logo: 'https://sos-ch-dk-2.exo.io/fixture-files/pictet-logo.png',\n    features: [ORGANISATION_FEATURES.LENDER],\n    tags: [ORGANISATION_TAGS.CH_RETAIL],\n  },\n];\n\nexport const createOrganisations = () =>\n  orgs.map((org) => {\n    const orgId = OrganisationService.insert(org);\n\n    if (org.features.includes(ORGANISATION_FEATURES.LENDER)) {\n      createLenderRules(orgId);\n    }\n\n    const contactCount = random(1, 3, false);\n\n    for (let index = 0; index < contactCount; index += 1) {\n      const contactId = ContactService.insert({\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        address1: faker.address.streetAddress(),\n        zipCode: 1201,\n        city: 'Genève',\n        emails: [{ address: faker.internet.email() }],\n        phoneNumbers: [faker.phone.phoneNumber()],\n      });\n\n      ContactService.changeOrganisations({\n        contactId,\n        newOrganisations: [\n          { _id: orgId, metadata: { title: faker.name.jobTitle() } },\n        ],\n      });\n    }\n  });\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/fixtures/organisationFixtures.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/fixtures/organisationFixtures.js"}},"code":"module.export({\n  createOrganisations: () => createOrganisations\n});\nlet faker;\nmodule.link(\"faker/locale/fr\", {\n  default(v) {\n    faker = v;\n  }\n\n}, 0);\nlet random;\nmodule.link(\"lodash/random\", {\n  default(v) {\n    random = v;\n  }\n\n}, 1);\nlet OrganisationService;\nmodule.link(\"../api/organisations/server/OrganisationService\", {\n  default(v) {\n    OrganisationService = v;\n  }\n\n}, 2);\nlet ContactService;\nmodule.link(\"../api/contacts/server/ContactService\", {\n  default(v) {\n    ContactService = v;\n  }\n\n}, 3);\nlet ORGANISATION_TYPES, ORGANISATION_FEATURES, ORGANISATION_TAGS;\nmodule.link(\"../api/constants\", {\n  ORGANISATION_TYPES(v) {\n    ORGANISATION_TYPES = v;\n  },\n\n  ORGANISATION_FEATURES(v) {\n    ORGANISATION_FEATURES = v;\n  },\n\n  ORGANISATION_TAGS(v) {\n    ORGANISATION_TAGS = v;\n  }\n\n}, 4);\nlet createLenderRules;\nmodule.link(\"./lenderRulesFixtures\", {\n  createLenderRules(v) {\n    createLenderRules = v;\n  }\n\n}, 5);\nconst orgs = [{\n  name: 'UBS',\n  type: ORGANISATION_TYPES.BANK,\n  logo: 'https://sos-ch-dk-2.exo.io/fixture-files/ubs-logo.png',\n  features: [ORGANISATION_FEATURES.LENDER],\n  tags: [ORGANISATION_TAGS.CH_RETAIL]\n}, {\n  name: 'Crédit Suisse',\n  type: ORGANISATION_TYPES.BANK,\n  logo: 'https://sos-ch-dk-2.exo.io/fixture-files/cs-logo.png',\n  features: [ORGANISATION_FEATURES.LENDER],\n  tags: [ORGANISATION_TAGS.CH_RETAIL]\n}, {\n  name: 'Allianz',\n  type: ORGANISATION_TYPES.INSURANCE,\n  logo: 'https://sos-ch-dk-2.exo.io/fixture-files/allianz-logo.png',\n  features: [ORGANISATION_FEATURES.LENDER],\n  tags: [ORGANISATION_TAGS.CH_RETAIL]\n}, {\n  name: 'Pictet',\n  type: ORGANISATION_TYPES.PRIVATE_BANK,\n  logo: 'https://sos-ch-dk-2.exo.io/fixture-files/pictet-logo.png',\n  features: [ORGANISATION_FEATURES.LENDER],\n  tags: [ORGANISATION_TAGS.CH_RETAIL]\n}];\n\nconst createOrganisations = () => orgs.map(org => {\n  const orgId = OrganisationService.insert(org);\n\n  if (org.features.includes(ORGANISATION_FEATURES.LENDER)) {\n    createLenderRules(orgId);\n  }\n\n  const contactCount = random(1, 3, false);\n\n  for (let index = 0; index < contactCount; index += 1) {\n    const contactId = ContactService.insert({\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      address1: faker.address.streetAddress(),\n      zipCode: 1201,\n      city: 'Genève',\n      emails: [{\n        address: faker.internet.email()\n      }],\n      phoneNumbers: [faker.phone.phoneNumber()]\n    });\n    ContactService.changeOrganisations({\n      contactId,\n      newOrganisations: [{\n        _id: orgId,\n        metadata: {\n          title: faker.name.jobTitle()\n        }\n      }]\n    });\n  }\n});","map":{"version":3,"sources":["imports/core/fixtures/organisationFixtures.js"],"names":["orgs","name","type","ORGANISATION_TYPES","logo","features","ORGANISATION_FEATURES","tags","ORGANISATION_TAGS","createOrganisations","org","orgId","OrganisationService","createLenderRules","contactCount","random","index","contactId","firstName","faker","lastName","address1","zipCode","city","emails","address","phoneNumbers","ContactService","newOrganisations","_id","metadata","title"],"mappings":"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","sourcesContent":["import faker from 'faker/locale/fr';\nimport random from 'lodash/random';\n\nimport OrganisationService from '../api/organisations/server/OrganisationService';\nimport ContactService from '../api/contacts/server/ContactService';\nimport { ORGANISATION_TYPES, ORGANISATION_FEATURES, ORGANISATION_TAGS } from '../api/constants';\nimport { createLenderRules } from './lenderRulesFixtures';\n\nconst orgs = [\n  {\n    name: 'UBS',\n    type: ORGANISATION_TYPES.BANK,\n    logo: 'https://sos-ch-dk-2.exo.io/fixture-files/ubs-logo.png',\n    features: [ORGANISATION_FEATURES.LENDER],\n    tags: [ORGANISATION_TAGS.CH_RETAIL],\n  },\n  {\n    name: 'Crédit Suisse',\n    type: ORGANISATION_TYPES.BANK,\n    logo: 'https://sos-ch-dk-2.exo.io/fixture-files/cs-logo.png',\n    features: [ORGANISATION_FEATURES.LENDER],\n    tags: [ORGANISATION_TAGS.CH_RETAIL],\n  },\n  {\n    name: 'Allianz',\n    type: ORGANISATION_TYPES.INSURANCE,\n    logo: 'https://sos-ch-dk-2.exo.io/fixture-files/allianz-logo.png',\n    features: [ORGANISATION_FEATURES.LENDER],\n    tags: [ORGANISATION_TAGS.CH_RETAIL],\n  },\n  {\n    name: 'Pictet',\n    type: ORGANISATION_TYPES.PRIVATE_BANK,\n    logo: 'https://sos-ch-dk-2.exo.io/fixture-files/pictet-logo.png',\n    features: [ORGANISATION_FEATURES.LENDER],\n    tags: [ORGANISATION_TAGS.CH_RETAIL],\n  },\n];\n\nexport const createOrganisations = () =>\n  orgs.map((org) => {\n    const orgId = OrganisationService.insert(org);\n\n    if (org.features.includes(ORGANISATION_FEATURES.LENDER)) {\n      createLenderRules(orgId);\n    }\n\n    const contactCount = random(1, 3, false);\n\n    for (let index = 0; index < contactCount; index += 1) {\n      const contactId = ContactService.insert({\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        address1: faker.address.streetAddress(),\n        zipCode: 1201,\n        city: 'Genève',\n        emails: [{ address: faker.internet.email() }],\n        phoneNumbers: [faker.phone.phoneNumber()],\n      });\n\n      ContactService.changeOrganisations({\n        contactId,\n        newOrganisations: [\n          { _id: orgId, metadata: { title: faker.name.jobTitle() } },\n        ],\n      });\n    }\n  });\n"]},"sourceType":"script","hash":"7197eb7b90d21054393a72cf6223c2821674786f"}
