{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/MiddlewareManager/MiddlewareManager.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/core/utils/MiddlewareManager/MiddlewareManager.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/MiddlewareManager/MiddlewareManager.js","inputSourceMap":{"version":3,"sources":["imports/core/utils/MiddlewareManager/MiddlewareManager.js"],"names":["compose","isArray","difference","middlewareManagerHash","CLASS_METHODS_TO_EXCLUDE","MiddlewareType","Array","Function","MiddlewareObjectType","Object","MiddlewareManager","constructor","target","middlewareObjects","instance","find","key","_target","undefined","_methods","_methodMiddlewares","push","useObjectMiddleware","applyToAllMethods","_middlewares","omit","middlewares","arrayify","methods","getAllMethodNames","filter","name","includes","forEach","method","applyToMethod","obj","stop","methodNames","proto","getPrototypeOf","getOwnPropertyNames","hasMethod","desc","getOwnPropertyDescriptor","value","methodName","stringStartsWithUnderscore","middleware","bind","string","test","_objectMiddlewares","objectMiddlewares","prototype","slice","call","arg","middlewareMethods","keys","maybeArray"],"mappings":"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","sourcesContent":["// @flow\nimport { compose } from 'recompose';\nimport isArray from 'lodash/isArray';\nimport difference from 'lodash/difference';\n\nconst middlewareManagerHash = [];\nconst CLASS_METHODS_TO_EXCLUDE = [\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toString',\n  'valueOf',\n  'toLocaleString',\n  '__defineGetter__',\n  '__defineSetter__',\n  '__lookupGetter__',\n  '__lookupSetter__',\n];\n\ntype MiddlewareType = Array<Function> | Function;\ntype MiddlewareObjectType = Array<Object> | Object;\n\n// Careful, methods starting with \"_\" will not be wrapped by middleware,\n// except if you use a middlewareObject\nclass MiddlewareManager {\n  constructor(target: Object, middlewareObjects?: MiddlewareObjectType) {\n    let instance = middlewareManagerHash.find(key => key._target === target);\n    // a target can only has one MiddlewareManager instance\n    if (instance === undefined) {\n      this._target = target;\n      this._methods = {};\n      this._methodMiddlewares = {};\n      middlewareManagerHash.push(this);\n      instance = this;\n    }\n\n    if (middlewareObjects) {\n      instance.useObjectMiddleware(middlewareObjects);\n    }\n\n    return instance;\n  }\n\n  applyToAllMethods(_middlewares: MiddlewareType, omit) {\n    const middlewares = this.arrayify(_middlewares);\n    const methods = this.getAllMethodNames(this._target);\n\n    methods\n      .filter((name) => {\n        if (omit) {\n          return !omit.includes(name);\n        }\n        return true;\n      })\n      .forEach(method => this.applyToMethod(method, middlewares));\n\n    return this;\n  }\n\n  getAllMethodNames(obj: Object = {}, stop: mixed) {\n    const methodNames = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (proto && proto !== stop) {\n      Object.getOwnPropertyNames(proto).forEach((name) => {\n        if (name !== 'constructor') {\n          if (this.hasMethod(proto, name)) {\n            methodNames.push(name);\n          }\n        }\n      });\n      proto = Object.getPrototypeOf(proto);\n    }\n    return difference(methodNames, CLASS_METHODS_TO_EXCLUDE);\n  }\n\n  hasMethod(obj: Object, name: string) {\n    const desc = Object.getOwnPropertyDescriptor(obj, name);\n    return !!desc && typeof desc.value === 'function';\n  }\n\n  applyToMethod(methodName: string, _middlewares: MiddlewareType) {\n    const middlewares = this.arrayify(_middlewares);\n\n    if (\n      typeof methodName === 'string'\n      && !this.stringStartsWithUnderscore(methodName)\n    ) {\n      const method = this._methods[methodName] || this._target[methodName];\n      if (typeof method === 'function') {\n        this._methods[methodName] = method;\n\n        if (\n          this._methodMiddlewares[methodName] === undefined\n          || !isArray(this._methodMiddlewares[methodName])\n        ) {\n          this._methodMiddlewares[methodName] = [];\n        }\n\n        middlewares.forEach(middleware =>\n          typeof middleware === 'function'\n            && this._methodMiddlewares[methodName].push(middleware(this._target)));\n        this._target[methodName] = compose(...this._methodMiddlewares[methodName])(method.bind(this._target));\n      }\n    }\n\n    return this;\n  }\n\n  stringStartsWithUnderscore(string: string) {\n    return /^_+|_+$/g.test(string);\n  }\n\n  useObjectMiddleware(_objectMiddlewares: MiddlewareObjectType) {\n    const objectMiddlewares = this.arrayify(_objectMiddlewares);\n\n    Array.prototype.slice.call(objectMiddlewares).forEach((arg) => {\n      // A middleware object can specify target functions within middlewareMethods (Array).\n      // e.g. obj.middlewareMethods = ['method1', 'method2'];\n      // only method1 and method2 will be the target function.\n      typeof arg === 'object'\n        && (arg.middlewareMethods || Object.keys(arg)).forEach((key) => {\n          typeof arg[key] === 'function'\n            && this.applyToMethod(key, arg[key].bind(arg));\n        });\n    });\n\n    return this;\n  }\n\n  arrayify(maybeArray: mixed | Array): Array<Object | Function> {\n    return isArray(maybeArray) ? maybeArray : [maybeArray];\n  }\n}\n\nexport default MiddlewareManager;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/utils/MiddlewareManager/MiddlewareManager.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/utils/MiddlewareManager/MiddlewareManager.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar compose;\nmodule.link(\"recompose\", {\n  compose: function (v) {\n    compose = v;\n  }\n}, 0);\nvar isArray;\nmodule.link(\"lodash/isArray\", {\n  \"default\": function (v) {\n    isArray = v;\n  }\n}, 1);\nvar difference;\nmodule.link(\"lodash/difference\", {\n  \"default\": function (v) {\n    difference = v;\n  }\n}, 2);\nvar middlewareManagerHash = [];\nvar CLASS_METHODS_TO_EXCLUDE = ['hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toString', 'valueOf', 'toLocaleString', '__defineGetter__', '__defineSetter__', '__lookupGetter__', '__lookupSetter__'];\n\n// Careful, methods starting with \"_\" will not be wrapped by middleware,\n// except if you use a middlewareObject\nvar MiddlewareManager =\n/*#__PURE__*/\nfunction () {\n  function MiddlewareManager(target, middlewareObjects) {\n    var instance = middlewareManagerHash.find(function (key) {\n      return key._target === target;\n    }); // a target can only has one MiddlewareManager instance\n\n    if (instance === undefined) {\n      this._target = target;\n      this._methods = {};\n      this._methodMiddlewares = {};\n      middlewareManagerHash.push(this);\n      instance = this;\n    }\n\n    if (middlewareObjects) {\n      instance.useObjectMiddleware(middlewareObjects);\n    }\n\n    return instance;\n  }\n\n  var _proto = MiddlewareManager.prototype;\n\n  _proto.applyToAllMethods = function () {\n    function applyToAllMethods(_middlewares, omit) {\n      var _this = this;\n\n      var middlewares = this.arrayify(_middlewares);\n      var methods = this.getAllMethodNames(this._target);\n      methods.filter(function (name) {\n        if (omit) {\n          return !omit.includes(name);\n        }\n\n        return true;\n      }).forEach(function (method) {\n        return _this.applyToMethod(method, middlewares);\n      });\n      return this;\n    }\n\n    return applyToAllMethods;\n  }();\n\n  _proto.getAllMethodNames = function () {\n    function getAllMethodNames() {\n      var _this2 = this;\n\n      var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var stop = arguments.length > 1 ? arguments[1] : undefined;\n      var methodNames = [];\n      var proto = Object.getPrototypeOf(obj);\n\n      while (proto && proto !== stop) {\n        Object.getOwnPropertyNames(proto).forEach(function (name) {\n          if (name !== 'constructor') {\n            if (_this2.hasMethod(proto, name)) {\n              methodNames.push(name);\n            }\n          }\n        });\n        proto = Object.getPrototypeOf(proto);\n      }\n\n      return difference(methodNames, CLASS_METHODS_TO_EXCLUDE);\n    }\n\n    return getAllMethodNames;\n  }();\n\n  _proto.hasMethod = function () {\n    function hasMethod(obj, name) {\n      var desc = Object.getOwnPropertyDescriptor(obj, name);\n      return !!desc && typeof desc.value === 'function';\n    }\n\n    return hasMethod;\n  }();\n\n  _proto.applyToMethod = function () {\n    function applyToMethod(methodName, _middlewares) {\n      var _this3 = this;\n\n      var middlewares = this.arrayify(_middlewares);\n\n      if (typeof methodName === 'string' && !this.stringStartsWithUnderscore(methodName)) {\n        var method = this._methods[methodName] || this._target[methodName];\n\n        if (typeof method === 'function') {\n          this._methods[methodName] = method;\n\n          if (this._methodMiddlewares[methodName] === undefined || !isArray(this._methodMiddlewares[methodName])) {\n            this._methodMiddlewares[methodName] = [];\n          }\n\n          middlewares.forEach(function (middleware) {\n            return typeof middleware === 'function' && _this3._methodMiddlewares[methodName].push(middleware(_this3._target));\n          });\n          this._target[methodName] = compose.apply(void 0, (0, _toConsumableArray2.default)(this._methodMiddlewares[methodName]))(method.bind(this._target));\n        }\n      }\n\n      return this;\n    }\n\n    return applyToMethod;\n  }();\n\n  _proto.stringStartsWithUnderscore = function () {\n    function stringStartsWithUnderscore(string) {\n      return /^_+|_+$/g.test(string);\n    }\n\n    return stringStartsWithUnderscore;\n  }();\n\n  _proto.useObjectMiddleware = function () {\n    function useObjectMiddleware(_objectMiddlewares) {\n      var _this4 = this;\n\n      var objectMiddlewares = this.arrayify(_objectMiddlewares);\n      Array.prototype.slice.call(objectMiddlewares).forEach(function (arg) {\n        // A middleware object can specify target functions within middlewareMethods (Array).\n        // e.g. obj.middlewareMethods = ['method1', 'method2'];\n        // only method1 and method2 will be the target function.\n        (0, _typeof2.default)(arg) === 'object' && (arg.middlewareMethods || Object.keys(arg)).forEach(function (key) {\n          typeof arg[key] === 'function' && _this4.applyToMethod(key, arg[key].bind(arg));\n        });\n      });\n      return this;\n    }\n\n    return useObjectMiddleware;\n  }();\n\n  _proto.arrayify = function () {\n    function arrayify(maybeArray) {\n      return isArray(maybeArray) ? maybeArray : [maybeArray];\n    }\n\n    return arrayify;\n  }();\n\n  return MiddlewareManager;\n}();\n\nmodule.exportDefault(MiddlewareManager);","map":{"version":3,"sources":["imports/core/utils/MiddlewareManager/MiddlewareManager.js"],"names":["middlewareManagerHash","CLASS_METHODS_TO_EXCLUDE","constructor","instance","key","applyToAllMethods","middlewares","methods","name","omit","method","getAllMethodNames","obj","methodNames","proto","Object","difference","hasMethod","desc","applyToMethod","isArray","middleware","compose","stringStartsWithUnderscore","useObjectMiddleware","objectMiddlewares","Array","arg","arrayify"],"mappings":"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","sourcesContent":["// @flow\nimport { compose } from 'recompose';\nimport isArray from 'lodash/isArray';\nimport difference from 'lodash/difference';\n\nconst middlewareManagerHash = [];\nconst CLASS_METHODS_TO_EXCLUDE = [\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toString',\n  'valueOf',\n  'toLocaleString',\n  '__defineGetter__',\n  '__defineSetter__',\n  '__lookupGetter__',\n  '__lookupSetter__',\n];\n\ntype MiddlewareType = Array<Function> | Function;\ntype MiddlewareObjectType = Array<Object> | Object;\n\n// Careful, methods starting with \"_\" will not be wrapped by middleware,\n// except if you use a middlewareObject\nclass MiddlewareManager {\n  constructor(target: Object, middlewareObjects?: MiddlewareObjectType) {\n    let instance = middlewareManagerHash.find(key => key._target === target);\n    // a target can only has one MiddlewareManager instance\n    if (instance === undefined) {\n      this._target = target;\n      this._methods = {};\n      this._methodMiddlewares = {};\n      middlewareManagerHash.push(this);\n      instance = this;\n    }\n\n    if (middlewareObjects) {\n      instance.useObjectMiddleware(middlewareObjects);\n    }\n\n    return instance;\n  }\n\n  applyToAllMethods(_middlewares: MiddlewareType, omit) {\n    const middlewares = this.arrayify(_middlewares);\n    const methods = this.getAllMethodNames(this._target);\n\n    methods\n      .filter((name) => {\n        if (omit) {\n          return !omit.includes(name);\n        }\n        return true;\n      })\n      .forEach(method => this.applyToMethod(method, middlewares));\n\n    return this;\n  }\n\n  getAllMethodNames(obj: Object = {}, stop: mixed) {\n    const methodNames = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (proto && proto !== stop) {\n      Object.getOwnPropertyNames(proto).forEach((name) => {\n        if (name !== 'constructor') {\n          if (this.hasMethod(proto, name)) {\n            methodNames.push(name);\n          }\n        }\n      });\n      proto = Object.getPrototypeOf(proto);\n    }\n    return difference(methodNames, CLASS_METHODS_TO_EXCLUDE);\n  }\n\n  hasMethod(obj: Object, name: string) {\n    const desc = Object.getOwnPropertyDescriptor(obj, name);\n    return !!desc && typeof desc.value === 'function';\n  }\n\n  applyToMethod(methodName: string, _middlewares: MiddlewareType) {\n    const middlewares = this.arrayify(_middlewares);\n\n    if (\n      typeof methodName === 'string'\n      && !this.stringStartsWithUnderscore(methodName)\n    ) {\n      const method = this._methods[methodName] || this._target[methodName];\n      if (typeof method === 'function') {\n        this._methods[methodName] = method;\n\n        if (\n          this._methodMiddlewares[methodName] === undefined\n          || !isArray(this._methodMiddlewares[methodName])\n        ) {\n          this._methodMiddlewares[methodName] = [];\n        }\n\n        middlewares.forEach(middleware =>\n          typeof middleware === 'function'\n            && this._methodMiddlewares[methodName].push(middleware(this._target)));\n        this._target[methodName] = compose(...this._methodMiddlewares[methodName])(method.bind(this._target));\n      }\n    }\n\n    return this;\n  }\n\n  stringStartsWithUnderscore(string: string) {\n    return /^_+|_+$/g.test(string);\n  }\n\n  useObjectMiddleware(_objectMiddlewares: MiddlewareObjectType) {\n    const objectMiddlewares = this.arrayify(_objectMiddlewares);\n\n    Array.prototype.slice.call(objectMiddlewares).forEach((arg) => {\n      // A middleware object can specify target functions within middlewareMethods (Array).\n      // e.g. obj.middlewareMethods = ['method1', 'method2'];\n      // only method1 and method2 will be the target function.\n      typeof arg === 'object'\n        && (arg.middlewareMethods || Object.keys(arg)).forEach((key) => {\n          typeof arg[key] === 'function'\n            && this.applyToMethod(key, arg[key].bind(arg));\n        });\n    });\n\n    return this;\n  }\n\n  arrayify(maybeArray: mixed | Array): Array<Object | Function> {\n    return isArray(maybeArray) ? maybeArray : [maybeArray];\n  }\n}\n\nexport default MiddlewareManager;\n"]},"sourceType":"script","hash":"04ce6dbb54267bc6fd2fbbf0f2619b1b954d7b0a"}
