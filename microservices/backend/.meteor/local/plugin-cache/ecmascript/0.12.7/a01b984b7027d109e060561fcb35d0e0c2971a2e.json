{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingResult/test/FinancingResultErrors.spec.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/core/components/Financing/client/FinancingResult/test/FinancingResultErrors.spec.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingResult/test/FinancingResultErrors.spec.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/Financing/client/FinancingResult/test/FinancingResultErrors.spec.jsx"],"names":["React","expect","shallow","T","OWN_FUNDS_TYPES","FinancingResultErrors","FinancingResultChart","OWN_FUNDS_USAGE_TYPES","Calculator","describe","props","property","propertyId","structureId","offer","offerId","structure","borrower","component","beforeEach","_id","value","interest10","wantedLoan","id","ownFunds","propertyWork","loan","properties","structures","offers","borrowers","it","find","to","contain","undefined","type","BANK_FORTUNE","INSURANCE_2","usageType","WITHDRAW","salary","loanTranches","exists","equal"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'core/utils/testHelpers/enzyme';\n\nimport T from 'core/components/Translation';\nimport { OWN_FUNDS_TYPES } from 'core/api/constants';\nimport { FinancingResultErrors } from '../FinancingResultErrors';\nimport FinancingResultChart from '../FinancingResultChart';\nimport { OWN_FUNDS_USAGE_TYPES } from '../../../../../api/constants';\nimport Calculator from '../../../../../utils/Calculator';\n\ndescribe('FinancingResultErrors', () => {\n  let props;\n  let property;\n  let propertyId;\n  let structureId;\n  let offer;\n  let offerId;\n  let structure;\n  let borrower;\n  const component = () => shallow(<FinancingResultErrors {...props} />);\n\n  beforeEach(() => {\n    propertyId = 'propertyId';\n    structureId = 'structureId';\n    offerId = 'offerId';\n    property = { _id: propertyId, value: 100000 };\n    offer = { _id: offerId, interest10: 0.01 };\n    structure = {\n      propertyId,\n      wantedLoan: 80000,\n      id: structureId,\n      ownFunds: [],\n      propertyWork: 0,\n    };\n    borrower = {};\n    props = {\n      loan: {\n        properties: [property],\n        structures: [structure],\n        offers: [offer],\n        borrowers: [borrower],\n      },\n      Calculator,\n      structureId,\n    };\n  });\n\n  it('warns if no mortgage loan exists', () => {\n    structure.wantedLoan = 0;\n    expect(component()\n      .find(T)\n      .props().id).to.contain('noMortgageLoan');\n\n    structure.wantedLoan = undefined;\n    expect(component()\n      .find(T)\n      .props().id).to.contain('noMortgageLoan');\n  });\n\n  it('warns of missing own funds', () => {\n    expect(component()\n      .find(T)\n      .props().id).to.contain('missingOwnFunds');\n  });\n\n  it('warns of missing own funds if the value is NaN', () => {\n    expect(component()\n      .find(T)\n      .props().id).to.contain('missingOwnFunds');\n  });\n\n  it('warns of too much own funds', () => {\n    structure.ownFunds = [{ type: OWN_FUNDS_TYPES.BANK_FORTUNE, value: 50000 }];\n\n    expect(component()\n      .find(T)\n      .props().id).to.contain('tooMuchOwnFunds');\n  });\n\n  it('warns of a high income ratio', () => {\n    structure.ownFunds = [{ type: OWN_FUNDS_TYPES.BANK_FORTUNE, value: 25000 }];\n\n    expect(component()\n      .find(T)\n      .props().id).to.contain('highIncomeRatio');\n  });\n\n  it('warns of missing cash', () => {\n    structure.ownFunds = [\n      { type: OWN_FUNDS_TYPES.BANK_FORTUNE, value: 12000 },\n      {\n        type: OWN_FUNDS_TYPES.INSURANCE_2,\n        value: 12000,\n        usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n      },\n    ];\n    borrower.salary = 100000;\n\n    expect(component()\n      .find(T)\n      .props().id).to.contain('missingCash');\n  });\n\n  it('warns of invalid interest rates', () => {\n    structure.ownFunds = [{ type: OWN_FUNDS_TYPES.BANK_FORTUNE, value: 25000 }];\n    structure.offerId = offerId;\n    structure.loanTranches = [{ type: 'interest5', value: 1 }];\n    borrower.salary = 100000;\n\n    expect(component()\n      .find(T)\n      .props().id).to.contain('invalidInterestRates');\n  });\n\n  it('returns null if no error exists in the structure', () => {\n    structure.ownFunds = [{ type: OWN_FUNDS_TYPES.BANK_FORTUNE, value: 25000 }];\n    borrower.salary = 100000;\n    expect(component()\n      .find(FinancingResultChart)\n      .exists()).to.equal(true);\n  });\n});\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Financing/client/FinancingResult/test/FinancingResultErrors.spec.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Financing/client/FinancingResult/test/FinancingResultErrors.spec.jsx"}},"code":"let React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet expect;\nmodule.link(\"chai\", {\n  expect(v) {\n    expect = v;\n  }\n\n}, 1);\nlet shallow;\nmodule.link(\"../../../../../utils/testHelpers/enzyme\", {\n  shallow(v) {\n    shallow = v;\n  }\n\n}, 2);\nlet T;\nmodule.link(\"../../../../Translation\", {\n  default(v) {\n    T = v;\n  }\n\n}, 3);\nlet OWN_FUNDS_TYPES;\nmodule.link(\"../../../../../api/constants\", {\n  OWN_FUNDS_TYPES(v) {\n    OWN_FUNDS_TYPES = v;\n  }\n\n}, 4);\nlet FinancingResultErrors;\nmodule.link(\"../FinancingResultErrors\", {\n  FinancingResultErrors(v) {\n    FinancingResultErrors = v;\n  }\n\n}, 5);\nlet FinancingResultChart;\nmodule.link(\"../FinancingResultChart\", {\n  default(v) {\n    FinancingResultChart = v;\n  }\n\n}, 6);\nlet OWN_FUNDS_USAGE_TYPES;\nmodule.link(\"../../../../../api/constants\", {\n  OWN_FUNDS_USAGE_TYPES(v) {\n    OWN_FUNDS_USAGE_TYPES = v;\n  }\n\n}, 7);\nlet Calculator;\nmodule.link(\"../../../../../utils/Calculator\", {\n  default(v) {\n    Calculator = v;\n  }\n\n}, 8);\ndescribe('FinancingResultErrors', () => {\n  let props;\n  let property;\n  let propertyId;\n  let structureId;\n  let offer;\n  let offerId;\n  let structure;\n  let borrower;\n\n  const component = () => shallow(React.createElement(FinancingResultErrors, props));\n\n  beforeEach(() => {\n    propertyId = 'propertyId';\n    structureId = 'structureId';\n    offerId = 'offerId';\n    property = {\n      _id: propertyId,\n      value: 100000\n    };\n    offer = {\n      _id: offerId,\n      interest10: 0.01\n    };\n    structure = {\n      propertyId,\n      wantedLoan: 80000,\n      id: structureId,\n      ownFunds: [],\n      propertyWork: 0\n    };\n    borrower = {};\n    props = {\n      loan: {\n        properties: [property],\n        structures: [structure],\n        offers: [offer],\n        borrowers: [borrower]\n      },\n      Calculator,\n      structureId\n    };\n  });\n  it('warns if no mortgage loan exists', () => {\n    structure.wantedLoan = 0;\n    expect(component().find(T).props().id).to.contain('noMortgageLoan');\n    structure.wantedLoan = undefined;\n    expect(component().find(T).props().id).to.contain('noMortgageLoan');\n  });\n  it('warns of missing own funds', () => {\n    expect(component().find(T).props().id).to.contain('missingOwnFunds');\n  });\n  it('warns of missing own funds if the value is NaN', () => {\n    expect(component().find(T).props().id).to.contain('missingOwnFunds');\n  });\n  it('warns of too much own funds', () => {\n    structure.ownFunds = [{\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      value: 50000\n    }];\n    expect(component().find(T).props().id).to.contain('tooMuchOwnFunds');\n  });\n  it('warns of a high income ratio', () => {\n    structure.ownFunds = [{\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      value: 25000\n    }];\n    expect(component().find(T).props().id).to.contain('highIncomeRatio');\n  });\n  it('warns of missing cash', () => {\n    structure.ownFunds = [{\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      value: 12000\n    }, {\n      type: OWN_FUNDS_TYPES.INSURANCE_2,\n      value: 12000,\n      usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW\n    }];\n    borrower.salary = 100000;\n    expect(component().find(T).props().id).to.contain('missingCash');\n  });\n  it('warns of invalid interest rates', () => {\n    structure.ownFunds = [{\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      value: 25000\n    }];\n    structure.offerId = offerId;\n    structure.loanTranches = [{\n      type: 'interest5',\n      value: 1\n    }];\n    borrower.salary = 100000;\n    expect(component().find(T).props().id).to.contain('invalidInterestRates');\n  });\n  it('returns null if no error exists in the structure', () => {\n    structure.ownFunds = [{\n      type: OWN_FUNDS_TYPES.BANK_FORTUNE,\n      value: 25000\n    }];\n    borrower.salary = 100000;\n    expect(component().find(FinancingResultChart).exists()).to.equal(true);\n  });\n});","map":{"version":3,"sources":["imports/core/components/Financing/client/FinancingResult/test/FinancingResultErrors.spec.jsx"],"names":["describe","component","shallow","beforeEach","propertyId","structureId","offerId","property","_id","value","offer","interest10","structure","wantedLoan","id","ownFunds","propertyWork","borrower","props","loan","properties","structures","offers","borrowers","it","expect","type","OWN_FUNDS_TYPES","usageType","OWN_FUNDS_USAGE_TYPES","WITHDRAW"],"mappings":"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","sourcesContent":["// @flow\n/* eslint-env mocha */\nimport React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'core/utils/testHelpers/enzyme';\n\nimport T from 'core/components/Translation';\nimport { OWN_FUNDS_TYPES } from 'core/api/constants';\nimport { FinancingResultErrors } from '../FinancingResultErrors';\nimport FinancingResultChart from '../FinancingResultChart';\nimport { OWN_FUNDS_USAGE_TYPES } from '../../../../../api/constants';\nimport Calculator from '../../../../../utils/Calculator';\n\ndescribe('FinancingResultErrors', () => {\n  let props;\n  let property;\n  let propertyId;\n  let structureId;\n  let offer;\n  let offerId;\n  let structure;\n  let borrower;\n  const component = () => shallow(<FinancingResultErrors {...props} />);\n\n  beforeEach(() => {\n    propertyId = 'propertyId';\n    structureId = 'structureId';\n    offerId = 'offerId';\n    property = { _id: propertyId, value: 100000 };\n    offer = { _id: offerId, interest10: 0.01 };\n    structure = {\n      propertyId,\n      wantedLoan: 80000,\n      id: structureId,\n      ownFunds: [],\n      propertyWork: 0,\n    };\n    borrower = {};\n    props = {\n      loan: {\n        properties: [property],\n        structures: [structure],\n        offers: [offer],\n        borrowers: [borrower],\n      },\n      Calculator,\n      structureId,\n    };\n  });\n\n  it('warns if no mortgage loan exists', () => {\n    structure.wantedLoan = 0;\n    expect(component()\n      .find(T)\n      .props().id).to.contain('noMortgageLoan');\n\n    structure.wantedLoan = undefined;\n    expect(component()\n      .find(T)\n      .props().id).to.contain('noMortgageLoan');\n  });\n\n  it('warns of missing own funds', () => {\n    expect(component()\n      .find(T)\n      .props().id).to.contain('missingOwnFunds');\n  });\n\n  it('warns of missing own funds if the value is NaN', () => {\n    expect(component()\n      .find(T)\n      .props().id).to.contain('missingOwnFunds');\n  });\n\n  it('warns of too much own funds', () => {\n    structure.ownFunds = [{ type: OWN_FUNDS_TYPES.BANK_FORTUNE, value: 50000 }];\n\n    expect(component()\n      .find(T)\n      .props().id).to.contain('tooMuchOwnFunds');\n  });\n\n  it('warns of a high income ratio', () => {\n    structure.ownFunds = [{ type: OWN_FUNDS_TYPES.BANK_FORTUNE, value: 25000 }];\n\n    expect(component()\n      .find(T)\n      .props().id).to.contain('highIncomeRatio');\n  });\n\n  it('warns of missing cash', () => {\n    structure.ownFunds = [\n      { type: OWN_FUNDS_TYPES.BANK_FORTUNE, value: 12000 },\n      {\n        type: OWN_FUNDS_TYPES.INSURANCE_2,\n        value: 12000,\n        usageType: OWN_FUNDS_USAGE_TYPES.WITHDRAW,\n      },\n    ];\n    borrower.salary = 100000;\n\n    expect(component()\n      .find(T)\n      .props().id).to.contain('missingCash');\n  });\n\n  it('warns of invalid interest rates', () => {\n    structure.ownFunds = [{ type: OWN_FUNDS_TYPES.BANK_FORTUNE, value: 25000 }];\n    structure.offerId = offerId;\n    structure.loanTranches = [{ type: 'interest5', value: 1 }];\n    borrower.salary = 100000;\n\n    expect(component()\n      .find(T)\n      .props().id).to.contain('invalidInterestRates');\n  });\n\n  it('returns null if no error exists in the structure', () => {\n    structure.ownFunds = [{ type: OWN_FUNDS_TYPES.BANK_FORTUNE, value: 25000 }];\n    borrower.salary = 100000;\n    expect(component()\n      .find(FinancingResultChart)\n      .exists()).to.equal(true);\n  });\n});\n"]},"sourceType":"script","hash":"a01b984b7027d109e060561fcb35d0e0c2971a2e"}
