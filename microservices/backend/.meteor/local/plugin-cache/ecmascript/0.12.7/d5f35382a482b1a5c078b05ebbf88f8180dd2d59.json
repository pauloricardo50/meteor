{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/properties/schemas/PropertySchema.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/core/api/properties/schemas/PropertySchema.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/properties/schemas/PropertySchema.js","inputSourceMap":{"version":3,"sources":["imports/core/api/properties/schemas/PropertySchema.js"],"names":["Meteor","SimpleSchema","createdAt","updatedAt","additionalDocuments","address","mortgageNoteLinks","moneyField","userLinksSchema","documentsField","cacheField","propertyConstants","initialDocuments","SCHEMA_BOOLEAN","type","Boolean","optional","defaultValue","propertyPermissionsSchema","canInviteCustomers","canInviteProUsers","canModifyProperty","canManagePermissions","canSellProperty","canBookProperty","displayCustomerNames","oneOf","Object","autoValue","isServer","isSet","value","undefined","keys","length","referredBy","String","allowedValues","values","PROPERTY_PERMISSIONS","DISPLAY_CUSTOMER_NAMES","REFERRED_BY","uniforms","displayEmpty","placeholder","Array","checkboxes","condition","permissions","FOR_PROPERTY_STATUS","PropertySchema","userId","name","description","multiline","rows","rowsMax","category","PROPERTY_CATEGORY","USER","status","PROPERTY_STATUS","FOR_SALE","propertyType","PROPERTY_TYPE","FLAT","houseType","HOUSE_TYPE","DETACHED","HOUSE","flatType","FLAT_TYPE","SINGLE_FLOOR_APARTMENT","investmentRent","Integer","min","max","constructionYear","renovationYear","insideArea","areaNorm","AREA_NORM","NIA","landArea","terraceArea","gardenArea","numberOfFloors","floorNumber","roomCount","Number","bathroomCount","volume","volumeNorm","VOLUME_NORM","SIA_416","parkingInside","parkingOutside","minergie","MINERGIE_CERTIFICATE","WITHOUT_CERTIFICATE","isCoproperty","copropertyPercentage","isNew","latitude","longitude","adminValidation","blackbox","yearlyExpenses","landValue","constructionValue","additionalMargin","externalId","useOpenGraph","externalUrl","regEx","RegEx","Url","imageUrls","documents","loanCount","protectedKeys","userAllowedKeys","PropertySchemaAdmin","omit"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport SimpleSchema from 'simpl-schema';\n\nimport {\n  createdAt,\n  updatedAt,\n  additionalDocuments,\n  address,\n  mortgageNoteLinks,\n  moneyField,\n  userLinksSchema,\n  documentsField,\n  cacheField,\n} from '../../helpers/sharedSchemas';\nimport * as propertyConstants from '../propertyConstants';\nimport { initialDocuments } from '../propertiesAdditionalDocuments';\n\nconst SCHEMA_BOOLEAN = { type: Boolean, optional: true, defaultValue: false };\n\nexport const propertyPermissionsSchema = {\n  canInviteCustomers: SCHEMA_BOOLEAN,\n  canInviteProUsers: SCHEMA_BOOLEAN,\n  canModifyProperty: SCHEMA_BOOLEAN,\n  canManagePermissions: SCHEMA_BOOLEAN,\n  canSellProperty: SCHEMA_BOOLEAN,\n  canBookProperty: SCHEMA_BOOLEAN,\n  displayCustomerNames: {\n    type: SimpleSchema.oneOf(Boolean, Object),\n    optional: true,\n    autoValue() {\n      if (Meteor.isServer && this.isSet) {\n        if (this.value === undefined) {\n          return false;\n        }\n\n        if (this.value instanceof Object) {\n          if (!Object.keys(this.value).length) {\n            return false;\n          }\n\n          if (!this.value.referredBy) {\n            return false;\n          }\n        }\n\n        return this.value;\n      }\n    },\n  },\n  'displayCustomerNames.referredBy': {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(propertyConstants.PROPERTY_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.REFERRED_BY),\n    uniforms: {\n      displayEmpty: true,\n      placeholder: 'Ne pas afficher le nom des clients',\n    },\n  },\n  'displayCustomerNames.forPropertyStatus': {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: { displayEmpty: false, placeholder: '', checkboxes: true },\n    condition: ({ permissions: { displayCustomerNames = {} } }) => {\n      const { referredBy } = displayCustomerNames;\n      return !!referredBy;\n    },\n  },\n  'displayCustomerNames.forPropertyStatus.$': {\n    type: String,\n    allowedValues: Object.values(propertyConstants.PROPERTY_PERMISSIONS.DISPLAY_CUSTOMER_NAMES\n      .FOR_PROPERTY_STATUS),\n  },\n};\n\nexport const PropertySchema = new SimpleSchema({\n  userId: {\n    type: String,\n    optional: true,\n  },\n  createdAt,\n  updatedAt,\n  name: {\n    type: String,\n    optional: true,\n    uniforms: { placeholder: null },\n  },\n  description: {\n    type: String,\n    optional: true,\n    uniforms: { placeholder: null, multiline: true, rows: 5, rowsMax: 15 },\n  },\n  category: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.PROPERTY_CATEGORY.USER,\n    allowedValues: Object.values(propertyConstants.PROPERTY_CATEGORY),\n    uniforms: { placeholder: null },\n  },\n  value: moneyField,\n  status: {\n    type: String,\n    defaultValue: propertyConstants.PROPERTY_STATUS.FOR_SALE,\n    allowedValues: Object.values(propertyConstants.PROPERTY_STATUS),\n    uniforms: { placeholder: null },\n  },\n  propertyType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.PROPERTY_TYPE.FLAT,\n    allowedValues: Object.values(propertyConstants.PROPERTY_TYPE),\n    uniforms: { placeholder: null },\n  },\n  houseType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.HOUSE_TYPE.DETACHED,\n    allowedValues: Object.values(propertyConstants.HOUSE_TYPE),\n    uniforms: { placeholder: null },\n    condition: ({ propertyType }) =>\n      propertyType === propertyConstants.PROPERTY_TYPE.HOUSE,\n  },\n  flatType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.FLAT_TYPE.SINGLE_FLOOR_APARTMENT,\n    allowedValues: Object.values(propertyConstants.FLAT_TYPE),\n    uniforms: { placeholder: null },\n    condition: ({ propertyType }) =>\n      propertyType === propertyConstants.PROPERTY_TYPE.FLAT,\n  },\n  investmentRent: {\n    // Rent of property if investment\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100000000,\n  },\n  ...address,\n  constructionYear: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 2030,\n    optional: true,\n  },\n  renovationYear: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 2030,\n    optional: true,\n  },\n  insideArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n  },\n  areaNorm: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(propertyConstants.AREA_NORM),\n    defaultValue: propertyConstants.AREA_NORM.NIA,\n    uniforms: { placeholder: null },\n  },\n  landArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n  },\n  terraceArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n  },\n  gardenArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n  },\n  numberOfFloors: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 20,\n  },\n  floorNumber: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 20,\n  },\n  roomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  bathroomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  volume: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100000,\n  },\n  volumeNorm: {\n    type: String,\n    defaultValue: propertyConstants.VOLUME_NORM.SIA_416,\n    allowedValues: Object.values(propertyConstants.VOLUME_NORM),\n    uniforms: { placeholder: null },\n  },\n  parkingInside: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  parkingOutside: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  minergie: {\n    type: String,\n    defaultValue: propertyConstants.MINERGIE_CERTIFICATE.WITHOUT_CERTIFICATE,\n    allowedValues: Object.values(propertyConstants.MINERGIE_CERTIFICATE),\n    uniforms: { placeholder: null },\n  },\n  isCoproperty: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  copropertyPercentage: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 1000,\n    optional: true,\n  },\n  isNew: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  latitude: {\n    type: Number,\n    optional: true,\n    min: -90,\n    max: 90,\n  },\n  longitude: {\n    type: Number,\n    optional: true,\n    min: -180,\n    max: 180,\n  },\n  adminValidation: { type: Object, defaultValue: {}, blackbox: true },\n  yearlyExpenses: moneyField,\n  landValue: moneyField,\n  constructionValue: moneyField,\n  additionalMargin: moneyField,\n  ...additionalDocuments(initialDocuments),\n  ...mortgageNoteLinks,\n  ...userLinksSchema(propertyPermissionsSchema),\n  externalId: {\n    type: String,\n    optional: true,\n  },\n  useOpenGraph: {\n    type: Boolean,\n    optional: true,\n    condition: ({ externalUrl }) => externalUrl,\n  },\n  externalUrl: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n    optional: true,\n  },\n  imageUrls: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n  },\n  'imageUrls.$': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n  },\n  documents: documentsField,\n  loanCount: { type: Number, optional: true },\n});\n\nconst protectedKeys = [\n  '_id',\n  'additionalDocuments',\n  'address',\n  'adminValidation',\n  'createdAt',\n  'latitude',\n  'longitude',\n  'mortgageNoteLinks',\n  'updatedAt',\n  'userId',\n  'documents',\n  'userLinks',\n];\n\nexport const userAllowedKeys = [\n  'externalId',\n  'address1',\n  'address2',\n  'zipCode',\n  'city',\n  'value',\n  'description',\n  'propertyType',\n  'flatType',\n  'houseType',\n  'roomCount',\n  'insideArea',\n  'landArea',\n  'terraceArea',\n  'gardenArea',\n  'constructionYear',\n  'externalUrl',\n  'useOpenGraph',\n  'imageUrls',\n];\n\nexport const PropertySchemaAdmin = PropertySchema.omit(...protectedKeys);\nexport default PropertySchema;\n"]},"passPerPreset":false,"envName":"production","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/properties/schemas/PropertySchema.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/properties/schemas/PropertySchema.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  propertyPermissionsSchema: () => propertyPermissionsSchema,\n  PropertySchema: () => PropertySchema,\n  userAllowedKeys: () => userAllowedKeys,\n  PropertySchemaAdmin: () => PropertySchemaAdmin\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet createdAt, updatedAt, additionalDocuments, address, mortgageNoteLinks, moneyField, userLinksSchema, documentsField, cacheField;\nmodule.link(\"../../helpers/sharedSchemas\", {\n  createdAt(v) {\n    createdAt = v;\n  },\n\n  updatedAt(v) {\n    updatedAt = v;\n  },\n\n  additionalDocuments(v) {\n    additionalDocuments = v;\n  },\n\n  address(v) {\n    address = v;\n  },\n\n  mortgageNoteLinks(v) {\n    mortgageNoteLinks = v;\n  },\n\n  moneyField(v) {\n    moneyField = v;\n  },\n\n  userLinksSchema(v) {\n    userLinksSchema = v;\n  },\n\n  documentsField(v) {\n    documentsField = v;\n  },\n\n  cacheField(v) {\n    cacheField = v;\n  }\n\n}, 2);\nlet propertyConstants;\nmodule.link(\"../propertyConstants\", {\n  \"*\"(v) {\n    propertyConstants = v;\n  }\n\n}, 3);\nlet initialDocuments;\nmodule.link(\"../propertiesAdditionalDocuments\", {\n  initialDocuments(v) {\n    initialDocuments = v;\n  }\n\n}, 4);\nconst SCHEMA_BOOLEAN = {\n  type: Boolean,\n  optional: true,\n  defaultValue: false\n};\nconst propertyPermissionsSchema = {\n  canInviteCustomers: SCHEMA_BOOLEAN,\n  canInviteProUsers: SCHEMA_BOOLEAN,\n  canModifyProperty: SCHEMA_BOOLEAN,\n  canManagePermissions: SCHEMA_BOOLEAN,\n  canSellProperty: SCHEMA_BOOLEAN,\n  canBookProperty: SCHEMA_BOOLEAN,\n  displayCustomerNames: {\n    type: SimpleSchema.oneOf(Boolean, Object),\n    optional: true,\n\n    autoValue() {\n      if (Meteor.isServer && this.isSet) {\n        if (this.value === undefined) {\n          return false;\n        }\n\n        if (this.value instanceof Object) {\n          if (!Object.keys(this.value).length) {\n            return false;\n          }\n\n          if (!this.value.referredBy) {\n            return false;\n          }\n        }\n\n        return this.value;\n      }\n    }\n\n  },\n  'displayCustomerNames.referredBy': {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(propertyConstants.PROPERTY_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.REFERRED_BY),\n    uniforms: {\n      displayEmpty: true,\n      placeholder: 'Ne pas afficher le nom des clients'\n    }\n  },\n  'displayCustomerNames.forPropertyStatus': {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: {\n      displayEmpty: false,\n      placeholder: '',\n      checkboxes: true\n    },\n    condition: ({\n      permissions: {\n        displayCustomerNames = {}\n      }\n    }) => {\n      const {\n        referredBy\n      } = displayCustomerNames;\n      return !!referredBy;\n    }\n  },\n  'displayCustomerNames.forPropertyStatus.$': {\n    type: String,\n    allowedValues: Object.values(propertyConstants.PROPERTY_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.FOR_PROPERTY_STATUS)\n  }\n};\nconst PropertySchema = new SimpleSchema((0, _objectSpread2.default)({\n  userId: {\n    type: String,\n    optional: true\n  },\n  createdAt,\n  updatedAt,\n  name: {\n    type: String,\n    optional: true,\n    uniforms: {\n      placeholder: null\n    }\n  },\n  description: {\n    type: String,\n    optional: true,\n    uniforms: {\n      placeholder: null,\n      multiline: true,\n      rows: 5,\n      rowsMax: 15\n    }\n  },\n  category: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.PROPERTY_CATEGORY.USER,\n    allowedValues: Object.values(propertyConstants.PROPERTY_CATEGORY),\n    uniforms: {\n      placeholder: null\n    }\n  },\n  value: moneyField,\n  status: {\n    type: String,\n    defaultValue: propertyConstants.PROPERTY_STATUS.FOR_SALE,\n    allowedValues: Object.values(propertyConstants.PROPERTY_STATUS),\n    uniforms: {\n      placeholder: null\n    }\n  },\n  propertyType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.PROPERTY_TYPE.FLAT,\n    allowedValues: Object.values(propertyConstants.PROPERTY_TYPE),\n    uniforms: {\n      placeholder: null\n    }\n  },\n  houseType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.HOUSE_TYPE.DETACHED,\n    allowedValues: Object.values(propertyConstants.HOUSE_TYPE),\n    uniforms: {\n      placeholder: null\n    },\n    condition: ({\n      propertyType\n    }) => propertyType === propertyConstants.PROPERTY_TYPE.HOUSE\n  },\n  flatType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.FLAT_TYPE.SINGLE_FLOOR_APARTMENT,\n    allowedValues: Object.values(propertyConstants.FLAT_TYPE),\n    uniforms: {\n      placeholder: null\n    },\n    condition: ({\n      propertyType\n    }) => propertyType === propertyConstants.PROPERTY_TYPE.FLAT\n  },\n  investmentRent: {\n    // Rent of property if investment\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100000000\n  }\n}, address, {\n  constructionYear: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 2030,\n    optional: true\n  },\n  renovationYear: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 2030,\n    optional: true\n  },\n  insideArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0\n  },\n  areaNorm: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(propertyConstants.AREA_NORM),\n    defaultValue: propertyConstants.AREA_NORM.NIA,\n    uniforms: {\n      placeholder: null\n    }\n  },\n  landArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0\n  },\n  terraceArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0\n  },\n  gardenArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0\n  },\n  numberOfFloors: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 20\n  },\n  floorNumber: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 20\n  },\n  roomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  bathroomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  volume: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100000\n  },\n  volumeNorm: {\n    type: String,\n    defaultValue: propertyConstants.VOLUME_NORM.SIA_416,\n    allowedValues: Object.values(propertyConstants.VOLUME_NORM),\n    uniforms: {\n      placeholder: null\n    }\n  },\n  parkingInside: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  parkingOutside: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100\n  },\n  minergie: {\n    type: String,\n    defaultValue: propertyConstants.MINERGIE_CERTIFICATE.WITHOUT_CERTIFICATE,\n    allowedValues: Object.values(propertyConstants.MINERGIE_CERTIFICATE),\n    uniforms: {\n      placeholder: null\n    }\n  },\n  isCoproperty: {\n    type: Boolean,\n    defaultValue: false\n  },\n  copropertyPercentage: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 1000,\n    optional: true\n  },\n  isNew: {\n    type: Boolean,\n    defaultValue: false\n  },\n  latitude: {\n    type: Number,\n    optional: true,\n    min: -90,\n    max: 90\n  },\n  longitude: {\n    type: Number,\n    optional: true,\n    min: -180,\n    max: 180\n  },\n  adminValidation: {\n    type: Object,\n    defaultValue: {},\n    blackbox: true\n  },\n  yearlyExpenses: moneyField,\n  landValue: moneyField,\n  constructionValue: moneyField,\n  additionalMargin: moneyField\n}, additionalDocuments(initialDocuments), mortgageNoteLinks, userLinksSchema(propertyPermissionsSchema), {\n  externalId: {\n    type: String,\n    optional: true\n  },\n  useOpenGraph: {\n    type: Boolean,\n    optional: true,\n    condition: ({\n      externalUrl\n    }) => externalUrl\n  },\n  externalUrl: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n    optional: true\n  },\n  imageUrls: {\n    type: Array,\n    optional: true,\n    defaultValue: []\n  },\n  'imageUrls.$': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url\n  },\n  documents: documentsField,\n  loanCount: {\n    type: Number,\n    optional: true\n  }\n}));\nconst protectedKeys = ['_id', 'additionalDocuments', 'address', 'adminValidation', 'createdAt', 'latitude', 'longitude', 'mortgageNoteLinks', 'updatedAt', 'userId', 'documents', 'userLinks'];\nconst userAllowedKeys = ['externalId', 'address1', 'address2', 'zipCode', 'city', 'value', 'description', 'propertyType', 'flatType', 'houseType', 'roomCount', 'insideArea', 'landArea', 'terraceArea', 'gardenArea', 'constructionYear', 'externalUrl', 'useOpenGraph', 'imageUrls'];\nconst PropertySchemaAdmin = PropertySchema.omit(...protectedKeys);\nmodule.exportDefault(PropertySchema);","map":{"version":3,"sources":["imports/core/api/properties/schemas/PropertySchema.js"],"names":["Meteor","SCHEMA_BOOLEAN","type","optional","defaultValue","propertyPermissionsSchema","canInviteCustomers","canInviteProUsers","canModifyProperty","canManagePermissions","canSellProperty","canBookProperty","displayCustomerNames","SimpleSchema","autoValue","Object","allowedValues","propertyConstants","uniforms","displayEmpty","placeholder","checkboxes","condition","permissions","referredBy","PropertySchema","userId","name","description","multiline","rows","rowsMax","category","value","status","propertyType","houseType","HOUSE","flatType","FLAT","investmentRent","min","max","constructionYear","renovationYear","insideArea","areaNorm","landArea","terraceArea","gardenArea","numberOfFloors","floorNumber","roomCount","bathroomCount","volume","volumeNorm","parkingInside","parkingOutside","minergie","isCoproperty","copropertyPercentage","isNew","latitude","longitude","adminValidation","blackbox","yearlyExpenses","landValue","constructionValue","additionalMargin","additionalDocuments","userLinksSchema","externalId","useOpenGraph","externalUrl","regEx","imageUrls","Url","documents","loanCount","protectedKeys","userAllowedKeys","PropertySchemaAdmin"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport SimpleSchema from 'simpl-schema';\n\nimport {\n  createdAt,\n  updatedAt,\n  additionalDocuments,\n  address,\n  mortgageNoteLinks,\n  moneyField,\n  userLinksSchema,\n  documentsField,\n  cacheField,\n} from '../../helpers/sharedSchemas';\nimport * as propertyConstants from '../propertyConstants';\nimport { initialDocuments } from '../propertiesAdditionalDocuments';\n\nconst SCHEMA_BOOLEAN = { type: Boolean, optional: true, defaultValue: false };\n\nexport const propertyPermissionsSchema = {\n  canInviteCustomers: SCHEMA_BOOLEAN,\n  canInviteProUsers: SCHEMA_BOOLEAN,\n  canModifyProperty: SCHEMA_BOOLEAN,\n  canManagePermissions: SCHEMA_BOOLEAN,\n  canSellProperty: SCHEMA_BOOLEAN,\n  canBookProperty: SCHEMA_BOOLEAN,\n  displayCustomerNames: {\n    type: SimpleSchema.oneOf(Boolean, Object),\n    optional: true,\n    autoValue() {\n      if (Meteor.isServer && this.isSet) {\n        if (this.value === undefined) {\n          return false;\n        }\n\n        if (this.value instanceof Object) {\n          if (!Object.keys(this.value).length) {\n            return false;\n          }\n\n          if (!this.value.referredBy) {\n            return false;\n          }\n        }\n\n        return this.value;\n      }\n    },\n  },\n  'displayCustomerNames.referredBy': {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(propertyConstants.PROPERTY_PERMISSIONS.DISPLAY_CUSTOMER_NAMES.REFERRED_BY),\n    uniforms: {\n      displayEmpty: true,\n      placeholder: 'Ne pas afficher le nom des clients',\n    },\n  },\n  'displayCustomerNames.forPropertyStatus': {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n    uniforms: { displayEmpty: false, placeholder: '', checkboxes: true },\n    condition: ({ permissions: { displayCustomerNames = {} } }) => {\n      const { referredBy } = displayCustomerNames;\n      return !!referredBy;\n    },\n  },\n  'displayCustomerNames.forPropertyStatus.$': {\n    type: String,\n    allowedValues: Object.values(propertyConstants.PROPERTY_PERMISSIONS.DISPLAY_CUSTOMER_NAMES\n      .FOR_PROPERTY_STATUS),\n  },\n};\n\nexport const PropertySchema = new SimpleSchema({\n  userId: {\n    type: String,\n    optional: true,\n  },\n  createdAt,\n  updatedAt,\n  name: {\n    type: String,\n    optional: true,\n    uniforms: { placeholder: null },\n  },\n  description: {\n    type: String,\n    optional: true,\n    uniforms: { placeholder: null, multiline: true, rows: 5, rowsMax: 15 },\n  },\n  category: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.PROPERTY_CATEGORY.USER,\n    allowedValues: Object.values(propertyConstants.PROPERTY_CATEGORY),\n    uniforms: { placeholder: null },\n  },\n  value: moneyField,\n  status: {\n    type: String,\n    defaultValue: propertyConstants.PROPERTY_STATUS.FOR_SALE,\n    allowedValues: Object.values(propertyConstants.PROPERTY_STATUS),\n    uniforms: { placeholder: null },\n  },\n  propertyType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.PROPERTY_TYPE.FLAT,\n    allowedValues: Object.values(propertyConstants.PROPERTY_TYPE),\n    uniforms: { placeholder: null },\n  },\n  houseType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.HOUSE_TYPE.DETACHED,\n    allowedValues: Object.values(propertyConstants.HOUSE_TYPE),\n    uniforms: { placeholder: null },\n    condition: ({ propertyType }) =>\n      propertyType === propertyConstants.PROPERTY_TYPE.HOUSE,\n  },\n  flatType: {\n    type: String,\n    optional: true,\n    defaultValue: propertyConstants.FLAT_TYPE.SINGLE_FLOOR_APARTMENT,\n    allowedValues: Object.values(propertyConstants.FLAT_TYPE),\n    uniforms: { placeholder: null },\n    condition: ({ propertyType }) =>\n      propertyType === propertyConstants.PROPERTY_TYPE.FLAT,\n  },\n  investmentRent: {\n    // Rent of property if investment\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100000000,\n  },\n  ...address,\n  constructionYear: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 2030,\n    optional: true,\n  },\n  renovationYear: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 2030,\n    optional: true,\n  },\n  insideArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n  },\n  areaNorm: {\n    type: String,\n    optional: true,\n    allowedValues: Object.values(propertyConstants.AREA_NORM),\n    defaultValue: propertyConstants.AREA_NORM.NIA,\n    uniforms: { placeholder: null },\n  },\n  landArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n  },\n  terraceArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n  },\n  gardenArea: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n  },\n  numberOfFloors: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 20,\n  },\n  floorNumber: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 20,\n  },\n  roomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  bathroomCount: {\n    type: Number,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  volume: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100000,\n  },\n  volumeNorm: {\n    type: String,\n    defaultValue: propertyConstants.VOLUME_NORM.SIA_416,\n    allowedValues: Object.values(propertyConstants.VOLUME_NORM),\n    uniforms: { placeholder: null },\n  },\n  parkingInside: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  parkingOutside: {\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 0,\n    max: 100,\n  },\n  minergie: {\n    type: String,\n    defaultValue: propertyConstants.MINERGIE_CERTIFICATE.WITHOUT_CERTIFICATE,\n    allowedValues: Object.values(propertyConstants.MINERGIE_CERTIFICATE),\n    uniforms: { placeholder: null },\n  },\n  isCoproperty: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  copropertyPercentage: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 1000,\n    optional: true,\n  },\n  isNew: {\n    type: Boolean,\n    defaultValue: false,\n  },\n  latitude: {\n    type: Number,\n    optional: true,\n    min: -90,\n    max: 90,\n  },\n  longitude: {\n    type: Number,\n    optional: true,\n    min: -180,\n    max: 180,\n  },\n  adminValidation: { type: Object, defaultValue: {}, blackbox: true },\n  yearlyExpenses: moneyField,\n  landValue: moneyField,\n  constructionValue: moneyField,\n  additionalMargin: moneyField,\n  ...additionalDocuments(initialDocuments),\n  ...mortgageNoteLinks,\n  ...userLinksSchema(propertyPermissionsSchema),\n  externalId: {\n    type: String,\n    optional: true,\n  },\n  useOpenGraph: {\n    type: Boolean,\n    optional: true,\n    condition: ({ externalUrl }) => externalUrl,\n  },\n  externalUrl: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n    optional: true,\n  },\n  imageUrls: {\n    type: Array,\n    optional: true,\n    defaultValue: [],\n  },\n  'imageUrls.$': {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n  },\n  documents: documentsField,\n  loanCount: { type: Number, optional: true },\n});\n\nconst protectedKeys = [\n  '_id',\n  'additionalDocuments',\n  'address',\n  'adminValidation',\n  'createdAt',\n  'latitude',\n  'longitude',\n  'mortgageNoteLinks',\n  'updatedAt',\n  'userId',\n  'documents',\n  'userLinks',\n];\n\nexport const userAllowedKeys = [\n  'externalId',\n  'address1',\n  'address2',\n  'zipCode',\n  'city',\n  'value',\n  'description',\n  'propertyType',\n  'flatType',\n  'houseType',\n  'roomCount',\n  'insideArea',\n  'landArea',\n  'terraceArea',\n  'gardenArea',\n  'constructionYear',\n  'externalUrl',\n  'useOpenGraph',\n  'imageUrls',\n];\n\nexport const PropertySchemaAdmin = PropertySchema.omit(...protectedKeys);\nexport default PropertySchema;\n"]},"sourceType":"script","hash":"d5f35382a482b1a5c078b05ebbf88f8180dd2d59"}
