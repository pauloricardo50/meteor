{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Translation/Translation.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/components/Translation/Translation.jsx","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Translation/Translation.jsx","inputSourceMap":{"version":3,"sources":["imports/core/components/Translation/Translation.jsx"],"names":["React","PropTypes","AutoTooltip","defaultIntlValues","FormattedMessage","makeAutoTooltip","props","content","key","tooltipPlacement","T","noTooltips","id","values","rest","Error","Auto","formattedMessage","map","msg","i","propTypes","string","isRequired","bool","object","defaultProps","undefined"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,WAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,gBAAP;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI,CAACC,OAAD,EAAUC,GAAV,KAC/B,CAAC,WAAD,CAAa,IAAIF,KAAJ,CAAb,CAAwB,UAAU,CAACA,KAAK,CAACG,gBAAP,CAAlC,CAA2D,IAAI,CAACD,GAAD,CAA/D;IACE,CAACD,OAAD;EACF,EAAE,WAAF,CAHF;AAMA;;;;;;;;AAMA,OAAO,MAAMG,CAAC,GAAIJ,KAAD,IAAW;AAC1B,QAAM;AAAEK,IAAAA,UAAF;AAAcC,IAAAA,EAAd;AAAkBC,IAAAA,MAAlB;AAA0BJ,IAAAA,gBAA1B;AAA4C,OAAGK;AAA/C,MAAwDR,KAA9D;;AAEA,MAAIK,UAAJ,EAAgB;AACd,WAAO,CAAC,gBAAD,CAAkB,IAAIL,KAAJ,CAAlB,GAAP;AACD;;AACD,MAAI,OAAOM,EAAP,KAAc,QAAlB,EAA4B;AAC1B,WAAOA,EAAP;AACD;;AACD,MAAI,CAACA,EAAL,EAAS;AACP,UAAM,IAAIG,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAED,QAAMC,IAAI,GAAGX,eAAe,CAACC,KAAD,CAA5B;AAEA,SACE,CAAC,gBAAD,CACE,GAAG,CAACM,EAAD,CADL,CAEE,OAAO,CAAC,EAAE,GAAGT,iBAAL;AAAwB,OAAGU;AAA3B,GAAD,CAFT,CAGE,IAAIC,IAAJ,CAHF;MAKE,CAAC,CAAC,GAAGG,gBAAJ,KAAyBA,gBAAgB,CAACC,GAAjB,CAAqB,CAACC,GAAD,EAAMC,CAAN,KAAYJ,IAAI,CAACG,GAAD,EAAMC,CAAN,CAArC,CAA1B;IACF,EAAE,gBAAF,CAPF;AASD,CAxBM;AA0BPV,CAAC,CAACW,SAAF,GAAc;AACZT,EAAAA,EAAE,EAAEX,SAAS,CAACqB,MAAV,CAAiBC,UADT;AAEZZ,EAAAA,UAAU,EAAEV,SAAS,CAACuB,IAFV;AAGZf,EAAAA,gBAAgB,EAAER,SAAS,CAACqB,MAHhB;AAIZT,EAAAA,MAAM,EAAEZ,SAAS,CAACwB;AAJN,CAAd;AAOAf,CAAC,CAACgB,YAAF,GAAiB;AACff,EAAAA,UAAU,EAAE,KADG;AAEfF,EAAAA,gBAAgB,EAAEkB,SAFH;AAGfd,EAAAA,MAAM,EAAE;AAHO,CAAjB;AAMA,eAAeH,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AutoTooltip from '../tooltips/AutoTooltip';\nimport defaultIntlValues from './defaultIntlValues';\nimport FormattedMessage from './FormattedMessage';\n\nconst makeAutoTooltip = props => (content, key) => (\n  <AutoTooltip {...props} placement={props.tooltipPlacement} key={key}>\n    {content}\n  </AutoTooltip>\n);\n\n/**\n * T - A wrapper around react-intl's Formatted Message, it\n * automatically adds tooltips if they exist.\n * It is only rerendered if the id changes\n * @extends Component\n */\nexport const T = (props) => {\n  const { noTooltips, id, values, tooltipPlacement, ...rest } = props;\n\n  if (noTooltips) {\n    return <FormattedMessage {...props} />;\n  }\n  if (typeof id !== 'string') {\n    return id;\n  }\n  if (!id) {\n    throw new Error('Undefined id in Translation component');\n  }\n\n  const Auto = makeAutoTooltip(props);\n\n  return (\n    <FormattedMessage\n      id={id}\n      values={{ ...defaultIntlValues, ...values }}\n      {...rest}\n    >\n      {(...formattedMessage) => formattedMessage.map((msg, i) => Auto(msg, i))}\n    </FormattedMessage>\n  );\n};\n\nT.propTypes = {\n  id: PropTypes.string.isRequired,\n  noTooltips: PropTypes.bool,\n  tooltipPlacement: PropTypes.string,\n  values: PropTypes.object,\n};\n\nT.defaultProps = {\n  noTooltips: false,\n  tooltipPlacement: undefined,\n  values: {},\n};\n\nexport default T;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/components/Translation/Translation.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/components/Translation/Translation.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nmodule.export({\n  T: () => T\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 1);\nlet AutoTooltip;\nmodule.link(\"../tooltips/AutoTooltip\", {\n  default(v) {\n    AutoTooltip = v;\n  }\n\n}, 2);\nlet defaultIntlValues;\nmodule.link(\"./defaultIntlValues\", {\n  default(v) {\n    defaultIntlValues = v;\n  }\n\n}, 3);\nlet FormattedMessage;\nmodule.link(\"./FormattedMessage\", {\n  default(v) {\n    FormattedMessage = v;\n  }\n\n}, 4);\n\nconst makeAutoTooltip = props => (content, key) => React.createElement(AutoTooltip, (0, _extends2.default)({}, props, {\n  placement: props.tooltipPlacement,\n  key: key\n}), content);\n/**\n * T - A wrapper around react-intl's Formatted Message, it\n * automatically adds tooltips if they exist.\n * It is only rerendered if the id changes\n * @extends Component\n */\n\n\nconst T = props => {\n  const {\n    noTooltips,\n    id,\n    values,\n    tooltipPlacement\n  } = props,\n        rest = (0, _objectWithoutProperties2.default)(props, [\"noTooltips\", \"id\", \"values\", \"tooltipPlacement\"]);\n\n  if (noTooltips) {\n    return React.createElement(FormattedMessage, props);\n  }\n\n  if (typeof id !== 'string') {\n    return id;\n  }\n\n  if (!id) {\n    throw new Error('Undefined id in Translation component');\n  }\n\n  const Auto = makeAutoTooltip(props);\n  return React.createElement(FormattedMessage, (0, _extends2.default)({\n    id: id,\n    values: (0, _objectSpread2.default)({}, defaultIntlValues, values)\n  }, rest), (...formattedMessage) => formattedMessage.map((msg, i) => Auto(msg, i)));\n};\n\nT.propTypes = {\n  id: PropTypes.string.isRequired,\n  noTooltips: PropTypes.bool,\n  tooltipPlacement: PropTypes.string,\n  values: PropTypes.object\n};\nT.defaultProps = {\n  noTooltips: false,\n  tooltipPlacement: undefined,\n  values: {}\n};\nmodule.exportDefault(T);","map":{"version":3,"sources":["imports/core/components/Translation/Translation.jsx"],"names":["makeAutoTooltip","props","T","rest","Auto","values","formattedMessage","id","PropTypes","noTooltips","tooltipPlacement","object"],"mappings":";;;;;;;;AAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,CAAA,EAAA,MAAkB;AAAlB,CAAA;AAAA,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,YAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,qBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAOA,MAAMA,eAAe,GAAGC,KAAK,IAAI,CAAA,OAAA,EAAA,GAAA,KAC/B,oBAAA,WAAA,6BAAA,KAAA;AAAwB,EAAA,SAAA,EAAWA,KAAK,CAAxC,gBAAA;AAA2D,EAAA,GAAA,EAA3D;AAAA,IACE,OADF,CADF;AAMA;;;;;;;;AAMO,MAAMC,CAAC,GAAID,KAAD,IAAW;AAC1B,QAAM;AAAA,IAAA,UAAA;AAAA,IAAA,EAAA;AAAA,IAAA,MAAA;AAAA,IAAA;AAAA,MAAN,KAAA;AAAA,QAAqDE,IAArD,0CAAA,KAAA;;AAEA,MAAA,UAAA,EAAgB;AACd,WAAO,oBAAA,gBAAA,EAAP,KAAO,CAAP;AACD;;AACD,MAAI,OAAA,EAAA,KAAJ,QAAA,EAA4B;AAC1B,WAAA,EAAA;AACD;;AACD,MAAI,CAAJ,EAAA,EAAS;AACP,UAAM,IAAA,KAAA,CAAN,uCAAM,CAAN;AACD;;AAED,QAAMC,IAAI,GAAGJ,eAAe,CAA5B,KAA4B,CAA5B;AAEA,SACE,oBAAA,gBAAA;AACE,IAAA,EAAA,EADF,EAAA;AAEE,IAAA,MAAA,kCAAQ,iBAAR,EAAmCK,MAAnC;AAFF,KAAA,IAAA,GAKG,CAAC,GAAD,gBAAA,KAAyBC,gBAAgB,CAAhBA,GAAAA,CAAqB,CAAA,GAAA,EAAA,CAAA,KAAYF,IAAI,CAAA,GAAA,EAA/D,CAA+D,CAArCE,CAL5B,CADF;AAfK,CAAA;;AA0BPJ,CAAC,CAADA,SAAAA,GAAc;AACZK,EAAAA,EAAE,EAAEC,SAAS,CAATA,MAAAA,CADQ,UAAA;AAEZC,EAAAA,UAAU,EAAED,SAAS,CAFT,IAAA;AAGZE,EAAAA,gBAAgB,EAAEF,SAAS,CAHf,MAAA;AAIZH,EAAAA,MAAM,EAAEG,SAAS,CAACG;AAJN,CAAdT;AAOAA,CAAC,CAADA,YAAAA,GAAiB;AACfO,EAAAA,UAAU,EADK,KAAA;AAEfC,EAAAA,gBAAgB,EAFD,SAAA;AAGfL,EAAAA,MAAM,EAAE;AAHO,CAAjBH;AApDA,MAAA,CAAA,aAAA,CA0DA,CA1DA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AutoTooltip from '../tooltips/AutoTooltip';\nimport defaultIntlValues from './defaultIntlValues';\nimport FormattedMessage from './FormattedMessage';\n\nconst makeAutoTooltip = props => (content, key) => (\n  <AutoTooltip {...props} placement={props.tooltipPlacement} key={key}>\n    {content}\n  </AutoTooltip>\n);\n\n/**\n * T - A wrapper around react-intl's Formatted Message, it\n * automatically adds tooltips if they exist.\n * It is only rerendered if the id changes\n * @extends Component\n */\nexport const T = (props) => {\n  const { noTooltips, id, values, tooltipPlacement, ...rest } = props;\n\n  if (noTooltips) {\n    return <FormattedMessage {...props} />;\n  }\n  if (typeof id !== 'string') {\n    return id;\n  }\n  if (!id) {\n    throw new Error('Undefined id in Translation component');\n  }\n\n  const Auto = makeAutoTooltip(props);\n\n  return (\n    <FormattedMessage\n      id={id}\n      values={{ ...defaultIntlValues, ...values }}\n      {...rest}\n    >\n      {(...formattedMessage) => formattedMessage.map((msg, i) => Auto(msg, i))}\n    </FormattedMessage>\n  );\n};\n\nT.propTypes = {\n  id: PropTypes.string.isRequired,\n  noTooltips: PropTypes.bool,\n  tooltipPlacement: PropTypes.string,\n  values: PropTypes.object,\n};\n\nT.defaultProps = {\n  noTooltips: false,\n  tooltipPlacement: undefined,\n  values: {},\n};\n\nexport default T;\n"]},"sourceType":"script","hash":"8be975270259b5a27f0a20829c0237b1a44b372a"}
