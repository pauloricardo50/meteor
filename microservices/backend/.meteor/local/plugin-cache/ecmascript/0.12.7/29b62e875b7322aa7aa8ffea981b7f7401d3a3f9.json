{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/getProperty.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties",["flow",{}],"jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/getProperty.js","filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/getProperty.js","inputSourceMap":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/getProperty.js"],"names":["omit","SimpleSchema","PropertyService","Meteor","getImpersonateUserId","checkQuery","proProperties","HTTP_STATUS_CODES","querySchema","type","String","optional","getPropertyAPI","user","_id","userId","params","query","propertyId","impersonateUser","schema","exists","propertyByExternalId","fetchOne","$filters","externalId","Error","NOT_FOUND","proId","property","clone","fetch","filteredProperty"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,OAAOC,eAAP;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,oBAAT,EAA+BC,UAA/B;AACA,SAASC,aAAT;AACA,SAASC,iBAAT;AAEA,MAAMC,WAAW,GAAG,IAAIP,YAAJ,CAAiB;AACnC,sBAAoB;AAAEQ,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B;AADe,CAAjB,CAApB;;AAIA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAG,EAAEC;AAAP,GAAR;AAAyBC,EAAAA,MAAzB;AAAiCC,EAAAA;AAAjC,CAAD,KAA8C;AACnE,MAAI;AAAEC,IAAAA;AAAF,MAAiBF,MAArB;AACA,QAAM;AAAE,wBAAoBG;AAAtB,MAA0Cd,UAAU,CAAC;AACzDY,IAAAA,KADyD;AAEzDG,IAAAA,MAAM,EAAEZ;AAFiD,GAAD,CAA1D;AAKA,QAAMa,MAAM,GAAGnB,eAAe,CAACmB,MAAhB,CAAuBH,UAAvB,CAAf;;AAEA,MAAI,CAACG,MAAL,EAAa;AACX,UAAMC,oBAAoB,GAAGpB,eAAe,CAACqB,QAAhB,CAAyB;AACpDC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,UAAU,EAAEP;AAAd;AAD0C,KAAzB,CAA7B;;AAGA,QAAII,oBAAJ,EAA0B;AACxBJ,MAAAA,UAAU,GAAGI,oBAAoB,CAACR,GAAlC;AACD,KAFD,MAEO;AACL,YAAM,IAAIX,MAAM,CAACuB,KAAX,CACJnB,iBAAiB,CAACoB,SADd,EAEH,6BAA4BT,UAAW,GAFpC,CAAN;AAID;AACF;;AAED,MAAIU,KAAJ;;AACA,MAAIT,eAAJ,EAAqB;AACnBS,IAAAA,KAAK,GAAGxB,oBAAoB,CAAC;AAAEW,MAAAA,MAAF;AAAUI,MAAAA;AAAV,KAAD,CAA5B;AACD;;AAED,QAAM,CAACU,QAAD,IAAavB,aAAa,CAC7BwB,KADgB,CACV;AAAEhB,IAAAA,GAAG,EAAEI;AAAP,GADU,EAEhBa,KAFgB,CAEV;AAAEhB,IAAAA,MAAM,EAAEa,KAAK,IAAIb;AAAnB,GAFU,CAAnB;AAIA,QAAMiB,gBAAgB,GAAGhC,IAAI,CAAC6B,QAAD,EAAW,CACtC,iBADsC,EAEtC,qBAFsC,EAGtC,WAHsC,EAItC,OAJsC,EAKtC,cALsC,CAAX,CAA7B;AAQA,SAAO;AAAEA,IAAAA,QAAQ,EAAEG;AAAZ,GAAP;AACD,CAzCD;;AA2CA,eAAepB,cAAf","sourcesContent":["import omit from 'lodash/omit';\nimport SimpleSchema from 'simpl-schema';\n\nimport PropertyService from 'core/api/properties/server/PropertyService';\nimport { Meteor } from 'meteor/meteor';\nimport { getImpersonateUserId, checkQuery } from './helpers';\nimport { proProperties } from '../../../properties/queries';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\n\nconst querySchema = new SimpleSchema({\n  'impersonate-user': { type: String, optional: true },\n});\n\nconst getPropertyAPI = ({ user: { _id: userId }, params, query }) => {\n  let { propertyId } = params;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: querySchema,\n  });\n\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId: propertyId },\n    });\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.NOT_FOUND,\n        `No property found for id \"${propertyId}\"`,\n      );\n    }\n  }\n\n  let proId;\n  if (impersonateUser) {\n    proId = getImpersonateUserId({ userId, impersonateUser });\n  }\n\n  const [property] = proProperties\n    .clone({ _id: propertyId })\n    .fetch({ userId: proId || userId });\n\n  const filteredProperty = omit(property, [\n    'adminValidation',\n    'additionalDocuments',\n    'promotion',\n    'users',\n    'organisation',\n  ]);\n\n  return { property: filteredProperty };\n};\n\nexport default getPropertyAPI;\n"]},"passPerPreset":false,"envName":"development","cwd":"/Users/Florian/dev/epotek/microservices/backend","root":"/Users/Florian/dev/epotek/microservices/backend","plugins":[{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/Florian/dev/epotek/microservices/backend/imports/core/api/RESTAPI/server/endpoints/getProperty.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/core/api/RESTAPI/server/endpoints/getProperty.js"}},"code":"let omit;\nmodule.link(\"lodash/omit\", {\n  default(v) {\n    omit = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet PropertyService;\nmodule.link(\"../../../properties/server/PropertyService\", {\n  default(v) {\n    PropertyService = v;\n  }\n\n}, 2);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 3);\nlet getImpersonateUserId, checkQuery;\nmodule.link(\"./helpers\", {\n  getImpersonateUserId(v) {\n    getImpersonateUserId = v;\n  },\n\n  checkQuery(v) {\n    checkQuery = v;\n  }\n\n}, 4);\nlet proProperties;\nmodule.link(\"../../../properties/queries\", {\n  proProperties(v) {\n    proProperties = v;\n  }\n\n}, 5);\nlet HTTP_STATUS_CODES;\nmodule.link(\"../restApiConstants\", {\n  HTTP_STATUS_CODES(v) {\n    HTTP_STATUS_CODES = v;\n  }\n\n}, 6);\nconst querySchema = new SimpleSchema({\n  'impersonate-user': {\n    type: String,\n    optional: true\n  }\n});\n\nconst getPropertyAPI = ({\n  user: {\n    _id: userId\n  },\n  params,\n  query\n}) => {\n  let {\n    propertyId\n  } = params;\n  const {\n    'impersonate-user': impersonateUser\n  } = checkQuery({\n    query,\n    schema: querySchema\n  });\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: {\n        externalId: propertyId\n      }\n    });\n\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(HTTP_STATUS_CODES.NOT_FOUND, `No property found for id \"${propertyId}\"`);\n    }\n  }\n\n  let proId;\n\n  if (impersonateUser) {\n    proId = getImpersonateUserId({\n      userId,\n      impersonateUser\n    });\n  }\n\n  const [property] = proProperties.clone({\n    _id: propertyId\n  }).fetch({\n    userId: proId || userId\n  });\n  const filteredProperty = omit(property, ['adminValidation', 'additionalDocuments', 'promotion', 'users', 'organisation']);\n  return {\n    property: filteredProperty\n  };\n};\n\nmodule.exportDefault(getPropertyAPI);","map":{"version":3,"sources":["imports/core/api/RESTAPI/server/endpoints/getProperty.js"],"names":["omit","querySchema","type","optional","getPropertyAPI","user","_id","userId","query","propertyId","impersonateUser","checkQuery","schema","exists","PropertyService","propertyByExternalId","$filters","externalId","Meteor","HTTP_STATUS_CODES","proId","getImpersonateUserId","filteredProperty","property"],"mappings":"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","sourcesContent":["import omit from 'lodash/omit';\nimport SimpleSchema from 'simpl-schema';\n\nimport PropertyService from 'core/api/properties/server/PropertyService';\nimport { Meteor } from 'meteor/meteor';\nimport { getImpersonateUserId, checkQuery } from './helpers';\nimport { proProperties } from '../../../properties/queries';\nimport { HTTP_STATUS_CODES } from '../restApiConstants';\n\nconst querySchema = new SimpleSchema({\n  'impersonate-user': { type: String, optional: true },\n});\n\nconst getPropertyAPI = ({ user: { _id: userId }, params, query }) => {\n  let { propertyId } = params;\n  const { 'impersonate-user': impersonateUser } = checkQuery({\n    query,\n    schema: querySchema,\n  });\n\n  const exists = PropertyService.exists(propertyId);\n\n  if (!exists) {\n    const propertyByExternalId = PropertyService.fetchOne({\n      $filters: { externalId: propertyId },\n    });\n    if (propertyByExternalId) {\n      propertyId = propertyByExternalId._id;\n    } else {\n      throw new Meteor.Error(\n        HTTP_STATUS_CODES.NOT_FOUND,\n        `No property found for id \"${propertyId}\"`,\n      );\n    }\n  }\n\n  let proId;\n  if (impersonateUser) {\n    proId = getImpersonateUserId({ userId, impersonateUser });\n  }\n\n  const [property] = proProperties\n    .clone({ _id: propertyId })\n    .fetch({ userId: proId || userId });\n\n  const filteredProperty = omit(property, [\n    'adminValidation',\n    'additionalDocuments',\n    'promotion',\n    'users',\n    'organisation',\n  ]);\n\n  return { property: filteredProperty };\n};\n\nexport default getPropertyAPI;\n"]},"sourceType":"script","hash":"29b62e875b7322aa7aa8ffea981b7f7401d3a3f9"}
