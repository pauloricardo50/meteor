{"code":"!function(){var t=Package.meteor.Meteor,e=Package.meteor.global,a=Package.meteor.meteorEnv,n=Package.tracker.Tracker,r=Package.tracker.Deps,o=Package.modules.meteorInstall,i=Package[\"babel-runtime\"].meteorBabelHelpers,c=Package.promise.Promise,s=Package[\"ecmascript-runtime-client\"].Symbol,u=Package[\"ecmascript-runtime-client\"].Map,l=Package[\"ecmascript-runtime-client\"].Set,p,m,f=o({node_modules:{meteor:{\"react-meteor-data\":{\"react-meteor-data.jsx\":function(t,e,a){var n;a.link(\"meteor/tmeasday:check-npm-versions\",{checkNpmVersions:function(t){n=t}},0),a.link(\"./createContainer.jsx\",{default:\"createContainer\"},1),a.link(\"./ReactMeteorData.jsx\",{default:\"withTracker\"},2),a.link(\"./ReactMeteorData.jsx\",{ReactMeteorData:\"ReactMeteorData\"},3),n({react:\"15.3 - 16\"},\"react-meteor-data\")},\"ReactMeteorData.jsx\":function(t,e,a){var n=t(\"@babel/runtime/helpers/interopRequireDefault\"),r=n(t(\"@babel/runtime/helpers/extends\")),o=n(t(\"@babel/runtime/helpers/inheritsLoose\")),c=n(t(\"@babel/runtime/helpers/typeof\")),s,u,l;a.export({ReactMeteorData:function(){return m},default:function(){return d}}),a.link(\"react\",{default:function(t){s=t}},0),a.link(\"meteor/meteor\",{Meteor:function(t){u=t}},1),a.link(\"meteor/tracker\",{Tracker:function(t){l=t}},2);var p=function(){function t(t){this.component=t,this.computation=null,this.oldData=null}var e=t.prototype;return e.dispose=function(){function t(){this.computation&&(this.computation.stop(),this.computation=null)}return t}(),e.calculateData=function(){function t(){var t=this.component,e;return t.getMeteorData?u.isServer?t.getMeteorData():(this.computation&&(this.computation.stop(),this.computation=null),this.computation=l.nonreactive(function(){return l.autorun(function(a){if(a.firstRun){var n=t.setState;try{t.setState=function(){throw new Error('Can\\'t call `setState` inside `getMeteorData` as this could cause an endless loop. To respond to Meteor data changing, consider making this component a \"wrapper component\" that only fetches data and passes it in as props to a child component. Then you can use `componentWillReceiveProps` in that child component.')},e=t.getMeteorData()}finally{t.setState=n}}else a.stop(),t.forceUpdate()})}),Package.mongo&&Package.mongo.Mongo&&Object.keys(e).forEach(function(t){e[t]instanceof Package.mongo.Mongo.Cursor&&console.warn(\"Warning: you are returning a Mongo cursor from getMeteorData. This value will not be reactive. You probably want to call `.fetch()` on the cursor before returning it.\")}),e):null}return t}(),e.updateData=function(){function t(t){var e=this.component,a=this.oldData;if(!t||\"object\"!==(0,c.default)(t))throw new Error(\"Expected object returned from getMeteorData\");for(var n in i.sanitizeForInObject(t))e.data[n]=t[n];if(a)for(var r in i.sanitizeForInObject(a))r in t||delete e.data[r];this.oldData=t}return t}(),t}(),m={componentWillMount:function(){this.data={},this._meteorDataManager=new p(this);var t=this._meteorDataManager.calculateData();this._meteorDataManager.updateData(t)},componentWillUpdate:function(t,e){var a=this.props,n=this.state,r;try{this.props=t,this.state=e,r=this._meteorDataManager.calculateData()}finally{this.props=a,this.state=n}this._meteorDataManager.updateData(r)},componentWillUnmount:function(){this._meteorDataManager.dispose()}},f=function(t){function e(){return t.apply(this,arguments)||this}return(0,o.default)(e,t),e}(s.Component);Object.assign(f.prototype,m);var h=function(t){function e(){return t.apply(this,arguments)||this}return(0,o.default)(e,t),e}(s.PureComponent);function d(t){var e=t;\"function\"==typeof t&&(e={getMeteorData:t});var a=e,n=a.getMeteorData,i=a.pure,c,u=void 0===i||i?h:f;return function(t){return function(e){function a(){return e.apply(this,arguments)||this}(0,o.default)(a,e);var i=a.prototype;return i.getMeteorData=function(){function t(){return n(this.props)}return t}(),i.render=function(){function e(){return s.createElement(t,(0,r.default)({},this.props,this.data))}return e}(),a}(u)}}Object.assign(h.prototype,m)},\"createContainer.jsx\":function(t,e,a){var n,r,o;a.export({default:function(){return c}}),a.link(\"meteor/meteor\",{Meteor:function(t){n=t}},0),a.link(\"react\",{default:function(t){r=t}},1),a.link(\"./ReactMeteorData.jsx\",{default:function(t){o=t}},2);var i=!1;function c(t,e){return!i&&n.isDevelopment&&(console.warn(\"Warning: createContainer was deprecated in react-meteor-data@0.2.13. Use withTracker instead.\\nhttps://github.com/meteor/react-packages/tree/devel/packages/react-meteor-data#usage\"),i=!0),o(t)(e)}}}}}},{extensions:[\".js\",\".json\",\".jsx\"]})(\"/node_modules/meteor/react-meteor-data/react-meteor-data.jsx\");Package._define(\"react-meteor-data\",f,{ReactMeteorData:void 0})}();","sourcemap":"{\"version\":3,\"sources\":[\"packages/react-meteor-data/react-meteor-data.jsx\",\"packages/react-meteor-data/ReactMeteorData.jsx\",\"packages/react-meteor-data/createContainer.jsx\"],\"names\":[\"checkNpmVersions\",\"module\",\"link\",\"v\",\"default\",\"ReactMeteorData\",\"react\",\"React\",\"Meteor\",\"Tracker\",\"export\",\"connect\",\"MeteorDataManager\",\"component\",\"this\",\"computation\",\"oldData\",\"dispose\",\"stop\",\"calculateData\",\"data\",\"getMeteorData\",\"isServer\",\"nonreactive\",\"autorun\",\"c\",\"firstRun\",\"savedSetState\",\"setState\",\"Error\",\"forceUpdate\",\"Package\",\"mongo\",\"Mongo\",\"Object\",\"keys\",\"forEach\",\"key\",\"Cursor\",\"console\",\"warn\",\"updateData\",\"newData\",\"_typeof2\",\"meteorBabelHelpers\",\"sanitizeForInObject\",\"componentWillMount\",\"_meteorDataManager\",\"componentWillUpdate\",\"nextProps\",\"nextState\",\"saveProps\",\"props\",\"saveState\",\"state\",\"componentWillUnmount\",\"ReactComponent\",\"Component\",\"assign\",\"prototype\",\"ReactPureComponent\",\"PureComponent\",\"options\",\"expandedOptions\",\"_expandedOptions\",\"_expandedOptions$pure\",\"pure\",\"BaseComponent\",\"WrappedComponent\",\"_BaseComponent\",\"ReactMeteorDataComponent\",\"apply\",\"arguments\",\"_inheritsLoose2\",\"_proto2\",\"render\",\"createElement\",\"_extends2\",\"createContainer\",\"hasDisplayedWarning\",\"isDevelopment\"],\"mappings\":\"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\",\"sourcesContent\":[\"import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\\n\\ncheckNpmVersions({\\n  react: '15.3 - 16',\\n}, 'react-meteor-data');\\n\\nexport { default as createContainer } from './createContainer.jsx';\\nexport { default as withTracker } from './ReactMeteorData.jsx';\\nexport { ReactMeteorData } from './ReactMeteorData.jsx';\\n\",\"/* global Package */\\n/* eslint-disable react/prefer-stateless-function */\\n\\nimport React from 'react';\\nimport { Meteor } from 'meteor/meteor';\\nimport { Tracker } from 'meteor/tracker';\\n\\n// A class to keep the state and utility methods needed to manage\\n// the Meteor data for a component.\\nclass MeteorDataManager {\\n  constructor(component) {\\n    this.component = component;\\n    this.computation = null;\\n    this.oldData = null;\\n  }\\n\\n  dispose() {\\n    if (this.computation) {\\n      this.computation.stop();\\n      this.computation = null;\\n    }\\n  }\\n\\n  calculateData() {\\n    const component = this.component;\\n\\n    if (!component.getMeteorData) {\\n      return null;\\n    }\\n\\n    // When rendering on the server, we don't want to use the Tracker.\\n    // We only do the first rendering on the server so we can get the data right away\\n    if (Meteor.isServer) {\\n      return component.getMeteorData();\\n    }\\n\\n    if (this.computation) {\\n      this.computation.stop();\\n      this.computation = null;\\n    }\\n\\n    let data;\\n    // Use Tracker.nonreactive in case we are inside a Tracker Computation.\\n    // This can happen if someone calls `ReactDOM.render` inside a Computation.\\n    // In that case, we want to opt out of the normal behavior of nested\\n    // Computations, where if the outer one is invalidated or stopped,\\n    // it stops the inner one.\\n    this.computation = Tracker.nonreactive(() => (\\n      Tracker.autorun((c) => {\\n        if (c.firstRun) {\\n          const savedSetState = component.setState;\\n          try {\\n            component.setState = () => {\\n              throw new Error(\\n                'Can\\\\'t call `setState` inside `getMeteorData` as this could '\\n                + 'cause an endless loop. To respond to Meteor data changing, '\\n                + 'consider making this component a \\\\\\\"wrapper component\\\\\\\" that '\\n                + 'only fetches data and passes it in as props to a child '\\n                + 'component. Then you can use `componentWillReceiveProps` in '\\n                + 'that child component.');\\n            };\\n\\n            data = component.getMeteorData();\\n          } finally {\\n            component.setState = savedSetState;\\n          }\\n        } else {\\n          // Stop this computation instead of using the re-run.\\n          // We use a brand-new autorun for each call to getMeteorData\\n          // to capture dependencies on any reactive data sources that\\n          // are accessed.  The reason we can't use a single autorun\\n          // for the lifetime of the component is that Tracker only\\n          // re-runs autoruns at flush time, while we need to be able to\\n          // re-call getMeteorData synchronously whenever we want, e.g.\\n          // from componentWillUpdate.\\n          c.stop();\\n          // Calling forceUpdate() triggers componentWillUpdate which\\n          // recalculates getMeteorData() and re-renders the component.\\n          component.forceUpdate();\\n        }\\n      })\\n    ));\\n\\n    if (Package.mongo && Package.mongo.Mongo) {\\n      Object.keys(data).forEach((key) => {\\n        if (data[key] instanceof Package.mongo.Mongo.Cursor) {\\n          console.warn(\\n            'Warning: you are returning a Mongo cursor from getMeteorData. '\\n            + 'This value will not be reactive. You probably want to call '\\n            + '`.fetch()` on the cursor before returning it.'\\n          );\\n        }\\n      });\\n    }\\n\\n    return data;\\n  }\\n\\n  updateData(newData) {\\n    const component = this.component;\\n    const oldData = this.oldData;\\n\\n    if (!(newData && (typeof newData) === 'object')) {\\n      throw new Error('Expected object returned from getMeteorData');\\n    }\\n    // update componentData in place based on newData\\n    for (let key in newData) {\\n      component.data[key] = newData[key];\\n    }\\n    // if there is oldData (which is every time this method is called\\n    // except the first), delete keys in newData that aren't in\\n    // oldData.  don't interfere with other keys, in case we are\\n    // co-existing with something else that writes to a component's\\n    // this.data.\\n    if (oldData) {\\n      for (let key in oldData) {\\n        if (!(key in newData)) {\\n          delete component.data[key];\\n        }\\n      }\\n    }\\n    this.oldData = newData;\\n  }\\n}\\n\\nexport const ReactMeteorData = {\\n  componentWillMount() {\\n    this.data = {};\\n    this._meteorDataManager = new MeteorDataManager(this);\\n    const newData = this._meteorDataManager.calculateData();\\n    this._meteorDataManager.updateData(newData);\\n  },\\n\\n  componentWillUpdate(nextProps, nextState) {\\n    const saveProps = this.props;\\n    const saveState = this.state;\\n    let newData;\\n    try {\\n      // Temporarily assign this.state and this.props,\\n      // so that they are seen by getMeteorData!\\n      // This is a simulation of how the proposed Observe API\\n      // for React will work, which calls observe() after\\n      // componentWillUpdate and after props and state are\\n      // updated, but before render() is called.\\n      // See https://github.com/facebook/react/issues/3398.\\n      this.props = nextProps;\\n      this.state = nextState;\\n      newData = this._meteorDataManager.calculateData();\\n    } finally {\\n      this.props = saveProps;\\n      this.state = saveState;\\n    }\\n\\n    this._meteorDataManager.updateData(newData);\\n  },\\n\\n  componentWillUnmount() {\\n    this._meteorDataManager.dispose();\\n  },\\n};\\n\\nclass ReactComponent extends React.Component {}\\nObject.assign(ReactComponent.prototype, ReactMeteorData);\\nclass ReactPureComponent extends React.PureComponent {}\\nObject.assign(ReactPureComponent.prototype, ReactMeteorData);\\n\\nexport default function connect(options) {\\n  let expandedOptions = options;\\n  if (typeof options === 'function') {\\n    expandedOptions = {\\n      getMeteorData: options,\\n    };\\n  }\\n\\n  const { getMeteorData, pure = true } = expandedOptions;\\n\\n  const BaseComponent = pure ? ReactPureComponent : ReactComponent;\\n  return (WrappedComponent) => (\\n    class ReactMeteorDataComponent extends BaseComponent {\\n      getMeteorData() {\\n        return getMeteorData(this.props);\\n      }\\n      render() {\\n        return <WrappedComponent {...this.props} {...this.data} />;\\n      }\\n    }\\n  );\\n}\\n\",\"/**\\n * Container helper using react-meteor-data.\\n */\\n\\nimport { Meteor } from 'meteor/meteor';\\nimport React from 'react';\\nimport connect from './ReactMeteorData.jsx';\\n\\nlet hasDisplayedWarning = false;\\n\\nexport default function createContainer(options, Component) {\\n  if (!hasDisplayedWarning && Meteor.isDevelopment) {\\n    console.warn(\\n      'Warning: createContainer was deprecated in react-meteor-data@0.2.13. Use withTracker instead.\\\\n' +\\n        'https://github.com/meteor/react-packages/tree/devel/packages/react-meteor-data#usage',\\n    );\\n    hasDisplayedWarning = true;\\n  }\\n\\n  return connect(options)(Component);\\n}\\n\"]}","minifier":"terser"}