{"code":"!function(){var e=Package.meteor.Meteor,t=Package.meteor.global,i=Package.meteor.meteorEnv,n=Package.underscore._,r=Package.promise.Promise,o=Package.check.check,s=Package.check.Match,a=Package[\"reactive-var\"].ReactiveVar,l=Package.mongo.Mongo,c=Package[\"matb33:collection-hooks\"].CollectionHooks,u=Package.modules.meteorInstall,d=Package[\"babel-runtime\"].meteorBabelHelpers,h,f,p,m,g,k,y,b=u({node_modules:{meteor:{\"cultofcoders:grapher\":{\"main.client.js\":function(e,t,i){i.link(\"./lib/extension.js\"),i.link(\"./lib/links/extension.js\"),i.link(\"./lib/query/reducers/extension.js\"),i.link(\"./lib/createQuery.js\",{default:\"createQuery\"},0),i.link(\"./lib/query/lib/prepareForProcess\",{default:\"prepareForProcess\"},1),i.link(\"./lib/query/query.client\",{default:\"Query\"},2),i.link(\"./lib/namedQuery/namedQuery.client\",{default:\"NamedQuery\"},3),i.link(\"./lib/compose\",{default:\"compose\"},4)},lib:{\"compose.js\":function(e,t,i){let n;i.link(\"deep-extend\",{default(e){n=e}},0),i.exportDefault(function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return n({},...t)})},\"createQuery.js\":function(t,i,r){let o,s,a;function c(e,t,i){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const r=a.get(e);let o;return r?o=r.clone(n.params):(o=new s(e,t,i,n),a.add(e,o)),o}function u(e,t,i){return new o(e,t,i)}r.link(\"./query/query.js\",{default(e){o=e}},0),r.link(\"./namedQuery/namedQuery.js\",{default(e){s=e}},1),r.link(\"./namedQuery/store.js\",{default(e){a=e}},2),r.exportDefault(function(){for(var t=arguments.length,i=new Array(t),r=0;r<t;r++)i[r]=arguments[r];if(\"string\"==typeof i[0]){let[t,r,o]=i;if(o=o||{},n.isFunction(r))return c(t,null,r,o);const s=n.first(n.keys(r)),a=l.Collection.get(s);if(!a)throw new e.Error(\"invalid-name\",'We could not find any collection with the name \"'.concat(s,'\". Make sure it is imported prior to using this'));return c(t,a,r[s],o)}{let[t,r]=i;r=r||{};const o=n.first(n.keys(t)),s=l.Collection.get(o);return s?u(s,t[o],r):(e.isDevelopment&&!a.get(o)&&console.warn('You are creating a query with the entry point \"'.concat(o,\"\\\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.\")),c(o,null,{},{params:t[o]}))}})},\"extension.js\":function(e,t,i){let r,o,s;i.link(\"./query/query.js\",{default(e){r=e}},0),i.link(\"./namedQuery/namedQuery.js\",{default(e){o=e}},1),i.link(\"./namedQuery/store.js\",{default(e){s=e}},2),n.extend(l.Collection.prototype,{createQuery(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];if(\"string\"==typeof t[0]){const[e,i,n]=t,r=new o(e,this,i,n);return s.add(e,r),r}{const[e,i]=t;return new r(this,e,i)}}})},links:{\"config.schema.js\":function(e,t,i){let r,o;i.export({DenormalizeSchema:()=>s,LinkConfigDefaults:()=>a,LinkConfigSchema:()=>l}),i.link(\"meteor/check\",{Match(e){r=e}},0),i.link(\"meteor/mongo\",{Mongo(e){o=e}},1);const s={field:String,body:Object,bypassSchema:r.Maybe(Boolean)},a={type:\"one\"},l={type:r.Maybe(r.OneOf(\"one\",\"many\",\"1\",\"*\")),collection:r.Maybe(r.Where(e=>n.isObject(e)&&(e instanceof o.Collection||!!e._collection))),field:r.Maybe(String),metadata:r.Maybe(Boolean),inversedBy:r.Maybe(String),index:r.Maybe(Boolean),unique:r.Maybe(Boolean),autoremove:r.Maybe(Boolean),denormalize:r.Maybe(r.ObjectIncluding(s))}},\"constants.js\":function(e,t,i){i.export({LINK_STORAGE:()=>n});const n=\"__links\"},\"extension.js\":function(t,i,r){let o,s,a;r.link(\"meteor/mongo\",{Mongo(e){o=e}},0),r.link(\"./constants.js\",{LINK_STORAGE(e){s=e}},1),r.link(\"./linker.js\",{default(e){a=e}},2),Object.assign(o.Collection.prototype,{addLinks(t){this[s]||(this[s]={}),n.each(t,(t,i)=>{if(this[s][i])throw new e.Error(\"You cannot add the link with name: \".concat(i,\" because it was already added to \").concat(this._name,\" collection\"));const r=new a(this,i,t);n.extend(this[s],{[i]:r})})},getLinks(){return this[s]},getLinker(e){if(this[s])return this[s][e]},hasLink(e){return!!this[s]&&!!this[s][e]},getLink(t,i){let n=this[s];if(!n)throw new e.Error(\"There are no links defined for collection: \".concat(this._name));if(!n[i])throw new e.Error(\"There is no link \".concat(i,\" for collection: \").concat(this._name));const r=n[i];let o=t;if(\"string\"==typeof t&&!(o=r.isVirtual()?{_id:t}:this.findOne(t,{fields:{[r.linkStorageField]:1}})))throw new e.Error('We could not find any object with _id: \"'.concat(t,'\" within the collection: ').concat(this._name));return n[i].createLink(o)}})},\"linker.js\":function(t,i,n){let r,o,s,a,c,u,d,h,f,p,m;n.export({default:()=>g}),n.link(\"./linkTypes/linkMany.js\",{default(e){r=e}},0),n.link(\"./linkTypes/linkManyMeta.js\",{default(e){o=e}},1),n.link(\"./linkTypes/linkOne.js\",{default(e){s=e}},2),n.link(\"./linkTypes/linkOneMeta.js\",{default(e){a=e}},3),n.link(\"./config.schema.js\",{LinkConfigSchema(e){c=e},LinkConfigDefaults(e){u=e}},4),n.link(\"./linkTypes/lib/smartArguments\",{default(e){d=e}},5),n.link(\"dot-object\",{default(e){h=e}},6),n.link(\"meteor/check\",{check(e){f=e}},7),n.link(\"meteor/underscore\",{_(e){p=e}},8),n.link(\"fs\",{access(e){m=e}},9);class g{constructor(e,t,i){this.mainCollection=e,this.linkConfig=Object.assign({},u,i),this.linkName=t,this._validateAndClean(),this._initAutoremove(),this._initDenormalization(),this.isVirtual()?i.autoremove||this._handleReferenceRemovalForVirtualLinks():this._initIndex()}get oneTypes(){return[\"one\",\"1\"]}get strategy(){let e=this.isMany()?\"many\":\"one\";return this.linkConfig.metadata&&(e+=\"-meta\"),e}get linkStorageField(){return this.isVirtual()?this.linkConfig.relatedLinker.linkStorageField:this.linkConfig.field}getLinkedCollection(){return this.linkConfig.collection}isMany(){return!this.isSingle()}isMeta(){return this.isVirtual()?this.linkConfig.relatedLinker.isMeta():!!this.linkConfig.metadata}isSingle(){return this.isVirtual()?this.linkConfig.relatedLinker.isSingle():p.contains(this.oneTypes,this.linkConfig.type)}isVirtual(){return!!this.linkConfig.inversedBy}isOneResult(){return this.isVirtual()&&this.linkConfig.relatedLinker.linkConfig.unique||!this.isVirtual()&&this.isSingle()}createLink(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i;return new(this._getHelperClass())(this,e,t)}_validateAndClean(){if(!this.linkConfig.collection)throw new e.Error(\"invalid-config\",\"For the link \".concat(this.linkName,\" you did not provide a collection.\"));if(\"string\"==typeof this.linkConfig.collection){const t=this.linkConfig.collection;if(this.linkConfig.collection=l.Collection.get(t),!this.linkConfig.collection)throw new e.Error(\"invalid-collection\",\"Could not find a collection with the name: \".concat(t))}if(this.isVirtual())return this._prepareVirtual();if(this.linkConfig.type||(this.linkConfig.type=\"one\"),this.linkConfig.field){if(this.linkConfig.field==this.linkName)throw new e.Error(\"invalid-config\",\"For the link \".concat(this.linkName,\" you must not use the same name for the field, otherwise it will cause conflicts when fetching data\"))}else this.linkConfig.field=this._generateFieldName();f(this.linkConfig,c)}_prepareVirtual(){const{collection:t,inversedBy:i}=this.linkConfig;let n=t.getLinker(i);n?this._setupVirtualConfig(n):e.startup(()=>{if(!(n=t.getLinker(i)))throw new e.Error('You tried setting up an inversed link in \"'.concat(this.mainCollection._name,'\" pointing to collection: \"').concat(t._name,'\" link: \"').concat(i,'\", but no such link was found. Maybe a typo ?'));this._setupVirtualConfig(n)})}_setupVirtualConfig(t){const i=t.linkConfig;if(!i)throw new e.Error(\"There is no link-config for the related collection on \".concat(inversedBy,\". Make sure you added the direct links before specifying virtual ones.\"));p.extend(this.linkConfig,{metadata:i.metadata,relatedLinker:t})}_getHelperClass(){switch(this.strategy){case\"many-meta\":return o;case\"many\":return r;case\"one-meta\":return a;case\"one\":return s}throw new e.Error(\"invalid-strategy\",\"\".concat(this.strategy,\" is not a valid strategy\"))}_generateFieldName(){let e=this.linkConfig.collection._name.replace(/\\./g,\"_\"),t=this.linkName+\"_\"+e;switch(this.strategy){case\"many-meta\":return\"\".concat(t,\"_metas\");case\"many\":return\"\".concat(t,\"_ids\");case\"one-meta\":return\"\".concat(t,\"_meta\");case\"one\":return\"\".concat(t,\"_id\")}}_handleReferenceRemovalForVirtualLinks(){this.mainCollection.after.remove((e,t)=>{if(!this.linkConfig.relatedLinker)return void console.warn('There was an error finding the link for removal for collection: \"'.concat(this.mainCollection._name,'\" with link: \"').concat(this.linkName,'\". This may occur when you do a .remove() before Meteor.startup()'));const i=this.createLink(t);p.each(i.fetchAsArray(),e=>{const{relatedLinker:i}=this.linkConfig;if(i){let n=i.createLink(e);i.isSingle()?n.unset():n.remove(t)}})})}_initIndex(){if(e.isServer){let t=this.linkConfig.field;if(this.linkConfig.metadata&&(t+=\"._id\"),this.linkConfig.index){if(this.isVirtual())throw new e.Error(\"You cannot set index on an inversed link.\");let i;this.linkConfig.unique&&(i={unique:!0}),this.mainCollection._ensureIndex({[t]:1},i)}else if(this.linkConfig.unique){if(this.isVirtual())throw new e.Error(\"You cannot set unique property on an inversed link.\");this.mainCollection._ensureIndex({[t]:1},{unique:!0,sparse:!0})}}}_initAutoremove(){this.linkConfig.autoremove&&(this.isVirtual()?this.mainCollection.after.remove((e,t)=>{const i=this.mainCollection.getLink(t,this.linkName),n=i.find({},{fields:{_id:1}}).fetch().map(e=>e._id);this.getLinkedCollection().remove({_id:{$in:n}})}):this.mainCollection.after.remove((e,t)=>{this.getLinkedCollection().remove({_id:{$in:d.getIds(t[this.linkStorageField])}})}))}_initDenormalization(){if(!this.linkConfig.denormalize||!e.isServer)return;const t=!!Package[\"herteby:denormalize\"];if(!t)throw new e.Error(\"missing-package\",\"Please add the herteby:denormalize package to your Meteor application in order to make caching work\");const{field:i,body:n,bypassSchema:r}=this.linkConfig.denormalize;let o,s=\"\";if(this.isMeta()&&(s=this.isSingle()?\"._id\":\":_id\"),this.isVirtual()){let e=this.linkConfig.relatedLinker.linkConfig,t=\"many\"==e.type?\"many-inverse\":\"inversed\";o={type:t,collection:this.linkConfig.collection,fields:n,referenceField:e.field+s,cacheField:i,bypassSchema:!!r}}else o={type:this.linkConfig.type,collection:this.linkConfig.collection,fields:n,referenceField:this.linkConfig.field+s,cacheField:i,bypassSchema:!!r};this.isVirtual()?e.startup(()=>{this.mainCollection.cache(o)}):this.mainCollection.cache(o)}isDenormalized(){return!!this.linkConfig.denormalize}isSubBodyDenormalized(e){const t=this.linkConfig.denormalize.body,i=p.keys(h.dot(t)),n=p.keys(h.dot(p.omit(e,\"_id\")));return 0===p.difference(n,i).length}}},lib:{\"createSearchFilters.js\":function(t,i,r){let o,s;function a(t,i,n,r,o){if(r)switch(n){case\"one\":return c(t,i);case\"one-meta\":return d(t,i,o);case\"many\":return f(t,i);case\"many-meta\":return m(t,i,o);default:throw new e.Error(\"Invalid linking strategy: \".concat(n))}else switch(n){case\"one\":return l(t,i);case\"one-meta\":return u(t,i,o);case\"many\":return h(t,i);case\"many-meta\":return p(t,i,o);default:throw new e.Error(\"Invalid linking strategy: \".concat(n))}}function l(e,t){return{_id:s.pick(t,e)}}function c(e,t){return{[t]:e._id}}function u(e,t,i){const n=e[t];return i&&!o(i)(n)?{_id:void 0}:{_id:n?n._id:n}}function d(e,t,i){let r={};return i&&n.each(i,(e,i)=>{r[t+\".\"+i]=e}),r[t+\"._id\"]=e._id,r}function h(e,t){const[i,...r]=t.split(\".\");if(r.length>0){const t=e[i],o=t?n.uniq(n.union(t.map(e=>n.isObject(e)?s.pick(r.join(\".\"),e):[]))):[];return{_id:{$in:o}}}return{_id:{$in:e[t]||[]}}}function f(e,t){return{[t]:e._id}}function p(e,t,i){let r=e[t];return i&&(r=o(i,r)),{_id:{$in:n.pluck(r,\"_id\")||[]}}}function m(e,t,i){let r={};return i&&n.each(i,(e,t)=>{r[t]=e}),r._id=e._id,{[t]:{$elemMatch:r}}}r.export({default:()=>a,createOne:()=>l,createOneVirtual:()=>c,createOneMeta:()=>u,createOneMetaVirtual:()=>d,createMany:()=>h,createManyVirtual:()=>f,createManyMeta:()=>p,createManyMetaVirtual:()=>m}),r.link(\"sift\",{default(e){o=e}},0),r.link(\"dot-object\",{default(e){s=e}},1)}},linkTypes:{\"base.js\":function(t,i,r){let o,s;r.export({default:()=>a}),r.link(\"./lib/smartArguments.js\",{default(e){o=e}},0),r.link(\"../lib/createSearchFilters\",{default(e){s=e}},1);class a{get config(){return this.linker.linkConfig}get isVirtual(){return this.linker.isVirtual()}constructor(e,t,i){this.linker=e,this.object=t,this.linkedCollection=i||e.getLinkedCollection(),this.linker.isVirtual()?this.linkStorageField=this.config.relatedLinker.linkConfig.field:this.linkStorageField=this.config.field}value(){if(this.isVirtual)throw new e.Error(\"You can only take the value from the main link.\");return this.object[this.linkStorageField]}find(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,r=this.linker;const o=this.linkedCollection;let a;e.$meta&&(a=e.$meta,delete e.$meta);const l=s(this.object,this.linkStorageField,r.strategy,r.isVirtual(),a);let c=n.extend({},e,l);return o.find?o.find(c,t,i):o.default.find(c,t,i)}fetch(e,t){for(var i=arguments.length,r=new Array(i>2?i-2:0),o=2;o<i;o++)r[o-2]=arguments[o];let s=this.find(e,t,...r).fetch();return this.linker.isOneResult()?n.first(s):s}fetchAsArray(e,t){for(var i=arguments.length,n=new Array(i>2?i-2:0),r=2;r<i;r++)n[r-2]=arguments[r];return this.find(e,t,...n).fetch()}clean(){}identifyId(e,t){return o.getId(e,{saveToDatabase:t,collection:this.linkedCollection})}identifyIds(e,t){return o.getIds(e,{saveToDatabase:t,collection:this.linkedCollection})}_validateIds(t){n.isArray(t)||(t=[t]);const i=this.linkedCollection.find({_id:{$in:t}},{fields:{_id:1}}).fetch().map(e=>e._id);if(i.length!=t.length)throw new e.Error(\"not-found\",'You tried to create links with non-existing id(s) inside \"'.concat(this.linkedCollection._name,'\": ').concat(n.difference(t,i).join(\", \")))}_virtualAction(e,t,i){const r=this.linker.linkConfig.relatedLinker;if(void 0!==t)return n.isArray(t)||(t=[t]),t=n.map(t,e=>{if(n.isObject(e)){if(!e._id){const t=r.mainCollection.insert(e);n.extend(e,r.mainCollection.findOne(t))}return e}return r.mainCollection.findOne(e)}),n.map(t,t=>{const n=r.createLink(t);if(\"metadata\"==e)return r.isSingle()?n.metadata(i):n.metadata(this.object,i);\"add\"==e||\"set\"==e?r.isSingle()?n.set(this.object,i):n.add(this.object,i):r.isSingle()?n.unset():n.remove(this.object)});{const e=r.createLink(this.fetch());e.unset()}}}},\"linkMany.js\":function(t,i,r){let o,s,a;r.export({default:()=>l}),r.link(\"./base.js\",{default(e){o=e}},0),r.link(\"dot-object\",{default(e){s=e}},1),r.link(\"./lib/smartArguments.js\",{default(e){a=e}},2);class l extends o{clean(){this.object[this.linkStorageField]||(this.object[this.linkStorageField]=[])}add(e){if(this.isVirtual)return this._virtualAction(\"add\",e),this;this.clean();const t=this.identifyIds(e,!0);this._validateIds(t);const i=this.linkStorageField;this.object[i]=n.union(this.object[i],t);let r={$addToSet:{[i]:{$each:t}}};return this.linker.mainCollection.update(this.object._id,r),this}remove(t){if(this.isVirtual)return this._virtualAction(\"remove\",t),this;if(this.isVirtual)throw new e.Error(\"not-allowed\",\"Add/Remove operations should be done from the owner of the relationship\");this.clean();const i=this.linkStorageField,[r,...o]=i.split(\".\"),a=this.identifyIds(t);this.object[r]=n.filter(this.object[r],e=>!n.contains(a,o.length>0?s.pick(o.join(\".\"),e):e));let l={$pull:{[r]:o.length>0?{[o.join(\".\")]:{$in:a}}:{$in:a}}};return this.linker.mainCollection.update(this.object._id,l),this}set(t){if(this.isVirtual)return this._virtualAction(\"set\",t),this;throw new e.Error(\"invalid-command\",\"You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships\")}unset(t){if(this.isVirtual)return this._virtualAction(\"unset\",t),this;throw new e.Error(\"invalid-command\",\"You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships\")}}},\"linkManyMeta.js\":function(t,i,r){let o,s;r.export({default:()=>a}),r.link(\"./base.js\",{default(e){o=e}},0),r.link(\"./lib/smartArguments.js\",{default(e){s=e}},1);class a extends o{clean(){this.object[this.linkStorageField]||(this.object[this.linkStorageField]=[])}add(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.isVirtual)return this._virtualAction(\"add\",e,t),this;const i=this.identifyIds(e,!0);this._validateIds(i);let r=this.linkStorageField;this.object[r]=this.object[r]||[];let o=[];n.each(i,e=>{let i=n.clone(t);i._id=e,this.object[r].push(i),o.push(i)});let s={$addToSet:{[r]:{$each:o}}};return this.linker.mainCollection.update(this.object._id,s),this}metadata(t,i){if(this.isVirtual)return this._virtualAction(\"metadata\",t,i),this;let r=this.linkStorageField;if(void 0===t)return this.object[r];if(n.isArray(t))throw new e.Error(\"not-allowed\",\"Metadata updates should be made for one entity only, not multiple\");const o=this.identifyId(t);let s=n.find(this.object[r],e=>e._id==o);if(void 0===i)return s;{n.extend(s,i);let e=r+\"._id\",t=r+\".$\";this.linker.mainCollection.update({_id:this.object._id,[e]:o},{$set:{[t]:s}})}return this}remove(e){if(this.isVirtual)return this._virtualAction(\"remove\",e),this;const t=this.identifyIds(e);let i=this.linkStorageField;this.object[i]=n.filter(this.object[i],e=>!n.contains(t,e._id));let r={$pull:{[i]:{_id:{$in:t}}}};return this.linker.mainCollection.update(this.object._id,r),this}set(t,i){if(this.isVirtual)return this._virtualAction(\"set\",t,i),this;throw new e.Error(\"invalid-command\",\"You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships\")}unset(t){if(this.isVirtual)return this._virtualAction(\"unset\",t),this;throw new e.Error(\"invalid-command\",\"You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships\")}}},\"linkOne.js\":function(t,i,n){let r,o;n.export({default:()=>s}),n.link(\"./base.js\",{default(e){r=e}},0),n.link(\"./lib/smartArguments.js\",{default(e){o=e}},1);class s extends r{set(e){if(this.isVirtual)return this._virtualAction(\"set\",e),this;let t=this.linkStorageField;const i=this.identifyId(e,!0);return this._validateIds([i]),this.object[t]=i,this.linker.mainCollection.update(this.object._id,{$set:{[t]:i}}),this}unset(){if(this.isVirtual)return this._virtualAction(\"unset\",f),this;let e=this.linkStorageField;return this.object[e]=null,this.linker.mainCollection.update(this.object._id,{$set:{[e]:null}}),this}add(t){if(this.isVirtual)return this._virtualAction(\"add\",t),this;throw new e.Error(\"invalid-command\",\"You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships\")}remove(t){if(this.isVirtual)return this._virtualAction(\"remove\",t),this;throw new e.Error(\"invalid-command\",\"You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships\")}}},\"linkOneMeta.js\":function(t,i,r){let o,s;r.export({default:()=>a}),r.link(\"./base.js\",{default(e){o=e}},0),r.link(\"./lib/smartArguments.js\",{default(e){s=e}},1);class a extends o{set(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.isVirtual)return this._virtualAction(\"set\",e),this;let i=this.linkStorageField;return t._id=this.identifyId(e,!0),this._validateIds([t._id]),this.object[i]=t,this.linker.mainCollection.update(this.object._id,{$set:{[i]:t}}),this}metadata(e){if(this.isVirtual)return this._virtualAction(\"metadata\",void 0,e),this;let t=this.linkStorageField;return e?(n.extend(this.object[t],e),this.linker.mainCollection.update(this.object._id,{$set:{[t]:this.object[t]}}),this):this.object[t]}unset(){if(this.isVirtual)return this._virtualAction(\"unset\"),this;let e=this.linkStorageField;return this.object[e]={},this.linker.mainCollection.update(this.object._id,{$set:{[e]:{}}}),this}add(t,i){if(this.isVirtual)return this._virtualAction(\"add\",t,i),this;throw new e.Error(\"invalid-command\",\"You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships\")}remove(t){if(this.isVirtual)return this._virtualAction(\"remove\",t),this;throw new e.Error(\"invalid-command\",\"You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships\")}}},lib:{\"smartArguments.js\":function(e,t,i){i.exportDefault(new class{getIds(e,t){return n.isArray(e)?n.map(e,e=>this.getId(e,t)):[this.getId(e,t)]}getId(e,t){return\"string\"==typeof e?e:\"object\"==typeof e?(!e._id&&t.saveToDatabase&&(e._id=t.collection.insert(e)),e._id):void 0}})}}}},namedQuery:{\"namedQuery.base.js\":function(e,t,i){var r,s=e(\"@babel/runtime/helpers/interopRequireDefault\")(e(\"@babel/runtime/helpers/objectSpread\"));let a;i.export({default:()=>c}),i.link(\"lodash.clonedeep\",{default(e){a=e}},0);let l={};class c{static setConfig(e){l=e}static getConfig(){return l}constructor(e,t,i){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.isNamedQuery=!0,this.queryName=e,n.isFunction(i)?this.resolver=i:this.body=a(i),this.subscriptionHandle=null,this.params=r.params||{},this.options=Object.assign({},l,r),this.collection=t,this.isExposed=!1}get name(){return\"named_query_\".concat(this.queryName)}get isResolver(){return!!this.resolver}setParams(e){return this.params=n.extend({},this.params,e),this}doValidateParams(e){e=e||this.params;const{validateParams:t}=this.options;if(t)try{this._validate(t,e)}catch(e){throw console.error('Invalid parameters supplied to the query \"'.concat(this.queryName,'\"\\n'),e),e}}clone(e){const t=n.extend({},a(this.params),e);let i=new this.constructor(this.queryName,this.collection,this.isResolver?this.resolver:a(this.body),(0,s.default)({},this.options,{params:t}));return i.cacher=this.cacher,this.exposeConfig&&(i.exposeConfig=this.exposeConfig),i}_validate(e,t){n.isFunction(e)?e.call(null,t):o(t,e)}}c.defaultOptions={}},\"namedQuery.client.js\":function(t,i,n){let r,o,s,a,l,c,u,d,h;n.link(\"../query/counts/countSubscription\",{default(e){r=e}},0),n.link(\"../query/lib/createGraph.js\",{default(e){o=e}},1),n.link(\"../query/lib/recursiveFetch.js\",{default(e){s=e}},2),n.link(\"../query/lib/prepareForProcess.js\",{default(e){a=e}},3),n.link(\"meteor/underscore\",{_(e){l=e}},4),n.link(\"../query/lib/callWithPromise\",{default(e){c=e}},5),n.link(\"./namedQuery.base\",{default(e){u=e}},6),n.link(\"meteor/minimongo\",{LocalCollection(e){d=e}},7),n.link(\"../query/lib/intersectDeep\",{default(e){h=e}},8),n.exportDefault(class extends u{subscribe(t){if(this.isResolver)throw new e.Error(\"not-allowed\",\"You cannot subscribe to a resolver query\");return this.subscriptionHandle=e.subscribe(this.name,this.params,t),this.subscriptionHandle}subscribeCount(t){if(this.isResolver)throw new e.Error(\"not-allowed\",\"You cannot subscribe to a resolver query\");return this._counter||(this._counter=new r(this)),this._counter.subscribe(this.params,t)}unsubscribe(){this.subscriptionHandle&&this.subscriptionHandle.stop(),this.subscriptionHandle=null}unsubscribeCount(){this._counter&&(this._counter.unsubscribe(),this._counter=null)}async fetchSync(){if(this.subscriptionHandle)throw new e.Error(\"This query is reactive, meaning you cannot use promises to fetch the data.\");return await c(this.name,this.params)}async fetchOneSync(){return l.first(await this.fetchSync())}fetch(e){return this.subscriptionHandle?this._fetchReactive(e):this._fetchStatic(e)}fetchOne(){if(this.subscriptionHandle)return l.first(this.fetch(...arguments));{const t=arguments.length<=0?void 0:arguments[0];if(!l.isFunction(t))throw new e.Error(\"You did not provide a valid callback\");this.fetch((e,i)=>{t(e,i?l.first(i):null)})}}async getCountSync(){if(this._counter)throw new e.Error(\"This query is reactive, meaning you cannot use promises to fetch the data.\");return await c(this.name+\".count\",this.params)}getCount(t){if(this._counter)return this._counter.getCount();if(t)return e.call(this.name+\".count\",this.params,t);throw new e.Error(\"not-allowed\",\"You are on client so you must either provide a callback to get the count or subscribe first.\")}_fetchStatic(t){if(!t)throw new e.Error(\"not-allowed\",\"You are on client so you must either provide a callback to get the data or subscribe first.\");e.call(this.name,this.params,t)}_fetchReactive(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=this.body;return this.params.$body&&(t=h(t,this.params.$body)),t=a(t,this.params),!e.allowSkip&&t.$options&&t.$options.skip&&delete t.$options.skip,s(o(this.collection,t),void 0,{scoped:this.options.scoped,subscriptionHandle:this.subscriptionHandle})}})},\"namedQuery.js\":function(t,i,n){let r,o,s;n.link(\"./namedQuery.client\",{default(e){r=e}},0),n.link(\"./namedQuery.server\",{default(e){o=e}},1),s=e.isServer?o:r,n.exportDefault(s)},\"namedQuery.server.js\":function(t,i,r){let o,s,a,l,c;r.link(\"../query/lib/prepareForProcess.js\",{default(e){o=e}},0),r.link(\"./namedQuery.base\",{default(e){s=e}},1),r.link(\"lodash.clonedeep\",{default(e){a=e}},2),r.link(\"./cache/MemoryResultCacher\",{default(e){l=e}},3),r.link(\"../query/lib/intersectDeep\",{default(e){c=e}},4),r.exportDefault(class extends s{fetch(e){if(this._performSecurityChecks(e,this.params),this.isResolver)return this._fetchResolverData(e);{m=a(this.body),this.params.$body&&(m=c(m,this.params.$body)),this.doEmbodimentIfItApplies(m,this.params);const e=this.collection.createQuery(a(m),{params:a(this.params)});if(this.cacher){const t=this.cacher.generateQueryId(this.queryName,this.params);return this.cacher.fetch(t,{query:e})}return e.fetch()}}fetchOne(){return n.first(this.fetch(...arguments))}getCount(e){this._performSecurityChecks(e,this.params);const t=this.getCursorForCounting();if(this.cacher){const e=\"count::\"+this.cacher.generateQueryId(this.queryName,this.params);return this.cacher.fetch(e,{countCursor:t})}return t.count()}getCursorForCounting(){let e=a(this.body);return this.doEmbodimentIfItApplies(e,this.params),e=o(e,this.params),this.collection.find(e.$filters||{},{fields:{_id:1}})}cacheResults(e){e||(e=new l),this.cacher=e}resolve(t){if(!this.isResolver)throw new e.Error(\"invalid-call\",\"You cannot use resolve() on a non resolver NamedQuery\");this.resolver=t}_fetchResolverData(e){const t=this.resolver,i=this,n={fetch:()=>t.call(e,i.params)};if(this.cacher){const e=this.cacher.generateQueryId(this.queryName,this.params);return this.cacher.fetch(e,{query:n})}return n.fetch()}_performSecurityChecks(e,t){e&&this.exposeConfig&&this._callFirewall(e,e.userId,t),this.doValidateParams(t)}})},\"store.js\":function(t,i,n){n.exportDefault(new class{constructor(){this.storage={}}add(t,i){if(this.storage[t])throw new e.Error(\"invalid-name\",'You have previously defined another namedQuery with the same name: \"'.concat(t,'\". Named Query names should be unique.'));this.storage[t]=i}get(e){return this.storage[e]}getAll(){return this.storage}})},cache:{\"BaseResultCacher.js\":function(e,t,i){let n;i.export({default:()=>r}),i.link(\"meteor/ejson\",{EJSON(e){n=e}},0);class r{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.config=e}generateQueryId(e,t){return\"\".concat(e,\"::\").concat(n.stringify(t))}fetch(e,t){let{query:i,countCursor:n}=t;throw\"Not implemented\"}static fetchData(e){let{query:t,countCursor:i}=e;return t?t.fetch():i.count()}}},\"MemoryResultCacher.js\":function(e,t,i){let n,r,o;i.export({default:()=>a}),i.link(\"meteor/meteor\",{Meteor(e){n=e}},0),i.link(\"lodash.clonedeep\",{default(e){r=e}},1),i.link(\"./BaseResultCacher\",{default(e){o=e}},2);const s=6e4;class a extends o{constructor(){let e;super(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}),this.store={}}fetch(e,t){let{query:i,countCursor:n}=t;const s=this.store[e];if(void 0!==s)return r(s);const a=o.fetchData({query:i,countCursor:n});return this.storeData(e,a),a}storeData(e,t){const i=this.config.ttl||s;this.store[e]=r(t),n.setTimeout(()=>{delete this.store[e]},i)}}}}},query:{\"query.base.js\":function(e,t,i){var r,o=e(\"@babel/runtime/helpers/interopRequireDefault\")(e(\"@babel/runtime/helpers/objectSpread\"));let s,a;i.export({default:()=>l}),i.link(\"lodash.clonedeep\",{default(e){s=e}},0),i.link(\"meteor/check\",{check(e){a=e}},1);class l{constructor(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.isGlobalQuery=!0,this.collection=e,this.body=s(t),this.params=i.params||{},this.options=i}clone(e){const t=n.extend({},s(this.params),e);return new this.constructor(this.collection,s(this.body),(0,o.default)({params:t},this.options))}get name(){return\"exposure_\".concat(this.collection._name)}doValidateParams(){const{validateParams:e}=this.options;e&&(n.isFunction(e)?e.call(null,this.params):a(this.params))}setParams(e){return this.params=n.extend({},this.params,e),this}}},\"query.client.js\":function(t,i,n){let r,o,s,a,l,c,u;n.export({default:()=>d}),n.link(\"meteor/underscore\",{_(e){r=e}},0),n.link(\"./counts/countSubscription\",{default(e){o=e}},1),n.link(\"./lib/createGraph.js\",{default(e){s=e}},2),n.link(\"./lib/recursiveFetch.js\",{default(e){a=e}},3),n.link(\"./lib/prepareForProcess.js\",{default(e){l=e}},4),n.link(\"./lib/callWithPromise\",{default(e){c=e}},5),n.link(\"./query.base\",{default(e){u=e}},6);class d extends u{subscribe(t){return this.doValidateParams(),this.subscriptionHandle=e.subscribe(this.name,l(this.body,this.params),t),this.subscriptionHandle}subscribeCount(e){return this.doValidateParams(),this._counter||(this._counter=new o(this)),this._counter.subscribe(l(this.body,this.params),e)}unsubscribe(){this.subscriptionHandle&&this.subscriptionHandle.stop(),this.subscriptionHandle=null}unsubscribeCount(){this._counter&&(this._counter.unsubscribe(),this._counter=null)}async fetchSync(){if(this.doValidateParams(),this.subscriptionHandle)throw new e.Error(\"This query is reactive, meaning you cannot use promises to fetch the data.\");return await c(this.name,l(this.body,this.params))}async fetchOneSync(){return r.first(await this.fetchSync())}fetch(e){return this.doValidateParams(),this.subscriptionHandle?this._fetchReactive(e):this._fetchStatic(e)}fetchOne(){if(this.subscriptionHandle)return r.first(this.fetch(...arguments));{const t=arguments.length<=0?void 0:arguments[0];if(!r.isFunction(t))throw new e.Error(\"You did not provide a valid callback\");this.fetch((e,i)=>{t(e,i?r.first(i):null)})}}async getCountSync(){if(this._counter)throw new e.Error(\"This query is reactive, meaning you cannot use promises to fetch the data.\");return await c(this.name+\".count\",l(this.body,this.params))}getCount(t){if(this._counter)return this._counter.getCount();if(t)return e.call(this.name+\".count\",l(this.body,this.params),t);throw new e.Error(\"not-allowed\",\"You are on client so you must either provide a callback to get the count or subscribe first.\")}_fetchStatic(t){if(!t)throw new e.Error(\"not-allowed\",\"You are on client so you must either provide a callback to get the data or subscribe first.\");e.call(this.name,l(this.body,this.params),t)}_fetchReactive(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=l(this.body,this.params);return!e.allowSkip&&t.$options&&t.$options.skip&&delete t.$options.skip,a(s(this.collection,t),this.params)}}},\"query.js\":function(t,i,n){let r,o,s;n.link(\"./query.client\",{default(e){r=e}},0),n.link(\"./query.server\",{default(e){o=e}},1),s=e.isServer?o:r,n.exportDefault(s)},\"query.server.js\":function(e,t,i){let r,o,s,a;i.export({default:()=>l}),i.link(\"./lib/createGraph.js\",{default(e){r=e}},0),i.link(\"./lib/prepareForProcess.js\",{default(e){o=e}},1),i.link(\"./hypernova/hypernova.js\",{default(e){s=e}},2),i.link(\"./query.base\",{default(e){a=e}},3);class l extends a{fetch(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=r(this.collection,o(this.body,this.params));return s(t,e.userId,{params:this.params})}fetchOne(){return n.first(this.fetch(...arguments))}getCount(){return this.collection.find(this.body.$filters||{},{}).count()}}},counts:{\"collection.js\":function(e,t,i){let n,r;i.link(\"meteor/mongo\",{Mongo(e){n=e}},0),i.link(\"./constants\",{COUNTS_COLLECTION_CLIENT(e){r=e}},1),i.exportDefault(new n.Collection(r))},\"constants.js\":function(e,t,i){i.export({COUNTS_COLLECTION_CLIENT:()=>n});const n=\"grapher_counts\"},\"countSubscription.js\":function(e,t,i){let n,r,o,s,a,l,c,u;i.export({default:()=>d}),i.link(\"meteor/ejson\",{EJSON(e){n=e}},0),i.link(\"meteor/meteor\",{Meteor(e){r=e}},1),i.link(\"meteor/reactive-var\",{ReactiveVar(e){o=e}},2),i.link(\"meteor/tracker\",{Tracker(e){s=e}},3),i.link(\"./collection\",{default(e){a=e}},4),i.link(\"./createFauxSubscription\",{default(e){l=e}},5),i.link(\"../lib/prepareForProcess.js\",{default(e){c=e}},6),i.link(\"../../namedQuery/namedQuery.base\",{default(e){u=e}},7);class d{constructor(e){this.accessToken=new o(null),this.fauxHandle=null,this.query=e}subscribe(e,t){return n.equals(this.lastArgs,e)&&this.fauxHandle?this.fauxHandle:(this.accessToken.set(null),this.lastArgs=e,r.call(this.query.name+\".count.subscribe\",e,(e,i)=>{this._markedForUnsubscribe||(this.subscriptionHandle=r.subscribe(this.query.name+\".count\",i,t),this.accessToken.set(i),this.disconnectComputation=s.autorun(()=>this.handleDisconnect())),this._markedForUnsubscribe=!1}),this.fauxHandle=l(this),this.fauxHandle)}unsubscribe(){this.subscriptionHandle?(this.disconnectComputation.stop(),this.subscriptionHandle.stop()):this._markedForUnsubscribe=!0,this.accessToken.set(null),this.fauxHandle=null,this.subscriptionHandle=null}getCount(){const e=this.accessToken.get();if(null===e)return null;const t=a.findOne(e);return t.count}handleDisconnect(){const e=r.status();e.connected||(this._markedForResume=!0,this.fauxHandle=null,this.subscriptionHandle.stop()),e.connected&&this._markedForResume&&(this._markedForResume=!1,this.subscribe(this.lastArgs))}isSubscribed(){return null!==this.accessToken.get()}}},\"createFauxSubscription.js\":function(e,t,i){i.exportDefault(e=>({ready:()=>null!==e.accessToken.get()&&e.subscriptionHandle.ready(),stop:()=>e.unsubscribe()}))}},hypernova:{\"aggregateSearchFilters.js\":function(t,i,r){let o,s;function a(e,t){return(e||[]).map(e=>n.isObject(e)?s.pick(t,e):void 0).filter(e=>!!e)}r.export({default:()=>l}),r.link(\"sift\",{default(e){o=e}},0),r.link(\"dot-object\",{default(e){s=e}},1);class l{constructor(e,t){this.collectionNode=e,this.linker=e.linker,this.metaFilters=t,this.isVirtual=this.linker.isVirtual(),this.linkStorageField=this.linker.linkStorageField}get parentObjects(){return this.collectionNode.parent.results}create(){switch(this.linker.strategy){case\"one\":return this.createOne();case\"one-meta\":return this.createOneMeta();case\"many\":return this.createMany();case\"many-meta\":return this.createManyMeta();default:throw new e.Error(\"Invalid linker type: \".concat(this.linker.type))}}createOne(){return this.isVirtual?{[this.linkStorageField]:{$in:n.uniq(n.pluck(this.parentObjects,\"_id\"))}}:{_id:{$in:n.uniq(a(this.parentObjects,this.linkStorageField))}}}createOneMeta(){if(this.isVirtual){let e={};return this.metaFilters&&n.each(this.metaFilters,(t,i)=>{e[this.linkStorageField+\".\"+i]=t}),e[this.linkStorageField+\"._id\"]={$in:n.uniq(n.pluck(this.parentObjects,\"_id\"))},e}{let e=this.parentObjects;this.metaFilters&&(e=n.filter(this.parentObjects,e=>o(this.metaFilters)(e[this.linkStorageField])));const t=n.pluck(e,this.linkStorageField);let i=[];return n.each(t,e=>{e&&i.push(e._id)}),{_id:{$in:n.uniq(i)}}}}createMany(){if(this.isVirtual){const e=n.pluck(this.parentObjects,\"_id\");return{[this.linkStorageField]:{$in:n.uniq(n.union(...e))}}}{const[e,...t]=this.linkStorageField.split(\".\"),i=n.union(...a(this.parentObjects,e));return{_id:{$in:n.uniq(t.length>0?a(i,t.join(\".\")):i)}}}}createManyMeta(){if(this.isVirtual){let e={};return this.metaFilters&&n.each(this.metaFilters,(t,i)=>{e[i]=t}),e._id={$in:n.uniq(n.pluck(this.parentObjects,\"_id\"))},{[this.linkStorageField]:{$elemMatch:e}}}{let e=[];return n.each(this.parentObjects,t=>{if(t[this.linkStorageField])if(this.metaFilters){const i=o(this.metaFilters);n.each(t[this.linkStorageField],t=>{i(t)&&e.push(t._id)})}else n.each(t[this.linkStorageField],t=>{e.push(t._id)})}),{_id:{$in:n.uniq(e)}}}}}},\"assembleAggregateResults.js\":function(e,t,i){let r,o;i.link(\"sift\",{default(e){r=e}},0),i.link(\"./lib/cleanObjectForMetaFilters\",{default(e){o=e}},1),i.exportDefault(function(e,t,i){const s=e.linker,a=s.linkStorageField,l=e.linkName,c=s.isMeta(),u=s.isMany();let d=[];if(c&&i){const t=r(i);n.each(e.parent.results,e=>{o(e,a,t)})}if(c&&u)n.each(e.parent.results,e=>{e[l]=e[l]||[];const i=n.filter(t,t=>n.contains(t._id,e._id));if(i.length){const t=n.pluck(i,\"data\");n.each(t,t=>{n.each(t,t=>{e[l].push(t)})})}}),n.each(t,e=>{n.each(e.data,e=>d.push(e))});else{let i;i=u?(e,t)=>n.contains(e._id,t._id):(e,t)=>e._id==t._id;const r=e.linkName,o=e.parent.results;o.forEach(e=>{const n=t.filter(t=>i(t,e));n.forEach(t=>{Array.isArray(e[r])?e[r].push(...t.data):e[r]=[...t.data]})}),t.forEach(e=>{d.push(...e.data)})}e.results=d})},\"assembler.js\":function(e,t,i){let r,o,s,a;function l(e,t){let{limit:i,skip:n}=t;return i&&Array.isArray(e)?e.slice(n,i):e}i.link(\"../../links/lib/createSearchFilters\",{default(e){r=e}},0),i.link(\"./lib/cleanObjectForMetaFilters\",{default(e){o=e}},1),i.link(\"sift\",{default(e){s=e}},2),i.link(\"dot-object\",{default(e){a=e}},3),i.exportDefault((e,t)=>{let{limit:i,skip:r,metaFilters:c}=t;if(0===e.results.length)return;const u=e.parent,d=e.linker,h=d.strategy,f=d.isSingle(),p=d.isMeta(),m=d.linkStorageField;if(p&&c){const e=s(c);n.each(u.results,t=>{o(t,m,e)})}const g=n.groupBy(e.results,\"_id\");\"one\"===h&&u.results.forEach(t=>{const n=a.pick(m,t);n&&(t[e.linkName]=l(g[n],{limit:i,skip:r}))}),\"many\"===h&&u.results.forEach(t=>{const[o,...s]=m.split(\".\"),c=a.pick(o,t);if(!c)return;const u=[];c.forEach(e=>{const t=s.length>0?a.pick(s.join(\".\"),e):e;u.push(n.first(g[t]))}),t[e.linkName]=l(u,{limit:i,skip:r})}),\"one-meta\"===h&&u.results.forEach(t=>{if(!t[m])return;const n=t[m]._id;t[e.linkName]=l(g[n],{limit:i,skip:r})}),\"many-meta\"===h&&u.results.forEach(t=>{const o=n.pluck(t[m],\"_id\");let s=[];o.forEach(e=>{s.push(n.first(g[e]))}),t[e.linkName]=l(s,{limit:i,skip:r})})})},\"buildAggregatePipeline.js\":function(e,t,i){let n,r;i.link(\"meteor/underscore\",{_(e){n=e}},0),i.link(\"./constants\",{SAFE_DOTTED_FIELD_REPLACEMENT(e){r=e}},1),i.exportDefault(function(e,t,i,o){let s=!1;const a=e.linker,l=a.linkStorageField,c=e.collection;let u=[];c.firewall&&c.firewall(t,i,o),u.push({$match:t}),i.sort&&n.keys(i.sort).length>0&&u.push({$sort:i.sort});let d=l;a.isMeta()&&(d+=\"._id\");let h={_id:\"$_id\"};if(n.each(i.fields,(e,t)=>{t.indexOf(\".\")>=0&&(s=!0);const i=t.replace(/\\./g,r);h[i]=\"$\"+t}),a.isMeta()&&(h[l]=\"$\"+l),u.push({$group:{_id:\"$\"+d,data:{$push:h}}}),i.limit||i.skip){let e=[\"$data\"];i.skip&&e.push(i.skip),i.limit&&e.push(i.limit),u.push({$project:{_id:1,data:{$slice:e}}})}return{pipeline:u,containsDottedFields:s}})},\"constants.js\":function(e,t,i){i.export({SAFE_DOTTED_FIELD_REPLACEMENT:()=>n});const n=\"___\"},\"hypernova.js\":function(e,t,i){let r,o,s;function a(e,t){n.each(e.collectionNodes,e=>{let{filters:i,options:n}=r(e);s(e,t),a(e,t)})}function l(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const n=i.bypassFirewalls||!1,s=i.params||{};let{filters:l,options:c}=r(e);const u=e.collection;e.results=u.find(l,c,t).fetch();const d=i.bypassFirewalls?void 0:t;return a(e,d),o(e,s),e.results}i.export({default:()=>l}),i.link(\"../lib/applyProps.js\",{default(e){r=e}},0),i.link(\"../lib/prepareForDelivery.js\",{default(e){o=e}},1),i.link(\"./storeHypernovaResults.js\",{default(e){s=e}},2)},\"storeHypernovaResults.js\":function(e,t,i){var r,o=e(\"@babel/runtime/helpers/interopRequireDefault\")(e(\"@babel/runtime/helpers/objectSpread\"));let s,a,l,c,u,d;function h(e,t){if(0===e.parent.results.length)return e.results=[];let{filters:i,options:r}=s(e);const h=i.$meta,f=new a(e,h);delete i.$meta;const p=e.linker,m=p.isVirtual(),g=e.collection;if(n.extend(i,f.create()),m){let{pipeline:n,containsDottedFields:o}=u(e,i,r,t),s=g.aggregate(n);o&&d(s),c(e,s,h)}else{const s=n.omit(r,\"limit\");e.results=g.find(i,s,t).fetch(),l(e,(0,o.default)({},r,{metaFilters:h}))}}i.export({default:()=>h}),i.link(\"../lib/applyProps.js\",{default(e){s=e}},0),i.link(\"./aggregateSearchFilters.js\",{default(e){a=e}},1),i.link(\"./assembler.js\",{default(e){l=e}},2),i.link(\"./assembleAggregateResults.js\",{default(e){c=e}},3),i.link(\"./buildAggregatePipeline.js\",{default(e){u=e}},4),i.link(\"./lib/snapBackDottedFields\",{default(e){d=e}},5)},lib:{\"cleanObjectForMetaFilters.js\":function(e,t,i){i.exportDefault(function(e,t,i){e[t]&&(n.isArray(e[t])?e[t]=e[t].filter(i):i(e[t])||(e[t]=null))})},\"snapBackDottedFields.js\":function(e,t,i){let r,o;i.link(\"../constants\",{SAFE_DOTTED_FIELD_REPLACEMENT(e){r=e}},0),i.link(\"dot-object\",{default(e){o=e}},1),i.exportDefault(function(e){e.forEach(e=>{e.data=e.data.map(e=>(n.each(e,(t,i)=>{i.indexOf(r)>=0&&(e[i.replace(new RegExp(r,\"g\"),\".\")]=t,delete e[i])}),o.object(e)))})})}}},lib:{\"applyProps.js\":function(e,t,i){i.export({default:()=>o});const r=[\"disableOplog\",\"pollingIntervalMs\",\"pollingThrottleMs\"];function o(e){let t=n.extend({},e.props.$filters),i=n.extend({},e.props.$options);return(i=n.omit(i,...r)).fields=i.fields||{},e.applyFields(t,i),{filters:t,options:i}}},\"callWithPromise.js\":function(t,i,n){n.exportDefault((t,i)=>new r((n,r)=>{e.call(t,i,(e,t)=>{e&&r(e.reason||\"Something went wrong.\"),n(t)})}))},\"createGraph.js\":function(e,t,i){let r,o,s,a,l;i.export({specialFields:()=>c,createNodes:()=>u,addFieldNode:()=>h,getNodeNamespace:()=>f}),i.link(\"../nodes/collectionNode.js\",{default(e){r=e}},0),i.link(\"../nodes/fieldNode.js\",{default(e){o=e}},1),i.link(\"../nodes/reducerNode.js\",{default(e){s=e}},2),i.link(\"./dotize.js\",{default(e){a=e}},3),i.link(\"../reducers/lib/createReducers\",{default(e){l=e}},4);const c=[\"$filters\",\"$options\",\"$postFilters\",\"$postOptions\",\"$postFilter\"];function u(e){n.isObject(e.body)&&(n.each(e.body,(t,i)=>{if(!t)return;if(n.contains(c,i))return void e.addProp(i,t);e.collection.default&&(e.collection=e.collection.default);let o=e.collection.getLinker(i);if(o){if(o.isDenormalized()&&o.isSubBodyDenormalized(t))return void p(e,o,t,i);let n=new r(o.getLinkedCollection(),t,i);return u(n),void e.add(n,o)}const a=e.collection.getReducer(i);if(a){let t=new s(i,a);e.add(t)}h(t,i,e)}),l(e),0===e.fieldNodes.length&&e.add(new o(\"_id\",1)))}function d(e){if(n.isObject(e)){const t=n.keys(e);return 1===t.length&&n.contains([\"$elemMatch\",\"$meta\",\"$slice\"],t[0])}return!1}function h(e,t,i){if(n.isObject(e))if(d(e))i.add(new o(t,e,!0));else{let r=a.convert({[t]:e});n.each(r,(e,t)=>{i.add(new o(t,e))})}else{let n=new o(t,e);i.add(n)}}function f(e){const t=[];let i=e;for(;i;){const e=i.linker?i.linker.linkName:i.collection._name;t.push(e),i=i.parent}return t.reverse().join(\"_\")}function p(e,t,i,n){Object.assign(i,{_id:1});const r=t.linkConfig.denormalize.field;e.snapCache(r,n),t.isMany()||t.isVirtual()||h(1,t.linkStorageField,e),h(i,r,e)}i.exportDefault(function(e,t){let i=new r(e,t);return u(i),i})},\"dotize.js\":function(e,t,i){i.exportDefault(k={}),k.convert=function(e,t){var i;if(!(e&&\"object\"==typeof e||Array.isArray(e)))return t?((i={})[t]=e,i):e;var i={};function n(t,l,c){for(var u in t)t[u]&&\"object\"==typeof t[u]?Array.isArray(t[u])?s(t[u])?i[a(u,l,!0)]=t[u]:i=n(t[u],a(u,l,!1,!0),!0):c?o(t[u])?i[a(u,l,!0)]=t[u]:i=n(t[u],a(u,l,!0)):o(t[u])?i[a(u,l)]=t[u]:i=n(t[u],a(u,l)):c||r(u)?i[a(u,l,!0)]=t[u]:i[a(u,l)]=t[u];return o(i)?e:i}function r(e){return!isNaN(parseInt(e))}function o(e){for(var t in e)if(Object.hasOwnProperty.call(e,t))return!1;return!0}function s(e){return!(!Array.isArray(e)||0!=e.length)}function a(e,t,i,n){return n?(t||\"\")+(r(e)?\"[\"+e+\"]\":\".\"+e):i?(t||\"\")+\"[\"+e+\"]\":(t?t+\".\":\"\")+e}return n(e,t,Array.isArray(e))}},\"fieldInProjection.js\":function(e,t,i){function n(e){return e.split(\".\").reduce((e,t)=>{if(0===e.length)return[t];const[i]=e;return[...e,\"\".concat(i,\".\").concat(t)]},[])}function r(e,t,i){const r=i?n(t):[t];return r.some(t=>e[t])}i.export({expandField:()=>n,isFieldInProjection:()=>r})},\"intersectDeep.js\":function(e,t,i){let n,r;i.link(\"meteor/underscore\",{_(e){n=e}},0),i.link(\"./createGraph\",{specialFields(e){r=e}},1);const o=[...r,\"$filter\",\"$paginate\"];function s(e){return n.isObject(e)&&!n.isArray(e)?n.values(e).every(e=>s(e)):1===e}function a(e,t){const i={};return n.pairs(t).forEach(t=>{let[r,l]=t;if(n.contains(o,r))return;const c=e[r];1===c?s(l)&&(i[r]=l):n.isObject(c)&&(n.isObject(l)&&!n.isArray(l)?i[r]=a(c,l):1===l&&(i[r]=c))}),i}i.exportDefault(function(e,t){const i=a(e,t);return Object.assign(i,n.pick(e,...o)),i})},\"prepareForDelivery.js\":function(e,t,i){let r,o,s,a,l;function c(e){const t=e.props.$postFilters;t&&(e.results=s(t,e.results))}function u(e){const t=e.props.$postOptions;if(t){if(t.sort){const i=new l.Sorter(t.sort);e.results.sort(i.getComparator())}if(t.limit||t.skip){const i=t.skip||0,n=t.limit?t.limit+i:e.results.length;e.results=e.results.slice(i,n)}}}function d(e,t){if(e.props.$postFilter){const i=e.props.$postFilter;n.isArray(i)?i.forEach(i=>{e.results=i(e.results,t)}):e.results=i(e.results,t)}}function h(e){return n.isArray(e)?e:n.isUndefined(e)?[]:[e]}function f(e,t){t&&(t=h(t),n.each(e.collectionNodes,e=>{const i=e.shouldCleanStorage;n.each(t,t=>{if(i){const i=e.linker.isSingle(),[r,...o]=e.linkStorageField.split(\".\"),s=function(t){let s=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(i)a.pick(e.linkStorageField,t,!0),s&&o.length>0&&n.isEmpty(t[r])&&delete t[r];else if(o.length>0){const e=t[r]||[];n.isArray(e)&&(e.forEach(e=>a.pick(o.join(\".\"),e,!0)),s&&o.length>0&&e.every(e=>n.isEmpty(e))&&delete t[r])}else delete t[e.linkStorageField]};if(e.isVirtual){const i=h(t[e.linkName]);n.each(i,e=>{s(e)})}else s(t)}f(e,t[e.linkName])})}))}function p(e,t){t&&e.collectionNodes.forEach(e=>{n.each(t,t=>{void 0!==t&&p(e,t[e.linkName])}),e.isOneResult&&n.each(t,t=>{t[e.linkName]&&n.isArray(t[e.linkName])&&(t[e.linkName]=t[e.linkName]?n.first(t[e.linkName]):void 0)})})}function m(e,t){if(!t)return;const i=e.linkName,n=e.isMeta;(t=h(t)).forEach(t=>{n&&t[i]&&(e.isOneResult?t[i]=Object.assign({},t[i]):t[i]=t[i].map(e=>Object.assign({},e))),e.collectionNodes.forEach(e=>{m(e,t[i])})})}function g(e,t){t=h(t),e.collectionNodes.forEach(i=>{n.each(t,t=>{g(i,t[e.linkName])})}),e.isMeta&&(e.isVirtual?n.each(t,t=>{const i=t[e.linkName];if(e.isOneResult){if(n.isObject(i)){const n=i[e.linkStorageField];k(i,t,n,!0)}}else n.each(i,i=>{const n=i[e.linkStorageField];k(i,t,n,!0)})}):n.each(t,t=>{const i=t[e.linkName],r=t[e.linkStorageField];e.isOneResult?i&&k(i,t,r,!1):n.each(i,e=>{k(e,t,r,!1)})}))}function k(e,t,i,r){if(r){let r;r=n.isArray(i)?n.find(i,e=>e._id==t._id):i,e.$metadata=n.omit(r,\"_id\")}else{let t;t=n.isArray(i)?n.find(i,t=>t._id==e._id):i,e.$metadata=n.omit(t,\"_id\")}}function y(e){e.collectionNodes.forEach(e=>{y(e)}),n.isEmpty(e.snapCaches)||n.each(e.snapCaches,(t,i)=>{const r=n.contains(e.snapCachesSingles,i),o=e.collection.getLinker(t),s=!o.isMany()&&!o.isVirtual();e.results.forEach(e=>{e[i]&&(s&&Object.assign(e[i],{_id:o.isMeta()?e[o.linkStorageField]._id:e[o.linkStorageField]}),r&&n.isArray(e[i])?e[t]=n.first(e[i]):e[t]=e[i],delete e[i])})})}i.export({applyPostFilters:()=>c,applyPostOptions:()=>u,getResultsArray:()=>h,removeLinkStorages:()=>f,storeOneResults:()=>p,assembleMetadata:()=>g}),i.link(\"../reducers/lib/applyReducers\",{default(e){r=e}},0),i.link(\"../reducers/lib/cleanReducerLeftovers\",{default(e){o=e}},1),i.link(\"sift\",{default(e){s=e}},2),i.link(\"dot-object\",{default(e){a=e}},3),i.link(\"meteor/minimongo\",{Minimongo(e){l=e}},4),i.exportDefault((e,t)=>{y(e),p(e,e.results),r(e,t),n.each(e.collectionNodes,t=>{m(t,e.results)}),n.each(e.collectionNodes,t=>{g(t,e.results)}),o(e,e.results),f(e,e.results),c(e),u(e),d(e,t)})},\"prepareForProcess.js\":function(e,t,i){let r,o,s;function a(e){let{filters:t,options:i,params:n}=e;n.filters&&Object.assign(t,n.filters),n.options&&Object.assign(i,n.options)}function l(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i;arguments.length>2&&void 0!==arguments[2]&&arguments[2]&&!n.isFunction(e.$filter)&&(e.$filter=a),e.$filter&&(r(e.$filter,o.OneOf(Function,[Function])),e.$filters=e.$filters||{},e.$options=e.$options||{},n.isArray(e.$filter)?e.$filter.forEach(i=>{i.call(null,{filters:e.$filters,options:e.$options,params:t})}):e.$filter({filters:e.$filters,options:e.$options,params:t}),e.$filter=null,delete e.$filter),n.each(e,(e,i)=>{if(n.isObject(e))return l(e,t)})}function c(e,t){e.$paginate&&t&&(e.$options||(e.$options={}),t.limit&&n.extend(e.$options,{limit:t.limit}),t.skip&&n.extend(e.$options,{skip:t.skip}),delete e.$paginate)}i.link(\"meteor/check\",{check(e){r=e},Match(e){o=e}},0),i.link(\"lodash.clonedeep\",{default(e){s=e}},1),i.exportDefault(function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=s(e),n=s(t);return c(i,n),l(i,n,!0),i})},\"recursiveFetch.js\":function(e,t,i){let r,o,s,a,l,c,u;function d(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{filters:o,options:s}=r(e);i.scoped&&i.subscriptionHandle&&n.extend(o,i.subscriptionHandle.scopeQuery()),i.scoped&&n.extend(o,{[\"_query_path_\".concat(c(e))]:{$exists:!0}});let a=[];if(t){let i=e.linker.createLink(t,e.collection);e.isVirtual&&(s.fields=s.fields||{},u(s.fields,e.linkStorageField,!0)||n.extend(s.fields,{[e.linkStorageField]:1})),a=i.find(o,s).fetch()}else a=e.collection.find(o,s).fetch();return n.each(e.collectionNodes,e=>{n.each(a,t=>{const i=d(e,t);t[e.linkName]=i,e.results.push(...i)})}),a}i.link(\"./applyProps.js\",{default(e){r=e}},0),i.link(\"./prepareForDelivery\",{assembleMetadata(e){o=e},removeLinkStorages(e){s=e},storeOneResults(e){a=e}},1),i.link(\"./prepareForDelivery\",{default(e){l=e}},2),i.link(\"./createGraph\",{getNodeNamespace(e){c=e}},3),i.link(\"../lib/fieldInProjection\",{isFieldInProjection(e){u=e}},4),i.exportDefault((e,t,i)=>(e.results=d(e,null,i),l(e,t),e.results))}},nodes:{\"collectionNode.js\":function(t,i,r){var o,s=t(\"@babel/runtime/helpers/interopRequireDefault\")(t(\"@babel/runtime/helpers/objectSpread\"));let a,l,c,u,d,h,f;r.export({default:()=>p,runFieldSanityChecks:()=>m}),r.link(\"./fieldNode.js\",{default(e){a=e}},0),r.link(\"./reducerNode.js\",{default(e){l=e}},1),r.link(\"lodash.clonedeep\",{default(e){c=e}},2),r.link(\"meteor/check\",{check(e){u=e},Match(e){d=e}},3),r.link(\"../lib/fieldInProjection\",{expandField(e){h=e},isFieldInProjection(e){f=e}},4);class p{constructor(t){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(t&&!n.isObject(i))throw new e.Error(\"invalid-body\",'The field \"'.concat(r,'\" is a collection link, and should have its body defined as an object.'));this.body=c(i),this.linkName=r,this.collection=t,this.nodes=[],this.props={},this.parent=null,this.linker=null,this.linkStorageField=null,this.scheduledForDeletion=!1,this.reducers=[],this.results=[],this.snapCaches={},this.snapCachesSingles=[]}get collectionNodes(){return n.filter(this.nodes,e=>e instanceof p)}get fieldNodes(){return n.filter(this.nodes,e=>e instanceof a)}get reducerNodes(){return n.filter(this.nodes,e=>e instanceof l)}add(e,t){e.parent=this,e instanceof a&&m(e.name),t&&(e.linker=t,e.linkStorageField=t.linkStorageField,e.isMeta=t.isMeta(),e.isVirtual=t.isVirtual(),e.isOneResult=t.isOneResult(),e.shouldCleanStorage=this._shouldCleanStorage(e)),this.nodes.push(e)}addProp(e,t){\"$postFilter\"===e&&u(t,d.OneOf(Function,[Function])),n.extend(this.props,{[e]:t})}remove(e){this.nodes=n.filter(this.nodes,t=>e!==t)}applyFields(e,t){let i=!1;n.each(this.fieldNodes,e=>{\"$meta\"!==e.projectionOperator&&(i=!0),e.applyFields(t.fields)}),n.each(this.collectionNodes,e=>{let n=e.linker;n&&!n.isVirtual()&&(f(t.fields,n.linkStorageField,!0)||(t.fields[n.linkStorageField]=1,i=!0))}),n.each(e,(e,r)=>{n.contains([\"$or\",\"$nor\",\"$not\",\"$and\",\"$meta\",\"$text\"],r)||n.has(t.fields,r.split(\".\")[0])||(i=!0,t.fields[r]=1)}),i||(t.fields=(0,s.default)({_id:1},t.fields))}hasField(e){let t;const i=arguments.length>1&&void 0!==arguments[1]&&arguments[1]?h(e):[e];return!!n.find(this.fieldNodes,e=>n.contains(i,e.name))}getField(e){return n.find(this.fieldNodes,t=>t.name==e)}hasCollectionNode(e){return!!n.find(this.collectionNodes,t=>t.linkName==e)}hasReducerNode(e){return!!n.find(this.reducerNodes,t=>t.name==e)}getReducerNode(e){return n.find(this.reducerNodes,t=>t.name==e)}getCollectionNode(e){return n.find(this.collectionNodes,t=>t.linkName==e)}getName(){return this.linkName?this.linkName:this.collection?this.collection._name:\"N/A\"}snapCache(e,t){this.snapCaches[e]=t,this.collection.getLinker(t).isOneResult()&&this.snapCachesSingles.push(e)}_shouldCleanStorage(e){return\"_id\"!==e.linkStorageField&&(e.isVirtual?!e.hasField(e.linkStorageField,!0):!this.hasField(e.linkStorageField,!0))}}function m(e){if(\"$\"===e[0])throw new Error(\"You are not allowed to use fields that start with $ inside a reducer's body: \".concat(e));return!0}},\"fieldNode.js\":function(e,t,i){i.export({default:()=>r});class r{constructor(e,t){let i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.name=e,this.projectionOperator=i?n.keys(t)[0]:null,this.body=!n.isObject(t)||i?t:1,this.scheduledForDeletion=!1}applyFields(e){e[this.name]=this.body}}},\"reducerNode.js\":function(e,t,i){i.export({default:()=>n});class n{constructor(e,t){let{body:i,reduce:n}=t;this.name=e,this.body=i,this.reduceFunction=n,this.dependencies=[]}compute(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];e[this.name]=this.reduce.call(this,e,...i)}reduce(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];return this.reduceFunction.call(this,e,...i)}}}},reducers:{\"extension.js\":function(t,i,r){let o,s;r.link(\"meteor/check\",{check(e){o=e}},0),r.link(\"./lib/addFieldMap\",{default(e){s=e}},1);const a=\"__reducers\";Object.assign(l.Collection.prototype,{addReducers(t){this[a]||(this[a]={}),n.each(t,(t,i)=>{if(this[t]||(this[t]={}),this.getLinker(i))throw new e.Error(\"You cannot add the reducer with name: \".concat(i,\" because it is already defined as a link in \").concat(this._name,\" collection\"));if(this[t][i])throw new e.Error(\"You cannot add the reducer with name: \".concat(i,\" because it was already added to \").concat(this._name,\" collection\"));o(t,{body:Object,reduce:Function}),n.extend(this[a],{[i]:t})})},getReducer(e){if(this[a])return this[a][e]},addFieldMap:s})},lib:{\"addFieldMap.js\":function(e,t,i){function n(e){const t=this;let i={};for(let n in e){const t=e[n];i[n]={body:{[t]:1},reduce:e=>e[t]}}this.addReducers(i)}i.export({default:()=>n})},\"applyReducers.js\":function(e,t,i){function r(e,t){n.each(e.collectionNodes,e=>{r(e,t)});const i=[];let o=[...e.reducerNodes];for(;o.length;){const r=o.shift();if(r.dependencies.length){const s=n.all(r.dependencies,e=>i.includes(e));s?(e.results.forEach(e=>{r.compute(e,t)}),i.push(r.name)):o.push(r)}else e.results.forEach(e=>{r.compute(e,t)}),i.push(r.name)}}i.export({default:()=>r})},\"cleanReducerLeftovers.js\":function(e,t,i){let r;function o(e,t){n.each(e.collectionNodes,e=>{e.scheduledForDeletion&&t.forEach(t=>{delete t[e.linkName]})}),n.each(e.collectionNodes,e=>{let i;i=e.isOneResult?t.map(t=>t[e.linkName]).filter(e=>!!e):n.flatten(t.map(t=>t[e.linkName]).filter(e=>!!e)),o(e,i)}),n.each(e.fieldNodes,i=>{i.scheduledForDeletion&&s(i.name.split(\".\"),t,e)}),n.each(e.reducerNodes,e=>{e.scheduledForDeletion&&t.forEach(t=>{delete t[e.name]})})}function s(e,t,i){const r=i.snapCaches[e[0]],o=r||e[0];1!==e.length?(e.shift(),s(e,t.filter(e=>!!e[o]).map(e=>e[o]),i),t.forEach(e=>{n.isObject(e[o])&&0===n.keys(e[o]).length&&\"_id\"!==o&&delete e[o]})):t.forEach(e=>{n.isObject(e)&&\"_id\"!==o&&delete e[o]})}i.export({default:()=>o}),i.link(\"dot-object\",{default(e){r=e}},0)},\"createReducers.js\":function(e,t,i){let r,o,s,a,l,c,u;function d(e){e.reducerNodes.forEach(t=>{n.each(t.body,(i,n)=>{h(t,e,n,i)})})}function h(e,t,i,n){const r=t.collection,o=r.getLinker(i);if(o)return p(e,i,n,t,o);const s=r.getReducer(i);return s?(e.dependencies.push(i),f(i,s,t)):m(i,n,t)}function f(e,t,i){let{body:r,reduce:o}=t;if(!i.hasReducerNode(e)){let t=new l(e,{body:r,reduce:o});i.add(t),t.scheduledForDeletion=!0,n.each(t.body,(e,n)=>{h(t,i,n,e)})}}function p(e,t,i,n,r){if(n.hasCollectionNode(t)){const r=n.getCollectionNode(t);c(e,i,r)}else{let e=new s(r.getLinkedCollection(),i,t);e.scheduledForDeletion=!0,n.add(e,r),o(e)}}function m(e,t,i){if(n.contains(u,e))i.addProp(e,t);else if(n.isObject(t)){const o=r.dot({[e]:t});n.each(o,(e,t)=>{g(i,t,e)})}else g(i,e,t)}function g(e,t,i){if(!e.hasField(t,!0)){const n=e.fieldNodes.filter(e=>{let{name:i}=e;return i.startsWith(\"\".concat(t,\".\"))});n.forEach(t=>e.remove(t));let r=new a(t,i);r.scheduledForDeletion=n.every(e=>e.scheduledForDeletion),e.add(r)}}i.export({default:()=>d,handleAddElement:()=>h,handleAddReducer:()=>f,handleAddLink:()=>p,handleAddField:()=>m}),i.link(\"dot-object\",{default(e){r=e}},0),i.link(\"../../lib/createGraph\",{createNodes(e){o=e}},1),i.link(\"../../nodes/collectionNode\",{default(e){s=e}},2),i.link(\"../../nodes/fieldNode\",{default(e){a=e}},3),i.link(\"../../nodes/reducerNode\",{default(e){l=e}},4),i.link(\"./embedReducerWithLink\",{default(e){c=e}},5),i.link(\"../../lib/createGraph\",{specialFields(e){u=e}},6)},\"embedReducerWithLink.js\":function(e,t,i){let r,o,s;function a(e,t,i){n.each(t,(t,l)=>{const c=i.collection;if(n.isObject(t))if(i.body[l]){const n=c.getLinker(l);if(n){if(n.isDenormalized()&&n.isSubBodyDenormalized(t)){const e=n.linkConfig.denormalize.field;return void r(e,t,i)}return void a(e,t,i.getCollectionNode(l))}r(l,t,i)}else o(e,i,l,t);else if(!i.body[l]){const e=c.getReducer(l);return e?s(l,e,i):r(l,t,i)}})}i.export({default:()=>a}),i.link(\"./createReducers\",{handleAddField(e){r=e},handleAddElement(e){o=e},handleAddReducer(e){s=e}},0)}}}}},node_modules:{\"lodash.clonedeep\":{\"package.json\":function(e,t,i){i.exports={name:\"lodash.clonedeep\",version:\"4.5.0\"}},\"index.js\":function(e,i,n){var r=200,o=\"__lodash_hash_undefined__\",s=9007199254740991,a=\"[object Arguments]\",l=\"[object Array]\",c=\"[object Boolean]\",u=\"[object Date]\",d=\"[object Error]\",h=\"[object Function]\",f=\"[object GeneratorFunction]\",p=\"[object Map]\",m=\"[object Number]\",g=\"[object Object]\",k=\"[object Promise]\",y=\"[object RegExp]\",b=\"[object Set]\",v=\"[object String]\",_=\"[object Symbol]\",j=\"[object WeakMap]\",w=\"[object ArrayBuffer]\",F=\"[object DataView]\",C=\"[object Float32Array]\",x=\"[object Float64Array]\",O=\"[object Int8Array]\",S=\"[object Int16Array]\",A=\"[object Int32Array]\",$=\"[object Uint8Array]\",E=\"[object Uint8ClampedArray]\",N=\"[object Uint16Array]\",M=\"[object Uint32Array]\",D=/[\\\\^$.*+?()[\\]{}|]/g,R=/\\w*$/,P=/^\\[object .+?Constructor\\]$/,q=/^(?:0|[1-9]\\d*)$/,V={};V[a]=V[l]=V[w]=V[F]=V[c]=V[u]=V[C]=V[x]=V[O]=V[S]=V[A]=V[p]=V[m]=V[g]=V[y]=V[b]=V[v]=V[_]=V[$]=V[E]=V[N]=V[M]=!0,V[d]=V[h]=V[j]=!1;var I=\"object\"==typeof t&&t&&t.Object===Object&&t,L=\"object\"==typeof self&&self&&self.Object===Object&&self,T=I||L||Function(\"return this\")(),H=\"object\"==typeof i&&i&&!i.nodeType&&i,Q=H&&\"object\"==typeof n&&n&&!n.nodeType&&n,Y=Q&&Q.exports===H;function B(e,t){return e.set(t[0],t[1]),e}function z(e,t){return e.add(t),e}function U(e,t){for(var i=-1,n=e?e.length:0;++i<n&&!1!==t(e[i],i,e););return e}function G(e,t){for(var i=-1,n=t.length,r=e.length;++i<n;)e[r+i]=t[i];return e}function W(e,t,i,n){var r=-1,o=e?e.length:0;for(n&&o&&(i=e[++r]);++r<o;)i=t(i,e[r],r,e);return i}function J(e,t){for(var i=-1,n=Array(e);++i<e;)n[i]=t(i);return n}function K(e,t){return null==e?void 0:e[t]}function X(e){var t=!1;if(null!=e&&\"function\"!=typeof e.toString)try{t=!!(e+\"\")}catch(e){}return t}function Z(e){var t=-1,i=Array(e.size);return e.forEach(function(e,n){i[++t]=[n,e]}),i}function ee(e,t){return function(i){return e(t(i))}}function te(e){var t=-1,i=Array(e.size);return e.forEach(function(e){i[++t]=e}),i}var ie=Array.prototype,ne=Function.prototype,re=Object.prototype,oe=T[\"__core-js_shared__\"],se=(ae=/[^.]+$/.exec(oe&&oe.keys&&oe.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+ae:\"\",ae,le=ne.toString,ce=re.hasOwnProperty,ue=re.toString,de=RegExp(\"^\"+le.call(ce).replace(D,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),he=Y?T.Buffer:void 0,fe=T.Symbol,pe=T.Uint8Array,me=ee(Object.getPrototypeOf,Object),ge=Object.create,ke=re.propertyIsEnumerable,ye=ie.splice,be=Object.getOwnPropertySymbols,ve=he?he.isBuffer:void 0,_e=ee(Object.keys,Object),je=St(T,\"DataView\"),we=St(T,\"Map\"),Fe=St(T,\"Promise\"),Ce=St(T,\"Set\"),xe=St(T,\"WeakMap\"),Oe=St(Object,\"create\"),Se=Vt(je),Ae=Vt(we),$e=Vt(Fe),Ee=Vt(Ce),Ne=Vt(xe),Me=fe?fe.prototype:void 0,De=Me?Me.valueOf:void 0;function Re(e){var t=-1,i=e?e.length:0;for(this.clear();++t<i;){var n=e[t];this.set(n[0],n[1])}}function Pe(){this.__data__=Oe?Oe(null):{}}function qe(e){return this.has(e)&&delete this.__data__[e]}function Ve(e){var t=this.__data__;if(Oe){var i=t[e];return i===o?void 0:i}return ce.call(t,e)?t[e]:void 0}function Ie(e){var t=this.__data__;return Oe?void 0!==t[e]:ce.call(t,e)}function Le(e,t){var i;return this.__data__[e]=Oe&&void 0===t?o:t,this}function Te(e){var t=-1,i=e?e.length:0;for(this.clear();++t<i;){var n=e[t];this.set(n[0],n[1])}}function He(){this.__data__=[]}function Qe(e){var t=this.__data__,i=at(t,e),n;return!(i<0)&&(i==t.length-1?t.pop():ye.call(t,i,1),!0)}function Ye(e){var t=this.__data__,i=at(t,e);return i<0?void 0:t[i][1]}function Be(e){return at(this.__data__,e)>-1}function ze(e,t){var i=this.__data__,n=at(i,e);return n<0?i.push([e,t]):i[n][1]=t,this}function Ue(e){var t=-1,i=e?e.length:0;for(this.clear();++t<i;){var n=e[t];this.set(n[0],n[1])}}function Ge(){this.__data__={hash:new Re,map:new(we||Te),string:new Re}}function We(e){return Ot(this,e).delete(e)}function Je(e){return Ot(this,e).get(e)}function Ke(e){return Ot(this,e).has(e)}function Xe(e,t){return Ot(this,e).set(e,t),this}function Ze(e){this.__data__=new Te(e)}function et(){this.__data__=new Te}function tt(e){return this.__data__.delete(e)}function it(e){return this.__data__.get(e)}function nt(e){return this.__data__.has(e)}function rt(e,t){var i=this.__data__;if(i instanceof Te){var n=i.__data__;if(!we||n.length<r-1)return n.push([e,t]),this;i=this.__data__=new Ue(n)}return i.set(e,t),this}function ot(e,t){var i=Ht(e)||Tt(e)?J(e.length,String):[],n=i.length,r=!!n;for(var o in e)!t&&!ce.call(e,o)||r&&(\"length\"==o||Dt(o,n))||i.push(o);return i}function st(e,t,i){var n=e[t];ce.call(e,t)&&Lt(n,i)&&(void 0!==i||t in e)||(e[t]=i)}function at(e,t){for(var i=e.length;i--;)if(Lt(e[i][0],t))return i;return-1}function lt(e,t){return e&&Ft(t,Jt(t),e)}function ct(e,t,i,n,r,o,s){var l;if(n&&(l=o?n(e,r,o,s):n(e)),void 0!==l)return l;if(!Gt(e))return e;var c=Ht(e);if(c){if(l=Et(e),!t)return wt(e,l)}else{var u=$t(e),d=u==h||u==f;if(Bt(e))return mt(e,t);if(u==g||u==a||d&&!o){if(X(e))return o?e:{};if(l=Nt(d?{}:e),!t)return Ct(e,lt(l,e))}else{if(!V[u])return o?e:{};l=Mt(e,u,ct,t)}}s||(s=new Ze);var p=s.get(e);if(p)return p;if(s.set(e,l),!c)var m=i?xt(e):Jt(e);return U(m||e,function(r,o){m&&(r=e[o=r]),st(l,o,ct(r,t,i,n,o,e,s))}),l}function ut(e){return Gt(e)?ge(e):{}}function dt(e,t,i){var n=t(e);return Ht(e)?n:G(n,i(e))}function ht(e){return ue.call(e)}function ft(e){return!(!Gt(e)||Pt(e))&&(zt(e)||X(e)?de:P).test(Vt(e));var t}function pt(e){if(!qt(e))return _e(e);var t=[];for(var i in Object(e))ce.call(e,i)&&\"constructor\"!=i&&t.push(i);return t}function mt(e,t){if(t)return e.slice();var i=new e.constructor(e.length);return e.copy(i),i}function gt(e){var t=new e.constructor(e.byteLength);return new pe(t).set(new pe(e)),t}function kt(e,t){var i=t?gt(e.buffer):e.buffer;return new e.constructor(i,e.byteOffset,e.byteLength)}function yt(e,t,i){var n;return W(t?i(Z(e),!0):Z(e),B,new e.constructor)}function bt(e){var t=new e.constructor(e.source,R.exec(e));return t.lastIndex=e.lastIndex,t}function vt(e,t,i){var n;return W(t?i(te(e),!0):te(e),z,new e.constructor)}function _t(e){return De?Object(De.call(e)):{}}function jt(e,t){var i=t?gt(e.buffer):e.buffer;return new e.constructor(i,e.byteOffset,e.length)}function wt(e,t){var i=-1,n=e.length;for(t||(t=Array(n));++i<n;)t[i]=e[i];return t}function Ft(e,t,i,n){i||(i={});for(var r=-1,o=t.length;++r<o;){var s=t[r],a=n?n(i[s],e[s],s,i,e):void 0;st(i,s,void 0===a?e[s]:a)}return i}function Ct(e,t){return Ft(e,At(e),t)}function xt(e){return dt(e,Jt,At)}function Ot(e,t){var i=e.__data__;return Rt(t)?i[\"string\"==typeof t?\"string\":\"hash\"]:i.map}function St(e,t){var i=K(e,t);return ft(i)?i:void 0}Re.prototype.clear=Pe,Re.prototype.delete=qe,Re.prototype.get=Ve,Re.prototype.has=Ie,Re.prototype.set=Le,Te.prototype.clear=He,Te.prototype.delete=Qe,Te.prototype.get=Ye,Te.prototype.has=Be,Te.prototype.set=ze,Ue.prototype.clear=Ge,Ue.prototype.delete=We,Ue.prototype.get=Je,Ue.prototype.has=Ke,Ue.prototype.set=Xe,Ze.prototype.clear=et,Ze.prototype.delete=tt,Ze.prototype.get=it,Ze.prototype.has=nt,Ze.prototype.set=rt;var At=be?ee(be,Object):Kt,$t=ht;function Et(e){var t=e.length,i=e.constructor(t);return t&&\"string\"==typeof e[0]&&ce.call(e,\"index\")&&(i.index=e.index,i.input=e.input),i}function Nt(e){return\"function\"!=typeof e.constructor||qt(e)?{}:ut(me(e))}function Mt(e,t,i,n){var r=e.constructor;switch(t){case w:return gt(e);case c:case u:return new r(+e);case F:return kt(e,n);case C:case x:case O:case S:case A:case $:case E:case N:case M:return jt(e,n);case p:return yt(e,n,i);case m:case v:return new r(e);case y:return bt(e);case b:return vt(e,n,i);case _:return _t(e)}}function Dt(e,t){return!!(t=null==t?s:t)&&(\"number\"==typeof e||q.test(e))&&e>-1&&e%1==0&&e<t}function Rt(e){var t=typeof e;return\"string\"==t||\"number\"==t||\"symbol\"==t||\"boolean\"==t?\"__proto__\"!==e:null===e}function Pt(e){return!!se&&se in e}function qt(e){var t=e&&e.constructor,i;return e===(\"function\"==typeof t&&t.prototype||re)}function Vt(e){if(null!=e){try{return le.call(e)}catch(e){}try{return e+\"\"}catch(e){}}return\"\"}function It(e){return ct(e,!0,!0)}function Lt(e,t){return e===t||e!=e&&t!=t}function Tt(e){return Yt(e)&&ce.call(e,\"callee\")&&(!ke.call(e,\"callee\")||ue.call(e)==a)}(je&&$t(new je(new ArrayBuffer(1)))!=F||we&&$t(new we)!=p||Fe&&$t(Fe.resolve())!=k||Ce&&$t(new Ce)!=b||xe&&$t(new xe)!=j)&&($t=function(e){var t=ue.call(e),i=t==g?e.constructor:void 0,n=i?Vt(i):void 0;if(n)switch(n){case Se:return F;case Ae:return p;case $e:return k;case Ee:return b;case Ne:return j}return t});var Ht=Array.isArray;function Qt(e){return null!=e&&Ut(e.length)&&!zt(e)}function Yt(e){return Wt(e)&&Qt(e)}var Bt=ve||Xt;function zt(e){var t=Gt(e)?ue.call(e):\"\";return t==h||t==f}function Ut(e){return\"number\"==typeof e&&e>-1&&e%1==0&&e<=s}function Gt(e){var t=typeof e;return!!e&&(\"object\"==t||\"function\"==t)}function Wt(e){return!!e&&\"object\"==typeof e}function Jt(e){return Qt(e)?ot(e):pt(e)}function Kt(){return[]}function Xt(){return!1}n.exports=It}},\"dot-object\":{\"package.json\":function(e,t,i){i.exports={name:\"dot-object\",version:\"1.5.4\",main:\"index\"}},\"index.js\":function(e,t,i){\"use strict\";function n(e,t){var i,n;if(\"function\"==typeof t)void 0!==(n=t(e))&&(e=n);else if(Array.isArray(t))for(i=0;i<t.length;i++)void 0!==(n=t[i](e))&&(e=n);return e}function r(e,t){return\"-\"===e[0]&&Array.isArray(t)&&/^-\\d+$/.test(e)?t.length+parseInt(e,10):e}function o(e){return/^\\d+/.test(e)}function s(e,t){return e.indexOf(\"[\")>=0&&(e=e.replace(/\\[/g,\".\").replace(/]/g,\"\")),e.split(t)}function a(e,t,i){if(!(this instanceof a))return new a(e,t,i);void 0===e&&(e=\".\"),void 0===t&&(t=!1),void 0===i&&(i=!0),this.seperator=e,this.override=t,this.useArray=i,this.cleanup=[]}var l=new a(\".\",!1,!0);function c(e){return function(){return l[e].apply(l,arguments)}}function u(e){return\"[object Object]\"===Object.prototype.toString.call(e)}a.prototype._fill=function(e,t,i,r){var s=e.shift();if(e.length>0){if(t[s]=t[s]||(this.useArray&&o(e[0])?[]:{}),t[s]!==Object(t[s])){if(!this.override)throw new Error(\"Trying to redefine `\"+s+\"` which is a \"+typeof t[s]);t[s]={}}this._fill(e,t[s],i,r)}else{if(!this.override&&t[s]===Object(t[s])&&Object.keys(t[s]).length)throw new Error(\"Trying to redefine non-empty obj['\"+s+\"']\");t[s]=n(i,r)}},a.prototype.object=function(e,t){var i=this;return Object.keys(e).forEach(function(r){var o=void 0===t?null:t[r],a=s(r,i.seperator).join(i.seperator);-1!==a.indexOf(i.seperator)?(i._fill(a.split(i.seperator),e,e[r],o),delete e[r]):i.override&&(e[r]=n(e[r],o))}),e},a.prototype.str=function(e,t,i,r){return-1!==e.indexOf(this.seperator)?this._fill(e.split(this.seperator),i,t,r):i.hasOwnProperty(e)&&!this.override||(i[e]=n(t,r)),i},a.prototype.pick=function(e,t,i){var n,o,a,l,c;for(o=s(e,this.seperator),n=0;n<o.length;n++){if(l=r(o[n],t),!(t&&\"object\"==typeof t&&l in t))return;if(n===o.length-1)return i?(a=t[l],delete t[l],Array.isArray(t)&&(c=o.slice(0,-1).join(\".\"),-1===this.cleanup.indexOf(c)&&this.cleanup.push(c)),a):t[l];t=t[l]}return i&&Array.isArray(t)&&(t=t.filter(function(e){return void 0!==e})),t},a.prototype.remove=function(e,t){var i;if(this.cleanup=[],Array.isArray(e)){for(i=0;i<e.length;i++)this.pick(e[i],t,!0);return this._cleanup(t),t}return this.pick(e,t,!0)},a.prototype._cleanup=function(e){var t,i,n,r;if(this.cleanup.length){for(i=0;i<this.cleanup.length;i++)t=(t=(r=(n=this.cleanup[i].split(\".\")).splice(0,-1).join(\".\"))?this.pick(r,e):e)[n[0]].filter(function(e){return void 0!==e}),this.set(this.cleanup[i],t,e);this.cleanup=[]}},a.prototype.del=a.prototype.remove,a.prototype.move=function(e,t,i,r,o){return\"function\"==typeof r||Array.isArray(r)?this.set(t,n(this.pick(e,i,!0),r),i,o):(o=r,this.set(t,this.pick(e,i,!0),i,o)),i},a.prototype.transfer=function(e,t,i,r,o,s){return\"function\"==typeof o||Array.isArray(o)?this.set(t,n(this.pick(e,i,!0),o),r,s):(s=o,this.set(t,this.pick(e,i,!0),r,s)),r},a.prototype.copy=function(e,t,i,r,o,s){return\"function\"==typeof o||Array.isArray(o)?this.set(t,n(JSON.parse(JSON.stringify(this.pick(e,i,!1))),o),r,s):(s=o,this.set(t,this.pick(e,i,!1),r,s)),r},a.prototype.set=function(e,t,i,n){var r,o,a,l;if(void 0===t)return i;for(a=s(e,this.seperator),r=0;r<a.length;r++){if(l=a[r],r===a.length-1)if(n&&u(t)&&u(i[l]))for(o in t)t.hasOwnProperty(o)&&(i[l][o]=t[o]);else if(n&&Array.isArray(i[l])&&Array.isArray(t))for(var c=0;c<t.length;c++)i[a[r]].push(t[c]);else i[l]=t;else i.hasOwnProperty(l)&&(u(i[l])||Array.isArray(i[l]))||(/^\\d+$/.test(a[r+1])?i[l]=[]:i[l]={});i=i[l]}return i},a.prototype.transform=function(e,t,i){return t=t||{},i=i||{},Object.keys(e).forEach(function(n){this.set(e[n],this.pick(n,t),i)}.bind(this)),i},a.prototype.dot=function(e,t,i){return t=t||{},i=i||[],Object.keys(e).forEach(function(n){if(Object(e[n])===e[n]&&\"[object Object]\"===Object.prototype.toString.call(e[n])||\"[object Array]\"===Object.prototype.toString.call(e[n]))return this.dot(e[n],t,i.concat(n));t[i.concat(n).join(this.seperator)]=e[n]}.bind(this)),t},a.pick=c(\"pick\"),a.move=c(\"move\"),a.transfer=c(\"transfer\"),a.transform=c(\"transform\"),a.copy=c(\"copy\"),a.object=c(\"object\"),a.str=c(\"str\"),a.set=c(\"set\"),a.del=a.remove=c(\"remove\"),a.dot=c(\"dot\"),[\"override\",\"overwrite\"].forEach(function(e){Object.defineProperty(a,e,{get:function(){return l.override},set:function(e){l.override=!!e}})}),Object.defineProperty(a,\"useArray\",{get:function(){return l.useArray},set:function(e){l.useArray=e}}),a._process=n,i.exports=a}},sift:{\"package.json\":function(e,t,i){i.exports={name:\"sift\",version:\"3.2.6\",main:\"./sift.js\"}},\"sift.js\":function(e,t,i){!function(){\"use strict\";function e(e){return\"function\"==typeof e}function t(e){return\"[object Array]\"===Object.prototype.toString.call(e)}function n(e){return e instanceof Date?e.getTime():e instanceof Array?e.map(n):e}function r(e,t){return e.get?e.get(t):e[t]}function o(e){return function(i,n){if(!t(n)||!n.length)return e(i,n);for(var o=0,s=n.length;o<s;o++)if(e(i,r(n,o)))return!0;return!1}}function s(e){return function(i,n){if(!t(n)||!n.length)return e(i,n);for(var o=0,s=n.length;o<s;o++)if(!e(i,r(n,o)))return!1;return!0}}function a(e,t){return e.v(e.a,t)}var l={$eq:o(function(e,t){return e(t)}),$ne:s(function(e,t){return!e(t)}),$or:function(e,t){for(var i=0,n=e.length;i<n;i++)if(a(r(e,i),t))return!0;return!1},$gt:o(function(e,t){return k.compare(n(t),e)>0}),$gte:o(function(e,t){return k.compare(n(t),e)>=0}),$lt:o(function(e,t){return k.compare(n(t),e)<0}),$lte:o(function(e,t){return k.compare(n(t),e)<=0}),$mod:o(function(e,t){return t%e[0]==e[1]}),$in:function(e,t){if(!(t instanceof Array))return!!~e.indexOf(n(t));for(var i=t.length;i--;)if(~e.indexOf(n(r(t,i))))return!0;return!1},$nin:function(e,t){return!l.$in(e,t)},$not:function(e,t){return!a(e,t)},$type:function(e,t){return null!=t&&(t instanceof e||t.constructor==e)},$all:function(e,t){t||(t=[]);for(var i=e.length;i--;)if(!~n(t).indexOf(r(e,i)))return!1;return!0},$size:function(e,t){return!!t&&e===t.length},$nor:function(e,t){for(var i=0,n=e.length;i<n;i++)if(a(r(e,i),t))return!1;return!0},$and:function(e,t){for(var i=0,n=e.length;i<n;i++)if(!a(r(e,i),t))return!1;return!0},$regex:o(function(e,t){return\"string\"==typeof t&&e.test(t)}),$where:function(e,t){return e.call(t,t)},$elemMatch:function(e,i){return t(i)?!!~u(i,e):a(e,i)},$exists:function(e,t){return null!=t===e}},c={$eq:function(e){return e instanceof RegExp?function(t){return\"string\"==typeof t&&e.test(t)}:e instanceof Function?e:t(e)&&!e.length?function(e){return t(e)&&!e.length}:null===e?function(e){return null==e}:function(t){return 0===k.compare(n(t),e)}},$ne:function(e){return c.$eq(e)},$and:function(e){return e.map(m)},$or:function(e){return e.map(m)},$nor:function(e){return e.map(m)},$not:function(e){return m(e)},$regex:function(e,t){return new RegExp(e,t.$options)},$where:function(e){return\"string\"==typeof e?new Function(\"obj\",\"return \"+e):e},$elemMatch:function(e){return m(e)},$exists:function(e){return!!e}};function u(e,t){for(var i=0;i<e.length;i++)if(a(t,r(e,i)))return i;return-1}function d(e,t){return{a:e,v:t}}function h(e,t){var i=[];return f(t,e.k,0,i),1===i.length?a(e.nv,i[0]):!!~u(i,e.nv)}function f(e,i,n,o){if(n!==i.length&&null!=e){var s=r(i,n);if(t(e)&&isNaN(Number(s)))for(var a=0,l=e.length;a<l;a++)f(r(e,a),i,n,o);else f(r(e,s),i,n+1,o)}else o.push(e)}function p(e,t){return{a:{k:e,nv:t},v:h}}function m(e){(!(e=n(e))||\"Object\"!==e.constructor.toString()&&\"functionObject(){[nativecode]}\"!==e.constructor.toString().replace(/\\n/g,\"\").replace(/ /g,\"\"))&&(e={$eq:e});var t=[];for(var i in e){var r=e[i];if(\"$options\"!==i)if(l[i])c[i]&&(r=c[i](r,e)),t.push(d(n(r),l[i]));else{if(36===i.charCodeAt(0))throw new Error(\"Unknown operation \"+i);t.push(p(i.split(\".\"),m(r)))}}return 1===t.length?t[0]:d(t,l.$and)}function g(e,t){var i=m(e);return t&&(i={a:i,v:function(e,i){return a(e,t(i))}}),i}function k(t,i,n){e(i)&&(n=i,i=void 0);var r=g(t,n);function o(e){return a(r,e)}return i?i.filter(o):o}k.use=function(t){if(e(t))return t(k);for(var i in t)36===i.charCodeAt(0)&&(l[i]=t[i])},k.indexOf=function(e,t,i){return u(t,g(e,i))},k.compare=function(e,t){if(e===t)return 0;if(typeof e==typeof t){if(e>t)return 1;if(e<t)return-1}},void 0!==i&&void 0!==i.exports&&(i.exports=k),\"undefined\"!=typeof window&&(window.sift=k)}()}},\"deep-extend\":{\"package.json\":function(e,t,i){i.exports={name:\"deep-extend\",version:\"0.5.0\",main:\"lib/deep-extend.js\"}},lib:{\"deep-extend.js\":function(e,t,i){\"use strict\";function n(e){return e instanceof Buffer||e instanceof Date||e instanceof RegExp}function r(e){if(e instanceof Buffer){var t=new Buffer(e.length);return e.copy(t),t}if(e instanceof Date)return new Date(e.getTime());if(e instanceof RegExp)return new RegExp(e);throw new Error(\"Unexpected situation\")}function o(e){var t=[];return e.forEach(function(e,i){\"object\"==typeof e&&null!==e?Array.isArray(e)?t[i]=o(e):n(e)?t[i]=r(e):t[i]=s({},e):t[i]=e}),t}var s=i.exports=function(){if(arguments.length<1||\"object\"!=typeof arguments[0])return!1;if(arguments.length<2)return arguments[0];var e=arguments[0],t,i,a,l;return Array.prototype.slice.call(arguments,1).forEach(function(t){\"object\"!=typeof t||null===t||Array.isArray(t)||Object.keys(t).forEach(function(l){return a=e[l],(i=t[l])===e?void 0:\"object\"!=typeof i||null===i?void(e[l]=i):Array.isArray(i)?void(e[l]=o(i)):n(i)?void(e[l]=r(i)):\"object\"!=typeof a||null===a||Array.isArray(a)?void(e[l]=s({},i)):void(e[l]=s(a,i))})}),e}}}}}}}}},{extensions:[\".js\",\".json\"]})(\"/node_modules/meteor/cultofcoders:grapher/main.client.js\");Package._define(\"cultofcoders:grapher\",b)}();","sourcemap":"{\"version\":3,\"sources\":[\"packages/cultofcoders:grapher/main.client.js\",\"packages/cultofcoders:grapher/lib/compose.js\",\"packages/cultofcoders:grapher/lib/createQuery.js\",\"packages/cultofcoders:grapher/lib/extension.js\",\"packages/cultofcoders:grapher/lib/links/config.schema.js\",\"packages/cultofcoders:grapher/lib/links/constants.js\",\"packages/cultofcoders:grapher/lib/links/extension.js\",\"packages/cultofcoders:grapher/lib/links/linker.js\",\"packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js\",\"packages/cultofcoders:grapher/lib/links/linkTypes/base.js\",\"packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js\",\"packages/cultofcoders:grapher/lib/links/linkTypes/linkManyMeta.js\",\"packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js\",\"packages/cultofcoders:grapher/lib/links/linkTypes/linkOneMeta.js\",\"packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js\",\"packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js\",\"packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js\",\"packages/cultofcoders:grapher/lib/namedQuery/namedQuery.js\",\"packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js\",\"packages/cultofcoders:grapher/lib/namedQuery/store.js\",\"packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js\",\"packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js\",\"packages/cultofcoders:grapher/lib/query/query.base.js\",\"packages/cultofcoders:grapher/lib/query/query.client.js\",\"packages/cultofcoders:grapher/lib/query/query.js\",\"packages/cultofcoders:grapher/lib/query/query.server.js\",\"packages/cultofcoders:grapher/lib/query/counts/collection.js\",\"packages/cultofcoders:grapher/lib/query/counts/constants.js\",\"packages/cultofcoders:grapher/lib/query/counts/countSubscription.js\",\"packages/cultofcoders:grapher/lib/query/counts/createFauxSubscription.js\",\"packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js\",\"packages/cultofcoders:grapher/lib/query/hypernova/assembleAggregateResults.js\",\"packages/cultofcoders:grapher/lib/query/hypernova/assembler.js\",\"packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js\",\"packages/cultofcoders:grapher/lib/query/hypernova/constants.js\",\"packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js\",\"packages/cultofcoders:grapher/lib/query/hypernova/storeHypernovaResults.js\",\"packages/cultofcoders:grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js\",\"packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js\",\"packages/cultofcoders:grapher/lib/query/lib/applyProps.js\",\"packages/cultofcoders:grapher/lib/query/lib/callWithPromise.js\",\"packages/cultofcoders:grapher/lib/query/lib/createGraph.js\",\"packages/cultofcoders:grapher/lib/query/lib/dotize.js\",\"packages/cultofcoders:grapher/lib/query/lib/fieldInProjection.js\",\"packages/cultofcoders:grapher/lib/query/lib/intersectDeep.js\",\"packages/cultofcoders:grapher/lib/query/lib/prepareForDelivery.js\",\"packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js\",\"packages/cultofcoders:grapher/lib/query/lib/recursiveFetch.js\",\"packages/cultofcoders:grapher/lib/query/nodes/collectionNode.js\",\"packages/cultofcoders:grapher/lib/query/nodes/fieldNode.js\",\"packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js\",\"packages/cultofcoders:grapher/lib/query/reducers/extension.js\",\"packages/cultofcoders:grapher/lib/query/reducers/lib/addFieldMap.js\",\"packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js\",\"packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js\",\"packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js\",\"packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js\"],\"names\":[\"module\",\"link\",\"default\",\"deepExtend\",\"v\",\"exportDefault\",\"_len\",\"arguments\",\"length\",\"args\",\"Array\",\"_key\",\"Query\",\"NamedQuery\",\"NamedQueryStore\",\"createNamedQuery\",\"name\",\"collection\",\"body\",\"options\",\"undefined\",\"namedQuery\",\"get\",\"query\",\"clone\",\"params\",\"add\",\"createNormalQuery\",\"_\",\"isFunction\",\"entryPointName\",\"first\",\"keys\",\"Mongo\",\"Collection\",\"Meteor\",\"Error\",\"concat\",\"isDevelopment\",\"console\",\"warn\",\"extend\",\"prototype\",\"createQuery\",\"this\",\"Match\",\"export\",\"DenormalizeSchema\",\"LinkConfigDefaults\",\"LinkConfigSchema\",\"field\",\"String\",\"Object\",\"bypassSchema\",\"Maybe\",\"Boolean\",\"type\",\"OneOf\",\"Where\",\"isObject\",\"_collection\",\"metadata\",\"inversedBy\",\"index\",\"unique\",\"autoremove\",\"denormalize\",\"ObjectIncluding\",\"LINK_STORAGE\",\"Linker\",\"assign\",\"addLinks\",\"data\",\"each\",\"linkConfig\",\"linkName\",\"_name\",\"linker\",\"[object Object]\",\"getLinks\",\"getLinker\",\"hasLink\",\"getLink\",\"objectOrId\",\"linkData\",\"object\",\"isVirtual\",\"_id\",\"findOne\",\"fields\",\"linkStorageField\",\"createLink\",\"LinkMany\",\"LinkManyMeta\",\"LinkOne\",\"LinkOneMeta\",\"smartArguments\",\"dot\",\"check\",\"access\",\"constructor\",\"mainCollection\",\"_validateAndClean\",\"_initAutoremove\",\"_initDenormalization\",\"_handleReferenceRemovalForVirtualLinks\",\"_initIndex\",\"oneTypes\",\"strategy\",\"isMany\",\"relatedLinker\",\"getLinkedCollection\",\"isSingle\",\"isMeta\",\"contains\",\"isOneResult\",\"helperClass\",\"_getHelperClass\",\"collectionName\",\"_prepareVirtual\",\"_generateFieldName\",\"_setupVirtualConfig\",\"startup\",\"virtualLinkConfig\",\"cleanedCollectionName\",\"replace\",\"defaultFieldPrefix\",\"after\",\"remove\",\"userId\",\"doc\",\"accessor\",\"fetchAsArray\",\"linkedObj\",\"unset\",\"isServer\",\"_ensureIndex\",\"sparse\",\"ids\",\"find\",\"fetch\",\"map\",\"item\",\"$in\",\"getIds\",\"packageExists\",\"Package\",\"cacheConfig\",\"referenceFieldSuffix\",\"inversedLink\",\"referenceField\",\"cacheField\",\"cache\",\"isDenormalized\",\"isSubBodyDenormalized\",\"cacheBody\",\"cacheBodyFields\",\"bodyFields\",\"omit\",\"difference\",\"sift\",\"createSearchFilters\",\"fieldStorage\",\"metaFilters\",\"createOneVirtual\",\"createOneMetaVirtual\",\"createManyVirtual\",\"createManyMetaVirtual\",\"createOne\",\"createOneMeta\",\"createMany\",\"createManyMeta\",\"pick\",\"value\",\"filters\",\"key\",\"root\",\"nested\",\"split\",\"arr\",\"uniq\",\"union\",\"obj\",\"join\",\"pluck\",\"$elemMatch\",\"SmartArgs\",\"Link\",\"config\",\"linkedCollection\",\"$metaFilters\",\"$meta\",\"searchFilters\",\"appliedFilters\",\"others\",\"result\",\"_len2\",\"_key2\",\"clean\",\"identifyId\",\"what\",\"saveToDatabase\",\"getId\",\"identifyIds\",\"_validateIds\",\"isArray\",\"validIds\",\"_virtualAction\",\"action\",\"element\",\"elementId\",\"insert\",\"reversedLink\",\"set\",\"_ids\",\"modifier\",\"$addToSet\",\"$each\",\"update\",\"filter\",\"$pull\",\"metadatas\",\"localMetadata\",\"push\",\"extendMetadata\",\"existingMetadata\",\"subfield\",\"subfieldUpdate\",\"$set\",\"subWhat\",\"deepClone\",\"NamedQueryBase\",\"globalConfig\",\"isNamedQuery\",\"queryName\",\"resolver\",\"subscriptionHandle\",\"isExposed\",\"isResolver\",\"setParams\",\"doValidateParams\",\"validateParams\",\"_validate\",\"validationError\",\"error\",\"newParams\",\"_objectSpread2\",\"cacher\",\"exposeConfig\",\"validator\",\"call\",\"defaultOptions\",\"CountSubscription\",\"createGraph\",\"recursiveFetch\",\"prepareForProcess\",\"callWithPromise\",\"Base\",\"LocalCollection\",\"intersectDeep\",\"subscribe\",\"callback\",\"subscribeCount\",\"_counter\",\"unsubscribe\",\"stop\",\"unsubscribeCount\",\"fetchSync\",\"callbackOrOptions\",\"_fetchReactive\",\"_fetchStatic\",\"fetchOne\",\"err\",\"res\",\"getCount\",\"$body\",\"allowSkip\",\"$options\",\"skip\",\"scoped\",\"NamedQueryClient\",\"NamedQueryServer\",\"MemoryResultCacher\",\"context\",\"_performSecurityChecks\",\"_fetchResolverData\",\"doEmbodimentIfItApplies\",\"cacheId\",\"generateQueryId\",\"countCursor\",\"getCursorForCounting\",\"count\",\"$filters\",\"cacheResults\",\"resolve\",\"fn\",\"self\",\"_callFirewall\",\"storage\",\"getAll\",\"EJSON\",\"BaseResultCacher\",\"stringify\",\"_ref\",\"_ref2\",\"cloneDeep\",\"DEFAULT_TTL\",\"super\",\"store\",\"cacheData\",\"fetchData\",\"storeData\",\"ttl\",\"setTimeout\",\"QueryBase\",\"isGlobalQuery\",\"QueryClient\",\"QueryServer\",\"hypernova\",\"node\",\"COUNTS_COLLECTION_CLIENT\",\"ReactiveVar\",\"Tracker\",\"Counts\",\"createFauxSubscription\",\"accessToken\",\"fauxHandle\",\"arg\",\"equals\",\"lastArgs\",\"token\",\"_markedForUnsubscribe\",\"disconnectComputation\",\"autorun\",\"handleDisconnect\",\"id\",\"status\",\"connected\",\"_markedForResume\",\"isSubscribed\",\"countManager\",\"ready\",\"extractIdsFromArray\",\"array\",\"AggregateFilters\",\"collectionNode\",\"parentObjects\",\"parent\",\"results\",\"create\",\"eligibleObjects\",\"storages\",\"arrayOfIds\",\"isValid\",\"cleanObjectForMetaFilters\",\"childCollectionNode\",\"aggregateResults\",\"allResults\",\"metaFiltersTest\",\"parentResult\",\"eligibleAggregateResults\",\"aggregateResult\",\"datas\",\"comparator\",\"childLinkName\",\"parentResults\",\"forEach\",\"filterAssembledData\",\"limit\",\"slice\",\"resultsByKeyId\",\"groupBy\",\"SAFE_DOTTED_FIELD_REPLACEMENT\",\"containsDottedFields\",\"pipeline\",\"firewall\",\"$match\",\"sort\",\"$sort\",\"dataPush\",\"indexOf\",\"safeField\",\"$group\",\"$push\",\"$slice\",\"$project\",\"applyProps\",\"prepareForDelivery\",\"storeHypernovaResults\",\"collectionNodes\",\"hypernovaInit\",\"bypassFirewalls\",\"userIdToPass\",\"assemble\",\"assembleAggregateResults\",\"buildAggregatePipeline\",\"snapBackDottedFields\",\"aggregateFilters\",\"aggregate\",\"filteredOptions\",\"aggregationResult\",\"document\",\"RegExp\",\"restrictOptions\",\"props\",\"applyFields\",\"method\",\"myParameters\",\"Promise\",\"reject\",\"reason\",\"CollectionNode\",\"FieldNode\",\"ReducerNode\",\"dotize\",\"createReducers\",\"specialFields\",\"createNodes\",\"addFieldNode\",\"getNodeNamespace\",\"fieldName\",\"addProp\",\"handleDenormalized\",\"subroot\",\"reducer\",\"getReducer\",\"reducerNode\",\"fieldNodes\",\"isProjectionOperatorExpression\",\"dotted\",\"convert\",\"fieldNode\",\"parts\",\"n\",\"reverse\",\"snapCache\",\"prefix\",\"newObj\",\"recurse\",\"o\",\"p\",\"isArrayItem\",\"f\",\"isEmptyArray\",\"getFieldName\",\"isEmptyObj\",\"isNumber\",\"isNaN\",\"parseInt\",\"prop\",\"hasOwnProperty\",\"expandField\",\"reduce\",\"acc\",\"last\",\"isFieldInProjection\",\"projection\",\"checkNested\",\"some\",\"EXTENDED_SPECIAL_FIELDS\",\"isClientValueValid\",\"values\",\"every\",\"nestedValue\",\"intersectFields\",\"allowed\",\"client\",\"intersection\",\"pairs\",\"clientValue\",\"serverValue\",\"allowedBody\",\"clientBody\",\"build\",\"applyReducers\",\"cleanReducerLeftovers\",\"Minimongo\",\"applyPostFilters\",\"postFilters\",\"$postFilters\",\"applyPostOptions\",\"$postOptions\",\"sorter\",\"Sorter\",\"getComparator\",\"start\",\"end\",\"applyPostFilter\",\"$postFilter\",\"getResultsArray\",\"isUndefined\",\"removeLinkStorages\",\"sameLevelResults\",\"removeStorageField\",\"shouldCleanStorage\",\"removeFromResult\",\"removeEmptyRoot\",\"isEmpty\",\"childResults\",\"childResult\",\"storeOneResults\",\"cloneMetaChildren\",\"assembleMetadata\",\"storeMetadata\",\"parentElement\",\"$metadata\",\"storageItem\",\"snapBackCaches\",\"snapCaches\",\"snapCachesSingles\",\"shoudStoreLinkStorage\",\"defaultFilterFunction\",\"applyFilterRecursive\",\"isRoot\",\"$filter\",\"Function\",\"applyPagination\",\"_params\",\"_body\",\"parentObject\",\"fetchOptions\",\"scopeQuery\",\"$exists\",\"collectionNodeResults\",\"runFieldSanityChecks\",\"nodes\",\"scheduledForDeletion\",\"reducers\",\"reducerNodes\",\"_shouldCleanStorage\",\"_node\",\"hasAddedAnyField\",\"projectionOperator\",\"has\",\"hasField\",\"getField\",\"hasCollectionNode\",\"hasReducerNode\",\"getReducerNode\",\"getCollectionNode\",\"getName\",\"subLinkName\",\"isProjectionOperator\",\"reduceFunction\",\"dependencies\",\"compute\",\"addFieldMap\",\"addReducers\",\"reducerConfig\",\"reducerName\",\"dbField\",\"processedReducers\",\"reducersQueue\",\"shift\",\"allDependenciesComputed\",\"all\",\"dep\",\"includes\",\"flatten\",\"cleanNestedFields\",\"snapCacheField\",\"embedReducerWithLink\",\"handleAddElement\",\"handleAddLink\",\"handleAddReducer\",\"handleAddField\",\"childReducerNode\",\"dots\",\"addFieldIfRequired\",\"nestedFields\",\"startsWith\",\"reducerBody\"],\"mappings\":\"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\",\"sourcesContent\":[\"import './lib/extension.js';\\nimport './lib/links/extension.js';\\nimport './lib/query/reducers/extension.js';\\n\\nexport { default as createQuery } from './lib/createQuery.js';\\n\\nexport {\\n    default as prepareForProcess,\\n} from './lib/query/lib/prepareForProcess';\\n\\nexport { default as Query } from './lib/query/query.client';\\n\\nexport { default as NamedQuery } from './lib/namedQuery/namedQuery.client';\\n\\nexport { default as compose } from './lib/compose';\\n\",\"import deepExtend from 'deep-extend';\\n\\nexport default function (...args) {\\n    return deepExtend({}, ...args);\\n}\",\"import Query from './query/query.js';\\nimport NamedQuery from './namedQuery/namedQuery.js';\\nimport NamedQueryStore from './namedQuery/store.js';\\n\\n/**\\n * This is a polymorphic function, it allows you to create a query as an object\\n * or it also allows you to re-use an existing query if it's a named one\\n *\\n * @param args\\n * @returns {*}\\n */\\nexport default (...args) => {\\n    if (typeof args[0] === 'string') {\\n        let [name, body, options] = args;\\n        options = options || {};\\n\\n        // It's a resolver query\\n        if (_.isFunction(body)) {\\n            return createNamedQuery(name, null, body, options);\\n        }\\n\\n        const entryPointName = _.first(_.keys(body));\\n        const collection = Mongo.Collection.get(entryPointName);\\n\\n        if (!collection) {\\n            throw new Meteor.Error('invalid-name', `We could not find any collection with the name \\\"${entryPointName}\\\". Make sure it is imported prior to using this`)\\n        }\\n\\n        return createNamedQuery(name, collection, body[entryPointName], options);\\n    } else {\\n        // Query Creation, it can have an endpoint as collection or as a NamedQuery\\n        let [body, options] = args;\\n        options = options || {};\\n\\n        const entryPointName = _.first(_.keys(body));\\n        const collection = Mongo.Collection.get(entryPointName);\\n\\n        if (!collection) {\\n            if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\\n                console.warn(`You are creating a query with the entry point \\\"${entryPointName}\\\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.`)\\n            }\\n\\n            return createNamedQuery(entryPointName, null, {}, {params: body[entryPointName]});\\n        } else {\\n            return createNormalQuery(collection, body[entryPointName], options);\\n        }\\n    }\\n}\\n\\nfunction createNamedQuery(name, collection, body, options = {}) {\\n    // if it exists already, we re-use it\\n    const namedQuery = NamedQueryStore.get(name);\\n    let query;\\n\\n    if (!namedQuery) {\\n        query = new NamedQuery(name, collection, body, options);\\n        NamedQueryStore.add(name, query);\\n    } else {\\n        query = namedQuery.clone(options.params);\\n    }\\n\\n    return query;\\n}\\n\\nfunction createNormalQuery(collection, body, options)  {\\n    return new Query(collection, body, options);\\n}\\n\",\"import Query from './query/query.js';\\nimport NamedQuery from './namedQuery/namedQuery.js';\\nimport NamedQueryStore from './namedQuery/store.js';\\n\\n_.extend(Mongo.Collection.prototype, {\\n    createQuery(...args) {\\n        if (typeof args[0] === 'string') {\\n            //NamedQuery\\n            const [name, body, options] = args;\\n            const query = new NamedQuery(name, this, body, options);\\n            NamedQueryStore.add(name, query);\\n\\n            return query;\\n        } else {\\n            const [body, options] = args;\\n\\n            return new Query(this, body, options);\\n        }\\n    },\\n});\\n\",\"import {Match} from 'meteor/check';\\nimport {Mongo} from 'meteor/mongo';\\n\\nexport const DenormalizeSchema = {\\n    field: String,\\n    body: Object,\\n    bypassSchema: Match.Maybe(Boolean)\\n};\\n\\nexport const LinkConfigDefaults = {\\n    type: 'one',\\n};\\n\\nexport const LinkConfigSchema = {\\n    type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\\n    collection: Match.Maybe(\\n        Match.Where(collection => {\\n            // We do like this so it works with other types of collections \\n            // like FS.Collection\\n            return _.isObject(collection) && (\\n                collection instanceof Mongo.Collection\\n                || \\n                !!collection._collection\\n            );\\n        })\\n    ),\\n    field: Match.Maybe(String),\\n    metadata: Match.Maybe(Boolean),\\n    inversedBy: Match.Maybe(String),\\n    index: Match.Maybe(Boolean),\\n    unique: Match.Maybe(Boolean),\\n    autoremove: Match.Maybe(Boolean),\\n    denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema)),\\n};\",\"export const LINK_STORAGE = '__links';\\n\",\"import { Mongo } from 'meteor/mongo';\\nimport { LINK_STORAGE } from './constants.js';\\nimport Linker from './linker.js';\\n\\nObject.assign(Mongo.Collection.prototype, {\\n    /**\\n     * The data we add should be valid for config.schema.js\\n     */\\n    addLinks(data) {\\n        if (!this[LINK_STORAGE]) {\\n            this[LINK_STORAGE] = {};\\n        }\\n\\n        _.each(data, (linkConfig, linkName) => {\\n            if (this[LINK_STORAGE][linkName]) {\\n                throw new Meteor.Error(\\n                    `You cannot add the link with name: ${linkName} because it was already added to ${\\n                        this._name\\n                    } collection`\\n                );\\n            }\\n\\n            const linker = new Linker(this, linkName, linkConfig);\\n\\n            _.extend(this[LINK_STORAGE], {\\n                [linkName]: linker,\\n            });\\n        });\\n    },\\n\\n    getLinks() {\\n        return this[LINK_STORAGE];\\n    },\\n\\n    getLinker(name) {\\n        if (this[LINK_STORAGE]) {\\n            return this[LINK_STORAGE][name];\\n        }\\n    },\\n\\n    hasLink(name) {\\n        if (!this[LINK_STORAGE]) {\\n            return false;\\n        }\\n\\n        return !!this[LINK_STORAGE][name];\\n    },\\n\\n    getLink(objectOrId, name) {\\n        let linkData = this[LINK_STORAGE];\\n\\n        if (!linkData) {\\n            throw new Meteor.Error(\\n                `There are no links defined for collection: ${this._name}`\\n            );\\n        }\\n\\n        if (!linkData[name]) {\\n            throw new Meteor.Error(\\n                `There is no link ${name} for collection: ${this._name}`\\n            );\\n        }\\n\\n        const linker = linkData[name];\\n        let object = objectOrId;\\n        if (typeof objectOrId == 'string') {\\n            if (!linker.isVirtual()) {\\n                object = this.findOne(objectOrId, {\\n                    fields: {\\n                        [linker.linkStorageField]: 1,\\n                    },\\n                });\\n            } else {\\n                object = { _id: objectOrId };\\n            }\\n\\n            if (!object) {\\n                throw new Meteor.Error(\\n                    `We could not find any object with _id: \\\"${objectOrId}\\\" within the collection: ${\\n                        this._name\\n                    }`\\n                );\\n            }\\n        }\\n\\n        return linkData[name].createLink(object);\\n    },\\n});\\n\",\"import LinkMany from './linkTypes/linkMany.js';\\nimport LinkManyMeta from './linkTypes/linkManyMeta.js';\\nimport LinkOne from './linkTypes/linkOne.js';\\nimport LinkOneMeta from './linkTypes/linkOneMeta.js';\\nimport { LinkConfigSchema, LinkConfigDefaults } from './config.schema.js';\\nimport smartArguments from './linkTypes/lib/smartArguments';\\nimport dot from 'dot-object';\\nimport { check } from 'meteor/check';\\nimport { _ } from 'meteor/underscore';\\nimport { access } from 'fs';\\n\\nexport default class Linker {\\n    /**\\n     * @param mainCollection\\n     * @param linkName\\n     * @param linkConfig\\n     */\\n    constructor(mainCollection, linkName, linkConfig) {\\n        this.mainCollection = mainCollection;\\n        this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\\n        this.linkName = linkName;\\n\\n        // check linkName must not exist in schema\\n        this._validateAndClean();\\n\\n        // initialize cascade removal hooks.\\n        this._initAutoremove();\\n        this._initDenormalization();\\n\\n        if (this.isVirtual()) {\\n            // if it's a virtual field make sure that when this is deleted, it will be removed from the references\\n            if (!linkConfig.autoremove) {\\n                this._handleReferenceRemovalForVirtualLinks();\\n            }\\n        } else {\\n            this._initIndex();\\n        }\\n    }\\n\\n    /**\\n     * Values which represent for the relation a single link\\n     * @returns {string[]}\\n     */\\n    get oneTypes() {\\n        return ['one', '1'];\\n    }\\n\\n    /**\\n     * Returns the strategies: one, many, one-meta, many-meta\\n     * @returns {string}\\n     */\\n    get strategy() {\\n        let strategy = this.isMany() ? 'many' : 'one';\\n        if (this.linkConfig.metadata) {\\n            strategy += '-meta';\\n        }\\n\\n        return strategy;\\n    }\\n\\n    /**\\n     * Returns the field name in the document where the actual relationships are stored.\\n     * @returns string\\n     */\\n    get linkStorageField() {\\n        if (this.isVirtual()) {\\n            return this.linkConfig.relatedLinker.linkStorageField;\\n        }\\n\\n        return this.linkConfig.field;\\n    }\\n\\n    /**\\n     * The collection that is linked with the current collection\\n     * @returns Mongo.Collection\\n     */\\n    getLinkedCollection() {\\n        return this.linkConfig.collection;\\n    }\\n\\n    /**\\n     * If the relationship for this link is of \\\"many\\\" type.\\n     */\\n    isMany() {\\n        return !this.isSingle();\\n    }\\n\\n    /**\\n     * If the relationship for this link contains metadata\\n     */\\n    isMeta() {\\n        if (this.isVirtual()) {\\n            return this.linkConfig.relatedLinker.isMeta();\\n        }\\n\\n        return !!this.linkConfig.metadata;\\n    }\\n\\n    /**\\n     * @returns {boolean}\\n     */\\n    isSingle() {\\n        if (this.isVirtual()) {\\n            return this.linkConfig.relatedLinker.isSingle();\\n        }\\n\\n        return _.contains(this.oneTypes, this.linkConfig.type);\\n    }\\n\\n    /**\\n     * @returns {boolean}\\n     */\\n    isVirtual() {\\n        return !!this.linkConfig.inversedBy;\\n    }\\n\\n    /**\\n     * Should return a single result.\\n     */\\n    isOneResult() {\\n        return (\\n            (this.isVirtual() &&\\n                this.linkConfig.relatedLinker.linkConfig.unique) ||\\n            (!this.isVirtual() && this.isSingle())\\n        );\\n    }\\n\\n    /**\\n     * @param object\\n     * @param collection To impersonate the getLinkedCollection() of the \\\"Linker\\\"\\n     *\\n     * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\\n     */\\n    createLink(object, collection = null) {\\n        let helperClass = this._getHelperClass();\\n\\n        return new helperClass(this, object, collection);\\n    }\\n\\n    /**\\n     * @returns {*}\\n     * @private\\n     */\\n    _validateAndClean() {\\n        if (!this.linkConfig.collection) {\\n            throw new Meteor.Error(\\n                'invalid-config',\\n                `For the link ${\\n                    this.linkName\\n                } you did not provide a collection.`\\n            );\\n        }\\n\\n        if (typeof this.linkConfig.collection === 'string') {\\n            const collectionName = this.linkConfig.collection;\\n            this.linkConfig.collection = Mongo.Collection.get(collectionName);\\n\\n            if (!this.linkConfig.collection) {\\n                throw new Meteor.Error(\\n                    'invalid-collection',\\n                    `Could not find a collection with the name: ${collectionName}`\\n                );\\n            }\\n        }\\n\\n        if (this.isVirtual()) {\\n            return this._prepareVirtual();\\n        } else {\\n            if (!this.linkConfig.type) {\\n                this.linkConfig.type = 'one';\\n            }\\n\\n            if (!this.linkConfig.field) {\\n                this.linkConfig.field = this._generateFieldName();\\n            } else {\\n                if (this.linkConfig.field == this.linkName) {\\n                    throw new Meteor.Error(\\n                        'invalid-config',\\n                        `For the link ${\\n                            this.linkName\\n                        } you must not use the same name for the field, otherwise it will cause conflicts when fetching data`\\n                    );\\n                }\\n            }\\n        }\\n\\n        check(this.linkConfig, LinkConfigSchema);\\n    }\\n\\n    /**\\n     * We need to apply same type of rules in this case.\\n     * @private\\n     */\\n    _prepareVirtual() {\\n        const { collection, inversedBy } = this.linkConfig;\\n        let linker = collection.getLinker(inversedBy);\\n\\n        if (!linker) {\\n            // it is possible that the collection doesn't have a linker created yet.\\n            // so we will create it on startup after all links have been defined\\n            Meteor.startup(() => {\\n                linker = collection.getLinker(inversedBy);\\n                if (!linker) {\\n                    throw new Meteor.Error(\\n                        `You tried setting up an inversed link in \\\"${\\n                            this.mainCollection._name\\n                        }\\\" pointing to collection: \\\"${\\n                            collection._name\\n                        }\\\" link: \\\"${inversedBy}\\\", but no such link was found. Maybe a typo ?`\\n                    );\\n                } else {\\n                    this._setupVirtualConfig(linker);\\n                }\\n            });\\n        } else {\\n            this._setupVirtualConfig(linker);\\n        }\\n    }\\n\\n    /**\\n     * @param linker\\n     * @private\\n     */\\n    _setupVirtualConfig(linker) {\\n        const virtualLinkConfig = linker.linkConfig;\\n\\n        if (!virtualLinkConfig) {\\n            throw new Meteor.Error(\\n                `There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`\\n            );\\n        }\\n\\n        _.extend(this.linkConfig, {\\n            metadata: virtualLinkConfig.metadata,\\n            relatedLinker: linker,\\n        });\\n    }\\n\\n    /**\\n     * Depending on the strategy, we create the proper helper class\\n     * @private\\n     */\\n    _getHelperClass() {\\n        switch (this.strategy) {\\n            case 'many-meta':\\n                return LinkManyMeta;\\n            case 'many':\\n                return LinkMany;\\n            case 'one-meta':\\n                return LinkOneMeta;\\n            case 'one':\\n                return LinkOne;\\n        }\\n\\n        throw new Meteor.Error(\\n            'invalid-strategy',\\n            `${this.strategy} is not a valid strategy`\\n        );\\n    }\\n\\n    /**\\n     * If field name not present, we generate it.\\n     * @private\\n     */\\n    _generateFieldName() {\\n        let cleanedCollectionName = this.linkConfig.collection._name.replace(\\n            /\\\\./g,\\n            '_'\\n        );\\n        let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\\n\\n        switch (this.strategy) {\\n            case 'many-meta':\\n                return `${defaultFieldPrefix}_metas`;\\n            case 'many':\\n                return `${defaultFieldPrefix}_ids`;\\n            case 'one-meta':\\n                return `${defaultFieldPrefix}_meta`;\\n            case 'one':\\n                return `${defaultFieldPrefix}_id`;\\n        }\\n    }\\n\\n    /**\\n     * When a link that is declared virtual is removed, the reference will be removed from every other link.\\n     * @private\\n     */\\n    _handleReferenceRemovalForVirtualLinks() {\\n        this.mainCollection.after.remove((userId, doc) => {\\n            // this problem may occur when you do a .remove() before Meteor.startup()\\n            if (!this.linkConfig.relatedLinker) {\\n                console.warn(\\n                    `There was an error finding the link for removal for collection: \\\"${\\n                        this.mainCollection._name\\n                    }\\\" with link: \\\"${\\n                        this.linkName\\n                    }\\\". This may occur when you do a .remove() before Meteor.startup()`\\n                );\\n                return;\\n            }\\n\\n            const accessor = this.createLink(doc);\\n\\n            _.each(accessor.fetchAsArray(), linkedObj => {\\n                const { relatedLinker } = this.linkConfig;\\n                // We do this check, to avoid self-referencing hell when defining virtual links\\n                // Virtual links if not found \\\"compile-time\\\", we will try again to reprocess them on Meteor.startup\\n                // if a removal happens before Meteor.startup this may fail\\n                if (relatedLinker) {\\n                    let link = relatedLinker.createLink(linkedObj);\\n\\n                    if (relatedLinker.isSingle()) {\\n                        link.unset();\\n                    } else {\\n                        link.remove(doc);\\n                    }\\n                }\\n            });\\n        });\\n    }\\n\\n    _initIndex() {\\n        if (Meteor.isServer) {\\n            let field = this.linkConfig.field;\\n            if (this.linkConfig.metadata) {\\n                field = field + '._id';\\n            }\\n\\n            if (this.linkConfig.index) {\\n                if (this.isVirtual()) {\\n                    throw new Meteor.Error(\\n                        'You cannot set index on an inversed link.'\\n                    );\\n                }\\n\\n                let options;\\n                if (this.linkConfig.unique) {\\n                    options = { unique: true };\\n                }\\n\\n                this.mainCollection._ensureIndex({ [field]: 1 }, options);\\n            } else {\\n                if (this.linkConfig.unique) {\\n                    if (this.isVirtual()) {\\n                        throw new Meteor.Error(\\n                            'You cannot set unique property on an inversed link.'\\n                        );\\n                    }\\n\\n                    this.mainCollection._ensureIndex(\\n                        {\\n                            [field]: 1,\\n                        },\\n                        { unique: true, sparse: true }\\n                    );\\n                }\\n            }\\n        }\\n    }\\n\\n    _initAutoremove() {\\n        if (!this.linkConfig.autoremove) {\\n            return;\\n        }\\n\\n        if (!this.isVirtual()) {\\n            this.mainCollection.after.remove((userId, doc) => {\\n                this.getLinkedCollection().remove({\\n                    _id: {\\n                        $in: smartArguments.getIds(doc[this.linkStorageField]),\\n                    },\\n                });\\n            });\\n        } else {\\n            this.mainCollection.after.remove((userId, doc) => {\\n                const linker = this.mainCollection.getLink(doc, this.linkName);\\n                const ids = linker\\n                    .find({}, { fields: { _id: 1 } })\\n                    .fetch()\\n                    .map(item => item._id);\\n\\n                this.getLinkedCollection().remove({\\n                    _id: { $in: ids },\\n                });\\n            });\\n        }\\n    }\\n\\n    /**\\n     * Initializes denormalization using herteby:denormalize\\n     * @private\\n     */\\n    _initDenormalization() {\\n        if (!this.linkConfig.denormalize || !Meteor.isServer) {\\n            return;\\n        }\\n\\n        const packageExists = !!Package['herteby:denormalize'];\\n        if (!packageExists) {\\n            throw new Meteor.Error(\\n                'missing-package',\\n                `Please add the herteby:denormalize package to your Meteor application in order to make caching work`\\n            );\\n        }\\n\\n        const { field, body, bypassSchema } = this.linkConfig.denormalize;\\n        let cacheConfig;\\n\\n        let referenceFieldSuffix = '';\\n        if (this.isMeta()) {\\n            referenceFieldSuffix = this.isSingle() ? '._id' : ':_id';\\n        }\\n\\n        if (this.isVirtual()) {\\n            let inversedLink = this.linkConfig.relatedLinker.linkConfig;\\n\\n            let type =\\n                inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\\n\\n            cacheConfig = {\\n                type: type,\\n                collection: this.linkConfig.collection,\\n                fields: body,\\n                referenceField: inversedLink.field + referenceFieldSuffix,\\n                cacheField: field,\\n                bypassSchema: !!bypassSchema,\\n            };\\n        } else {\\n            cacheConfig = {\\n                type: this.linkConfig.type,\\n                collection: this.linkConfig.collection,\\n                fields: body,\\n                referenceField: this.linkConfig.field + referenceFieldSuffix,\\n                cacheField: field,\\n                bypassSchema: !!bypassSchema,\\n            };\\n        }\\n\\n        if (this.isVirtual()) {\\n            Meteor.startup(() => {\\n                this.mainCollection.cache(cacheConfig);\\n            });\\n        } else {\\n            this.mainCollection.cache(cacheConfig);\\n        }\\n    }\\n\\n    /**\\n     * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\\n     *\\n     * @returns {boolean}\\n     * @private\\n     */\\n    isDenormalized() {\\n        return !!this.linkConfig.denormalize;\\n    }\\n\\n    /**\\n     * Verifies if the body of the linked element does not contain fields outside the cache body\\n     *\\n     * @param body\\n     * @returns {boolean}\\n     * @private\\n     */\\n    isSubBodyDenormalized(body) {\\n        const cacheBody = this.linkConfig.denormalize.body;\\n\\n        const cacheBodyFields = _.keys(dot.dot(cacheBody));\\n        const bodyFields = _.keys(dot.dot(_.omit(body, '_id')));\\n\\n        return _.difference(bodyFields, cacheBodyFields).length === 0;\\n    }\\n}\\n\",\"import sift from 'sift';\\nimport dot from 'dot-object';\\n\\nexport default function createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\\n    if (!isVirtual) {\\n        switch (strategy) {\\n            case 'one': return createOne(object, fieldStorage);\\n            case 'one-meta': return createOneMeta(object, fieldStorage, metaFilters);\\n            case 'many': return createMany(object, fieldStorage);\\n            case 'many-meta': return createManyMeta(object, fieldStorage, metaFilters);\\n            default:\\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\\n        }\\n    } else {\\n        switch (strategy) {\\n            case 'one': return createOneVirtual(object, fieldStorage);\\n            case 'one-meta': return createOneMetaVirtual(object, fieldStorage, metaFilters);\\n            case 'many': return createManyVirtual(object, fieldStorage);\\n            case 'many-meta': return createManyMetaVirtual(object, fieldStorage, metaFilters);\\n            default:\\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\\n        }\\n    }\\n}\\n\\nexport function createOne(object, fieldStorage) {\\n    return {\\n        _id: dot.pick(fieldStorage, object)\\n    };\\n}\\n\\nexport function createOneVirtual(object, fieldStorage) {\\n    return {\\n        [fieldStorage]: object._id\\n    };\\n}\\n\\nexport function createOneMeta(object, fieldStorage, metaFilters) {\\n    const value = object[fieldStorage];\\n\\n    if (metaFilters) {\\n        if (!sift(metaFilters)(value)) {\\n            return {_id: undefined};\\n        }\\n    }\\n\\n    return {\\n        _id: value ? value._id : value\\n    };\\n}\\n\\nexport function createOneMetaVirtual(object, fieldStorage, metaFilters) {\\n    let filters = {};\\n    if (metaFilters) {\\n        _.each(metaFilters, (value, key) => {\\n            filters[fieldStorage + '.' + key] = value;\\n        })\\n    }\\n\\n    filters[fieldStorage + '._id'] = object._id;\\n\\n    return filters;\\n}\\n\\nexport function createMany(object, fieldStorage) {\\n    const [root, ...nested] = fieldStorage.split('.');\\n    if (nested.length > 0) {\\n        const arr = object[root];\\n        const ids = arr ? _.uniq(_.union(arr.map(obj => _.isObject(obj) ? dot.pick(nested.join('.'), obj) : []))) : [];\\n        return {\\n            _id: {$in: ids}\\n        };\\n    }\\n    return {\\n        _id: {\\n            $in: object[fieldStorage] || []\\n        }\\n    };\\n}\\n\\nexport function createManyVirtual(object, fieldStorage) {\\n    return {\\n        [fieldStorage]: object._id\\n    };\\n}\\n\\nexport function createManyMeta(object, fieldStorage, metaFilters) {\\n    let value = object[fieldStorage];\\n\\n    if (metaFilters) {\\n        value = sift(metaFilters, value)\\n    }\\n\\n    return {\\n        _id: {\\n            $in: _.pluck(value, '_id') || []\\n        }\\n    };\\n}\\n\\nexport function createManyMetaVirtual(object, fieldStorage, metaFilters) {\\n    let filters = {};\\n    if (metaFilters) {\\n        _.each(metaFilters, (value, key) => {\\n            filters[key] = value;\\n        })\\n    }\\n\\n    filters._id = object._id;\\n\\n    return {\\n        [fieldStorage]: {$elemMatch: filters}\\n    };\\n}\",\"import SmartArgs from './lib/smartArguments.js';\\nimport createSearchFilters from '../lib/createSearchFilters';\\n\\nexport default class Link {\\n    get config() { return this.linker.linkConfig; }\\n\\n    get isVirtual() { return this.linker.isVirtual() }\\n\\n    constructor(linker, object, collection) {\\n        this.linker = linker;\\n        this.object = object;\\n        this.linkedCollection = (collection) ? collection : linker.getLinkedCollection();\\n\\n        if (this.linker.isVirtual()) {\\n            this.linkStorageField = this.config.relatedLinker.linkConfig.field;\\n        } else {\\n            this.linkStorageField = this.config.field;\\n        }\\n    }\\n\\n    /**\\n     * Gets the stored link information value\\n     * @returns {*}\\n     */\\n    value() {\\n        if (this.isVirtual) {\\n            throw new Meteor.Error('You can only take the value from the main link.');\\n        }\\n\\n        return this.object[this.linkStorageField];\\n    }\\n\\n    /**\\n     * Finds linked data.\\n     *\\n     * @param filters\\n     * @param options\\n     * @returns {*}\\n     * @param userId\\n     */\\n    find(filters = {}, options = {}, userId = undefined) {\\n        let linker = this.linker;\\n        const linkedCollection = this.linkedCollection;\\n\\n        let $metaFilters;\\n        if (filters.$meta) {\\n            $metaFilters = filters.$meta;\\n            delete filters.$meta;\\n        }\\n\\n        const searchFilters = createSearchFilters(\\n            this.object,\\n            this.linkStorageField,\\n            linker.strategy,\\n            linker.isVirtual(),\\n            $metaFilters\\n        );\\n\\n        let appliedFilters = _.extend({}, filters, searchFilters);\\n\\n        // see https://github.com/cult-of-coders/grapher/issues/134\\n        // happens due to recursive importing of modules\\n        // TODO: find another way to do this\\n        if (linkedCollection.find) {\\n            return linkedCollection.find(appliedFilters, options, userId)\\n        } else {\\n            return linkedCollection.default.find(appliedFilters, options, userId);\\n        }\\n    }\\n\\n    /**\\n     * @param filters\\n     * @param options\\n     * @param others\\n     * @returns {*|{content}|any}\\n     */\\n    fetch(filters, options, ...others) {\\n        let result = this.find(filters, options, ...others).fetch();\\n\\n        if (this.linker.isOneResult()) {\\n            return _.first(result);\\n        }\\n\\n        return result;\\n    }\\n\\n    /**\\n     * This is just like fetch() but forces to get an array even if it's single result\\n     * \\n     * @param {*} filters \\n     * @param {*} options \\n     * @param  {...any} others \\n     */\\n    fetchAsArray(filters, options, ...others) {\\n        return this.find(filters, options, ...others).fetch()\\n    }\\n\\n    /**\\n     * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\\n     * We use clean to make it an empty array by default.\\n     */\\n    clean() {}\\n\\n    /**\\n     * Extracts a single id\\n     */\\n    identifyId(what, saveToDatabase) {\\n        return SmartArgs.getId(what, {\\n            saveToDatabase,\\n            collection: this.linkedCollection\\n        });\\n    }\\n\\n    /**\\n     * Extracts the ids of object(s) or strings and returns an array.\\n     */\\n    identifyIds(what, saveToDatabase) {\\n        return SmartArgs.getIds(what, {\\n            saveToDatabase,\\n            collection: this.linkedCollection\\n        });\\n    }\\n\\n    /**\\n     * Checks when linking data, if the ids are valid with the linked collection.\\n     * @throws Meteor.Error\\n     * @param ids\\n     *\\n     * @protected\\n     */\\n    _validateIds(ids) {\\n        if (!_.isArray(ids)) {\\n            ids = [ids];\\n        }\\n\\n        const validIds = this.linkedCollection.find({\\n            _id: {$in: ids}\\n        }, {fields: {_id: 1}}).fetch().map(doc => doc._id);\\n\\n        if (validIds.length != ids.length) {\\n            throw new Meteor.Error('not-found', `You tried to create links with non-existing id(s) inside \\\"${this.linkedCollection._name}\\\": ${_.difference(ids, validIds).join(', ')}`)\\n        }\\n    }\\n\\n    /**\\n     * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\\n     *\\n     * @param action\\n     * @param what\\n     * @param metadata\\n     *\\n     * @protected\\n     */\\n    _virtualAction(action, what, metadata) {\\n        const linker = this.linker.linkConfig.relatedLinker;\\n\\n        // its an unset operation most likely.\\n        if (what === undefined) {\\n            const reversedLink = linker.createLink(this.fetch());\\n            reversedLink.unset();\\n\\n            return;\\n        }\\n\\n        if (!_.isArray(what)) {\\n            what = [what];\\n        }\\n\\n        what = _.map(what, element => {\\n            if (!_.isObject(element)) {\\n                return linker.mainCollection.findOne(element);\\n            } else {\\n                if (!element._id) {\\n                    const elementId = linker.mainCollection.insert(element);\\n                    _.extend(element, linker.mainCollection.findOne(elementId));\\n                }\\n\\n                return element;\\n            }\\n        });\\n\\n        return _.map(what, element => {\\n            const reversedLink = linker.createLink(element);\\n\\n            if (action == 'metadata') {\\n                if (linker.isSingle()) {\\n                    return reversedLink.metadata(metadata);\\n                } else {\\n                    return reversedLink.metadata(this.object, metadata);\\n                }\\n            } else if (action == 'add' || action == 'set') {\\n                if (linker.isSingle()) {\\n                    reversedLink.set(this.object, metadata);\\n                } else {\\n                    reversedLink.add(this.object, metadata);\\n                }\\n            } else {\\n                if (linker.isSingle()) {\\n                    reversedLink.unset();\\n                } else {\\n                    reversedLink.remove(this.object);\\n                }\\n            }\\n        });\\n    }\\n}\\n\",\"import Link from './base.js';\\nimport dot from 'dot-object';\\nimport SmartArgs from './lib/smartArguments.js';\\n\\nexport default class LinkMany extends Link {\\n    clean() {\\n        if (!this.object[this.linkStorageField]) {\\n            this.object[this.linkStorageField] = [];\\n        }\\n    }\\n\\n    /**\\n     * Ads the _ids to the object.\\n     * @param what\\n     */\\n    add(what) {\\n        if (this.isVirtual) {\\n            this._virtualAction('add', what);\\n            return this;\\n        }\\n\\n        //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\\n\\n        this.clean();\\n\\n        const _ids = this.identifyIds(what, true);\\n        this._validateIds(_ids);\\n\\n        const field = this.linkStorageField;\\n\\n        // update the field\\n        this.object[field] = _.union(this.object[field], _ids);\\n\\n        // update the db\\n        let modifier = {\\n            $addToSet: {\\n                [field]: {$each: _ids}\\n            }\\n        };\\n\\n        this.linker.mainCollection.update(this.object._id, modifier);\\n\\n        return this;\\n    }\\n\\n    /**\\n     * @param what\\n     */\\n    remove(what) {\\n        if (this.isVirtual) {\\n            this._virtualAction('remove', what);\\n            return this;\\n        }\\n\\n        if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\\n\\n        this.clean();\\n        const field = this.linkStorageField;\\n        const [root, ...nested] = field.split('.');\\n\\n        const _ids = this.identifyIds(what);\\n\\n        // update the field\\n        this.object[root] = _.filter(\\n            this.object[root],\\n    _id => !_.contains(_ids, nested.length > 0 ? dot.pick(nested.join('.'), _id) : _id)\\n        );\\n\\n        // update the db\\n        let modifier = {\\n            $pull: {\\n                [root]: nested.length > 0 ? {[nested.join('.')]: {$in: _ids}} : {$in: _ids},\\n            },\\n        };\\n\\n        this.linker.mainCollection.update(this.object._id, modifier);\\n\\n        return this;\\n    }\\n\\n    set(what) {\\n        if (this.isVirtual) {\\n            this._virtualAction('set', what);\\n            return this;\\n        }\\n\\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\\n    }\\n\\n    unset(what) {\\n        if (this.isVirtual) {\\n            this._virtualAction('unset', what);\\n            return this;\\n        }\\n\\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\\n    }\\n}\",\"import Link from './base.js';\\nimport SmartArgs from './lib/smartArguments.js';\\n\\nexport default class LinkManyMeta extends Link {\\n    clean() {\\n        if (!this.object[this.linkStorageField]) {\\n            this.object[this.linkStorageField] = [];\\n        }\\n    }\\n\\n    /**\\n     * @param what\\n     * @param metadata\\n     */\\n    add(what, metadata = {}) {\\n        if (this.isVirtual) {\\n            this._virtualAction('add', what, metadata);\\n            return this;\\n        }\\n\\n        const _ids = this.identifyIds(what, true);\\n        this._validateIds(_ids);\\n\\n        let field = this.linkStorageField;\\n\\n        this.object[field] = this.object[field] || [];\\n        let metadatas = [];\\n\\n        _.each(_ids, _id => {\\n            let localMetadata = _.clone(metadata);\\n            localMetadata._id = _id;\\n\\n            this.object[field].push(localMetadata);\\n            metadatas.push(localMetadata);\\n        });\\n\\n        let modifier = {\\n            $addToSet: {\\n                [field]: {$each: metadatas}\\n            }\\n        };\\n\\n        this.linker.mainCollection.update(this.object._id, modifier);\\n\\n        return this;\\n    }\\n\\n    /**\\n     * @param what\\n     * @param extendMetadata\\n     */\\n    metadata(what, extendMetadata) {\\n        if (this.isVirtual) {\\n            this._virtualAction('metadata', what, extendMetadata);\\n\\n            return this;\\n        }\\n\\n        let field = this.linkStorageField;\\n\\n        if (what === undefined) {\\n            return this.object[field];\\n        }\\n\\n        if (_.isArray(what)) {\\n            throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\\n        }\\n\\n        const _id = this.identifyId(what);\\n\\n        let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\\n        if (extendMetadata === undefined) {\\n            return existingMetadata;\\n        } else {\\n            _.extend(existingMetadata, extendMetadata);\\n            let subfield = field + '._id';\\n            let subfieldUpdate = field + '.$';\\n\\n            this.linker.mainCollection.update({\\n                _id: this.object._id,\\n                [subfield]: _id\\n            }, {\\n               $set: {\\n                   [subfieldUpdate]: existingMetadata\\n               }\\n            });\\n        }\\n\\n        return this;\\n    }\\n\\n    remove(what) {\\n        if (this.isVirtual) {\\n            this._virtualAction('remove', what);\\n            return this;\\n        }\\n\\n        const _ids = this.identifyIds(what);\\n        let field = this.linkStorageField;\\n\\n        this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\\n\\n        let modifier = {\\n            $pull: {\\n                [field]: {\\n                    _id: {\\n                        $in: _ids\\n                    }\\n                }\\n            }\\n        };\\n\\n        this.linker.mainCollection.update(this.object._id, modifier);\\n\\n        return this;\\n    }\\n\\n    set(what, metadata) {\\n        if (this.isVirtual) {\\n            this._virtualAction('set', what, metadata);\\n            return this;\\n        }\\n\\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\\n    }\\n\\n    unset(what) {\\n        if (this.isVirtual) {\\n            this._virtualAction('unset', what);\\n            return this;\\n        }\\n\\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\\n    }\\n}\",\"import Link from './base.js';\\nimport SmartArgs from './lib/smartArguments.js';\\n\\nexport default class LinkOne extends Link {\\n    set(what) {\\n        if (this.isVirtual) {\\n            this._virtualAction('set', what);\\n            return this;\\n        }\\n\\n        let field = this.linkStorageField;\\n        const _id = this.identifyId(what, true);\\n        this._validateIds([_id]);\\n\\n        this.object[field] = _id;\\n\\n        this.linker.mainCollection.update(this.object._id, {\\n            $set: {\\n                [field]: _id\\n            }\\n        });\\n\\n        return this;\\n    }\\n\\n    unset() {\\n        if (this.isVirtual) {\\n            this._virtualAction('unset', what);\\n            return this;\\n        }\\n\\n        let field = this.linkStorageField;\\n        this.object[field] = null;\\n\\n        this.linker.mainCollection.update(this.object._id, {\\n            $set: {\\n                [field]: null\\n            }\\n        });\\n\\n        return this;\\n    }\\n\\n    add(what) {\\n        if (this.isVirtual) {\\n            this._virtualAction('add', what);\\n            return this;\\n        }\\n\\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\\n    }\\n\\n    remove(what) {\\n        if (this.isVirtual) {\\n            this._virtualAction('remove', what);\\n            return this;\\n        }\\n\\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\\n    }\\n}\",\"import Link from './base.js';\\nimport SmartArgs from './lib/smartArguments.js';\\n\\nexport default class LinkOneMeta extends Link {\\n    set(what, metadata = {}) {\\n        if (this.isVirtual) {\\n            this._virtualAction('set', what);\\n            return this;\\n        }\\n\\n        let field = this.linkStorageField;\\n        metadata._id = this.identifyId(what, true);\\n        this._validateIds([metadata._id]);\\n\\n        this.object[field] = metadata;\\n\\n        this.linker.mainCollection.update(this.object._id, {\\n            $set: {\\n                [field]: metadata\\n            }\\n        });\\n\\n        return this;\\n    }\\n\\n    metadata(extendMetadata) {\\n        if (this.isVirtual) {\\n            this._virtualAction('metadata', undefined, extendMetadata);\\n\\n            return this;\\n        }\\n\\n        let field = this.linkStorageField;\\n\\n        if (!extendMetadata) {\\n            return this.object[field];\\n        } else {\\n            _.extend(this.object[field], extendMetadata);\\n\\n            this.linker.mainCollection.update(this.object._id, {\\n                $set: {\\n                    [field]: this.object[field]\\n                }\\n            });\\n        }\\n\\n        return this;\\n    }\\n\\n    unset() {\\n        if (this.isVirtual) {\\n            this._virtualAction('unset');\\n            return this;\\n        }\\n\\n        let field = this.linkStorageField;\\n        this.object[field] = {};\\n\\n        this.linker.mainCollection.update(this.object._id, {\\n            $set: {\\n                [field]: {}\\n            }\\n        });\\n\\n        return this;\\n    }\\n\\n    add(what, metadata) {\\n        if (this.isVirtual) {\\n            this._virtualAction('add', what, metadata);\\n            return this;\\n        }\\n\\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\\n    }\\n\\n    remove(what) {\\n        if (this.isVirtual) {\\n            this._virtualAction('remove', what);\\n            return this;\\n        }\\n\\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\\n    }\\n}\",\"/**\\n * When you work with add/remove set/unset\\n * You have the ability to pass strings, array of strings, objects, array of objects\\n * If you are adding something and you want to save them in db, you can pass objects without ids.\\n */\\nexport default new class {\\n    getIds(what, options) {\\n        if (_.isArray(what)) {\\n            return _.map(what, (subWhat) => {\\n                return this.getId(subWhat, options)\\n            })\\n        } else {\\n            return [this.getId(what, options)];\\n        }\\n\\n        throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\\n    }\\n\\n    getId(what, options) {\\n        if (typeof what === 'string') {\\n            return what;\\n        }\\n\\n        if (typeof what === 'object') {\\n            if (!what._id && options.saveToDatabase) {\\n                what._id = options.collection.insert(what);\\n            }\\n\\n            return what._id\\n        }\\n    }\\n}\",\"import deepClone from 'lodash.clonedeep';\\n\\nlet globalConfig = {};\\n\\nexport default class NamedQueryBase {\\n    static setConfig(config) {\\n        globalConfig = config;\\n    }\\n\\n    static getConfig() {\\n        return globalConfig;\\n    }\\n\\n    isNamedQuery = true;\\n\\n    constructor(name, collection, body, options = {}) {\\n        this.queryName = name;\\n\\n        if (_.isFunction(body)) {\\n            this.resolver = body;\\n        } else {\\n            this.body = deepClone(body);\\n        }\\n\\n        this.subscriptionHandle = null;\\n        this.params = options.params || {};\\n        this.options = Object.assign({}, globalConfig, options);\\n        this.collection = collection;\\n        this.isExposed = false;\\n    }\\n\\n    get name() {\\n        return `named_query_${this.queryName}`;\\n    }\\n\\n    get isResolver() {\\n        return !!this.resolver;\\n    }\\n\\n    setParams(params) {\\n        this.params = _.extend({}, this.params, params);\\n\\n        return this;\\n    }\\n\\n    /**\\n     * Validates the parameters\\n     */\\n    doValidateParams(params) {\\n        params = params || this.params;\\n\\n        const {validateParams} = this.options;\\n        if (!validateParams) return;\\n\\n        try {\\n            this._validate(validateParams, params);\\n        } catch (validationError) {\\n            console.error(`Invalid parameters supplied to the query \\\"${this.queryName}\\\"\\\\n`, validationError);\\n            throw validationError; // rethrow\\n        }\\n    }\\n\\n    clone(newParams) {\\n        const params = _.extend({}, deepClone(this.params), newParams);\\n\\n        let clone = new this.constructor(\\n            this.queryName,\\n            this.collection,\\n            this.isResolver ? this.resolver : deepClone(this.body),\\n            {\\n                ...this.options,\\n                params,\\n            }\\n        );\\n\\n        clone.cacher = this.cacher;\\n        if (this.exposeConfig) {\\n            clone.exposeConfig = this.exposeConfig;\\n        }\\n\\n        return clone;\\n    }\\n\\n    /**\\n     * @param {function|object} validator\\n     * @param {object} params\\n     * @private\\n     */\\n    _validate(validator, params) {\\n        if (_.isFunction(validator)) {\\n            validator.call(null, params)\\n        } else {\\n            check(params, validator)\\n        }\\n    }\\n}\\n\\nNamedQueryBase.defaultOptions = {};\",\"import CountSubscription from '../query/counts/countSubscription';\\nimport createGraph from '../query/lib/createGraph.js';\\nimport recursiveFetch from '../query/lib/recursiveFetch.js';\\nimport prepareForProcess from '../query/lib/prepareForProcess.js';\\nimport {_} from 'meteor/underscore';\\nimport callWithPromise from '../query/lib/callWithPromise';\\nimport Base from './namedQuery.base';\\nimport {LocalCollection} from 'meteor/minimongo';\\nimport intersectDeep from '../query/lib/intersectDeep';\\n\\nexport default class extends Base {\\n    /**\\n     * Subscribe\\n     *\\n     * @param callback\\n     * @returns {null|any|*}\\n     */\\n    subscribe(callback) {\\n        if (this.isResolver) {\\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\\n        }\\n\\n        this.subscriptionHandle = Meteor.subscribe(\\n            this.name,\\n            this.params,\\n            callback\\n        );\\n\\n        return this.subscriptionHandle;\\n    }\\n\\n    /**\\n     * Subscribe to the counts for this query\\n     *\\n     * @param callback\\n     * @returns {Object}\\n     */\\n    subscribeCount(callback) {\\n        if (this.isResolver) {\\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\\n        }\\n\\n        if (!this._counter) {\\n            this._counter = new CountSubscription(this);\\n        }\\n\\n        return this._counter.subscribe(this.params, callback);\\n    }\\n\\n    /**\\n     * Unsubscribe if an existing subscription exists\\n     */\\n    unsubscribe() {\\n        if (this.subscriptionHandle) {\\n            this.subscriptionHandle.stop();\\n        }\\n\\n        this.subscriptionHandle = null;\\n    }\\n\\n    /**\\n     * Unsubscribe to the counts if a subscription exists.\\n     */\\n    unsubscribeCount() {\\n        if (this._counter) {\\n            this._counter.unsubscribe();\\n            this._counter = null;\\n        }\\n    }\\n\\n    /**\\n     * Fetches elements in sync using promises\\n     * @return {*}\\n     */\\n    async fetchSync() {\\n        if (this.subscriptionHandle) {\\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\\n        }\\n\\n        return await callWithPromise(this.name, this.params);\\n    }\\n\\n    /**\\n     * Fetches one element in sync\\n     * @return {*}\\n     */\\n    async fetchOneSync() {\\n        return _.first(await this.fetchSync())\\n    }\\n\\n    /**\\n     * Retrieves the data.\\n     * @param callbackOrOptions\\n     * @returns {*}\\n     */\\n    fetch(callbackOrOptions) {\\n        if (!this.subscriptionHandle) {\\n            return this._fetchStatic(callbackOrOptions)\\n        } else {\\n            return this._fetchReactive(callbackOrOptions);\\n        }\\n    }\\n\\n    /**\\n     * @param args\\n     * @returns {*}\\n     */\\n    fetchOne(...args) {\\n        if (!this.subscriptionHandle) {\\n            const callback = args[0];\\n            if (!_.isFunction(callback)) {\\n                throw new Meteor.Error('You did not provide a valid callback');\\n            }\\n\\n            this.fetch((err, res) => {\\n                callback(err, res ? _.first(res) : null);\\n            })\\n        } else {\\n            return _.first(this.fetch(...args));\\n        }\\n    }\\n\\n    /**\\n     * Gets the count of matching elements in sync.\\n     * @returns {any}\\n     */\\n    async getCountSync() {\\n        if (this._counter) {\\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\\n        }\\n\\n        return await callWithPromise(this.name + '.count', this.params);\\n    }\\n\\n    /**\\n     * Gets the count of matching elements.\\n     * @param callback\\n     * @returns {any}\\n     */\\n    getCount(callback) {\\n        if (this._counter) {\\n            return this._counter.getCount();\\n        } else {\\n            if (!callback) {\\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\\n            } else {\\n                return Meteor.call(this.name + '.count', this.params, callback);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Fetching non-reactive queries\\n     * @param callback\\n     * @private\\n     */\\n    _fetchStatic(callback) {\\n        if (!callback) {\\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\\n        }\\n\\n        Meteor.call(this.name, this.params, callback);\\n    }\\n\\n    /**\\n     * Fetching when we've got an active publication\\n     *\\n     * @param options\\n     * @returns {*}\\n     * @private\\n     */\\n    _fetchReactive(options = {}) {\\n        let body = this.body;\\n        if (this.params.$body) {\\n            body = intersectDeep(body, this.params.$body);\\n        }\\n\\n        body = prepareForProcess(body, this.params);\\n        if (!options.allowSkip && body.$options && body.$options.skip) {\\n            delete body.$options.skip;\\n        }\\n\\n        return recursiveFetch(\\n            createGraph(this.collection, body),\\n            undefined, {\\n                scoped: this.options.scoped,\\n                subscriptionHandle: this.subscriptionHandle\\n            });\\n    }\\n}\\n\",\"import NamedQueryClient from './namedQuery.client';\\nimport NamedQueryServer from './namedQuery.server';\\n\\nlet NamedQuery;\\n\\nif (Meteor.isServer) {\\n    NamedQuery = NamedQueryServer;\\n} else {\\n    NamedQuery = NamedQueryClient;\\n}\\n\\nexport default NamedQuery;\",\"import prepareForProcess from '../query/lib/prepareForProcess.js';\\nimport Base from './namedQuery.base';\\nimport deepClone from 'lodash.clonedeep';\\nimport MemoryResultCacher from './cache/MemoryResultCacher';\\nimport intersectDeep from '../query/lib/intersectDeep';\\n\\nexport default class extends Base {\\n    /**\\n     * Retrieves the data.\\n     * @returns {*}\\n     */\\n    fetch(context) {\\n        this._performSecurityChecks(context, this.params);\\n\\n        if (this.isResolver) {\\n            return this._fetchResolverData(context);\\n        } else {\\n            body = deepClone(this.body);\\n            if (this.params.$body) {\\n                body = intersectDeep(body, this.params.$body);\\n            }\\n            \\n            // we must apply emobdyment here\\n            this.doEmbodimentIfItApplies(body, this.params);\\n\\n            const query = this.collection.createQuery(\\n                deepClone(body),\\n                {\\n                    params: deepClone(this.params)\\n                }\\n            );\\n\\n            if (this.cacher) {\\n                const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\\n                return this.cacher.fetch(cacheId, {query});\\n            }\\n\\n            return query.fetch();\\n        }\\n    }\\n\\n    /**\\n     * @param args\\n     * @returns {*}\\n     */\\n    fetchOne(...args) {\\n        return _.first(this.fetch(...args));\\n    }\\n\\n    /**\\n     * Gets the count of matching elements.\\n     *\\n     * @returns {any}\\n     */\\n    getCount(context) {\\n        this._performSecurityChecks(context, this.params);\\n\\n        const countCursor = this.getCursorForCounting();\\n\\n        if (this.cacher) {\\n            const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\\n\\n            return this.cacher.fetch(cacheId, {countCursor});\\n        }\\n\\n        return countCursor.count();\\n    }\\n\\n    /**\\n     * Returns the cursor for counting\\n     * This is most likely used for counts cursor\\n     */\\n    getCursorForCounting() {\\n        let body = deepClone(this.body);\\n        this.doEmbodimentIfItApplies(body, this.params);\\n        body = prepareForProcess(body, this.params);\\n\\n        return this.collection.find(body.$filters || {}, {fields: {_id: 1}});\\n    }\\n\\n    /**\\n     * @param cacher\\n     */\\n    cacheResults(cacher) {\\n        if (!cacher) {\\n            cacher = new MemoryResultCacher();\\n        }\\n\\n        this.cacher = cacher;\\n    }\\n\\n    /**\\n     * Configure resolve. This doesn't actually call the resolver, it just sets it\\n     * @param fn\\n     */\\n    resolve(fn) {\\n        if (!this.isResolver) {\\n            throw new Meteor.Error('invalid-call', `You cannot use resolve() on a non resolver NamedQuery`);\\n        }\\n\\n        this.resolver = fn;\\n    }\\n\\n    /**\\n     * @returns {*}\\n     * @private\\n     */\\n    _fetchResolverData(context) {\\n        const resolver = this.resolver;\\n        const self = this;\\n        const query = {\\n            fetch() {\\n                return resolver.call(context, self.params);\\n            }\\n        };\\n\\n        if (this.cacher) {\\n            const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\\n            return this.cacher.fetch(cacheId, {query});\\n        }\\n\\n        return query.fetch();\\n    }\\n\\n    /**\\n     * @param context Meteor method/publish context\\n     * @param params\\n     *\\n     * @private\\n     */\\n    _performSecurityChecks(context, params) {\\n        if (context && this.exposeConfig) {\\n            this._callFirewall(context, context.userId, params);\\n        }\\n\\n        this.doValidateParams(params);\\n    }\\n}\\n\",\"export default new class {\\n    constructor() {\\n        this.storage = {};\\n    }\\n\\n    add(key, value) {\\n        if (this.storage[key]) {\\n            throw new Meteor.Error('invalid-name', `You have previously defined another namedQuery with the same name: \\\"${key}\\\". Named Query names should be unique.`);\\n        }\\n\\n        this.storage[key] = value;\\n    }\\n\\n    get(key) {\\n        return this.storage[key];\\n    }\\n\\n    getAll() {\\n        return this.storage;\\n    }\\n}\",\"import {EJSON} from 'meteor/ejson';\\n\\n/**\\n * This is a very basic in-memory result caching functionality\\n */\\nexport default class BaseResultCacher {\\n    constructor(config = {}) {\\n        this.config = config;\\n    }\\n\\n    /**\\n     * @param queryName\\n     * @param params\\n     * @returns {string}\\n     */\\n    generateQueryId(queryName, params) {\\n        return `${queryName}::${EJSON.stringify(params)}`;\\n    }\\n\\n    /**\\n     * Dummy function\\n     */\\n    fetch(cacheId, {query, countCursor}) {\\n        throw 'Not implemented';\\n    }\\n\\n    /**\\n     * @param query\\n     * @param countCursor\\n     * @returns {*}\\n     */\\n    static fetchData({query, countCursor}) {\\n        if (query) {\\n            return query.fetch();\\n        } else {\\n            return countCursor.count();\\n        }\\n    }\\n}\\n\",\"import {Meteor} from 'meteor/meteor';\\nimport cloneDeep from 'lodash.clonedeep';\\nimport BaseResultCacher from './BaseResultCacher';\\n\\nconst DEFAULT_TTL = 60000;\\n\\n/**\\n * This is a very basic in-memory result caching functionality\\n */\\nexport default class MemoryResultCacher extends BaseResultCacher {\\n    constructor(config = {}) {\\n        super(config);\\n        this.store = {};\\n    }\\n\\n    /**\\n     * @param cacheId\\n     * @param query\\n     * @param countCursor\\n     * @returns {*}\\n     */\\n    fetch(cacheId, {query, countCursor}) {\\n        const cacheData = this.store[cacheId];\\n        if (cacheData !== undefined) {\\n            return cloneDeep(cacheData);\\n        }\\n\\n        const data = BaseResultCacher.fetchData({query, countCursor});\\n        this.storeData(cacheId, data);\\n\\n        return data;\\n    }\\n\\n\\n    /**\\n     * @param cacheId\\n     * @param data\\n     */\\n    storeData(cacheId, data) {\\n        const ttl = this.config.ttl || DEFAULT_TTL;\\n        this.store[cacheId] = cloneDeep(data);\\n\\n        Meteor.setTimeout(() => {\\n            delete this.store[cacheId];\\n        }, ttl)\\n    }\\n}\\n\",\"import deepClone from 'lodash.clonedeep';\\nimport {check} from 'meteor/check';\\n\\nexport default class QueryBase {\\n    isGlobalQuery = true;\\n\\n    constructor(collection, body, options = {}) {\\n        this.collection = collection;\\n\\n        this.body = deepClone(body);\\n\\n        this.params = options.params || {};\\n        this.options = options;\\n    }\\n\\n    clone(newParams) {\\n        const params = _.extend({}, deepClone(this.params), newParams);\\n\\n        return new this.constructor(\\n            this.collection,\\n            deepClone(this.body),\\n            {\\n                params,\\n                ...this.options\\n            }\\n        );\\n    }\\n\\n    get name() {\\n        return `exposure_${this.collection._name}`;\\n    }\\n\\n    /**\\n     * Validates the parameters\\n     */\\n    doValidateParams() {\\n        const {validateParams} = this.options;\\n        if (!validateParams) return;\\n\\n        if (_.isFunction(validateParams)) {\\n            validateParams.call(null, this.params)\\n        } else {\\n            check(this.params)\\n        }\\n    }\\n\\n    /**\\n     * Merges the params with previous params.\\n     *\\n     * @param params\\n     * @returns {Query}\\n     */\\n    setParams(params) {\\n        this.params = _.extend({}, this.params, params);\\n\\n        return this;\\n    }\\n}\",\"import { _ } from 'meteor/underscore';\\nimport CountSubscription from './counts/countSubscription';\\nimport createGraph from './lib/createGraph.js';\\nimport recursiveFetch from './lib/recursiveFetch.js';\\nimport prepareForProcess from './lib/prepareForProcess.js';\\nimport callWithPromise from './lib/callWithPromise';\\nimport Base from './query.base';\\n\\nexport default class Query extends Base {\\n    /**\\n     * Subscribe\\n     *\\n     * @param callback {Function} optional\\n     * @returns {null|any|*}\\n     */\\n    subscribe(callback) {\\n        this.doValidateParams();\\n\\n        this.subscriptionHandle = Meteor.subscribe(\\n            this.name,\\n            prepareForProcess(this.body, this.params),\\n            callback\\n        );\\n\\n        return this.subscriptionHandle;\\n    }\\n\\n    /**\\n     * Subscribe to the counts for this query\\n     *\\n     * @param callback\\n     * @returns {Object}\\n     */\\n    subscribeCount(callback) {\\n        this.doValidateParams();\\n\\n        if (!this._counter) {\\n            this._counter = new CountSubscription(this);\\n        }\\n\\n        return this._counter.subscribe(\\n            prepareForProcess(this.body, this.params),\\n            callback\\n        );\\n    }\\n\\n    /**\\n     * Unsubscribe if an existing subscription exists\\n     */\\n    unsubscribe() {\\n        if (this.subscriptionHandle) {\\n            this.subscriptionHandle.stop();\\n        }\\n\\n        this.subscriptionHandle = null;\\n    }\\n\\n    /**\\n     * Unsubscribe to the counts if a subscription exists.\\n     */\\n    unsubscribeCount() {\\n        if (this._counter) {\\n            this._counter.unsubscribe();\\n            this._counter = null;\\n        }\\n    }\\n\\n    /**\\n     * Fetches elements in sync using promises\\n     * @return {*}\\n     */\\n    async fetchSync() {\\n        this.doValidateParams();\\n\\n        if (this.subscriptionHandle) {\\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\\n        }\\n\\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\\n    }\\n\\n    /**\\n     * Fetches one element in sync\\n     * @return {*}\\n     */\\n    async fetchOneSync() {\\n        return _.first(await this.fetchSync())\\n    }\\n\\n    /**\\n     * Retrieves the data.\\n     * @param callbackOrOptions\\n     * @returns {*}\\n     */\\n    fetch(callbackOrOptions) {\\n        this.doValidateParams();\\n\\n        if (!this.subscriptionHandle) {\\n            return this._fetchStatic(callbackOrOptions)\\n        } else {\\n            return this._fetchReactive(callbackOrOptions);\\n        }\\n    }\\n\\n    /**\\n     * @param args\\n     * @returns {*}\\n     */\\n    fetchOne(...args) {\\n        if (!this.subscriptionHandle) {\\n            const callback = args[0];\\n            if (!_.isFunction(callback)) {\\n                throw new Meteor.Error('You did not provide a valid callback');\\n            }\\n\\n            this.fetch((err, res) => {\\n                callback(err, res ? _.first(res) : null);\\n            })\\n        } else {\\n            return _.first(this.fetch(...args));\\n        }\\n    }\\n\\n    /**\\n     * Gets the count of matching elements in sync.\\n     * @returns {any}\\n     */\\n    async getCountSync() {\\n        if (this._counter) {\\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\\n        }\\n\\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\\n    }\\n\\n    /**\\n     * Gets the count of matching elements.\\n     * @param callback\\n     * @returns {any}\\n     */\\n    getCount(callback) {\\n        if (this._counter) {\\n            return this._counter.getCount();\\n        } else {\\n            if (!callback) {\\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\\n            } else {\\n                return Meteor.call(\\n                    this.name + '.count',\\n                    prepareForProcess(this.body, this.params),\\n                    callback\\n                );\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Fetching non-reactive queries\\n     * @param callback\\n     * @private\\n     */\\n    _fetchStatic(callback) {\\n        if (!callback) {\\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\\n        }\\n\\n        Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\\n    }\\n\\n    /**\\n     * Fetching when we've got an active publication\\n     *\\n     * @param options\\n     * @returns {*}\\n     * @private\\n     */\\n    _fetchReactive(options = {}) {\\n        let body = prepareForProcess(this.body, this.params);\\n        if (!options.allowSkip && body.$options && body.$options.skip) {\\n            delete body.$options.skip;\\n        }\\n\\n        return recursiveFetch(\\n            createGraph(this.collection, body),\\n            this.params\\n        );\\n    }\\n}\\n\",\"import QueryClient from './query.client';\\nimport QueryServer from './query.server';\\n\\nlet Query;\\n\\nif (Meteor.isServer) {\\n    Query = QueryServer;\\n} else {\\n    Query = QueryClient;\\n}\\n\\nexport default Query;\",\"import createGraph from './lib/createGraph.js';\\nimport prepareForProcess from './lib/prepareForProcess.js';\\nimport hypernova from './hypernova/hypernova.js';\\nimport Base from './query.base';\\n\\nexport default class Query extends Base {\\n    /**\\n     * Retrieves the data.\\n     * @param context\\n     * @returns {*}\\n     */\\n    fetch(context = {}) {\\n        const node = createGraph(\\n            this.collection,\\n            prepareForProcess(this.body, this.params)\\n        );\\n\\n        return hypernova(node, context.userId, {params: this.params});\\n    }\\n\\n    /**\\n     * @param args\\n     * @returns {*}\\n     */\\n    fetchOne(...args) {\\n        return _.first(this.fetch(...args));\\n    }\\n\\n    /**\\n     * Gets the count of matching elements.\\n     * @returns {integer}\\n     */\\n    getCount() {\\n        return this.collection.find(this.body.$filters || {}, {}).count();\\n    }\\n}\",\"import { Mongo } from 'meteor/mongo';\\nimport { COUNTS_COLLECTION_CLIENT } from './constants';\\n\\n/**\\n * Internal collection used to store counts on the client.\\n */\\nexport default new Mongo.Collection(COUNTS_COLLECTION_CLIENT);\\n\",\"export const COUNTS_COLLECTION_CLIENT = 'grapher_counts';\\n\",\"import { EJSON } from 'meteor/ejson';\\nimport { Meteor } from 'meteor/meteor';\\nimport { ReactiveVar } from 'meteor/reactive-var';\\nimport { Tracker } from 'meteor/tracker';\\n\\nimport Counts from './collection';\\nimport createFauxSubscription from './createFauxSubscription';\\nimport prepareForProcess from '../lib/prepareForProcess.js';\\nimport NamedQueryBase from '../../namedQuery/namedQuery.base';\\n\\nexport default class CountSubscription {\\n    /**\\n     * @param {*} query - The query to use when fetching counts\\n     */\\n    constructor(query) {\\n        this.accessToken = new ReactiveVar(null);\\n        this.fauxHandle = null;\\n        this.query = query;\\n    }\\n\\n    /**\\n     * Starts a subscription request for reactive counts.\\n     *\\n     * @param {*} arg - The argument to pass to {name}.count.subscribe\\n     * @param {*} callback\\n     */\\n    subscribe(arg, callback) {\\n        // Don't try to resubscribe if arg hasn't changed\\n        if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\\n            return this.fauxHandle;\\n        }\\n\\n        this.accessToken.set(null);\\n        this.lastArgs = arg;\\n\\n        Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\\n            if (!this._markedForUnsubscribe) {\\n                this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\\n                this.accessToken.set(token);\\n\\n                this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\\n            }\\n\\n            this._markedForUnsubscribe = false;\\n        });\\n\\n        this.fauxHandle = createFauxSubscription(this);\\n        return this.fauxHandle;\\n    }\\n\\n    /**\\n     * Unsubscribes from the count endpoint, if there is such a subscription.\\n     */\\n    unsubscribe() {\\n        if (this.subscriptionHandle) {\\n            this.disconnectComputation.stop();\\n            this.subscriptionHandle.stop();\\n        } else {\\n            // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\\n            // so set a flag to stop the subscription from being created\\n            this._markedForUnsubscribe = true;\\n        }\\n\\n        this.accessToken.set(null);\\n        this.fauxHandle = null;\\n        this.subscriptionHandle = null;\\n    }\\n\\n    /**\\n     * Reactively fetch current document count. Returns null if the subscription is not ready yet.\\n     *\\n     * @returns {Number|null} - Current document count\\n     */\\n    getCount() {\\n        const id = this.accessToken.get();\\n        if (id === null) return null;\\n\\n        const doc = Counts.findOne(id);\\n        return doc.count;\\n    }\\n\\n    /**\\n     * All session info gets deleted when the server goes down, so when the client attempts to\\n     * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\\n     *\\n     * This function prevents that by manually stopping and restarting the subscription when the\\n     * connection to the server is lost.\\n     */\\n    handleDisconnect() {\\n        const status = Meteor.status();\\n        if (!status.connected) {\\n            this._markedForResume = true;\\n            this.fauxHandle = null;\\n            this.subscriptionHandle.stop();\\n        }\\n\\n        if (status.connected && this._markedForResume) {\\n            this._markedForResume = false;\\n            this.subscribe(this.lastArgs);\\n        }\\n    }\\n\\n    /**\\n     * Returns whether or not a subscription request has been made.\\n     */\\n    isSubscribed() {\\n        return this.accessToken.get() !== null;\\n    }\\n}\\n\",\"/**\\n * This method creates a \\\"fake\\\" subscription handle so that users of CountSubscription#subscribe\\n * have an interface consistent with normal subscriptions.\\n *\\n * @param {CountSubscription} countManager\\n */\\nexport default (countManager) => ({\\n    ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\\n    stop: () => countManager.unsubscribe(),\\n});\\n\",\"import sift from 'sift';\\nimport dot from 'dot-object';\\n\\nfunction extractIdsFromArray(array, field) {\\n    return (array || []).map(obj => _.isObject(obj) ? dot.pick(field, obj) : undefined).filter(v => !!v);\\n}\\n\\n/**\\n * Its purpose is to create filters to get the related data in one request.\\n */\\nexport default class AggregateFilters {\\n    constructor(collectionNode, metaFilters) {\\n        this.collectionNode = collectionNode;\\n        this.linker = collectionNode.linker;\\n        this.metaFilters = metaFilters;\\n        this.isVirtual = this.linker.isVirtual();\\n\\n        this.linkStorageField = this.linker.linkStorageField;\\n    }\\n\\n    get parentObjects() {\\n        return this.collectionNode.parent.results;\\n    }\\n\\n    create() {\\n        switch (this.linker.strategy) {\\n            case 'one':\\n                return this.createOne();\\n            case 'one-meta':\\n                return this.createOneMeta();\\n            case 'many':\\n                return this.createMany();\\n            case 'many-meta':\\n                return this.createManyMeta();\\n            default:\\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\\n        }\\n    }\\n\\n    createOne() {\\n        if (!this.isVirtual) {\\n            return {\\n                _id: {\\n                    $in: _.uniq(extractIdsFromArray(this.parentObjects, this.linkStorageField))\\n                }\\n            };\\n        } else {\\n            return {\\n                [this.linkStorageField]: {\\n                    $in: _.uniq(\\n                        _.pluck(this.parentObjects, '_id')\\n                    )\\n                }\\n            };\\n        }\\n    }\\n\\n    createOneMeta() {\\n        if (!this.isVirtual) {\\n            let eligibleObjects = this.parentObjects;\\n\\n            if (this.metaFilters) {\\n                eligibleObjects = _.filter(this.parentObjects, object => {\\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\\n                });\\n            }\\n\\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\\n            let ids = [];\\n            _.each(storages, storage => {\\n                if (storage) {\\n                    ids.push(storage._id);\\n                }\\n            });\\n\\n            return {\\n                _id: {$in: _.uniq(ids)}\\n            };\\n        } else {\\n            let filters = {};\\n            if (this.metaFilters) {\\n                _.each(this.metaFilters, (value, key) => {\\n                    filters[this.linkStorageField + '.' + key] = value;\\n                })\\n            }\\n\\n            filters[this.linkStorageField + '._id'] = {\\n                $in: _.uniq(\\n                    _.pluck(this.parentObjects, '_id')\\n                )\\n            };\\n\\n            return filters;\\n        }\\n    }\\n\\n    createMany() {\\n        if (!this.isVirtual) {\\n            const [root, ...nested] = this.linkStorageField.split('.');\\n            const arrayOfIds = _.union(...extractIdsFromArray(this.parentObjects, root));\\n            return {\\n                _id: {\\n                    $in: _.uniq(nested.length > 0 ? extractIdsFromArray(arrayOfIds, nested.join('.')) : arrayOfIds)\\n                }\\n            };\\n        } else {\\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\\n            return {\\n                [this.linkStorageField]: {\\n                    $in: _.uniq(\\n                        _.union(...arrayOfIds)\\n                    )\\n                }\\n            };\\n        }\\n    }\\n\\n    createManyMeta() {\\n        if (!this.isVirtual) {\\n            let ids = [];\\n\\n            _.each(this.parentObjects, object => {\\n                if (object[this.linkStorageField]) {\\n                    if (this.metaFilters) {\\n                        const isValid = sift(this.metaFilters);\\n                        _.each(object[this.linkStorageField], object => {\\n                            if (isValid(object)) {\\n                                ids.push(object._id);\\n                            }\\n                        });\\n                    } else {\\n                        _.each(object[this.linkStorageField], object => {\\n                            ids.push(object._id);\\n                        });\\n                    }\\n                }\\n            });\\n\\n            return {\\n                _id: {$in: _.uniq(ids)}\\n            };\\n        } else {\\n            let filters = {};\\n            if (this.metaFilters) {\\n                _.each(this.metaFilters, (value, key) => {\\n                    filters[key] = value;\\n                })\\n            }\\n\\n            filters._id = {\\n                $in: _.uniq(\\n                    _.pluck(this.parentObjects, '_id')\\n                )\\n            };\\n\\n            return {\\n                [this.linkStorageField]: {\\n                    $elemMatch: filters\\n                }\\n            };\\n        }\\n    }\\n}\",\"import sift from 'sift';\\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\\n\\n/**\\n * This only applies to inversed links. It will assemble the data in a correct manner.\\n */\\nexport default function(childCollectionNode, aggregateResults, metaFilters) {\\n    const linker = childCollectionNode.linker;\\n    const linkStorageField = linker.linkStorageField;\\n    const linkName = childCollectionNode.linkName;\\n    const isMeta = linker.isMeta();\\n    const isMany = linker.isMany();\\n\\n    let allResults = [];\\n\\n    if (isMeta && metaFilters) {\\n        const metaFiltersTest = sift(metaFilters);\\n        _.each(childCollectionNode.parent.results, parentResult => {\\n            cleanObjectForMetaFilters(\\n                parentResult,\\n                linkStorageField,\\n                metaFiltersTest\\n            );\\n        });\\n    }\\n\\n    if (isMeta && isMany) {\\n        // This case is treated differently because we get an array response from the pipeline.\\n\\n        _.each(childCollectionNode.parent.results, parentResult => {\\n            parentResult[linkName] = parentResult[linkName] || [];\\n\\n            const eligibleAggregateResults = _.filter(\\n                aggregateResults,\\n                aggregateResult => {\\n                    return _.contains(aggregateResult._id, parentResult._id);\\n                }\\n            );\\n\\n            if (eligibleAggregateResults.length) {\\n                const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\\n\\n                _.each(datas, data => {\\n                    _.each(data, item => {\\n                        parentResult[linkName].push(item);\\n                    });\\n                });\\n            }\\n        });\\n\\n        _.each(aggregateResults, aggregateResult => {\\n            _.each(aggregateResult.data, item => allResults.push(item));\\n        });\\n    } else {\\n        let comparator;\\n        if (isMany) {\\n            comparator = (aggregateResult, result) =>\\n                _.contains(aggregateResult._id, result._id);\\n        } else {\\n            comparator = (aggregateResult, result) =>\\n                aggregateResult._id == result._id;\\n        }\\n\\n        const childLinkName = childCollectionNode.linkName;\\n        const parentResults = childCollectionNode.parent.results;\\n\\n        parentResults.forEach(parentResult => {\\n            // We are now finding the data from the pipeline that is related to the _id of the parent\\n            const eligibleAggregateResults = aggregateResults.filter(\\n                aggregateResult => comparator(aggregateResult, parentResult)\\n            );\\n\\n            eligibleAggregateResults.forEach(aggregateResult => {\\n                if (Array.isArray(parentResult[childLinkName])) {\\n                    parentResult[childLinkName].push(...aggregateResult.data);\\n                } else {\\n                    parentResult[childLinkName] = [...aggregateResult.data];\\n                }\\n            });\\n        });\\n\\n        aggregateResults.forEach(aggregateResult => {\\n            allResults.push(...aggregateResult.data);\\n        });\\n    }\\n\\n    childCollectionNode.results = allResults;\\n}\\n\",\"import createSearchFilters from '../../links/lib/createSearchFilters';\\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\\nimport sift from 'sift';\\nimport dot from 'dot-object';\\n\\nexport default (childCollectionNode, { limit, skip, metaFilters }) => {\\n    if (childCollectionNode.results.length === 0) {\\n        return;\\n    }\\n\\n    const parent = childCollectionNode.parent;\\n    const linker = childCollectionNode.linker;\\n\\n    const strategy = linker.strategy;\\n    const isSingle = linker.isSingle();\\n    const isMeta = linker.isMeta();\\n    const fieldStorage = linker.linkStorageField;\\n\\n    // cleaning the parent results from a child\\n    // this may be the wrong approach but it works for now\\n    if (isMeta && metaFilters) {\\n        const metaFiltersTest = sift(metaFilters);\\n        _.each(parent.results, parentResult => {\\n            cleanObjectForMetaFilters(\\n                parentResult,\\n                fieldStorage,\\n                metaFiltersTest\\n            );\\n        });\\n    }\\n\\n    const resultsByKeyId = _.groupBy(childCollectionNode.results, '_id');\\n\\n    if (strategy === 'one') {\\n        parent.results.forEach(parentResult => {\\n            const value = dot.pick(fieldStorage, parentResult);\\n            if (!value) {\\n                return;\\n            }\\n\\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\\n                resultsByKeyId[value],\\n                { limit, skip }\\n            );\\n        });\\n    }\\n\\n    if (strategy === 'many') {\\n        parent.results.forEach(parentResult => {\\n            // support dotted fields\\n            const [root, ...nested] = fieldStorage.split('.');\\n            const value = dot.pick(root, parentResult);\\n            if (!value) {\\n                return;\\n            }\\n\\n\\n            const data = [];\\n            value.forEach(v => {\\n                const _id = nested.length > 0 ? dot.pick(nested.join('.'), v) : v;\\n                data.push(_.first(resultsByKeyId[_id]));\\n            });\\n\\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\\n                data,\\n                { limit, skip }\\n            );\\n        });\\n    }\\n\\n    if (strategy === 'one-meta') {\\n        parent.results.forEach(parentResult => {\\n            if (!parentResult[fieldStorage]) {\\n                return;\\n            }\\n\\n            const _id = parentResult[fieldStorage]._id;\\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\\n                resultsByKeyId[_id],\\n                { limit, skip }\\n            );\\n        });\\n    }\\n\\n    if (strategy === 'many-meta') {\\n        parent.results.forEach(parentResult => {\\n            const _ids = _.pluck(parentResult[fieldStorage], '_id');\\n            let data = [];\\n            _ids.forEach(_id => {\\n                data.push(_.first(resultsByKeyId[_id]));\\n            });\\n\\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\\n                data,\\n                { limit, skip }\\n            );\\n        });\\n    }\\n};\\n\\nfunction filterAssembledData(data, { limit, skip }) {\\n    if (limit && Array.isArray(data)) {\\n        return data.slice(skip, limit);\\n    }\\n\\n    return data;\\n}\\n\",\"import { _ } from 'meteor/underscore';\\nimport {SAFE_DOTTED_FIELD_REPLACEMENT} from './constants';\\n\\nexport default function (childCollectionNode, filters, options, userId) {\\n    let containsDottedFields = false;\\n    const linker = childCollectionNode.linker;\\n    const linkStorageField = linker.linkStorageField;\\n    const collection = childCollectionNode.collection;\\n\\n    let pipeline = [];\\n\\n    if (collection.firewall) {\\n        collection.firewall(filters, options, userId);\\n    }\\n\\n    pipeline.push({$match: filters});\\n\\n    if (options.sort && _.keys(options.sort).length > 0) {\\n        pipeline.push({$sort: options.sort})\\n    }\\n\\n    let _id = linkStorageField;\\n    if (linker.isMeta()) {\\n        _id += '._id';\\n    }\\n\\n    let dataPush = {\\n        _id: '$_id'\\n    };\\n\\n    _.each(options.fields, (value, field) => {\\n        if (field.indexOf('.') >= 0) {\\n            containsDottedFields = true;\\n        }\\n        const safeField = field.replace(/\\\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\\n        dataPush[safeField] = '$' + field\\n    });\\n\\n    if (linker.isMeta()) {\\n        dataPush[linkStorageField] = '$' + linkStorageField;\\n    }\\n\\n    pipeline.push({\\n        $group: {\\n            _id: \\\"$\\\" + _id,\\n            data: {\\n                $push: dataPush\\n            }\\n        }\\n    });\\n\\n    if (options.limit || options.skip) {\\n        let $slice = [\\\"$data\\\"];\\n        if (options.skip) $slice.push(options.skip);\\n        if (options.limit) $slice.push(options.limit);\\n\\n        pipeline.push({\\n            $project: {\\n                _id: 1,\\n                data: {$slice}\\n            }\\n        })\\n    }\\n\\n    return {pipeline, containsDottedFields};\\n}\",\"export const SAFE_DOTTED_FIELD_REPLACEMENT = '___';\",\"import applyProps from '../lib/applyProps.js';\\nimport prepareForDelivery from '../lib/prepareForDelivery.js';\\nimport storeHypernovaResults from './storeHypernovaResults.js';\\n\\nfunction hypernova(collectionNode, userId) {\\n    _.each(collectionNode.collectionNodes, childCollectionNode => {\\n        let {filters, options} = applyProps(childCollectionNode);\\n\\n        storeHypernovaResults(childCollectionNode, userId);\\n        hypernova(childCollectionNode, userId);\\n    });\\n}\\n\\nexport default function hypernovaInit(collectionNode, userId, config = {}) {\\n    const bypassFirewalls = config.bypassFirewalls || false;\\n    const params = config.params || {};\\n\\n    let {filters, options} = applyProps(collectionNode);\\n\\n    const collection = collectionNode.collection;\\n\\n    collectionNode.results = collection.find(filters, options, userId).fetch();\\n\\n    const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\\n    hypernova(collectionNode, userIdToPass);\\n\\n    prepareForDelivery(collectionNode, params);\\n\\n    return collectionNode.results;\\n}\\n\",\"import applyProps from '../lib/applyProps.js';\\nimport AggregateFilters from './aggregateSearchFilters.js';\\nimport assemble from './assembler.js';\\nimport assembleAggregateResults from './assembleAggregateResults.js';\\nimport buildAggregatePipeline from './buildAggregatePipeline.js';\\nimport snapBackDottedFields from './lib/snapBackDottedFields';\\n\\nexport default function storeHypernovaResults(childCollectionNode, userId) {\\n    if (childCollectionNode.parent.results.length === 0) {\\n        return (childCollectionNode.results = []);\\n    }\\n\\n    let { filters, options } = applyProps(childCollectionNode);\\n\\n    const metaFilters = filters.$meta;\\n    const aggregateFilters = new AggregateFilters(\\n        childCollectionNode,\\n        metaFilters\\n    );\\n    delete filters.$meta;\\n\\n    const linker = childCollectionNode.linker;\\n    const isVirtual = linker.isVirtual();\\n    const collection = childCollectionNode.collection;\\n\\n\\n    _.extend(filters, aggregateFilters.create());\\n\\n    // if it's not virtual then we retrieve them and assemble them here.\\n    if (!isVirtual) {\\n        const filteredOptions = _.omit(options, 'limit');\\n\\n        childCollectionNode.results = collection\\n            .find(filters, filteredOptions, userId)\\n            .fetch();\\n\\n        assemble(childCollectionNode, {\\n            ...options,\\n            metaFilters,\\n        });\\n    } else {\\n        // virtuals arrive here\\n        let { pipeline, containsDottedFields } = buildAggregatePipeline(\\n            childCollectionNode,\\n            filters,\\n            options,\\n            userId\\n        );\\n\\n        let aggregateResults = collection.aggregate(pipeline);\\n\\n        /**\\n         * If in aggregation it contains '.', we replace it with a custom string '___'\\n         * And then after aggregation is complete we need to snap-it back to how it was.\\n         */\\n        if (containsDottedFields) {\\n            snapBackDottedFields(aggregateResults);\\n        }\\n\\n        assembleAggregateResults(\\n            childCollectionNode,\\n            aggregateResults,\\n            metaFilters\\n        );\\n    }\\n}\\n\",\"export default function (object, field, metaFiltersTest) {\\n    if (object[field]) {\\n        if (_.isArray(object[field])) {\\n            object[field] = object[field].filter(metaFiltersTest)\\n        } else {\\n            if (!metaFiltersTest(object[field])) {\\n                object[field] = null;\\n            }\\n        }\\n    }\\n}\",\"import {SAFE_DOTTED_FIELD_REPLACEMENT} from '../constants';\\nimport dot from 'dot-object';\\n\\nexport default function (aggregationResult) {\\n    aggregationResult.forEach(result => {\\n        result.data = result.data.map(document => {\\n            _.each(document, (value, key) => {\\n                if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\\n                    document[key.replace(new RegExp(SAFE_DOTTED_FIELD_REPLACEMENT, 'g'), '.')] = value;\\n                    delete document[key];\\n                }\\n            });\\n\\n            return dot.object(document);\\n        })\\n    })\\n}\",\"const restrictOptions = [\\n    'disableOplog',\\n    'pollingIntervalMs',\\n    'pollingThrottleMs'\\n];\\n\\nexport default function applyProps(node) {\\n    let filters = _.extend({}, node.props.$filters);\\n    let options = _.extend({}, node.props.$options);\\n\\n    options = _.omit(options, ...restrictOptions);\\n    options.fields = options.fields || {};\\n\\n    node.applyFields(filters, options);\\n    \\n    return {filters, options};\\n}\\n\",\"export default (method, myParameters) => {\\n    return new Promise((resolve, reject) => {\\n        Meteor.call(method, myParameters, (err, res) => {\\n            if (err) reject(err.reason || 'Something went wrong.');\\n\\n            resolve(res);\\n        });\\n    });\\n};\",\"import CollectionNode from '../nodes/collectionNode.js';\\nimport FieldNode from '../nodes/fieldNode.js';\\nimport ReducerNode from '../nodes/reducerNode.js';\\nimport dotize from './dotize.js';\\nimport createReducers from '../reducers/lib/createReducers';\\n\\nexport const specialFields = [\\n    '$filters',\\n    '$options',\\n    '$postFilters',\\n    '$postOptions',\\n    '$postFilter'\\n];\\n\\n/**\\n * Creates node objects from the body. The root is always a collection node.\\n *\\n * @param root\\n */\\nexport function createNodes(root) {\\n    // this is a fix for phantomjs tests (don't really understand it.)\\n    if (!_.isObject(root.body)) {\\n        return;\\n    }\\n\\n    _.each(root.body, (body, fieldName) => {\\n        if (!body) {\\n            return;\\n        }\\n\\n        // if it's a prop\\n        if (_.contains(specialFields, fieldName)) {\\n            root.addProp(fieldName, body);\\n\\n            return;\\n        }\\n\\n        // workaround, see https://github.com/cult-of-coders/grapher/issues/134\\n        // TODO: find another way to do this\\n        if (root.collection.default) {\\n          root.collection = root.collection.default;\\n        }\\n\\n        // checking if it is a link.\\n        let linker = root.collection.getLinker(fieldName);\\n\\n        if (linker) {\\n            // check if it is a cached link\\n            // if yes, then we need to explicitly define this at collection level\\n            // so when we transform the data for delivery, we move it to the link name\\n            if (linker.isDenormalized()) {\\n                if (linker.isSubBodyDenormalized(body)) {\\n                    handleDenormalized(root, linker, body, fieldName);\\n                    return;\\n                }\\n            }\\n\\n            let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\\n            // must be before adding linker because _shouldCleanStorage method\\n            createNodes(subroot);\\n            root.add(subroot, linker);\\n\\n            return;\\n        }\\n\\n        // checking if it's a reducer\\n        const reducer = root.collection.getReducer(fieldName);\\n\\n        if (reducer) {\\n            let reducerNode = new ReducerNode(fieldName, reducer);\\n            root.add(reducerNode);\\n        }\\n\\n        // it's most likely a field then\\n        addFieldNode(body, fieldName, root);\\n    });\\n\\n    createReducers(root);\\n\\n    if (root.fieldNodes.length === 0) {\\n        root.add(new FieldNode('_id', 1));\\n    }\\n}\\n\\nfunction isProjectionOperatorExpression(body) {\\n    if (_.isObject(body)) {\\n        const keys = _.keys(body);\\n        return keys.length === 1 && _.contains(['$elemMatch', '$meta', '$slice'], keys[0]);\\n    }\\n    return false;\\n}\\n\\n/**\\n * @param body\\n * @param fieldName\\n * @param root\\n */\\nexport function addFieldNode(body, fieldName, root) {\\n    // it's not a link and not a special variable => we assume it's a field\\n    if (_.isObject(body)) {\\n        if (!isProjectionOperatorExpression(body)) {\\n            let dotted = dotize.convert({[fieldName]: body});\\n            _.each(dotted, (value, key) => {\\n                root.add(new FieldNode(key, value));\\n            });\\n        }\\n        else {\\n            root.add(new FieldNode(fieldName, body, true));\\n        }\\n    } else {\\n        let fieldNode = new FieldNode(fieldName, body);\\n        root.add(fieldNode);\\n    }\\n}\\n\\n/**\\n * Returns namespace for node when using query path scoping.\\n *\\n * @param node\\n * @returns {String}\\n */\\nexport function getNodeNamespace(node) {\\n    const parts = [];\\n    let n = node;\\n    while (n) {\\n        const name = n.linker ? n.linker.linkName : n.collection._name;\\n        parts.push(name);\\n        // console.log('linker', node.linker ? node.linker.linkName : node.collection._name);\\n        n = n.parent;\\n    }\\n    return parts.reverse().join('_');\\n}\\n\\n/**\\n * @param collection\\n * @param body\\n * @returns {CollectionNode}\\n */\\nexport default function (collection, body) {\\n    let root = new CollectionNode(collection, body);\\n    createNodes(root);\\n\\n    return root;\\n};\\n\\n/**\\n * Ads denormalization config properly, including _id\\n *\\n * @param root\\n * @param linker\\n * @param body\\n * @param fieldName\\n */\\nfunction handleDenormalized(root, linker, body, fieldName) {\\n    Object.assign(body, {_id: 1});\\n\\n    const cacheField = linker.linkConfig.denormalize.field;\\n    root.snapCache(cacheField, fieldName);\\n\\n    // if it's one and direct also include the link storage\\n    if (!linker.isMany() && !linker.isVirtual()) {\\n        addFieldNode(1, linker.linkStorageField, root);\\n    }\\n\\n    addFieldNode(body, cacheField, root);\\n}\",\"// https://github.com/vardars/dotize\\nexport default dotize = {};\\n\\ndotize.convert = function(obj, prefix) {\\n    if ((!obj || typeof obj != \\\"object\\\") && !Array.isArray(obj)) {\\n        if (prefix) {\\n            var newObj = {};\\n            newObj[prefix] = obj;\\n            return newObj;\\n        } else {\\n            return obj;\\n        }\\n    }\\n\\n    var newObj = {};\\n\\n    function recurse(o, p, isArrayItem) {\\n        for (var f in o) {\\n            if (o[f] && typeof o[f] === \\\"object\\\") {\\n                if (Array.isArray(o[f])) {\\n                    if (isEmptyArray(o[f])) {\\n                        newObj[getFieldName(f, p, true)] = o[f]; // empty array\\n                    } else {\\n                        newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\\n                    }\\n                } else {\\n                    if (isArrayItem) {\\n                        if (isEmptyObj(o[f])) {\\n                            newObj[getFieldName(f, p, true)] = o[f]; // empty object\\n                        } else {\\n                            newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\\n                        }\\n                    } else {\\n                        if (isEmptyObj(o[f])) {\\n                            newObj[getFieldName(f, p)] = o[f]; // empty object\\n                        } else {\\n                            newObj = recurse(o[f], getFieldName(f, p)); // object\\n                        }\\n                    }\\n                }\\n            } else {\\n                if (isArrayItem || isNumber(f)) {\\n                    newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\\n                } else {\\n                    newObj[getFieldName(f, p)] = o[f]; // primitive\\n                }\\n            }\\n        }\\n\\n        if (isEmptyObj(newObj))\\n            return obj;\\n\\n        return newObj;\\n    }\\n\\n    function isNumber(f) {\\n        return !isNaN(parseInt(f));\\n    }\\n\\n    function isEmptyObj(obj) {\\n        for (var prop in obj) {\\n            if (Object.hasOwnProperty.call(obj, prop))\\n                return false;\\n        }\\n\\n        return true;\\n    }\\n\\n    function isEmptyArray(o) {\\n        if (Array.isArray(o) && o.length == 0)\\n            return true;\\n        return false;\\n    }\\n\\n    function getFieldName(field, prefix, isArrayItem, isArray) {\\n        if (isArray)\\n            return (prefix ? prefix : \\\"\\\") + (isNumber(field) ? \\\"[\\\" + field + \\\"]\\\" : \\\".\\\" + field);\\n        else if (isArrayItem)\\n            return (prefix ? prefix : \\\"\\\") + \\\"[\\\" + field + \\\"]\\\";\\n        else\\n            return (prefix ? prefix + \\\".\\\" : \\\"\\\") + field;\\n    }\\n\\n    return recurse(obj, prefix, Array.isArray(obj));\\n};\",\"/**\\n * Helper method which expands profile.phone.verified into\\n * ['profile', 'profile.phone', 'profile.phone.verified']\\n * @param fieldName\\n */\\nexport function expandField(fieldName) {\\n    return fieldName.split('.').reduce((acc, key) => {\\n        if (acc.length === 0) {\\n            return [key];\\n        }\\n        const [last] = acc;\\n        return [...acc, `${last}.${key}`];\\n    }, [])\\n}\\n\\nexport function isFieldInProjection(projection, fieldName, checkNested) {\\n    // for checkNested flag expand the field\\n    const fields = checkNested ? expandField(fieldName) : [fieldName];\\n    return fields.some(field => projection[field]);\\n}\\n\",\"import {_} from 'meteor/underscore';\\nimport {specialFields} from './createGraph';\\n\\nconst EXTENDED_SPECIAL_FIELDS = [...specialFields, '$filter', '$paginate'];\\n\\nfunction isClientValueValid(value) {\\n    if (_.isObject(value) && !_.isArray(value)) {\\n        return _.values(value).every(nestedValue => isClientValueValid(nestedValue));\\n    }\\n    else if (value === 1) {\\n        return true;\\n    }\\n    return false;\\n}\\n\\n/**\\n * \\n * Recursive function which intersects the fields of the body objects.\\n * \\n * @param {object} allowed allowed body object - intersection can only be a subset of it\\n * @param {object} client client body - can shrink main body, but not expand\\n */\\nfunction intersectFields(allowed, client) {\\n    const intersection = {};\\n    _.pairs(client).forEach(([field, clientValue]) => {\\n        if (_.contains(EXTENDED_SPECIAL_FIELDS, field)) {\\n            return;\\n        }\\n\\n        const serverValue = allowed[field];\\n        if (serverValue === 1) { // server allows everything\\n            if (isClientValueValid(clientValue)) {\\n                intersection[field] = clientValue;\\n            }\\n        }\\n        else if (_.isObject(serverValue)) {\\n            if (_.isObject(clientValue) && !_.isArray(clientValue)) {\\n                intersection[field] = intersectFields(serverValue, clientValue);\\n            }\\n            else if (clientValue === 1) {\\n                // if client wants everything, serverValue is more restrictive here\\n                intersection[field] = serverValue;\\n            }\\n        }\\n    });\\n    return intersection;\\n}\\n\\n/**\\n * Given a named query that has a specific body, you can query its subbody\\n * This performs an intersection of the bodies allowed in each\\n *\\n * @param allowedBody\\n * @param clientBody\\n */\\nexport default function (allowedBody, clientBody) {\\n    const build = intersectFields(allowedBody, clientBody);\\n    // Add back special fields to the new body\\n    Object.assign(build, _.pick(allowedBody, ...EXTENDED_SPECIAL_FIELDS));\\n    return build;\\n}\\n\",\"// 1. Clone children with meta relationships\\n// 2. Apply $metadata to children\\n// 3. Removes link storage (if not specified)\\n// 4. Stores oneResult links as a single object instead of array\\nimport applyReducers from '../reducers/lib/applyReducers';\\nimport cleanReducerLeftovers from '../reducers/lib/cleanReducerLeftovers';\\nimport sift from 'sift';\\nimport dot from 'dot-object';\\nimport {Minimongo} from 'meteor/minimongo';\\n\\nexport default (node, params) => {\\n    snapBackCaches(node);\\n    storeOneResults(node, node.results);\\n\\n    applyReducers(node, params);\\n\\n    _.each(node.collectionNodes, collectionNode => {\\n        cloneMetaChildren(collectionNode, node.results)\\n    });\\n\\n    _.each(node.collectionNodes, collectionNode => {\\n        assembleMetadata(collectionNode, node.results)\\n    });\\n\\n    cleanReducerLeftovers(node, node.results);\\n\\n    removeLinkStorages(node, node.results);\\n\\n    applyPostFilters(node);\\n    applyPostOptions(node);\\n    applyPostFilter(node, params);\\n}\\n\\nexport function applyPostFilters(node) {\\n    const postFilters = node.props.$postFilters;\\n    if (postFilters) {\\n        node.results = sift(postFilters, node.results);\\n    }\\n}\\n\\nexport function applyPostOptions(node) {\\n    const options = node.props.$postOptions;\\n    if (options) {\\n        if (options.sort) {\\n            const sorter = new Minimongo.Sorter(options.sort);\\n            node.results.sort(sorter.getComparator());\\n        }\\n        if (options.limit || options.skip) {\\n            const start = options.skip || 0;\\n            const end = options.limit ? options.limit + start : node.results.length;\\n            node.results = node.results.slice(start, end);\\n        }\\n    }\\n}\\n\\n\\n/**\\n * Optionally applies a post filtering option\\n */\\nfunction applyPostFilter(node, params) {\\n    if (node.props.$postFilter) {\\n        const filter = node.props.$postFilter;\\n\\n        if (_.isArray(filter)) {\\n            filter.forEach(f => {\\n                node.results = f(node.results, params);\\n            })\\n        } else {\\n            node.results = filter(node.results, params);\\n        }\\n    }\\n}\\n\\n/**\\n *\\n * Helper function which transforms results into the array.\\n * Results are an object for 'one' links.\\n *\\n * @param results\\n * @return array\\n */\\nexport function getResultsArray(results) {\\n    if (_.isArray(results)) {\\n        return results;\\n    }\\n    else if (_.isUndefined(results)) {\\n        return [];\\n    }\\n    return [results];\\n}\\n\\nexport function removeLinkStorages(node, sameLevelResults) {\\n    if (!sameLevelResults) {\\n        return;\\n    }\\n\\n    sameLevelResults = getResultsArray(sameLevelResults);\\n\\n    _.each(node.collectionNodes, collectionNode => {\\n        const removeStorageField = collectionNode.shouldCleanStorage;\\n        _.each(sameLevelResults, result => {\\n            if (removeStorageField) {\\n                const isSingle = collectionNode.linker.isSingle();\\n                const [root, ...nested] = collectionNode.linkStorageField.split('.');\\n\\n                const removeFromResult = (result, removeEmptyRoot = false) => {\\n                    if (isSingle) {\\n                        dot.pick(collectionNode.linkStorageField, result, true);\\n                        if (removeEmptyRoot && nested.length > 0 && _.isEmpty(result[root])) {\\n                            delete result[root];\\n                        }\\n                    }\\n                    else {\\n                        if (nested.length > 0) {\\n                            const arr = result[root] || [];\\n                            if (_.isArray(arr)) {\\n                                arr.forEach(obj => dot.pick(nested.join('.'), obj, true));\\n                                if (removeEmptyRoot && nested.length > 0 && arr.every(obj => _.isEmpty(obj))) {\\n                                    delete result[root];\\n                                }\\n                            }\\n                        }\\n                        else {\\n                            delete result[collectionNode.linkStorageField];\\n                        }\\n                    }\\n                };\\n\\n                if (collectionNode.isVirtual) {\\n                    const childResults = getResultsArray(result[collectionNode.linkName]);\\n                    _.each(childResults, childResult => {\\n                        removeFromResult(childResult);\\n                    });\\n                } else {\\n                    removeFromResult(result);\\n                }\\n            }\\n\\n            removeLinkStorages(collectionNode, result[collectionNode.linkName]);\\n        })\\n    })\\n}\\n\\nexport function storeOneResults(node, sameLevelResults) {\\n    if (!sameLevelResults) {\\n        return;\\n    }\\n\\n    node.collectionNodes.forEach(collectionNode => {\\n        _.each(sameLevelResults, result => {\\n            // The reason we are doing this is that if the requested link does not exist\\n            // It will fail when we try to get undefined[something] below\\n            if (result === undefined) {\\n                return;\\n            }\\n\\n            storeOneResults(collectionNode, result[collectionNode.linkName]);\\n        });\\n\\n        if (collectionNode.isOneResult) {\\n            _.each(sameLevelResults, result => {\\n                if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\\n                    result[collectionNode.linkName] = result[collectionNode.linkName]\\n                        ? _.first(result[collectionNode.linkName])\\n                        : undefined;\\n                }\\n            })\\n        }\\n    })\\n}\\n\\nfunction cloneMetaChildren(node, parentResults) {\\n    if (!parentResults) {\\n        return;\\n    }\\n\\n    const linkName = node.linkName;\\n    const isMeta = node.isMeta;\\n\\n    // parentResults might be an object (for type==one links)\\n    parentResults = getResultsArray(parentResults);\\n\\n    parentResults.forEach(parentResult => {\\n        if (isMeta && parentResult[linkName]) {\\n            if (node.isOneResult) {\\n                parentResult[linkName] = Object.assign({}, parentResult[linkName]);\\n            }\\n            else {\\n                parentResult[linkName] = parentResult[linkName].map(object => {\\n                    return Object.assign({}, object);\\n                });\\n            }\\n        }\\n\\n        node.collectionNodes.forEach(collectionNode => {\\n            cloneMetaChildren(collectionNode, parentResult[linkName]);\\n        });\\n    });\\n}\\n\\nexport function assembleMetadata(node, parentResults) {\\n    parentResults = getResultsArray(parentResults);\\n\\n    // assembling metadata is depth first\\n    node.collectionNodes.forEach(collectionNode => {\\n        _.each(parentResults, result => {\\n            assembleMetadata(collectionNode, result[node.linkName])\\n        });\\n    });\\n\\n    if (node.isMeta) {\\n        if (node.isVirtual) {\\n            _.each(parentResults, parentResult => {\\n                const childResult = parentResult[node.linkName];\\n\\n                if (node.isOneResult) {\\n                    if (_.isObject(childResult)) {\\n                        const storage = childResult[node.linkStorageField];\\n                        storeMetadata(childResult, parentResult, storage, true);\\n                    }\\n                } else {\\n                    _.each(childResult, object => {\\n                        const storage = object[node.linkStorageField];\\n                        storeMetadata(object, parentResult, storage, true);\\n                    });\\n                }\\n            })\\n        } else {\\n            _.each(parentResults, parentResult => {\\n                const childResult = parentResult[node.linkName];\\n                const storage = parentResult[node.linkStorageField];\\n\\n                if (node.isOneResult) {\\n                    if (childResult) {\\n                        storeMetadata(childResult, parentResult, storage, false);\\n                    }\\n                } else {\\n                    _.each(childResult, object => {\\n                        storeMetadata(object, parentResult, storage, false);\\n                    });\\n                }\\n            })\\n        }\\n    }\\n}\\n\\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\\n    if (isVirtual) {\\n        let $metadata;\\n        if (_.isArray(storage)) {\\n            $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\\n        } else {\\n            $metadata = storage;\\n        }\\n\\n        element.$metadata = _.omit($metadata, '_id')\\n    } else {\\n        let $metadata;\\n        if (_.isArray(storage)) {\\n            $metadata = _.find(storage, storageItem => storageItem._id == element._id);\\n        } else {\\n            $metadata = storage;\\n        }\\n\\n        element.$metadata = _.omit($metadata, '_id');\\n    }\\n}\\n\\nfunction snapBackCaches(node) {\\n    node.collectionNodes.forEach(collectionNode => {\\n        snapBackCaches(collectionNode);\\n    });\\n\\n    if (!_.isEmpty(node.snapCaches)) {\\n        // process stuff\\n        _.each(node.snapCaches, (linkName, cacheField) => {\\n            const isSingle = _.contains(node.snapCachesSingles, cacheField);\\n            const linker = node.collection.getLinker(linkName);\\n            // we do this because for one direct and one meta direct, id is not stored\\n            const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\\n\\n            node.results.forEach(result => {\\n                if (result[cacheField]) {\\n                    if (shoudStoreLinkStorage) {\\n                        Object.assign(result[cacheField], {\\n                            _id: linker.isMeta()\\n                                ? result[linker.linkStorageField]._id\\n                                : result[linker.linkStorageField]\\n                        });\\n                    }\\n\\n                    if (isSingle && _.isArray(result[cacheField])) {\\n                        result[linkName] = _.first(result[cacheField]);\\n                    } else {\\n                        result[linkName] = result[cacheField];\\n                    }\\n\\n                    delete result[cacheField];\\n                }\\n            })\\n        })\\n    }\\n}\\n\",\"import {check, Match} from 'meteor/check';\\nimport deepClone from 'lodash.clonedeep';\\n\\nfunction defaultFilterFunction({\\n    filters,\\n    options,\\n    params\\n}) {\\n    if (params.filters) {\\n        Object.assign(filters, params.filters);\\n    }\\n    if (params.options) {\\n        Object.assign(options, params.options);\\n    }\\n}\\n\\nfunction applyFilterRecursive(data, params = {}, isRoot = false) {\\n    if (isRoot && !_.isFunction(data.$filter)) {\\n        data.$filter = defaultFilterFunction;\\n    }\\n\\n    if (data.$filter) {\\n        check(data.$filter, Match.OneOf(Function, [Function]));\\n\\n        data.$filters = data.$filters || {};\\n        data.$options = data.$options || {};\\n\\n        if (_.isArray(data.$filter)) {\\n            data.$filter.forEach(filter => {\\n                filter.call(null, {\\n                    filters: data.$filters,\\n                    options: data.$options,\\n                    params: params\\n                })\\n            });\\n        } else {\\n            data.$filter({\\n                filters: data.$filters,\\n                options: data.$options,\\n                params: params\\n            });\\n        }\\n\\n        data.$filter = null;\\n        delete(data.$filter);\\n    }\\n\\n    _.each(data, (value, key) => {\\n        if (_.isObject(value)) {\\n            return applyFilterRecursive(value, params);\\n        }\\n    })\\n}\\n\\nfunction applyPagination(body, _params) {\\n    if (body['$paginate'] && _params) {\\n        if (!body.$options) {\\n            body.$options = {};\\n        }\\n\\n        if (_params.limit) {\\n            _.extend(body.$options, {\\n                limit: _params.limit\\n            })\\n        }\\n\\n        if (_params.skip) {\\n            _.extend(body.$options, {\\n                skip: _params.skip\\n            })\\n        }\\n\\n        delete body['$paginate'];\\n    }\\n}\\n\\nexport default (_body, _params = {}) => {\\n    let body = deepClone(_body);\\n    let params = deepClone(_params);\\n\\n    applyPagination(body, params);\\n    applyFilterRecursive(body, params, true);\\n\\n    return body;\\n}\\n\",\"import applyProps from './applyProps.js';\\nimport { assembleMetadata, removeLinkStorages, storeOneResults } from './prepareForDelivery';\\nimport prepareForDelivery from './prepareForDelivery';\\nimport {getNodeNamespace} from './createGraph';\\nimport {isFieldInProjection} from '../lib/fieldInProjection';\\n\\n/**\\n * This is always run client side to build the data graph out of client-side collections.\\n *\\n * @param node\\n * @param parentObject\\n * @param fetchOptions\\n * @returns {*}\\n */\\nfunction fetch(node, parentObject, fetchOptions = {}) {\\n    let {filters, options} = applyProps(node);\\n    // add subscription filter\\n    if (fetchOptions.scoped && fetchOptions.subscriptionHandle) {\\n        _.extend(filters, fetchOptions.subscriptionHandle.scopeQuery());\\n    }\\n    // add query path filter\\n    if (fetchOptions.scoped) {\\n        _.extend(filters, {[`_query_path_${getNodeNamespace(node)}`]: {$exists: true}});\\n    }\\n\\n    let results = [];\\n\\n    if (parentObject) {\\n        let accessor = node.linker.createLink(parentObject, node.collection);\\n\\n        if (node.isVirtual) {\\n            options.fields = options.fields || {};\\n            if (!isFieldInProjection(options.fields, node.linkStorageField, true)) {\\n                _.extend(options.fields, {\\n                    [node.linkStorageField]: 1\\n                });\\n            }\\n        }\\n\\n        results = accessor.find(filters, options).fetch();\\n    } else {\\n        results = node.collection.find(filters, options).fetch();\\n    }\\n\\n    _.each(node.collectionNodes, collectionNode => {\\n        _.each(results, result => {\\n            const collectionNodeResults = fetch(collectionNode, result);\\n            result[collectionNode.linkName] = collectionNodeResults;\\n            //delete result[node.linker.linkStorageField];\\n\\n            /**\\n             * Push into the results, because snapBackCaches() in prepareForDelivery does not work otherwise.\\n             * This is non-optimal, can we be sure that every item in results contains _id and add only if not in\\n             * the results?\\n             *\\n             * Other possible ways:\\n             * - do something like assemble() in storeHypernovaResults\\n             * - pass node.results to accessor above and find with sift\\n             */\\n\\n            collectionNode.results.push(...collectionNodeResults);\\n\\n            // this was not working because all references must be replaced in snapBackCaches, not only the ones that are \\n            // found first\\n            // const currentIds = _.pluck(collectionNode.results, '_id');\\n            // collectionNode.results.push(...collectionNodeResults.filter(res => !_.contains(currentIds, res._id)));\\n        })\\n    });\\n\\n    return results;\\n}\\n\\nexport default (node, params, fetchOptions) => {\\n    node.results = fetch(node, null, fetchOptions);\\n\\n    prepareForDelivery(node, params);\\n\\n    return node.results;\\n}\\n\",\"import FieldNode from './fieldNode.js';\\nimport ReducerNode from './reducerNode.js';\\nimport deepClone from 'lodash.clonedeep';\\nimport {check, Match} from 'meteor/check';\\nimport {expandField, isFieldInProjection} from '../lib/fieldInProjection';\\n\\nexport default class CollectionNode {\\n    constructor(collection, body = {}, linkName = null) {\\n        if (collection && !_.isObject(body)) {\\n            throw new Meteor.Error('invalid-body', `The field \\\"${linkName}\\\" is a collection link, and should have its body defined as an object.`);\\n        }\\n\\n        this.body = deepClone(body);\\n        this.linkName = linkName;\\n        this.collection = collection;\\n\\n        this.nodes = [];\\n        this.props = {};\\n        this.parent = null;\\n        this.linker = null;\\n        this.linkStorageField = null;\\n        this.scheduledForDeletion = false;\\n        this.reducers = [];\\n        this.results = [];\\n        this.snapCaches = {}; // {cacheField: linkName}\\n        this.snapCachesSingles = []; // [cacheField1, cacheField2]\\n    }\\n\\n    get collectionNodes() {\\n        return _.filter(this.nodes, n => n instanceof CollectionNode)\\n    }\\n\\n    get fieldNodes() {\\n        return _.filter(this.nodes, n => n instanceof FieldNode);\\n    }\\n\\n    get reducerNodes() {\\n        return _.filter(this.nodes, n => n instanceof ReducerNode);\\n    }\\n\\n    /**\\n     * Adds children to itself\\n     *\\n     * @param node\\n     * @param linker\\n     */\\n    add(node, linker) {\\n        node.parent = this;\\n\\n        if (node instanceof FieldNode) {\\n            runFieldSanityChecks(node.name);\\n        }\\n        \\n        if (linker) {\\n            node.linker = linker;\\n            node.linkStorageField = linker.linkStorageField;\\n            node.isMeta = linker.isMeta();\\n            node.isVirtual = linker.isVirtual();\\n            node.isOneResult = linker.isOneResult();\\n            node.shouldCleanStorage = this._shouldCleanStorage(node);\\n        }\\n\\n        this.nodes.push(node);\\n    }\\n\\n    /**\\n     * @param prop\\n     * @param value\\n     */\\n    addProp(prop, value) {\\n        if (prop === '$postFilter') {\\n            check(value, Match.OneOf(Function, [Function]))\\n        }\\n\\n        _.extend(this.props, {\\n            [prop]: value\\n        });\\n    }\\n\\n    /**\\n     * @param _node\\n     */\\n    remove(_node) {\\n        this.nodes = _.filter(this.nodes, node => _node !== node);\\n    }\\n\\n    /**\\n     * @param filters\\n     * @param options\\n     */\\n    applyFields(filters, options) {\\n        let hasAddedAnyField = false;\\n\\n        _.each(this.fieldNodes, n => {\\n            /**\\n             * $meta field should be added to the options.fields, but MongoDB does not exclude other fields.\\n             * Therefore, we do not count this as a field addition.\\n             * \\n             * See: https://docs.mongodb.com/manual/reference/operator/projection/meta/\\n             * The $meta expression specifies the inclusion of the field to the result set \\n             * and does not specify the exclusion of the other fields.\\n             */\\n            if (n.projectionOperator !== '$meta') {\\n                hasAddedAnyField = true;\\n            }\\n            n.applyFields(options.fields)\\n        });\\n\\n        // it will only get here if it has collectionNodes children\\n        _.each(this.collectionNodes, (collectionNode) => {\\n            let linker = collectionNode.linker;\\n\\n            if (linker && !linker.isVirtual()) {\\n                if (!isFieldInProjection(options.fields, linker.linkStorageField, true)) {\\n                    options.fields[linker.linkStorageField] = 1;\\n                    hasAddedAnyField = true;\\n                }\\n            }\\n        });\\n\\n        // if he selected filters, we should automatically add those fields\\n        _.each(filters, (value, field) => {\\n            // special handling for the $meta filter, conditional operators and text search\\n            if (!_.contains(['$or', '$nor', '$not', '$and', '$meta', '$text'], field)) {\\n                // if the field or the parent of the field already exists, don't add it\\n                if (!_.has(options.fields, field.split('.')[0])){\\n                    hasAddedAnyField = true;\\n                    options.fields[field] = 1;\\n                }\\n            }\\n        });\\n\\n        if (!hasAddedAnyField) {\\n            options.fields = {\\n                _id: 1,\\n                // fields might contain $meta expression, so it should be added here,\\n                ...options.fields,\\n            };\\n        }\\n    }\\n\\n    /**\\n     * @param fieldName\\n     * @returns {boolean}\\n     */\\n    hasField(fieldName, checkNested = false) {\\n        // for checkNested flag it expands profile.phone.verified into \\n        // ['profile', 'profile.phone', 'profile.phone.verified']\\n        // if any of these fields match it means that field exists\\n        const options = checkNested ? expandField(fieldName) : [fieldName];\\n        return !!_.find(this.fieldNodes, fieldNode => {\\n            return _.contains(options, fieldNode.name);\\n        });\\n    }\\n\\n    /**\\n     * @param fieldName\\n     * @returns {FieldNode}\\n     */\\n    getField(fieldName) {\\n        return _.find(this.fieldNodes, fieldNode => {\\n            return fieldNode.name == fieldName\\n        })\\n    }\\n\\n    /**\\n     * @param name\\n     * @returns {boolean}\\n     */\\n    hasCollectionNode(name) {\\n        return !!_.find(this.collectionNodes, node => {\\n            return node.linkName == name\\n        })\\n    }\\n\\n    /**\\n     * @param name\\n     * @returns {boolean}\\n     */\\n    hasReducerNode(name) {\\n        return !!_.find(this.reducerNodes, node => {\\n            return node.name == name\\n        })\\n    }\\n\\n    /**\\n     * @param name\\n     * @returns {ReducerNode}\\n     */\\n    getReducerNode(name) {\\n        return _.find(this.reducerNodes, node => {\\n            return node.name == name\\n        })\\n    }\\n\\n    /**\\n     * @param name\\n     * @returns {CollectionNode}\\n     */\\n    getCollectionNode(name) {\\n        return _.find(this.collectionNodes, node => {\\n            return node.linkName == name\\n        })\\n    }\\n\\n    /**\\n     * @returns {*}\\n     */\\n    getName() {\\n        return this.linkName\\n            ? this.linkName\\n            : (this.collection ? this.collection._name : 'N/A');\\n    }\\n\\n    /**\\n     * This is used for caching links\\n     *\\n     * @param cacheField\\n     * @param subLinkName\\n     */\\n    snapCache(cacheField, subLinkName) {\\n        this.snapCaches[cacheField] = subLinkName;\\n\\n        if (this.collection.getLinker(subLinkName).isOneResult()) {\\n            this.snapCachesSingles.push(cacheField);\\n        }\\n    }\\n\\n    /**\\n     * This method verifies whether to remove the linkStorageField form the results\\n     * unless you specify it in your query.\\n     *\\n     * @param node\\n     * @returns {boolean}\\n     * @private\\n     */\\n    _shouldCleanStorage(node) {\\n        if (node.linkStorageField === '_id') {\\n            return false;\\n        } else {\\n            if (node.isVirtual) {\\n                return !node.hasField(node.linkStorageField, true);\\n            } else {\\n                return !this.hasField(node.linkStorageField, true);\\n            }\\n        }\\n    }\\n}\\n\\n/**\\n * Make sure that the field is ok to be added\\n * @param {*} fieldName \\n */\\nexport function runFieldSanityChecks(fieldName) {\\n    // Run sanity checks on the field\\n    if (fieldName[0] === '$') {\\n        throw new Error(`You are not allowed to use fields that start with $ inside a reducer's body: ${fieldName}`);\\n    }\\n\\n    return true;\\n}\\n\",\"export default class FieldNode {\\n    constructor(name, body, isProjectionOperator = false) {\\n        this.name = name;\\n        this.projectionOperator = isProjectionOperator ? _.keys(body)[0] : null;\\n        this.body = !_.isObject(body) || isProjectionOperator ? body : 1;\\n        this.scheduledForDeletion = false;\\n    }\\n\\n    applyFields(fields) {\\n        fields[this.name] = this.body;\\n    }\\n}\\n\",\"export default class ReducerNode {\\n    constructor(name, {body, reduce}) {\\n        this.name = name;\\n        this.body = body;\\n        this.reduceFunction = reduce;\\n        this.dependencies = []; // This is a list of the reducer this reducer uses.\\n    }\\n\\n    /**\\n     * When computing we also pass the parameters\\n     * \\n     * @param {*} object \\n     * @param {*} args \\n     */\\n    compute(object, ...args) {\\n        object[this.name] = this.reduce.call(this, object, ...args);\\n    }\\n\\n    reduce(object, ...args) {\\n        return this.reduceFunction.call(this, object, ...args);\\n    }\\n}\",\"import { check } from 'meteor/check';\\nimport addFieldMap from './lib/addFieldMap';\\n\\nconst storage = '__reducers';\\nObject.assign(Mongo.Collection.prototype, {\\n    /**\\n     * @param data\\n     */\\n    addReducers(data) {\\n        if (!this[storage]) {\\n            this[storage] = {};\\n        }\\n\\n        _.each(data, (reducerConfig, reducerName) => {\\n            if (!this[reducerConfig]) {\\n                this[reducerConfig] = {};\\n            }\\n\\n            if (this.getLinker(reducerName)) {\\n                throw new Meteor.Error(\\n                    `You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${\\n                        this._name\\n                    } collection`\\n                );\\n            }\\n\\n            if (this[reducerConfig][reducerName]) {\\n                throw new Meteor.Error(\\n                    `You cannot add the reducer with name: ${reducerName} because it was already added to ${\\n                        this._name\\n                    } collection`\\n                );\\n            }\\n\\n            check(reducerConfig, {\\n                body: Object,\\n                reduce: Function,\\n            });\\n\\n            _.extend(this[storage], {\\n                [reducerName]: reducerConfig,\\n            });\\n        });\\n    },\\n\\n    /**\\n     * @param name\\n     * @returns {*}\\n     */\\n    getReducer(name) {\\n        if (this[storage]) {\\n            return this[storage][name];\\n        }\\n    },\\n\\n    /**\\n     * This creates reducers that makes sort of aliases for the database fields we use\\n     */\\n    addFieldMap,\\n});\\n\",\"/**\\n * @param {[niceField: string]: dbField} map\\n */\\nexport default function addFieldMap(map) {\\n    const collection = this;\\n    let reducers = {};\\n    for (let key in map) {\\n        const dbField = map[key];\\n        reducers[key] = {\\n            body: {\\n                [dbField]: 1,\\n            },\\n            reduce(obj) {\\n                return obj[dbField];\\n            },\\n        };\\n    }\\n\\n    collection.addReducers(reducers);\\n}\\n\",\"export default function applyReducers(root, params) {\\n    _.each(root.collectionNodes, node => {\\n        applyReducers(node, params);\\n    });\\n\\n    const processedReducers = [];\\n    let reducersQueue = [...root.reducerNodes];\\n\\n    // TODO: find out if there's an infinite reducer inter-deendency\\n\\n    while (reducersQueue.length) {\\n        const reducerNode = reducersQueue.shift();\\n\\n        // If this reducer depends on other reducers\\n        if (reducerNode.dependencies.length) {\\n            // If there is an unprocessed reducer, move it at the end of the queue\\n            const allDependenciesComputed = _.all(reducerNode.dependencies, dep => processedReducers.includes(dep));\\n            if (allDependenciesComputed) {\\n                root.results.forEach(result => {\\n                    reducerNode.compute(result, params);\\n                });\\n                processedReducers.push(reducerNode.name);\\n            } else {\\n                // Move it at the end of the queue\\n                reducersQueue.push(reducerNode);\\n            }\\n        } else {\\n            root.results.forEach(result => {\\n                reducerNode.compute(result, params);\\n            });\\n\\n            processedReducers.push(reducerNode.name);\\n        }\\n    }\\n}\\n\",\"import dot from 'dot-object';\\n\\n/**\\n * @param root\\n */\\nexport default function cleanReducerLeftovers(root, results) {\\n    _.each(root.collectionNodes, node => {\\n        if (node.scheduledForDeletion) {\\n            results.forEach(result => {\\n                delete result[node.linkName];\\n            })\\n        }\\n    });\\n\\n    _.each(root.collectionNodes, node => {\\n        let childResults;\\n        if (node.isOneResult) {\\n            childResults = results.map(result => result[node.linkName]).filter(element => !!element);\\n        } else {\\n            childResults = _.flatten(results.map(result => result[node.linkName]).filter(element => !!element));\\n        }\\n\\n        cleanReducerLeftovers(node, childResults);\\n    });\\n\\n    _.each(root.fieldNodes, node => {\\n        if (node.scheduledForDeletion) {\\n            cleanNestedFields(node.name.split('.'), results, root);\\n        }\\n    });\\n\\n    _.each(root.reducerNodes, node => {\\n        if (node.scheduledForDeletion) {\\n            results.forEach(result => {\\n                delete result[node.name];\\n            })\\n        }\\n    });\\n}\\n\\n\\n// if we store a field like: 'profile.firstName'\\n// then we need to delete profile: { firstName }\\n// if profile will have empty keys, we need to delete profile.\\n\\n/**\\n * Cleans what reducers needed to be computed and not used.\\n * @param parts\\n * @param results\\n */\\nfunction cleanNestedFields(parts, results, root) {\\n    const snapCacheField = root.snapCaches[parts[0]];\\n    const fieldName = snapCacheField ? snapCacheField : parts[0];\\n\\n    if (parts.length === 1) {\\n        results.forEach(result => {\\n            if (_.isObject(result) && fieldName !== '_id') {\\n                delete result[fieldName];\\n            }\\n        });\\n\\n        return;\\n    }\\n\\n    parts.shift();\\n    cleanNestedFields(\\n        parts, \\n        results\\n            .filter(result => !!result[fieldName])\\n            .map(result => result[fieldName]),\\n        root\\n    );\\n    \\n    results.forEach(result => {\\n        if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\\n            if (fieldName !== '_id') {\\n                delete result[fieldName];\\n            }\\n        }\\n    })\\n}\\n\",\"import dot from 'dot-object';\\nimport { createNodes } from '../../lib/createGraph';\\nimport CollectionNode from '../../nodes/collectionNode';\\nimport FieldNode from '../../nodes/fieldNode';\\nimport ReducerNode from '../../nodes/reducerNode';\\nimport embedReducerWithLink from './embedReducerWithLink';\\nimport { specialFields } from '../../lib/createGraph';\\n\\nexport default function addReducers(root) {\\n    // we add reducers last, after we have added all the fields.\\n    root.reducerNodes.forEach(reducer => {\\n        _.each(reducer.body, (body, fieldName) => {\\n            handleAddElement(reducer, root, fieldName, body);\\n        })\\n    });\\n}\\n\\n/**\\n * @param root\\n * @param fieldName\\n * @param body\\n */\\nexport function handleAddElement(reducerNode, root, fieldName, body) {\\n    // if it's a link\\n    const collection = root.collection;\\n    const linker = collection.getLinker(fieldName);\\n    if (linker) {\\n        return handleAddLink(reducerNode, fieldName, body, root, linker);\\n    }\\n\\n    const reducer = collection.getReducer(fieldName);\\n    if (reducer) {\\n        reducerNode.dependencies.push(fieldName);\\n        return handleAddReducer(fieldName, reducer, root);\\n    }\\n\\n    // we assume it's a field in this case\\n    return handleAddField(fieldName, body, root);\\n}\\n\\n/**\\n * @param fieldName\\n * @param reducer\\n * @param root\\n */\\nexport function handleAddReducer(fieldName, {body, reduce}, root) {\\n    if (!root.hasReducerNode(fieldName)) {\\n        let childReducerNode = new ReducerNode(fieldName, {body, reduce});\\n        root.add(childReducerNode);\\n        childReducerNode.scheduledForDeletion = true;\\n\\n        _.each(childReducerNode.body, (body, fieldName) => {\\n            handleAddElement(childReducerNode, root, fieldName, body);\\n        })\\n    }\\n}\\n\\n/**\\n * @param fieldName\\n * @param body\\n * @param root\\n * @param linker\\n */\\nexport function handleAddLink(reducerNode, fieldName, body, parent, linker) {\\n    if (parent.hasCollectionNode(fieldName)) {\\n        const collectionNode = parent.getCollectionNode(fieldName);\\n\\n        embedReducerWithLink(reducerNode, body, collectionNode);\\n    } else {\\n        // add\\n        let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\\n        collectionNode.scheduledForDeletion = true;\\n        parent.add(collectionNode, linker);\\n\\n        createNodes(collectionNode);\\n    }\\n}\\n\\n/**\\n * @param fieldName\\n * @param body\\n * @param root\\n */\\nexport function handleAddField(fieldName, body, root) {\\n    if (_.contains(specialFields, fieldName)) {\\n        root.addProp(fieldName, body);\\n\\n        return;\\n    }\\n\\n    if (_.isObject(body)) {\\n        // if reducer specifies a nested field\\n        // if it's a prop\\n        const dots = dot.dot({\\n            [fieldName]: body\\n        });\\n\\n        _.each(dots, (value, key) => {\\n            addFieldIfRequired(root, key, value);\\n        });\\n    } else {\\n        // if reducer does not specify a nested field, and the field does not exist.\\n        addFieldIfRequired(root, fieldName, body);\\n    }\\n}\\n\\nfunction addFieldIfRequired(root, fieldName, body) {\\n    if (!root.hasField(fieldName, true)) {\\n        /**\\n         * Check if there are any nested fields for this field.\\n         * Adding root field here and scheduling for deletion would not work if there is already nested field, \\n         * for example:\\n         * when trying to add meta: 1, it should be checked that there are no meta.* fields\\n         * */\\n\\n        const nestedFields = root.fieldNodes.filter(({name}) => name.startsWith(`${fieldName}.`));\\n        // remove nested fields - important for minimongo which complains for these situations\\n        // TODO: excess fields are not removed (caused by adding the root field and removing nested fields) but there\\n        // should probably be a way to handle this in post-processing - for example by keeping a whitelist of fields\\n        // and removing anything else\\n        nestedFields.forEach(node => root.remove(node));\\n \\n        let fieldNode = new FieldNode(fieldName, body);\\n        // delete only if all nested fields are scheduled for deletion (that includes the case of 0 nested fields)\\n        fieldNode.scheduledForDeletion = nestedFields.every(field => field.scheduledForDeletion);\\n\\n        root.add(fieldNode);\\n    }\\n}\\n\",\"import {handleAddField, handleAddElement, handleAddReducer} from './createReducers';\\n\\n/**\\n * Embeds the reducer body with a collection body\\n * @param reducerBody\\n * @param collectionNode\\n */\\nexport default function embedReducerWithLink(reducerNode, reducerBody, collectionNode) {\\n    _.each(reducerBody, (value, key) => {\\n        const collection = collectionNode.collection;\\n\\n        if (_.isObject(value)) {\\n            // nested field or link\\n            if (collectionNode.body[key]) {\\n                // if it exists\\n                const linker = collection.getLinker(key);\\n\\n                // if it's a link\\n                if (linker) {\\n                    if (linker.isDenormalized()) {\\n                        if (linker.isSubBodyDenormalized(value)) {\\n                            const cacheField = linker.linkConfig.denormalize.field;\\n                            handleAddField(cacheField, value, collectionNode);\\n                            return;\\n                        }\\n                    }\\n\\n                    embedReducerWithLink(reducerNode, value, collectionNode.getCollectionNode(key));\\n                    return;\\n                }\\n\\n                handleAddField(key, value, collectionNode);\\n            } else {\\n                // does not exist, so it may be a link/reducer/field\\n                handleAddElement(reducerNode, collectionNode, key, value);\\n            }\\n        } else {\\n            // if this field or other reducer exists within the collection\\n\\n            if (!collectionNode.body[key]) {\\n                // can only be field or another reducer for this.\\n                const reducer = collection.getReducer(key);\\n                if (reducer) {\\n                    // if it's another reducer\\n                    return handleAddReducer(key, reducer, collectionNode);\\n                }\\n\\n                return handleAddField(key, value, collectionNode);\\n            }\\n        }\\n    })\\n}\"]}","minifier":"terser"}