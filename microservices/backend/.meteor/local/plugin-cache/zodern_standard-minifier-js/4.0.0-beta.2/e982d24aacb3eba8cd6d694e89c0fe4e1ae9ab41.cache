{"code":"!function(){var e=Package.meteor.Meteor,t=Package.meteor.global,n=Package.meteor.meteorEnv,s=Package[\"accounts-base\"].Accounts,i=Package.check.check,o=Package.check.Match,r=Package.random.Random,a=Package.session.Session,u=Package[\"react-meteor-data\"].ReactMeteorData,l=Package.modules.meteorInstall,c=Package[\"babel-runtime\"].meteorBabelHelpers,f=Package.promise.Promise,d=Package[\"ecmascript-runtime-client\"].Symbol,h=Package[\"ecmascript-runtime-client\"].Map,m=Package[\"ecmascript-runtime-client\"].Set,p,g=l({node_modules:{meteor:{\"epotek:accounts-ui\":{\"check-npm.js\":function(){},\"main_client.js\":function(e,t,n){var s,i,o;n.export({default:function(){return o},Accounts:function(){return s},STATES:function(){return i}}),n.link(\"meteor/accounts-base\",{Accounts:function(e){s=e}},0),n.link(\"./imports/accounts_ui.js\"),n.link(\"./imports/login_session.js\"),n.link(\"./imports/helpers.js\",{STATES:function(e){i=e}},1),n.link(\"./imports/api/client/loginWithoutPassword.js\"),n.link(\"./imports/ui/components/LoginForm.jsx\",{default:function(e){o=e}},2)},imports:{\"accounts_ui.js\":function(e,t,n){var s,i,o,r,a;n.link(\"meteor/accounts-base\",{Accounts:function(e){s=e}},0),n.link(\"./helpers.js\",{redirect:function(e){i=e},validatePassword:function(e){o=e},validateEmail:function(e){r=e},validateUsername:function(e){a=e}},1),s.ui={},s.ui._options={requestPermissions:[],requestOfflineToken:{},forceApprovalPrompt:{},requireEmailVerification:!1,passwordSignupFields:\"EMAIL_ONLY_NO_PASSWORD\",minimumPasswordLength:7,loginPath:\"/\",signUpPath:null,resetPasswordPath:null,profilePath:\"/\",changePasswordPath:null,homeRoutePath:\"/\",onSubmitHook:function(){},onPreSignUpHook:function(){return new f(function(e){return e()})},onPostSignUpHook:function(){},onEnrollAccountHook:function(){return i(\"\"+s.ui._options.loginPath)},onResetPasswordHook:function(){return i(\"\"+s.ui._options.loginPath)},onVerifyEmailHook:function(){return i(\"\"+s.ui._options.profilePath)},onSignedInHook:function(){return i(\"\"+s.ui._options.homeRoutePath)},onSignedOutHook:function(){return i(\"\"+s.ui._options.homeRoutePath)},emailPattern:new RegExp(\"[^@]+@[^@.]{2,}.[^.@]+\")},s.ui.config=function(e){var t=[\"passwordSignupFields\",\"requestPermissions\",\"requestOfflineToken\",\"forbidClientAccountCreation\",\"requireEmailVerification\",\"minimumPasswordLength\",\"loginPath\",\"signUpPath\",\"resetPasswordPath\",\"profilePath\",\"changePasswordPath\",\"homeRoutePath\",\"onSubmitHook\",\"onPreSignUpHook\",\"onPostSignUpHook\",\"onEnrollAccountHook\",\"onResetPasswordHook\",\"onVerifyEmailHook\",\"onSignedInHook\",\"onSignedOutHook\",\"validateField\",\"emailPattern\"];if(Object.keys(e).forEach(function(e){if(!t.includes(e))throw new Error(\"Accounts.ui.config: Invalid key: \"+e)}),e.passwordSignupFields){if(![\"USERNAME_AND_EMAIL\",\"USERNAME_AND_OPTIONAL_EMAIL\",\"USERNAME_ONLY\",\"EMAIL_ONLY\",\"EMAIL_ONLY_NO_PASSWORD\",\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(e.passwordSignupFields))throw new Error(\"Accounts.ui.config: Invalid option for `passwordSignupFields`: \"+e.passwordSignupFields);s.ui._options.passwordSignupFields=e.passwordSignupFields}if(e.requestPermissions&&Object.keys(e.requestPermissions).forEach(function(t){var n=e.requestPermissions[t];if(s.ui._options.requestPermissions[t])throw new Error(\"Accounts.ui.config: Can't set `requestPermissions` more than once for \"+t);if(!(n instanceof Array))throw new Error(\"Accounts.ui.config: Value for `requestPermissions` must be an array\");s.ui._options.requestPermissions[t]=n}),e.requestOfflineToken&&Object.keys(e.requestOfflineToken).forEach(function(t){var n=e.requestOfflineToken[t];if(\"google\"!==t)throw new Error(\"Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.\");if(s.ui._options.requestOfflineToken[t])throw new Error(\"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \"+t);s.ui._options.requestOfflineToken[t]=n}),e.forceApprovalPrompt&&Object.keys(e.forceApprovalPrompt).forEach(function(t){var n=e.forceApprovalPrompt[t];if(\"google\"!==t)throw new Error(\"Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.\");if(s.ui._options.forceApprovalPrompt[t])throw new Error(\"Accounts.ui.config: Can't set `forceApprovalPrompt` more than once for \"+t);s.ui._options.forceApprovalPrompt[t]=n}),e.requireEmailVerification){if(\"boolean\"!=typeof e.requireEmailVerification)throw new Error('Accounts.ui.config: \"requireEmailVerification\" not a boolean');s.ui._options.requireEmailVerification=e.requireEmailVerification}if(e.minimumPasswordLength){if(\"number\"!=typeof e.minimumPasswordLength)throw new Error('Accounts.ui.config: \"minimumPasswordLength\" not a number');s.ui._options.minimumPasswordLength=e.minimumPasswordLength}for(var n=[\"onSubmitHook\",\"onPreSignUpHook\",\"onPostSignUpHook\"],o=0;o<n.length;o++){var r=n[o];if(e[r]){if(\"function\"!=typeof e[r])throw new Error('Accounts.ui.config: \"'+r+'\" not a function');s.ui._options[r]=e[r]}}for(var a=[\"emailPattern\"],u=0;u<a.length;u++){var l=a[u];if(e[l]){if(!(e[l]instanceof RegExp))throw new Error('Accounts.ui.config: \"'+l+'\" not a Regular Expression');s.ui._options[l]=e[l]}}for(var c=[\"loginPath\",\"signUpPath\",\"resetPasswordPath\",\"profilePath\",\"changePasswordPath\",\"homeRoutePath\"],f=0;f<c.length;f++){var d=c[f];if(void 0!==e[d]){if(null!==e[d]&&\"string\"!=typeof e[d])throw new Error(\"Accounts.ui.config: \"+d+\" is not a string or null\");s.ui._options[d]=e[d]}}for(var h=function(t){if(e[t])if(\"function\"==typeof e[t])s.ui._options[t]=e[t];else{if(\"string\"!=typeof e[t])throw new Error('Accounts.ui.config: \"'+t+'\" not a function or an absolute or relative path');s.ui._options[t]=function(){return i(e[t])}}},m=[\"onEnrollAccountHook\",\"onResetPasswordHook\",\"onVerifyEmailHook\",\"onSignedInHook\",\"onSignedOutHook\"],p=0;p<m.length;p++){var g;h(m[p])}},n.exportDefault(s)},\"helpers.js\":function(t,n,i){var o;i.export({loginButtonsSession:function(){return r},STATES:function(){return a},getLoginServices:function(){return u},hasPasswordService:function(){return l},loginResultCallback:function(){return c},passwordSignupFields:function(){return f},validateEmail:function(){return h},validatePassword:function(){return m},validateUsername:function(){return p},redirect:function(){return g},capitalize:function(){return S}});try{o=t(\"react-router\").browserHistory}catch(e){}var r=s._loginButtonsSession,a={SIGN_IN:d(\"SIGN_IN\"),SIGN_UP:d(\"SIGN_UP\"),PROFILE:d(\"PROFILE\"),PASSWORD_CHANGE:d(\"PASSWORD_CHANGE\"),PASSWORD_RESET:d(\"PASSWORD_RESET\"),ENROLL_ACCOUNT:d(\"ENROLL_ACCOUNT\")};function u(){var e=Package[\"accounts-oauth\"]?s.oauth.serviceNames():[];return e.sort(),e.map(function(e){return{name:e}})}function l(){return!!Package[\"accounts-password\"]}function c(t,n){n&&(n instanceof s.LoginCancelledError||ServiceConfiguration.ConfigError),e.isClient&&\"function\"==typeof t&&t()}function f(){return s.ui._options.passwordSignupFields||\"EMAIL_ONLY_NO_PASSWORD\"}function h(e,t,n){return\"USERNAME_AND_OPTIONAL_EMAIL\"===f()&&\"\"===e||(!!s.ui._options.emailPattern.test(e)||(e&&0!==e.length?(t(\"error.accounts.Invalid email\",\"warning\",!1,\"email\"),!1):(t(\"error.emailRequired\",\"warning\",!1,\"email\"),!1)))}function m(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0,i;return e.length>=s.ui._options.minimumPasswordLength||(t(\"error.minChar\",\"warning\",!1,\"password\"),!1)}function p(e,t,n,s){return!!e||(t(\"error.usernameRequired\",\"warning\",!1,\"USERNAME_ONLY\"===f()||s===a.SIGN_UP?\"username\":\"usernameOrEmail\"),!1);var i}function g(t){e.isClient&&window.history&&e.setTimeout(function(){Package[\"kadira:flow-router\"]?Package[\"kadira:flow-router\"].FlowRouter.go(t):Package[\"kadira:flow-router-ssr\"]?Package[\"kadira:flow-router-ssr\"].FlowRouter.go(t):o?o.push(t):window.history.pushState({},\"redirect\",t)},100)}function S(e){return e.replace(/\\-/,\" \").split(\" \").map(function(e){return e.charAt(0).toUpperCase()+e.slice(1)}).join(\" \")}this.getLoginServices=u},\"login_session.js\":function(t,n,s){var i,o,r,u;s.export({validateKey:function(){return c},KEY_PREFIX:function(){return f}}),s.link(\"meteor/accounts-base\",{Accounts:function(e){i=e}},0),s.link(\"./helpers.js\",{STATES:function(e){o=e},loginResultCallback:function(e){r=e},getLoginServices:function(e){u=e}},1);var l=[\"dropdownVisible\",\"inSignupFlow\",\"inForgotPasswordFlow\",\"inChangePasswordFlow\",\"inMessageOnlyFlow\",\"errorMessage\",\"infoMessage\",\"resetPasswordToken\",\"enrollAccountToken\",\"justVerifiedEmail\",\"justResetPassword\",\"configureLoginServiceDialogVisible\",\"configureLoginServiceDialogServiceName\",\"configureLoginServiceDialogSaveDisabled\",\"configureOnDesktopVisible\"],c=function(e){if(!l.includes(e))throw new Error(\"Invalid key in loginButtonsSession: \"+e)},f=\"Meteor.loginButtons.\",d;(i._loginButtonsSession={set:function(e,t){if(c(e),[\"errorMessage\",\"infoMessage\"].includes(e))throw new Error(\"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\");this._set(e,t)},_set:function(e,t){a.set(f+e,t)},get:function(e){return c(e),a.get(f+e)}},e.isClient)&&(i.onPageLoadLogin(function(e){u().map(function(e){var t;return e.name}).includes(e.type)&&r(e.type,e.error)}),i.onResetPasswordLink(function(e,t){i._loginButtonsSession.set(\"resetPasswordToken\",e),a.set(f+\"state\",\"resetPasswordToken\"),d=t,i.ui._options.onResetPasswordHook()}),i.onEnrollmentLink(function(e,t){i._loginButtonsSession.set(\"enrollAccountToken\",e),a.set(f+\"state\",\"enrollAccountToken\"),d=t,i.ui._options.onEnrollAccountHook()}),i.onEmailVerificationLink(function(e,t){i.verifyEmail(e,function(e){e?i.ui._options.onVerifyEmailHook():(i._loginButtonsSession.set(\"justVerifiedEmail\",!0),a.set(f+\"state\",\"justVerifiedEmail\"),i.ui._options.onSignedInHook()),t()})}))},api:{client:{\"loginWithoutPassword.js\":function(){s.loginWithoutPassword=function(e,t){if(!e.email)throw new Error(\"Must pass options.email\");s.connection.call(\"loginWithoutPassword\",e,t)}}}},ui:{components:{\"Button.jsx\":function(e,t,n){var s,i=e(\"@babel/runtime/helpers/interopRequireDefault\")(e(\"@babel/runtime/helpers/inheritsLoose\")),o,r,a,u;n.export({Button:function(){return l}}),n.link(\"react\",{default:function(e){o=e}},0),n.link(\"prop-types\",{default:function(e){r=e}},1),n.link(\"meteor/accounts-base\",{Accounts:function(e){a=e}},2);try{u=e(\"react-router\").Link}catch(e){}var l=function(e){function t(){return e.apply(this,arguments)||this}var n;return(0,i.default)(t,e),t.prototype.render=function(){function e(){var e=this.props,t=e.label,n=e.href,s=void 0===n?null:n,i=e.type,r=e.disabled,a=void 0!==r&&r,l=e.className,c=e.onClick;return\"link\"==i?u&&s?o.createElement(u,{to:s,className:l},t):o.createElement(\"a\",{href:s,className:l,onClick:c},t):o.createElement(\"button\",{className:l,type:i,disabled:a,onClick:c},t)}return e}(),t}(o.Component);l.propTypes={onClick:r.func},a.ui.Button=l},\"Buttons.jsx\":function(e,t,n){var s=e(\"@babel/runtime/helpers/interopRequireDefault\"),i=s(e(\"@babel/runtime/helpers/extends\")),o=s(e(\"@babel/runtime/helpers/inheritsLoose\")),r,a;n.export({Buttons:function(){return u}}),n.link(\"react\",{default:function(e){r=e}},0),n.link(\"./Button.jsx\"),n.link(\"meteor/accounts-base\",{Accounts:function(e){a=e}},1);var u=function(e){function t(){return e.apply(this,arguments)||this}var n;return(0,o.default)(t,e),t.prototype.render=function(){function e(){var e=this.props,t=e.buttons,n=void 0===t?{}:t,s=e.className,o=void 0===s?\"buttons\":s;return r.createElement(\"div\",{className:o},Object.keys(n).map(function(e,t){return r.createElement(a.ui.Button,(0,i.default)({},n[e],{key:t}))}))}return e}(),t}(r.Component);a.ui.Buttons=u},\"Field.jsx\":function(e,t,n){var s,i=e(\"@babel/runtime/helpers/interopRequireDefault\")(e(\"@babel/runtime/helpers/inheritsLoose\")),o,r,a;n.export({Field:function(){return u}}),n.link(\"react\",{default:function(e){o=e}},0),n.link(\"prop-types\",{default:function(e){r=e}},1),n.link(\"meteor/accounts-base\",{Accounts:function(e){a=e}},2);var u=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={mount:!0},n}(0,i.default)(t,e);var n=t.prototype;return n.triggerUpdate=function(){function e(){var e=this.props.onChange;this.input&&e&&e({target:{value:this.input.value}})}return e}(),n.componentDidMount=function(){function e(){this.triggerUpdate()}return e}(),n.componentDidUpdate=function(){function e(e){e.id!==this.props.id?this.setState({mount:!1}):this.state.mount||(this.setState({mount:!0}),this.triggerUpdate())}return e}(),n.render=function(){function e(){var e=this,t=this.props,n=t.id,s=t.hint,i=t.label,r=t.type,a=void 0===r?\"text\":r,u=t.onChange,l=t.required,c=void 0!==l&&l,f=t.className,d=void 0===f?\"field\":f,h=t.defaultValue,m=void 0===h?\"\":h,p=t.message,g=this.state.mount,S=void 0===g||g;return\"notice\"==a?o.createElement(\"div\",{className:d},i):S?o.createElement(\"div\",{className:d},o.createElement(\"label\",{htmlFor:n},i),o.createElement(\"input\",{id:n,ref:function(t){return e.input=t},type:a,onChange:u,placeholder:s,defaultValue:m}),p&&o.createElement(\"span\",{className:[\"message\",p.type].join(\" \").trim()},p.message)):null}return e}(),t}(o.Component);u.propTypes={onChange:r.func},a.ui.Field=u},\"Fields.jsx\":function(e,t,n){var s=e(\"@babel/runtime/helpers/interopRequireDefault\"),i=s(e(\"@babel/runtime/helpers/extends\")),o=s(e(\"@babel/runtime/helpers/inheritsLoose\")),r,a;n.export({Fields:function(){return u}}),n.link(\"react\",{default:function(e){r=e}},0),n.link(\"meteor/accounts-base\",{Accounts:function(e){a=e}},1),n.link(\"./Field.jsx\");var u=function(e){function t(){return e.apply(this,arguments)||this}var n;return(0,o.default)(t,e),t.prototype.render=function(){function e(){var e=this.props,t=e.fields,n=void 0===t?{}:t,s=e.className,o=void 0===s?\"fields\":s;return r.createElement(\"div\",{className:o},Object.keys(n).map(function(e,t){return r.createElement(a.ui.Field,(0,i.default)({},n[e],{key:t}))}))}return e}(),t}(r.Component);a.ui.Fields=u},\"Form.jsx\":function(e,t,n){var s,i=e(\"@babel/runtime/helpers/interopRequireDefault\")(e(\"@babel/runtime/helpers/inheritsLoose\")),o,r,a,u;n.export({Form:function(){return l}}),n.link(\"react\",{default:function(e){o=e}},0),n.link(\"prop-types\",{default:function(e){r=e}},1),n.link(\"react-dom\",{default:function(e){a=e}},2),n.link(\"meteor/accounts-base\",{Accounts:function(e){u=e}},3),n.link(\"./Fields.jsx\"),n.link(\"./Buttons.jsx\"),n.link(\"./FormMessage.jsx\"),n.link(\"./PasswordOrService.jsx\"),n.link(\"./SocialButtons.jsx\"),n.link(\"./FormMessages.jsx\");var l=function(e){function t(){return e.apply(this,arguments)||this}(0,i.default)(t,e);var n=t.prototype;return n.componentDidMount=function(){function e(){var e=this.form;e&&e.addEventListener(\"submit\",function(e){e.preventDefault()})}return e}(),n.render=function(){function e(){var e=this,t=this.props,n=t.hasPasswordService,s=t.oauthServices,i=t.fields,r=t.buttons,a=t.error,l=t.messages,c=t.translate,f=t.ready,d=void 0===f||f,h=t.className;return o.createElement(\"form\",{ref:function(t){return e.form=t},className:[h,d?\"ready\":null].join(\" \"),className:\"accounts-ui\",noValidate:!0},o.createElement(u.ui.Fields,{fields:i}),o.createElement(u.ui.Buttons,{buttons:r}),o.createElement(u.ui.PasswordOrService,{oauthServices:s,translate:c}),o.createElement(u.ui.SocialButtons,{oauthServices:s}),o.createElement(u.ui.FormMessages,{messages:l}))}return e}(),t}(o.Component);l.propTypes={oauthServices:r.object,fields:r.object.isRequired,buttons:r.object.isRequired,translate:r.func.isRequired,error:r.string,ready:r.bool},u.ui.Form=l},\"FormMessage.jsx\":function(e,t,n){var s,i=e(\"@babel/runtime/helpers/interopRequireDefault\")(e(\"@babel/runtime/helpers/inheritsLoose\")),o,r;function a(e){return e===Object(e)}n.export({FormMessage:function(){return u}}),n.link(\"react\",{default:function(e){o=e}},0),n.link(\"meteor/accounts-base\",{Accounts:function(e){r=e}},1);var u=function(e){function t(){return e.apply(this,arguments)||this}var n;return(0,i.default)(t,e),t.prototype.render=function(){function e(){var e=this.props,t=e.message,n=e.type,s=e.className,i=void 0===s?\"message\":s,r=e.style,u=void 0===r?{}:r,l;return e.deprecated&&console.warn(\"You are overriding Accounts.ui.Form and using FormMessage, the use of FormMessage in Form has been depreacted in v1.2.11, update your implementation to use FormMessages: https://github.com/studiointeract/accounts-ui/#deprecations\"),(t=a(t)?t.message:t)?o.createElement(\"div\",{style:u,className:[i,n].join(\" \")},t):null}return e}(),t}(o.Component);r.ui.FormMessage=u},\"FormMessages.jsx\":function(e,t,n){var s,i=e(\"@babel/runtime/helpers/interopRequireDefault\")(e(\"@babel/runtime/helpers/inheritsLoose\")),o,r,a;n.export({FormMessages:function(){return u}}),n.link(\"react\",{default:function(e){o=e},Component:function(e){r=e}},0),n.link(\"meteor/accounts-base\",{Accounts:function(e){a=e}},1);var u=function(e){function t(){return e.apply(this,arguments)||this}var n;return(0,i.default)(t,e),t.prototype.render=function(){function e(){var e=this.props,t=e.messages,n=void 0===t?[]:t,s=e.className,i=void 0===s?\"messages\":s,r=e.style,u=void 0===r?{}:r;return n.length>0&&o.createElement(\"div\",{className:\"messages\"},n.filter(function(e){return!(\"field\"in e)}).map(function(e,t){var n=e.message,s=e.type;return o.createElement(a.ui.FormMessage,{message:n,type:s,key:t})}))}return e}(),t}(r);a.ui.FormMessages=u},\"LoginForm.jsx\":function(t,n,s){var i=t(\"@babel/runtime/helpers/interopRequireDefault\"),o=i(t(\"@babel/runtime/helpers/extends\")),r=i(t(\"@babel/runtime/helpers/typeof\")),u=i(t(\"@babel/runtime/helpers/objectSpread\")),l=i(t(\"@babel/runtime/helpers/assertThisInitialized\")),c=i(t(\"@babel/runtime/helpers/inheritsLoose\")),d,h,m,p,g,S,w,P,v,k,_,E,b,A,N,O,F;function M(e,t){var n={};return e.forEach(function(e){n[e[t]]=e}),n}s.link(\"react\",{default:function(e){d=e},Component:function(e){h=e}},0),s.link(\"prop-types\",{default:function(e){m=e}},1),s.link(\"react-dom\",{default:function(e){p=e}},2),s.link(\"meteor/react-meteor-data\",{withTracker:function(e){g=e}},3),s.link(\"meteor/accounts-base\",{Accounts:function(e){S=e}},4),s.link(\"meteor-accounts-t9n\",{T9n:function(e){w=e}},5),s.link(\"../../login_session.js\",{KEY_PREFIX:function(e){P=e}},6),s.link(\"./Form.jsx\"),s.link(\"../../helpers.js\",{STATES:function(e){v=e},passwordSignupFields:function(e){k=e},validateEmail:function(e){_=e},validatePassword:function(e){E=e},validateUsername:function(e){b=e},loginResultCallback:function(e){A=e},getLoginServices:function(e){N=e},hasPasswordService:function(e){O=e},capitalize:function(e){F=e}},7);var R=function(t){function n(e){var n;n=t.call(this,e)||this;var s=e.formState,i=e.loginPath,o=e.signUpPath,r=e.resetPasswordPath,a=e.profilePath,u=e.changePasswordPath;return s===v.SIGN_IN&&Package[\"accounts-password\"]&&console.warn(\"Do not force the state to SIGN_IN on Accounts.ui.LoginForm, it will make it impossible to reset password in your app, this state is also the default state if logged out, so no need to force it.\"),n.state={messages:[],waiting:!0,formState:s||(S.user()?v.PROFILE:v.SIGN_IN),onSubmitHook:e.onSubmitHook||S.ui._options.onSubmitHook,onSignedInHook:e.onSignedInHook||S.ui._options.onSignedInHook,onSignedOutHook:e.onSignedOutHook||S.ui._options.onSignedOutHook,onPreSignUpHook:e.onPreSignUpHook||S.ui._options.onPreSignUpHook,onPostSignUpHook:e.onPostSignUpHook||S.ui._options.onPostSignUpHook},n.translate=n.translate.bind((0,l.default)(n)),n}(0,c.default)(n,t);var s=n.prototype;return s.componentDidMount=function(){function e(){var e=this,t;switch(this.setState(function(e){return{waiting:!1,ready:!0}}),a.get(P+\"state\")){case\"enrollAccountToken\":this.setState(function(e){return{formState:v.ENROLL_ACCOUNT}}),a.set(P+\"state\",null);break;case\"resetPasswordToken\":this.setState(function(e){return{formState:v.PASSWORD_CHANGE}}),a.set(P+\"state\",null);break;case\"justVerifiedEmail\":this.setState(function(e){return{formState:v.PROFILE}}),a.set(P+\"state\",null)}this.setState(function(t){return(0,u.default)({},e.getDefaultFieldValues())})}return e}(),s.componentWillReceiveProps=function(){function e(e,t){e.formState&&e.formState!==this.state.formState&&this.setState((0,u.default)({formState:e.formState},this.getDefaultFieldValues()))}return e}(),s.componentDidUpdate=function(){function e(e,t){!e.user!=!this.props.user&&this.setState({formState:this.props.user?v.PROFILE:v.SIGN_IN})}return e}(),s.translate=function(){function e(e){return w.get(e)}return e}(),s.validateField=function(){function e(e,t){var n=this.state.formState;switch(e){case\"email\":return _(t,this.showMessage.bind(this),this.clearMessage.bind(this));case\"password\":return E(t,this.showMessage.bind(this),this.clearMessage.bind(this));case\"username\":return b(t,this.showMessage.bind(this),this.clearMessage.bind(this),n)}}return e}(),s.getUsernameOrEmailField=function(){function e(){return{id:\"usernameOrEmail\",hint:this.translate(\"enterUsernameOrEmail\"),label:this.translate(\"usernameOrEmail\"),required:!0,defaultValue:this.state.username||\"\",onChange:this.handleChange.bind(this,\"usernameOrEmail\"),message:this.getMessageForField(\"usernameOrEmail\")}}return e}(),s.getUsernameField=function(){function e(){return{id:\"username\",hint:this.translate(\"enterUsername\"),label:this.translate(\"username\"),required:!0,defaultValue:this.state.username||\"\",onChange:this.handleChange.bind(this,\"username\"),message:this.getMessageForField(\"username\")}}return e}(),s.getEmailField=function(){function e(){return{id:\"email\",hint:this.translate(\"enterEmail\"),label:this.translate(\"email\"),type:\"email\",required:!0,defaultValue:this.state.email||\"\",onChange:this.handleChange.bind(this,\"email\"),message:this.getMessageForField(\"email\")}}return e}(),s.getPasswordField=function(){function e(){return{id:\"password\",hint:this.translate(\"enterPassword\"),label:this.translate(\"password\"),type:\"password\",required:!0,defaultValue:this.state.password||\"\",onChange:this.handleChange.bind(this,\"password\"),message:this.getMessageForField(\"password\")}}return e}(),s.getSetPasswordField=function(){function e(){return{id:\"newPassword\",hint:this.translate(\"enterPassword\"),label:this.translate(\"choosePassword\"),type:\"password\",required:!0,onChange:this.handleChange.bind(this,\"newPassword\")}}return e}(),s.getNewPasswordField=function(){function e(){return{id:\"newPassword\",hint:this.translate(\"enterNewPassword\"),label:this.translate(\"newPassword\"),type:\"password\",required:!0,onChange:this.handleChange.bind(this,\"newPassword\"),message:this.getMessageForField(\"newPassword\")}}return e}(),s.handleChange=function(){function e(e,t){var n,s,i=t.target.value;switch(e){case\"password\":break;default:i=i.trim()}this.setState(((n={})[e]=i,n)),this.setDefaultFieldValues(((s={})[e]=i,s))}return e}(),s.fields=function(){function t(){var t=[],n=this.state.formState;return O()||0!=N().length||t.push({label:\"No login service added, i.e. accounts-password\",type:\"notice\"}),O()&&n==v.SIGN_IN&&([\"USERNAME_AND_EMAIL\",\"USERNAME_AND_OPTIONAL_EMAIL\",\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(k())&&t.push(this.getUsernameOrEmailField()),\"USERNAME_ONLY\"===k()&&t.push(this.getUsernameField()),[\"EMAIL_ONLY\",\"EMAIL_ONLY_NO_PASSWORD\"].includes(k())&&t.push(this.getEmailField()),[\"EMAIL_ONLY_NO_PASSWORD\",\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(k())||t.push(this.getPasswordField())),O()&&n==v.SIGN_UP&&([\"USERNAME_AND_EMAIL\",\"USERNAME_AND_OPTIONAL_EMAIL\",\"USERNAME_ONLY\",\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(k())&&t.push(this.getUsernameField()),[\"USERNAME_AND_EMAIL\",\"EMAIL_ONLY\",\"EMAIL_ONLY_NO_PASSWORD\",\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(k())&&t.push(this.getEmailField()),[\"USERNAME_AND_OPTIONAL_EMAIL\"].includes(k())&&t.push(Object.assign(this.getEmailField(),{required:!1})),[\"EMAIL_ONLY_NO_PASSWORD\",\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(k())||t.push(this.getPasswordField())),n==v.PASSWORD_RESET&&t.push(this.getEmailField()),this.showPasswordChangeForm()&&(e.isClient&&!S._loginButtonsSession.get(\"resetPasswordToken\")&&t.push(this.getPasswordField()),t.push(this.getNewPasswordField())),this.showEnrollAccountForm()&&t.push(this.getSetPasswordField()),M(t,\"id\")}return t}(),s.buttons=function(){function e(){var e=this.props,t=e.loginPath,n=void 0===t?S.ui._options.loginPath:t,s=e.signUpPath,i=void 0===s?S.ui._options.signUpPath:s,o=e.resetPasswordPath,r=void 0===o?S.ui._options.resetPasswordPath:o,a=e.changePasswordPath,u=void 0===a?S.ui._options.changePasswordPath:a,l=e.profilePath,c=void 0===l?S.ui._options.profilePath:l,f=this.props.user,d=this.state,h=d.formState,m=d.waiting,p=[];return f&&h==v.PROFILE&&p.push({id:\"signOut\",label:this.translate(\"signOut\"),disabled:m,onClick:this.signOut.bind(this)}),this.showCreateAccountLink()&&p.push({id:\"switchToSignUp\",label:this.translate(\"signUp\"),type:\"link\",href:i,onClick:this.switchToSignUp.bind(this)}),h!=v.SIGN_UP&&h!=v.PASSWORD_RESET||p.push({id:\"switchToSignIn\",label:this.translate(\"signIn\"),type:\"link\",href:n,onClick:this.switchToSignIn.bind(this)}),this.showForgotPasswordLink()&&p.push({id:\"switchToPasswordReset\",label:this.translate(\"forgotPassword\"),type:\"link\",href:r,onClick:this.switchToPasswordReset.bind(this)}),f&&![\"EMAIL_ONLY_NO_PASSWORD\",\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(k())&&h==v.PROFILE&&f.services&&\"password\"in f.services&&p.push({id:\"switchToChangePassword\",label:this.translate(\"changePassword\"),type:\"link\",href:u,onClick:this.switchToChangePassword.bind(this)}),h==v.SIGN_UP&&p.push({id:\"signUp\",label:this.translate(\"signUp\"),type:O()?\"submit\":\"link\",className:\"active\",disabled:m,onClick:O()?this.signUp.bind(this,{}):null}),this.showSignInLink()&&p.push({id:\"signIn\",label:this.translate(\"signIn\"),type:O()?\"submit\":\"link\",className:\"active\",disabled:m,onClick:O()?this.signIn.bind(this):null}),h==v.PASSWORD_RESET&&p.push({id:\"emailResetLink\",label:this.translate(\"resetYourPassword\"),type:\"submit\",disabled:m,onClick:this.passwordReset.bind(this)}),(this.showPasswordChangeForm()||this.showEnrollAccountForm())&&(p.push({id:\"changePassword\",label:this.showPasswordChangeForm()?this.translate(\"changePassword\"):this.translate(\"setPassword\"),type:\"submit\",disabled:m,onClick:this.passwordChange.bind(this)}),S.user()?p.push({id:\"switchToSignOut\",label:this.translate(\"cancel\"),type:\"link\",href:c,onClick:this.switchToSignOut.bind(this)}):p.push({id:\"cancelResetPassword\",label:this.translate(\"cancel\"),type:\"link\",onClick:this.cancelResetPassword.bind(this)})),p.sort(function(e,t){return(\"submit\"==t.type&&null!=e.type)-(\"submit\"==e.type&&null!=t.type)}),M(p,\"id\")}return e}(),s.showSignInLink=function(){function e(){return this.state.formState==v.SIGN_IN&&Package[\"accounts-password\"]}return e}(),s.showPasswordChangeForm=function(){function e(){return Package[\"accounts-password\"]&&this.state.formState==v.PASSWORD_CHANGE}return e}(),s.showEnrollAccountForm=function(){function e(){return Package[\"accounts-password\"]&&this.state.formState==v.ENROLL_ACCOUNT}return e}(),s.showCreateAccountLink=function(){function e(){return this.state.formState==v.SIGN_IN&&!S._options.forbidClientAccountCreation&&Package[\"accounts-password\"]}return e}(),s.showForgotPasswordLink=function(){function e(){return!this.props.user&&this.state.formState==v.SIGN_IN&&[\"USERNAME_AND_EMAIL\",\"USERNAME_AND_OPTIONAL_EMAIL\",\"EMAIL_ONLY\"].includes(k())}return e}(),s.setDefaultFieldValues=function(){function e(e){if(\"object\"!==(0,r.default)(e))throw new Error(\"Argument to setDefaultFieldValues is not of type object\");\"undefined\"!=typeof localStorage&&localStorage&&localStorage.setItem(\"accounts_ui\",JSON.stringify((0,u.default)({passwordSignupFields:k()},this.getDefaultFieldValues(),e)))}return e}(),s.getDefaultFieldValues=function(){function e(){if(\"undefined\"!=typeof localStorage&&localStorage){var e=JSON.parse(localStorage.getItem(\"accounts_ui\")||null);if(e&&e.passwordSignupFields===k())return e}}return e}(),s.clearDefaultFieldValues=function(){function e(){\"undefined\"!=typeof localStorage&&localStorage&&localStorage.removeItem(\"accounts_ui\")}return e}(),s.switchToSignUp=function(){function e(e){e.preventDefault(),this.setState((0,u.default)({formState:v.SIGN_UP},this.getDefaultFieldValues())),this.clearMessages()}return e}(),s.switchToSignIn=function(){function e(e){e.preventDefault(),this.setState((0,u.default)({formState:v.SIGN_IN},this.getDefaultFieldValues())),this.clearMessages()}return e}(),s.switchToPasswordReset=function(){function e(e){e.preventDefault(),this.setState((0,u.default)({formState:v.PASSWORD_RESET},this.getDefaultFieldValues())),this.clearMessages()}return e}(),s.switchToChangePassword=function(){function e(e){e.preventDefault(),this.setState((0,u.default)({formState:v.PASSWORD_CHANGE},this.getDefaultFieldValues())),this.clearMessages()}return e}(),s.switchToSignOut=function(){function e(e){e.preventDefault(),this.setState({formState:v.PROFILE}),this.clearMessages()}return e}(),s.cancelResetPassword=function(){function e(e){e.preventDefault(),S._loginButtonsSession.set(\"resetPasswordToken\",null),this.setState({formState:v.SIGN_IN,messages:[]})}return e}(),s.signOut=function(){function t(){var t=this;e.logout(function(){t.setState({formState:v.SIGN_IN,password:null}),t.state.onSignedOutHook(),t.clearMessages(),t.clearDefaultFieldValues()})}return t}(),s.signIn=function(){function t(){var t=this,n=this.state,s=n.username,i=void 0===s?null:s,o=n.email,r=void 0===o?null:o,a=n.usernameOrEmail,u=void 0===a?null:a,l=n.password,c=n.formState,f=n.onSubmitHook,d=!1,h;if(this.clearMessages(),null!==u)if(this.validateField(\"username\",u)){if([\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(k()))return void this.loginWithoutPassword();h=u}else this.state.formState==v.SIGN_UP&&this.state.onSubmitHook(\"error.accounts.usernameRequired\",this.state.formState),d=!0;else null!==i?this.validateField(\"username\",i)?h={username:i}:(this.state.formState==v.SIGN_UP&&this.state.onSubmitHook(\"error.accounts.usernameRequired\",this.state.formState),d=!0):null==u&&(this.validateField(\"email\",r)?[\"EMAIL_ONLY_NO_PASSWORD\"].includes(k())?(this.loginWithoutPassword(),d=!0):h={email:r}:d=!0);[\"EMAIL_ONLY_NO_PASSWORD\"].includes(k())||this.validateField(\"password\",l)||(d=!0),d||e.loginWithPassword(h,l,function(e,n){f(e,c),e?t.showMessage(\"error.accounts.\"+e.reason||\"unknown_error\",\"error\"):(A(function(){return t.state.onSignedInHook()}),t.setState({formState:v.PROFILE,password:null}),t.clearDefaultFieldValues())})}return t}(),s.oauthButtons=function(){function e(){var e=this,t=this.state,n=t.formState,s=t.waiting,i=[];return n!=v.SIGN_IN&&n!=v.SIGN_UP||S.oauth&&S.oauth.serviceNames().map(function(t){i.push({id:t,label:F(t),disabled:s,type:\"button\",className:\"btn-\"+t+\" \"+t,onClick:e.oauthSignIn.bind(e,t)})}),M(i,\"id\")}return e}(),s.oauthSignIn=function(){function t(t){var n=this,s=this.props.user,i=this.state,o=i.formState,r=i.waiting,a=i.onSubmitHook;function u(){return t.charAt(0).toUpperCase()+t.slice(1)}\"meteor-developer\"===t&&(t=\"meteorDeveloperAccount\");var l=e[\"loginWith\"+u()],c={};S.ui._options.requestPermissions[t]&&(c.requestPermissions=S.ui._options.requestPermissions[t]),S.ui._options.requestOfflineToken[t]&&(c.requestOfflineToken=S.ui._options.requestOfflineToken[t]),S.ui._options.forceApprovalPrompt[t]&&(c.forceApprovalPrompt=S.ui._options.forceApprovalPrompt[t]),this.clearMessages();var f=this;l(c,function(t){a(t,o),t?n.showMessage(\"error.accounts.\"+t.reason||\"unknown_error\"):(n.setState({formState:v.PROFILE}),n.clearDefaultFieldValues(),A(function(){e.setTimeout(function(){return n.state.onSignedInHook()},100)}))})}return t}(),s.signUp=function(){function t(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=this.state,s=n.username,i=void 0===s?null:s,o=n.email,r=void 0===o?null:o,a=n.usernameOrEmail,u=void 0===a?null:a,l=n.password,c=n.formState,d=n.onSubmitHook,h=!1;this.clearMessages(),null!==i?this.validateField(\"username\",i)?t.username=i:(this.state.formState==v.SIGN_UP&&this.state.onSubmitHook(\"error.accounts.usernameRequired\",this.state.formState),h=!0):[\"USERNAME_AND_EMAIL\",\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(k())&&!this.validateField(\"username\",i)&&(this.state.formState==v.SIGN_UP&&this.state.onSubmitHook(\"error.accounts.usernameRequired\",this.state.formState),h=!0),this.validateField(\"email\",r)?t.email=r:h=!0,[\"EMAIL_ONLY_NO_PASSWORD\",\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(k())?t.password=e.uuid():this.validateField(\"password\",l)?t.password=l:(d(\"Invalid password\",c),h=!0);var m=function(e){var t=this;S.createUser(e,function(n){if(n)t.showMessage(\"error.accounts.\"+n.reason||\"unknown_error\",\"error\"),t.translate(\"error.accounts.\"+n.reason)?d(\"error.accounts.\"+n.reason,c):d(\"unknown_error\",c);else{d(null,c),t.setState({formState:v.PROFILE,password:null});var s=S.user();A(t.state.onPostSignUpHook.bind(t,e,s)),t.clearDefaultFieldValues()}t.setState({waiting:!1})})};if(!h){this.setState({waiting:!0});var p=this.state.onPreSignUpHook(t);p instanceof f?p.then(m.bind(this,t)):m(t)}}return t}(),s.loginWithoutPassword=function(){function e(){var e=this,t=this.state,n=t.email,s=void 0===n?\"\":n,i=t.usernameOrEmail,o=void 0===i?\"\":i,r=t.waiting,a=t.formState,u=t.onSubmitHook;if(!r)if(this.validateField(\"email\",s))this.setState({waiting:!0}),S.loginWithoutPassword({email:s},function(t){t?e.showMessage(\"error.accounts.\"+t.reason||\"unknown_error\",\"error\"):(e.showMessage(e.translate(\"info.emailSent\"),\"success\",5e3),e.clearDefaultFieldValues()),u(t,a),e.setState({waiting:!1})});else if(this.validateField(\"username\",o))this.setState({waiting:!0}),S.loginWithoutPassword({email:o,username:o},function(t){t?e.showMessage(\"error.accounts.\"+t.reason||\"unknown_error\",\"error\"):(e.showMessage(e.translate(\"info.emailSent\"),\"success\",5e3),e.clearDefaultFieldValues()),u(t,a),e.setState({waiting:!1})});else{var l=null;l=([\"USERNAME_AND_EMAIL_NO_PASSWORD\"].includes(k()),this.translate(\"error.accounts.invalid_email\")),this.showMessage(l,\"warning\"),u(l,a)}}return e}(),s.passwordReset=function(){function e(){var e=this,t=this.state,n=t.email,s=void 0===n?\"\":n,i=t.waiting,o=t.formState,r=t.onSubmitHook;i||(this.clearMessages(),this.validateField(\"email\",s)&&(this.setState({waiting:!0}),S.forgotPassword({email:s},function(t){t?e.showMessage(\"error.accounts.\"+t.reason||\"unknown_error\",\"error\"):(e.showMessage(e.translate(\"info.emailSent\"),\"success\",5e3),e.clearDefaultFieldValues()),r(t,o),e.setState({waiting:!1})})))}return e}(),s.passwordChange=function(){function e(){var e=this,t=this.state,n=t.password,s=t.newPassword,i=t.formState,o=t.onSubmitHook,r=t.onSignedInHook;if(this.validateField(\"password\",s)){var a=S._loginButtonsSession.get(\"resetPasswordToken\");a||(a=S._loginButtonsSession.get(\"enrollAccountToken\")),a?S.resetPassword(a,s,function(t){t?(e.showMessage(\"error.accounts.\"+t.reason||\"unknown_error\",\"error\"),o(t,i)):(e.showMessage(e.translate(\"info.passwordChanged\"),\"success\",5e3),o(null,i),e.setState({formState:v.PROFILE}),S._loginButtonsSession.set(\"resetPasswordToken\",null),S._loginButtonsSession.set(\"enrollAccountToken\",null),r())}):S.changePassword(n,s,function(t){t?(e.showMessage(\"error.accounts.\"+t.reason||\"unknown_error\",\"error\"),o(t,i)):(e.showMessage(\"info.passwordChanged\",\"success\",5e3),o(null,i),e.setState({formState:v.PROFILE}),e.clearDefaultFieldValues())})}else o(\"err.minChar\",i)}return e}(),s.showMessage=function(){function e(e,t,n,s){var i=this;(e=this.translate(e).trim())&&(this.setState(function(n){var i=n.messages,o=void 0===i?[]:i;return o.push((0,u.default)({message:e,type:t},s&&{field:s})),{messages:o}}),n&&(this.hideMessageTimout=setTimeout(function(){i.clearMessage(e)},n)))}return e}(),s.getMessageForField=function(){function e(e){var t=this.state.messages,n;return(void 0===t?[]:t).find(function(t){var n;return t.field===e})}return e}(),s.clearMessage=function(){function e(e){e&&this.setState(function(t){var n=t.messages,s;return{messages:(void 0===n?[]:n).filter(function(t){var n;return t.message!==e})}})}return e}(),s.clearMessages=function(){function e(){this.hideMessageTimout&&clearTimeout(this.hideMessageTimout),this.setState({messages:[]})}return e}(),s.componentWillMount=function(){function t(){if(e.isClient){var t=document.createElement(\"div\");p.render(d.createElement(S.ui.Field,{message:\"test\"}),t),0==t.getElementsByClassName(\"message\").length&&console.warn(\"Implementations of Accounts.ui.Field must render message in v1.2.11.\\n          https://github.com/studiointeract/accounts-ui/#deprecations\")}}return t}(),s.componentWillUnmount=function(){function e(){this.hideMessageTimout&&clearTimeout(this.hideMessageTimout)}return e}(),s.render=function(){function e(){var e=this;this.oauthButtons();var t=this.state.messages,n,s={deprecated:!0,message:(void 0===t?[]:t).map(function(e){var t;return e.message}).join(\", \")};return d.createElement(S.ui.Form,(0,o.default)({oauthServices:this.oauthButtons(),fields:this.fields(),buttons:this.buttons()},this.state,{message:s,translate:function(t){return e.translate(t)}}))}return e}(),n}(h);R.propTypes={formState:m.symbol,loginPath:m.string,signUpPath:m.string,resetPasswordPath:m.string,profilePath:m.string,changePasswordPath:m.string},R.defaultProps={formState:null,loginPath:null,signUpPath:null,resetPasswordPath:null,profilePath:null,changePasswordPath:null},S.ui.LoginForm=R;var I=g(function(){return e.subscribe(\"servicesList\"),{user:S.user()}})(R);S.ui.LoginForm=I,s.exportDefault(I)},\"PasswordOrService.jsx\":function(e,t,n){var s,i=e(\"@babel/runtime/helpers/interopRequireDefault\")(e(\"@babel/runtime/helpers/inheritsLoose\")),o,r,a,u,l;n.export({PasswordOrService:function(){return c}}),n.link(\"react\",{default:function(e){o=e}},0),n.link(\"prop-types\",{default:function(e){r=e}},1),n.link(\"meteor/accounts-base\",{Accounts:function(e){a=e}},2),n.link(\"meteor-accounts-t9n\",{T9n:function(e){u=e}},3),n.link(\"../../helpers.js\",{hasPasswordService:function(e){l=e}},4);var c=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={hasPasswordService:l(),services:Object.keys(t.oauthServices).map(function(e){return t.oauthServices[e].label})},n}(0,i.default)(t,e);var n=t.prototype;return n.translate=function(){function e(e){return this.props.translate?this.props.translate(e):u.get(e)}return e}(),n.render=function(){function e(){var e=this.props,t=e.className,n=void 0===t?\"password-or-service\":t,s=e.style,i=void 0===s?{}:s,r=this.state,a=r.hasPasswordService,u=r.services;return p=u,u.length>2&&(p=[]),a&&u.length>0?o.createElement(\"div\",{style:i,className:n},this.translate(\"orUse\")+\" \"+p.join(\" / \")):null}return e}(),t}(o.Component);c.propTypes={oauthServices:r.object},a.ui.PasswordOrService=c},\"SocialButtons.jsx\":function(e,t,n){var s=e(\"@babel/runtime/helpers/interopRequireDefault\"),i=s(e(\"@babel/runtime/helpers/extends\")),o=s(e(\"@babel/runtime/helpers/inheritsLoose\")),r,a;n.export({SocialButtons:function(){return u}}),n.link(\"react\",{default:function(e){r=e}},0),n.link(\"./Button.jsx\"),n.link(\"meteor/accounts-base\",{Accounts:function(e){a=e}},1);var u=function(e){function t(){return e.apply(this,arguments)||this}var n;return(0,o.default)(t,e),t.prototype.render=function(){function e(){var e=this.props,t=e.oauthServices,n=void 0===t?{}:t,s=e.className,o=void 0===s?\"social-buttons\":s;return r.createElement(\"div\",{className:o},Object.keys(n).map(function(e,t){return r.createElement(a.ui.Button,(0,i.default)({},n[e],{key:t}))}))}return e}(),t}(r.Component);a.ui.SocialButtons=u}}}}}}}},{extensions:[\".js\",\".json\",\".jsx\"]});g(\"/node_modules/meteor/epotek:accounts-ui/check-npm.js\");var S=g(\"/node_modules/meteor/epotek:accounts-ui/main_client.js\");Package._define(\"epotek:accounts-ui\",S)}();","sourcemap":"{\"version\":3,\"sources\":[\"packages/epotek:accounts-ui/main_client.js\",\"packages/epotek:accounts-ui/imports/accounts_ui.js\",\"packages/epotek:accounts-ui/imports/helpers.js\",\"packages/epotek:accounts-ui/imports/login_session.js\",\"packages/epotek:accounts-ui/imports/api/client/loginWithoutPassword.js\",\"packages/epotek:accounts-ui/imports/ui/components/Button.jsx\",\"packages/epotek:accounts-ui/imports/ui/components/Buttons.jsx\",\"packages/epotek:accounts-ui/imports/ui/components/Field.jsx\",\"packages/epotek:accounts-ui/imports/ui/components/Fields.jsx\",\"packages/epotek:accounts-ui/imports/ui/components/Form.jsx\",\"packages/epotek:accounts-ui/imports/ui/components/FormMessage.jsx\",\"packages/epotek:accounts-ui/imports/ui/components/FormMessages.jsx\",\"packages/epotek:accounts-ui/imports/ui/components/LoginForm.jsx\",\"packages/epotek:accounts-ui/imports/ui/components/PasswordOrService.jsx\",\"packages/epotek:accounts-ui/imports/ui/components/SocialButtons.jsx\"],\"names\":[\"Accounts\",\"STATES\",\"LoginForm\",\"module\",\"export\",\"default\",\"link\",\"v\",\"redirect\",\"validatePassword\",\"validateEmail\",\"validateUsername\",\"ui\",\"_options\",\"requestPermissions\",\"requestOfflineToken\",\"forceApprovalPrompt\",\"requireEmailVerification\",\"passwordSignupFields\",\"minimumPasswordLength\",\"loginPath\",\"signUpPath\",\"resetPasswordPath\",\"profilePath\",\"changePasswordPath\",\"homeRoutePath\",\"onSubmitHook\",\"onPreSignUpHook\",\"Promise\",\"resolve\",\"onPostSignUpHook\",\"onEnrollAccountHook\",\"onResetPasswordHook\",\"onVerifyEmailHook\",\"onSignedInHook\",\"onSignedOutHook\",\"emailPattern\",\"RegExp\",\"config\",\"options\",\"VALID_KEYS\",\"Object\",\"keys\",\"forEach\",\"key\",\"includes\",\"Error\",\"service\",\"scope\",\"Array\",\"value\",\"_arr\",\"_i\",\"length\",\"hook\",\"_arr2\",\"_i2\",\"_arr3\",\"_i3\",\"path\",\"_loop\",\"_arr4\",\"_i4\",\"exportDefault\",\"browserHistory\",\"loginButtonsSession\",\"getLoginServices\",\"hasPasswordService\",\"loginResultCallback\",\"capitalize\",\"require\",\"e\",\"_loginButtonsSession\",\"SIGN_IN\",\"Symbol\",\"SIGN_UP\",\"PROFILE\",\"PASSWORD_CHANGE\",\"PASSWORD_RESET\",\"ENROLL_ACCOUNT\",\"services\",\"Package\",\"oauth\",\"serviceNames\",\"sort\",\"map\",\"name\",\"err\",\"LoginCancelledError\",\"ServiceConfiguration\",\"ConfigError\",\"Meteor\",\"isClient\",\"email\",\"showMessage\",\"clearMessage\",\"test\",\"password\",\"arguments\",\"undefined\",\"errMsg\",\"username\",\"formState\",\"fieldName\",\"window\",\"history\",\"setTimeout\",\"FlowRouter\",\"go\",\"push\",\"pushState\",\"string\",\"replace\",\"split\",\"word\",\"charAt\",\"toUpperCase\",\"slice\",\"join\",\"this\",\"validateKey\",\"KEY_PREFIX\",\"doneCallback\",\"set\",\"_set\",\"Session\",\"get\",\"onPageLoadLogin\",\"attemptInfo\",\"_ref\",\"type\",\"error\",\"onResetPasswordLink\",\"token\",\"done\",\"onEnrollmentLink\",\"onEmailVerificationLink\",\"verifyEmail\",\"loginWithoutPassword\",\"callback\",\"connection\",\"call\",\"React\",\"PropTypes\",\"Link\",\"Button\",\"render\",\"_this$props\",\"props\",\"label\",\"_this$props$href\",\"href\",\"_this$props$disabled\",\"disabled\",\"className\",\"onClick\",\"createElement\",\"to\",\"Component\",\"propTypes\",\"func\",\"Buttons\",\"_this$props$buttons\",\"buttons\",\"_this$props$className\",\"id\",\"i\",\"_extends2\",\"Field\",\"_this\",\"_React$Component\",\"state\",\"mount\",\"triggerUpdate\",\"onChange\",\"input\",\"target\",\"componentDidMount\",\"componentDidUpdate\",\"prevProps\",\"setState\",\"_this2\",\"hint\",\"_this$props$type\",\"_this$props$required\",\"required\",\"_this$props$defaultVa\",\"defaultValue\",\"message\",\"_this$state$mount\",\"htmlFor\",\"ref\",\"placeholder\",\"trim\",\"Fields\",\"_this$props$fields\",\"fields\",\"ReactDOM\",\"Form\",\"form\",\"addEventListener\",\"preventDefault\",\"oauthServices\",\"messages\",\"translate\",\"_this$props$ready\",\"ready\",\"noValidate\",\"PasswordOrService\",\"SocialButtons\",\"FormMessages\",\"object\",\"isRequired\",\"bool\",\"isObject\",\"obj\",\"FormMessage\",\"_this$props$style\",\"style\",\"deprecated\",\"console\",\"warn\",\"_this$props$messages\",\"filter\",\"withTracker\",\"T9n\",\"indexBy\",\"array\",\"result\",\"_Component\",\"waiting\",\"user\",\"bind\",\"_assertThisInitialized2\",\"changeState\",\"prevState\",\"_objectSpread2\",\"getDefaultFieldValues\",\"componentWillReceiveProps\",\"nextProps\",\"nextContext\",\"text\",\"validateField\",\"field\",\"getUsernameOrEmailField\",\"handleChange\",\"getMessageForField\",\"getUsernameField\",\"getEmailField\",\"getPasswordField\",\"getSetPasswordField\",\"getNewPasswordField\",\"evt\",\"_this$setState\",\"_this$setDefaultField\",\"setDefaultFieldValues\",\"loginFields\",\"assign\",\"showPasswordChangeForm\",\"showEnrollAccountForm\",\"_this$props$loginPath\",\"_this$props$signUpPat\",\"_this$props$resetPass\",\"_this$props$changePas\",\"_this$props$profilePa\",\"_this$state\",\"loginButtons\",\"signOut\",\"showCreateAccountLink\",\"switchToSignUp\",\"switchToSignIn\",\"showForgotPasswordLink\",\"switchToPasswordReset\",\"switchToChangePassword\",\"signUp\",\"showSignInLink\",\"signIn\",\"passwordReset\",\"passwordChange\",\"switchToSignOut\",\"cancelResetPassword\",\"a\",\"b\",\"forbidClientAccountCreation\",\"defaults\",\"_typeof2\",\"localStorage\",\"setItem\",\"JSON\",\"stringify\",\"defaultFieldValues\",\"parse\",\"getItem\",\"clearDefaultFieldValues\",\"removeItem\",\"event\",\"clearMessages\",\"_this3\",\"logout\",\"_this4\",\"_this$state2\",\"_this$state2$username\",\"_this$state2$email\",\"_this$state2$username2\",\"usernameOrEmail\",\"loginSelector\",\"loginWithPassword\",\"reason\",\"oauthButtons\",\"_this5\",\"_this$state3\",\"oauthSignIn\",\"serviceName\",\"_this6\",\"_this$state4\",\"capitalService\",\"loginWithService\",\"self\",\"_this$state5\",\"_this$state5$username\",\"_this$state5$email\",\"_this$state5$username2\",\"uuid\",\"SignUp\",\"_this7\",\"createUser\",\"promise\",\"then\",\"_this8\",\"_this$state6\",\"_this$state6$email\",\"_this$state6$username\",\"_this9\",\"_this$state7\",\"_this$state7$email\",\"forgotPassword\",\"_this10\",\"_this$state8\",\"newPassword\",\"resetPassword\",\"changePassword\",\"clearTimeout\",\"_this11\",\"_ref$messages\",\"hideMessageTimout\",\"_this$state$messages\",\"find\",\"_ref2\",\"_ref3\",\"_ref3$messages\",\"_ref4\",\"componentWillMount\",\"container\",\"document\",\"getElementsByClassName\",\"componentWillUnmount\",\"_this12\",\"_this$state$messages2\",\"_ref5\",\"symbol\",\"defaultProps\",\"LoginFormContainer\",\"subscribe\",\"labels\",\"_this$props$oauthServ\"],\"mappings\":\"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\",\"sourcesContent\":[\"import { Accounts } from 'meteor/accounts-base';\\nimport './imports/accounts_ui.js';\\nimport './imports/login_session.js';\\nimport { STATES } from './imports/helpers.js';\\nimport './imports/api/client/loginWithoutPassword.js';\\nimport LoginForm from './imports/ui/components/LoginForm.jsx';\\n\\nexport { LoginForm as default, Accounts, STATES };\\n\",\"import { Accounts } from 'meteor/accounts-base';\\nimport {\\n  redirect,\\n  validatePassword,\\n  validateEmail,\\n  validateUsername\\n} from './helpers.js';\\n\\n/**\\n * @summary Accounts UI\\n * @namespace\\n * @memberOf Accounts\\n */\\nAccounts.ui = {};\\n\\nAccounts.ui._options = {\\n  requestPermissions: [],\\n  requestOfflineToken: {},\\n  forceApprovalPrompt: {},\\n  requireEmailVerification: false,\\n  passwordSignupFields: 'EMAIL_ONLY_NO_PASSWORD',\\n  minimumPasswordLength: 7,\\n  loginPath: '/',\\n  signUpPath: null,\\n  resetPasswordPath: null,\\n  profilePath: '/',\\n  changePasswordPath: null,\\n  homeRoutePath: '/',\\n  onSubmitHook: () => {},\\n  onPreSignUpHook: () => new Promise(resolve => resolve()),\\n  onPostSignUpHook: () => {},\\n  onEnrollAccountHook: () => redirect(`${Accounts.ui._options.loginPath}`),\\n  onResetPasswordHook: () => redirect(`${Accounts.ui._options.loginPath}`),\\n  onVerifyEmailHook: () => redirect(`${Accounts.ui._options.profilePath}`),\\n  onSignedInHook: () => redirect(`${Accounts.ui._options.homeRoutePath}`),\\n  onSignedOutHook: () => redirect(`${Accounts.ui._options.homeRoutePath}`),\\n  emailPattern: new RegExp('[^@]+@[^@.]{2,}.[^.@]+')\\n};\\n\\n/**\\n * @summary Configure the behavior of [`<Accounts.ui.LoginForm />`](#react-accounts-ui).\\n * @anywhere\\n * @param {Object} options\\n * @param {Object} options.requestPermissions Which [permissions](#requestpermissions) to request from the user for each external service.\\n * @param {Object} options.requestOfflineToken To ask the user for permission to act on their behalf when offline, map the relevant external service to `true`. Currently only supported with Google. See [Meteor.loginWithExternalService](#meteor_loginwithexternalservice) for more details.\\n * @param {Object} options.forceApprovalPrompt If true, forces the user to approve the app's permissions, even if previously approved. Currently only supported with Google.\\n * @param {String} options.passwordSignupFields Which fields to display in the user creation form. One of '`USERNAME_AND_EMAIL`', '`USERNAME_AND_OPTIONAL_EMAIL`', '`USERNAME_ONLY`', '`EMAIL_ONLY`', or '`NO_PASSWORD`' (default).\\n */\\nAccounts.ui.config = function(options) {\\n  // validate options keys\\n  const VALID_KEYS = [\\n    'passwordSignupFields',\\n    'requestPermissions',\\n    'requestOfflineToken',\\n    'forbidClientAccountCreation',\\n    'requireEmailVerification',\\n    'minimumPasswordLength',\\n    'loginPath',\\n    'signUpPath',\\n    'resetPasswordPath',\\n    'profilePath',\\n    'changePasswordPath',\\n    'homeRoutePath',\\n    'onSubmitHook',\\n    'onPreSignUpHook',\\n    'onPostSignUpHook',\\n    'onEnrollAccountHook',\\n    'onResetPasswordHook',\\n    'onVerifyEmailHook',\\n    'onSignedInHook',\\n    'onSignedOutHook',\\n    'validateField',\\n    'emailPattern'\\n  ];\\n\\n  Object.keys(options).forEach(function(key) {\\n    if (!VALID_KEYS.includes(key))\\n      throw new Error('Accounts.ui.config: Invalid key: ' + key);\\n  });\\n\\n  // Deal with `passwordSignupFields`\\n  if (options.passwordSignupFields) {\\n    if (\\n      [\\n        'USERNAME_AND_EMAIL',\\n        'USERNAME_AND_OPTIONAL_EMAIL',\\n        'USERNAME_ONLY',\\n        'EMAIL_ONLY',\\n        'EMAIL_ONLY_NO_PASSWORD',\\n        'USERNAME_AND_EMAIL_NO_PASSWORD'\\n      ].includes(options.passwordSignupFields)\\n    ) {\\n      Accounts.ui._options.passwordSignupFields = options.passwordSignupFields;\\n    } else {\\n      throw new Error(\\n        'Accounts.ui.config: Invalid option for `passwordSignupFields`: ' +\\n          options.passwordSignupFields\\n      );\\n    }\\n  }\\n\\n  // Deal with `requestPermissions`\\n  if (options.requestPermissions) {\\n    Object.keys(options.requestPermissions).forEach(service => {\\n      const scope = options.requestPermissions[service];\\n      if (Accounts.ui._options.requestPermissions[service]) {\\n        throw new Error(\\n          \\\"Accounts.ui.config: Can't set `requestPermissions` more than once for \\\" +\\n            service\\n        );\\n      } else if (!(scope instanceof Array)) {\\n        throw new Error(\\n          'Accounts.ui.config: Value for `requestPermissions` must be an array'\\n        );\\n      } else {\\n        Accounts.ui._options.requestPermissions[service] = scope;\\n      }\\n    });\\n  }\\n\\n  // Deal with `requestOfflineToken`\\n  if (options.requestOfflineToken) {\\n    Object.keys(options.requestOfflineToken).forEach(service => {\\n      const value = options.requestOfflineToken[service];\\n      if (service !== 'google')\\n        throw new Error(\\n          'Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.'\\n        );\\n\\n      if (Accounts.ui._options.requestOfflineToken[service]) {\\n        throw new Error(\\n          \\\"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \\\" +\\n            service\\n        );\\n      } else {\\n        Accounts.ui._options.requestOfflineToken[service] = value;\\n      }\\n    });\\n  }\\n\\n  // Deal with `forceApprovalPrompt`\\n  if (options.forceApprovalPrompt) {\\n    Object.keys(options.forceApprovalPrompt).forEach(service => {\\n      const value = options.forceApprovalPrompt[service];\\n      if (service !== 'google')\\n        throw new Error(\\n          'Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.'\\n        );\\n\\n      if (Accounts.ui._options.forceApprovalPrompt[service]) {\\n        throw new Error(\\n          \\\"Accounts.ui.config: Can't set `forceApprovalPrompt` more than once for \\\" +\\n            service\\n        );\\n      } else {\\n        Accounts.ui._options.forceApprovalPrompt[service] = value;\\n      }\\n    });\\n  }\\n\\n  // Deal with `requireEmailVerification`\\n  if (options.requireEmailVerification) {\\n    if (typeof options.requireEmailVerification != 'boolean') {\\n      throw new Error(\\n        `Accounts.ui.config: \\\"requireEmailVerification\\\" not a boolean`\\n      );\\n    } else {\\n      Accounts.ui._options.requireEmailVerification =\\n        options.requireEmailVerification;\\n    }\\n  }\\n\\n  // Deal with `minimumPasswordLength`\\n  if (options.minimumPasswordLength) {\\n    if (typeof options.minimumPasswordLength != 'number') {\\n      throw new Error(\\n        `Accounts.ui.config: \\\"minimumPasswordLength\\\" not a number`\\n      );\\n    } else {\\n      Accounts.ui._options.minimumPasswordLength =\\n        options.minimumPasswordLength;\\n    }\\n  }\\n\\n  // Deal with the hooks.\\n  for (let hook of ['onSubmitHook', 'onPreSignUpHook', 'onPostSignUpHook']) {\\n    if (options[hook]) {\\n      if (typeof options[hook] != 'function') {\\n        throw new Error(`Accounts.ui.config: \\\"${hook}\\\" not a function`);\\n      } else {\\n        Accounts.ui._options[hook] = options[hook];\\n      }\\n    }\\n  }\\n\\n  // Deal with pattern.\\n  for (let hook of ['emailPattern']) {\\n    if (options[hook]) {\\n      if (!(options[hook] instanceof RegExp)) {\\n        throw new Error(\\n          `Accounts.ui.config: \\\"${hook}\\\" not a Regular Expression`\\n        );\\n      } else {\\n        Accounts.ui._options[hook] = options[hook];\\n      }\\n    }\\n  }\\n\\n  // deal with the paths.\\n  for (let path of [\\n    'loginPath',\\n    'signUpPath',\\n    'resetPasswordPath',\\n    'profilePath',\\n    'changePasswordPath',\\n    'homeRoutePath'\\n  ]) {\\n    if (typeof options[path] !== 'undefined') {\\n      if (options[path] !== null && typeof options[path] !== 'string') {\\n        throw new Error(`Accounts.ui.config: ${path} is not a string or null`);\\n      } else {\\n        Accounts.ui._options[path] = options[path];\\n      }\\n    }\\n  }\\n\\n  // deal with redirect hooks.\\n  for (let hook of [\\n    'onEnrollAccountHook',\\n    'onResetPasswordHook',\\n    'onVerifyEmailHook',\\n    'onSignedInHook',\\n    'onSignedOutHook'\\n  ]) {\\n    if (options[hook]) {\\n      if (typeof options[hook] == 'function') {\\n        Accounts.ui._options[hook] = options[hook];\\n      } else if (typeof options[hook] == 'string') {\\n        Accounts.ui._options[hook] = () => redirect(options[hook]);\\n      } else {\\n        throw new Error(\\n          `Accounts.ui.config: \\\"${hook}\\\" not a function or an absolute or relative path`\\n        );\\n      }\\n    }\\n  }\\n};\\n\\nexport default Accounts;\\n\",\"let browserHistory;\\ntry {\\n  browserHistory = require('react-router').browserHistory;\\n} catch (e) {}\\nexport const loginButtonsSession = Accounts._loginButtonsSession;\\nexport const STATES = {\\n  SIGN_IN: Symbol('SIGN_IN'),\\n  SIGN_UP: Symbol('SIGN_UP'),\\n  PROFILE: Symbol('PROFILE'),\\n  PASSWORD_CHANGE: Symbol('PASSWORD_CHANGE'),\\n  PASSWORD_RESET: Symbol('PASSWORD_RESET'),\\n  ENROLL_ACCOUNT: Symbol('ENROLL_ACCOUNT')\\n};\\n\\nexport function getLoginServices() {\\n  // First look for OAuth services.\\n  const services = Package['accounts-oauth']\\n    ? Accounts.oauth.serviceNames()\\n    : [];\\n\\n  // Be equally kind to all login services. This also preserves\\n  // backwards-compatibility.\\n  services.sort();\\n\\n  return services.map(function(name) {\\n    return { name: name };\\n  });\\n}\\n// Export getLoginServices using old style globals for accounts-base which\\n// requires it.\\nthis.getLoginServices = getLoginServices;\\n\\nexport function hasPasswordService() {\\n  // First look for OAuth services.\\n  return !!Package['accounts-password'];\\n}\\n\\nexport function loginResultCallback(service, err) {\\n  if (!err) {\\n  } else if (err instanceof Accounts.LoginCancelledError) {\\n    // do nothing\\n  } else if (err instanceof ServiceConfiguration.ConfigError) {\\n  } else {\\n    //loginButtonsSession.errorMessage(err.reason || \\\"Unknown error\\\");\\n  }\\n\\n  if (Meteor.isClient) {\\n    if (typeof redirect === 'string') {\\n      window.location.href = '/';\\n    }\\n\\n    if (typeof service === 'function') {\\n      service();\\n    }\\n  }\\n}\\n\\nexport function passwordSignupFields() {\\n  return Accounts.ui._options.passwordSignupFields || 'EMAIL_ONLY_NO_PASSWORD';\\n}\\n\\nexport function validateEmail(email, showMessage, clearMessage) {\\n  if (\\n    passwordSignupFields() === 'USERNAME_AND_OPTIONAL_EMAIL' &&\\n    email === ''\\n  ) {\\n    return true;\\n  }\\n  if (Accounts.ui._options.emailPattern.test(email)) {\\n    return true;\\n  } else if (!email || email.length === 0) {\\n    showMessage('error.emailRequired', 'warning', false, 'email');\\n    return false;\\n  } else {\\n    showMessage('error.accounts.Invalid email', 'warning', false, 'email');\\n    return false;\\n  }\\n}\\n\\nexport function validatePassword(password = '', showMessage, clearMessage) {\\n  if (password.length >= Accounts.ui._options.minimumPasswordLength) {\\n    return true;\\n  } else {\\n    // const errMsg = T9n.get(\\\"error.minChar\\\").replace(/7/, Accounts.ui._options.minimumPasswordLength);\\n    const errMsg = 'error.minChar';\\n    showMessage(errMsg, 'warning', false, 'password');\\n    return false;\\n  }\\n}\\n\\nexport function validateUsername(\\n  username,\\n  showMessage,\\n  clearMessage,\\n  formState\\n) {\\n  if (username) {\\n    return true;\\n  } else {\\n    const fieldName =\\n      passwordSignupFields() === 'USERNAME_ONLY' || formState === STATES.SIGN_UP\\n        ? 'username'\\n        : 'usernameOrEmail';\\n    showMessage('error.usernameRequired', 'warning', false, fieldName);\\n    return false;\\n  }\\n}\\n\\nexport function redirect(redirect) {\\n  if (Meteor.isClient) {\\n    if (window.history) {\\n      // Run after all app specific redirects, i.e. to the login screen.\\n      Meteor.setTimeout(() => {\\n        if (Package['kadira:flow-router']) {\\n          Package['kadira:flow-router'].FlowRouter.go(redirect);\\n        } else if (Package['kadira:flow-router-ssr']) {\\n          Package['kadira:flow-router-ssr'].FlowRouter.go(redirect);\\n        } else if (browserHistory) {\\n          browserHistory.push(redirect);\\n        } else {\\n          window.history.pushState({}, 'redirect', redirect);\\n        }\\n      }, 100);\\n    }\\n  }\\n}\\n\\nexport function capitalize(string) {\\n  return string\\n    .replace(/\\\\-/, ' ')\\n    .split(' ')\\n    .map(word => {\\n      return word.charAt(0).toUpperCase() + word.slice(1);\\n    })\\n    .join(' ');\\n}\\n\",\"import { Accounts } from 'meteor/accounts-base';\\nimport { STATES, loginResultCallback, getLoginServices } from './helpers.js';\\n\\nconst VALID_KEYS = [\\n  'dropdownVisible',\\n\\n  // XXX consider replacing these with one key that has an enum for values.\\n  'inSignupFlow',\\n  'inForgotPasswordFlow',\\n  'inChangePasswordFlow',\\n  'inMessageOnlyFlow',\\n\\n  'errorMessage',\\n  'infoMessage',\\n\\n  // dialogs with messages (info and error)\\n  'resetPasswordToken',\\n  'enrollAccountToken',\\n  'justVerifiedEmail',\\n  'justResetPassword',\\n\\n  'configureLoginServiceDialogVisible',\\n  'configureLoginServiceDialogServiceName',\\n  'configureLoginServiceDialogSaveDisabled',\\n  'configureOnDesktopVisible'\\n];\\n\\nexport const validateKey = function(key) {\\n  if (!VALID_KEYS.includes(key))\\n    throw new Error('Invalid key in loginButtonsSession: ' + key);\\n};\\n\\nexport const KEY_PREFIX = 'Meteor.loginButtons.';\\n\\n// XXX This should probably be package scope rather than exported\\n// (there was even a comment to that effect here from before we had\\n// namespacing) but accounts-ui-viewer uses it, so leave it as is for\\n// now\\nAccounts._loginButtonsSession = {\\n  set: function(key, value) {\\n    validateKey(key);\\n    if (['errorMessage', 'infoMessage'].includes(key))\\n      throw new Error(\\n        \\\"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\\\"\\n      );\\n\\n    this._set(key, value);\\n  },\\n\\n  _set: function(key, value) {\\n    Session.set(KEY_PREFIX + key, value);\\n  },\\n\\n  get: function(key) {\\n    validateKey(key);\\n    return Session.get(KEY_PREFIX + key);\\n  }\\n};\\n\\nif (Meteor.isClient) {\\n  // In the login redirect flow, we'll have the result of the login\\n  // attempt at page load time when we're redirected back to the\\n  // application.  Register a callback to update the UI (i.e. to close\\n  // the dialog on a successful login or display the error on a failed\\n  // login).\\n  //\\n  Accounts.onPageLoadLogin(function(attemptInfo) {\\n    // Ignore if we have a left over login attempt for a service that is no longer registered.\\n    if (\\n      getLoginServices()\\n        .map(({ name }) => name)\\n        .includes(attemptInfo.type)\\n    )\\n      loginResultCallback(attemptInfo.type, attemptInfo.error);\\n  });\\n\\n  let doneCallback;\\n\\n  Accounts.onResetPasswordLink(function(token, done) {\\n    Accounts._loginButtonsSession.set('resetPasswordToken', token);\\n    Session.set(KEY_PREFIX + 'state', 'resetPasswordToken');\\n    doneCallback = done;\\n\\n    Accounts.ui._options.onResetPasswordHook();\\n  });\\n\\n  Accounts.onEnrollmentLink(function(token, done) {\\n    Accounts._loginButtonsSession.set('enrollAccountToken', token);\\n    Session.set(KEY_PREFIX + 'state', 'enrollAccountToken');\\n    doneCallback = done;\\n\\n    Accounts.ui._options.onEnrollAccountHook();\\n  });\\n\\n  Accounts.onEmailVerificationLink(function(token, done) {\\n    Accounts.verifyEmail(token, function(error) {\\n      if (!error) {\\n        Accounts._loginButtonsSession.set('justVerifiedEmail', true);\\n        Session.set(KEY_PREFIX + 'state', 'justVerifiedEmail');\\n        Accounts.ui._options.onSignedInHook();\\n      } else {\\n        Accounts.ui._options.onVerifyEmailHook();\\n      }\\n\\n      done();\\n    });\\n  });\\n}\\n\",\"/**\\n * @summary Request a forgot password email.\\n * @locus Client\\n * @param {Object} options\\n * @param {String} options.email The email address to send a password reset link.\\n * @param {Function} [callback] Optional callback. Called with no arguments on success, or with a single `Error` argument on failure.\\n */\\nAccounts.loginWithoutPassword = function(options, callback) {\\n  if (!options.email) throw new Error('Must pass options.email');\\n  Accounts.connection.call('loginWithoutPassword', options, callback);\\n};\\n\",\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { Accounts } from 'meteor/accounts-base';\\n\\nlet Link;\\ntry {\\n  Link = require('react-router').Link;\\n} catch (e) {}\\n\\nexport class Button extends React.Component {\\n  render() {\\n    const {\\n      label,\\n      href = null,\\n      type,\\n      disabled = false,\\n      className,\\n      onClick\\n    } = this.props;\\n    if (type == 'link') {\\n      // Support React Router.\\n      if (Link && href) {\\n        return (\\n          <Link to={href} className={className}>\\n            {label}\\n          </Link>\\n        );\\n      } else {\\n        return (\\n          <a href={href} className={className} onClick={onClick}>\\n            {label}\\n          </a>\\n        );\\n      }\\n    }\\n    return (\\n      <button\\n        className={className}\\n        type={type}\\n        disabled={disabled}\\n        onClick={onClick}\\n      >\\n        {label}\\n      </button>\\n    );\\n  }\\n}\\n\\nButton.propTypes = {\\n  onClick: PropTypes.func\\n};\\n\\nAccounts.ui.Button = Button;\\n\",\"import React from 'react';\\nimport './Button.jsx';\\nimport { Accounts } from 'meteor/accounts-base';\\n\\nexport class Buttons extends React.Component {\\n  render() {\\n    let { buttons = {}, className = 'buttons' } = this.props;\\n    return (\\n      <div className={className}>\\n        {Object.keys(buttons).map((id, i) => (\\n          <Accounts.ui.Button {...buttons[id]} key={i} />\\n        ))}\\n      </div>\\n    );\\n  }\\n}\\n\\nAccounts.ui.Buttons = Buttons;\\n\",\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { Accounts } from 'meteor/accounts-base';\\n\\nexport class Field extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      mount: true\\n    };\\n  }\\n\\n  triggerUpdate() {\\n    // Trigger an onChange on inital load, to support browser prefilled values.\\n    const { onChange } = this.props;\\n    if (this.input && onChange) {\\n      onChange({ target: { value: this.input.value } });\\n    }\\n  }\\n\\n  componentDidMount() {\\n    this.triggerUpdate();\\n  }\\n\\n  componentDidUpdate(prevProps) {\\n    // Re-mount component so that we don't expose browser prefilled passwords if the component was\\n    // a password before and now something else.\\n    if (prevProps.id !== this.props.id) {\\n      this.setState({ mount: false });\\n    } else if (!this.state.mount) {\\n      this.setState({ mount: true });\\n      this.triggerUpdate();\\n    }\\n  }\\n\\n  render() {\\n    const {\\n      id,\\n      hint,\\n      label,\\n      type = 'text',\\n      onChange,\\n      required = false,\\n      className = 'field',\\n      defaultValue = '',\\n      message\\n    } = this.props;\\n    const { mount = true } = this.state;\\n    if (type == 'notice') {\\n      return <div className={className}>{label}</div>;\\n    }\\n    return mount ? (\\n      <div className={className}>\\n        <label htmlFor={id}>{label}</label>\\n        <input\\n          id={id}\\n          ref={ref => (this.input = ref)}\\n          type={type}\\n          onChange={onChange}\\n          placeholder={hint}\\n          defaultValue={defaultValue}\\n        />\\n        {message && (\\n          <span className={['message', message.type].join(' ').trim()}>\\n            {message.message}\\n          </span>\\n        )}\\n      </div>\\n    ) : null;\\n  }\\n}\\n\\nField.propTypes = {\\n  onChange: PropTypes.func\\n};\\n\\nAccounts.ui.Field = Field;\\n\",\"import React from 'react';\\nimport { Accounts } from 'meteor/accounts-base';\\nimport './Field.jsx';\\n\\nexport class Fields extends React.Component {\\n  render() {\\n    let { fields = {}, className = 'fields' } = this.props;\\n    return (\\n      <div className={className}>\\n        {Object.keys(fields).map((id, i) => (\\n          <Accounts.ui.Field {...fields[id]} key={i} />\\n        ))}\\n      </div>\\n    );\\n  }\\n}\\n\\nAccounts.ui.Fields = Fields;\\n\",\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport ReactDOM from 'react-dom';\\nimport { Accounts } from 'meteor/accounts-base';\\n\\nimport './Fields.jsx';\\nimport './Buttons.jsx';\\nimport './FormMessage.jsx';\\nimport './PasswordOrService.jsx';\\nimport './SocialButtons.jsx';\\nimport './FormMessages.jsx';\\n\\nexport class Form extends React.Component {\\n  componentDidMount() {\\n    let form = this.form;\\n    if (form) {\\n      form.addEventListener('submit', e => {\\n        e.preventDefault();\\n      });\\n    }\\n  }\\n\\n  render() {\\n    const {\\n      hasPasswordService,\\n      oauthServices,\\n      fields,\\n      buttons,\\n      error,\\n      messages,\\n      translate,\\n      ready = true,\\n      className\\n    } = this.props;\\n    return (\\n      <form\\n        ref={ref => (this.form = ref)}\\n        className={[className, ready ? 'ready' : null].join(' ')}\\n        className=\\\"accounts-ui\\\"\\n        noValidate\\n      >\\n        <Accounts.ui.Fields fields={fields} />\\n        <Accounts.ui.Buttons buttons={buttons} />\\n        <Accounts.ui.PasswordOrService\\n          oauthServices={oauthServices}\\n          translate={translate}\\n        />\\n        <Accounts.ui.SocialButtons oauthServices={oauthServices} />\\n        <Accounts.ui.FormMessages messages={messages} />\\n      </form>\\n    );\\n  }\\n}\\n\\nForm.propTypes = {\\n  oauthServices: PropTypes.object,\\n  fields: PropTypes.object.isRequired,\\n  buttons: PropTypes.object.isRequired,\\n  translate: PropTypes.func.isRequired,\\n  error: PropTypes.string,\\n  ready: PropTypes.bool\\n};\\n\\nAccounts.ui.Form = Form;\\n\",\"import React from 'react';\\nimport { Accounts } from 'meteor/accounts-base';\\n\\nfunction isObject(obj) {\\n  return obj === Object(obj);\\n}\\n\\nexport class FormMessage extends React.Component {\\n  render() {\\n    let {\\n      message,\\n      type,\\n      className = 'message',\\n      style = {},\\n      deprecated\\n    } = this.props;\\n    // XXX Check for deprecations.\\n    if (deprecated) {\\n      // Found backwords compatibility issue.\\n      console.warn(\\n        'You are overriding Accounts.ui.Form and using FormMessage, the use of FormMessage in Form has been depreacted in v1.2.11, update your implementation to use FormMessages: https://github.com/studiointeract/accounts-ui/#deprecations'\\n      );\\n    }\\n    message = isObject(message) ? message.message : message; // If message is object, then try to get message from it\\n    return message ? (\\n      <div style={style} className={[className, type].join(' ')}>\\n        {message}\\n      </div>\\n    ) : null;\\n  }\\n}\\n\\nAccounts.ui.FormMessage = FormMessage;\\n\",\"import React, { Component } from 'react';\\nimport { Accounts } from 'meteor/accounts-base';\\n\\nexport class FormMessages extends Component {\\n  render() {\\n    const { messages = [], className = 'messages', style = {} } = this.props;\\n    return (\\n      messages.length > 0 && (\\n        <div className=\\\"messages\\\">\\n          {messages\\n            .filter(message => !('field' in message))\\n            .map(({ message, type }, i) => (\\n              <Accounts.ui.FormMessage message={message} type={type} key={i} />\\n            ))}\\n        </div>\\n      )\\n    );\\n  }\\n}\\n\\nAccounts.ui.FormMessages = FormMessages;\\n\",\"import React, { Component } from 'react';\\nimport PropTypes from 'prop-types';\\nimport ReactDOM from 'react-dom';\\nimport { withTracker } from 'meteor/react-meteor-data';\\nimport { Accounts } from 'meteor/accounts-base';\\nimport { T9n } from 'meteor-accounts-t9n';\\nimport { KEY_PREFIX } from '../../login_session.js';\\nimport './Form.jsx';\\n\\nimport {\\n  STATES,\\n  passwordSignupFields,\\n  validateEmail,\\n  validatePassword,\\n  validateUsername,\\n  loginResultCallback,\\n  getLoginServices,\\n  hasPasswordService,\\n  capitalize\\n} from '../../helpers.js';\\n\\nfunction indexBy(array, key) {\\n  const result = {};\\n  array.forEach(function(obj) {\\n    result[obj[key]] = obj;\\n  });\\n  return result;\\n}\\n\\nclass LoginForm extends Component {\\n  constructor(props) {\\n    super(props);\\n    let {\\n      formState,\\n      loginPath,\\n      signUpPath,\\n      resetPasswordPath,\\n      profilePath,\\n      changePasswordPath\\n    } = props;\\n\\n    if (formState === STATES.SIGN_IN && Package['accounts-password']) {\\n      console.warn(\\n        'Do not force the state to SIGN_IN on Accounts.ui.LoginForm, it will make it impossible to reset password in your app, this state is also the default state if logged out, so no need to force it.'\\n      );\\n    }\\n\\n    // Set inital state.\\n    this.state = {\\n      messages: [],\\n      waiting: true,\\n      formState: formState\\n        ? formState\\n        : Accounts.user()\\n          ? STATES.PROFILE\\n          : STATES.SIGN_IN,\\n      onSubmitHook: props.onSubmitHook || Accounts.ui._options.onSubmitHook,\\n      onSignedInHook:\\n        props.onSignedInHook || Accounts.ui._options.onSignedInHook,\\n      onSignedOutHook:\\n        props.onSignedOutHook || Accounts.ui._options.onSignedOutHook,\\n      onPreSignUpHook:\\n        props.onPreSignUpHook || Accounts.ui._options.onPreSignUpHook,\\n      onPostSignUpHook:\\n        props.onPostSignUpHook || Accounts.ui._options.onPostSignUpHook\\n    };\\n    this.translate = this.translate.bind(this);\\n  }\\n\\n  componentDidMount() {\\n    this.setState(prevState => ({ waiting: false, ready: true }));\\n    let changeState = Session.get(KEY_PREFIX + 'state');\\n    switch (changeState) {\\n      case 'enrollAccountToken':\\n        this.setState(prevState => ({\\n          formState: STATES.ENROLL_ACCOUNT\\n        }));\\n        Session.set(KEY_PREFIX + 'state', null);\\n        break;\\n      case 'resetPasswordToken':\\n        this.setState(prevState => ({\\n          formState: STATES.PASSWORD_CHANGE\\n        }));\\n        Session.set(KEY_PREFIX + 'state', null);\\n        break;\\n\\n      case 'justVerifiedEmail':\\n        this.setState(prevState => ({\\n          formState: STATES.PROFILE\\n        }));\\n        Session.set(KEY_PREFIX + 'state', null);\\n        break;\\n    }\\n\\n    // Add default field values once the form did mount on the client\\n    this.setState(prevState => ({\\n      ...this.getDefaultFieldValues()\\n    }));\\n  }\\n\\n  componentWillReceiveProps(nextProps, nextContext) {\\n    if (nextProps.formState && nextProps.formState !== this.state.formState) {\\n      this.setState({\\n        formState: nextProps.formState,\\n        ...this.getDefaultFieldValues()\\n      });\\n    }\\n  }\\n\\n  componentDidUpdate(prevProps, prevState) {\\n    if (!prevProps.user !== !this.props.user) {\\n      this.setState({\\n        formState: this.props.user ? STATES.PROFILE : STATES.SIGN_IN\\n      });\\n    }\\n  }\\n\\n  translate(text) {\\n    // if (this.props.t) {\\n    //   return this.props.t(text);\\n    // }\\n    return T9n.get(text);\\n  }\\n\\n  validateField(field, value) {\\n    const { formState } = this.state;\\n    switch (field) {\\n      case 'email':\\n        return validateEmail(\\n          value,\\n          this.showMessage.bind(this),\\n          this.clearMessage.bind(this)\\n        );\\n      case 'password':\\n        return validatePassword(\\n          value,\\n          this.showMessage.bind(this),\\n          this.clearMessage.bind(this)\\n        );\\n      case 'username':\\n        return validateUsername(\\n          value,\\n          this.showMessage.bind(this),\\n          this.clearMessage.bind(this),\\n          formState\\n        );\\n    }\\n  }\\n\\n  getUsernameOrEmailField() {\\n    return {\\n      id: 'usernameOrEmail',\\n      hint: this.translate('enterUsernameOrEmail'),\\n      label: this.translate('usernameOrEmail'),\\n      required: true,\\n      defaultValue: this.state.username || '',\\n      onChange: this.handleChange.bind(this, 'usernameOrEmail'),\\n      message: this.getMessageForField('usernameOrEmail')\\n    };\\n  }\\n\\n  getUsernameField() {\\n    return {\\n      id: 'username',\\n      hint: this.translate('enterUsername'),\\n      label: this.translate('username'),\\n      required: true,\\n      defaultValue: this.state.username || '',\\n      onChange: this.handleChange.bind(this, 'username'),\\n      message: this.getMessageForField('username')\\n    };\\n  }\\n\\n  getEmailField() {\\n    return {\\n      id: 'email',\\n      hint: this.translate('enterEmail'),\\n      label: this.translate('email'),\\n      type: 'email',\\n      required: true,\\n      defaultValue: this.state.email || '',\\n      onChange: this.handleChange.bind(this, 'email'),\\n      message: this.getMessageForField('email')\\n    };\\n  }\\n\\n  getPasswordField() {\\n    return {\\n      id: 'password',\\n      hint: this.translate('enterPassword'),\\n      label: this.translate('password'),\\n      type: 'password',\\n      required: true,\\n      defaultValue: this.state.password || '',\\n      onChange: this.handleChange.bind(this, 'password'),\\n      message: this.getMessageForField('password')\\n    };\\n  }\\n\\n  getSetPasswordField() {\\n    return {\\n      id: 'newPassword',\\n      hint: this.translate('enterPassword'),\\n      label: this.translate('choosePassword'),\\n      type: 'password',\\n      required: true,\\n      onChange: this.handleChange.bind(this, 'newPassword')\\n    };\\n  }\\n\\n  getNewPasswordField() {\\n    return {\\n      id: 'newPassword',\\n      hint: this.translate('enterNewPassword'),\\n      label: this.translate('newPassword'),\\n      type: 'password',\\n      required: true,\\n      onChange: this.handleChange.bind(this, 'newPassword'),\\n      message: this.getMessageForField('newPassword')\\n    };\\n  }\\n\\n  handleChange(field, evt) {\\n    let value = evt.target.value;\\n    switch (field) {\\n      case 'password':\\n        break;\\n      default:\\n        value = value.trim();\\n        break;\\n    }\\n    this.setState({ [field]: value });\\n    this.setDefaultFieldValues({ [field]: value });\\n  }\\n\\n  fields() {\\n    const loginFields = [];\\n    const { formState } = this.state;\\n\\n    if (!hasPasswordService() && getLoginServices().length == 0) {\\n      loginFields.push({\\n        label: 'No login service added, i.e. accounts-password',\\n        type: 'notice'\\n      });\\n    }\\n\\n    if (hasPasswordService() && formState == STATES.SIGN_IN) {\\n      if (\\n        [\\n          'USERNAME_AND_EMAIL',\\n          'USERNAME_AND_OPTIONAL_EMAIL',\\n          'USERNAME_AND_EMAIL_NO_PASSWORD'\\n        ].includes(passwordSignupFields())\\n      ) {\\n        loginFields.push(this.getUsernameOrEmailField());\\n      }\\n\\n      if (passwordSignupFields() === 'USERNAME_ONLY') {\\n        loginFields.push(this.getUsernameField());\\n      }\\n\\n      if (\\n        ['EMAIL_ONLY', 'EMAIL_ONLY_NO_PASSWORD'].includes(\\n          passwordSignupFields()\\n        )\\n      ) {\\n        loginFields.push(this.getEmailField());\\n      }\\n\\n      if (\\n        !['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\\n          passwordSignupFields()\\n        )\\n      ) {\\n        loginFields.push(this.getPasswordField());\\n      }\\n    }\\n\\n    if (hasPasswordService() && formState == STATES.SIGN_UP) {\\n      if (\\n        [\\n          'USERNAME_AND_EMAIL',\\n          'USERNAME_AND_OPTIONAL_EMAIL',\\n          'USERNAME_ONLY',\\n          'USERNAME_AND_EMAIL_NO_PASSWORD'\\n        ].includes(passwordSignupFields())\\n      ) {\\n        loginFields.push(this.getUsernameField());\\n      }\\n\\n      if (\\n        [\\n          'USERNAME_AND_EMAIL',\\n          'EMAIL_ONLY',\\n          'EMAIL_ONLY_NO_PASSWORD',\\n          'USERNAME_AND_EMAIL_NO_PASSWORD'\\n        ].includes(passwordSignupFields())\\n      ) {\\n        loginFields.push(this.getEmailField());\\n      }\\n\\n      if (['USERNAME_AND_OPTIONAL_EMAIL'].includes(passwordSignupFields())) {\\n        loginFields.push(\\n          Object.assign(this.getEmailField(), { required: false })\\n        );\\n      }\\n\\n      if (\\n        !['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\\n          passwordSignupFields()\\n        )\\n      ) {\\n        loginFields.push(this.getPasswordField());\\n      }\\n    }\\n\\n    if (formState == STATES.PASSWORD_RESET) {\\n      loginFields.push(this.getEmailField());\\n    }\\n\\n    if (this.showPasswordChangeForm()) {\\n      if (\\n        Meteor.isClient &&\\n        !Accounts._loginButtonsSession.get('resetPasswordToken')\\n      ) {\\n        loginFields.push(this.getPasswordField());\\n      }\\n      loginFields.push(this.getNewPasswordField());\\n    }\\n\\n    if (this.showEnrollAccountForm()) {\\n      loginFields.push(this.getSetPasswordField());\\n    }\\n    return indexBy(loginFields, 'id');\\n  }\\n\\n  buttons() {\\n    const {\\n      loginPath = Accounts.ui._options.loginPath,\\n      signUpPath = Accounts.ui._options.signUpPath,\\n      resetPasswordPath = Accounts.ui._options.resetPasswordPath,\\n      changePasswordPath = Accounts.ui._options.changePasswordPath,\\n      profilePath = Accounts.ui._options.profilePath\\n    } = this.props;\\n    const { user } = this.props;\\n    const { formState, waiting } = this.state;\\n    let loginButtons = [];\\n\\n    if (user && formState == STATES.PROFILE) {\\n      loginButtons.push({\\n        id: 'signOut',\\n        label: this.translate('signOut'),\\n        disabled: waiting,\\n        onClick: this.signOut.bind(this)\\n      });\\n    }\\n\\n    if (this.showCreateAccountLink()) {\\n      loginButtons.push({\\n        id: 'switchToSignUp',\\n        label: this.translate('signUp'),\\n        type: 'link',\\n        href: signUpPath,\\n        onClick: this.switchToSignUp.bind(this)\\n      });\\n    }\\n\\n    if (formState == STATES.SIGN_UP || formState == STATES.PASSWORD_RESET) {\\n      loginButtons.push({\\n        id: 'switchToSignIn',\\n        label: this.translate('signIn'),\\n        type: 'link',\\n        href: loginPath,\\n        onClick: this.switchToSignIn.bind(this)\\n      });\\n    }\\n\\n    if (this.showForgotPasswordLink()) {\\n      loginButtons.push({\\n        id: 'switchToPasswordReset',\\n        label: this.translate('forgotPassword'),\\n        type: 'link',\\n        href: resetPasswordPath,\\n        onClick: this.switchToPasswordReset.bind(this)\\n      });\\n    }\\n\\n    if (\\n      user &&\\n      !['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\\n        passwordSignupFields()\\n      ) &&\\n      formState == STATES.PROFILE &&\\n      (user.services && 'password' in user.services)\\n    ) {\\n      loginButtons.push({\\n        id: 'switchToChangePassword',\\n        label: this.translate('changePassword'),\\n        type: 'link',\\n        href: changePasswordPath,\\n        onClick: this.switchToChangePassword.bind(this)\\n      });\\n    }\\n\\n    if (formState == STATES.SIGN_UP) {\\n      loginButtons.push({\\n        id: 'signUp',\\n        label: this.translate('signUp'),\\n        type: hasPasswordService() ? 'submit' : 'link',\\n        className: 'active',\\n        disabled: waiting,\\n        onClick: hasPasswordService() ? this.signUp.bind(this, {}) : null\\n      });\\n    }\\n\\n    if (this.showSignInLink()) {\\n      loginButtons.push({\\n        id: 'signIn',\\n        label: this.translate('signIn'),\\n        type: hasPasswordService() ? 'submit' : 'link',\\n        className: 'active',\\n        disabled: waiting,\\n        onClick: hasPasswordService() ? this.signIn.bind(this) : null\\n      });\\n    }\\n\\n    if (formState == STATES.PASSWORD_RESET) {\\n      loginButtons.push({\\n        id: 'emailResetLink',\\n        label: this.translate('resetYourPassword'),\\n        type: 'submit',\\n        disabled: waiting,\\n        onClick: this.passwordReset.bind(this)\\n      });\\n    }\\n\\n    if (this.showPasswordChangeForm() || this.showEnrollAccountForm()) {\\n      loginButtons.push({\\n        id: 'changePassword',\\n        label: this.showPasswordChangeForm()\\n          ? this.translate('changePassword')\\n          : this.translate('setPassword'),\\n        type: 'submit',\\n        disabled: waiting,\\n        onClick: this.passwordChange.bind(this)\\n      });\\n\\n      if (Accounts.user()) {\\n        loginButtons.push({\\n          id: 'switchToSignOut',\\n          label: this.translate('cancel'),\\n          type: 'link',\\n          href: profilePath,\\n          onClick: this.switchToSignOut.bind(this)\\n        });\\n      } else {\\n        loginButtons.push({\\n          id: 'cancelResetPassword',\\n          label: this.translate('cancel'),\\n          type: 'link',\\n          onClick: this.cancelResetPassword.bind(this)\\n        });\\n      }\\n    }\\n\\n    // Sort the button array so that the submit button always comes first, and\\n    // buttons should also come before links.\\n    loginButtons.sort((a, b) => {\\n      return (\\n        (b.type == 'submit' && a.type != undefined) -\\n        (a.type == 'submit' && b.type != undefined)\\n      );\\n    });\\n\\n    return indexBy(loginButtons, 'id');\\n  }\\n\\n  showSignInLink() {\\n    return (\\n      this.state.formState == STATES.SIGN_IN && Package['accounts-password']\\n    );\\n  }\\n\\n  showPasswordChangeForm() {\\n    return (\\n      Package['accounts-password'] &&\\n      this.state.formState == STATES.PASSWORD_CHANGE\\n    );\\n  }\\n\\n  showEnrollAccountForm() {\\n    return (\\n      Package['accounts-password'] &&\\n      this.state.formState == STATES.ENROLL_ACCOUNT\\n    );\\n  }\\n\\n  showCreateAccountLink() {\\n    return (\\n      this.state.formState == STATES.SIGN_IN &&\\n      !Accounts._options.forbidClientAccountCreation &&\\n      Package['accounts-password']\\n    );\\n  }\\n\\n  showForgotPasswordLink() {\\n    return (\\n      !this.props.user &&\\n      this.state.formState == STATES.SIGN_IN &&\\n      [\\n        'USERNAME_AND_EMAIL',\\n        'USERNAME_AND_OPTIONAL_EMAIL',\\n        'EMAIL_ONLY'\\n      ].includes(passwordSignupFields())\\n    );\\n  }\\n\\n  /**\\n   * Helper to store field values while using the form.\\n   */\\n  setDefaultFieldValues(defaults) {\\n    if (typeof defaults !== 'object') {\\n      throw new Error(\\n        'Argument to setDefaultFieldValues is not of type object'\\n      );\\n    } else if (typeof localStorage !== 'undefined' && localStorage) {\\n      localStorage.setItem(\\n        'accounts_ui',\\n        JSON.stringify({\\n          passwordSignupFields: passwordSignupFields(),\\n          ...this.getDefaultFieldValues(),\\n          ...defaults\\n        })\\n      );\\n    }\\n  }\\n\\n  /**\\n   * Helper to get field values when switching states in the form.\\n   */\\n  getDefaultFieldValues() {\\n    if (typeof localStorage !== 'undefined' && localStorage) {\\n      const defaultFieldValues = JSON.parse(\\n        localStorage.getItem('accounts_ui') || null\\n      );\\n      if (\\n        defaultFieldValues &&\\n        defaultFieldValues.passwordSignupFields === passwordSignupFields()\\n      ) {\\n        return defaultFieldValues;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Helper to clear field values when signing in, up or out.\\n   */\\n  clearDefaultFieldValues() {\\n    if (typeof localStorage !== 'undefined' && localStorage) {\\n      localStorage.removeItem('accounts_ui');\\n    }\\n  }\\n\\n  switchToSignUp(event) {\\n    event.preventDefault();\\n    this.setState({\\n      formState: STATES.SIGN_UP,\\n      ...this.getDefaultFieldValues()\\n    });\\n    this.clearMessages();\\n  }\\n\\n  switchToSignIn(event) {\\n    event.preventDefault();\\n    this.setState({\\n      formState: STATES.SIGN_IN,\\n      ...this.getDefaultFieldValues()\\n    });\\n    this.clearMessages();\\n  }\\n\\n  switchToPasswordReset(event) {\\n    event.preventDefault();\\n    this.setState({\\n      formState: STATES.PASSWORD_RESET,\\n      ...this.getDefaultFieldValues()\\n    });\\n    this.clearMessages();\\n  }\\n\\n  switchToChangePassword(event) {\\n    event.preventDefault();\\n    this.setState({\\n      formState: STATES.PASSWORD_CHANGE,\\n      ...this.getDefaultFieldValues()\\n    });\\n    this.clearMessages();\\n  }\\n\\n  switchToSignOut(event) {\\n    event.preventDefault();\\n    this.setState({\\n      formState: STATES.PROFILE\\n    });\\n    this.clearMessages();\\n  }\\n\\n  cancelResetPassword(event) {\\n    event.preventDefault();\\n    Accounts._loginButtonsSession.set('resetPasswordToken', null);\\n    this.setState({\\n      formState: STATES.SIGN_IN,\\n      messages: []\\n    });\\n  }\\n\\n  signOut() {\\n    Meteor.logout(() => {\\n      this.setState({\\n        formState: STATES.SIGN_IN,\\n        password: null\\n      });\\n      this.state.onSignedOutHook();\\n      this.clearMessages();\\n      this.clearDefaultFieldValues();\\n    });\\n  }\\n\\n  signIn() {\\n    const {\\n      username = null,\\n      email = null,\\n      usernameOrEmail = null,\\n      password,\\n      formState,\\n      onSubmitHook\\n    } = this.state;\\n    let error = false;\\n    let loginSelector;\\n    this.clearMessages();\\n\\n    if (usernameOrEmail !== null) {\\n      if (!this.validateField('username', usernameOrEmail)) {\\n        if (this.state.formState == STATES.SIGN_UP) {\\n          this.state.onSubmitHook(\\n            'error.accounts.usernameRequired',\\n            this.state.formState\\n          );\\n        }\\n        error = true;\\n      } else {\\n        if (\\n          ['USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())\\n        ) {\\n          this.loginWithoutPassword();\\n          return;\\n        } else {\\n          loginSelector = usernameOrEmail;\\n        }\\n      }\\n    } else if (username !== null) {\\n      if (!this.validateField('username', username)) {\\n        if (this.state.formState == STATES.SIGN_UP) {\\n          this.state.onSubmitHook(\\n            'error.accounts.usernameRequired',\\n            this.state.formState\\n          );\\n        }\\n        error = true;\\n      } else {\\n        loginSelector = { username: username };\\n      }\\n    } else if (usernameOrEmail == null) {\\n      if (!this.validateField('email', email)) {\\n        error = true;\\n      } else {\\n        if (['EMAIL_ONLY_NO_PASSWORD'].includes(passwordSignupFields())) {\\n          this.loginWithoutPassword();\\n          error = true;\\n        } else {\\n          loginSelector = { email };\\n        }\\n      }\\n    }\\n    if (\\n      !['EMAIL_ONLY_NO_PASSWORD'].includes(passwordSignupFields()) &&\\n      !this.validateField('password', password)\\n    ) {\\n      error = true;\\n    }\\n\\n    if (!error) {\\n      Meteor.loginWithPassword(loginSelector, password, (error, result) => {\\n        onSubmitHook(error, formState);\\n        if (error) {\\n          this.showMessage(\\n            `error.accounts.${error.reason}` || 'unknown_error',\\n            'error'\\n          );\\n        } else {\\n          loginResultCallback(() => this.state.onSignedInHook());\\n          this.setState({\\n            formState: STATES.PROFILE,\\n            password: null\\n          });\\n          this.clearDefaultFieldValues();\\n        }\\n      });\\n    }\\n  }\\n\\n  oauthButtons() {\\n    const { formState, waiting } = this.state;\\n    let oauthButtons = [];\\n    if (formState == STATES.SIGN_IN || formState == STATES.SIGN_UP) {\\n      if (Accounts.oauth) {\\n        Accounts.oauth.serviceNames().map(service => {\\n          oauthButtons.push({\\n            id: service,\\n            label: capitalize(service),\\n            disabled: waiting,\\n            type: 'button',\\n            className: `btn-${service} ${service}`,\\n            onClick: this.oauthSignIn.bind(this, service)\\n          });\\n        });\\n      }\\n    }\\n    return indexBy(oauthButtons, 'id');\\n  }\\n\\n  oauthSignIn(serviceName) {\\n    const { user } = this.props;\\n    const { formState, waiting, onSubmitHook } = this.state;\\n    //Thanks Josh Owens for this one.\\n    function capitalService() {\\n      return serviceName.charAt(0).toUpperCase() + serviceName.slice(1);\\n    }\\n\\n    if (serviceName === 'meteor-developer') {\\n      serviceName = 'meteorDeveloperAccount';\\n    }\\n\\n    const loginWithService = Meteor['loginWith' + capitalService()];\\n\\n    let options = {}; // use default scope unless specified\\n    if (Accounts.ui._options.requestPermissions[serviceName])\\n      options.requestPermissions =\\n        Accounts.ui._options.requestPermissions[serviceName];\\n    if (Accounts.ui._options.requestOfflineToken[serviceName])\\n      options.requestOfflineToken =\\n        Accounts.ui._options.requestOfflineToken[serviceName];\\n    if (Accounts.ui._options.forceApprovalPrompt[serviceName])\\n      options.forceApprovalPrompt =\\n        Accounts.ui._options.forceApprovalPrompt[serviceName];\\n\\n    this.clearMessages();\\n    const self = this;\\n    loginWithService(options, error => {\\n      onSubmitHook(error, formState);\\n      if (error) {\\n        this.showMessage(`error.accounts.${error.reason}` || 'unknown_error');\\n      } else {\\n        this.setState({ formState: STATES.PROFILE });\\n        this.clearDefaultFieldValues();\\n        loginResultCallback(() => {\\n          Meteor.setTimeout(() => this.state.onSignedInHook(), 100);\\n        });\\n      }\\n    });\\n  }\\n\\n  signUp(options = {}) {\\n    const {\\n      username = null,\\n      email = null,\\n      usernameOrEmail = null,\\n      password,\\n      formState,\\n      onSubmitHook\\n    } = this.state;\\n    let error = false;\\n    this.clearMessages();\\n\\n    if (username !== null) {\\n      if (!this.validateField('username', username)) {\\n        if (this.state.formState == STATES.SIGN_UP) {\\n          this.state.onSubmitHook(\\n            'error.accounts.usernameRequired',\\n            this.state.formState\\n          );\\n        }\\n        error = true;\\n      } else {\\n        options.username = username;\\n      }\\n    } else {\\n      if (\\n        ['USERNAME_AND_EMAIL', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\\n          passwordSignupFields()\\n        ) &&\\n        !this.validateField('username', username)\\n      ) {\\n        if (this.state.formState == STATES.SIGN_UP) {\\n          this.state.onSubmitHook(\\n            'error.accounts.usernameRequired',\\n            this.state.formState\\n          );\\n        }\\n        error = true;\\n      }\\n    }\\n\\n    if (!this.validateField('email', email)) {\\n      error = true;\\n    } else {\\n      options.email = email;\\n    }\\n\\n    if (\\n      ['EMAIL_ONLY_NO_PASSWORD', 'USERNAME_AND_EMAIL_NO_PASSWORD'].includes(\\n        passwordSignupFields()\\n      )\\n    ) {\\n      // Generate a random password.\\n      options.password = Meteor.uuid();\\n    } else if (!this.validateField('password', password)) {\\n      onSubmitHook('Invalid password', formState);\\n      error = true;\\n    } else {\\n      options.password = password;\\n    }\\n\\n    const SignUp = function(_options) {\\n      Accounts.createUser(_options, error => {\\n        if (error) {\\n          this.showMessage(\\n            `error.accounts.${error.reason}` || 'unknown_error',\\n            'error'\\n          );\\n          if (this.translate(`error.accounts.${error.reason}`)) {\\n            onSubmitHook(`error.accounts.${error.reason}`, formState);\\n          } else {\\n            onSubmitHook('unknown_error', formState);\\n          }\\n        } else {\\n          onSubmitHook(null, formState);\\n          this.setState({ formState: STATES.PROFILE, password: null });\\n          let user = Accounts.user();\\n          loginResultCallback(\\n            this.state.onPostSignUpHook.bind(this, _options, user)\\n          );\\n          this.clearDefaultFieldValues();\\n        }\\n\\n        this.setState({ waiting: false });\\n      });\\n    };\\n\\n    if (!error) {\\n      this.setState({ waiting: true });\\n      // Allow for Promises to return.\\n      let promise = this.state.onPreSignUpHook(options);\\n      if (promise instanceof Promise) {\\n        promise.then(SignUp.bind(this, options));\\n      } else {\\n        SignUp(options);\\n      }\\n    }\\n  }\\n\\n  loginWithoutPassword() {\\n    const {\\n      email = '',\\n      usernameOrEmail = '',\\n      waiting,\\n      formState,\\n      onSubmitHook\\n    } = this.state;\\n\\n    if (waiting) {\\n      return;\\n    }\\n\\n    if (this.validateField('email', email)) {\\n      this.setState({ waiting: true });\\n\\n      Accounts.loginWithoutPassword({ email: email }, error => {\\n        if (error) {\\n          this.showMessage(\\n            `error.accounts.${error.reason}` || 'unknown_error',\\n            'error'\\n          );\\n        } else {\\n          this.showMessage(this.translate('info.emailSent'), 'success', 5000);\\n          this.clearDefaultFieldValues();\\n        }\\n        onSubmitHook(error, formState);\\n        this.setState({ waiting: false });\\n      });\\n    } else if (this.validateField('username', usernameOrEmail)) {\\n      this.setState({ waiting: true });\\n\\n      Accounts.loginWithoutPassword(\\n        { email: usernameOrEmail, username: usernameOrEmail },\\n        error => {\\n          if (error) {\\n            this.showMessage(\\n              `error.accounts.${error.reason}` || 'unknown_error',\\n              'error'\\n            );\\n          } else {\\n            this.showMessage(this.translate('info.emailSent'), 'success', 5000);\\n            this.clearDefaultFieldValues();\\n          }\\n          onSubmitHook(error, formState);\\n          this.setState({ waiting: false });\\n        }\\n      );\\n    } else {\\n      let errMsg = null;\\n      if (['USERNAME_AND_EMAIL_NO_PASSWORD'].includes(passwordSignupFields())) {\\n        errMsg = this.translate('error.accounts.invalid_email');\\n      } else {\\n        errMsg = this.translate('error.accounts.invalid_email');\\n      }\\n      this.showMessage(errMsg, 'warning');\\n      onSubmitHook(errMsg, formState);\\n    }\\n  }\\n\\n  passwordReset() {\\n    const { email = '', waiting, formState, onSubmitHook } = this.state;\\n\\n    if (waiting) {\\n      return;\\n    }\\n\\n    this.clearMessages();\\n    if (this.validateField('email', email)) {\\n      this.setState({ waiting: true });\\n\\n      Accounts.forgotPassword({ email: email }, error => {\\n        if (error) {\\n          this.showMessage(\\n            `error.accounts.${error.reason}` || 'unknown_error',\\n            'error'\\n          );\\n        } else {\\n          this.showMessage(this.translate('info.emailSent'), 'success', 5000);\\n          this.clearDefaultFieldValues();\\n        }\\n        onSubmitHook(error, formState);\\n        this.setState({ waiting: false });\\n      });\\n    }\\n  }\\n\\n  passwordChange() {\\n    const {\\n      password,\\n      newPassword,\\n      formState,\\n      onSubmitHook,\\n      onSignedInHook\\n    } = this.state;\\n\\n    if (!this.validateField('password', newPassword)) {\\n      onSubmitHook('err.minChar', formState);\\n      return;\\n    }\\n\\n    let token = Accounts._loginButtonsSession.get('resetPasswordToken');\\n    if (!token) {\\n      token = Accounts._loginButtonsSession.get('enrollAccountToken');\\n    }\\n    if (token) {\\n      Accounts.resetPassword(token, newPassword, error => {\\n        if (error) {\\n          this.showMessage(\\n            `error.accounts.${error.reason}` || 'unknown_error',\\n            'error'\\n          );\\n          onSubmitHook(error, formState);\\n        } else {\\n          this.showMessage(\\n            this.translate('info.passwordChanged'),\\n            'success',\\n            5000\\n          );\\n          onSubmitHook(null, formState);\\n          this.setState({ formState: STATES.PROFILE });\\n          Accounts._loginButtonsSession.set('resetPasswordToken', null);\\n          Accounts._loginButtonsSession.set('enrollAccountToken', null);\\n          onSignedInHook();\\n        }\\n      });\\n    } else {\\n      Accounts.changePassword(password, newPassword, error => {\\n        if (error) {\\n          this.showMessage(\\n            `error.accounts.${error.reason}` || 'unknown_error',\\n            'error'\\n          );\\n          onSubmitHook(error, formState);\\n        } else {\\n          this.showMessage('info.passwordChanged', 'success', 5000);\\n          onSubmitHook(null, formState);\\n          this.setState({ formState: STATES.PROFILE });\\n          this.clearDefaultFieldValues();\\n        }\\n      });\\n    }\\n  }\\n\\n  showMessage(message, type, clearTimeout, field) {\\n    message = this.translate(message).trim();\\n    if (message) {\\n      this.setState(({ messages = [] }) => {\\n        messages.push({\\n          message,\\n          type,\\n          ...(field && { field })\\n        });\\n        return { messages };\\n      });\\n      if (clearTimeout) {\\n        this.hideMessageTimout = setTimeout(() => {\\n          // Filter out the message that timed out.\\n          this.clearMessage(message);\\n        }, clearTimeout);\\n      }\\n    }\\n  }\\n\\n  getMessageForField(field) {\\n    const { messages = [] } = this.state;\\n    return messages.find(({ field: key }) => key === field);\\n  }\\n\\n  clearMessage(message) {\\n    if (message) {\\n      this.setState(({ messages = [] }) => ({\\n        messages: messages.filter(({ message: a }) => a !== message)\\n      }));\\n    }\\n  }\\n\\n  clearMessages() {\\n    if (this.hideMessageTimout) {\\n      clearTimeout(this.hideMessageTimout);\\n    }\\n    this.setState({ messages: [] });\\n  }\\n\\n  componentWillMount() {\\n    // XXX Check for backwards compatibility.\\n    if (Meteor.isClient) {\\n      const container = document.createElement('div');\\n      ReactDOM.render(<Accounts.ui.Field message=\\\"test\\\" />, container);\\n      if (container.getElementsByClassName('message').length == 0) {\\n        // Found backwards compatibility issue with 1.3.x\\n        console.warn(`Implementations of Accounts.ui.Field must render message in v1.2.11.\\n          https://github.com/studiointeract/accounts-ui/#deprecations`);\\n      }\\n    }\\n  }\\n\\n  componentWillUnmount() {\\n    if (this.hideMessageTimout) {\\n      clearTimeout(this.hideMessageTimout);\\n    }\\n  }\\n\\n  render() {\\n    this.oauthButtons();\\n    // Backwords compatibility with v1.2.x.\\n    const { messages = [] } = this.state;\\n    const message = {\\n      deprecated: true,\\n      message: messages.map(({ message }) => message).join(', ')\\n    };\\n    return (\\n      <Accounts.ui.Form\\n        oauthServices={this.oauthButtons()}\\n        fields={this.fields()}\\n        buttons={this.buttons()}\\n        {...this.state}\\n        message={message}\\n        translate={text => this.translate(text)}\\n      />\\n    );\\n  }\\n}\\nLoginForm.propTypes = {\\n  formState: PropTypes.symbol,\\n  loginPath: PropTypes.string,\\n  signUpPath: PropTypes.string,\\n  resetPasswordPath: PropTypes.string,\\n  profilePath: PropTypes.string,\\n  changePasswordPath: PropTypes.string\\n};\\nLoginForm.defaultProps = {\\n  formState: null,\\n  loginPath: null,\\n  signUpPath: null,\\n  resetPasswordPath: null,\\n  profilePath: null,\\n  changePasswordPath: null\\n};\\n\\nAccounts.ui.LoginForm = LoginForm;\\n\\nconst LoginFormContainer = withTracker(() => {\\n  // Listen for the user to login/logout and the services list to the user.\\n  Meteor.subscribe('servicesList');\\n  return {\\n    user: Accounts.user()\\n  };\\n})(LoginForm);\\nAccounts.ui.LoginForm = LoginFormContainer;\\nexport default LoginFormContainer;\\n\",\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { Accounts } from 'meteor/accounts-base';\\nimport { T9n } from 'meteor-accounts-t9n';\\nimport { hasPasswordService } from '../../helpers.js';\\n\\nexport class PasswordOrService extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      hasPasswordService: hasPasswordService(),\\n      services: Object.keys(props.oauthServices).map(service => {\\n        return props.oauthServices[service].label;\\n      })\\n    };\\n  }\\n\\n  translate(text) {\\n    if (this.props.translate) {\\n      return this.props.translate(text);\\n    }\\n    return T9n.get(text);\\n  }\\n\\n  render() {\\n    let { className = 'password-or-service', style = {} } = this.props;\\n    let { hasPasswordService, services } = this.state;\\n    labels = services;\\n    if (services.length > 2) {\\n      labels = [];\\n    }\\n\\n    if (hasPasswordService && services.length > 0) {\\n      return (\\n        <div style={style} className={className}>\\n          {`${this.translate('orUse')} ${labels.join(' / ')}`}\\n        </div>\\n      );\\n    }\\n    return null;\\n  }\\n}\\n\\nPasswordOrService.propTypes = {\\n  oauthServices: PropTypes.object\\n};\\n\\nAccounts.ui.PasswordOrService = PasswordOrService;\\n\",\"import React from 'react';\\nimport './Button.jsx';\\nimport { Accounts } from 'meteor/accounts-base';\\n\\nexport class SocialButtons extends React.Component {\\n  render() {\\n    let { oauthServices = {}, className = 'social-buttons' } = this.props;\\n    return (\\n      <div className={className}>\\n        {Object.keys(oauthServices).map((id, i) => {\\n          return <Accounts.ui.Button {...oauthServices[id]} key={i} />;\\n        })}\\n      </div>\\n    );\\n  }\\n}\\n\\nAccounts.ui.SocialButtons = SocialButtons;\\n\"]}","minifier":"terser"}