{"code":"!function(){var t=Package.meteor.Meteor,i=Package.meteor.global,r=Package.meteor.meteorEnv,o=Package.random.Random,s=Package.check.check,e=Package.check.Match,n=Package.sha.SHA256,h=Package.modules.meteorInstall,u=Package[\"babel-runtime\"].meteorBabelHelpers,f=Package.promise.Promise,a=Package[\"ecmascript-runtime-client\"].Symbol,p=Package[\"ecmascript-runtime-client\"].Map,c=Package[\"ecmascript-runtime-client\"].Set,m,l,v=h({node_modules:{meteor:{srp:{\"biginteger.js\":function(){m=function(){var t,i=0xdeadbeefcafe,r=!0;function o(t,i,r){null!=t&&(\"number\"==typeof t?this.fromNumber(t,i,r):null==i&&\"string\"!=typeof t?this.fromString(t,256):this.fromString(t,i))}function s(){return new o(null)}function e(t,i,r,o,s,e){for(;--e>=0;){var n=i*this[t++]+r[o]+s;s=Math.floor(n/67108864),r[o++]=67108863&n}return s}function n(t,i,r,o,s,e){for(var n=32767&i,h=i>>15;--e>=0;){var u=32767&this[t],f=this[t++]>>15,a=h*u+f*n;s=((u=n*u+((32767&a)<<15)+r[o]+(1073741823&s))>>>30)+(a>>>15)+h*f+(s>>>30),r[o++]=1073741823&u}return s}function h(t,i,r,o,s,e){for(var n=16383&i,h=i>>14;--e>=0;){var u=16383&this[t],f=this[t++]>>14,a=h*u+f*n;s=((u=n*u+((16383&a)<<14)+r[o]+s)>>28)+(a>>14)+h*f,r[o++]=268435455&u}return s}o.prototype.am=h,t=28,o.prototype.DB=28,o.prototype.DM=268435455,o.prototype.DV=1<<28;var u=52;o.prototype.FV=Math.pow(2,52),o.prototype.F1=24,o.prototype.F2=4;var f=\"0123456789abcdefghijklmnopqrstuvwxyz\",a=new Array,p,c;for(p=\"0\".charCodeAt(0),c=0;c<=9;++c)a[p++]=c;for(p=\"a\".charCodeAt(0),c=10;c<36;++c)a[p++]=c;for(p=\"A\".charCodeAt(0),c=10;c<36;++c)a[p++]=c;function m(t){return f.charAt(t)}function l(t,i){var r=a[t.charCodeAt(i)];return null==r?-1:r}function v(t){for(var i=this.t-1;i>=0;--i)t[i]=this[i];t.t=this.t,t.s=this.s}function T(t){this.t=1,this.s=t<0?-1:0,t>0?this[0]=t:t<-1?this[0]=t+DV:this.t=0}function y(t){var i=s();return i.fromInt(t),i}function d(t,i){var r;if(16==i)r=4;else if(8==i)r=3;else if(256==i)r=8;else if(2==i)r=1;else if(32==i)r=5;else{if(4!=i)return void this.fromRadix(t,i);r=2}this.t=0,this.s=0;for(var s=t.length,e=!1,n=0;--s>=0;){var h=8==r?255&t[s]:l(t,s);h<0?\"-\"==t.charAt(s)&&(e=!0):(e=!1,0==n?this[this.t++]=h:n+r>this.DB?(this[this.t-1]|=(h&(1<<this.DB-n)-1)<<n,this[this.t++]=h>>this.DB-n):this[this.t-1]|=h<<n,(n+=r)>=this.DB&&(n-=this.DB))}8==r&&0!=(128&t[0])&&(this.s=-1,n>0&&(this[this.t-1]|=(1<<this.DB-n)-1<<n)),this.clamp(),e&&o.ZERO.subTo(this,this)}function D(){for(var t=this.s&this.DM;this.t>0&&this[this.t-1]==t;)--this.t}function g(t){if(this.s<0)return\"-\"+this.negate().toString(t);var i;if(16==t)i=4;else if(8==t)i=3;else if(2==t)i=1;else if(32==t)i=5;else{if(4!=t)return this.toRadix(t);i=2}var r=(1<<i)-1,o,s=!1,e=\"\",n=this.t,h=this.DB-n*this.DB%i;if(n-- >0)for(h<this.DB&&(o=this[n]>>h)>0&&(s=!0,e=m(o));n>=0;)h<i?(o=(this[n]&(1<<h)-1)<<i-h,o|=this[--n]>>(h+=this.DB-i)):(o=this[n]>>(h-=i)&r,h<=0&&(h+=this.DB,--n)),o>0&&(s=!0),s&&(e+=m(o));return s?e:\"0\"}function b(){var t=s();return o.ZERO.subTo(this,t),t}function B(){return this.s<0?this.negate():this}function S(t){var i=this.s-t.s;if(0!=i)return i;var r=this.t;if(0!=(i=r-t.t))return i;for(;--r>=0;)if(0!=(i=this[r]-t[r]))return i;return 0}function E(t){var i=1,r;return 0!=(r=t>>>16)&&(t=r,i+=16),0!=(r=t>>8)&&(t=r,i+=8),0!=(r=t>>4)&&(t=r,i+=4),0!=(r=t>>2)&&(t=r,i+=2),0!=(r=t>>1)&&(t=r,i+=1),i}function w(){return this.t<=0?0:this.DB*(this.t-1)+E(this[this.t-1]^this.s&this.DM)}function M(t,i){var r;for(r=this.t-1;r>=0;--r)i[r+t]=this[r];for(r=t-1;r>=0;--r)i[r]=0;i.t=this.t+t,i.s=this.s}function A(t,i){for(var r=t;r<this.t;++r)i[r-t]=this[r];i.t=Math.max(this.t-t,0),i.s=this.s}function R(t,i){var r=t%this.DB,o=this.DB-r,s=(1<<o)-1,e=Math.floor(t/this.DB),n=this.s<<r&this.DM,h;for(h=this.t-1;h>=0;--h)i[h+e+1]=this[h]>>o|n,n=(this[h]&s)<<r;for(h=e-1;h>=0;--h)i[h]=0;i[e]=n,i.t=this.t+e+1,i.s=this.s,i.clamp()}function O(t,i){i.s=this.s;var r=Math.floor(t/this.DB);if(r>=this.t)i.t=0;else{var o=t%this.DB,s=this.DB-o,e=(1<<o)-1;i[0]=this[r]>>o;for(var n=r+1;n<this.t;++n)i[n-r-1]|=(this[n]&e)<<s,i[n-r]=this[n]>>o;o>0&&(i[this.t-r-1]|=(this.s&e)<<s),i.t=this.t-r,i.clamp()}}function C(t,i){for(var r=0,o=0,s=Math.min(t.t,this.t);r<s;)o+=this[r]-t[r],i[r++]=o&this.DM,o>>=this.DB;if(t.t<this.t){for(o-=t.s;r<this.t;)o+=this[r],i[r++]=o&this.DM,o>>=this.DB;o+=this.s}else{for(o+=this.s;r<t.t;)o-=t[r],i[r++]=o&this.DM,o>>=this.DB;o-=t.s}i.s=o<0?-1:0,o<-1?i[r++]=this.DV+o:o>0&&(i[r++]=o),i.t=r,i.clamp()}function P(t,i){var r=this.abs(),s=t.abs(),e=r.t;for(i.t=e+s.t;--e>=0;)i[e]=0;for(e=0;e<s.t;++e)i[e+r.t]=r.am(0,s[e],i,e,0,r.t);i.s=0,i.clamp(),this.s!=t.s&&o.ZERO.subTo(i,i)}function k(t){for(var i=this.abs(),r=t.t=2*i.t;--r>=0;)t[r]=0;for(r=0;r<i.t-1;++r){var o=i.am(r,i[r],t,2*r,0,1);(t[r+i.t]+=i.am(r+1,2*i[r],t,2*r+1,o,i.t-r-1))>=i.DV&&(t[r+i.t]-=i.DV,t[r+i.t+1]=1)}t.t>0&&(t[t.t-1]+=i.am(r,i[r],t,2*r,0,1)),t.s=0,t.clamp()}function F(t,i,r){var e=t.abs();if(!(e.t<=0)){var n=this.abs();if(n.t<e.t)return null!=i&&i.fromInt(0),void(null!=r&&this.copyTo(r));null==r&&(r=s());var h=s(),u=this.s,f=t.s,a=this.DB-E(e[e.t-1]);a>0?(e.lShiftTo(a,h),n.lShiftTo(a,r)):(e.copyTo(h),n.copyTo(r));var p=h.t,c=h[p-1];if(0!=c){var m=c*(1<<this.F1)+(p>1?h[p-2]>>this.F2:0),l=this.FV/m,v=(1<<this.F1)/m,T=1<<this.F2,y=r.t,d=y-p,D=null==i?s():i;for(h.dlShiftTo(d,D),r.compareTo(D)>=0&&(r[r.t++]=1,r.subTo(D,r)),o.ONE.dlShiftTo(p,D),D.subTo(h,h);h.t<p;)h[h.t++]=0;for(;--d>=0;){var g=r[--y]==c?this.DM:Math.floor(r[y]*l+(r[y-1]+T)*v);if((r[y]+=h.am(0,g,r,d,0,p))<g)for(h.dlShiftTo(d,D),r.subTo(D,r);r[y]<--g;)r.subTo(D,r)}null!=i&&(r.drShiftTo(p,i),u!=f&&o.ZERO.subTo(i,i)),r.t=p,r.clamp(),a>0&&r.rShiftTo(a,r),u<0&&o.ZERO.subTo(r,r)}}}function V(t){var i=s();return this.abs().divRemTo(t,null,i),this.s<0&&i.compareTo(o.ZERO)>0&&t.subTo(i,i),i}function N(t){this.m=t}function q(t){return t.s<0||t.compareTo(this.m)>=0?t.mod(this.m):t}function L(t){return t}function x(t){t.divRemTo(this.m,null,t)}function I(t,i,r){t.multiplyTo(i,r),this.reduce(r)}function Z(t,i){t.squareTo(i),this.reduce(i)}function j(){if(this.t<1)return 0;var t=this[0];if(0==(1&t))return 0;var i=3&t;return(i=(i=(i=(i=i*(2-(15&t)*i)&15)*(2-(255&t)*i)&255)*(2-((65535&t)*i&65535))&65535)*(2-t*i%this.DV)%this.DV)>0?this.DV-i:-i}function z(t){this.m=t,this.mp=t.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<t.DB-15)-1,this.mt2=2*t.t}function _(t){var i=s();return t.abs().dlShiftTo(this.m.t,i),i.divRemTo(this.m,null,i),t.s<0&&i.compareTo(o.ZERO)>0&&this.m.subTo(i,i),i}function H(t){var i=s();return t.copyTo(i),this.reduce(i),i}function U(t){for(;t.t<=this.mt2;)t[t.t++]=0;for(var i=0;i<this.m.t;++i){var r=32767&t[i],o=r*this.mpl+((r*this.mph+(t[i]>>15)*this.mpl&this.um)<<15)&t.DM;for(t[r=i+this.m.t]+=this.m.am(0,o,t,i,0,this.m.t);t[r]>=t.DV;)t[r]-=t.DV,t[++r]++}t.clamp(),t.drShiftTo(this.m.t,t),t.compareTo(this.m)>=0&&t.subTo(this.m,t)}function G(t,i){t.squareTo(i),this.reduce(i)}function J(t,i,r){t.multiplyTo(i,r),this.reduce(r)}function K(){return 0==(this.t>0?1&this[0]:this.s)}function Q(t,i){if(t>4294967295||t<1)return o.ONE;var r=s(),e=s(),n=i.convert(this),h=E(t)-1;for(n.copyTo(r);--h>=0;)if(i.sqrTo(r,e),(t&1<<h)>0)i.mulTo(e,n,r);else{var u=r;r=e,e=u}return i.revert(r)}function W(t,i){var r;return r=t<256||i.isEven()?new N(i):new z(i),this.exp(t,r)}function X(){var t=s();return this.copyTo(t),t}function Y(){if(this.s<0){if(1==this.t)return this[0]-this.DV;if(0==this.t)return-1}else{if(1==this.t)return this[0];if(0==this.t)return 0}return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]}function $(){return 0==this.t?this.s:this[0]<<24>>24}function tt(){return 0==this.t?this.s:this[0]<<16>>16}function it(t){return Math.floor(Math.LN2*this.DB/Math.log(t))}function rt(){return this.s<0?-1:this.t<=0||1==this.t&&this[0]<=0?0:1}function ot(t){if(null==t&&(t=10),0==this.signum()||t<2||t>36)return\"0\";var i=this.chunkSize(t),r=Math.pow(t,i),o=y(r),e=s(),n=s(),h=\"\";for(this.divRemTo(o,e,n);e.signum()>0;)h=(r+n.intValue()).toString(t).substr(1)+h,e.divRemTo(o,e,n);return n.intValue().toString(t)+h}function st(t,i){this.fromInt(0),null==i&&(i=10);for(var r=this.chunkSize(i),s=Math.pow(i,r),e=!1,n=0,h=0,u=0;u<t.length;++u){var f=l(t,u);f<0?\"-\"==t.charAt(u)&&0==this.signum()&&(e=!0):(h=i*h+f,++n>=r&&(this.dMultiply(s),this.dAddOffset(h,0),n=0,h=0))}n>0&&(this.dMultiply(Math.pow(i,n)),this.dAddOffset(h,0)),e&&o.ZERO.subTo(this,this)}function et(t,i,r){if(\"number\"==typeof i)if(t<2)this.fromInt(1);else for(this.fromNumber(t,r),this.testBit(t-1)||this.bitwiseTo(o.ONE.shiftLeft(t-1),mt,this),this.isEven()&&this.dAddOffset(1,0);!this.isProbablePrime(i);)this.dAddOffset(2,0),this.bitLength()>t&&this.subTo(o.ONE.shiftLeft(t-1),this);else{var s=new Array,e=7&t;s.length=1+(t>>3),i.nextBytes(s),e>0?s[0]&=(1<<e)-1:s[0]=0,this.fromString(s,256)}}function nt(){var t=this.t,i=new Array;i[0]=this.s;var r=this.DB-t*this.DB%8,o,s=0;if(t-- >0)for(r<this.DB&&(o=this[t]>>r)!=(this.s&this.DM)>>r&&(i[s++]=o|this.s<<this.DB-r);t>=0;)r<8?(o=(this[t]&(1<<r)-1)<<8-r,o|=this[--t]>>(r+=this.DB-8)):(o=this[t]>>(r-=8)&255,r<=0&&(r+=this.DB,--t)),0!=(128&o)&&(o|=-256),0==s&&(128&this.s)!=(128&o)&&++s,(s>0||o!=this.s)&&(i[s++]=o);return i}function ht(t){return 0==this.compareTo(t)}function ut(t){return this.compareTo(t)<0?this:t}function ft(t){return this.compareTo(t)>0?this:t}function at(t,i,r){var o,s,e=Math.min(t.t,this.t);for(o=0;o<e;++o)r[o]=i(this[o],t[o]);if(t.t<this.t){for(s=t.s&this.DM,o=e;o<this.t;++o)r[o]=i(this[o],s);r.t=this.t}else{for(s=this.s&this.DM,o=e;o<t.t;++o)r[o]=i(s,t[o]);r.t=t.t}r.s=i(this.s,t.s),r.clamp()}function pt(t,i){return t&i}function ct(t){var i=s();return this.bitwiseTo(t,pt,i),i}function mt(t,i){return t|i}function lt(t){var i=s();return this.bitwiseTo(t,mt,i),i}function vt(t,i){return t^i}function Tt(t){var i=s();return this.bitwiseTo(t,vt,i),i}function yt(t,i){return t&~i}function dt(t){var i=s();return this.bitwiseTo(t,yt,i),i}function Dt(){for(var t=s(),i=0;i<this.t;++i)t[i]=this.DM&~this[i];return t.t=this.t,t.s=~this.s,t}function gt(t){var i=s();return t<0?this.rShiftTo(-t,i):this.lShiftTo(t,i),i}function bt(t){var i=s();return t<0?this.lShiftTo(-t,i):this.rShiftTo(t,i),i}function Bt(t){if(0==t)return-1;var i=0;return 0==(65535&t)&&(t>>=16,i+=16),0==(255&t)&&(t>>=8,i+=8),0==(15&t)&&(t>>=4,i+=4),0==(3&t)&&(t>>=2,i+=2),0==(1&t)&&++i,i}function St(){for(var t=0;t<this.t;++t)if(0!=this[t])return t*this.DB+Bt(this[t]);return this.s<0?this.t*this.DB:-1}function Et(t){for(var i=0;0!=t;)t&=t-1,++i;return i}function wt(){for(var t=0,i=this.s&this.DM,r=0;r<this.t;++r)t+=Et(this[r]^i);return t}function Mt(t){var i=Math.floor(t/this.DB);return i>=this.t?0!=this.s:0!=(this[i]&1<<t%this.DB)}function At(t,i){var r=o.ONE.shiftLeft(t);return this.bitwiseTo(r,i,r),r}function Rt(t){return this.changeBit(t,mt)}function Ot(t){return this.changeBit(t,yt)}function Ct(t){return this.changeBit(t,vt)}function Pt(t,i){for(var r=0,o=0,s=Math.min(t.t,this.t);r<s;)o+=this[r]+t[r],i[r++]=o&this.DM,o>>=this.DB;if(t.t<this.t){for(o+=t.s;r<this.t;)o+=this[r],i[r++]=o&this.DM,o>>=this.DB;o+=this.s}else{for(o+=this.s;r<t.t;)o+=t[r],i[r++]=o&this.DM,o>>=this.DB;o+=t.s}i.s=o<0?-1:0,o>0?i[r++]=o:o<-1&&(i[r++]=this.DV+o),i.t=r,i.clamp()}function kt(t){var i=s();return this.addTo(t,i),i}function Ft(t){var i=s();return this.subTo(t,i),i}function Vt(t){var i=s();return this.multiplyTo(t,i),i}function Nt(t){var i=s();return this.divRemTo(t,i,null),i}function qt(t){var i=s();return this.divRemTo(t,null,i),i}function Lt(t){var i=s(),r=s();return this.divRemTo(t,i,r),new Array(i,r)}function xt(t){this[this.t]=this.am(0,t-1,this,0,0,this.t),++this.t,this.clamp()}function It(t,i){for(;this.t<=i;)this[this.t++]=0;for(this[i]+=t;this[i]>=this.DV;)this[i]-=this.DV,++i>=this.t&&(this[this.t++]=0),++this[i]}function Zt(){}function jt(t){return t}function zt(t,i,r){t.multiplyTo(i,r)}function _t(t,i){t.squareTo(i)}function Ht(t){return this.exp(t,new Zt)}function Ut(t,i,r){var o=Math.min(this.t+t.t,i),s;for(r.s=0,r.t=o;o>0;)r[--o]=0;for(s=r.t-this.t;o<s;++o)r[o+this.t]=this.am(0,t[o],r,o,0,this.t);for(s=Math.min(t.t,i);o<s;++o)this.am(0,t[o],r,o,0,i-o);r.clamp()}function Gt(t,i,r){--i;var o=r.t=this.t+t.t-i;for(r.s=0;--o>=0;)r[o]=0;for(o=Math.max(i-this.t,0);o<t.t;++o)r[this.t+o-i]=this.am(i-o,t[o],r,0,0,this.t+o-i);r.clamp(),r.drShiftTo(1,r)}function Jt(t){this.r2=s(),this.q3=s(),o.ONE.dlShiftTo(2*t.t,this.r2),this.mu=this.r2.divide(t),this.m=t}function Kt(t){if(t.s<0||t.t>2*this.m.t)return t.mod(this.m);if(t.compareTo(this.m)<0)return t;var i=s();return t.copyTo(i),this.reduce(i),i}function Qt(t){return t}function Wt(t){for(t.drShiftTo(this.m.t-1,this.r2),t.t>this.m.t+1&&(t.t=this.m.t+1,t.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);t.compareTo(this.r2)<0;)t.dAddOffset(1,this.m.t+1);for(t.subTo(this.r2,t);t.compareTo(this.m)>=0;)t.subTo(this.m,t)}function Xt(t,i){t.squareTo(i),this.reduce(i)}function Yt(t,i,r){t.multiplyTo(i,r),this.reduce(r)}function $t(t,i){var r=t.bitLength(),o,e=y(1),n;if(r<=0)return e;o=r<18?1:r<48?3:r<144?4:r<768?5:6,n=r<8?new N(i):i.isEven()?new Jt(i):new z(i);var h=new Array,u=3,f=o-1,a=(1<<o)-1;if(h[1]=n.convert(this),o>1){var p=s();for(n.sqrTo(h[1],p);u<=a;)h[u]=s(),n.mulTo(p,h[u-2],h[u]),u+=2}var c=t.t-1,m,l=!0,v=s(),T;for(r=E(t[c])-1;c>=0;){for(r>=f?m=t[c]>>r-f&a:(m=(t[c]&(1<<r+1)-1)<<f-r,c>0&&(m|=t[c-1]>>this.DB+r-f)),u=o;0==(1&m);)m>>=1,--u;if((r-=u)<0&&(r+=this.DB,--c),l)h[m].copyTo(e),l=!1;else{for(;u>1;)n.sqrTo(e,v),n.sqrTo(v,e),u-=2;u>0?n.sqrTo(e,v):(T=e,e=v,v=T),n.mulTo(v,h[m],e)}for(;c>=0&&0==(t[c]&1<<r);)n.sqrTo(e,v),T=e,e=v,v=T,--r<0&&(r=this.DB-1,--c)}return n.revert(e)}function ti(t){var i=this.s<0?this.negate():this.clone(),r=t.s<0?t.negate():t.clone();if(i.compareTo(r)<0){var o=i;i=r,r=o}var s=i.getLowestSetBit(),e=r.getLowestSetBit();if(e<0)return i;for(s<e&&(e=s),e>0&&(i.rShiftTo(e,i),r.rShiftTo(e,r));i.signum()>0;)(s=i.getLowestSetBit())>0&&i.rShiftTo(s,i),(s=r.getLowestSetBit())>0&&r.rShiftTo(s,r),i.compareTo(r)>=0?(i.subTo(r,i),i.rShiftTo(1,i)):(r.subTo(i,r),r.rShiftTo(1,r));return e>0&&r.lShiftTo(e,r),r}function ii(t){if(t<=0)return 0;var i=this.DV%t,r=this.s<0?t-1:0;if(this.t>0)if(0==i)r=this[0]%t;else for(var o=this.t-1;o>=0;--o)r=(i*r+this[o])%t;return r}function ri(t){var i=t.isEven();if(this.isEven()&&i||0==t.signum())return o.ZERO;for(var r=t.clone(),s=this.clone(),e=y(1),n=y(0),h=y(0),u=y(1);0!=r.signum();){for(;r.isEven();)r.rShiftTo(1,r),i?(e.isEven()&&n.isEven()||(e.addTo(this,e),n.subTo(t,n)),e.rShiftTo(1,e)):n.isEven()||n.subTo(t,n),n.rShiftTo(1,n);for(;s.isEven();)s.rShiftTo(1,s),i?(h.isEven()&&u.isEven()||(h.addTo(this,h),u.subTo(t,u)),h.rShiftTo(1,h)):u.isEven()||u.subTo(t,u),u.rShiftTo(1,u);r.compareTo(s)>=0?(r.subTo(s,r),i&&e.subTo(h,e),n.subTo(u,n)):(s.subTo(r,s),i&&h.subTo(e,h),u.subTo(n,u))}return 0!=s.compareTo(o.ONE)?o.ZERO:u.compareTo(t)>=0?u.subtract(t):u.signum()<0?(u.addTo(t,u),u.signum()<0?u.add(t):u):u}N.prototype.convert=q,N.prototype.revert=L,N.prototype.reduce=x,N.prototype.mulTo=I,N.prototype.sqrTo=Z,z.prototype.convert=_,z.prototype.revert=H,z.prototype.reduce=U,z.prototype.mulTo=J,z.prototype.sqrTo=G,o.prototype.copyTo=v,o.prototype.fromInt=T,o.prototype.fromString=d,o.prototype.clamp=D,o.prototype.dlShiftTo=M,o.prototype.drShiftTo=A,o.prototype.lShiftTo=R,o.prototype.rShiftTo=O,o.prototype.subTo=C,o.prototype.multiplyTo=P,o.prototype.squareTo=k,o.prototype.divRemTo=F,o.prototype.invDigit=j,o.prototype.isEven=K,o.prototype.exp=Q,o.prototype.toString=g,o.prototype.negate=b,o.prototype.abs=B,o.prototype.compareTo=S,o.prototype.bitLength=w,o.prototype.mod=V,o.prototype.modPowInt=W,o.ZERO=y(0),o.ONE=y(1),Zt.prototype.convert=jt,Zt.prototype.revert=jt,Zt.prototype.mulTo=zt,Zt.prototype.sqrTo=_t,Jt.prototype.convert=Kt,Jt.prototype.revert=Qt,Jt.prototype.reduce=Wt,Jt.prototype.mulTo=Yt,Jt.prototype.sqrTo=Xt;var oi=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509],si=(1<<26)/oi[oi.length-1];function ei(t){var i,r=this.abs();if(1==r.t&&r[0]<=oi[oi.length-1]){for(i=0;i<oi.length;++i)if(r[0]==oi[i])return!0;return!1}if(r.isEven())return!1;for(i=1;i<oi.length;){for(var o=oi[i],s=i+1;s<oi.length&&o<si;)o*=oi[s++];for(o=r.modInt(o);i<s;)if(o%oi[i++]==0)return!1}return r.millerRabin(t)}function ni(t){var i=this.subtract(o.ONE),r=i.getLowestSetBit();if(r<=0)return!1;var e=i.shiftRight(r);(t=t+1>>1)>oi.length&&(t=oi.length);for(var n=s(),h=0;h<t;++h){n.fromInt(oi[h]);var u=n.modPow(e,this);if(0!=u.compareTo(o.ONE)&&0!=u.compareTo(i)){for(var f=1;f++<r&&0!=u.compareTo(i);)if(0==(u=u.modPowInt(2,this)).compareTo(o.ONE))return!1;if(0!=u.compareTo(i))return!1}}return!0}return o.prototype.chunkSize=it,o.prototype.toRadix=ot,o.prototype.fromRadix=st,o.prototype.fromNumber=et,o.prototype.bitwiseTo=at,o.prototype.changeBit=At,o.prototype.addTo=Pt,o.prototype.dMultiply=xt,o.prototype.dAddOffset=It,o.prototype.multiplyLowerTo=Ut,o.prototype.multiplyUpperTo=Gt,o.prototype.modInt=ii,o.prototype.millerRabin=ni,o.prototype.clone=X,o.prototype.intValue=Y,o.prototype.byteValue=$,o.prototype.shortValue=tt,o.prototype.signum=rt,o.prototype.toByteArray=nt,o.prototype.equals=ht,o.prototype.min=ut,o.prototype.max=ft,o.prototype.and=ct,o.prototype.or=lt,o.prototype.xor=Tt,o.prototype.andNot=dt,o.prototype.not=Dt,o.prototype.shiftLeft=gt,o.prototype.shiftRight=bt,o.prototype.getLowestSetBit=St,o.prototype.bitCount=wt,o.prototype.testBit=Mt,o.prototype.setBit=Rt,o.prototype.clearBit=Ot,o.prototype.flipBit=Ct,o.prototype.add=kt,o.prototype.subtract=Ft,o.prototype.multiply=Vt,o.prototype.divide=Nt,o.prototype.remainder=qt,o.prototype.divideAndRemainder=Lt,o.prototype.modPow=$t,o.prototype.modInverse=ri,o.prototype.pow=Ht,o.prototype.gcd=ti,o.prototype.isProbablePrime=ei,o}()},\"srp.js\":function(t){var i,r=t(\"@babel/runtime/helpers/interopRequireDefault\")(t(\"@babel/runtime/helpers/objectSpread\"));(l={}).generateVerifier=function(t,i){var r=e(i),s=i&&i.salt||o.secret(),n,h=i&&i.hashedIdentityAndPassword;h||(n=i&&i.identity||o.secret(),h=r.hash(n+\":\"+t));var u=r.hash(s+h),f=new m(u,16),a;return{identity:n,salt:s,verifier:r.g.modPow(f,r.N).toString(16)}},l.matchVerifier={identity:String,salt:String,verifier:String};var s={hash:function(t){return n(t).toLowerCase()},N:new m(\"EEAF0AB9ADB38DD69C33F80AFA8FC5E86072618775FF3C0B9EA2314C9C256576D674DF7496EA81D3383B4813D692C6E0E0D5D8E250B98BE48E495C1D6089DAD15DC7D7B46154D6B6CE8EF4AD69B15D4982559B297BCF1885C529F566660E57EC68EDBC3C05726CC02FD4CBF4976EAA9AFD5138FE8376435B9FC61D2FC0EB06E3\",16),g:new m(\"2\")};s.k=new m(s.hash(s.N.toString(16)+s.g.toString(16)),16);var e=function(t){if(!t)return s;var i=(0,r.default)({},s);return[\"N\",\"g\",\"k\"].forEach(function(r){if(t[r])if(\"string\"==typeof t[r])i[r]=new m(t[r],16);else{if(!(t[r]instanceof m))throw new Error(\"Invalid parameter: \"+r);i[r]=t[r]}}),t.hash&&(i.hash=function(i){return t.hash(i).toLowerCase()}),!t.k&&(t.N||t.g||t.hash)&&(i.k=i.hash(i.N.toString(16)+i.g.toString(16))),i}}}}}},{extensions:[\".js\",\".json\"]});v(\"/node_modules/meteor/srp/biginteger.js\"),v(\"/node_modules/meteor/srp/srp.js\"),Package._define(\"srp\",{SRP:l})}();","sourcemap":"{\"version\":3,\"sources\":[\"packages/srp/biginteger.js\",\"packages/srp/srp.js\"],\"names\":[\"BigInteger\",\"dbits\",\"canary\",\"j_lm\",\"a\",\"b\",\"c\",\"this\",\"fromNumber\",\"fromString\",\"nbi\",\"am1\",\"i\",\"x\",\"w\",\"j\",\"n\",\"v\",\"Math\",\"floor\",\"am2\",\"xl\",\"xh\",\"l\",\"h\",\"m\",\"am3\",\"prototype\",\"am\",\"DB\",\"DM\",\"DV\",\"BI_FP\",\"FV\",\"pow\",\"F1\",\"F2\",\"BI_RM\",\"BI_RC\",\"Array\",\"rr\",\"vv\",\"charCodeAt\",\"int2char\",\"charAt\",\"intAt\",\"s\",\"bnpCopyTo\",\"r\",\"t\",\"bnpFromInt\",\"nbv\",\"fromInt\",\"bnpFromString\",\"k\",\"fromRadix\",\"length\",\"mi\",\"sh\",\"clamp\",\"ZERO\",\"subTo\",\"bnpClamp\",\"bnToString\",\"negate\",\"toString\",\"toRadix\",\"km\",\"d\",\"p\",\"bnNegate\",\"bnAbs\",\"bnCompareTo\",\"nbits\",\"bnBitLength\",\"bnpDLShiftTo\",\"bnpDRShiftTo\",\"max\",\"bnpLShiftTo\",\"bs\",\"cbs\",\"bm\",\"ds\",\"bnpRShiftTo\",\"bnpSubTo\",\"min\",\"bnpMultiplyTo\",\"abs\",\"y\",\"bnpSquareTo\",\"bnpDivRemTo\",\"q\",\"pm\",\"pt\",\"copyTo\",\"ts\",\"ms\",\"nsh\",\"lShiftTo\",\"ys\",\"y0\",\"yt\",\"d1\",\"d2\",\"e\",\"dlShiftTo\",\"compareTo\",\"ONE\",\"qd\",\"drShiftTo\",\"rShiftTo\",\"bnMod\",\"divRemTo\",\"Classic\",\"cConvert\",\"mod\",\"cRevert\",\"cReduce\",\"cMulTo\",\"multiplyTo\",\"reduce\",\"cSqrTo\",\"squareTo\",\"bnpInvDigit\",\"Montgomery\",\"mp\",\"invDigit\",\"mpl\",\"mph\",\"um\",\"mt2\",\"montConvert\",\"montRevert\",\"montReduce\",\"u0\",\"montSqrTo\",\"montMulTo\",\"bnpIsEven\",\"bnpExp\",\"z\",\"r2\",\"g\",\"convert\",\"sqrTo\",\"mulTo\",\"revert\",\"bnModPowInt\",\"isEven\",\"exp\",\"bnClone\",\"bnIntValue\",\"bnByteValue\",\"bnShortValue\",\"bnpChunkSize\",\"LN2\",\"log\",\"bnSigNum\",\"bnpToRadix\",\"signum\",\"cs\",\"chunkSize\",\"intValue\",\"substr\",\"bnpFromRadix\",\"dMultiply\",\"dAddOffset\",\"bnpFromNumber\",\"testBit\",\"bitwiseTo\",\"shiftLeft\",\"op_or\",\"isProbablePrime\",\"bitLength\",\"nextBytes\",\"bnToByteArray\",\"bnEquals\",\"bnMin\",\"bnMax\",\"bnpBitwiseTo\",\"op\",\"f\",\"op_and\",\"bnAnd\",\"bnOr\",\"op_xor\",\"bnXor\",\"op_andnot\",\"bnAndNot\",\"bnNot\",\"bnShiftLeft\",\"bnShiftRight\",\"lbit\",\"bnGetLowestSetBit\",\"cbit\",\"bnBitCount\",\"bnTestBit\",\"bnpChangeBit\",\"bnSetBit\",\"changeBit\",\"bnClearBit\",\"bnFlipBit\",\"bnpAddTo\",\"bnAdd\",\"addTo\",\"bnSubtract\",\"bnMultiply\",\"bnDivide\",\"bnRemainder\",\"bnDivideAndRemainder\",\"bnpDMultiply\",\"bnpDAddOffset\",\"NullExp\",\"nNop\",\"nMulTo\",\"nSqrTo\",\"bnPow\",\"bnpMultiplyLowerTo\",\"bnpMultiplyUpperTo\",\"Barrett\",\"q3\",\"mu\",\"divide\",\"barrettConvert\",\"barrettRevert\",\"barrettReduce\",\"multiplyUpperTo\",\"multiplyLowerTo\",\"barrettSqrTo\",\"barrettMulTo\",\"bnModPow\",\"k1\",\"g2\",\"is1\",\"bnGCD\",\"clone\",\"getLowestSetBit\",\"bnpModInt\",\"bnModInverse\",\"ac\",\"u\",\"subtract\",\"add\",\"modPowInt\",\"lowprimes\",\"lplim\",\"bnIsProbablePrime\",\"modInt\",\"millerRabin\",\"bnpMillerRabin\",\"n1\",\"shiftRight\",\"modPow\",\"byteValue\",\"shortValue\",\"toByteArray\",\"equals\",\"and\",\"or\",\"xor\",\"andNot\",\"not\",\"bitCount\",\"setBit\",\"clearBit\",\"flipBit\",\"multiply\",\"remainder\",\"divideAndRemainder\",\"modInverse\",\"gcd\",\"SRP\",\"generateVerifier\",\"password\",\"options\",\"params\",\"paramsFromOptions\",\"salt\",\"Random\",\"secret\",\"identity\",\"hashedIdentityAndPassword\",\"hash\",\"xi\",\"verifier\",\"N\",\"matchVerifier\",\"String\",\"_defaults\",\"SHA256\",\"toLowerCase\",\"ret\",\"_objectSpread2\",\"default\",\"forEach\",\"Error\"],\"mappings\":\"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\",\"sourcesContent\":[\"/// METEOR WRAPPER\\nBigInteger = (function () {\\n\\n\\n/// BEGIN jsbn.js\\n\\n/*\\n * Copyright (c) 2003-2005  Tom Wu\\n * All Rights Reserved.\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining\\n * a copy of this software and associated documentation files (the\\n * \\\"Software\\\"), to deal in the Software without restriction, including\\n * without limitation the rights to use, copy, modify, merge, publish,\\n * distribute, sublicense, and/or sell copies of the Software, and to\\n * permit persons to whom the Software is furnished to do so, subject to\\n * the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be\\n * included in all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS-IS\\\" AND WITHOUT WARRANTY OF ANY KIND, \\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \\n *\\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\\n *\\n * In addition, the following condition applies:\\n *\\n * All redistributions must retain an intact copy of this copyright notice\\n * and disclaimer.\\n */\\n\\n// Basic JavaScript BN library - subset useful for RSA encryption.\\n\\n// Bits per digit\\nvar dbits;\\n\\n// JavaScript engine analysis\\nvar canary = 0xdeadbeefcafe;\\nvar j_lm = ((canary&0xffffff)==0xefcafe);\\n\\n// (public) Constructor\\nfunction BigInteger(a,b,c) {\\n  if(a != null)\\n    if(\\\"number\\\" == typeof a) this.fromNumber(a,b,c);\\n    else if(b == null && \\\"string\\\" != typeof a) this.fromString(a,256);\\n    else this.fromString(a,b);\\n}\\n\\n// return new, unset BigInteger\\nfunction nbi() { return new BigInteger(null); }\\n\\n// am: Compute w_j += (x*this_i), propagate carries,\\n// c is initial carry, returns final carry.\\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\\n// We need to select the fastest one that works in this environment.\\n\\n// am1: use a single mult and divide to get the high bits,\\n// max digit bits should be 26 because\\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\\nfunction am1(i,x,w,j,c,n) {\\n  while(--n >= 0) {\\n    var v = x*this[i++]+w[j]+c;\\n    c = Math.floor(v/0x4000000);\\n    w[j++] = v&0x3ffffff;\\n  }\\n  return c;\\n}\\n// am2 avoids a big mult-and-extract completely.\\n// Max digit bits should be <= 30 because we do bitwise ops\\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\\nfunction am2(i,x,w,j,c,n) {\\n  var xl = x&0x7fff, xh = x>>15;\\n  while(--n >= 0) {\\n    var l = this[i]&0x7fff;\\n    var h = this[i++]>>15;\\n    var m = xh*l+h*xl;\\n    l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\\n    w[j++] = l&0x3fffffff;\\n  }\\n  return c;\\n}\\n// Alternately, set max digit bits to 28 since some\\n// browsers slow down when dealing with 32-bit numbers.\\nfunction am3(i,x,w,j,c,n) {\\n  var xl = x&0x3fff, xh = x>>14;\\n  while(--n >= 0) {\\n    var l = this[i]&0x3fff;\\n    var h = this[i++]>>14;\\n    var m = xh*l+h*xl;\\n    l = xl*l+((m&0x3fff)<<14)+w[j]+c;\\n    c = (l>>28)+(m>>14)+xh*h;\\n    w[j++] = l&0xfffffff;\\n  }\\n  return c;\\n}\\n\\n/* XXX METEOR XXX\\nif(j_lm && (navigator.appName == \\\"Microsoft Internet Explorer\\\")) {\\n  BigInteger.prototype.am = am2;\\n  dbits = 30;\\n}\\nelse if(j_lm && (navigator.appName != \\\"Netscape\\\")) {\\n  BigInteger.prototype.am = am1;\\n  dbits = 26;\\n}\\nelse \\n*/\\n\\n{ // Mozilla/Netscape seems to prefer am3\\n  BigInteger.prototype.am = am3;\\n  dbits = 28;\\n}\\n\\nBigInteger.prototype.DB = dbits;\\nBigInteger.prototype.DM = ((1<<dbits)-1);\\nBigInteger.prototype.DV = (1<<dbits);\\n\\nvar BI_FP = 52;\\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\\nBigInteger.prototype.F1 = BI_FP-dbits;\\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\\n\\n// Digit conversions\\nvar BI_RM = \\\"0123456789abcdefghijklmnopqrstuvwxyz\\\";\\nvar BI_RC = new Array();\\nvar rr,vv;\\nrr = \\\"0\\\".charCodeAt(0);\\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\\nrr = \\\"a\\\".charCodeAt(0);\\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\\nrr = \\\"A\\\".charCodeAt(0);\\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\\n\\nfunction int2char(n) { return BI_RM.charAt(n); }\\nfunction intAt(s,i) {\\n  var c = BI_RC[s.charCodeAt(i)];\\n  return (c==null)?-1:c;\\n}\\n\\n// (protected) copy this to r\\nfunction bnpCopyTo(r) {\\n  for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\\n  r.t = this.t;\\n  r.s = this.s;\\n}\\n\\n// (protected) set from integer value x, -DV <= x < DV\\nfunction bnpFromInt(x) {\\n  this.t = 1;\\n  this.s = (x<0)?-1:0;\\n  if(x > 0) this[0] = x;\\n  else if(x < -1) this[0] = x+DV;\\n  else this.t = 0;\\n}\\n\\n// return bigint initialized to value\\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\\n\\n// (protected) set from string and radix\\nfunction bnpFromString(s,b) {\\n  var k;\\n  if(b == 16) k = 4;\\n  else if(b == 8) k = 3;\\n  else if(b == 256) k = 8; // byte array\\n  else if(b == 2) k = 1;\\n  else if(b == 32) k = 5;\\n  else if(b == 4) k = 2;\\n  else { this.fromRadix(s,b); return; }\\n  this.t = 0;\\n  this.s = 0;\\n  var i = s.length, mi = false, sh = 0;\\n  while(--i >= 0) {\\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\\n    if(x < 0) {\\n      if(s.charAt(i) == \\\"-\\\") mi = true;\\n      continue;\\n    }\\n    mi = false;\\n    if(sh == 0)\\n      this[this.t++] = x;\\n    else if(sh+k > this.DB) {\\n      this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\\n      this[this.t++] = (x>>(this.DB-sh));\\n    }\\n    else\\n      this[this.t-1] |= x<<sh;\\n    sh += k;\\n    if(sh >= this.DB) sh -= this.DB;\\n  }\\n  if(k == 8 && (s[0]&0x80) != 0) {\\n    this.s = -1;\\n    if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\\n  }\\n  this.clamp();\\n  if(mi) BigInteger.ZERO.subTo(this,this);\\n}\\n\\n// (protected) clamp off excess high words\\nfunction bnpClamp() {\\n  var c = this.s&this.DM;\\n  while(this.t > 0 && this[this.t-1] == c) --this.t;\\n}\\n\\n// (public) return string representation in given radix\\nfunction bnToString(b) {\\n  if(this.s < 0) return \\\"-\\\"+this.negate().toString(b);\\n  var k;\\n  if(b == 16) k = 4;\\n  else if(b == 8) k = 3;\\n  else if(b == 2) k = 1;\\n  else if(b == 32) k = 5;\\n  else if(b == 4) k = 2;\\n  else return this.toRadix(b);\\n  var km = (1<<k)-1, d, m = false, r = \\\"\\\", i = this.t;\\n  var p = this.DB-(i*this.DB)%k;\\n  if(i-- > 0) {\\n    if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }\\n    while(i >= 0) {\\n      if(p < k) {\\n        d = (this[i]&((1<<p)-1))<<(k-p);\\n        d |= this[--i]>>(p+=this.DB-k);\\n      }\\n      else {\\n        d = (this[i]>>(p-=k))&km;\\n        if(p <= 0) { p += this.DB; --i; }\\n      }\\n      if(d > 0) m = true;\\n      if(m) r += int2char(d);\\n    }\\n  }\\n  return m?r:\\\"0\\\";\\n}\\n\\n// (public) -this\\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\\n\\n// (public) |this|\\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\\n\\n// (public) return + if this > a, - if this < a, 0 if equal\\nfunction bnCompareTo(a) {\\n  var r = this.s-a.s;\\n  if(r != 0) return r;\\n  var i = this.t;\\n  r = i-a.t;\\n  if(r != 0) return r;\\n  while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\\n  return 0;\\n}\\n\\n// returns bit length of the integer x\\nfunction nbits(x) {\\n  var r = 1, t;\\n  if((t=x>>>16) != 0) { x = t; r += 16; }\\n  if((t=x>>8) != 0) { x = t; r += 8; }\\n  if((t=x>>4) != 0) { x = t; r += 4; }\\n  if((t=x>>2) != 0) { x = t; r += 2; }\\n  if((t=x>>1) != 0) { x = t; r += 1; }\\n  return r;\\n}\\n\\n// (public) return the number of bits in \\\"this\\\"\\nfunction bnBitLength() {\\n  if(this.t <= 0) return 0;\\n  return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\\n}\\n\\n// (protected) r = this << n*DB\\nfunction bnpDLShiftTo(n,r) {\\n  var i;\\n  for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\\n  for(i = n-1; i >= 0; --i) r[i] = 0;\\n  r.t = this.t+n;\\n  r.s = this.s;\\n}\\n\\n// (protected) r = this >> n*DB\\nfunction bnpDRShiftTo(n,r) {\\n  for(var i = n; i < this.t; ++i) r[i-n] = this[i];\\n  r.t = Math.max(this.t-n,0);\\n  r.s = this.s;\\n}\\n\\n// (protected) r = this << n\\nfunction bnpLShiftTo(n,r) {\\n  var bs = n%this.DB;\\n  var cbs = this.DB-bs;\\n  var bm = (1<<cbs)-1;\\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\\n  for(i = this.t-1; i >= 0; --i) {\\n    r[i+ds+1] = (this[i]>>cbs)|c;\\n    c = (this[i]&bm)<<bs;\\n  }\\n  for(i = ds-1; i >= 0; --i) r[i] = 0;\\n  r[ds] = c;\\n  r.t = this.t+ds+1;\\n  r.s = this.s;\\n  r.clamp();\\n}\\n\\n// (protected) r = this >> n\\nfunction bnpRShiftTo(n,r) {\\n  r.s = this.s;\\n  var ds = Math.floor(n/this.DB);\\n  if(ds >= this.t) { r.t = 0; return; }\\n  var bs = n%this.DB;\\n  var cbs = this.DB-bs;\\n  var bm = (1<<bs)-1;\\n  r[0] = this[ds]>>bs;\\n  for(var i = ds+1; i < this.t; ++i) {\\n    r[i-ds-1] |= (this[i]&bm)<<cbs;\\n    r[i-ds] = this[i]>>bs;\\n  }\\n  if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\\n  r.t = this.t-ds;\\n  r.clamp();\\n}\\n\\n// (protected) r = this - a\\nfunction bnpSubTo(a,r) {\\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\\n  while(i < m) {\\n    c += this[i]-a[i];\\n    r[i++] = c&this.DM;\\n    c >>= this.DB;\\n  }\\n  if(a.t < this.t) {\\n    c -= a.s;\\n    while(i < this.t) {\\n      c += this[i];\\n      r[i++] = c&this.DM;\\n      c >>= this.DB;\\n    }\\n    c += this.s;\\n  }\\n  else {\\n    c += this.s;\\n    while(i < a.t) {\\n      c -= a[i];\\n      r[i++] = c&this.DM;\\n      c >>= this.DB;\\n    }\\n    c -= a.s;\\n  }\\n  r.s = (c<0)?-1:0;\\n  if(c < -1) r[i++] = this.DV+c;\\n  else if(c > 0) r[i++] = c;\\n  r.t = i;\\n  r.clamp();\\n}\\n\\n// (protected) r = this * a, r != this,a (HAC 14.12)\\n// \\\"this\\\" should be the larger one if appropriate.\\nfunction bnpMultiplyTo(a,r) {\\n  var x = this.abs(), y = a.abs();\\n  var i = x.t;\\n  r.t = i+y.t;\\n  while(--i >= 0) r[i] = 0;\\n  for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\\n  r.s = 0;\\n  r.clamp();\\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\\n}\\n\\n// (protected) r = this^2, r != this (HAC 14.16)\\nfunction bnpSquareTo(r) {\\n  var x = this.abs();\\n  var i = r.t = 2*x.t;\\n  while(--i >= 0) r[i] = 0;\\n  for(i = 0; i < x.t-1; ++i) {\\n    var c = x.am(i,x[i],r,2*i,0,1);\\n    if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\\n      r[i+x.t] -= x.DV;\\n      r[i+x.t+1] = 1;\\n    }\\n  }\\n  if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\\n  r.s = 0;\\n  r.clamp();\\n}\\n\\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\\n// r != q, this != m.  q or r may be null.\\nfunction bnpDivRemTo(m,q,r) {\\n  var pm = m.abs();\\n  if(pm.t <= 0) return;\\n  var pt = this.abs();\\n  if(pt.t < pm.t) {\\n    if(q != null) q.fromInt(0);\\n    if(r != null) this.copyTo(r);\\n    return;\\n  }\\n  if(r == null) r = nbi();\\n  var y = nbi(), ts = this.s, ms = m.s;\\n  var nsh = this.DB-nbits(pm[pm.t-1]);\\t// normalize modulus\\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\\n  else { pm.copyTo(y); pt.copyTo(r); }\\n  var ys = y.t;\\n  var y0 = y[ys-1];\\n  if(y0 == 0) return;\\n  var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\\n  y.dlShiftTo(j,t);\\n  if(r.compareTo(t) >= 0) {\\n    r[r.t++] = 1;\\n    r.subTo(t,r);\\n  }\\n  BigInteger.ONE.dlShiftTo(ys,t);\\n  t.subTo(y,y);\\t// \\\"negative\\\" y so we can replace sub with am later\\n  while(y.t < ys) y[y.t++] = 0;\\n  while(--j >= 0) {\\n    // Estimate quotient digit\\n    var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\\n    if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\\t// Try it out\\n      y.dlShiftTo(j,t);\\n      r.subTo(t,r);\\n      while(r[i] < --qd) r.subTo(t,r);\\n    }\\n  }\\n  if(q != null) {\\n    r.drShiftTo(ys,q);\\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\\n  }\\n  r.t = ys;\\n  r.clamp();\\n  if(nsh > 0) r.rShiftTo(nsh,r);\\t// Denormalize remainder\\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\\n}\\n\\n// (public) this mod a\\nfunction bnMod(a) {\\n  var r = nbi();\\n  this.abs().divRemTo(a,null,r);\\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\\n  return r;\\n}\\n\\n// Modular reduction using \\\"classic\\\" algorithm\\nfunction Classic(m) { this.m = m; }\\nfunction cConvert(x) {\\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\\n  else return x;\\n}\\nfunction cRevert(x) { return x; }\\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\\n\\nClassic.prototype.convert = cConvert;\\nClassic.prototype.revert = cRevert;\\nClassic.prototype.reduce = cReduce;\\nClassic.prototype.mulTo = cMulTo;\\nClassic.prototype.sqrTo = cSqrTo;\\n\\n// (protected) return \\\"-1/this % 2^DB\\\"; useful for Mont. reduction\\n// justification:\\n//         xy == 1 (mod m)\\n//         xy =  1+km\\n//   xy(2-xy) = (1+km)(1-km)\\n// x[y(2-xy)] = 1-k^2m^2\\n// x[y(2-xy)] == 1 (mod m^2)\\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\\n// JS multiply \\\"overflows\\\" differently from C/C++, so care is needed here.\\nfunction bnpInvDigit() {\\n  if(this.t < 1) return 0;\\n  var x = this[0];\\n  if((x&1) == 0) return 0;\\n  var y = x&3;\\t\\t// y == 1/x mod 2^2\\n  y = (y*(2-(x&0xf)*y))&0xf;\\t// y == 1/x mod 2^4\\n  y = (y*(2-(x&0xff)*y))&0xff;\\t// y == 1/x mod 2^8\\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\\t// y == 1/x mod 2^16\\n  // last step - calculate inverse mod DV directly;\\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\\n  y = (y*(2-x*y%this.DV))%this.DV;\\t\\t// y == 1/x mod 2^dbits\\n  // we really want the negative inverse, and -DV < y < DV\\n  return (y>0)?this.DV-y:-y;\\n}\\n\\n// Montgomery reduction\\nfunction Montgomery(m) {\\n  this.m = m;\\n  this.mp = m.invDigit();\\n  this.mpl = this.mp&0x7fff;\\n  this.mph = this.mp>>15;\\n  this.um = (1<<(m.DB-15))-1;\\n  this.mt2 = 2*m.t;\\n}\\n\\n// xR mod m\\nfunction montConvert(x) {\\n  var r = nbi();\\n  x.abs().dlShiftTo(this.m.t,r);\\n  r.divRemTo(this.m,null,r);\\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\\n  return r;\\n}\\n\\n// x/R mod m\\nfunction montRevert(x) {\\n  var r = nbi();\\n  x.copyTo(r);\\n  this.reduce(r);\\n  return r;\\n}\\n\\n// x = x/R mod m (HAC 14.32)\\nfunction montReduce(x) {\\n  while(x.t <= this.mt2)\\t// pad x so am has enough room later\\n    x[x.t++] = 0;\\n  for(var i = 0; i < this.m.t; ++i) {\\n    // faster way of calculating u0 = x[i]*mp mod DV\\n    var j = x[i]&0x7fff;\\n    var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\\n    // use am to combine the multiply-shift-add into one call\\n    j = i+this.m.t;\\n    x[j] += this.m.am(0,u0,x,i,0,this.m.t);\\n    // propagate carry\\n    while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\\n  }\\n  x.clamp();\\n  x.drShiftTo(this.m.t,x);\\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\\n}\\n\\n// r = \\\"x^2/R mod m\\\"; x != r\\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\\n\\n// r = \\\"xy/R mod m\\\"; x,y != r\\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\\n\\nMontgomery.prototype.convert = montConvert;\\nMontgomery.prototype.revert = montRevert;\\nMontgomery.prototype.reduce = montReduce;\\nMontgomery.prototype.mulTo = montMulTo;\\nMontgomery.prototype.sqrTo = montSqrTo;\\n\\n// (protected) true iff this is even\\nfunction bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\\n\\n// (protected) this^e, e < 2^32, doing sqr and mul with \\\"r\\\" (HAC 14.79)\\nfunction bnpExp(e,z) {\\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\\n  g.copyTo(r);\\n  while(--i >= 0) {\\n    z.sqrTo(r,r2);\\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\\n    else { var t = r; r = r2; r2 = t; }\\n  }\\n  return z.revert(r);\\n}\\n\\n// (public) this^e % m, 0 <= e < 2^32\\nfunction bnModPowInt(e,m) {\\n  var z;\\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\\n  return this.exp(e,z);\\n}\\n\\n// protected\\nBigInteger.prototype.copyTo = bnpCopyTo;\\nBigInteger.prototype.fromInt = bnpFromInt;\\nBigInteger.prototype.fromString = bnpFromString;\\nBigInteger.prototype.clamp = bnpClamp;\\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\\nBigInteger.prototype.subTo = bnpSubTo;\\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\\nBigInteger.prototype.squareTo = bnpSquareTo;\\nBigInteger.prototype.divRemTo = bnpDivRemTo;\\nBigInteger.prototype.invDigit = bnpInvDigit;\\nBigInteger.prototype.isEven = bnpIsEven;\\nBigInteger.prototype.exp = bnpExp;\\n\\n// public\\nBigInteger.prototype.toString = bnToString;\\nBigInteger.prototype.negate = bnNegate;\\nBigInteger.prototype.abs = bnAbs;\\nBigInteger.prototype.compareTo = bnCompareTo;\\nBigInteger.prototype.bitLength = bnBitLength;\\nBigInteger.prototype.mod = bnMod;\\nBigInteger.prototype.modPowInt = bnModPowInt;\\n\\n// \\\"constants\\\"\\nBigInteger.ZERO = nbv(0);\\nBigInteger.ONE = nbv(1);\\n\\n\\n/// BEGIN jsbn2.js\\n\\n/*\\n * Copyright (c) 2003-2005  Tom Wu\\n * All Rights Reserved.\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining\\n * a copy of this software and associated documentation files (the\\n * \\\"Software\\\"), to deal in the Software without restriction, including\\n * without limitation the rights to use, copy, modify, merge, publish,\\n * distribute, sublicense, and/or sell copies of the Software, and to\\n * permit persons to whom the Software is furnished to do so, subject to\\n * the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be\\n * included in all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS-IS\\\" AND WITHOUT WARRANTY OF ANY KIND, \\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY \\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  \\n *\\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\\n *\\n * In addition, the following condition applies:\\n *\\n * All redistributions must retain an intact copy of this copyright notice\\n * and disclaimer.\\n */\\n\\n// Extended JavaScript BN functions, required for RSA private ops.\\n\\n// (public)\\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\\n\\n// (public) return value as integer\\nfunction bnIntValue() {\\n  if(this.s < 0) {\\n    if(this.t == 1) return this[0]-this.DV;\\n    else if(this.t == 0) return -1;\\n  }\\n  else if(this.t == 1) return this[0];\\n  else if(this.t == 0) return 0;\\n  // assumes 16 < DB < 32\\n  return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];\\n}\\n\\n// (public) return value as byte\\nfunction bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }\\n\\n// (public) return value as short (assumes DB>=16)\\nfunction bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }\\n\\n// (protected) return x s.t. r^x < DV\\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\\n\\n// (public) 0 if this == 0, 1 if this > 0\\nfunction bnSigNum() {\\n  if(this.s < 0) return -1;\\n  else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\\n  else return 1;\\n}\\n\\n// (protected) convert to radix string\\nfunction bnpToRadix(b) {\\n  if(b == null) b = 10;\\n  if(this.signum() == 0 || b < 2 || b > 36) return \\\"0\\\";\\n  var cs = this.chunkSize(b);\\n  var a = Math.pow(b,cs);\\n  var d = nbv(a), y = nbi(), z = nbi(), r = \\\"\\\";\\n  this.divRemTo(d,y,z);\\n  while(y.signum() > 0) {\\n    r = (a+z.intValue()).toString(b).substr(1) + r;\\n    y.divRemTo(d,y,z);\\n  }\\n  return z.intValue().toString(b) + r;\\n}\\n\\n// (protected) convert from radix string\\nfunction bnpFromRadix(s,b) {\\n  this.fromInt(0);\\n  if(b == null) b = 10;\\n  var cs = this.chunkSize(b);\\n  var d = Math.pow(b,cs), mi = false, j = 0, w = 0;\\n  for(var i = 0; i < s.length; ++i) {\\n    var x = intAt(s,i);\\n    if(x < 0) {\\n      if(s.charAt(i) == \\\"-\\\" && this.signum() == 0) mi = true;\\n      continue;\\n    }\\n    w = b*w+x;\\n    if(++j >= cs) {\\n      this.dMultiply(d);\\n      this.dAddOffset(w,0);\\n      j = 0;\\n      w = 0;\\n    }\\n  }\\n  if(j > 0) {\\n    this.dMultiply(Math.pow(b,j));\\n    this.dAddOffset(w,0);\\n  }\\n  if(mi) BigInteger.ZERO.subTo(this,this);\\n}\\n\\n// (protected) alternate constructor\\nfunction bnpFromNumber(a,b,c) {\\n  if(\\\"number\\\" == typeof b) {\\n    // new BigInteger(int,int,RNG)\\n    if(a < 2) this.fromInt(1);\\n    else {\\n      this.fromNumber(a,c);\\n      if(!this.testBit(a-1))\\t// force MSB set\\n        this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\\n      if(this.isEven()) this.dAddOffset(1,0); // force odd\\n      while(!this.isProbablePrime(b)) {\\n        this.dAddOffset(2,0);\\n        if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\\n      }\\n    }\\n  }\\n  else {\\n    // new BigInteger(int,RNG)\\n    var x = new Array(), t = a&7;\\n    x.length = (a>>3)+1;\\n    b.nextBytes(x);\\n    if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\\n    this.fromString(x,256);\\n  }\\n}\\n\\n// (public) convert to bigendian byte array\\nfunction bnToByteArray() {\\n  var i = this.t, r = new Array();\\n  r[0] = this.s;\\n  var p = this.DB-(i*this.DB)%8, d, k = 0;\\n  if(i-- > 0) {\\n    if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)\\n      r[k++] = d|(this.s<<(this.DB-p));\\n    while(i >= 0) {\\n      if(p < 8) {\\n        d = (this[i]&((1<<p)-1))<<(8-p);\\n        d |= this[--i]>>(p+=this.DB-8);\\n      }\\n      else {\\n        d = (this[i]>>(p-=8))&0xff;\\n        if(p <= 0) { p += this.DB; --i; }\\n      }\\n      if((d&0x80) != 0) d |= -256;\\n      if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\\n      if(k > 0 || d != this.s) r[k++] = d;\\n    }\\n  }\\n  return r;\\n}\\n\\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\\n\\n// (protected) r = this op a (bitwise)\\nfunction bnpBitwiseTo(a,op,r) {\\n  var i, f, m = Math.min(a.t,this.t);\\n  for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);\\n  if(a.t < this.t) {\\n    f = a.s&this.DM;\\n    for(i = m; i < this.t; ++i) r[i] = op(this[i],f);\\n    r.t = this.t;\\n  }\\n  else {\\n    f = this.s&this.DM;\\n    for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);\\n    r.t = a.t;\\n  }\\n  r.s = op(this.s,a.s);\\n  r.clamp();\\n}\\n\\n// (public) this & a\\nfunction op_and(x,y) { return x&y; }\\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\\n\\n// (public) this | a\\nfunction op_or(x,y) { return x|y; }\\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\\n\\n// (public) this ^ a\\nfunction op_xor(x,y) { return x^y; }\\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\\n\\n// (public) this & ~a\\nfunction op_andnot(x,y) { return x&~y; }\\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\\n\\n// (public) ~this\\nfunction bnNot() {\\n  var r = nbi();\\n  for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];\\n  r.t = this.t;\\n  r.s = ~this.s;\\n  return r;\\n}\\n\\n// (public) this << n\\nfunction bnShiftLeft(n) {\\n  var r = nbi();\\n  if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\\n  return r;\\n}\\n\\n// (public) this >> n\\nfunction bnShiftRight(n) {\\n  var r = nbi();\\n  if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\\n  return r;\\n}\\n\\n// return index of lowest 1-bit in x, x < 2^31\\nfunction lbit(x) {\\n  if(x == 0) return -1;\\n  var r = 0;\\n  if((x&0xffff) == 0) { x >>= 16; r += 16; }\\n  if((x&0xff) == 0) { x >>= 8; r += 8; }\\n  if((x&0xf) == 0) { x >>= 4; r += 4; }\\n  if((x&3) == 0) { x >>= 2; r += 2; }\\n  if((x&1) == 0) ++r;\\n  return r;\\n}\\n\\n// (public) returns index of lowest 1-bit (or -1 if none)\\nfunction bnGetLowestSetBit() {\\n  for(var i = 0; i < this.t; ++i)\\n    if(this[i] != 0) return i*this.DB+lbit(this[i]);\\n  if(this.s < 0) return this.t*this.DB;\\n  return -1;\\n}\\n\\n// return number of 1 bits in x\\nfunction cbit(x) {\\n  var r = 0;\\n  while(x != 0) { x &= x-1; ++r; }\\n  return r;\\n}\\n\\n// (public) return number of set bits\\nfunction bnBitCount() {\\n  var r = 0, x = this.s&this.DM;\\n  for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);\\n  return r;\\n}\\n\\n// (public) true iff nth bit is set\\nfunction bnTestBit(n) {\\n  var j = Math.floor(n/this.DB);\\n  if(j >= this.t) return(this.s!=0);\\n  return((this[j]&(1<<(n%this.DB)))!=0);\\n}\\n\\n// (protected) this op (1<<n)\\nfunction bnpChangeBit(n,op) {\\n  var r = BigInteger.ONE.shiftLeft(n);\\n  this.bitwiseTo(r,op,r);\\n  return r;\\n}\\n\\n// (public) this | (1<<n)\\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\\n\\n// (public) this & ~(1<<n)\\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\\n\\n// (public) this ^ (1<<n)\\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\\n\\n// (protected) r = this + a\\nfunction bnpAddTo(a,r) {\\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\\n  while(i < m) {\\n    c += this[i]+a[i];\\n    r[i++] = c&this.DM;\\n    c >>= this.DB;\\n  }\\n  if(a.t < this.t) {\\n    c += a.s;\\n    while(i < this.t) {\\n      c += this[i];\\n      r[i++] = c&this.DM;\\n      c >>= this.DB;\\n    }\\n    c += this.s;\\n  }\\n  else {\\n    c += this.s;\\n    while(i < a.t) {\\n      c += a[i];\\n      r[i++] = c&this.DM;\\n      c >>= this.DB;\\n    }\\n    c += a.s;\\n  }\\n  r.s = (c<0)?-1:0;\\n  if(c > 0) r[i++] = c;\\n  else if(c < -1) r[i++] = this.DV+c;\\n  r.t = i;\\n  r.clamp();\\n}\\n\\n// (public) this + a\\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\\n\\n// (public) this - a\\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\\n\\n// (public) this * a\\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\\n\\n// (public) this / a\\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\\n\\n// (public) this % a\\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\\n\\n// (public) [this/a,this%a]\\nfunction bnDivideAndRemainder(a) {\\n  var q = nbi(), r = nbi();\\n  this.divRemTo(a,q,r);\\n  return new Array(q,r);\\n}\\n\\n// (protected) this *= n, this >= 0, 1 < n < DV\\nfunction bnpDMultiply(n) {\\n  this[this.t] = this.am(0,n-1,this,0,0,this.t);\\n  ++this.t;\\n  this.clamp();\\n}\\n\\n// (protected) this += n << w words, this >= 0\\nfunction bnpDAddOffset(n,w) {\\n  while(this.t <= w) this[this.t++] = 0;\\n  this[w] += n;\\n  while(this[w] >= this.DV) {\\n    this[w] -= this.DV;\\n    if(++w >= this.t) this[this.t++] = 0;\\n    ++this[w];\\n  }\\n}\\n\\n// A \\\"null\\\" reducer\\nfunction NullExp() {}\\nfunction nNop(x) { return x; }\\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\\nfunction nSqrTo(x,r) { x.squareTo(r); }\\n\\nNullExp.prototype.convert = nNop;\\nNullExp.prototype.revert = nNop;\\nNullExp.prototype.mulTo = nMulTo;\\nNullExp.prototype.sqrTo = nSqrTo;\\n\\n// (public) this^e\\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\\n\\n// (protected) r = lower n words of \\\"this * a\\\", a.t <= n\\n// \\\"this\\\" should be the larger one if appropriate.\\nfunction bnpMultiplyLowerTo(a,n,r) {\\n  var i = Math.min(this.t+a.t,n);\\n  r.s = 0; // assumes a,this >= 0\\n  r.t = i;\\n  while(i > 0) r[--i] = 0;\\n  var j;\\n  for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);\\n  for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);\\n  r.clamp();\\n}\\n\\n// (protected) r = \\\"this * a\\\" without lower n words, n > 0\\n// \\\"this\\\" should be the larger one if appropriate.\\nfunction bnpMultiplyUpperTo(a,n,r) {\\n  --n;\\n  var i = r.t = this.t+a.t-n;\\n  r.s = 0; // assumes a,this >= 0\\n  while(--i >= 0) r[i] = 0;\\n  for(i = Math.max(n-this.t,0); i < a.t; ++i)\\n    r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);\\n  r.clamp();\\n  r.drShiftTo(1,r);\\n}\\n\\n// Barrett modular reduction\\nfunction Barrett(m) {\\n  // setup Barrett\\n  this.r2 = nbi();\\n  this.q3 = nbi();\\n  BigInteger.ONE.dlShiftTo(2*m.t,this.r2);\\n  this.mu = this.r2.divide(m);\\n  this.m = m;\\n}\\n\\nfunction barrettConvert(x) {\\n  if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\\n  else if(x.compareTo(this.m) < 0) return x;\\n  else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\\n}\\n\\nfunction barrettRevert(x) { return x; }\\n\\n// x = x mod m (HAC 14.42)\\nfunction barrettReduce(x) {\\n  x.drShiftTo(this.m.t-1,this.r2);\\n  if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\\n  this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\\n  this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\\n  while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\\n  x.subTo(this.r2,x);\\n  while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\\n}\\n\\n// r = x^2 mod m; x != r\\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\\n\\n// r = x*y mod m; x,y != r\\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\\n\\nBarrett.prototype.convert = barrettConvert;\\nBarrett.prototype.revert = barrettRevert;\\nBarrett.prototype.reduce = barrettReduce;\\nBarrett.prototype.mulTo = barrettMulTo;\\nBarrett.prototype.sqrTo = barrettSqrTo;\\n\\n// (public) this^e % m (HAC 14.85)\\nfunction bnModPow(e,m) {\\n  var i = e.bitLength(), k, r = nbv(1), z;\\n  if(i <= 0) return r;\\n  else if(i < 18) k = 1;\\n  else if(i < 48) k = 3;\\n  else if(i < 144) k = 4;\\n  else if(i < 768) k = 5;\\n  else k = 6;\\n  if(i < 8)\\n    z = new Classic(m);\\n  else if(m.isEven())\\n    z = new Barrett(m);\\n  else\\n    z = new Montgomery(m);\\n\\n  // precomputation\\n  var g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\\n  g[1] = z.convert(this);\\n  if(k > 1) {\\n    var g2 = nbi();\\n    z.sqrTo(g[1],g2);\\n    while(n <= km) {\\n      g[n] = nbi();\\n      z.mulTo(g2,g[n-2],g[n]);\\n      n += 2;\\n    }\\n  }\\n\\n  var j = e.t-1, w, is1 = true, r2 = nbi(), t;\\n  i = nbits(e[j])-1;\\n  while(j >= 0) {\\n    if(i >= k1) w = (e[j]>>(i-k1))&km;\\n    else {\\n      w = (e[j]&((1<<(i+1))-1))<<(k1-i);\\n      if(j > 0) w |= e[j-1]>>(this.DB+i-k1);\\n    }\\n\\n    n = k;\\n    while((w&1) == 0) { w >>= 1; --n; }\\n    if((i -= n) < 0) { i += this.DB; --j; }\\n    if(is1) {\\t// ret == 1, don't bother squaring or multiplying it\\n      g[w].copyTo(r);\\n      is1 = false;\\n    }\\n    else {\\n      while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\\n      if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\\n      z.mulTo(r2,g[w],r);\\n    }\\n\\n    while(j >= 0 && (e[j]&(1<<i)) == 0) {\\n      z.sqrTo(r,r2); t = r; r = r2; r2 = t;\\n      if(--i < 0) { i = this.DB-1; --j; }\\n    }\\n  }\\n  return z.revert(r);\\n}\\n\\n// (public) gcd(this,a) (HAC 14.54)\\nfunction bnGCD(a) {\\n  var x = (this.s<0)?this.negate():this.clone();\\n  var y = (a.s<0)?a.negate():a.clone();\\n  if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\\n  var i = x.getLowestSetBit(), g = y.getLowestSetBit();\\n  if(g < 0) return x;\\n  if(i < g) g = i;\\n  if(g > 0) {\\n    x.rShiftTo(g,x);\\n    y.rShiftTo(g,y);\\n  }\\n  while(x.signum() > 0) {\\n    if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\\n    if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\\n    if(x.compareTo(y) >= 0) {\\n      x.subTo(y,x);\\n      x.rShiftTo(1,x);\\n    }\\n    else {\\n      y.subTo(x,y);\\n      y.rShiftTo(1,y);\\n    }\\n  }\\n  if(g > 0) y.lShiftTo(g,y);\\n  return y;\\n}\\n\\n// (protected) this % n, n < 2^26\\nfunction bnpModInt(n) {\\n  if(n <= 0) return 0;\\n  var d = this.DV%n, r = (this.s<0)?n-1:0;\\n  if(this.t > 0)\\n    if(d == 0) r = this[0]%n;\\n    else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;\\n  return r;\\n}\\n\\n// (public) 1/this % m (HAC 14.61)\\nfunction bnModInverse(m) {\\n  var ac = m.isEven();\\n  if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\\n  var u = m.clone(), v = this.clone();\\n  var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\\n  while(u.signum() != 0) {\\n    while(u.isEven()) {\\n      u.rShiftTo(1,u);\\n      if(ac) {\\n        if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\\n        a.rShiftTo(1,a);\\n      }\\n      else if(!b.isEven()) b.subTo(m,b);\\n      b.rShiftTo(1,b);\\n    }\\n    while(v.isEven()) {\\n      v.rShiftTo(1,v);\\n      if(ac) {\\n        if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\\n        c.rShiftTo(1,c);\\n      }\\n      else if(!d.isEven()) d.subTo(m,d);\\n      d.rShiftTo(1,d);\\n    }\\n    if(u.compareTo(v) >= 0) {\\n      u.subTo(v,u);\\n      if(ac) a.subTo(c,a);\\n      b.subTo(d,b);\\n    }\\n    else {\\n      v.subTo(u,v);\\n      if(ac) c.subTo(a,c);\\n      d.subTo(b,d);\\n    }\\n  }\\n  if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\\n  if(d.compareTo(m) >= 0) return d.subtract(m);\\n  if(d.signum() < 0) d.addTo(m,d); else return d;\\n  if(d.signum() < 0) return d.add(m); else return d;\\n}\\n\\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\\n\\n// (public) test primality with certainty >= 1-.5^t\\nfunction bnIsProbablePrime(t) {\\n  var i, x = this.abs();\\n  if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {\\n    for(i = 0; i < lowprimes.length; ++i)\\n      if(x[0] == lowprimes[i]) return true;\\n    return false;\\n  }\\n  if(x.isEven()) return false;\\n  i = 1;\\n  while(i < lowprimes.length) {\\n    var m = lowprimes[i], j = i+1;\\n    while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\\n    m = x.modInt(m);\\n    while(i < j) if(m%lowprimes[i++] == 0) return false;\\n  }\\n  return x.millerRabin(t);\\n}\\n\\n// (protected) true if probably prime (HAC 4.24, Miller-Rabin)\\nfunction bnpMillerRabin(t) {\\n  var n1 = this.subtract(BigInteger.ONE);\\n  var k = n1.getLowestSetBit();\\n  if(k <= 0) return false;\\n  var r = n1.shiftRight(k);\\n  t = (t+1)>>1;\\n  if(t > lowprimes.length) t = lowprimes.length;\\n  var a = nbi();\\n  for(var i = 0; i < t; ++i) {\\n    a.fromInt(lowprimes[i]);\\n    var y = a.modPow(r,this);\\n    if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\\n      var j = 1;\\n      while(j++ < k && y.compareTo(n1) != 0) {\\n        y = y.modPowInt(2,this);\\n        if(y.compareTo(BigInteger.ONE) == 0) return false;\\n      }\\n      if(y.compareTo(n1) != 0) return false;\\n    }\\n  }\\n  return true;\\n}\\n\\n// protected\\nBigInteger.prototype.chunkSize = bnpChunkSize;\\nBigInteger.prototype.toRadix = bnpToRadix;\\nBigInteger.prototype.fromRadix = bnpFromRadix;\\nBigInteger.prototype.fromNumber = bnpFromNumber;\\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\\nBigInteger.prototype.changeBit = bnpChangeBit;\\nBigInteger.prototype.addTo = bnpAddTo;\\nBigInteger.prototype.dMultiply = bnpDMultiply;\\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\\nBigInteger.prototype.modInt = bnpModInt;\\nBigInteger.prototype.millerRabin = bnpMillerRabin;\\n\\n// public\\nBigInteger.prototype.clone = bnClone;\\nBigInteger.prototype.intValue = bnIntValue;\\nBigInteger.prototype.byteValue = bnByteValue;\\nBigInteger.prototype.shortValue = bnShortValue;\\nBigInteger.prototype.signum = bnSigNum;\\nBigInteger.prototype.toByteArray = bnToByteArray;\\nBigInteger.prototype.equals = bnEquals;\\nBigInteger.prototype.min = bnMin;\\nBigInteger.prototype.max = bnMax;\\nBigInteger.prototype.and = bnAnd;\\nBigInteger.prototype.or = bnOr;\\nBigInteger.prototype.xor = bnXor;\\nBigInteger.prototype.andNot = bnAndNot;\\nBigInteger.prototype.not = bnNot;\\nBigInteger.prototype.shiftLeft = bnShiftLeft;\\nBigInteger.prototype.shiftRight = bnShiftRight;\\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\\nBigInteger.prototype.bitCount = bnBitCount;\\nBigInteger.prototype.testBit = bnTestBit;\\nBigInteger.prototype.setBit = bnSetBit;\\nBigInteger.prototype.clearBit = bnClearBit;\\nBigInteger.prototype.flipBit = bnFlipBit;\\nBigInteger.prototype.add = bnAdd;\\nBigInteger.prototype.subtract = bnSubtract;\\nBigInteger.prototype.multiply = bnMultiply;\\nBigInteger.prototype.divide = bnDivide;\\nBigInteger.prototype.remainder = bnRemainder;\\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\\nBigInteger.prototype.modPow = bnModPow;\\nBigInteger.prototype.modInverse = bnModInverse;\\nBigInteger.prototype.pow = bnPow;\\nBigInteger.prototype.gcd = bnGCD;\\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\\n\\n// BigInteger interfaces not implemented in jsbn:\\n\\n// BigInteger(int signum, byte[] magnitude)\\n// double doubleValue()\\n// float floatValue()\\n// int hashCode()\\n// long longValue()\\n// static BigInteger valueOf(long val)\\n\\n/// METEOR WRAPPER\\nreturn BigInteger;\\n})();\\n\",\"// This package contains just enough of the original SRP code to\\n// support the backwards-compatibility upgrade path.\\n//\\n// An SRP (and possibly also accounts-srp) package should eventually be\\n// available in Atmosphere so that users can continue to use SRP if they\\n// want to.\\n\\nSRP = {};\\n\\n/**\\n * Generate a new SRP verifier. Password is the plaintext password.\\n *\\n * options is optional and can include:\\n * - identity: String. The SRP username to user. Mostly this is passed\\n *   in for testing.  Random UUID if not provided.\\n * - hashedIdentityAndPassword: combined identity and password, already hashed, for the SRP to bcrypt upgrade path.\\n * - salt: String. A salt to use.  Mostly this is passed in for\\n *   testing.  Random UUID if not provided.\\n * - SRP parameters (see _defaults and paramsFromOptions below)\\n */\\nSRP.generateVerifier = function (password, options) {\\n  var params = paramsFromOptions(options);\\n\\n  var salt = (options && options.salt) || Random.secret();\\n\\n  var identity;\\n  var hashedIdentityAndPassword = options && options.hashedIdentityAndPassword;\\n  if (!hashedIdentityAndPassword) {\\n    identity = (options && options.identity) || Random.secret();\\n    hashedIdentityAndPassword = params.hash(identity + \\\":\\\" + password);\\n  }\\n\\n  var x = params.hash(salt + hashedIdentityAndPassword);\\n  var xi = new BigInteger(x, 16);\\n  var v = params.g.modPow(xi, params.N);\\n\\n  return {\\n    identity: identity,\\n    salt: salt,\\n    verifier: v.toString(16)\\n  };\\n};\\n\\n// For use with check().\\nSRP.matchVerifier = {\\n  identity: String,\\n  salt: String,\\n  verifier: String\\n};\\n\\n\\n/**\\n * Default parameter values for SRP.\\n *\\n */\\nvar _defaults = {\\n  hash: function (x) { return SHA256(x).toLowerCase(); },\\n  N: new BigInteger(\\\"EEAF0AB9ADB38DD69C33F80AFA8FC5E86072618775FF3C0B9EA2314C9C256576D674DF7496EA81D3383B4813D692C6E0E0D5D8E250B98BE48E495C1D6089DAD15DC7D7B46154D6B6CE8EF4AD69B15D4982559B297BCF1885C529F566660E57EC68EDBC3C05726CC02FD4CBF4976EAA9AFD5138FE8376435B9FC61D2FC0EB06E3\\\", 16),\\n  g: new BigInteger(\\\"2\\\")\\n};\\n_defaults.k = new BigInteger(\\n  _defaults.hash(\\n    _defaults.N.toString(16) +\\n      _defaults.g.toString(16)),\\n  16);\\n\\n/**\\n * Process an options hash to create SRP parameters.\\n *\\n * Options can include:\\n * - hash: Function. Defaults to SHA256.\\n * - N: String or BigInteger. Defaults to 1024 bit value from RFC 5054\\n * - g: String or BigInteger. Defaults to 2.\\n * - k: String or BigInteger. Defaults to hash(N, g)\\n */\\nvar paramsFromOptions = function (options) {\\n  if (!options) // fast path\\n    return _defaults;\\n\\n  var ret = { ..._defaults };\\n\\n  ['N', 'g', 'k'].forEach(function (p) {\\n    if (options[p]) {\\n      if (typeof options[p] === \\\"string\\\")\\n        ret[p] = new BigInteger(options[p], 16);\\n      else if (options[p] instanceof BigInteger)\\n        ret[p] = options[p];\\n      else\\n        throw new Error(\\\"Invalid parameter: \\\" + p);\\n    }\\n  });\\n\\n  if (options.hash)\\n    ret.hash = function (x) { return options.hash(x).toLowerCase(); };\\n\\n  if (!options.k && (options.N || options.g || options.hash)) {\\n    ret.k = ret.hash(ret.N.toString(16) + ret.g.toString(16));\\n  }\\n\\n  return ret;\\n};\\n\"]}","minifier":"terser"}