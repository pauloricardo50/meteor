{"code":"!function(){var e=Package.meteor.Meteor,t=Package.meteor.global,n=Package.meteor.meteorEnv,o=Package.modules.meteorInstall,a=Package[\"babel-runtime\"].meteorBabelHelpers,r=Package.promise.Promise,i,c,s,l=o({node_modules:{meteor:{\"callback-hook\":{\"hook.js\":function(t,n,o){o.export({Hook:()=>r});const a=Object.prototype.hasOwnProperty;class r{constructor(e){if(e=e||{},this.nextCallbackId=0,this.callbacks=Object.create(null),this.bindEnvironment=!0,!1===e.bindEnvironment&&(this.bindEnvironment=!1),e.exceptionHandler)this.exceptionHandler=e.exceptionHandler;else if(e.debugPrintExceptions){if(\"string\"!=typeof e.debugPrintExceptions)throw new Error(\"Hook option debugPrintExceptions should be a string\");this.exceptionHandler=e.debugPrintExceptions}}register(t){var n=this.exceptionHandler||function(e){throw e};t=this.bindEnvironment?e.bindEnvironment(t,n):i(t,n);var o=this.nextCallbackId++;return this.callbacks[o]=t,{stop:()=>{delete this.callbacks[o]}}}each(t){e._nodeCodeMustBeInFiber();for(var n=Object.keys(this.callbacks),o=0;o<n.length;++o){var r=n[o],i;if(a.call(this.callbacks,r))if(!t(this.callbacks[r]))break}}}function i(t,n,o){if(!n||\"string\"==typeof n){var a=n||\"callback of async function\";n=function(t){e._debug(\"Exception in \"+a+\":\",t&&t.stack||t)}}return function(){try{for(var e=arguments.length,a=new Array(e),r=0;r<e;r++)a[r]=arguments[r];var i=t.apply(o,a)}catch(e){n(e)}return i}}}}}}},{extensions:[\".js\",\".json\"]})(\"/node_modules/meteor/callback-hook/hook.js\");Package._define(\"callback-hook\",l,{Hook:c})}();","sourcemap":"{\"version\":3,\"sources\":[\"packages/callback-hook/hook.js\"],\"names\":[\"module\",\"export\",\"Hook\",\"hasOwn\",\"Object\",\"prototype\",\"hasOwnProperty\",\"constructor\",\"options\",\"this\",\"nextCallbackId\",\"callbacks\",\"create\",\"bindEnvironment\",\"exceptionHandler\",\"debugPrintExceptions\",\"Error\",\"register\",\"callback\",\"exception\",\"Meteor\",\"dontBindEnvironment\",\"id\",\"stop\",\"each\",\"iterator\",\"_nodeCodeMustBeInFiber\",\"ids\",\"keys\",\"i\",\"length\",\"call\",\"func\",\"onException\",\"_this\",\"description\",\"error\",\"_debug\",\"stack\",\"_len\",\"arguments\",\"args\",\"Array\",\"_key\",\"ret\",\"apply\",\"e\"],\"mappings\":\"+QAAAA,EAAOC,QAAQC,KAAK,IAAIA,IAsCxB,MAAMC,EAASC,OAAOC,UAAUC,qBAEnBJ,EACXK,YAAYC,GAUV,GATAA,EAAUA,MACVC,KAAKC,eAAiB,EACtBD,KAAKE,UAAYP,OAAOQ,OAAO,MAE/BH,KAAKI,iBAAkB,GACS,IAA5BL,EAAQK,kBACVJ,KAAKI,iBAAkB,GAGrBL,EAAQM,iBACVL,KAAKK,iBAAmBN,EAAQM,sBAC3B,GAAIN,EAAQO,qBAAsB,CACvC,GAA4C,iBAAjCP,EAAQO,qBACjB,MAAM,IAAIC,MAAM,uDAElBP,KAAKK,iBAAmBN,EAAQO,sBAIpCE,SAASC,GACP,IAAIJ,EAAmBL,KAAKK,kBAAoB,SAAUK,GAIxD,MAAMA,GAIND,EADET,KAAKI,gBACIO,EAAOP,gBAAgBK,EAAUJ,GAEjCO,EAAoBH,EAAUJ,GAG3C,IAAIQ,EAAKb,KAAKC,iBAGd,OAFAD,KAAKE,UAAUW,GAAMJ,GAGnBK,KAAM,YACGd,KAAKE,UAAUW,KAe5BE,KAAKC,GAIHL,EAAOM,yBAGP,IADA,IAAIC,EAAMvB,OAAOwB,KAAKnB,KAAKE,WAClBkB,EAAI,EAAIA,EAAIF,EAAIG,SAAWD,EAAG,CACrC,IAAIP,EAAKK,EAAIE,GAGPX,EADN,GAAIf,EAAO4B,KAAKtB,KAAKE,UAAWW,GAE9B,IAAMG,EADShB,KAAKE,UAAUW,IAE5B,QAQV,SAASD,EAAoBW,EAAMC,EAAaC,GAC9C,IAAKD,GAAuC,iBAAjBA,EAA2B,CACpD,IAAIE,EAAcF,GAAe,6BACjCA,EAAc,SAAUG,GACtBhB,EAAOiB,OACL,gBAAkBF,EAAc,IAChCC,GAASA,EAAME,OAASF,IAK9B,OAAO,WACL,IAAI,IAAA,IAAAG,EAAAC,UAAAV,OADcW,EACd,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IADcF,EACdE,GAAAH,UAAAG,GACF,IAAIC,EAAMZ,EAAKa,MAAMX,EAAOO,GAC5B,MAAOK,GACPb,EAAYa,GAEd,OAAOF\",\"sourcesContent\":[\"// XXX This pattern is under development. Do not add more callsites\\n// using this package for now. See:\\n// https://meteor.hackpad.com/Design-proposal-Hooks-YxvgEW06q6f\\n//\\n// Encapsulates the pattern of registering callbacks on a hook.\\n//\\n// The `each` method of the hook calls its iterator function argument\\n// with each registered callback.  This allows the hook to\\n// conditionally decide not to call the callback (if, for example, the\\n// observed object has been closed or terminated).\\n//\\n// By default, callbacks are bound with `Meteor.bindEnvironment`, so they will be\\n// called with the Meteor environment of the calling code that\\n// registered the callback. Override by passing { bindEnvironment: false }\\n// to the constructor.\\n//\\n// Registering a callback returns an object with a single `stop`\\n// method which unregisters the callback.\\n//\\n// The code is careful to allow a callback to be safely unregistered\\n// while the callbacks are being iterated over.\\n//\\n// If the hook is configured with the `exceptionHandler` option, the\\n// handler will be called if a called callback throws an exception.\\n// By default (if the exception handler doesn't itself throw an\\n// exception, or if the iterator function doesn't return a falsy value\\n// to terminate the calling of callbacks), the remaining callbacks\\n// will still be called.\\n//\\n// Alternatively, the `debugPrintExceptions` option can be specified\\n// as string describing the callback.  On an exception the string and\\n// the exception will be printed to the console log with\\n// `Meteor._debug`, and the exception otherwise ignored.\\n//\\n// If an exception handler isn't specified, exceptions thrown in the\\n// callback will propagate up to the iterator function, and will\\n// terminate calling the remaining callbacks if not caught.\\n\\nconst hasOwn = Object.prototype.hasOwnProperty;\\n\\nexport class Hook {\\n  constructor(options) {\\n    options = options || {};\\n    this.nextCallbackId = 0;\\n    this.callbacks = Object.create(null);\\n    // Whether to wrap callbacks with Meteor.bindEnvironment\\n    this.bindEnvironment = true;\\n    if (options.bindEnvironment === false) {\\n      this.bindEnvironment = false;\\n    }\\n\\n    if (options.exceptionHandler) {\\n      this.exceptionHandler = options.exceptionHandler;\\n    } else if (options.debugPrintExceptions) {\\n      if (typeof options.debugPrintExceptions !== \\\"string\\\") {\\n        throw new Error(\\\"Hook option debugPrintExceptions should be a string\\\");\\n      }\\n      this.exceptionHandler = options.debugPrintExceptions;\\n    }\\n  }\\n\\n  register(callback) {\\n    var exceptionHandler = this.exceptionHandler || function (exception) {\\n      // Note: this relies on the undocumented fact that if bindEnvironment's\\n      // onException throws, and you are invoking the callback either in the\\n      // browser or from within a Fiber in Node, the exception is propagated.\\n      throw exception;\\n    };\\n\\n    if (this.bindEnvironment) {\\n      callback = Meteor.bindEnvironment(callback, exceptionHandler);\\n    } else {\\n      callback = dontBindEnvironment(callback, exceptionHandler);\\n    }\\n\\n    var id = this.nextCallbackId++;\\n    this.callbacks[id] = callback;\\n\\n    return {\\n      stop: () => {\\n        delete this.callbacks[id];\\n      }\\n    };\\n  }\\n\\n  // For each registered callback, call the passed iterator function\\n  // with the callback.\\n  //\\n  // The iterator function can choose whether or not to call the\\n  // callback.  (For example, it might not call the callback if the\\n  // observed object has been closed or terminated).\\n  //\\n  // The iteration is stopped if the iterator function returns a falsy\\n  // value or throws an exception.\\n  //\\n  each(iterator) {\\n    // Invoking bindEnvironment'd callbacks outside of a Fiber in Node doesn't\\n    // run them to completion (and exceptions thrown from onException are not\\n    // propagated), so we need to be in a Fiber.\\n    Meteor._nodeCodeMustBeInFiber();\\n\\n    var ids = Object.keys(this.callbacks);\\n    for (var i = 0;  i < ids.length;  ++i) {\\n      var id = ids[i];\\n      // check to see if the callback was removed during iteration\\n      if (hasOwn.call(this.callbacks, id)) {\\n        var callback = this.callbacks[id];\\n        if (! iterator(callback)) {\\n          break;\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n// Copied from Meteor.bindEnvironment and removed all the env stuff.\\nfunction dontBindEnvironment(func, onException, _this) {\\n  if (!onException || typeof(onException) === 'string') {\\n    var description = onException || \\\"callback of async function\\\";\\n    onException = function (error) {\\n      Meteor._debug(\\n        \\\"Exception in \\\" + description + \\\":\\\",\\n        error && error.stack || error\\n      );\\n    };\\n  }\\n\\n  return function (...args) {\\n    try {\\n      var ret = func.apply(_this, args);\\n    } catch (e) {\\n      onException(e);\\n    }\\n    return ret;\\n  };\\n}\\n\"]}","minifier":"terser"}