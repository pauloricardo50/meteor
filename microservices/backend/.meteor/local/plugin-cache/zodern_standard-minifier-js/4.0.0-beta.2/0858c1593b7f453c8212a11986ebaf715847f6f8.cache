{"code":"!function(){var t=Package.meteor.Meteor,e=Package.meteor.global,n=Package.meteor.meteorEnv,i=Package.ejson.EJSON,r=Package.modules.meteorInstall,a=Package[\"babel-runtime\"].meteorBabelHelpers,c=Package.promise.Promise,o=Package[\"ecmascript-runtime-client\"].Symbol,u=Package[\"ecmascript-runtime-client\"].Map,s=Package[\"ecmascript-runtime-client\"].Set,f,m,p=r({node_modules:{meteor:{\"id-map\":{\"id-map.js\":function(t,e,n){n.export({IdMap:function(){return c}});var r=Object.prototype.hasOwnProperty,c=function(){function t(t,e){this.clear(),this._idStringify=t||JSON.stringify,this._idParse=e||JSON.parse}var e=t.prototype;return e.get=function(){function t(t){var e=this._idStringify(t);return this._map[e]}return t}(),e.set=function(){function t(t,e){var n=this._idStringify(t);this._map[n]=e}return t}(),e.remove=function(){function t(t){var e=this._idStringify(t);delete this._map[e]}return t}(),e.has=function(){function t(t){var e=this._idStringify(t);return r.call(this._map,e)}return t}(),e.empty=function(){function t(){for(var t in a.sanitizeForInObject(this._map))return!1;return!0}return t}(),e.clear=function(){function t(){this._map=Object.create(null)}return t}(),e.forEach=function(){function t(t){for(var e=Object.keys(this._map),n=0;n<e.length;n++){var i;if(!1===t.call(null,this._map[e[n]],this._idParse(e[n])))return}}return t}(),e.size=function(){function t(){return Object.keys(this._map).length}return t}(),e.setDefault=function(){function t(t,e){var n=this._idStringify(t);return r.call(this._map,n)?this._map[n]:(this._map[n]=e,e)}return t}(),e.clone=function(){function e(){var e=new t(this._idStringify,this._idParse);return this.forEach(function(t,n){e.set(n,i.clone(t))}),e}return e}(),t}()}}}}},{extensions:[\".js\",\".json\"]})(\"/node_modules/meteor/id-map/id-map.js\");Package._define(\"id-map\",p,{IdMap:f})}();","sourcemap":"{\"version\":3,\"sources\":[\"packages/id-map/id-map.js\"],\"names\":[\"module\",\"export\",\"IdMap\",\"hasOwn\",\"Object\",\"prototype\",\"hasOwnProperty\",\"idStringify\",\"idParse\",\"this\",\"clear\",\"_idStringify\",\"JSON\",\"stringify\",\"_idParse\",\"parse\",\"get\",\"id\",\"key\",\"_map\",\"set\",\"value\",\"remove\",\"has\",\"call\",\"empty\",\"meteorBabelHelpers\",\"sanitizeForInObject\",\"create\",\"forEach\",\"iterator\",\"keys\",\"i\",\"length\",\"breakIfFalse\",\"size\",\"setDefault\",\"def\",\"clone\",\"EJSON\"],\"mappings\":\"kaAAAA,EAAOC,QAAQC,MAAM,WAAA,OAAIA,KAAzB,IAAMC,EAASC,OAAOC,UAAUC,eAEnBJ,aACX,SAAAA,EAAYK,EAAaC,GACvBC,KAAKC,QACLD,KAAKE,aAAeJ,GAAeK,KAAKC,UACxCJ,KAAKK,SAAWN,GAAWI,KAAKG,iCAQlCC,eAAA,SAAAA,EAAIC,GACF,IAAIC,EAAMT,KAAKE,aAAaM,GAC5B,OAAOR,KAAKU,KAAKD,iBAGnBE,eAAA,SAAAA,EAAIH,EAAII,GACN,IAAIH,EAAMT,KAAKE,aAAaM,GAC5BR,KAAKU,KAAKD,GAAOG,gBAGnBC,kBAAA,SAAAA,EAAOL,GACL,IAAIC,EAAMT,KAAKE,aAAaM,UACrBR,KAAKU,KAAKD,iBAGnBK,eAAA,SAAAA,EAAIN,GACF,IAAIC,EAAMT,KAAKE,aAAaM,GAC5B,OAAOd,EAAOqB,KAAKf,KAAKU,KAAMD,iBAGhCO,iBAAA,SAAAA,IACE,IAAK,IAAIP,KAATQ,EAAAC,oBAAgBlB,KAAKU,MACnB,OAAO,EAET,OAAO,gBAGTT,iBAAA,SAAAA,IACED,KAAKU,KAAOf,OAAOwB,OAAO,oBAI5BC,mBAAA,SAAAA,EAAQC,GAGN,IADA,IAAIC,EAAO3B,OAAO2B,KAAKtB,KAAKU,MACnBa,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CACpC,IAAIE,EAKJ,IAAqB,IALFJ,EAASN,KAC1B,KACAf,KAAKU,KAAKY,EAAKC,IACfvB,KAAKK,SAASiB,EAAKC,KAGnB,sBAKNG,gBAAA,SAAAA,IACE,OAAO/B,OAAO2B,KAAKtB,KAAKU,MAAMc,qBAGhCG,sBAAA,SAAAA,EAAWnB,EAAIoB,GACb,IAAInB,EAAMT,KAAKE,aAAaM,GAC5B,OAAId,EAAOqB,KAAKf,KAAKU,KAAMD,GAClBT,KAAKU,KAAKD,IAEnBT,KAAKU,KAAKD,GAAOmB,EACVA,iBAKTC,iBAAA,SAAAA,IACE,IAAIA,EAAQ,IAAIpC,EAAMO,KAAKE,aAAcF,KAAKK,UAI9C,OAHAL,KAAKoB,QAAQ,SAAUR,EAAOJ,GAC5BqB,EAAMlB,IAAIH,EAAIsB,EAAMD,MAAMjB,MAErBiB\",\"sourcesContent\":[\"const hasOwn = Object.prototype.hasOwnProperty;\\n\\nexport class IdMap {\\n  constructor(idStringify, idParse) {\\n    this.clear();\\n    this._idStringify = idStringify || JSON.stringify;\\n    this._idParse = idParse || JSON.parse;\\n  }\\n\\n// Some of these methods are designed to match methods on OrderedDict, since\\n// (eg) ObserveMultiplex and _CachingChangeObserver use them interchangeably.\\n// (Conceivably, this should be replaced with \\\"UnorderedDict\\\" with a specific\\n// set of methods that overlap between the two.)\\n\\n  get(id) {\\n    var key = this._idStringify(id);\\n    return this._map[key];\\n  }\\n\\n  set(id, value) {\\n    var key = this._idStringify(id);\\n    this._map[key] = value;\\n  }\\n\\n  remove(id) {\\n    var key = this._idStringify(id);\\n    delete this._map[key];\\n  }\\n\\n  has(id) {\\n    var key = this._idStringify(id);\\n    return hasOwn.call(this._map, key);\\n  }\\n\\n  empty() {\\n    for (let key in this._map) {\\n      return false;\\n    }\\n    return true;\\n  }\\n\\n  clear() {\\n    this._map = Object.create(null);\\n  }\\n\\n  // Iterates over the items in the map. Return `false` to break the loop.\\n  forEach(iterator) {\\n    // don't use _.each, because we can't break out of it.\\n    var keys = Object.keys(this._map);\\n    for (var i = 0; i < keys.length; i++) {\\n      var breakIfFalse = iterator.call(\\n        null,\\n        this._map[keys[i]],\\n        this._idParse(keys[i])\\n      );\\n      if (breakIfFalse === false) {\\n        return;\\n      }\\n    }\\n  }\\n\\n  size() {\\n    return Object.keys(this._map).length;\\n  }\\n\\n  setDefault(id, def) {\\n    var key = this._idStringify(id);\\n    if (hasOwn.call(this._map, key)) {\\n      return this._map[key];\\n    }\\n    this._map[key] = def;\\n    return def;\\n  }\\n\\n  // Assumes that values are EJSON-cloneable, and that we don't need to clone\\n  // IDs (ie, that nobody is going to mutate an ObjectId).\\n  clone() {\\n    var clone = new IdMap(this._idStringify, this._idParse);\\n    this.forEach(function (value, id) {\\n      clone.set(id, EJSON.clone(value));\\n    });\\n    return clone;\\n  }\\n}\\n\"]}","minifier":"terser"}