{"code":"!function(){var e=Package.meteor.Meteor,t=Package.meteor.global,i=Package.meteor.meteorEnv,a=Package.ejson.EJSON,r=Package.modules.meteorInstall,s=Package[\"babel-runtime\"].meteorBabelHelpers,n=Package.promise.Promise,o,m,h=r({node_modules:{meteor:{\"id-map\":{\"id-map.js\":function(e,t,i){i.export({IdMap:()=>s});const r=Object.prototype.hasOwnProperty;class s{constructor(e,t){this.clear(),this._idStringify=e||JSON.stringify,this._idParse=t||JSON.parse}get(e){var t=this._idStringify(e);return this._map[t]}set(e,t){var i=this._idStringify(e);this._map[i]=t}remove(e){var t=this._idStringify(e);delete this._map[t]}has(e){var t=this._idStringify(e);return r.call(this._map,t)}empty(){for(let e in this._map)return!1;return!0}clear(){this._map=Object.create(null)}forEach(e){for(var t=Object.keys(this._map),i=0;i<t.length;i++){var a;if(!1===e.call(null,this._map[t[i]],this._idParse(t[i])))return}}size(){return Object.keys(this._map).length}setDefault(e,t){var i=this._idStringify(e);return r.call(this._map,i)?this._map[i]:(this._map[i]=t,t)}clone(){var e=new s(this._idStringify,this._idParse);return this.forEach(function(t,i){e.set(i,a.clone(t))}),e}}}}}}},{extensions:[\".js\",\".json\"]})(\"/node_modules/meteor/id-map/id-map.js\");Package._define(\"id-map\",h,{IdMap:o})}();","sourcemap":"{\"version\":3,\"sources\":[\"packages/id-map/id-map.js\"],\"names\":[\"module\",\"export\",\"IdMap\",\"hasOwn\",\"Object\",\"prototype\",\"hasOwnProperty\",\"constructor\",\"idStringify\",\"idParse\",\"this\",\"clear\",\"_idStringify\",\"JSON\",\"stringify\",\"_idParse\",\"parse\",\"get\",\"id\",\"key\",\"_map\",\"set\",\"value\",\"remove\",\"has\",\"call\",\"empty\",\"create\",\"forEach\",\"iterator\",\"keys\",\"i\",\"length\",\"breakIfFalse\",\"size\",\"setDefault\",\"def\",\"clone\",\"EJSON\"],\"mappings\":\"8RAAAA,EAAOC,QAAQC,MAAM,IAAIA,IAAzB,MAAMC,EAASC,OAAOC,UAAUC,qBAEnBJ,EACXK,YAAYC,EAAaC,GACvBC,KAAKC,QACLD,KAAKE,aAAeJ,GAAeK,KAAKC,UACxCJ,KAAKK,SAAWN,GAAWI,KAAKG,MAQlCC,IAAIC,GACF,IAAIC,EAAMT,KAAKE,aAAaM,GAC5B,OAAOR,KAAKU,KAAKD,GAGnBE,IAAIH,EAAII,GACN,IAAIH,EAAMT,KAAKE,aAAaM,GAC5BR,KAAKU,KAAKD,GAAOG,EAGnBC,OAAOL,GACL,IAAIC,EAAMT,KAAKE,aAAaM,UACrBR,KAAKU,KAAKD,GAGnBK,IAAIN,GACF,IAAIC,EAAMT,KAAKE,aAAaM,GAC5B,OAAOf,EAAOsB,KAAKf,KAAKU,KAAMD,GAGhCO,QACE,IAAK,IAAIP,KAAOT,KAAKU,KACnB,OAAO,EAET,OAAO,EAGTT,QACED,KAAKU,KAAOhB,OAAOuB,OAAO,MAI5BC,QAAQC,GAGN,IADA,IAAIC,EAAO1B,OAAO0B,KAAKpB,KAAKU,MACnBW,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CACpC,IAAIE,EAKJ,IAAqB,IALFJ,EAASJ,KAC1B,KACAf,KAAKU,KAAKU,EAAKC,IACfrB,KAAKK,SAASe,EAAKC,KAGnB,QAKNG,OACE,OAAO9B,OAAO0B,KAAKpB,KAAKU,MAAMY,OAGhCG,WAAWjB,EAAIkB,GACb,IAAIjB,EAAMT,KAAKE,aAAaM,GAC5B,OAAIf,EAAOsB,KAAKf,KAAKU,KAAMD,GAClBT,KAAKU,KAAKD,IAEnBT,KAAKU,KAAKD,GAAOiB,EACVA,GAKTC,QACE,IAAIA,EAAQ,IAAInC,EAAMQ,KAAKE,aAAcF,KAAKK,UAI9C,OAHAL,KAAKkB,QAAQ,SAAUN,EAAOJ,GAC5BmB,EAAMhB,IAAIH,EAAIoB,EAAMD,MAAMf,MAErBe\",\"sourcesContent\":[\"const hasOwn = Object.prototype.hasOwnProperty;\\n\\nexport class IdMap {\\n  constructor(idStringify, idParse) {\\n    this.clear();\\n    this._idStringify = idStringify || JSON.stringify;\\n    this._idParse = idParse || JSON.parse;\\n  }\\n\\n// Some of these methods are designed to match methods on OrderedDict, since\\n// (eg) ObserveMultiplex and _CachingChangeObserver use them interchangeably.\\n// (Conceivably, this should be replaced with \\\"UnorderedDict\\\" with a specific\\n// set of methods that overlap between the two.)\\n\\n  get(id) {\\n    var key = this._idStringify(id);\\n    return this._map[key];\\n  }\\n\\n  set(id, value) {\\n    var key = this._idStringify(id);\\n    this._map[key] = value;\\n  }\\n\\n  remove(id) {\\n    var key = this._idStringify(id);\\n    delete this._map[key];\\n  }\\n\\n  has(id) {\\n    var key = this._idStringify(id);\\n    return hasOwn.call(this._map, key);\\n  }\\n\\n  empty() {\\n    for (let key in this._map) {\\n      return false;\\n    }\\n    return true;\\n  }\\n\\n  clear() {\\n    this._map = Object.create(null);\\n  }\\n\\n  // Iterates over the items in the map. Return `false` to break the loop.\\n  forEach(iterator) {\\n    // don't use _.each, because we can't break out of it.\\n    var keys = Object.keys(this._map);\\n    for (var i = 0; i < keys.length; i++) {\\n      var breakIfFalse = iterator.call(\\n        null,\\n        this._map[keys[i]],\\n        this._idParse(keys[i])\\n      );\\n      if (breakIfFalse === false) {\\n        return;\\n      }\\n    }\\n  }\\n\\n  size() {\\n    return Object.keys(this._map).length;\\n  }\\n\\n  setDefault(id, def) {\\n    var key = this._idStringify(id);\\n    if (hasOwn.call(this._map, key)) {\\n      return this._map[key];\\n    }\\n    this._map[key] = def;\\n    return def;\\n  }\\n\\n  // Assumes that values are EJSON-cloneable, and that we don't need to clone\\n  // IDs (ie, that nobody is going to mutate an ObjectId).\\n  clone() {\\n    var clone = new IdMap(this._idStringify, this._idParse);\\n    this.forEach(function (value, id) {\\n      clone.set(id, EJSON.clone(value));\\n    });\\n    return clone;\\n  }\\n}\\n\"]}","minifier":"terser"}