{"version":3,"sources":["meteor://ðŸ’»app/packages/okgrow:analytics/client/main.js"],"names":["module","export","analytics","OKGAnalytics","trackEventWhenReady","identifyWhenReady","link","default","v","Meteor","Mongo","Tracker","AnalyticsUsers","Collection","SETTINGS","settings","public","analyticsSettings","getUserEmail","userEmailAddress","userId","user","findOne","_id","fields","emails","address","services","facebook","email","github","google","initialized","trackLogins","startup","Package","autorun","userEmail"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,WAAS,EAAC,MAAIA;AAAf,CAAd;AAAyC,IAAIC,YAAJ,EAAiBD,SAAjB,EAA2BE,mBAA3B,EAA+CC,iBAA/C;AAAiEL,MAAM,CAACM,IAAP,CAAY,wBAAZ,EAAqC;AAACC,SAAO,CAACC,CAAD,EAAG;AAACL,gBAAY,GAACK,CAAb;AAAe,GAA3B;;AAA4BN,WAAS,CAACM,CAAD,EAAG;AAACN,aAAS,GAACM,CAAV;AAAY,GAArD;;AAAsDJ,qBAAmB,CAACI,CAAD,EAAG;AAACJ,uBAAmB,GAACI,CAApB;AAAsB,GAAnG;;AAAoGH,mBAAiB,CAACG,CAAD,EAAG;AAACH,qBAAiB,GAACG,CAAlB;AAAoB;;AAA7I,CAArC,EAAoL,CAApL;AAAuL,IAAIC,MAAJ;AAAWT,MAAM,CAACM,IAAP,CAAY,eAAZ,EAA4B;AAACG,QAAM,CAACD,CAAD,EAAG;AAACC,UAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIE,KAAJ;AAAUV,MAAM,CAACM,IAAP,CAAY,cAAZ,EAA2B;AAACI,OAAK,CAACF,CAAD,EAAG;AAACE,SAAK,GAACF,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAAkD,IAAIG,OAAJ;AAAYX,MAAM,CAACM,IAAP,CAAY,gBAAZ,EAA6B;AAACK,SAAO,CAACH,CAAD,EAAG;AAACG,WAAO,GAACH,CAAR;AAAU;;AAAtB,CAA7B,EAAqD,CAArD;;AAMza;AAEA,MAAMI,cAAc,GAAG,IAAIF,KAAK,CAACG,UAAV,CAAqB,gBAArB,CAAvB;AAEA,MAAMC,QAAQ,GAAIL,MAAM,CAACM,QAAP,IACGN,MAAM,CAACM,QAAP,CAAgBC,MADnB,IAEGP,MAAM,CAACM,QAAP,CAAgBC,MAAhB,CAAuBC,iBAF3B,IAGE,KAHnB;AAKAd,YAAY,CAACW,QAAD,CAAZ;;AAEA,MAAMI,YAAY,GAAG,SAASA,YAAT,GAAwB;AAC3C,MAAIC,gBAAgB,GAAG,IAAvB;;AAEA,MAAIV,MAAM,CAACW,MAAP,EAAJ,EAAqB;AACnB,UAAMC,IAAI,GAAGT,cAAc,CAACU,OAAf,CAAuB;AAAEC,SAAG,EAAEd,MAAM,CAACW,MAAP;AAAP,KAAvB,EAAiD;AAC5DI,YAAM,EAAE;AACNC,cAAM,EAAE,CADF;AAEN,mCAA2B,CAFrB;AAGN,iCAAyB,CAHnB;AAIN,iCAAyB;AAJnB;AADoD,KAAjD,CAAb;;AASA,QAAIJ,IAAI,IAAIA,IAAI,CAACI,MAAb,IAAuBJ,IAAI,CAACI,MAAL,CAAY,CAAZ,CAA3B,EAA2C;AACzCN,sBAAgB,GAAGE,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeC,OAAlC;AACD,KAFD,MAEO,IAAIL,IAAI,IAAIA,IAAI,CAACM,QAAjB,EAA2B;AAChC,YAAMA,QAAQ,GAAGN,IAAI,CAACM,QAAtB;;AAEA,UAAIA,QAAQ,CAACC,QAAb,EAAuB;AACrBT,wBAAgB,GAAGQ,QAAQ,CAACC,QAAT,CAAkBC,KAArC;AACD,OAFD,MAEO,IAAIF,QAAQ,CAACG,MAAb,EAAqB;AAC1BX,wBAAgB,GAAGQ,QAAQ,CAACG,MAAT,CAAgBD,KAAnC;AACD,OAFM,MAEA,IAAIF,QAAQ,CAACI,MAAb,EAAqB;AAC1BZ,wBAAgB,GAAGQ,QAAQ,CAACI,MAAT,CAAgBF,KAAnC;AACD;AACF;AACF;;AAED,SAAOV,gBAAP;AACD,CA7BD,C,CA+BA;AACA;AACA;;;AACA,IAAIa,WAAW,GAAG,KAAlB;;AAEA,MAAMC,WAAW,GAAG,SAASA,WAAT,GAAuB;AACzC;AACAxB,QAAM,CAACW,MAAP;;AAEA,MAAIY,WAAJ,EAAiB;AACf;AACA,QAAIvB,MAAM,CAACW,MAAP,EAAJ,EAAqB;AACnB;AACA;AACAf,uBAAiB,CAACI,MAAM,CAACW,MAAP,EAAD,EAAkB;AAAES,aAAK,EAAEX,YAAY;AAArB,OAAlB,CAAjB;AACAd,yBAAmB,CAAC,WAAD,CAAnB;AACD,KALD,MAKO;AACLA,yBAAmB,CAAC,YAAD,CAAnB;AACD;AACF;;AAED4B,aAAW,GAAG,IAAd;AACD,CAjBD;;AAmBAvB,MAAM,CAACyB,OAAP,CAAe,MAAM;AACnB,MAAIC,OAAO,CAAC,eAAD,CAAX,EAA8B;AAC5BxB,WAAO,CAACyB,OAAR,CAAgB,MAAM;AACpBC,eAAS,GAAGnB,YAAY,EAAxB;AACD,KAFD;AAIAP,WAAO,CAACyB,OAAR,CAAgBH,WAAhB;AACD;AACF,CARD,E","file":"/packages/okgrow_analytics.js","sourcesContent":["import OKGAnalytics, { analytics, trackEventWhenReady, identifyWhenReady } from '@okgrow/auto-analytics';\n\n/* eslint-disable import/no-extraneous-dependencies, import/extensions */\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\n/* eslint-enable */\n\nconst AnalyticsUsers = new Mongo.Collection('AnalyticsUsers');\n\nconst SETTINGS = (Meteor.settings\n                  && Meteor.settings.public\n                  && Meteor.settings.public.analyticsSettings)\n                || false;\n\nOKGAnalytics(SETTINGS);\n\nconst getUserEmail = function getUserEmail() {\n  let userEmailAddress = null;\n\n  if (Meteor.userId()) {\n    const user = AnalyticsUsers.findOne({ _id: Meteor.userId() }, {\n      fields: {\n        emails: 1,\n        'services.facebook.email': 1,\n        'services.google.email': 1,\n        'services.github.email': 1,\n      },\n    });\n\n    if (user && user.emails && user.emails[0]) {\n      userEmailAddress = user.emails[0].address;\n    } else if (user && user.services) {\n      const services = user.services;\n\n      if (services.facebook) {\n        userEmailAddress = services.facebook.email;\n      } else if (services.github) {\n        userEmailAddress = services.github.email;\n      } else if (services.google) {\n        userEmailAddress = services.google.email;\n      }\n    }\n  }\n\n  return userEmailAddress;\n};\n\n// Track and report Meteor's login & logout events to analytics.\n// TODO: Add support for sign up event.\n// TODO: Refactor to remove initialized.\nlet initialized = false;\n\nconst trackLogins = function trackLogins() {\n  // Don't run on first time. We need to access Meteor.userId() for reactivity.\n  Meteor.userId();\n\n  if (initialized) {\n    // When Meteor.userId() changes this will run.\n    if (Meteor.userId()) {\n      // TODO: I think it's not guaranteed that userEmail has been set because the\n      // 'AnalyticsUsers' publication might not be ready yet.\n      identifyWhenReady(Meteor.userId(), { email: getUserEmail() });\n      trackEventWhenReady('Signed in');\n    } else {\n      trackEventWhenReady('Signed out');\n    }\n  }\n\n  initialized = true;\n};\n\nMeteor.startup(() => {\n  if (Package['accounts-base']) {\n    Tracker.autorun(() => {\n      userEmail = getUserEmail();\n    });\n\n    Tracker.autorun(trackLogins);\n  }\n});\n\nexport { analytics }; // eslint-disable-line import/prefer-default-export\n"]}