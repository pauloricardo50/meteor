[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar _ = Package.underscore._;\nvar Promise = Package.promise.Promise;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nvar enableDebugLogging = Package['reywood:publish-composite'].enableDebugLogging;\nvar publishComposite = Package['reywood:publish-composite'].publishComposite;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\n\n/* Package-scope variables */\nvar key, ids, what, metadata, params, body, cacher, dotize;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"cultofcoders:grapher\":{\"main.server.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/main.server.js                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  NamedQueryStore: () => NamedQueryStore,\n  LinkConstants: () => LinkConstants\n});\nmodule.link(\"./lib/extension.js\");\nmodule.link(\"./lib/aggregate\");\nmodule.link(\"./lib/exposure/extension.js\");\nmodule.link(\"./lib/links/extension.js\");\nmodule.link(\"./lib/query/reducers/extension.js\");\nmodule.link(\"./lib/namedQuery/expose/extension.js\");\nlet NamedQueryStore;\nmodule.link(\"./lib/namedQuery/store\", {\n  default(v) {\n    NamedQueryStore = v;\n  }\n\n}, 0);\nlet LinkConstants;\nmodule.link(\"./lib/links/constants\", {\n  default(v) {\n    LinkConstants = v;\n  }\n\n}, 1);\nmodule.link(\"./lib/createQuery.js\", {\n  default: \"createQuery\"\n}, 2);\nmodule.link(\"./lib/namedQuery/namedQuery.server\", {\n  default: \"NamedQuery\"\n}, 3);\nmodule.link(\"./lib/exposure/exposure.js\", {\n  default: \"Exposure\"\n}, 4);\nmodule.link(\"./lib/namedQuery/cache/MemoryResultCacher\", {\n  default: \"MemoryResultCacher\"\n}, 5);\nmodule.link(\"./lib/namedQuery/cache/BaseResultCacher\", {\n  default: \"BaseResultCacher\"\n}, 6);\nmodule.link(\"./lib/compose\", {\n  default: \"compose\"\n}, 7);\nmodule.link(\"./lib/graphql\", {\n  \"*\": \"*\"\n}, 8);\nmodule.link(\"./lib/db\", {\n  default: \"db\"\n}, 9);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"aggregate.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/aggregate.js                                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Promise;\nmodule.link(\"meteor/promise\", {\n  Promise(v) {\n    Promise = v;\n  }\n\n}, 0);\n\nMongo.Collection.prototype.aggregate = function (pipelines, options = {}) {\n  const coll = this.rawCollection();\n  let result = Meteor.wrapAsync(coll.aggregate, coll)(pipelines, options); // We need to check If it's an AggregationCursor\n  // The reason we do this was because of the upgrade to 1.7 which involved a mongodb driver update\n\n  if (Array.isArray(result)) {\n    return result;\n  } else {\n    return Promise.await(result.toArray());\n  }\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"compose.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/compose.js                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet deepExtend;\nmodule.link(\"deep-extend\", {\n  default(v) {\n    deepExtend = v;\n  }\n\n}, 0);\nmodule.exportDefault(function (...args) {\n  return deepExtend({}, ...args);\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createQuery.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/createQuery.js                                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Query;\nmodule.link(\"./query/query.js\", {\n  default(v) {\n    Query = v;\n  }\n\n}, 0);\nlet NamedQuery;\nmodule.link(\"./namedQuery/namedQuery.js\", {\n  default(v) {\n    NamedQuery = v;\n  }\n\n}, 1);\nlet NamedQueryStore;\nmodule.link(\"./namedQuery/store.js\", {\n  default(v) {\n    NamedQueryStore = v;\n  }\n\n}, 2);\nmodule.exportDefault((...args) => {\n  if (typeof args[0] === 'string') {\n    let [name, body, options] = args;\n    options = options || {}; // It's a resolver query\n\n    if (_.isFunction(body)) {\n      return createNamedQuery(name, null, body, options);\n    }\n\n    const entryPointName = _.first(_.keys(body));\n\n    const collection = Mongo.Collection.get(entryPointName);\n\n    if (!collection) {\n      throw new Meteor.Error('invalid-name', `We could not find any collection with the name \"${entryPointName}\". Make sure it is imported prior to using this`);\n    }\n\n    return createNamedQuery(name, collection, body[entryPointName], options);\n  } else {\n    // Query Creation, it can have an endpoint as collection or as a NamedQuery\n    let [body, options] = args;\n    options = options || {};\n\n    const entryPointName = _.first(_.keys(body));\n\n    const collection = Mongo.Collection.get(entryPointName);\n\n    if (!collection) {\n      if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\n        console.warn(`You are creating a query with the entry point \"${entryPointName}\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.`);\n      }\n\n      return createNamedQuery(entryPointName, null, {}, {\n        params: body[entryPointName]\n      });\n    } else {\n      return createNormalQuery(collection, body[entryPointName], options);\n    }\n  }\n});\n\nfunction createNamedQuery(name, collection, body, options = {}) {\n  // if it exists already, we re-use it\n  const namedQuery = NamedQueryStore.get(name);\n  let query;\n\n  if (!namedQuery) {\n    query = new NamedQuery(name, collection, body, options);\n    NamedQueryStore.add(name, query);\n  } else {\n    query = namedQuery.clone(options.params);\n  }\n\n  return query;\n}\n\nfunction createNormalQuery(collection, body, options) {\n  return new Query(collection, body, options);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"db.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/db.js                                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nconst db = new Proxy({}, {\n  get: function (obj, prop) {\n    if (typeof prop === 'symbol') {\n      return obj[prop];\n    }\n\n    const collection = Mongo.Collection.get(prop);\n\n    if (!collection) {\n      return obj[prop];\n    }\n\n    return collection;\n  }\n});\nmodule.exportDefault(db);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/extension.js                                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Query;\nmodule.link(\"./query/query.js\", {\n  default(v) {\n    Query = v;\n  }\n\n}, 0);\nlet NamedQuery;\nmodule.link(\"./namedQuery/namedQuery.js\", {\n  default(v) {\n    NamedQuery = v;\n  }\n\n}, 1);\nlet NamedQueryStore;\nmodule.link(\"./namedQuery/store.js\", {\n  default(v) {\n    NamedQueryStore = v;\n  }\n\n}, 2);\n\n_.extend(Mongo.Collection.prototype, {\n  createQuery(...args) {\n    if (args.length === 0) {\n      return new Query(this, {}, {});\n    }\n\n    if (typeof args[0] === 'string') {\n      //NamedQuery\n      const [name, body, options] = args;\n      const query = new NamedQuery(name, this, body, options);\n      NamedQueryStore.add(name, query);\n      return query;\n    } else {\n      const [body, options] = args;\n      return new Query(this, body, options);\n    }\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposure\":{\"exposure.config.schema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/exposure.config.schema.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  ExposureDefaults: () => ExposureDefaults,\n  ExposureSchema: () => ExposureSchema,\n  validateBody: () => validateBody\n});\nlet createGraph;\nmodule.link(\"../query/lib/createGraph.js\", {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 0);\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nconst ExposureDefaults = {\n  blocking: false,\n  method: true,\n  publication: true\n};\nconst ExposureSchema = {\n  firewall: Match.Maybe(Match.OneOf(Function, [Function])),\n  maxLimit: Match.Maybe(Match.Integer),\n  maxDepth: Match.Maybe(Match.Integer),\n  publication: Match.Maybe(Boolean),\n  method: Match.Maybe(Boolean),\n  blocking: Match.Maybe(Boolean),\n  body: Match.Maybe(Object),\n  restrictedFields: Match.Maybe([String]),\n  restrictLinks: Match.Maybe(Match.OneOf(Function, [String]))\n};\n\nfunction validateBody(collection, body) {\n  try {\n    createGraph(collection, body);\n  } catch (e) {\n    throw new Meteor.Error('invalid-body', 'We could not build a valid graph when trying to create your exposure: ' + e.toString());\n  }\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"exposure.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/exposure.js                                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => Exposure\n});\nlet genCountEndpoint;\nmodule.link(\"../query/counts/genEndpoint.server.js\", {\n  default(v) {\n    genCountEndpoint = v;\n  }\n\n}, 0);\nlet createGraph;\nmodule.link(\"../query/lib/createGraph.js\", {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 1);\nlet recursiveCompose;\nmodule.link(\"../query/lib/recursiveCompose.js\", {\n  default(v) {\n    recursiveCompose = v;\n  }\n\n}, 2);\nlet hypernova;\nmodule.link(\"../query/hypernova/hypernova.js\", {\n  default(v) {\n    hypernova = v;\n  }\n\n}, 3);\nlet ExposureSchema, ExposureDefaults, validateBody;\nmodule.link(\"./exposure.config.schema.js\", {\n  ExposureSchema(v) {\n    ExposureSchema = v;\n  },\n\n  ExposureDefaults(v) {\n    ExposureDefaults = v;\n  },\n\n  validateBody(v) {\n    validateBody = v;\n  }\n\n}, 4);\nlet enforceMaxDepth;\nmodule.link(\"./lib/enforceMaxDepth.js\", {\n  default(v) {\n    enforceMaxDepth = v;\n  }\n\n}, 5);\nlet enforceMaxLimit;\nmodule.link(\"./lib/enforceMaxLimit.js\", {\n  default(v) {\n    enforceMaxLimit = v;\n  }\n\n}, 6);\nlet cleanBody;\nmodule.link(\"./lib/cleanBody.js\", {\n  default(v) {\n    cleanBody = v;\n  }\n\n}, 7);\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 8);\nlet restrictFieldsFn;\nmodule.link(\"./lib/restrictFields.js\", {\n  default(v) {\n    restrictFieldsFn = v;\n  }\n\n}, 9);\nlet restrictLinks;\nmodule.link(\"./lib/restrictLinks.js\", {\n  default(v) {\n    restrictLinks = v;\n  }\n\n}, 10);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 11);\nlet globalConfig = {};\n\nclass Exposure {\n  static setConfig(config) {\n    Object.assign(globalConfig, config);\n  }\n\n  static getConfig() {\n    return globalConfig;\n  }\n\n  static restrictFields(...args) {\n    return restrictFieldsFn(...args);\n  }\n\n  constructor(collection, config = {}) {\n    collection.__isExposedForGrapher = true;\n    collection.__exposure = this;\n    this.collection = collection;\n    this.name = `exposure_${collection._name}`;\n    this.config = config;\n\n    this._validateAndClean();\n\n    this.initSecurity();\n\n    if (this.config.publication) {\n      this.initPublication();\n    }\n\n    if (this.config.method) {\n      this.initMethod();\n    }\n\n    if (!this.config.method && !this.config.publication) {\n      throw new Meteor.Error('weird', 'If you want to expose your collection you need to specify at least one of [\"method\", \"publication\"] options to true');\n    }\n\n    this.initCountMethod();\n    this.initCountPublication();\n  }\n\n  _validateAndClean() {\n    if (typeof this.config === 'function') {\n      const firewall = this.config;\n      this.config = {\n        firewall\n      };\n    }\n\n    this.config = Object.assign({}, ExposureDefaults, Exposure.getConfig(), this.config);\n    check(this.config, ExposureSchema);\n\n    if (this.config.body) {\n      validateBody(this.collection, this.config.body);\n    }\n  }\n  /**\n   * Takes the body and intersects it with the exposure body, if it exists.\n   *\n   * @param body\n   * @param userId\n   * @returns {*}\n   */\n\n\n  getTransformedBody(body, userId) {\n    if (!this.config.body) {\n      return body;\n    }\n\n    const processedBody = this.getBody(userId);\n\n    if (processedBody === true) {\n      return;\n    }\n\n    return cleanBody(processedBody, body);\n  }\n  /**\n   * Gets the exposure body\n   */\n\n\n  getBody(userId) {\n    if (!this.config.body) {\n      throw new Meteor.Error('missing-body', 'Cannot get exposure body because it was not defined.');\n    }\n\n    let body;\n\n    if (_.isFunction(this.config.body)) {\n      body = this.config.body.call(this, userId);\n    } else {\n      body = this.config.body;\n    } // it means we allow everything, no need for cloning.\n\n\n    if (body === true) {\n      return true;\n    }\n\n    return deepClone(body, userId);\n  }\n  /**\n   * Initializing the publication for reactive query fetching\n   */\n\n\n  initPublication() {\n    const collection = this.collection;\n    const config = this.config;\n    const getTransformedBody = this.getTransformedBody.bind(this);\n    Meteor.publishComposite(this.name, function (body) {\n      let transformedBody = getTransformedBody(body);\n      const rootNode = createGraph(collection, transformedBody);\n      enforceMaxDepth(rootNode, config.maxDepth);\n      restrictLinks(rootNode, this.userId);\n      return recursiveCompose(rootNode, this.userId, {\n        bypassFirewalls: !!config.body\n      });\n    });\n  }\n  /**\n   * Initializez the method to retrieve the data via Meteor.call\n   */\n\n\n  initMethod() {\n    const collection = this.collection;\n    const config = this.config;\n    const getTransformedBody = this.getTransformedBody.bind(this);\n\n    const methodBody = function (body) {\n      if (!config.blocking) {\n        this.unblock();\n      }\n\n      let transformedBody = getTransformedBody(body);\n      const rootNode = createGraph(collection, transformedBody);\n      enforceMaxDepth(rootNode, config.maxDepth);\n      restrictLinks(rootNode, this.userId); // if there is no exposure body defined, then we need to apply firewalls\n\n      return hypernova(rootNode, this.userId, {\n        bypassFirewalls: !!config.body\n      });\n    };\n\n    Meteor.methods({\n      [this.name]: methodBody\n    });\n  }\n  /**\n   * Initializes the method to retrieve the count of the data via Meteor.call\n   * @returns {*}\n   */\n\n\n  initCountMethod() {\n    const collection = this.collection;\n    Meteor.methods({\n      [this.name + '.count'](body) {\n        this.unblock();\n        return collection.find(body.$filters || {}, {}, this.userId).count();\n      }\n\n    });\n  }\n  /**\n   * Initializes the reactive endpoint to retrieve the count of the data.\n   */\n\n\n  initCountPublication() {\n    const collection = this.collection;\n    genCountEndpoint(this.name, {\n      getCursor({\n        session\n      }) {\n        return collection.find(session.filters, {\n          fields: {\n            _id: 1\n          }\n        }, this.userId);\n      },\n\n      getSession(body) {\n        return {\n          filters: body.$filters || {}\n        };\n      }\n\n    });\n  }\n  /**\n   * Initializes security enforcement\n   * THINK: Maybe instead of overriding .find, I could store this data of security inside the collection object.\n   */\n\n\n  initSecurity() {\n    const collection = this.collection;\n    const {\n      firewall,\n      maxLimit,\n      restrictedFields\n    } = this.config;\n    const find = collection.find.bind(collection);\n    const findOne = collection.findOne.bind(collection);\n\n    collection.firewall = (filters, options, userId) => {\n      if (userId !== undefined) {\n        this._callFirewall({\n          collection: collection\n        }, filters, options, userId);\n\n        enforceMaxLimit(options, maxLimit);\n\n        if (restrictedFields) {\n          Exposure.restrictFields(filters, options, restrictedFields);\n        }\n      }\n    };\n\n    collection.find = function (filters, options = {}, userId = undefined) {\n      if (arguments.length == 0) {\n        filters = {};\n      } // If filters is undefined it should return an empty item\n\n\n      if (arguments.length > 0 && filters === undefined) {\n        return find(undefined, options);\n      }\n\n      collection.firewall(filters, options, userId);\n      return find(filters, options);\n    };\n\n    collection.findOne = function (filters, options = {}, userId = undefined) {\n      // If filters is undefined it should return an empty item\n      if (arguments.length > 0 && filters === undefined) {\n        return null;\n      }\n\n      if (typeof filters === 'string') {\n        filters = {\n          _id: filters\n        };\n      }\n\n      collection.firewall(filters, options, userId);\n      return findOne(filters, options);\n    };\n  }\n  /**\n   * @private\n   */\n\n\n  _callFirewall(...args) {\n    const {\n      firewall\n    } = this.config;\n\n    if (!firewall) {\n      return;\n    }\n\n    if (_.isArray(firewall)) {\n      firewall.forEach(fire => {\n        fire.call(...args);\n      });\n    } else {\n      firewall.call(...args);\n    }\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/extension.js                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Exposure;\nmodule.link(\"./exposure.js\", {\n  default(v) {\n    Exposure = v;\n  }\n\n}, 0);\nObject.assign(Mongo.Collection.prototype, {\n  expose(config) {\n    if (!Meteor.isServer) {\n      throw new Meteor.Error('not-allowed', `You can only expose a collection server side. ${this._name}`);\n    }\n\n    new Exposure(this, config);\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"cleanBody.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/lib/cleanBody.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => cleanBody\n});\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 0);\nlet cleanFilters, cleanOptions;\nmodule.link(\"./cleanSelectors\", {\n  cleanFilters(v) {\n    cleanFilters = v;\n  },\n\n  cleanOptions(v) {\n    cleanOptions = v;\n  }\n\n}, 1);\nlet dotize;\nmodule.link(\"../../query/lib/dotize\", {\n  default(v) {\n    dotize = v;\n  }\n\n}, 2);\n\nfunction cleanBody(main, second, ...args) {\n  let object = {};\n\n  if (second.$filters || second.$options) {\n    const fields = getFields(main);\n    cleanFilters(second.$filters, fields);\n    cleanOptions(second.$options, fields);\n  }\n\n  _.each(second, (secondValue, key) => {\n    if (key === '$filters' || key === '$options') {\n      object[key] = secondValue;\n      return;\n    }\n\n    let value = main[key];\n\n    if (value === undefined) {\n      return;\n    } // if the main value is a function, we run it.\n\n\n    if (_.isFunction(value)) {\n      value = value.call(null, ...args);\n    } // if the main value is undefined or false, we skip the merge\n\n\n    if (value === undefined || value === false) {\n      return;\n    } // we treat this specially, if the value is true\n\n\n    if (value === true) {\n      object[key] = _.isObject(secondValue) ? deepClone(secondValue) : value;\n      return;\n    } // if the main value is an object\n\n\n    if (_.isObject(value)) {\n      if (_.isObject(secondValue)) {\n        // if the second one is an object as well we run recursively run the intersection\n        object[key] = cleanBody(value, secondValue, ...args);\n      } // if it is not, then we will ignore it, because it won't make sense.\n      // to merge {a: 1} with 1.\n\n\n      return;\n    } // if the main value is not an object, it should be a truthy value like 1\n\n\n    if (_.isObject(secondValue)) {\n      // if the second value is an object, then we will keep it.\n      // this won't cause problem with deep nesting because\n      // when you specify links you will have the main value as an object, otherwise it will fail\n      // this is used for things like when you have a hash object like profile with multiple nesting fields, you can allow the client to specify only what he needs\n      object[key] = deepClone(secondValue);\n    } else {\n      // if the second value is not an object, we just store the first value\n      object[key] = value;\n    }\n  });\n\n  return object;\n}\n\nfunction getFields(body) {\n  return _.keys(dotize.convert(body));\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cleanSelectors.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/lib/cleanSelectors.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  cleanOptions: () => cleanOptions,\n  cleanFilters: () => cleanFilters,\n  fieldExists: () => fieldExists\n});\n\nfunction cleanOptions(options, ensureFields) {\n  if (!options) {\n    return;\n  }\n\n  if (options.fields) {\n    options.fields = _.pick(options.fields, ...ensureFields);\n  }\n\n  if (options.sort) {\n    options.sort = _.pick(options.sort, ...ensureFields);\n  }\n}\n\nconst deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\nconst special = [...deepFilterFieldsArray, ...deepFilterFieldsObject];\n\nfunction cleanFilters(filters, ensureFields) {\n  if (!filters) {\n    return;\n  }\n\n  _.each(filters, (value, key) => {\n    if (!_.contains(special, key)) {\n      if (!fieldExists(ensureFields, key)) {\n        delete filters[key];\n      }\n    }\n  });\n\n  deepFilterFieldsArray.forEach(field => {\n    if (filters[field]) {\n      filters[field].forEach(element => cleanFilters(element, ensureFields));\n    }\n  });\n  deepFilterFieldsObject.forEach(field => {\n    if (filters[field]) {\n      cleanFilters(filters[field], ensureFields);\n    }\n  });\n}\n\nfunction fieldExists(fields, key) {\n  for (let i = 0; i < fields.length; i++) {\n    if (fields[i] === key || key.indexOf(fields[i] + '.') === 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"enforceMaxDepth.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/lib/enforceMaxDepth.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  getDepth: () => getDepth\n});\nmodule.exportDefault(function (node, maxDepth) {\n  if (maxDepth === undefined) {\n    return node;\n  }\n\n  const depth = getDepth(node);\n\n  if (depth > maxDepth) {\n    throw new Meteor.Error('too-deep', 'Your graph request is too deep and it is not allowed.');\n  }\n\n  return node;\n});\n\nfunction getDepth(node) {\n  if (node.collectionNodes.length === 0) {\n    return 1;\n  }\n\n  return 1 + _.max(_.map(node.collectionNodes, getDepth));\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"enforceMaxLimit.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/lib/enforceMaxLimit.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault(function (options, maxLimit) {\n  if (maxLimit === undefined) {\n    return;\n  }\n\n  if (options.limit) {\n    if (options.limit > maxLimit) {\n      options.limit = maxLimit;\n    }\n  } else {\n    options.limit = maxLimit;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"restrictFields.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/lib/restrictFields.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => restrictFields\n});\nconst deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\n/**\n * This is used to restrict some fields to some users, by passing the fields as array in the exposure object\n * For example in an user exposure: restrictFields(options, ['services', 'createdAt'])\n *\n * @param filters Object\n * @param options Object\n * @param restrictedFields Array\n */\n\nfunction restrictFields(filters, options, restrictedFields) {\n  if (!_.isArray(restrictedFields)) {\n    throw new Meteor.Error('invalid-parameters', 'Please specify an array of restricted fields.');\n  }\n\n  cleanFilters(filters, restrictedFields);\n  cleanOptions(options, restrictedFields);\n}\n\n/**\n * Deep cleans filters\n *\n * @param filters\n * @param restrictedFields\n */\nfunction cleanFilters(filters, restrictedFields) {\n  if (filters) {\n    cleanObject(filters, restrictedFields);\n  }\n\n  deepFilterFieldsArray.forEach(field => {\n    if (filters[field]) {\n      filters[field].forEach(element => cleanFilters(element, restrictedFields));\n    }\n  });\n  deepFilterFieldsObject.forEach(field => {\n    if (filters[field]) {\n      cleanFilters(filters[field], restrictedFields);\n    }\n  });\n}\n/**\n * Deeply cleans options\n *\n * @param options\n * @param restrictedFields\n */\n\n\nfunction cleanOptions(options, restrictedFields) {\n  if (options.fields) {\n    cleanObject(options.fields, restrictedFields);\n\n    if (_.keys(options.fields).length === 0) {\n      _.extend(options.fields, {\n        _id: 1\n      });\n    }\n  } else {\n    options.fields = {\n      _id: 1\n    };\n  }\n\n  if (options.sort) {\n    cleanObject(options.sort, restrictedFields);\n  }\n}\n/**\n * Cleans the object (not deeply)\n *\n * @param object\n * @param restrictedFields\n */\n\n\nfunction cleanObject(object, restrictedFields) {\n  _.each(object, (value, key) => {\n    restrictedFields.forEach(restrictedField => {\n      if (matching(restrictedField, key)) {\n        delete object[key];\n      }\n    });\n  });\n}\n/**\n * Returns true if field == subfield or if `${field}.` INCLUDED in subfield\n * Example: \"profile\" and \"profile.firstName\" will be a matching field\n * @param field\n * @param subfield\n * @returns {boolean}\n */\n\n\nfunction matching(field, subfield) {\n  if (field === subfield) {\n    return true;\n  }\n\n  return subfield.slice(0, field.length + 1) === field + '.';\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"restrictLinks.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/exposure/lib/restrictLinks.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => restrictLinks,\n  getLinks: () => getLinks\n});\n\nfunction restrictLinks(parentNode, ...args) {\n  const restrictedLinks = getLinks(parentNode, ...args);\n\n  if (!restrictedLinks || restrictedLinks.length) {\n    return;\n  }\n\n  _.each(parentNode.collectionNodes, collectionNode => {\n    if (_.contains(restrictedLinks, collectionNode.linkName)) {\n      parentNode.remove(collectionNode);\n    }\n  });\n}\n\nfunction getLinks(node, ...args) {\n  if (node.collection && node.collection.__exposure) {\n    const exposure = node.collection.__exposure;\n\n    if (exposure.config.restrictLinks) {\n      const configRestrictLinks = exposure.config.restrictLinks;\n\n      if (_.isArray(configRestrictLinks)) {\n        return configRestrictLinks;\n      }\n\n      return configRestrictLinks(...args);\n    }\n  }\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"graphql\":{\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/graphql/index.js                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  astToQuery: () => astToQuery\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet astToQuery;\nmodule.link(\"./lib/astToQuery\", {\n  default(v) {\n    astToQuery = v;\n  }\n\n}, 1);\nmodule.link(\"./lib/defaults\", {\n  setAstToQueryDefaults: \"setAstToQueryDefaults\"\n}, 2);\nmodule.link(\"./lib/astToBody\", {\n  default: \"astToBody\"\n}, 3);\nObject.assign(Mongo.Collection.prototype, {\n  astToQuery\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"astToBody.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/graphql/lib/astToBody.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  Symbols: () => Symbols,\n  default: () => astToBody\n});\nconst Symbols = {\n  ARGUMENTS: Symbol('arguments')\n};\n\nfunction astToBody(ast) {\n  const fieldNodes = ast.fieldNodes;\n  const body = extractSelectionSet(ast.fieldNodes[0].selectionSet);\n  return body;\n}\n\nfunction extractSelectionSet(set) {\n  let body = {};\n  set.selections.forEach(el => {\n    if (!el.selectionSet) {\n      body[el.name.value] = 1;\n    } else {\n      body[el.name.value] = extractSelectionSet(el.selectionSet);\n\n      if (el.arguments.length) {\n        let argumentMap = {};\n        el.arguments.forEach(arg => {\n          argumentMap[arg.name.value] = arg.value.value;\n        });\n        body[el.name.value][Symbols.ARGUMENTS] = argumentMap;\n      }\n    }\n  });\n  return body;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"astToQuery.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/graphql/lib/astToQuery.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => astToQuery,\n  getMaxDepth: () => getMaxDepth,\n  deny: () => deny,\n  clearEmptyObjects: () => clearEmptyObjects,\n  createGetArgs: () => createGetArgs\n});\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet astToBody, Symbols;\nmodule.link(\"./astToBody\", {\n  default(v) {\n    astToBody = v;\n  },\n\n  Symbols(v) {\n    Symbols = v;\n  }\n\n}, 1);\nlet defaults;\nmodule.link(\"./defaults\", {\n  default(v) {\n    defaults = v;\n  }\n\n}, 2);\nlet intersectDeep;\nmodule.link(\"../../query/lib/intersectDeep\", {\n  default(v) {\n    intersectDeep = v;\n  }\n\n}, 3);\nlet enforceMaxLimit;\nmodule.link(\"../../exposure/lib/enforceMaxLimit\", {\n  default(v) {\n    enforceMaxLimit = v;\n  }\n\n}, 4);\nconst Errors = {\n  MAX_DEPTH: 'The maximum depth of this request exceeds the depth allowed.'\n};\n\nfunction astToQuery(ast, config = {}) {\n  const collection = this;\n  check(config, {\n    embody: Match.Maybe(Function),\n    $filters: Match.Maybe(Object),\n    $options: Match.Maybe(Object),\n    maxDepth: Match.Maybe(Number),\n    maxLimit: Match.Maybe(Number),\n    deny: Match.Maybe([String]),\n    intersect: Match.Maybe(Object)\n  });\n  config = Object.assign({\n    $options: {},\n    $filters: {}\n  }, defaults, config); // get the body\n\n  let body = astToBody(ast); // first we do the intersection\n\n  if (config.intersect) {\n    body = intersectDeep(config.intersect, body);\n  } // enforce the maximum amount of data we allow to retrieve\n\n\n  if (config.maxLimit) {\n    enforceMaxLimit(config.$options, config.maxLimit);\n  } // figure out depth based\n\n\n  if (config.maxDepth) {\n    const currentMaxDepth = getMaxDepth(body);\n\n    if (currentMaxDepth > config.maxDepth) {\n      throw Errors.MAX_DEPTH;\n    }\n  }\n\n  if (config.deny) {\n    deny(body, config.deny);\n  }\n\n  Object.assign(body, {\n    $filters: config.$filters,\n    $options: config.$options\n  });\n\n  if (config.embody) {\n    const getArgs = createGetArgs(body);\n    config.embody.call(null, {\n      body,\n      getArgs\n    });\n  } // we return the query\n\n\n  return this.createQuery(body);\n}\n\nfunction getMaxDepth(body) {\n  let depths = [];\n\n  for (key in body) {\n    if (_.isObject(body[key])) {\n      depths.push(getMaxDepth(body[key]));\n    }\n  }\n\n  if (depths.length === 0) {\n    return 1;\n  }\n\n  return Math.max(...depths) + 1;\n}\n\nfunction deny(body, fields) {\n  fields.forEach(field => {\n    let parts = field.split('.');\n    let accessor = body;\n\n    while (parts.length != 0) {\n      if (parts.length === 1) {\n        delete accessor[parts[0]];\n      } else {\n        if (!_.isObject(accessor)) {\n          break;\n        }\n\n        accessor = accessor[parts[0]];\n      }\n\n      parts.shift();\n    }\n  });\n  return clearEmptyObjects(body);\n}\n\nfunction clearEmptyObjects(body) {\n  // clear empty nodes then back-propagate\n  for (let key in body) {\n    if (_.isObject(body[key])) {\n      const shouldDelete = clearEmptyObjects(body[key]);\n\n      if (shouldDelete) {\n        delete body[key];\n      }\n    }\n  }\n\n  return Object.keys(body).length === 0;\n}\n\nfunction createGetArgs(body) {\n  return function (path) {\n    const parts = path.split('.');\n    let stopped = false;\n    let accessor = body;\n\n    for (var i = 0; i < parts.length; i++) {\n      if (!accessor) {\n        stopped = true;\n        break;\n      }\n\n      if (accessor[parts[i]]) {\n        accessor = accessor[parts[i]];\n      }\n    }\n\n    if (stopped) {\n      return {};\n    }\n\n    if (accessor) {\n      return accessor[Symbols.ARGUMENTS] || {};\n    }\n  };\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"defaults.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/graphql/lib/defaults.js                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  setAstToQueryDefaults: () => setAstToQueryDefaults\n});\nlet defaults = {};\nmodule.exportDefault(defaults);\n\nfunction setAstToQueryDefaults(object) {\n  Object.assign(defaults, object);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"links\":{\"config.schema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/config.schema.js                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  DenormalizeSchema: () => DenormalizeSchema,\n  LinkConfigDefaults: () => LinkConfigDefaults,\n  LinkConfigSchema: () => LinkConfigSchema\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nconst DenormalizeSchema = {\n  field: String,\n  body: Object,\n  bypassSchema: Match.Maybe(Boolean)\n};\nconst LinkConfigDefaults = {\n  type: 'one'\n};\nconst LinkConfigSchema = {\n  type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\n  collection: Match.Maybe(Match.Where(collection => {\n    // We do like this so it works with other types of collections \n    // like FS.Collection\n    return _.isObject(collection) && (collection instanceof Mongo.Collection || !!collection._collection);\n  })),\n  field: Match.Maybe(String),\n  metadata: Match.Maybe(Boolean),\n  inversedBy: Match.Maybe(String),\n  index: Match.Maybe(Boolean),\n  unique: Match.Maybe(Boolean),\n  autoremove: Match.Maybe(Boolean),\n  denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema))\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/constants.js                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  LINK_STORAGE: () => LINK_STORAGE\n});\nconst LINK_STORAGE = '__links';\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extension.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/extension.js                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet LINK_STORAGE;\nmodule.link(\"./constants.js\", {\n  LINK_STORAGE(v) {\n    LINK_STORAGE = v;\n  }\n\n}, 1);\nlet Linker;\nmodule.link(\"./linker.js\", {\n  default(v) {\n    Linker = v;\n  }\n\n}, 2);\nObject.assign(Mongo.Collection.prototype, {\n  /**\n   * The data we add should be valid for config.schema.js\n   */\n  addLinks(data) {\n    if (!this[LINK_STORAGE]) {\n      this[LINK_STORAGE] = {};\n    }\n\n    _.each(data, (linkConfig, linkName) => {\n      if (this[LINK_STORAGE][linkName]) {\n        throw new Meteor.Error(`You cannot add the link with name: ${linkName} because it was already added to ${this._name} collection`);\n      }\n\n      const linker = new Linker(this, linkName, linkConfig);\n\n      _.extend(this[LINK_STORAGE], {\n        [linkName]: linker\n      });\n    });\n  },\n\n  getLinks() {\n    return this[LINK_STORAGE];\n  },\n\n  getLinker(name) {\n    if (this[LINK_STORAGE]) {\n      return this[LINK_STORAGE][name];\n    }\n  },\n\n  hasLink(name) {\n    if (!this[LINK_STORAGE]) {\n      return false;\n    }\n\n    return !!this[LINK_STORAGE][name];\n  },\n\n  getLink(objectOrId, name) {\n    let linkData = this[LINK_STORAGE];\n\n    if (!linkData) {\n      throw new Meteor.Error(`There are no links defined for collection: ${this._name}`);\n    }\n\n    if (!linkData[name]) {\n      throw new Meteor.Error(`There is no link ${name} for collection: ${this._name}`);\n    }\n\n    const linker = linkData[name];\n    let object = objectOrId;\n\n    if (typeof objectOrId == 'string') {\n      if (!linker.isVirtual()) {\n        object = this.findOne(objectOrId, {\n          fields: {\n            [linker.linkStorageField]: 1\n          }\n        });\n      } else {\n        object = {\n          _id: objectOrId\n        };\n      }\n\n      if (!object) {\n        throw new Meteor.Error(`We could not find any object with _id: \"${objectOrId}\" within the collection: ${this._name}`);\n      }\n    }\n\n    return linkData[name].createLink(object);\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linker.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linker.js                                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => Linker\n});\nlet LinkMany;\nmodule.link(\"./linkTypes/linkMany.js\", {\n  default(v) {\n    LinkMany = v;\n  }\n\n}, 0);\nlet LinkManyMeta;\nmodule.link(\"./linkTypes/linkManyMeta.js\", {\n  default(v) {\n    LinkManyMeta = v;\n  }\n\n}, 1);\nlet LinkOne;\nmodule.link(\"./linkTypes/linkOne.js\", {\n  default(v) {\n    LinkOne = v;\n  }\n\n}, 2);\nlet LinkOneMeta;\nmodule.link(\"./linkTypes/linkOneMeta.js\", {\n  default(v) {\n    LinkOneMeta = v;\n  }\n\n}, 3);\nlet LinkConfigSchema, LinkConfigDefaults;\nmodule.link(\"./config.schema.js\", {\n  LinkConfigSchema(v) {\n    LinkConfigSchema = v;\n  },\n\n  LinkConfigDefaults(v) {\n    LinkConfigDefaults = v;\n  }\n\n}, 4);\nlet smartArguments;\nmodule.link(\"./linkTypes/lib/smartArguments\", {\n  default(v) {\n    smartArguments = v;\n  }\n\n}, 5);\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 6);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 7);\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 8);\nlet access;\nmodule.link(\"fs\", {\n  access(v) {\n    access = v;\n  }\n\n}, 9);\n\nclass Linker {\n  /**\n   * @param mainCollection\n   * @param linkName\n   * @param linkConfig\n   */\n  constructor(mainCollection, linkName, linkConfig) {\n    this.mainCollection = mainCollection;\n    this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n    this.linkName = linkName; // check linkName must not exist in schema\n\n    this._validateAndClean(); // initialize cascade removal hooks.\n\n\n    this._initAutoremove();\n\n    this._initDenormalization();\n\n    if (this.isVirtual()) {\n      // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n      if (!linkConfig.autoremove) {\n        this._handleReferenceRemovalForVirtualLinks();\n      }\n    } else {\n      this._initIndex();\n    }\n  }\n  /**\n   * Values which represent for the relation a single link\n   * @returns {string[]}\n   */\n\n\n  get oneTypes() {\n    return ['one', '1'];\n  }\n  /**\n   * Returns the strategies: one, many, one-meta, many-meta\n   * @returns {string}\n   */\n\n\n  get strategy() {\n    let strategy = this.isMany() ? 'many' : 'one';\n\n    if (this.linkConfig.metadata) {\n      strategy += '-meta';\n    }\n\n    return strategy;\n  }\n  /**\n   * Returns the field name in the document where the actual relationships are stored.\n   * @returns string\n   */\n\n\n  get linkStorageField() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.linkStorageField;\n    }\n\n    return this.linkConfig.field;\n  }\n  /**\n   * The collection that is linked with the current collection\n   * @returns Mongo.Collection\n   */\n\n\n  getLinkedCollection() {\n    return this.linkConfig.collection;\n  }\n  /**\n   * If the relationship for this link is of \"many\" type.\n   */\n\n\n  isMany() {\n    return !this.isSingle();\n  }\n  /**\n   * If the relationship for this link contains metadata\n   */\n\n\n  isMeta() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.isMeta();\n    }\n\n    return !!this.linkConfig.metadata;\n  }\n  /**\n   * @returns {boolean}\n   */\n\n\n  isSingle() {\n    if (this.isVirtual()) {\n      return this.linkConfig.relatedLinker.isSingle();\n    }\n\n    return _.contains(this.oneTypes, this.linkConfig.type);\n  }\n  /**\n   * @returns {boolean}\n   */\n\n\n  isVirtual() {\n    return !!this.linkConfig.inversedBy;\n  }\n  /**\n   * Should return a single result.\n   */\n\n\n  isOneResult() {\n    return this.isVirtual() && this.linkConfig.relatedLinker.linkConfig.unique || !this.isVirtual() && this.isSingle();\n  }\n  /**\n   * @param object\n   * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n   *\n   * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n   */\n\n\n  createLink(object, collection = null) {\n    let helperClass = this._getHelperClass();\n\n    return new helperClass(this, object, collection);\n  }\n  /**\n   * @returns {*}\n   * @private\n   */\n\n\n  _validateAndClean() {\n    if (!this.linkConfig.collection) {\n      throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you did not provide a collection.`);\n    }\n\n    if (typeof this.linkConfig.collection === 'string') {\n      const collectionName = this.linkConfig.collection;\n      this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n      if (!this.linkConfig.collection) {\n        throw new Meteor.Error('invalid-collection', `Could not find a collection with the name: ${collectionName}`);\n      }\n    }\n\n    if (this.isVirtual()) {\n      return this._prepareVirtual();\n    } else {\n      if (!this.linkConfig.type) {\n        this.linkConfig.type = 'one';\n      }\n\n      if (!this.linkConfig.field) {\n        this.linkConfig.field = this._generateFieldName();\n      } else {\n        if (this.linkConfig.field == this.linkName) {\n          throw new Meteor.Error('invalid-config', `For the link ${this.linkName} you must not use the same name for the field, otherwise it will cause conflicts when fetching data`);\n        }\n      }\n    }\n\n    check(this.linkConfig, LinkConfigSchema);\n  }\n  /**\n   * We need to apply same type of rules in this case.\n   * @private\n   */\n\n\n  _prepareVirtual() {\n    const {\n      collection,\n      inversedBy\n    } = this.linkConfig;\n    let linker = collection.getLinker(inversedBy);\n\n    if (!linker) {\n      // it is possible that the collection doesn't have a linker created yet.\n      // so we will create it on startup after all links have been defined\n      Meteor.startup(() => {\n        linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n          throw new Meteor.Error(`You tried setting up an inversed link in \"${this.mainCollection._name}\" pointing to collection: \"${collection._name}\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`);\n        } else {\n          this._setupVirtualConfig(linker);\n        }\n      });\n    } else {\n      this._setupVirtualConfig(linker);\n    }\n  }\n  /**\n   * @param linker\n   * @private\n   */\n\n\n  _setupVirtualConfig(linker) {\n    const virtualLinkConfig = linker.linkConfig;\n\n    if (!virtualLinkConfig) {\n      throw new Meteor.Error(`There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`);\n    }\n\n    _.extend(this.linkConfig, {\n      metadata: virtualLinkConfig.metadata,\n      relatedLinker: linker\n    });\n  }\n  /**\n   * Depending on the strategy, we create the proper helper class\n   * @private\n   */\n\n\n  _getHelperClass() {\n    switch (this.strategy) {\n      case 'many-meta':\n        return LinkManyMeta;\n\n      case 'many':\n        return LinkMany;\n\n      case 'one-meta':\n        return LinkOneMeta;\n\n      case 'one':\n        return LinkOne;\n    }\n\n    throw new Meteor.Error('invalid-strategy', `${this.strategy} is not a valid strategy`);\n  }\n  /**\n   * If field name not present, we generate it.\n   * @private\n   */\n\n\n  _generateFieldName() {\n    let cleanedCollectionName = this.linkConfig.collection._name.replace(/\\./g, '_');\n\n    let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n    switch (this.strategy) {\n      case 'many-meta':\n        return `${defaultFieldPrefix}_metas`;\n\n      case 'many':\n        return `${defaultFieldPrefix}_ids`;\n\n      case 'one-meta':\n        return `${defaultFieldPrefix}_meta`;\n\n      case 'one':\n        return `${defaultFieldPrefix}_id`;\n    }\n  }\n  /**\n   * When a link that is declared virtual is removed, the reference will be removed from every other link.\n   * @private\n   */\n\n\n  _handleReferenceRemovalForVirtualLinks() {\n    this.mainCollection.after.remove((userId, doc) => {\n      // this problem may occur when you do a .remove() before Meteor.startup()\n      if (!this.linkConfig.relatedLinker) {\n        console.warn(`There was an error finding the link for removal for collection: \"${this.mainCollection._name}\" with link: \"${this.linkName}\". This may occur when you do a .remove() before Meteor.startup()`);\n        return;\n      }\n\n      const accessor = this.createLink(doc);\n\n      _.each(accessor.fetchAsArray(), linkedObj => {\n        const {\n          relatedLinker\n        } = this.linkConfig; // We do this check, to avoid self-referencing hell when defining virtual links\n        // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n        // if a removal happens before Meteor.startup this may fail\n\n        if (relatedLinker) {\n          let link = relatedLinker.createLink(linkedObj);\n\n          if (relatedLinker.isSingle()) {\n            link.unset();\n          } else {\n            link.remove(doc);\n          }\n        }\n      });\n    });\n  }\n\n  _initIndex() {\n    if (Meteor.isServer) {\n      let field = this.linkConfig.field;\n\n      if (this.linkConfig.metadata) {\n        field = field + '._id';\n      }\n\n      if (this.linkConfig.index) {\n        if (this.isVirtual()) {\n          throw new Meteor.Error('You cannot set index on an inversed link.');\n        }\n\n        let options;\n\n        if (this.linkConfig.unique) {\n          options = {\n            unique: true\n          };\n        }\n\n        this.mainCollection._ensureIndex({\n          [field]: 1\n        }, options);\n      } else {\n        if (this.linkConfig.unique) {\n          if (this.isVirtual()) {\n            throw new Meteor.Error('You cannot set unique property on an inversed link.');\n          }\n\n          this.mainCollection._ensureIndex({\n            [field]: 1\n          }, {\n            unique: true,\n            sparse: true\n          });\n        }\n      }\n    }\n  }\n\n  _initAutoremove() {\n    if (!this.linkConfig.autoremove) {\n      return;\n    }\n\n    if (!this.isVirtual()) {\n      this.mainCollection.after.remove((userId, doc) => {\n        this.getLinkedCollection().remove({\n          _id: {\n            $in: smartArguments.getIds(doc[this.linkStorageField])\n          }\n        });\n      });\n    } else {\n      this.mainCollection.after.remove((userId, doc) => {\n        const linker = this.mainCollection.getLink(doc, this.linkName);\n        const ids = linker.find({}, {\n          fields: {\n            _id: 1\n          }\n        }).fetch().map(item => item._id);\n        this.getLinkedCollection().remove({\n          _id: {\n            $in: ids\n          }\n        });\n      });\n    }\n  }\n  /**\n   * Initializes denormalization using herteby:denormalize\n   * @private\n   */\n\n\n  _initDenormalization() {\n    if (!this.linkConfig.denormalize || !Meteor.isServer) {\n      return;\n    }\n\n    const packageExists = !!Package['herteby:denormalize'];\n\n    if (!packageExists) {\n      throw new Meteor.Error('missing-package', `Please add the herteby:denormalize package to your Meteor application in order to make caching work`);\n    }\n\n    const {\n      field,\n      body,\n      bypassSchema\n    } = this.linkConfig.denormalize;\n    let cacheConfig;\n    let referenceFieldSuffix = '';\n\n    if (this.isMeta()) {\n      referenceFieldSuffix = this.isSingle() ? '._id' : ':_id';\n    }\n\n    if (this.isVirtual()) {\n      let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n      let type = inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n      cacheConfig = {\n        type: type,\n        collection: this.linkConfig.collection,\n        fields: body,\n        referenceField: inversedLink.field + referenceFieldSuffix,\n        cacheField: field,\n        bypassSchema: !!bypassSchema\n      };\n    } else {\n      cacheConfig = {\n        type: this.linkConfig.type,\n        collection: this.linkConfig.collection,\n        fields: body,\n        referenceField: this.linkConfig.field + referenceFieldSuffix,\n        cacheField: field,\n        bypassSchema: !!bypassSchema\n      };\n    }\n\n    if (this.isVirtual()) {\n      Meteor.startup(() => {\n        this.mainCollection.cache(cacheConfig);\n      });\n    } else {\n      this.mainCollection.cache(cacheConfig);\n    }\n  }\n  /**\n   * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n   *\n   * @returns {boolean}\n   * @private\n   */\n\n\n  isDenormalized() {\n    return !!this.linkConfig.denormalize;\n  }\n  /**\n   * Verifies if the body of the linked element does not contain fields outside the cache body\n   *\n   * @param body\n   * @returns {boolean}\n   * @private\n   */\n\n\n  isSubBodyDenormalized(body) {\n    const cacheBody = this.linkConfig.denormalize.body;\n\n    const cacheBodyFields = _.keys(dot.dot(cacheBody));\n\n    const bodyFields = _.keys(dot.dot(_.omit(body, '_id')));\n\n    return _.difference(bodyFields, cacheBodyFields).length === 0;\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"createSearchFilters.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/lib/createSearchFilters.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => createSearchFilters,\n  createOne: () => createOne,\n  createOneVirtual: () => createOneVirtual,\n  createOneMeta: () => createOneMeta,\n  createOneMetaVirtual: () => createOneMetaVirtual,\n  createMany: () => createMany,\n  createManyVirtual: () => createManyVirtual,\n  createManyMeta: () => createManyMeta,\n  createManyMetaVirtual: () => createManyMetaVirtual\n});\nlet sift;\nmodule.link(\"sift\", {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 1);\n\nfunction createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n  if (!isVirtual) {\n    switch (strategy) {\n      case 'one':\n        return createOne(object, fieldStorage);\n\n      case 'one-meta':\n        return createOneMeta(object, fieldStorage, metaFilters);\n\n      case 'many':\n        return createMany(object, fieldStorage);\n\n      case 'many-meta':\n        return createManyMeta(object, fieldStorage, metaFilters);\n\n      default:\n        throw new Meteor.Error(`Invalid linking strategy: ${strategy}`);\n    }\n  } else {\n    switch (strategy) {\n      case 'one':\n        return createOneVirtual(object, fieldStorage);\n\n      case 'one-meta':\n        return createOneMetaVirtual(object, fieldStorage, metaFilters);\n\n      case 'many':\n        return createManyVirtual(object, fieldStorage);\n\n      case 'many-meta':\n        return createManyMetaVirtual(object, fieldStorage, metaFilters);\n\n      default:\n        throw new Meteor.Error(`Invalid linking strategy: ${strategy}`);\n    }\n  }\n}\n\nfunction createOne(object, fieldStorage) {\n  return {\n    _id: dot.pick(fieldStorage, object)\n  };\n}\n\nfunction createOneVirtual(object, fieldStorage) {\n  return {\n    [fieldStorage]: object._id\n  };\n}\n\nfunction createOneMeta(object, fieldStorage, metaFilters) {\n  const value = object[fieldStorage];\n\n  if (metaFilters) {\n    if (!sift(metaFilters)(value)) {\n      return {\n        _id: undefined\n      };\n    }\n  }\n\n  return {\n    _id: value ? value._id : value\n  };\n}\n\nfunction createOneMetaVirtual(object, fieldStorage, metaFilters) {\n  let filters = {};\n\n  if (metaFilters) {\n    _.each(metaFilters, (value, key) => {\n      filters[fieldStorage + '.' + key] = value;\n    });\n  }\n\n  filters[fieldStorage + '._id'] = object._id;\n  return filters;\n}\n\nfunction createMany(object, fieldStorage) {\n  const [root, ...nested] = fieldStorage.split('.');\n\n  if (nested.length > 0) {\n    const arr = object[root];\n    const ids = arr ? _.uniq(_.union(arr.map(obj => _.isObject(obj) ? dot.pick(nested.join('.'), obj) : []))) : [];\n    return {\n      _id: {\n        $in: ids\n      }\n    };\n  }\n\n  return {\n    _id: {\n      $in: object[fieldStorage] || []\n    }\n  };\n}\n\nfunction createManyVirtual(object, fieldStorage) {\n  return {\n    [fieldStorage]: object._id\n  };\n}\n\nfunction createManyMeta(object, fieldStorage, metaFilters) {\n  let value = object[fieldStorage];\n\n  if (metaFilters) {\n    value = sift(metaFilters, value);\n  }\n\n  return {\n    _id: {\n      $in: _.pluck(value, '_id') || []\n    }\n  };\n}\n\nfunction createManyMetaVirtual(object, fieldStorage, metaFilters) {\n  let filters = {};\n\n  if (metaFilters) {\n    _.each(metaFilters, (value, key) => {\n      filters[key] = value;\n    });\n  }\n\n  filters._id = object._id;\n  return {\n    [fieldStorage]: {\n      $elemMatch: filters\n    }\n  };\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"linkTypes\":{\"base.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linkTypes/base.js                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => Link\n});\nlet SmartArgs;\nmodule.link(\"./lib/smartArguments.js\", {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 0);\nlet createSearchFilters;\nmodule.link(\"../lib/createSearchFilters\", {\n  default(v) {\n    createSearchFilters = v;\n  }\n\n}, 1);\n\nclass Link {\n  get config() {\n    return this.linker.linkConfig;\n  }\n\n  get isVirtual() {\n    return this.linker.isVirtual();\n  }\n\n  constructor(linker, object, collection) {\n    this.linker = linker;\n    this.object = object;\n    this.linkedCollection = collection ? collection : linker.getLinkedCollection();\n\n    if (this.linker.isVirtual()) {\n      this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n    } else {\n      this.linkStorageField = this.config.field;\n    }\n  }\n  /**\n   * Gets the stored link information value\n   * @returns {*}\n   */\n\n\n  value() {\n    if (this.isVirtual) {\n      throw new Meteor.Error('You can only take the value from the main link.');\n    }\n\n    return this.object[this.linkStorageField];\n  }\n  /**\n   * Finds linked data.\n   *\n   * @param filters\n   * @param options\n   * @returns {*}\n   * @param userId\n   */\n\n\n  find(filters = {}, options = {}, userId = undefined) {\n    let linker = this.linker;\n    const linkedCollection = this.linkedCollection;\n    let $metaFilters;\n\n    if (filters.$meta) {\n      $metaFilters = filters.$meta;\n      delete filters.$meta;\n    }\n\n    const searchFilters = createSearchFilters(this.object, this.linkStorageField, linker.strategy, linker.isVirtual(), $metaFilters);\n\n    let appliedFilters = _.extend({}, filters, searchFilters); // see https://github.com/cult-of-coders/grapher/issues/134\n    // happens due to recursive importing of modules\n    // TODO: find another way to do this\n\n\n    if (linkedCollection.find) {\n      return linkedCollection.find(appliedFilters, options, userId);\n    } else {\n      return linkedCollection.default.find(appliedFilters, options, userId);\n    }\n  }\n  /**\n   * @param filters\n   * @param options\n   * @param others\n   * @returns {*|{content}|any}\n   */\n\n\n  fetch(filters, options, ...others) {\n    let result = this.find(filters, options, ...others).fetch();\n\n    if (this.linker.isOneResult()) {\n      return _.first(result);\n    }\n\n    return result;\n  }\n  /**\n   * This is just like fetch() but forces to get an array even if it's single result\n   * \n   * @param {*} filters \n   * @param {*} options \n   * @param  {...any} others \n   */\n\n\n  fetchAsArray(filters, options, ...others) {\n    return this.find(filters, options, ...others).fetch();\n  }\n  /**\n   * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n   * We use clean to make it an empty array by default.\n   */\n\n\n  clean() {}\n  /**\n   * Extracts a single id\n   */\n\n\n  identifyId(what, saveToDatabase) {\n    return SmartArgs.getId(what, {\n      saveToDatabase,\n      collection: this.linkedCollection\n    });\n  }\n  /**\n   * Extracts the ids of object(s) or strings and returns an array.\n   */\n\n\n  identifyIds(what, saveToDatabase) {\n    return SmartArgs.getIds(what, {\n      saveToDatabase,\n      collection: this.linkedCollection\n    });\n  }\n  /**\n   * Checks when linking data, if the ids are valid with the linked collection.\n   * @throws Meteor.Error\n   * @param ids\n   *\n   * @protected\n   */\n\n\n  _validateIds(ids) {\n    if (!_.isArray(ids)) {\n      ids = [ids];\n    }\n\n    const validIds = this.linkedCollection.find({\n      _id: {\n        $in: ids\n      }\n    }, {\n      fields: {\n        _id: 1\n      }\n    }).fetch().map(doc => doc._id);\n\n    if (validIds.length != ids.length) {\n      throw new Meteor.Error('not-found', `You tried to create links with non-existing id(s) inside \"${this.linkedCollection._name}\": ${_.difference(ids, validIds).join(', ')}`);\n    }\n  }\n\n  _checkWhat(what) {\n    if (what === undefined || what === null) {\n      throw new Error(`The argument passed: ${what} is not accepted.`);\n    }\n  }\n  /**\n   * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n   *\n   * @param action\n   * @param what\n   * @param metadata\n   *\n   * @protected\n   */\n\n\n  _virtualAction(action, what, metadata) {\n    const linker = this.linker.linkConfig.relatedLinker; // its an unset operation most likely.\n\n    if (what === undefined) {\n      const reversedLink = linker.createLink(this.fetch());\n      reversedLink.unset();\n      return;\n    }\n\n    if (!_.isArray(what)) {\n      what = [what];\n    }\n\n    what = _.map(what, element => {\n      if (!_.isObject(element)) {\n        return linker.mainCollection.findOne(element);\n      } else {\n        if (!element._id) {\n          const elementId = linker.mainCollection.insert(element);\n\n          _.extend(element, linker.mainCollection.findOne(elementId));\n        }\n\n        return element;\n      }\n    });\n    return _.map(what, element => {\n      const reversedLink = linker.createLink(element);\n\n      if (action == 'metadata') {\n        if (linker.isSingle()) {\n          return reversedLink.metadata(metadata);\n        } else {\n          return reversedLink.metadata(this.object, metadata);\n        }\n      } else if (action == 'add' || action == 'set') {\n        if (linker.isSingle()) {\n          reversedLink.set(this.object, metadata);\n        } else {\n          reversedLink.add(this.object, metadata);\n        }\n      } else {\n        if (linker.isSingle()) {\n          reversedLink.unset();\n        } else {\n          reversedLink.remove(this.object);\n        }\n      }\n    });\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkMany.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkMany.js                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => LinkMany\n});\nlet Link;\nmodule.link(\"./base.js\", {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 1);\nlet SmartArgs;\nmodule.link(\"./lib/smartArguments.js\", {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 2);\n\nclass LinkMany extends Link {\n  clean() {\n    if (!this.object[this.linkStorageField]) {\n      this.object[this.linkStorageField] = [];\n    }\n  }\n  /**\n   * Ads the _ids to the object.\n   * @param what\n   */\n\n\n  add(what) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('add', what);\n\n      return this;\n    } //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n\n    this.clean();\n\n    const _ids = this.identifyIds(what, true);\n\n    this._validateIds(_ids);\n\n    const field = this.linkStorageField; // update the field\n\n    this.object[field] = _.union(this.object[field], _ids); // update the db\n\n    let modifier = {\n      $addToSet: {\n        [field]: {\n          $each: _ids\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n  /**\n   * @param what\n   */\n\n\n  remove(what) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n    this.clean();\n    const field = this.linkStorageField;\n    const [root, ...nested] = field.split('.');\n\n    const _ids = this.identifyIds(what); // update the field\n\n\n    this.object[root] = _.filter(this.object[root], _id => !_.contains(_ids, nested.length > 0 ? dot.pick(nested.join('.'), _id) : _id)); // update the db\n\n    let modifier = {\n      $pull: {\n        [root]: nested.length > 0 ? {\n          [nested.join('.')]: {\n            $in: _ids\n          }\n        } : {\n          $in: _ids\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n\n  set(what) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('set', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n  unset(what) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkManyMeta.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkManyMeta.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => LinkManyMeta\n});\nlet Link;\nmodule.link(\"./base.js\", {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.link(\"./lib/smartArguments.js\", {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkManyMeta extends Link {\n  clean() {\n    if (!this.object[this.linkStorageField]) {\n      this.object[this.linkStorageField] = [];\n    }\n  }\n  /**\n   * @param what\n   * @param metadata\n   */\n\n\n  add(what, metadata = {}) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('add', what, metadata);\n\n      return this;\n    }\n\n    const _ids = this.identifyIds(what, true);\n\n    this._validateIds(_ids);\n\n    let field = this.linkStorageField;\n    this.object[field] = this.object[field] || [];\n    let metadatas = [];\n\n    _.each(_ids, _id => {\n      let localMetadata = _.clone(metadata);\n\n      localMetadata._id = _id;\n      this.object[field].push(localMetadata);\n      metadatas.push(localMetadata);\n    });\n\n    let modifier = {\n      $addToSet: {\n        [field]: {\n          $each: metadatas\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n  /**\n   * @param what\n   * @param extendMetadata\n   */\n\n\n  metadata(what, extendMetadata) {\n    if (this.isVirtual) {\n      this._virtualAction('metadata', what, extendMetadata);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n\n    if (what === undefined) {\n      return this.object[field];\n    }\n\n    if (_.isArray(what)) {\n      throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\n    }\n\n    const _id = this.identifyId(what);\n\n    let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\n\n    if (extendMetadata === undefined) {\n      return existingMetadata;\n    } else {\n      _.extend(existingMetadata, extendMetadata);\n\n      let subfield = field + '._id';\n      let subfieldUpdate = field + '.$';\n      this.linker.mainCollection.update({\n        _id: this.object._id,\n        [subfield]: _id\n      }, {\n        $set: {\n          [subfieldUpdate]: existingMetadata\n        }\n      });\n    }\n\n    return this;\n  }\n\n  remove(what) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    const _ids = this.identifyIds(what);\n\n    let field = this.linkStorageField;\n    this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\n    let modifier = {\n      $pull: {\n        [field]: {\n          _id: {\n            $in: _ids\n          }\n        }\n      }\n    };\n    this.linker.mainCollection.update(this.object._id, modifier);\n    return this;\n  }\n\n  set(what, metadata) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('set', what, metadata);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n  unset(what) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkOne.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkOne.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => LinkOne\n});\nlet Link;\nmodule.link(\"./base.js\", {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.link(\"./lib/smartArguments.js\", {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkOne extends Link {\n  set(what) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('set', what);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n\n    const _id = this.identifyId(what, true);\n\n    this._validateIds([_id]);\n\n    this.object[field] = _id;\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: _id\n      }\n    });\n    return this;\n  }\n\n  unset() {\n    if (this.isVirtual) {\n      this._virtualAction('unset', what);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n    this.object[field] = null;\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: null\n      }\n    });\n    return this;\n  }\n\n  add(what) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('add', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n  remove(what) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"linkOneMeta.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linkTypes/linkOneMeta.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => LinkOneMeta\n});\nlet Link;\nmodule.link(\"./base.js\", {\n  default(v) {\n    Link = v;\n  }\n\n}, 0);\nlet SmartArgs;\nmodule.link(\"./lib/smartArguments.js\", {\n  default(v) {\n    SmartArgs = v;\n  }\n\n}, 1);\n\nclass LinkOneMeta extends Link {\n  set(what, metadata = {}) {\n    this._checkWhat(what);\n\n    metadata = Object.assign({}, metadata);\n\n    if (this.isVirtual) {\n      this._virtualAction('set', what, metadata);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n    metadata._id = this.identifyId(what, true);\n\n    this._validateIds([metadata._id]);\n\n    this.object[field] = metadata;\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: metadata\n      }\n    });\n    return this;\n  }\n\n  metadata(extendMetadata) {\n    if (this.isVirtual) {\n      this._virtualAction('metadata', undefined, extendMetadata);\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n\n    if (!extendMetadata) {\n      return this.object[field];\n    } else {\n      _.extend(this.object[field], extendMetadata);\n\n      this.linker.mainCollection.update(this.object._id, {\n        $set: {\n          [field]: this.object[field]\n        }\n      });\n    }\n\n    return this;\n  }\n\n  unset() {\n    if (this.isVirtual) {\n      this._virtualAction('unset');\n\n      return this;\n    }\n\n    let field = this.linkStorageField;\n    this.object[field] = {};\n    this.linker.mainCollection.update(this.object._id, {\n      $set: {\n        [field]: {}\n      }\n    });\n    return this;\n  }\n\n  add(what, metadata) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('add', what, metadata);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n  remove(what) {\n    this._checkWhat(what);\n\n    if (this.isVirtual) {\n      this._virtualAction('remove', what);\n\n      return this;\n    }\n\n    throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"smartArguments.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/links/linkTypes/lib/smartArguments.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault(new class {\n  getIds(what, options) {\n    if (_.isArray(what)) {\n      return _.map(what, subWhat => {\n        return this.getId(subWhat, options);\n      });\n    } else {\n      return [this.getId(what, options)];\n    }\n\n    throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n  }\n\n  getId(what, options) {\n    if (typeof what === 'string') {\n      return what;\n    }\n\n    if (typeof what === 'object') {\n      if (!what._id && options.saveToDatabase) {\n        what._id = options.collection.insert(what);\n      }\n\n      return what._id;\n    }\n  }\n\n}());\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"namedQuery\":{\"namedQuery.base.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.base.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  default: () => NamedQueryBase\n});\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 0);\nlet globalConfig = {};\n\nclass NamedQueryBase {\n  static setConfig(config) {\n    globalConfig = config;\n  }\n\n  static getConfig() {\n    return globalConfig;\n  }\n\n  constructor(name, collection, body, options = {}) {\n    this.isNamedQuery = true;\n    this.queryName = name;\n\n    if (_.isFunction(body)) {\n      this.resolver = body;\n    } else {\n      this.body = deepClone(body);\n    }\n\n    this.subscriptionHandle = null;\n    this.params = options.params || {};\n    this.options = Object.assign({}, globalConfig, options);\n    this.collection = collection;\n    this.isExposed = false;\n  }\n\n  get name() {\n    return `named_query_${this.queryName}`;\n  }\n\n  get isResolver() {\n    return !!this.resolver;\n  }\n\n  setParams(params) {\n    this.params = _.extend({}, this.params, params);\n    return this;\n  }\n  /**\n   * Validates the parameters\n   */\n\n\n  doValidateParams(params) {\n    params = params || this.params;\n    const {\n      validateParams\n    } = this.options;\n    if (!validateParams) return;\n\n    try {\n      this._validate(validateParams, params);\n    } catch (validationError) {\n      console.error(`Invalid parameters supplied to the query \"${this.queryName}\"\\n`, validationError);\n      throw validationError; // rethrow\n    }\n  }\n\n  clone(newParams) {\n    const params = _.extend({}, deepClone(this.params), newParams);\n\n    let clone = new this.constructor(this.queryName, this.collection, this.isResolver ? this.resolver : deepClone(this.body), (0, _objectSpread2.default)({}, this.options, {\n      params\n    }));\n    clone.cacher = this.cacher;\n\n    if (this.exposeConfig) {\n      clone.exposeConfig = this.exposeConfig;\n    }\n\n    return clone;\n  }\n  /**\n   * @param {function|object} validator\n   * @param {object} params\n   * @private\n   */\n\n\n  _validate(validator, params) {\n    if (_.isFunction(validator)) {\n      validator.call(null, params);\n    } else {\n      check(params, validator);\n    }\n  }\n\n}\n\nNamedQueryBase.defaultOptions = {};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.client.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.client.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet CountSubscription;\nmodule.link(\"../query/counts/countSubscription\", {\n  default(v) {\n    CountSubscription = v;\n  }\n\n}, 0);\nlet createGraph;\nmodule.link(\"../query/lib/createGraph.js\", {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 1);\nlet recursiveFetch;\nmodule.link(\"../query/lib/recursiveFetch.js\", {\n  default(v) {\n    recursiveFetch = v;\n  }\n\n}, 2);\nlet prepareForProcess;\nmodule.link(\"../query/lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 3);\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 4);\nlet callWithPromise;\nmodule.link(\"../query/lib/callWithPromise\", {\n  default(v) {\n    callWithPromise = v;\n  }\n\n}, 5);\nlet Base;\nmodule.link(\"./namedQuery.base\", {\n  default(v) {\n    Base = v;\n  }\n\n}, 6);\nlet LocalCollection;\nmodule.link(\"meteor/minimongo\", {\n  LocalCollection(v) {\n    LocalCollection = v;\n  }\n\n}, 7);\nlet intersectDeep;\nmodule.link(\"../query/lib/intersectDeep\", {\n  default(v) {\n    intersectDeep = v;\n  }\n\n}, 8);\nmodule.exportDefault(class extends Base {\n  /**\n   * Subscribe\n   *\n   * @param callback\n   * @returns {null|any|*}\n   */\n  subscribe(callback) {\n    if (this.isResolver) {\n      throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n    }\n\n    this.subscriptionHandle = Meteor.subscribe(this.name, this.params, callback);\n    return this.subscriptionHandle;\n  }\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  subscribeCount(callback) {\n    if (this.isResolver) {\n      throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n    }\n\n    if (!this._counter) {\n      this._counter = new CountSubscription(this);\n    }\n\n    return this._counter.subscribe(this.params, callback);\n  }\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.subscriptionHandle.stop();\n    }\n\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  unsubscribeCount() {\n    if (this._counter) {\n      this._counter.unsubscribe();\n\n      this._counter = null;\n    }\n  }\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  fetchSync() {\n    return Promise.asyncApply(() => {\n      if (this.subscriptionHandle) {\n        throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n      }\n\n      return Promise.await(callWithPromise(this.name, this.params));\n    });\n  }\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  fetchOneSync() {\n    return Promise.asyncApply(() => {\n      return _.first(Promise.await(this.fetchSync()));\n    });\n  }\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  fetch(callbackOrOptions) {\n    if (!this.subscriptionHandle) {\n      return this._fetchStatic(callbackOrOptions);\n    } else {\n      return this._fetchReactive(callbackOrOptions);\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne(...args) {\n    if (!this.subscriptionHandle) {\n      const callback = args[0];\n\n      if (!_.isFunction(callback)) {\n        throw new Meteor.Error('You did not provide a valid callback');\n      }\n\n      this.fetch((err, res) => {\n        callback(err, res ? _.first(res) : null);\n      });\n    } else {\n      return _.first(this.fetch(...args));\n    }\n  }\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  getCountSync() {\n    return Promise.asyncApply(() => {\n      if (this._counter) {\n        throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n      }\n\n      return Promise.await(callWithPromise(this.name + '.count', this.params));\n    });\n  }\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  getCount(callback) {\n    if (this._counter) {\n      return this._counter.getCount();\n    } else {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n      } else {\n        return Meteor.call(this.name + '.count', this.params, callback);\n      }\n    }\n  }\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _fetchStatic(callback) {\n    if (!callback) {\n      throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n    }\n\n    Meteor.call(this.name, this.params, callback);\n  }\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchReactive(options = {}) {\n    let body = this.body;\n\n    if (this.params.$body) {\n      body = intersectDeep(body, this.params.$body);\n    }\n\n    body = prepareForProcess(body, this.params);\n\n    if (!options.allowSkip && body.$options && body.$options.skip) {\n      delete body.$options.skip;\n    }\n\n    return recursiveFetch(createGraph(this.collection, body), undefined, {\n      scoped: this.options.scoped,\n      subscriptionHandle: this.subscriptionHandle\n    });\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet NamedQueryClient;\nmodule.link(\"./namedQuery.client\", {\n  default(v) {\n    NamedQueryClient = v;\n  }\n\n}, 0);\nlet NamedQueryServer;\nmodule.link(\"./namedQuery.server\", {\n  default(v) {\n    NamedQueryServer = v;\n  }\n\n}, 1);\nlet NamedQuery;\n\nif (Meteor.isServer) {\n  NamedQuery = NamedQueryServer;\n} else {\n  NamedQuery = NamedQueryClient;\n}\n\nmodule.exportDefault(NamedQuery);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"namedQuery.server.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/namedQuery.server.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet prepareForProcess;\nmodule.link(\"../query/lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 0);\nlet Base;\nmodule.link(\"./namedQuery.base\", {\n  default(v) {\n    Base = v;\n  }\n\n}, 1);\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 2);\nlet MemoryResultCacher;\nmodule.link(\"./cache/MemoryResultCacher\", {\n  default(v) {\n    MemoryResultCacher = v;\n  }\n\n}, 3);\nlet intersectDeep;\nmodule.link(\"../query/lib/intersectDeep\", {\n  default(v) {\n    intersectDeep = v;\n  }\n\n}, 4);\nmodule.exportDefault(class extends Base {\n  /**\n   * Retrieves the data.\n   * @returns {*}\n   */\n  fetch(context) {\n    this._performSecurityChecks(context, this.params);\n\n    if (this.isResolver) {\n      return this._fetchResolverData(context);\n    } else {\n      body = deepClone(this.body);\n\n      if (this.params.$body) {\n        body = intersectDeep(body, this.params.$body);\n      } // we must apply emobdyment here\n\n\n      this.doEmbodimentIfItApplies(body, this.params);\n      const query = this.collection.createQuery(deepClone(body), {\n        params: deepClone(this.params)\n      });\n\n      if (this.cacher) {\n        const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n        return this.cacher.fetch(cacheId, {\n          query\n        });\n      }\n\n      return query.fetch();\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne(...args) {\n    return _.first(this.fetch(...args));\n  }\n  /**\n   * Gets the count of matching elements.\n   *\n   * @returns {any}\n   */\n\n\n  getCount(context) {\n    this._performSecurityChecks(context, this.params);\n\n    const countCursor = this.getCursorForCounting();\n\n    if (this.cacher) {\n      const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n      return this.cacher.fetch(cacheId, {\n        countCursor\n      });\n    }\n\n    return countCursor.count();\n  }\n  /**\n   * Returns the cursor for counting\n   * This is most likely used for counts cursor\n   */\n\n\n  getCursorForCounting() {\n    let body = deepClone(this.body);\n    this.doEmbodimentIfItApplies(body, this.params);\n    body = prepareForProcess(body, this.params);\n    return this.collection.find(body.$filters || {}, {\n      fields: {\n        _id: 1\n      }\n    });\n  }\n  /**\n   * @param cacher\n   */\n\n\n  cacheResults(cacher) {\n    if (!cacher) {\n      cacher = new MemoryResultCacher();\n    }\n\n    this.cacher = cacher;\n  }\n  /**\n   * Configure resolve. This doesn't actually call the resolver, it just sets it\n   * @param fn\n   */\n\n\n  resolve(fn) {\n    if (!this.isResolver) {\n      throw new Meteor.Error('invalid-call', `You cannot use resolve() on a non resolver NamedQuery`);\n    }\n\n    this.resolver = fn;\n  }\n  /**\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchResolverData(context) {\n    const resolver = this.resolver;\n    const self = this;\n    const query = {\n      fetch() {\n        return resolver.call(context, self.params);\n      }\n\n    };\n\n    if (this.cacher) {\n      const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n      return this.cacher.fetch(cacheId, {\n        query\n      });\n    }\n\n    return query.fetch();\n  }\n  /**\n   * @param context Meteor method/publish context\n   * @param params\n   *\n   * @private\n   */\n\n\n  _performSecurityChecks(context, params) {\n    if (context && this.exposeConfig) {\n      this._callFirewall(context, context.userId, params);\n    }\n\n    this.doValidateParams(params);\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"store.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/store.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault(new class {\n  constructor() {\n    this.storage = {};\n  }\n\n  add(key, value) {\n    if (this.storage[key]) {\n      throw new Meteor.Error('invalid-name', `You have previously defined another namedQuery with the same name: \"${key}\". Named Query names should be unique.`);\n    }\n\n    this.storage[key] = value;\n  }\n\n  get(key) {\n    return this.storage[key];\n  }\n\n  getAll() {\n    return this.storage;\n  }\n\n}());\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cache\":{\"BaseResultCacher.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/cache/BaseResultCacher.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => BaseResultCacher\n});\nlet EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 0);\n\nclass BaseResultCacher {\n  constructor(config = {}) {\n    this.config = config;\n  }\n  /**\n   * @param queryName\n   * @param params\n   * @returns {string}\n   */\n\n\n  generateQueryId(queryName, params) {\n    return `${queryName}::${EJSON.stringify(params)}`;\n  }\n  /**\n   * Dummy function\n   */\n\n\n  fetch(cacheId, {\n    query,\n    countCursor\n  }) {\n    throw 'Not implemented';\n  }\n  /**\n   * @param query\n   * @param countCursor\n   * @returns {*}\n   */\n\n\n  static fetchData({\n    query,\n    countCursor\n  }) {\n    if (query) {\n      return query.fetch();\n    } else {\n      return countCursor.count();\n    }\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"MemoryResultCacher.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/cache/MemoryResultCacher.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => MemoryResultCacher\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet cloneDeep;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    cloneDeep = v;\n  }\n\n}, 1);\nlet BaseResultCacher;\nmodule.link(\"./BaseResultCacher\", {\n  default(v) {\n    BaseResultCacher = v;\n  }\n\n}, 2);\nconst DEFAULT_TTL = 60000;\n/**\n * This is a very basic in-memory result caching functionality\n */\n\nclass MemoryResultCacher extends BaseResultCacher {\n  constructor(config = {}) {\n    super(config);\n    this.store = {};\n  }\n  /**\n   * @param cacheId\n   * @param query\n   * @param countCursor\n   * @returns {*}\n   */\n\n\n  fetch(cacheId, {\n    query,\n    countCursor\n  }) {\n    const cacheData = this.store[cacheId];\n\n    if (cacheData !== undefined) {\n      return cloneDeep(cacheData);\n    }\n\n    const data = BaseResultCacher.fetchData({\n      query,\n      countCursor\n    });\n    this.storeData(cacheId, data);\n    return data;\n  }\n  /**\n   * @param cacheId\n   * @param data\n   */\n\n\n  storeData(cacheId, data) {\n    const ttl = this.config.ttl || DEFAULT_TTL;\n    this.store[cacheId] = cloneDeep(data);\n    Meteor.setTimeout(() => {\n      delete this.store[cacheId];\n    }, ttl);\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"expose\":{\"extension.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/expose/extension.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet NamedQuery;\nmodule.link(\"../namedQuery.js\", {\n  default(v) {\n    NamedQuery = v;\n  }\n\n}, 0);\nlet ExposeSchema, ExposeDefaults;\nmodule.link(\"./schema.js\", {\n  ExposeSchema(v) {\n    ExposeSchema = v;\n  },\n\n  ExposeDefaults(v) {\n    ExposeDefaults = v;\n  }\n\n}, 1);\nlet mergeDeep;\nmodule.link(\"./lib/mergeDeep.js\", {\n  default(v) {\n    mergeDeep = v;\n  }\n\n}, 2);\nlet createGraph;\nmodule.link(\"../../query/lib/createGraph.js\", {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 3);\nlet recursiveCompose;\nmodule.link(\"../../query/lib/recursiveCompose.js\", {\n  default(v) {\n    recursiveCompose = v;\n  }\n\n}, 4);\nlet prepareForProcess;\nmodule.link(\"../../query/lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 5);\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 6);\nlet intersectDeep;\nmodule.link(\"../../query/lib/intersectDeep\", {\n  default(v) {\n    intersectDeep = v;\n  }\n\n}, 7);\nlet genCountEndpoint;\nmodule.link(\"../../query/counts/genEndpoint.server\", {\n  default(v) {\n    genCountEndpoint = v;\n  }\n\n}, 8);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 9);\n\n_.extend(NamedQuery.prototype, {\n  /**\n   * @param config\n   */\n  expose(config = {}) {\n    if (!Meteor.isServer) {\n      throw new Meteor.Error('invalid-environment', `You must run this in server-side code`);\n    }\n\n    if (this.isExposed) {\n      throw new Meteor.Error('query-already-exposed', `You have already exposed: \"${this.name}\" named query`);\n    }\n\n    this.exposeConfig = Object.assign({}, ExposeDefaults, config);\n    check(this.exposeConfig, ExposeSchema);\n\n    if (this.exposeConfig.validateParams) {\n      this.options.validateParams = this.exposeConfig.validateParams;\n    }\n\n    if (!this.isResolver) {\n      this._initNormalQuery();\n    } else {\n      this._initMethod();\n    }\n\n    this.isExposed = true;\n  },\n\n  /**\n   * Initializes a normal NamedQuery (normal == not a resolver)\n   * @private\n   */\n  _initNormalQuery() {\n    const config = this.exposeConfig;\n\n    if (config.method) {\n      this._initMethod();\n    }\n\n    if (config.publication) {\n      this._initPublication();\n    }\n\n    if (!config.method && !config.publication) {\n      throw new Meteor.Error('weird', 'If you want to expose your named query you need to specify at least one of [\"method\", \"publication\"] options to true');\n    }\n\n    this._initCountMethod();\n\n    this._initCountPublication();\n  },\n\n  /**\n   * Returns the embodied body of the request\n   * @param {*} _embody\n   * @param {*} body\n   */\n  doEmbodimentIfItApplies(body, params) {\n    // query is not exposed yet, so it doesn't have embodiment logic\n    if (!this.exposeConfig) {\n      return;\n    }\n\n    const {\n      embody\n    } = this.exposeConfig;\n\n    if (!embody) {\n      return;\n    }\n\n    if (_.isFunction(embody)) {\n      embody.call(this, body, params);\n    } else {\n      mergeDeep(body, embody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initMethod() {\n    const self = this;\n    Meteor.methods({\n      [this.name](newParams) {\n        self._unblockIfNecessary(this); // security is done in the fetching because we provide a context\n\n\n        return self.clone(newParams).fetch(this);\n      }\n\n    });\n  },\n\n  /**\n   * @returns {void}\n   * @private\n   */\n  _initCountMethod() {\n    const self = this;\n    Meteor.methods({\n      [this.name + '.count'](newParams) {\n        self._unblockIfNecessary(this); // security is done in the fetching because we provide a context\n\n\n        return self.clone(newParams).getCount(this);\n      }\n\n    });\n  },\n\n  /**\n   * @returns {*}\n   * @private\n   */\n  _initCountPublication() {\n    const self = this;\n    genCountEndpoint(self.name, {\n      getCursor({\n        session\n      }) {\n        const query = self.clone(session.params);\n        return query.getCursorForCounting();\n      },\n\n      getSession(params) {\n        self.doValidateParams(params);\n\n        self._callFirewall(this, this.userId, params);\n\n        return {\n          name: self.name,\n          params\n        };\n      }\n\n    });\n  },\n\n  /**\n   * @private\n   */\n  _initPublication() {\n    const self = this;\n    Meteor.publishComposite(this.name, function (params = {}) {\n      const isScoped = !!self.options.scoped;\n\n      if (isScoped) {\n        this.enableScope();\n      }\n\n      self._unblockIfNecessary(this);\n\n      self.doValidateParams(params);\n\n      self._callFirewall(this, this.userId, params);\n\n      let body = deepClone(self.body);\n\n      if (params.$body) {\n        body = intersectDeep(body, params.$body);\n      }\n\n      self.doEmbodimentIfItApplies(body, params);\n      body = prepareForProcess(body, params);\n      const rootNode = createGraph(self.collection, body);\n      return recursiveCompose(rootNode, undefined, {\n        scoped: isScoped\n      });\n    });\n  },\n\n  /**\n   * @param context\n   * @param userId\n   * @param params\n   * @private\n   */\n  _callFirewall(context, userId, params) {\n    const {\n      firewall\n    } = this.exposeConfig;\n\n    if (!firewall) {\n      return;\n    }\n\n    if (_.isArray(firewall)) {\n      firewall.forEach(fire => {\n        fire.call(context, userId, params);\n      });\n    } else {\n      firewall.call(context, userId, params);\n    }\n  },\n\n  /**\n   * @param context\n   * @private\n   */\n  _unblockIfNecessary(context) {\n    if (this.exposeConfig.unblock) {\n      if (context.unblock) {\n        context.unblock();\n      }\n    }\n  }\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"schema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/expose/schema.js                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  ExposeDefaults: () => ExposeDefaults,\n  ExposeSchema: () => ExposeSchema\n});\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nconst ExposeDefaults = {\n  publication: true,\n  method: true,\n  unblock: true\n};\nconst ExposeSchema = {\n  firewall: Match.Maybe(Match.OneOf(Function, [Function])),\n  publication: Match.Maybe(Boolean),\n  unblock: Match.Maybe(Boolean),\n  method: Match.Maybe(Boolean),\n  embody: Match.Maybe(Match.OneOf(Object, Function)),\n  validateParams: Match.Maybe(Match.OneOf(Object, Function))\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"mergeDeep.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/namedQuery/expose/lib/mergeDeep.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => mergeDeep\n});\n\nfunction mergeDeep(target, source) {\n  if (_.isObject(target) && _.isObject(source)) {\n    _.each(source, (value, key) => {\n      if (_.isFunction(source[key])) {\n        target[key] = source[key];\n      } else if (_.isObject(source[key])) {\n        if (!target[key]) Object.assign(target, {\n          [key]: {}\n        });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, {\n          [key]: source[key]\n        });\n      }\n    });\n  }\n\n  return target;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"query\":{\"query.base.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/query.base.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  default: () => QueryBase\n});\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\n\nclass QueryBase {\n  constructor(collection, body, options = {}) {\n    this.isGlobalQuery = true;\n    this.collection = collection;\n    this.body = deepClone(body);\n    this.params = options.params || {};\n    this.options = options;\n  }\n\n  clone(newParams) {\n    const params = _.extend({}, deepClone(this.params), newParams);\n\n    return new this.constructor(this.collection, deepClone(this.body), (0, _objectSpread2.default)({\n      params\n    }, this.options));\n  }\n\n  get name() {\n    return `exposure_${this.collection._name}`;\n  }\n  /**\n   * Validates the parameters\n   */\n\n\n  doValidateParams() {\n    const {\n      validateParams\n    } = this.options;\n    if (!validateParams) return;\n\n    if (_.isFunction(validateParams)) {\n      validateParams.call(null, this.params);\n    } else {\n      check(this.params);\n    }\n  }\n  /**\n   * Merges the params with previous params.\n   *\n   * @param params\n   * @returns {Query}\n   */\n\n\n  setParams(params) {\n    this.params = _.extend({}, this.params, params);\n    return this;\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.client.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/query.client.js                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => Query\n});\n\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet CountSubscription;\nmodule.link(\"./counts/countSubscription\", {\n  default(v) {\n    CountSubscription = v;\n  }\n\n}, 1);\nlet createGraph;\nmodule.link(\"./lib/createGraph.js\", {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 2);\nlet recursiveFetch;\nmodule.link(\"./lib/recursiveFetch.js\", {\n  default(v) {\n    recursiveFetch = v;\n  }\n\n}, 3);\nlet prepareForProcess;\nmodule.link(\"./lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 4);\nlet callWithPromise;\nmodule.link(\"./lib/callWithPromise\", {\n  default(v) {\n    callWithPromise = v;\n  }\n\n}, 5);\nlet Base;\nmodule.link(\"./query.base\", {\n  default(v) {\n    Base = v;\n  }\n\n}, 6);\n\nclass Query extends Base {\n  /**\n   * Subscribe\n   *\n   * @param callback {Function} optional\n   * @returns {null|any|*}\n   */\n  subscribe(callback) {\n    this.doValidateParams();\n    this.subscriptionHandle = Meteor.subscribe(this.name, prepareForProcess(this.body, this.params), callback);\n    return this.subscriptionHandle;\n  }\n  /**\n   * Subscribe to the counts for this query\n   *\n   * @param callback\n   * @returns {Object}\n   */\n\n\n  subscribeCount(callback) {\n    this.doValidateParams();\n\n    if (!this._counter) {\n      this._counter = new CountSubscription(this);\n    }\n\n    return this._counter.subscribe(prepareForProcess(this.body, this.params), callback);\n  }\n  /**\n   * Unsubscribe if an existing subscription exists\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.subscriptionHandle.stop();\n    }\n\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Unsubscribe to the counts if a subscription exists.\n   */\n\n\n  unsubscribeCount() {\n    if (this._counter) {\n      this._counter.unsubscribe();\n\n      this._counter = null;\n    }\n  }\n  /**\n   * Fetches elements in sync using promises\n   * @return {*}\n   */\n\n\n  fetchSync() {\n    return Promise.asyncApply(() => {\n      this.doValidateParams();\n\n      if (this.subscriptionHandle) {\n        throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n      }\n\n      return Promise.await(callWithPromise(this.name, prepareForProcess(this.body, this.params)));\n    });\n  }\n  /**\n   * Fetches one element in sync\n   * @return {*}\n   */\n\n\n  fetchOneSync() {\n    return Promise.asyncApply(() => {\n      return _.first(Promise.await(this.fetchSync()));\n    });\n  }\n  /**\n   * Retrieves the data.\n   * @param callbackOrOptions\n   * @returns {*}\n   */\n\n\n  fetch(callbackOrOptions) {\n    this.doValidateParams();\n\n    if (!this.subscriptionHandle) {\n      return this._fetchStatic(callbackOrOptions);\n    } else {\n      return this._fetchReactive(callbackOrOptions);\n    }\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne(...args) {\n    if (!this.subscriptionHandle) {\n      const callback = args[0];\n\n      if (!_.isFunction(callback)) {\n        throw new Meteor.Error('You did not provide a valid callback');\n      }\n\n      this.fetch((err, res) => {\n        callback(err, res ? _.first(res) : null);\n      });\n    } else {\n      return _.first(this.fetch(...args));\n    }\n  }\n  /**\n   * Gets the count of matching elements in sync.\n   * @returns {any}\n   */\n\n\n  getCountSync() {\n    return Promise.asyncApply(() => {\n      if (this._counter) {\n        throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n      }\n\n      return Promise.await(callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params)));\n    });\n  }\n  /**\n   * Gets the count of matching elements.\n   * @param callback\n   * @returns {any}\n   */\n\n\n  getCount(callback) {\n    if (this._counter) {\n      return this._counter.getCount();\n    } else {\n      if (!callback) {\n        throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n      } else {\n        return Meteor.call(this.name + '.count', prepareForProcess(this.body, this.params), callback);\n      }\n    }\n  }\n  /**\n   * Fetching non-reactive queries\n   * @param callback\n   * @private\n   */\n\n\n  _fetchStatic(callback) {\n    if (!callback) {\n      throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n    }\n\n    Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n  }\n  /**\n   * Fetching when we've got an active publication\n   *\n   * @param options\n   * @returns {*}\n   * @private\n   */\n\n\n  _fetchReactive(options = {}) {\n    let body = prepareForProcess(this.body, this.params);\n\n    if (!options.allowSkip && body.$options && body.$options.skip) {\n      delete body.$options.skip;\n    }\n\n    return recursiveFetch(createGraph(this.collection, body), this.params);\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/query.js                                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet QueryClient;\nmodule.link(\"./query.client\", {\n  default(v) {\n    QueryClient = v;\n  }\n\n}, 0);\nlet QueryServer;\nmodule.link(\"./query.server\", {\n  default(v) {\n    QueryServer = v;\n  }\n\n}, 1);\nlet Query;\n\nif (Meteor.isServer) {\n  Query = QueryServer;\n} else {\n  Query = QueryClient;\n}\n\nmodule.exportDefault(Query);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"query.server.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/query.server.js                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => Query\n});\nlet createGraph;\nmodule.link(\"./lib/createGraph.js\", {\n  default(v) {\n    createGraph = v;\n  }\n\n}, 0);\nlet prepareForProcess;\nmodule.link(\"./lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 1);\nlet hypernova;\nmodule.link(\"./hypernova/hypernova.js\", {\n  default(v) {\n    hypernova = v;\n  }\n\n}, 2);\nlet Base;\nmodule.link(\"./query.base\", {\n  default(v) {\n    Base = v;\n  }\n\n}, 3);\n\nclass Query extends Base {\n  /**\n   * Retrieves the data.\n   * @param context\n   * @returns {*}\n   */\n  fetch(context = {}) {\n    const node = createGraph(this.collection, prepareForProcess(this.body, this.params));\n    return hypernova(node, context.userId, {\n      params: this.params\n    });\n  }\n  /**\n   * @param args\n   * @returns {*}\n   */\n\n\n  fetchOne(...args) {\n    return _.first(this.fetch(...args));\n  }\n  /**\n   * Gets the count of matching elements.\n   * @returns {integer}\n   */\n\n\n  getCount() {\n    return this.collection.find(this.body.$filters || {}, {}).count();\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"counts\":{\"collection.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/counts/collection.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet COUNTS_COLLECTION_CLIENT;\nmodule.link(\"./constants\", {\n  COUNTS_COLLECTION_CLIENT(v) {\n    COUNTS_COLLECTION_CLIENT = v;\n  }\n\n}, 1);\nmodule.exportDefault(new Mongo.Collection(COUNTS_COLLECTION_CLIENT));\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/counts/constants.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  COUNTS_COLLECTION_CLIENT: () => COUNTS_COLLECTION_CLIENT\n});\nconst COUNTS_COLLECTION_CLIENT = 'grapher_counts';\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"countSubscription.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/counts/countSubscription.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => CountSubscription\n});\nlet EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 2);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 3);\nlet Counts;\nmodule.link(\"./collection\", {\n  default(v) {\n    Counts = v;\n  }\n\n}, 4);\nlet createFauxSubscription;\nmodule.link(\"./createFauxSubscription\", {\n  default(v) {\n    createFauxSubscription = v;\n  }\n\n}, 5);\nlet prepareForProcess;\nmodule.link(\"../lib/prepareForProcess.js\", {\n  default(v) {\n    prepareForProcess = v;\n  }\n\n}, 6);\nlet NamedQueryBase;\nmodule.link(\"../../namedQuery/namedQuery.base\", {\n  default(v) {\n    NamedQueryBase = v;\n  }\n\n}, 7);\n\nclass CountSubscription {\n  /**\n   * @param {*} query - The query to use when fetching counts\n   */\n  constructor(query) {\n    this.accessToken = new ReactiveVar(null);\n    this.fauxHandle = null;\n    this.query = query;\n  }\n  /**\n   * Starts a subscription request for reactive counts.\n   *\n   * @param {*} arg - The argument to pass to {name}.count.subscribe\n   * @param {*} callback\n   */\n\n\n  subscribe(arg, callback) {\n    // Don't try to resubscribe if arg hasn't changed\n    if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\n      return this.fauxHandle;\n    }\n\n    this.accessToken.set(null);\n    this.lastArgs = arg;\n    Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\n      if (!this._markedForUnsubscribe) {\n        this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\n        this.accessToken.set(token);\n        this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\n      }\n\n      this._markedForUnsubscribe = false;\n    });\n    this.fauxHandle = createFauxSubscription(this);\n    return this.fauxHandle;\n  }\n  /**\n   * Unsubscribes from the count endpoint, if there is such a subscription.\n   */\n\n\n  unsubscribe() {\n    if (this.subscriptionHandle) {\n      this.disconnectComputation.stop();\n      this.subscriptionHandle.stop();\n    } else {\n      // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\n      // so set a flag to stop the subscription from being created\n      this._markedForUnsubscribe = true;\n    }\n\n    this.accessToken.set(null);\n    this.fauxHandle = null;\n    this.subscriptionHandle = null;\n  }\n  /**\n   * Reactively fetch current document count. Returns null if the subscription is not ready yet.\n   *\n   * @returns {Number|null} - Current document count\n   */\n\n\n  getCount() {\n    const id = this.accessToken.get();\n    if (id === null) return null;\n    const doc = Counts.findOne(id);\n    return doc.count;\n  }\n  /**\n   * All session info gets deleted when the server goes down, so when the client attempts to\n   * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\n   *\n   * This function prevents that by manually stopping and restarting the subscription when the\n   * connection to the server is lost.\n   */\n\n\n  handleDisconnect() {\n    const status = Meteor.status();\n\n    if (!status.connected) {\n      this._markedForResume = true;\n      this.fauxHandle = null;\n      this.subscriptionHandle.stop();\n    }\n\n    if (status.connected && this._markedForResume) {\n      this._markedForResume = false;\n      this.subscribe(this.lastArgs);\n    }\n  }\n  /**\n   * Returns whether or not a subscription request has been made.\n   */\n\n\n  isSubscribed() {\n    return this.accessToken.get() !== null;\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createFauxSubscription.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/counts/createFauxSubscription.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault(countManager => ({\n  ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\n  stop: () => countManager.unsubscribe()\n}));\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"genEndpoint.server.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/counts/genEndpoint.server.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 2);\nlet COUNTS_COLLECTION_CLIENT;\nmodule.link(\"./constants\", {\n  COUNTS_COLLECTION_CLIENT(v) {\n    COUNTS_COLLECTION_CLIENT = v;\n  }\n\n}, 3);\n// XXX: Should this persist between server restarts?\nconst collection = new Mongo.Collection(null);\n/**\n * This method generates a reactive count endpoint (a method and publication) for a collection or named query.\n *\n * @param {String} name - Name of the query or collection\n * @param {Function} getCursor - Takes in the user's session document as an argument, and turns that into a Mongo cursor.\n * @param {Function} getSession - Takes the subscribe method's argument as its parameter. Should enforce any necessary security constraints. The return value of this function is stored in the session document.\n */\n\nmodule.exportDefault((name, {\n  getCursor,\n  getSession\n}) => {\n  Meteor.methods({\n    [name + '.count.subscribe'](paramsOrBody) {\n      const session = getSession.call(this, paramsOrBody);\n      const sessionId = JSON.stringify(session);\n      const existingSession = collection.findOne({\n        session: sessionId,\n        userId: this.userId\n      }); // Try to reuse sessions if the user subscribes multiple times with the same data\n\n      if (existingSession) {\n        return existingSession._id;\n      }\n\n      const token = collection.insert({\n        session: sessionId,\n        query: name,\n        userId: this.userId\n      });\n      return token;\n    }\n\n  });\n  Meteor.publish(name + '.count', function (token) {\n    check(token, String);\n    const self = this;\n    const request = collection.findOne({\n      _id: token,\n      userId: self.userId\n    });\n\n    if (!request) {\n      throw new Error('no-request', `You must acquire a request token via the \"${name}.count.subscribe\" method first.`);\n    }\n\n    request.session = JSON.parse(request.session);\n    const cursor = getCursor.call(this, request); // Start counting\n\n    let count = 0;\n    let isReady = false;\n    const handle = cursor.observe({\n      added() {\n        count++;\n        isReady && self.changed(COUNTS_COLLECTION_CLIENT, token, {\n          count\n        });\n      },\n\n      removed() {\n        count--;\n        isReady && self.changed(COUNTS_COLLECTION_CLIENT, token, {\n          count\n        });\n      }\n\n    });\n    isReady = true;\n    self.added(COUNTS_COLLECTION_CLIENT, token, {\n      count\n    });\n    self.onStop(() => {\n      handle.stop();\n      collection.remove(token);\n    });\n    self.ready();\n  });\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hypernova\":{\"aggregateSearchFilters.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/aggregateSearchFilters.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => AggregateFilters\n});\nlet sift;\nmodule.link(\"sift\", {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 1);\n\nfunction extractIdsFromArray(array, field) {\n  return (array || []).map(obj => _.isObject(obj) ? dot.pick(field, obj) : undefined).filter(v => !!v);\n}\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\n\n\nclass AggregateFilters {\n  constructor(collectionNode, metaFilters) {\n    this.collectionNode = collectionNode;\n    this.linker = collectionNode.linker;\n    this.metaFilters = metaFilters;\n    this.isVirtual = this.linker.isVirtual();\n    this.linkStorageField = this.linker.linkStorageField;\n  }\n\n  get parentObjects() {\n    return this.collectionNode.parent.results;\n  }\n\n  create() {\n    switch (this.linker.strategy) {\n      case 'one':\n        return this.createOne();\n\n      case 'one-meta':\n        return this.createOneMeta();\n\n      case 'many':\n        return this.createMany();\n\n      case 'many-meta':\n        return this.createManyMeta();\n\n      default:\n        throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n    }\n  }\n\n  createOne() {\n    if (!this.isVirtual) {\n      return {\n        _id: {\n          $in: _.uniq(extractIdsFromArray(this.parentObjects, this.linkStorageField))\n        }\n      };\n    } else {\n      return {\n        [this.linkStorageField]: {\n          $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n        }\n      };\n    }\n  }\n\n  createOneMeta() {\n    if (!this.isVirtual) {\n      let eligibleObjects = this.parentObjects;\n\n      if (this.metaFilters) {\n        eligibleObjects = _.filter(this.parentObjects, object => {\n          return sift(this.metaFilters)(object[this.linkStorageField]);\n        });\n      }\n\n      const storages = _.pluck(eligibleObjects, this.linkStorageField);\n\n      let ids = [];\n\n      _.each(storages, storage => {\n        if (storage) {\n          ids.push(storage._id);\n        }\n      });\n\n      return {\n        _id: {\n          $in: _.uniq(ids)\n        }\n      };\n    } else {\n      let filters = {};\n\n      if (this.metaFilters) {\n        _.each(this.metaFilters, (value, key) => {\n          filters[this.linkStorageField + '.' + key] = value;\n        });\n      }\n\n      filters[this.linkStorageField + '._id'] = {\n        $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n      };\n      return filters;\n    }\n  }\n\n  createMany() {\n    if (!this.isVirtual) {\n      const [root, ...nested] = this.linkStorageField.split('.');\n\n      const arrayOfIds = _.union(...extractIdsFromArray(this.parentObjects, root));\n\n      return {\n        _id: {\n          $in: _.uniq(nested.length > 0 ? extractIdsFromArray(arrayOfIds, nested.join('.')) : arrayOfIds)\n        }\n      };\n    } else {\n      const arrayOfIds = _.pluck(this.parentObjects, '_id');\n\n      return {\n        [this.linkStorageField]: {\n          $in: _.uniq(_.union(...arrayOfIds))\n        }\n      };\n    }\n  }\n\n  createManyMeta() {\n    if (!this.isVirtual) {\n      let ids = [];\n\n      _.each(this.parentObjects, object => {\n        if (object[this.linkStorageField]) {\n          if (this.metaFilters) {\n            const isValid = sift(this.metaFilters);\n\n            _.each(object[this.linkStorageField], object => {\n              if (isValid(object)) {\n                ids.push(object._id);\n              }\n            });\n          } else {\n            _.each(object[this.linkStorageField], object => {\n              ids.push(object._id);\n            });\n          }\n        }\n      });\n\n      return {\n        _id: {\n          $in: _.uniq(ids)\n        }\n      };\n    } else {\n      let filters = {};\n\n      if (this.metaFilters) {\n        _.each(this.metaFilters, (value, key) => {\n          filters[key] = value;\n        });\n      }\n\n      filters._id = {\n        $in: _.uniq(_.pluck(this.parentObjects, '_id'))\n      };\n      return {\n        [this.linkStorageField]: {\n          $elemMatch: filters\n        }\n      };\n    }\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assembleAggregateResults.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/assembleAggregateResults.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet sift;\nmodule.link(\"sift\", {\n  default(v) {\n    sift = v;\n  }\n\n}, 0);\nlet cleanObjectForMetaFilters;\nmodule.link(\"./lib/cleanObjectForMetaFilters\", {\n  default(v) {\n    cleanObjectForMetaFilters = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (childCollectionNode, aggregateResults, metaFilters) {\n  const linker = childCollectionNode.linker;\n  const linkStorageField = linker.linkStorageField;\n  const linkName = childCollectionNode.linkName;\n  const isMeta = linker.isMeta();\n  const isMany = linker.isMany();\n  let allResults = [];\n\n  if (isMeta && metaFilters) {\n    const metaFiltersTest = sift(metaFilters);\n\n    _.each(childCollectionNode.parent.results, parentResult => {\n      cleanObjectForMetaFilters(parentResult, linkStorageField, metaFiltersTest);\n    });\n  }\n\n  if (isMeta && isMany) {\n    // This case is treated differently because we get an array response from the pipeline.\n    _.each(childCollectionNode.parent.results, parentResult => {\n      parentResult[linkName] = parentResult[linkName] || [];\n\n      const eligibleAggregateResults = _.filter(aggregateResults, aggregateResult => {\n        return _.contains(aggregateResult._id, parentResult._id);\n      });\n\n      if (eligibleAggregateResults.length) {\n        const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\n\n\n        _.each(datas, data => {\n          _.each(data, item => {\n            parentResult[linkName].push(item);\n          });\n        });\n      }\n    });\n\n    _.each(aggregateResults, aggregateResult => {\n      _.each(aggregateResult.data, item => allResults.push(item));\n    });\n  } else {\n    let comparator;\n\n    if (isMany) {\n      comparator = (aggregateResult, result) => _.contains(aggregateResult._id, result._id);\n    } else {\n      comparator = (aggregateResult, result) => aggregateResult._id == result._id;\n    }\n\n    const childLinkName = childCollectionNode.linkName;\n    const parentResults = childCollectionNode.parent.results;\n    parentResults.forEach(parentResult => {\n      // We are now finding the data from the pipeline that is related to the _id of the parent\n      const eligibleAggregateResults = aggregateResults.filter(aggregateResult => comparator(aggregateResult, parentResult));\n      eligibleAggregateResults.forEach(aggregateResult => {\n        if (Array.isArray(parentResult[childLinkName])) {\n          parentResult[childLinkName].push(...aggregateResult.data);\n        } else {\n          parentResult[childLinkName] = [...aggregateResult.data];\n        }\n      });\n    });\n    aggregateResults.forEach(aggregateResult => {\n      allResults.push(...aggregateResult.data);\n    });\n  }\n\n  childCollectionNode.results = allResults;\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assembler.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/assembler.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet createSearchFilters;\nmodule.link(\"../../links/lib/createSearchFilters\", {\n  default(v) {\n    createSearchFilters = v;\n  }\n\n}, 0);\nlet cleanObjectForMetaFilters;\nmodule.link(\"./lib/cleanObjectForMetaFilters\", {\n  default(v) {\n    cleanObjectForMetaFilters = v;\n  }\n\n}, 1);\nlet sift;\nmodule.link(\"sift\", {\n  default(v) {\n    sift = v;\n  }\n\n}, 2);\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 3);\nmodule.exportDefault((childCollectionNode, {\n  limit,\n  skip,\n  metaFilters\n}) => {\n  if (childCollectionNode.results.length === 0) {\n    return;\n  }\n\n  const parent = childCollectionNode.parent;\n  const linker = childCollectionNode.linker;\n  const strategy = linker.strategy;\n  const isSingle = linker.isSingle();\n  const isMeta = linker.isMeta();\n  const fieldStorage = linker.linkStorageField; // cleaning the parent results from a child\n  // this may be the wrong approach but it works for now\n\n  if (isMeta && metaFilters) {\n    const metaFiltersTest = sift(metaFilters);\n\n    _.each(parent.results, parentResult => {\n      cleanObjectForMetaFilters(parentResult, fieldStorage, metaFiltersTest);\n    });\n  }\n\n  const resultsByKeyId = _.groupBy(childCollectionNode.results, '_id');\n\n  if (strategy === 'one') {\n    parent.results.forEach(parentResult => {\n      const value = dot.pick(fieldStorage, parentResult);\n\n      if (!value) {\n        return;\n      }\n\n      parentResult[childCollectionNode.linkName] = filterAssembledData(resultsByKeyId[value], {\n        limit,\n        skip\n      });\n    });\n  }\n\n  if (strategy === 'many') {\n    parent.results.forEach(parentResult => {\n      // support dotted fields\n      const [root, ...nested] = fieldStorage.split('.');\n      const value = dot.pick(root, parentResult);\n\n      if (!value) {\n        return;\n      }\n\n      const data = [];\n      value.forEach(v => {\n        const _id = nested.length > 0 ? dot.pick(nested.join('.'), v) : v;\n\n        data.push(_.first(resultsByKeyId[_id]));\n      });\n      parentResult[childCollectionNode.linkName] = filterAssembledData(data, {\n        limit,\n        skip\n      });\n    });\n  }\n\n  if (strategy === 'one-meta') {\n    parent.results.forEach(parentResult => {\n      if (!parentResult[fieldStorage]) {\n        return;\n      }\n\n      const _id = parentResult[fieldStorage]._id;\n      parentResult[childCollectionNode.linkName] = filterAssembledData(resultsByKeyId[_id], {\n        limit,\n        skip\n      });\n    });\n  }\n\n  if (strategy === 'many-meta') {\n    parent.results.forEach(parentResult => {\n      const _ids = _.pluck(parentResult[fieldStorage], '_id');\n\n      let data = [];\n\n      _ids.forEach(_id => {\n        data.push(_.first(resultsByKeyId[_id]));\n      });\n\n      parentResult[childCollectionNode.linkName] = filterAssembledData(data, {\n        limit,\n        skip\n      });\n    });\n  }\n});\n\nfunction filterAssembledData(data, {\n  limit,\n  skip\n}) {\n  if (limit && Array.isArray(data)) {\n    return data.slice(skip, limit);\n  }\n\n  return data;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"buildAggregatePipeline.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/buildAggregatePipeline.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet SAFE_DOTTED_FIELD_REPLACEMENT;\nmodule.link(\"./constants\", {\n  SAFE_DOTTED_FIELD_REPLACEMENT(v) {\n    SAFE_DOTTED_FIELD_REPLACEMENT = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (childCollectionNode, filters, options, userId) {\n  let containsDottedFields = false;\n  const linker = childCollectionNode.linker;\n  const linkStorageField = linker.linkStorageField;\n  const collection = childCollectionNode.collection;\n  let pipeline = [];\n\n  if (collection.firewall) {\n    collection.firewall(filters, options, userId);\n  }\n\n  filters = cleanUndefinedLeafs(filters);\n  pipeline.push({\n    $match: filters\n  });\n\n  if (options.sort && _.keys(options.sort).length > 0) {\n    pipeline.push({\n      $sort: options.sort\n    });\n  }\n\n  let _id = linkStorageField;\n\n  if (linker.isMeta()) {\n    _id += '._id';\n  }\n\n  let dataPush = {\n    _id: '$_id'\n  };\n\n  _.each(options.fields, (value, field) => {\n    if (field.indexOf('.') >= 0) {\n      containsDottedFields = true;\n    }\n\n    const safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n    dataPush[safeField] = '$' + field;\n  });\n\n  if (linker.isMeta()) {\n    dataPush[linkStorageField] = '$' + linkStorageField;\n  }\n\n  pipeline.push({\n    $group: {\n      _id: \"$\" + _id,\n      data: {\n        $push: dataPush\n      }\n    }\n  });\n\n  if (options.limit || options.skip) {\n    let $slice = [\"$data\"];\n    if (options.skip) $slice.push(options.skip);\n    if (options.limit) $slice.push(options.limit);\n    pipeline.push({\n      $project: {\n        _id: 1,\n        data: {\n          $slice\n        }\n      }\n    });\n  }\n\n  function cleanUndefinedLeafs(tree) {\n    const a = Object.assign({}, tree);\n\n    _.each(a, (value, key) => {\n      if (value === undefined) {\n        delete a[key];\n      }\n\n      if (!_.isArray(value) && _.isObject(value)) {\n        a[key] = cleanUndefinedLeafs(value);\n      }\n    });\n\n    return a;\n  }\n\n  return {\n    pipeline,\n    containsDottedFields\n  };\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constants.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/constants.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  SAFE_DOTTED_FIELD_REPLACEMENT: () => SAFE_DOTTED_FIELD_REPLACEMENT\n});\nconst SAFE_DOTTED_FIELD_REPLACEMENT = '___';\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hypernova.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/hypernova.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => hypernovaInit\n});\nlet applyProps;\nmodule.link(\"../lib/applyProps.js\", {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet prepareForDelivery;\nmodule.link(\"../lib/prepareForDelivery.js\", {\n  default(v) {\n    prepareForDelivery = v;\n  }\n\n}, 1);\nlet storeHypernovaResults;\nmodule.link(\"./storeHypernovaResults.js\", {\n  default(v) {\n    storeHypernovaResults = v;\n  }\n\n}, 2);\n\nfunction hypernova(collectionNode, userId) {\n  _.each(collectionNode.collectionNodes, childCollectionNode => {\n    let {\n      filters,\n      options\n    } = applyProps(childCollectionNode);\n    storeHypernovaResults(childCollectionNode, userId);\n    hypernova(childCollectionNode, userId);\n  });\n}\n\nfunction hypernovaInit(collectionNode, userId, config = {}) {\n  const bypassFirewalls = config.bypassFirewalls || false;\n  const params = config.params || {};\n  let {\n    filters,\n    options\n  } = applyProps(collectionNode);\n  const collection = collectionNode.collection;\n  collectionNode.results = collection.find(filters, options, userId).fetch();\n  const userIdToPass = config.bypassFirewalls ? undefined : userId;\n  hypernova(collectionNode, userIdToPass);\n  prepareForDelivery(collectionNode, params);\n  return collectionNode.results;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"storeHypernovaResults.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/storeHypernovaResults.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  default: () => storeHypernovaResults\n});\nlet applyProps;\nmodule.link(\"../lib/applyProps.js\", {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet AggregateFilters;\nmodule.link(\"./aggregateSearchFilters.js\", {\n  default(v) {\n    AggregateFilters = v;\n  }\n\n}, 1);\nlet assemble;\nmodule.link(\"./assembler.js\", {\n  default(v) {\n    assemble = v;\n  }\n\n}, 2);\nlet assembleAggregateResults;\nmodule.link(\"./assembleAggregateResults.js\", {\n  default(v) {\n    assembleAggregateResults = v;\n  }\n\n}, 3);\nlet buildAggregatePipeline;\nmodule.link(\"./buildAggregatePipeline.js\", {\n  default(v) {\n    buildAggregatePipeline = v;\n  }\n\n}, 4);\nlet snapBackDottedFields;\nmodule.link(\"./lib/snapBackDottedFields\", {\n  default(v) {\n    snapBackDottedFields = v;\n  }\n\n}, 5);\n\nfunction storeHypernovaResults(childCollectionNode, userId) {\n  if (childCollectionNode.parent.results.length === 0) {\n    return childCollectionNode.results = [];\n  }\n\n  let {\n    filters,\n    options\n  } = applyProps(childCollectionNode);\n  const metaFilters = filters.$meta;\n  const aggregateFilters = new AggregateFilters(childCollectionNode, metaFilters);\n  delete filters.$meta;\n  const linker = childCollectionNode.linker;\n  const isVirtual = linker.isVirtual();\n  const collection = childCollectionNode.collection;\n\n  _.extend(filters, aggregateFilters.create()); // if it's not virtual then we retrieve them and assemble them here.\n\n\n  if (!isVirtual) {\n    const filteredOptions = _.omit(options, 'limit');\n\n    childCollectionNode.results = collection.find(filters, filteredOptions, userId).fetch();\n    assemble(childCollectionNode, (0, _objectSpread2.default)({}, options, {\n      metaFilters\n    }));\n  } else {\n    // virtuals arrive here\n    let {\n      pipeline,\n      containsDottedFields\n    } = buildAggregatePipeline(childCollectionNode, filters, options, userId);\n    let aggregateResults = collection.aggregate(pipeline);\n    /**\n     * If in aggregation it contains '.', we replace it with a custom string '___'\n     * And then after aggregation is complete we need to snap-it back to how it was.\n     */\n\n    if (containsDottedFields) {\n      snapBackDottedFields(aggregateResults);\n    }\n\n    assembleAggregateResults(childCollectionNode, aggregateResults, metaFilters);\n  }\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"cleanObjectForMetaFilters.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault(function (object, field, metaFiltersTest) {\n  if (object[field]) {\n    if (_.isArray(object[field])) {\n      object[field] = object[field].filter(metaFiltersTest);\n    } else {\n      if (!metaFiltersTest(object[field])) {\n        object[field] = null;\n      }\n    }\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"snapBackDottedFields.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/hypernova/lib/snapBackDottedFields.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet SAFE_DOTTED_FIELD_REPLACEMENT;\nmodule.link(\"../constants\", {\n  SAFE_DOTTED_FIELD_REPLACEMENT(v) {\n    SAFE_DOTTED_FIELD_REPLACEMENT = v;\n  }\n\n}, 0);\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 1);\nmodule.exportDefault(function (aggregationResult) {\n  aggregationResult.forEach(result => {\n    result.data = result.data.map(document => {\n      _.each(document, (value, key) => {\n        if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n          document[key.replace(new RegExp(SAFE_DOTTED_FIELD_REPLACEMENT, 'g'), '.')] = value;\n          delete document[key];\n        }\n      });\n\n      return dot.object(document);\n    });\n  });\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"lib\":{\"applyProps.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/applyProps.js                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => applyProps\n});\nconst restrictOptions = ['disableOplog', 'pollingIntervalMs', 'pollingThrottleMs'];\n\nfunction applyProps(node) {\n  let filters = Object.assign({}, node.props.$filters);\n  let options = Object.assign({}, node.props.$options);\n  options = _.omit(options, ...restrictOptions);\n  options.fields = options.fields || {};\n  node.applyFields(filters, options);\n  return {\n    filters,\n    options\n  };\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"callWithPromise.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/callWithPromise.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault((method, myParameters) => {\n  return new Promise((resolve, reject) => {\n    Meteor.call(method, myParameters, (err, res) => {\n      if (err) reject(err.reason || 'Something went wrong.');\n      resolve(res);\n    });\n  });\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createGraph.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/createGraph.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  specialFields: () => specialFields,\n  createNodes: () => createNodes,\n  addFieldNode: () => addFieldNode,\n  getNodeNamespace: () => getNodeNamespace\n});\nlet CollectionNode;\nmodule.link(\"../nodes/collectionNode.js\", {\n  default(v) {\n    CollectionNode = v;\n  }\n\n}, 0);\nlet FieldNode;\nmodule.link(\"../nodes/fieldNode.js\", {\n  default(v) {\n    FieldNode = v;\n  }\n\n}, 1);\nlet ReducerNode;\nmodule.link(\"../nodes/reducerNode.js\", {\n  default(v) {\n    ReducerNode = v;\n  }\n\n}, 2);\nlet dotize;\nmodule.link(\"./dotize.js\", {\n  default(v) {\n    dotize = v;\n  }\n\n}, 3);\nlet createReducers;\nmodule.link(\"../reducers/lib/createReducers\", {\n  default(v) {\n    createReducers = v;\n  }\n\n}, 4);\nconst specialFields = ['$filters', '$options', '$postFilters', '$postOptions', '$postFilter'];\n\nfunction createNodes(root) {\n  // this is a fix for phantomjs tests (don't really understand it.)\n  if (!_.isObject(root.body)) {\n    return;\n  }\n\n  _.each(root.body, (body, fieldName) => {\n    if (!body) {\n      return;\n    } // if it's a prop\n\n\n    if (_.contains(specialFields, fieldName)) {\n      root.addProp(fieldName, body);\n      return;\n    } // workaround, see https://github.com/cult-of-coders/grapher/issues/134\n    // TODO: find another way to do this\n\n\n    if (root.collection.default) {\n      root.collection = root.collection.default;\n    } // checking if it is a link.\n\n\n    let linker = root.collection.getLinker(fieldName);\n\n    if (linker) {\n      // check if it is a cached link\n      // if yes, then we need to explicitly define this at collection level\n      // so when we transform the data for delivery, we move it to the link name\n      if (linker.isDenormalized()) {\n        if (linker.isSubBodyDenormalized(body)) {\n          handleDenormalized(root, linker, body, fieldName);\n          return;\n        }\n      }\n\n      let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName); // must be before adding linker because _shouldCleanStorage method\n\n      createNodes(subroot);\n      root.add(subroot, linker);\n      return;\n    } // checking if it's a reducer\n\n\n    const reducer = root.collection.getReducer(fieldName);\n\n    if (reducer) {\n      let reducerNode = new ReducerNode(fieldName, reducer);\n      root.add(reducerNode);\n    } // it's most likely a field then\n\n\n    addFieldNode(body, fieldName, root);\n  });\n\n  createReducers(root);\n\n  if (root.fieldNodes.length === 0) {\n    root.add(new FieldNode('_id', 1));\n  }\n}\n\nfunction isProjectionOperatorExpression(body) {\n  if (_.isObject(body)) {\n    const keys = _.keys(body);\n\n    return keys.length === 1 && _.contains(['$elemMatch', '$meta', '$slice'], keys[0]);\n  }\n\n  return false;\n}\n/**\n * @param body\n * @param fieldName\n * @param root\n */\n\n\nfunction addFieldNode(body, fieldName, root) {\n  // it's not a link and not a special variable => we assume it's a field\n  if (_.isObject(body)) {\n    if (!isProjectionOperatorExpression(body)) {\n      let dotted = dotize.convert({\n        [fieldName]: body\n      });\n\n      _.each(dotted, (value, key) => {\n        root.add(new FieldNode(key, value));\n      });\n    } else {\n      root.add(new FieldNode(fieldName, body, true));\n    }\n  } else {\n    let fieldNode = new FieldNode(fieldName, body);\n    root.add(fieldNode);\n  }\n}\n\nfunction getNodeNamespace(node) {\n  const parts = [];\n  let n = node;\n\n  while (n) {\n    const name = n.linker ? n.linker.linkName : n.collection._name;\n    parts.push(name); // console.log('linker', node.linker ? node.linker.linkName : node.collection._name);\n\n    n = n.parent;\n  }\n\n  return parts.reverse().join('_');\n}\n\nmodule.exportDefault(function (collection, body) {\n  let root = new CollectionNode(collection, body);\n  createNodes(root);\n  return root;\n});\n;\n/**\n * Ads denormalization config properly, including _id\n *\n * @param root\n * @param linker\n * @param body\n * @param fieldName\n */\n\nfunction handleDenormalized(root, linker, body, fieldName) {\n  Object.assign(body, {\n    _id: 1\n  });\n  const cacheField = linker.linkConfig.denormalize.field;\n  root.snapCache(cacheField, fieldName); // if it's one and direct also include the link storage\n\n  if (!linker.isMany() && !linker.isVirtual()) {\n    addFieldNode(1, linker.linkStorageField, root);\n  }\n\n  addFieldNode(body, cacheField, root);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"dotize.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/dotize.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exportDefault(dotize = {});\n\ndotize.convert = function (obj, prefix) {\n  if ((!obj || typeof obj != \"object\") && !Array.isArray(obj)) {\n    if (prefix) {\n      var newObj = {};\n      newObj[prefix] = obj;\n      return newObj;\n    } else {\n      return obj;\n    }\n  }\n\n  var newObj = {};\n\n  function recurse(o, p, isArrayItem) {\n    for (var f in o) {\n      if (o[f] && typeof o[f] === \"object\") {\n        if (Array.isArray(o[f])) {\n          if (isEmptyArray(o[f])) {\n            newObj[getFieldName(f, p, true)] = o[f]; // empty array\n          } else {\n            newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\n          }\n        } else {\n          if (isArrayItem) {\n            if (isEmptyObj(o[f])) {\n              newObj[getFieldName(f, p, true)] = o[f]; // empty object\n            } else {\n              newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\n            }\n          } else {\n            if (isEmptyObj(o[f])) {\n              newObj[getFieldName(f, p)] = o[f]; // empty object\n            } else {\n              newObj = recurse(o[f], getFieldName(f, p)); // object\n            }\n          }\n        }\n      } else {\n        if (isArrayItem || isNumber(f)) {\n          newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\n        } else {\n          newObj[getFieldName(f, p)] = o[f]; // primitive\n        }\n      }\n    }\n\n    if (isEmptyObj(newObj)) return obj;\n    return newObj;\n  }\n\n  function isNumber(f) {\n    return !isNaN(parseInt(f));\n  }\n\n  function isEmptyObj(obj) {\n    for (var prop in obj) {\n      if (Object.hasOwnProperty.call(obj, prop)) return false;\n    }\n\n    return true;\n  }\n\n  function isEmptyArray(o) {\n    if (Array.isArray(o) && o.length == 0) return true;\n    return false;\n  }\n\n  function getFieldName(field, prefix, isArrayItem, isArray) {\n    if (isArray) return (prefix ? prefix : \"\") + (isNumber(field) ? \"[\" + field + \"]\" : \".\" + field);else if (isArrayItem) return (prefix ? prefix : \"\") + \"[\" + field + \"]\";else return (prefix ? prefix + \".\" : \"\") + field;\n  }\n\n  return recurse(obj, prefix, Array.isArray(obj));\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fieldInProjection.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/fieldInProjection.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  expandField: () => expandField,\n  isFieldInProjection: () => isFieldInProjection\n});\n\nfunction expandField(fieldName) {\n  const parts = fieldName.split('.');\n  const result = [];\n\n  for (let i = 0; i < parts.length; i++) {\n    result.push(parts.slice(0, i + 1).join('.'));\n  }\n\n  return result;\n}\n\nfunction isFieldInProjection(projection, fieldName, checkNested) {\n  // for checkNested flag expand the field\n  const fields = checkNested ? expandField(fieldName) : [fieldName];\n  return fields.some(field => projection[field]);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"intersectDeep.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/intersectDeep.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet specialFields;\nmodule.link(\"./createGraph\", {\n  specialFields(v) {\n    specialFields = v;\n  }\n\n}, 1);\nconst EXTENDED_SPECIAL_FIELDS = [...specialFields, '$filter', '$paginate'];\n\nfunction isClientValueValid(value) {\n  if (_.isObject(value) && !_.isArray(value)) {\n    return _.values(value).every(nestedValue => isClientValueValid(nestedValue));\n  } else if (value === 1) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * \n * Recursive function which intersects the fields of the body objects.\n * \n * @param {object} allowed allowed body object - intersection can only be a subset of it\n * @param {object} client client body - can shrink main body, but not expand\n */\n\n\nfunction intersectFields(allowed, client) {\n  const intersection = {};\n\n  _.pairs(client).forEach(([field, clientValue]) => {\n    if (_.contains(EXTENDED_SPECIAL_FIELDS, field)) {\n      return;\n    }\n\n    const serverValue = allowed[field];\n\n    if (serverValue === 1) {\n      // server allows everything\n      if (isClientValueValid(clientValue)) {\n        intersection[field] = clientValue;\n      }\n    } else if (_.isObject(serverValue)) {\n      if (_.isObject(clientValue) && !_.isArray(clientValue)) {\n        intersection[field] = intersectFields(serverValue, clientValue);\n      } else if (clientValue === 1) {\n        // if client wants everything, serverValue is more restrictive here\n        intersection[field] = serverValue;\n      }\n    }\n  });\n\n  return intersection;\n}\n/**\n * Given a named query that has a specific body, you can query its subbody\n * This performs an intersection of the bodies allowed in each\n *\n * @param allowedBody\n * @param clientBody\n */\n\n\nmodule.exportDefault(function (allowedBody, clientBody) {\n  const build = intersectFields(allowedBody, clientBody); // Add back special fields to the new body\n\n  Object.assign(build, _.pick(allowedBody, ...EXTENDED_SPECIAL_FIELDS));\n  return build;\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"prepareForDelivery.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/prepareForDelivery.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  applyPostFilters: () => applyPostFilters,\n  applyPostOptions: () => applyPostOptions,\n  getResultsArray: () => getResultsArray,\n  removeLinkStorages: () => removeLinkStorages,\n  storeOneResults: () => storeOneResults,\n  assembleMetadata: () => assembleMetadata\n});\nlet applyReducers;\nmodule.link(\"../reducers/lib/applyReducers\", {\n  default(v) {\n    applyReducers = v;\n  }\n\n}, 0);\nlet cleanReducerLeftovers;\nmodule.link(\"../reducers/lib/cleanReducerLeftovers\", {\n  default(v) {\n    cleanReducerLeftovers = v;\n  }\n\n}, 1);\nlet sift;\nmodule.link(\"sift\", {\n  default(v) {\n    sift = v;\n  }\n\n}, 2);\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 3);\nlet Minimongo;\nmodule.link(\"meteor/minimongo\", {\n  Minimongo(v) {\n    Minimongo = v;\n  }\n\n}, 4);\nmodule.exportDefault((node, params) => {\n  snapBackCaches(node);\n  storeOneResults(node, node.results);\n  applyReducers(node, params);\n\n  _.each(node.collectionNodes, collectionNode => {\n    cloneMetaChildren(collectionNode, node.results);\n  });\n\n  _.each(node.collectionNodes, collectionNode => {\n    assembleMetadata(collectionNode, node.results);\n  });\n\n  cleanReducerLeftovers(node, node.results);\n  removeLinkStorages(node, node.results);\n  applyPostFilters(node);\n  applyPostOptions(node);\n  applyPostFilter(node, params);\n});\n\nfunction applyPostFilters(node) {\n  const postFilters = node.props.$postFilters;\n\n  if (postFilters) {\n    node.results = sift(postFilters, node.results);\n  }\n}\n\nfunction applyPostOptions(node) {\n  const options = node.props.$postOptions;\n\n  if (options) {\n    if (options.sort) {\n      const sorter = new Minimongo.Sorter(options.sort);\n      node.results.sort(sorter.getComparator());\n    }\n\n    if (options.limit || options.skip) {\n      const start = options.skip || 0;\n      const end = options.limit ? options.limit + start : node.results.length;\n      node.results = node.results.slice(start, end);\n    }\n  }\n}\n\n/**\n * Optionally applies a post filtering option\n */\nfunction applyPostFilter(node, params) {\n  if (node.props.$postFilter) {\n    const filter = node.props.$postFilter;\n\n    if (_.isArray(filter)) {\n      filter.forEach(f => {\n        node.results = f(node.results, params);\n      });\n    } else {\n      node.results = filter(node.results, params);\n    }\n  }\n}\n/**\n *\n * Helper function which transforms results into the array.\n * Results are an object for 'one' links.\n *\n * @param results\n * @return array\n */\n\n\nfunction getResultsArray(results) {\n  if (_.isArray(results)) {\n    return results;\n  } else if (_.isUndefined(results)) {\n    return [];\n  }\n\n  return [results];\n}\n\nfunction removeLinkStorages(node, sameLevelResults) {\n  if (!sameLevelResults) {\n    return;\n  }\n\n  sameLevelResults = getResultsArray(sameLevelResults);\n\n  _.each(node.collectionNodes, collectionNode => {\n    const removeStorageField = collectionNode.shouldCleanStorage;\n\n    _.each(sameLevelResults, result => {\n      if (removeStorageField) {\n        const isSingle = collectionNode.linker.isSingle();\n        const [root, ...nested] = collectionNode.linkStorageField.split('.');\n\n        const removeFromResult = (result, removeEmptyRoot = false) => {\n          if (isSingle) {\n            dot.pick(collectionNode.linkStorageField, result, true);\n\n            if (removeEmptyRoot && nested.length > 0 && _.isEmpty(result[root])) {\n              delete result[root];\n            }\n          } else {\n            if (nested.length > 0) {\n              const arr = result[root] || [];\n\n              if (_.isArray(arr)) {\n                arr.forEach(obj => dot.pick(nested.join('.'), obj, true));\n\n                if (removeEmptyRoot && nested.length > 0 && arr.every(obj => _.isEmpty(obj))) {\n                  delete result[root];\n                }\n              }\n            } else {\n              delete result[collectionNode.linkStorageField];\n            }\n          }\n        };\n\n        if (collectionNode.isVirtual) {\n          const childResults = getResultsArray(result[collectionNode.linkName]);\n\n          _.each(childResults, childResult => {\n            removeFromResult(childResult);\n          });\n        } else {\n          removeFromResult(result);\n        }\n      }\n\n      removeLinkStorages(collectionNode, result[collectionNode.linkName]);\n    });\n  });\n}\n\nfunction storeOneResults(node, sameLevelResults) {\n  if (!sameLevelResults) {\n    return;\n  }\n\n  node.collectionNodes.forEach(collectionNode => {\n    _.each(sameLevelResults, result => {\n      // The reason we are doing this is that if the requested link does not exist\n      // It will fail when we try to get undefined[something] below\n      if (result === undefined) {\n        return;\n      }\n\n      storeOneResults(collectionNode, result[collectionNode.linkName]);\n    });\n\n    if (collectionNode.isOneResult) {\n      _.each(sameLevelResults, result => {\n        if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\n          result[collectionNode.linkName] = result[collectionNode.linkName] ? _.first(result[collectionNode.linkName]) : undefined;\n        }\n      });\n    }\n  });\n}\n\nfunction cloneMetaChildren(node, parentResults) {\n  if (!parentResults) {\n    return;\n  }\n\n  const linkName = node.linkName;\n  const isMeta = node.isMeta; // parentResults might be an object (for type==one links)\n\n  parentResults = getResultsArray(parentResults);\n  parentResults.forEach(parentResult => {\n    if (isMeta && parentResult[linkName]) {\n      if (node.isOneResult) {\n        parentResult[linkName] = Object.assign({}, parentResult[linkName]);\n      } else {\n        parentResult[linkName] = parentResult[linkName].map(object => {\n          return Object.assign({}, object);\n        });\n      }\n    }\n\n    node.collectionNodes.forEach(collectionNode => {\n      cloneMetaChildren(collectionNode, parentResult[linkName]);\n    });\n  });\n}\n\nfunction assembleMetadata(node, parentResults) {\n  parentResults = getResultsArray(parentResults); // assembling metadata is depth first\n\n  node.collectionNodes.forEach(collectionNode => {\n    _.each(parentResults, result => {\n      assembleMetadata(collectionNode, result[node.linkName]);\n    });\n  });\n\n  if (node.isMeta) {\n    if (node.isVirtual) {\n      _.each(parentResults, parentResult => {\n        const childResult = parentResult[node.linkName];\n\n        if (node.isOneResult) {\n          if (_.isObject(childResult)) {\n            const storage = childResult[node.linkStorageField];\n            storeMetadata(childResult, parentResult, storage, true);\n          }\n        } else {\n          _.each(childResult, object => {\n            const storage = object[node.linkStorageField];\n            storeMetadata(object, parentResult, storage, true);\n          });\n        }\n      });\n    } else {\n      _.each(parentResults, parentResult => {\n        const childResult = parentResult[node.linkName];\n        const storage = parentResult[node.linkStorageField];\n\n        if (node.isOneResult) {\n          if (childResult) {\n            storeMetadata(childResult, parentResult, storage, false);\n          }\n        } else {\n          _.each(childResult, object => {\n            storeMetadata(object, parentResult, storage, false);\n          });\n        }\n      });\n    }\n  }\n}\n\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\n  if (isVirtual) {\n    let $metadata;\n\n    if (_.isArray(storage)) {\n      $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\n    } else {\n      $metadata = storage;\n    }\n\n    element.$metadata = _.omit($metadata, '_id');\n  } else {\n    let $metadata;\n\n    if (_.isArray(storage)) {\n      $metadata = _.find(storage, storageItem => storageItem._id == element._id);\n    } else {\n      $metadata = storage;\n    }\n\n    element.$metadata = _.omit($metadata, '_id');\n  }\n}\n\nfunction snapBackCaches(node) {\n  node.collectionNodes.forEach(collectionNode => {\n    snapBackCaches(collectionNode);\n  });\n\n  if (!_.isEmpty(node.snapCaches)) {\n    // process stuff\n    _.each(node.snapCaches, (linkName, cacheField) => {\n      const isSingle = _.contains(node.snapCachesSingles, cacheField);\n\n      const linker = node.collection.getLinker(linkName); // we do this because for one direct and one meta direct, id is not stored\n\n      const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\n      node.results.forEach(result => {\n        if (result[cacheField]) {\n          if (shoudStoreLinkStorage) {\n            Object.assign(result[cacheField], {\n              _id: linker.isMeta() ? result[linker.linkStorageField]._id : result[linker.linkStorageField]\n            });\n          }\n\n          if (isSingle && _.isArray(result[cacheField])) {\n            result[linkName] = _.first(result[cacheField]);\n          } else {\n            result[linkName] = result[cacheField];\n          }\n\n          delete result[cacheField];\n        }\n      });\n    });\n  }\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"prepareForProcess.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/prepareForProcess.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 1);\n\nfunction defaultFilterFunction({\n  filters,\n  options,\n  params\n}) {\n  if (params.filters) {\n    Object.assign(filters, params.filters);\n  }\n\n  if (params.options) {\n    Object.assign(options, params.options);\n  }\n}\n\nfunction applyFilterRecursive(data, params = {}, isRoot = false) {\n  if (isRoot && !_.isFunction(data.$filter)) {\n    data.$filter = defaultFilterFunction;\n  }\n\n  if (data.$filter) {\n    check(data.$filter, Match.OneOf(Function, [Function]));\n    data.$filters = data.$filters || {};\n    data.$options = data.$options || {};\n\n    if (_.isArray(data.$filter)) {\n      data.$filter.forEach(filter => {\n        filter.call(null, {\n          filters: data.$filters,\n          options: data.$options,\n          params: params\n        });\n      });\n    } else {\n      data.$filter({\n        filters: data.$filters,\n        options: data.$options,\n        params: params\n      });\n    }\n\n    data.$filter = null;\n    delete data.$filter;\n  }\n\n  _.each(data, (value, key) => {\n    if (_.isObject(value)) {\n      return applyFilterRecursive(value, params);\n    }\n  });\n}\n\nfunction applyPagination(body, _params) {\n  if (body['$paginate'] && _params) {\n    if (!body.$options) {\n      body.$options = {};\n    }\n\n    if (_params.limit) {\n      _.extend(body.$options, {\n        limit: _params.limit\n      });\n    }\n\n    if (_params.skip) {\n      _.extend(body.$options, {\n        skip: _params.skip\n      });\n    }\n\n    delete body['$paginate'];\n  }\n}\n\nmodule.exportDefault((_body, _params = {}) => {\n  let body = deepClone(_body);\n  let params = deepClone(_params);\n  applyPagination(body, params);\n  applyFilterRecursive(body, params, true);\n  return body;\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"recursiveCompose.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/recursiveCompose.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet applyProps;\nmodule.link(\"./applyProps.js\", {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet getNodeNamespace;\nmodule.link(\"./createGraph\", {\n  getNodeNamespace(v) {\n    getNodeNamespace = v;\n  }\n\n}, 1);\nlet isFieldInProjection;\nmodule.link(\"./fieldInProjection\", {\n  isFieldInProjection(v) {\n    isFieldInProjection = v;\n  }\n\n}, 2);\n\n/**\n * Adds _query_path fields to the cursor docs which are used for scoped query filtering on the client.\n * \n * @param cursor \n * @param ns \n */\nfunction patchCursor(cursor, ns) {\n  const originalObserve = cursor.observe;\n\n  cursor.observe = function (callbacks) {\n    const newCallbacks = Object.assign({}, callbacks);\n\n    if (callbacks.added) {\n      newCallbacks.added = doc => {\n        doc = _.clone(doc);\n        doc[`_query_path_${ns}`] = 1;\n        callbacks.added(doc);\n      };\n    }\n\n    return originalObserve.call(cursor, newCallbacks);\n  };\n}\n\nfunction compose(node, userId, config) {\n  return {\n    find(parent) {\n      if (parent) {\n        let {\n          filters,\n          options\n        } = applyProps(node); // composition\n\n        let linker = node.linker;\n        let accessor = linker.createLink(parent); // the rule is this, if a child I want to fetch is virtual, then I want to fetch the link storage of those fields\n\n        if (linker.isVirtual()) {\n          options.fields = options.fields || {};\n\n          if (!isFieldInProjection(options.fields, linker.linkStorageField, true)) {\n            _.extend(options.fields, {\n              [linker.linkStorageField]: 1\n            });\n          }\n        }\n\n        const cursor = accessor.find(filters, options, userId);\n\n        if (config.scoped) {\n          patchCursor(cursor, getNodeNamespace(node));\n        }\n\n        return cursor;\n      }\n    },\n\n    children: _.map(node.collectionNodes, n => compose(n, userId, config))\n  };\n}\n\nmodule.exportDefault((node, userId, config = {\n  bypassFirewalls: false,\n  scoped: false\n}) => {\n  return {\n    find() {\n      let {\n        filters,\n        options\n      } = applyProps(node);\n      const cursor = node.collection.find(filters, options, userId);\n\n      if (config.scoped) {\n        patchCursor(cursor, getNodeNamespace(node));\n      }\n\n      return cursor;\n    },\n\n    children: _.map(node.collectionNodes, n => {\n      const userIdToPass = config.bypassFirewalls ? undefined : userId;\n      return compose(n, userIdToPass, config);\n    })\n  };\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"recursiveFetch.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/lib/recursiveFetch.js                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet applyProps;\nmodule.link(\"./applyProps.js\", {\n  default(v) {\n    applyProps = v;\n  }\n\n}, 0);\nlet assembleMetadata, removeLinkStorages, storeOneResults;\nmodule.link(\"./prepareForDelivery\", {\n  assembleMetadata(v) {\n    assembleMetadata = v;\n  },\n\n  removeLinkStorages(v) {\n    removeLinkStorages = v;\n  },\n\n  storeOneResults(v) {\n    storeOneResults = v;\n  }\n\n}, 1);\nlet prepareForDelivery;\nmodule.link(\"./prepareForDelivery\", {\n  default(v) {\n    prepareForDelivery = v;\n  }\n\n}, 2);\nlet getNodeNamespace;\nmodule.link(\"./createGraph\", {\n  getNodeNamespace(v) {\n    getNodeNamespace = v;\n  }\n\n}, 3);\nlet isFieldInProjection;\nmodule.link(\"../lib/fieldInProjection\", {\n  isFieldInProjection(v) {\n    isFieldInProjection = v;\n  }\n\n}, 4);\n\n/**\n * This is always run client side to build the data graph out of client-side collections.\n *\n * @param node\n * @param parentObject\n * @param fetchOptions\n * @returns {*}\n */\nfunction fetch(node, parentObject, fetchOptions = {}) {\n  let {\n    filters,\n    options\n  } = applyProps(node); // add subscription filter\n\n  if (fetchOptions.scoped && fetchOptions.subscriptionHandle) {\n    _.extend(filters, fetchOptions.subscriptionHandle.scopeQuery());\n  } // add query path filter\n\n\n  if (fetchOptions.scoped) {\n    _.extend(filters, {\n      [`_query_path_${getNodeNamespace(node)}`]: {\n        $exists: true\n      }\n    });\n  }\n\n  let results = [];\n\n  if (parentObject) {\n    let accessor = node.linker.createLink(parentObject, node.collection);\n\n    if (node.isVirtual) {\n      options.fields = options.fields || {};\n\n      if (!isFieldInProjection(options.fields, node.linkStorageField, true)) {\n        _.extend(options.fields, {\n          [node.linkStorageField]: 1\n        });\n      }\n    }\n\n    results = accessor.find(filters, options).fetch();\n  } else {\n    results = node.collection.find(filters, options).fetch();\n  }\n\n  _.each(node.collectionNodes, collectionNode => {\n    _.each(results, result => {\n      const collectionNodeResults = fetch(collectionNode, result);\n      result[collectionNode.linkName] = collectionNodeResults; //delete result[node.linker.linkStorageField];\n\n      /**\n       * Push into the results, because snapBackCaches() in prepareForDelivery does not work otherwise.\n       * This is non-optimal, can we be sure that every item in results contains _id and add only if not in\n       * the results?\n       *\n       * Other possible ways:\n       * - do something like assemble() in storeHypernovaResults\n       * - pass node.results to accessor above and find with sift\n       */\n\n      collectionNode.results.push(...collectionNodeResults); // this was not working because all references must be replaced in snapBackCaches, not only the ones that are \n      // found first\n      // const currentIds = _.pluck(collectionNode.results, '_id');\n      // collectionNode.results.push(...collectionNodeResults.filter(res => !_.contains(currentIds, res._id)));\n    });\n  });\n\n  return results;\n}\n\nmodule.exportDefault((node, params, fetchOptions) => {\n  node.results = fetch(node, null, fetchOptions);\n  prepareForDelivery(node, params);\n  return node.results;\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"nodes\":{\"collectionNode.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/nodes/collectionNode.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  default: () => CollectionNode,\n  runFieldSanityChecks: () => runFieldSanityChecks\n});\nlet FieldNode;\nmodule.link(\"./fieldNode.js\", {\n  default(v) {\n    FieldNode = v;\n  }\n\n}, 0);\nlet ReducerNode;\nmodule.link(\"./reducerNode.js\", {\n  default(v) {\n    ReducerNode = v;\n  }\n\n}, 1);\nlet deepClone;\nmodule.link(\"lodash.clonedeep\", {\n  default(v) {\n    deepClone = v;\n  }\n\n}, 2);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 3);\nlet expandField, isFieldInProjection;\nmodule.link(\"../lib/fieldInProjection\", {\n  expandField(v) {\n    expandField = v;\n  },\n\n  isFieldInProjection(v) {\n    isFieldInProjection = v;\n  }\n\n}, 4);\n\nclass CollectionNode {\n  constructor(collection, body = {}, linkName = null) {\n    if (collection && !_.isObject(body)) {\n      throw new Meteor.Error('invalid-body', `The field \"${linkName}\" is a collection link, and should have its body defined as an object.`);\n    }\n\n    this.body = deepClone(body);\n    this.linkName = linkName;\n    this.collection = collection;\n    this.nodes = [];\n    this.props = {};\n    this.parent = null;\n    this.linker = null;\n    this.linkStorageField = null;\n    this.scheduledForDeletion = false;\n    this.reducers = [];\n    this.results = [];\n    this.snapCaches = {}; // {cacheField: linkName}\n\n    this.snapCachesSingles = []; // [cacheField1, cacheField2]\n  }\n\n  get collectionNodes() {\n    return _.filter(this.nodes, n => n instanceof CollectionNode);\n  }\n\n  get fieldNodes() {\n    return _.filter(this.nodes, n => n instanceof FieldNode);\n  }\n\n  get reducerNodes() {\n    return _.filter(this.nodes, n => n instanceof ReducerNode);\n  }\n  /**\n   * Adds children to itself\n   *\n   * @param node\n   * @param linker\n   */\n\n\n  add(node, linker) {\n    node.parent = this;\n\n    if (node instanceof FieldNode) {\n      runFieldSanityChecks(node.name);\n    }\n\n    if (linker) {\n      node.linker = linker;\n      node.linkStorageField = linker.linkStorageField;\n      node.isMeta = linker.isMeta();\n      node.isVirtual = linker.isVirtual();\n      node.isOneResult = linker.isOneResult();\n      node.shouldCleanStorage = this._shouldCleanStorage(node);\n    }\n\n    this.nodes.push(node);\n  }\n  /**\n   * @param prop\n   * @param value\n   */\n\n\n  addProp(prop, value) {\n    if (prop === '$postFilter') {\n      check(value, Match.OneOf(Function, [Function]));\n    }\n\n    Object.assign(this.props, {\n      [prop]: value\n    });\n  }\n  /**\n   * @param _node\n   */\n\n\n  remove(_node) {\n    this.nodes = _.filter(this.nodes, node => _node !== node);\n  }\n  /**\n   * @param filters\n   * @param options\n   */\n\n\n  applyFields(filters, options) {\n    let hasAddedAnyField = false;\n\n    _.each(this.fieldNodes, n => {\n      /**\n       * $meta field should be added to the options.fields, but MongoDB does not exclude other fields.\n       * Therefore, we do not count this as a field addition.\n       * \n       * See: https://docs.mongodb.com/manual/reference/operator/projection/meta/\n       * The $meta expression specifies the inclusion of the field to the result set \n       * and does not specify the exclusion of the other fields.\n       */\n      if (n.projectionOperator !== '$meta') {\n        hasAddedAnyField = true;\n      }\n\n      n.applyFields(options.fields);\n    }); // it will only get here if it has collectionNodes children\n\n\n    _.each(this.collectionNodes, collectionNode => {\n      let linker = collectionNode.linker;\n\n      if (linker && !linker.isVirtual()) {\n        if (!isFieldInProjection(options.fields, linker.linkStorageField, true)) {\n          options.fields[linker.linkStorageField] = 1;\n          hasAddedAnyField = true;\n        }\n      }\n    }); // if he selected filters, we should automatically add those fields\n\n\n    _.each(filters, (value, field) => {\n      // special handling for the $meta filter, conditional operators and text search\n      if (!_.contains(['$or', '$nor', '$not', '$and', '$meta', '$text'], field)) {\n        // if the field or the parent of the field already exists, don't add it\n        if (!_.has(options.fields, field.split('.')[0])) {\n          hasAddedAnyField = true;\n          options.fields[field] = 1;\n        }\n      }\n    });\n\n    if (!hasAddedAnyField) {\n      options.fields = (0, _objectSpread2.default)({\n        _id: 1\n      }, options.fields);\n    }\n  }\n  /**\n   * @param fieldName\n   * @returns {boolean}\n   */\n\n\n  hasField(fieldName, checkNested = false) {\n    // for checkNested flag it expands profile.phone.verified into \n    // ['profile', 'profile.phone', 'profile.phone.verified']\n    // if any of these fields match it means that field exists\n    const options = checkNested ? expandField(fieldName) : [fieldName];\n    const result = !!_.find(this.fieldNodes, fieldNode => {\n      return _.contains(options, fieldNode.name);\n    });\n    return result;\n  }\n  /**\n   * @param fieldName\n   * @returns {FieldNode}\n   */\n\n\n  getField(fieldName) {\n    return _.find(this.fieldNodes, fieldNode => {\n      return fieldNode.name == fieldName;\n    });\n  }\n  /**\n   * @param name\n   * @returns {boolean}\n   */\n\n\n  hasCollectionNode(name) {\n    return !!_.find(this.collectionNodes, node => {\n      return node.linkName == name;\n    });\n  }\n  /**\n   * @param name\n   * @returns {boolean}\n   */\n\n\n  hasReducerNode(name) {\n    return !!_.find(this.reducerNodes, node => {\n      return node.name == name;\n    });\n  }\n  /**\n   * @param name\n   * @returns {ReducerNode}\n   */\n\n\n  getReducerNode(name) {\n    return _.find(this.reducerNodes, node => {\n      return node.name == name;\n    });\n  }\n  /**\n   * @param name\n   * @returns {CollectionNode}\n   */\n\n\n  getCollectionNode(name) {\n    return _.find(this.collectionNodes, node => {\n      return node.linkName == name;\n    });\n  }\n  /**\n   * @returns {*}\n   */\n\n\n  getName() {\n    return this.linkName ? this.linkName : this.collection ? this.collection._name : 'N/A';\n  }\n  /**\n   * This is used for caching links\n   *\n   * @param cacheField\n   * @param subLinkName\n   */\n\n\n  snapCache(cacheField, subLinkName) {\n    this.snapCaches[cacheField] = subLinkName;\n\n    if (this.collection.getLinker(subLinkName).isOneResult()) {\n      this.snapCachesSingles.push(cacheField);\n    }\n  }\n  /**\n   * This method verifies whether to remove the linkStorageField form the results\n   * unless you specify it in your query.\n   *\n   * @param node\n   * @returns {boolean}\n   * @private\n   */\n\n\n  _shouldCleanStorage(node) {\n    if (node.linkStorageField === '_id') {\n      return false;\n    } else {\n      if (node.isVirtual) {\n        return !node.hasField(node.linkStorageField, true);\n      } else {\n        return !this.hasField(node.linkStorageField, true);\n      }\n    }\n  }\n\n}\n\nfunction runFieldSanityChecks(fieldName) {\n  // Run sanity checks on the field\n  if (fieldName[0] === '$') {\n    throw new Error(`You are not allowed to use fields that start with $ inside a reducer's body: ${fieldName}`);\n  }\n\n  return true;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fieldNode.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/nodes/fieldNode.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => FieldNode\n});\n\nclass FieldNode {\n  constructor(name, body, isProjectionOperator = false) {\n    this.name = name;\n    this.projectionOperator = isProjectionOperator ? _.keys(body)[0] : null;\n    this.body = !_.isObject(body) || isProjectionOperator ? body : 1;\n    this.scheduledForDeletion = false;\n  }\n\n  applyFields(fields) {\n    fields[this.name] = this.body;\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reducerNode.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/nodes/reducerNode.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => ReducerNode\n});\n\nclass ReducerNode {\n  constructor(name, {\n    body,\n    reduce\n  }) {\n    this.name = name;\n    this.body = body;\n    this.reduceFunction = reduce;\n    this.dependencies = []; // This is a list of the reducer this reducer uses.\n  }\n  /**\n   * When computing we also pass the parameters\n   * \n   * @param {*} object \n   * @param {*} args \n   */\n\n\n  compute(object, ...args) {\n    object[this.name] = this.reduce.call(this, object, ...args);\n  }\n\n  reduce(object, ...args) {\n    return this.reduceFunction.call(this, object, ...args);\n  }\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"reducers\":{\"extension.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/reducers/extension.js                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet addFieldMap;\nmodule.link(\"./lib/addFieldMap\", {\n  default(v) {\n    addFieldMap = v;\n  }\n\n}, 1);\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n  /**\n   * @param data\n   */\n  addReducers(data) {\n    if (!this[storage]) {\n      this[storage] = {};\n    }\n\n    _.each(data, (reducerConfig, reducerName) => {\n      if (!this[reducerConfig]) {\n        this[reducerConfig] = {};\n      }\n\n      if (this.getLinker(reducerName)) {\n        throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${this._name} collection`);\n      }\n\n      if (this[reducerConfig][reducerName]) {\n        throw new Meteor.Error(`You cannot add the reducer with name: ${reducerName} because it was already added to ${this._name} collection`);\n      }\n\n      check(reducerConfig, {\n        body: Object,\n        reduce: Function\n      });\n\n      _.extend(this[storage], {\n        [reducerName]: reducerConfig\n      });\n    });\n  },\n\n  /**\n   * @param name\n   * @returns {*}\n   */\n  getReducer(name) {\n    if (this[storage]) {\n      return this[storage][name];\n    }\n  },\n\n  /**\n   * This creates reducers that makes sort of aliases for the database fields we use\n   */\n  addFieldMap\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"addFieldMap.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/addFieldMap.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => addFieldMap\n});\n\nfunction addFieldMap(map) {\n  const collection = this;\n  let reducers = {};\n\n  for (let key in map) {\n    const dbField = map[key];\n    reducers[key] = {\n      body: {\n        [dbField]: 1\n      },\n\n      reduce(obj) {\n        return obj[dbField];\n      }\n\n    };\n  }\n\n  collection.addReducers(reducers);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"applyReducers.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/applyReducers.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => applyReducers\n});\n\nfunction applyReducers(root, params) {\n  _.each(root.collectionNodes, node => {\n    applyReducers(node, params);\n  });\n\n  const processedReducers = [];\n  let reducersQueue = [...root.reducerNodes]; // TODO: find out if there's an infinite reducer inter-deendency\n\n  while (reducersQueue.length) {\n    const reducerNode = reducersQueue.shift(); // If this reducer depends on other reducers\n\n    if (reducerNode.dependencies.length) {\n      // If there is an unprocessed reducer, move it at the end of the queue\n      const allDependenciesComputed = _.all(reducerNode.dependencies, dep => processedReducers.includes(dep));\n\n      if (allDependenciesComputed) {\n        root.results.forEach(result => {\n          reducerNode.compute(result, params);\n        });\n        processedReducers.push(reducerNode.name);\n      } else {\n        // Move it at the end of the queue\n        reducersQueue.push(reducerNode);\n      }\n    } else {\n      root.results.forEach(result => {\n        reducerNode.compute(result, params);\n      });\n      processedReducers.push(reducerNode.name);\n    }\n  }\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cleanReducerLeftovers.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/cleanReducerLeftovers.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => cleanReducerLeftovers\n});\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\n\nfunction cleanReducerLeftovers(root, results) {\n  _.each(root.collectionNodes, node => {\n    if (node.scheduledForDeletion) {\n      results.forEach(result => {\n        delete result[node.linkName];\n      });\n    }\n  });\n\n  _.each(root.collectionNodes, node => {\n    let childResults;\n\n    if (node.isOneResult) {\n      childResults = results.map(result => result[node.linkName]).filter(element => !!element);\n    } else {\n      childResults = _.flatten(results.map(result => result[node.linkName]).filter(element => !!element));\n    }\n\n    cleanReducerLeftovers(node, childResults);\n  });\n\n  _.each(root.fieldNodes, node => {\n    if (node.scheduledForDeletion) {\n      cleanNestedFields(node.name.split('.'), results, root);\n    }\n  });\n\n  _.each(root.reducerNodes, node => {\n    if (node.scheduledForDeletion) {\n      results.forEach(result => {\n        delete result[node.name];\n      });\n    }\n  });\n}\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n * Cleans what reducers needed to be computed and not used.\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n  const snapCacheField = root.snapCaches[parts[0]];\n  const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n  if (parts.length === 1) {\n    results.forEach(result => {\n      if (_.isObject(result) && fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    });\n    return;\n  }\n\n  parts.shift();\n  cleanNestedFields(parts, results.filter(result => !!result[fieldName]).map(result => result[fieldName]), root);\n  results.forEach(result => {\n    if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n      if (fieldName !== '_id') {\n        delete result[fieldName];\n      }\n    }\n  });\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createReducers.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/createReducers.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => addReducers,\n  handleAddElement: () => handleAddElement,\n  handleAddReducer: () => handleAddReducer,\n  handleAddLink: () => handleAddLink,\n  handleAddField: () => handleAddField\n});\nlet dot;\nmodule.link(\"dot-object\", {\n  default(v) {\n    dot = v;\n  }\n\n}, 0);\nlet createNodes;\nmodule.link(\"../../lib/createGraph\", {\n  createNodes(v) {\n    createNodes = v;\n  }\n\n}, 1);\nlet CollectionNode;\nmodule.link(\"../../nodes/collectionNode\", {\n  default(v) {\n    CollectionNode = v;\n  }\n\n}, 2);\nlet FieldNode;\nmodule.link(\"../../nodes/fieldNode\", {\n  default(v) {\n    FieldNode = v;\n  }\n\n}, 3);\nlet ReducerNode;\nmodule.link(\"../../nodes/reducerNode\", {\n  default(v) {\n    ReducerNode = v;\n  }\n\n}, 4);\nlet embedReducerWithLink;\nmodule.link(\"./embedReducerWithLink\", {\n  default(v) {\n    embedReducerWithLink = v;\n  }\n\n}, 5);\nlet specialFields;\nmodule.link(\"../../lib/createGraph\", {\n  specialFields(v) {\n    specialFields = v;\n  }\n\n}, 6);\n\nfunction addReducers(root) {\n  // we add reducers last, after we have added all the fields.\n  root.reducerNodes.forEach(reducer => {\n    _.each(reducer.body, (body, fieldName) => {\n      handleAddElement(reducer, root, fieldName, body);\n    });\n  });\n}\n\nfunction handleAddElement(reducerNode, root, fieldName, body) {\n  // if it's a link\n  const collection = root.collection;\n  const linker = collection.getLinker(fieldName);\n\n  if (linker) {\n    return handleAddLink(reducerNode, fieldName, body, root, linker);\n  }\n\n  const reducer = collection.getReducer(fieldName);\n\n  if (reducer) {\n    reducerNode.dependencies.push(fieldName);\n    return handleAddReducer(fieldName, reducer, root);\n  } // we assume it's a field in this case\n\n\n  return handleAddField(fieldName, body, root);\n}\n\nfunction handleAddReducer(fieldName, {\n  body,\n  reduce\n}, root) {\n  if (!root.hasReducerNode(fieldName)) {\n    let childReducerNode = new ReducerNode(fieldName, {\n      body,\n      reduce\n    });\n    root.add(childReducerNode);\n    childReducerNode.scheduledForDeletion = true;\n\n    _.each(childReducerNode.body, (body, fieldName) => {\n      handleAddElement(childReducerNode, root, fieldName, body);\n    });\n  }\n}\n\nfunction handleAddLink(reducerNode, fieldName, body, parent, linker) {\n  if (parent.hasCollectionNode(fieldName)) {\n    const collectionNode = parent.getCollectionNode(fieldName);\n    embedReducerWithLink(reducerNode, body, collectionNode);\n  } else {\n    // add\n    let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n    collectionNode.scheduledForDeletion = true;\n    parent.add(collectionNode, linker);\n    createNodes(collectionNode);\n  }\n}\n\nfunction handleAddField(fieldName, body, root) {\n  if (_.contains(specialFields, fieldName)) {\n    root.addProp(fieldName, body);\n    return;\n  }\n\n  if (_.isObject(body)) {\n    // if reducer specifies a nested field\n    // if it's a prop\n    const dots = dot.dot({\n      [fieldName]: body\n    });\n\n    _.each(dots, (value, key) => {\n      addFieldIfRequired(root, key, value);\n    });\n  } else {\n    // if reducer does not specify a nested field, and the field does not exist.\n    addFieldIfRequired(root, fieldName, body);\n  }\n}\n\nfunction addFieldIfRequired(root, fieldName, body) {\n  if (!root.hasField(fieldName, true)) {\n    /**\n     * Check if there are any nested fields for this field.\n     * Adding root field here and scheduling for deletion would not work if there is already nested field, \n     * for example:\n     * when trying to add meta: 1, it should be checked that there are no meta.* fields\n     * */\n    const nestedFields = root.fieldNodes.filter(({\n      name\n    }) => name.startsWith(`${fieldName}.`)); // remove nested fields - important for minimongo which complains for these situations\n    // TODO: excess fields are not removed (caused by adding the root field and removing nested fields) but there\n    // should probably be a way to handle this in post-processing - for example by keeping a whitelist of fields\n    // and removing anything else\n\n    nestedFields.forEach(node => root.remove(node));\n    let fieldNode = new FieldNode(fieldName, body); // delete only if all nested fields are scheduled for deletion (that includes the case of 0 nested fields)\n\n    fieldNode.scheduledForDeletion = nestedFields.every(field => field.scheduledForDeletion);\n    root.add(fieldNode);\n  }\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"embedReducerWithLink.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/cultofcoders_grapher/lib/query/reducers/lib/embedReducerWithLink.js                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  default: () => embedReducerWithLink\n});\nlet handleAddField, handleAddElement, handleAddReducer;\nmodule.link(\"./createReducers\", {\n  handleAddField(v) {\n    handleAddField = v;\n  },\n\n  handleAddElement(v) {\n    handleAddElement = v;\n  },\n\n  handleAddReducer(v) {\n    handleAddReducer = v;\n  }\n\n}, 0);\n\nfunction embedReducerWithLink(reducerNode, reducerBody, collectionNode) {\n  _.each(reducerBody, (value, key) => {\n    const collection = collectionNode.collection;\n\n    if (_.isObject(value)) {\n      // nested field or link\n      if (collectionNode.body[key]) {\n        // if it exists\n        const linker = collection.getLinker(key); // if it's a link\n\n        if (linker) {\n          if (linker.isDenormalized()) {\n            if (linker.isSubBodyDenormalized(value)) {\n              const cacheField = linker.linkConfig.denormalize.field;\n              handleAddField(cacheField, value, collectionNode);\n              return;\n            }\n          }\n\n          embedReducerWithLink(reducerNode, value, collectionNode.getCollectionNode(key));\n          return;\n        }\n\n        handleAddField(key, value, collectionNode);\n      } else {\n        // does not exist, so it may be a link/reducer/field\n        handleAddElement(reducerNode, collectionNode, key, value);\n      }\n    } else {\n      // if this field or other reducer exists within the collection\n      if (!collectionNode.body[key]) {\n        // can only be field or another reducer for this.\n        const reducer = collection.getReducer(key);\n\n        if (reducer) {\n          // if it's another reducer\n          return handleAddReducer(key, reducer, collectionNode);\n        }\n\n        return handleAddField(key, value, collectionNode);\n      }\n    }\n  });\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},\"node_modules\":{\"lodash.clonedeep\":{\"package.json\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/lodash.clonedeep/package.json                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"lodash.clonedeep\",\n  \"version\": \"4.5.0\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/lodash.clonedeep/index.js                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"dot-object\":{\"package.json\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/dot-object/package.json                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"dot-object\",\n  \"version\": \"1.5.4\",\n  \"main\": \"index\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/dot-object/index.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"sift\":{\"package.json\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/sift/package.json                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"sift\",\n  \"version\": \"3.2.6\",\n  \"main\": \"./sift.js\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"sift.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/sift/sift.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"deep-extend\":{\"package.json\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/deep-extend/package.json                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"deep-extend\",\n  \"version\": \"0.5.0\",\n  \"main\": \"lib/deep-extend.js\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"deep-extend.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/cultofcoders_grapher/node_modules/deep-extend/lib/deep-extend.js                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/cultofcoders:grapher/main.server.js\");\n\n/* Exports */\nPackage._define(\"cultofcoders:grapher\", exports);\n\n})();\n","servePath":"/packages/cultofcoders_grapher.js","sourceMap":{"version":3,"sources":["packages/cultofcoders:grapher/main.server.js","packages/cultofcoders:grapher/lib/aggregate.js","packages/cultofcoders:grapher/lib/compose.js","packages/cultofcoders:grapher/lib/createQuery.js","packages/cultofcoders:grapher/lib/db.js","packages/cultofcoders:grapher/lib/extension.js","packages/cultofcoders:grapher/lib/exposure/exposure.config.schema.js","packages/cultofcoders:grapher/lib/exposure/exposure.js","packages/cultofcoders:grapher/lib/exposure/extension.js","packages/cultofcoders:grapher/lib/exposure/lib/cleanBody.js","packages/cultofcoders:grapher/lib/exposure/lib/cleanSelectors.js","packages/cultofcoders:grapher/lib/exposure/lib/enforceMaxDepth.js","packages/cultofcoders:grapher/lib/exposure/lib/enforceMaxLimit.js","packages/cultofcoders:grapher/lib/exposure/lib/restrictFields.js","packages/cultofcoders:grapher/lib/exposure/lib/restrictLinks.js","packages/cultofcoders:grapher/lib/graphql/index.js","packages/cultofcoders:grapher/lib/graphql/lib/astToBody.js","packages/cultofcoders:grapher/lib/graphql/lib/astToQuery.js","packages/cultofcoders:grapher/lib/graphql/lib/defaults.js","packages/cultofcoders:grapher/lib/links/config.schema.js","packages/cultofcoders:grapher/lib/links/constants.js","packages/cultofcoders:grapher/lib/links/extension.js","packages/cultofcoders:grapher/lib/links/linker.js","packages/cultofcoders:grapher/lib/links/lib/createSearchFilters.js","packages/cultofcoders:grapher/lib/links/linkTypes/base.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkMany.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkManyMeta.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkOne.js","packages/cultofcoders:grapher/lib/links/linkTypes/linkOneMeta.js","packages/cultofcoders:grapher/lib/links/linkTypes/lib/smartArguments.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.base.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.client.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.js","packages/cultofcoders:grapher/lib/namedQuery/namedQuery.server.js","packages/cultofcoders:grapher/lib/namedQuery/store.js","packages/cultofcoders:grapher/lib/namedQuery/cache/BaseResultCacher.js","packages/cultofcoders:grapher/lib/namedQuery/cache/MemoryResultCacher.js","packages/cultofcoders:grapher/lib/namedQuery/expose/extension.js","packages/cultofcoders:grapher/lib/namedQuery/expose/schema.js","packages/cultofcoders:grapher/lib/namedQuery/expose/lib/mergeDeep.js","packages/cultofcoders:grapher/lib/query/query.base.js","packages/cultofcoders:grapher/lib/query/query.client.js","packages/cultofcoders:grapher/lib/query/query.js","packages/cultofcoders:grapher/lib/query/query.server.js","packages/cultofcoders:grapher/lib/query/counts/collection.js","packages/cultofcoders:grapher/lib/query/counts/constants.js","packages/cultofcoders:grapher/lib/query/counts/countSubscription.js","packages/cultofcoders:grapher/lib/query/counts/createFauxSubscription.js","packages/cultofcoders:grapher/lib/query/counts/genEndpoint.server.js","packages/cultofcoders:grapher/lib/query/hypernova/aggregateSearchFilters.js","packages/cultofcoders:grapher/lib/query/hypernova/assembleAggregateResults.js","packages/cultofcoders:grapher/lib/query/hypernova/assembler.js","packages/cultofcoders:grapher/lib/query/hypernova/buildAggregatePipeline.js","packages/cultofcoders:grapher/lib/query/hypernova/constants.js","packages/cultofcoders:grapher/lib/query/hypernova/hypernova.js","packages/cultofcoders:grapher/lib/query/hypernova/storeHypernovaResults.js","packages/cultofcoders:grapher/lib/query/hypernova/lib/cleanObjectForMetaFilters.js","packages/cultofcoders:grapher/lib/query/hypernova/lib/snapBackDottedFields.js","packages/cultofcoders:grapher/lib/query/lib/applyProps.js","packages/cultofcoders:grapher/lib/query/lib/callWithPromise.js","packages/cultofcoders:grapher/lib/query/lib/createGraph.js","packages/cultofcoders:grapher/lib/query/lib/dotize.js","packages/cultofcoders:grapher/lib/query/lib/fieldInProjection.js","packages/cultofcoders:grapher/lib/query/lib/intersectDeep.js","packages/cultofcoders:grapher/lib/query/lib/prepareForDelivery.js","packages/cultofcoders:grapher/lib/query/lib/prepareForProcess.js","packages/cultofcoders:grapher/lib/query/lib/recursiveCompose.js","packages/cultofcoders:grapher/lib/query/lib/recursiveFetch.js","packages/cultofcoders:grapher/lib/query/nodes/collectionNode.js","packages/cultofcoders:grapher/lib/query/nodes/fieldNode.js","packages/cultofcoders:grapher/lib/query/nodes/reducerNode.js","packages/cultofcoders:grapher/lib/query/reducers/extension.js","packages/cultofcoders:grapher/lib/query/reducers/lib/addFieldMap.js","packages/cultofcoders:grapher/lib/query/reducers/lib/applyReducers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/cleanReducerLeftovers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/createReducers.js","packages/cultofcoders:grapher/lib/query/reducers/lib/embedReducerWithLink.js"],"names":["module","export","NamedQueryStore","LinkConstants","link","default","v","Promise","Mongo","Collection","prototype","aggregate","pipelines","options","coll","rawCollection","result","Meteor","wrapAsync","Array","isArray","await","toArray","deepExtend","exportDefault","args","Query","NamedQuery","name","body","_","isFunction","createNamedQuery","entryPointName","first","keys","collection","get","Error","isDevelopment","console","warn","params","createNormalQuery","namedQuery","query","add","clone","db","Proxy","obj","prop","extend","createQuery","length","ExposureDefaults","ExposureSchema","validateBody","createGraph","Match","blocking","method","publication","firewall","Maybe","OneOf","Function","maxLimit","Integer","maxDepth","Boolean","Object","restrictedFields","String","restrictLinks","e","toString","Exposure","genCountEndpoint","recursiveCompose","hypernova","enforceMaxDepth","enforceMaxLimit","cleanBody","deepClone","restrictFieldsFn","check","globalConfig","setConfig","config","assign","getConfig","restrictFields","constructor","__isExposedForGrapher","__exposure","_name","_validateAndClean","initSecurity","initPublication","initMethod","initCountMethod","initCountPublication","getTransformedBody","userId","processedBody","getBody","call","bind","publishComposite","transformedBody","rootNode","bypassFirewalls","methodBody","unblock","methods","find","$filters","count","getCursor","session","filters","fields","_id","getSession","findOne","undefined","_callFirewall","arguments","forEach","fire","expose","isServer","cleanFilters","cleanOptions","dotize","main","second","object","$options","getFields","each","secondValue","key","value","isObject","convert","fieldExists","ensureFields","pick","sort","deepFilterFieldsArray","deepFilterFieldsObject","special","contains","field","element","i","indexOf","getDepth","node","depth","collectionNodes","max","map","limit","cleanObject","restrictedField","matching","subfield","slice","getLinks","parentNode","restrictedLinks","collectionNode","linkName","remove","exposure","configRestrictLinks","astToQuery","setAstToQueryDefaults","Symbols","astToBody","ARGUMENTS","Symbol","ast","fieldNodes","extractSelectionSet","selectionSet","set","selections","el","argumentMap","arg","getMaxDepth","deny","clearEmptyObjects","createGetArgs","defaults","intersectDeep","Errors","MAX_DEPTH","embody","Number","intersect","currentMaxDepth","getArgs","depths","push","Math","parts","split","accessor","shift","shouldDelete","path","stopped","DenormalizeSchema","LinkConfigDefaults","LinkConfigSchema","bypassSchema","type","Where","_collection","metadata","inversedBy","index","unique","autoremove","denormalize","ObjectIncluding","LINK_STORAGE","Linker","addLinks","data","linkConfig","linker","getLinker","hasLink","getLink","objectOrId","linkData","isVirtual","linkStorageField","createLink","LinkMany","LinkManyMeta","LinkOne","LinkOneMeta","smartArguments","dot","access","mainCollection","_initAutoremove","_initDenormalization","_handleReferenceRemovalForVirtualLinks","_initIndex","oneTypes","strategy","isMany","relatedLinker","getLinkedCollection","isSingle","isMeta","isOneResult","helperClass","_getHelperClass","collectionName","_prepareVirtual","_generateFieldName","startup","_setupVirtualConfig","virtualLinkConfig","cleanedCollectionName","replace","defaultFieldPrefix","after","doc","fetchAsArray","linkedObj","unset","_ensureIndex","sparse","$in","getIds","ids","fetch","item","packageExists","Package","cacheConfig","referenceFieldSuffix","inversedLink","referenceField","cacheField","cache","isDenormalized","isSubBodyDenormalized","cacheBody","cacheBodyFields","bodyFields","omit","difference","createSearchFilters","createOne","createOneVirtual","createOneMeta","createOneMetaVirtual","createMany","createManyVirtual","createManyMeta","createManyMetaVirtual","sift","fieldStorage","metaFilters","root","nested","arr","uniq","union","join","pluck","$elemMatch","Link","SmartArgs","linkedCollection","$metaFilters","$meta","searchFilters","appliedFilters","others","clean","identifyId","what","saveToDatabase","getId","identifyIds","_validateIds","validIds","_checkWhat","_virtualAction","action","reversedLink","elementId","insert","_ids","modifier","$addToSet","$each","update","filter","$pull","metadatas","localMetadata","extendMetadata","existingMetadata","subfieldUpdate","$set","subWhat","NamedQueryBase","isNamedQuery","queryName","resolver","subscriptionHandle","isExposed","isResolver","setParams","doValidateParams","validateParams","_validate","validationError","error","newParams","cacher","exposeConfig","validator","defaultOptions","CountSubscription","recursiveFetch","prepareForProcess","callWithPromise","Base","LocalCollection","subscribe","callback","subscribeCount","_counter","unsubscribe","stop","unsubscribeCount","fetchSync","fetchOneSync","callbackOrOptions","_fetchStatic","_fetchReactive","fetchOne","err","res","getCountSync","getCount","$body","allowSkip","skip","scoped","NamedQueryClient","NamedQueryServer","MemoryResultCacher","context","_performSecurityChecks","_fetchResolverData","doEmbodimentIfItApplies","cacheId","generateQueryId","countCursor","getCursorForCounting","cacheResults","resolve","fn","self","storage","getAll","BaseResultCacher","EJSON","stringify","fetchData","cloneDeep","DEFAULT_TTL","store","cacheData","storeData","ttl","setTimeout","ExposeSchema","ExposeDefaults","mergeDeep","_initNormalQuery","_initMethod","_initPublication","_initCountMethod","_initCountPublication","_unblockIfNecessary","isScoped","enableScope","target","source","QueryBase","isGlobalQuery","QueryClient","QueryServer","COUNTS_COLLECTION_CLIENT","ReactiveVar","Tracker","Counts","createFauxSubscription","accessToken","fauxHandle","equals","lastArgs","token","_markedForUnsubscribe","disconnectComputation","autorun","handleDisconnect","id","status","connected","_markedForResume","isSubscribed","countManager","ready","paramsOrBody","sessionId","JSON","existingSession","publish","request","parse","cursor","isReady","handle","observe","added","changed","removed","onStop","AggregateFilters","extractIdsFromArray","array","parentObjects","parent","results","create","eligibleObjects","storages","arrayOfIds","isValid","cleanObjectForMetaFilters","childCollectionNode","aggregateResults","allResults","metaFiltersTest","parentResult","eligibleAggregateResults","aggregateResult","datas","comparator","childLinkName","parentResults","resultsByKeyId","groupBy","filterAssembledData","SAFE_DOTTED_FIELD_REPLACEMENT","containsDottedFields","pipeline","cleanUndefinedLeafs","$match","$sort","dataPush","safeField","$group","$push","$slice","$project","tree","a","hypernovaInit","applyProps","prepareForDelivery","storeHypernovaResults","userIdToPass","assemble","assembleAggregateResults","buildAggregatePipeline","snapBackDottedFields","aggregateFilters","filteredOptions","aggregationResult","document","RegExp","restrictOptions","props","applyFields","myParameters","reject","reason","specialFields","createNodes","addFieldNode","getNodeNamespace","CollectionNode","FieldNode","ReducerNode","createReducers","fieldName","addProp","handleDenormalized","subroot","reducer","getReducer","reducerNode","isProjectionOperatorExpression","dotted","fieldNode","n","reverse","snapCache","prefix","newObj","recurse","o","p","isArrayItem","f","isEmptyArray","getFieldName","isEmptyObj","isNumber","isNaN","parseInt","hasOwnProperty","expandField","isFieldInProjection","projection","checkNested","some","EXTENDED_SPECIAL_FIELDS","isClientValueValid","values","every","nestedValue","intersectFields","allowed","client","intersection","pairs","clientValue","serverValue","allowedBody","clientBody","build","applyPostFilters","applyPostOptions","getResultsArray","removeLinkStorages","storeOneResults","assembleMetadata","applyReducers","cleanReducerLeftovers","Minimongo","snapBackCaches","cloneMetaChildren","applyPostFilter","postFilters","$postFilters","$postOptions","sorter","Sorter","getComparator","start","end","$postFilter","isUndefined","sameLevelResults","removeStorageField","shouldCleanStorage","removeFromResult","removeEmptyRoot","isEmpty","childResults","childResult","storeMetadata","parentElement","$metadata","storageItem","snapCaches","snapCachesSingles","shoudStoreLinkStorage","defaultFilterFunction","applyFilterRecursive","isRoot","$filter","applyPagination","_params","_body","patchCursor","ns","originalObserve","callbacks","newCallbacks","compose","children","parentObject","fetchOptions","scopeQuery","$exists","collectionNodeResults","runFieldSanityChecks","nodes","scheduledForDeletion","reducers","reducerNodes","_shouldCleanStorage","_node","hasAddedAnyField","projectionOperator","has","hasField","getField","hasCollectionNode","hasReducerNode","getReducerNode","getCollectionNode","getName","subLinkName","isProjectionOperator","reduce","reduceFunction","dependencies","compute","addFieldMap","addReducers","reducerConfig","reducerName","dbField","processedReducers","reducersQueue","allDependenciesComputed","all","dep","includes","flatten","cleanNestedFields","snapCacheField","handleAddElement","handleAddReducer","handleAddLink","handleAddField","embedReducerWithLink","childReducerNode","dots","addFieldIfRequired","nestedFields","startsWith","reducerBody"],"mappings":"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","file":"/packages/cultofcoders_grapher.js","sourcesContent":["import './lib/extension.js';\nimport './lib/aggregate';\nimport './lib/exposure/extension.js';\nimport './lib/links/extension.js';\nimport './lib/query/reducers/extension.js';\nimport './lib/namedQuery/expose/extension.js';\nimport NamedQueryStore from './lib/namedQuery/store';\nimport LinkConstants from './lib/links/constants';\n\nexport { NamedQueryStore, LinkConstants };\n\nexport { default as createQuery } from './lib/createQuery.js';\n\nexport { default as NamedQuery } from './lib/namedQuery/namedQuery.server';\n\nexport { default as Exposure } from './lib/exposure/exposure.js';\n\nexport {\n    default as MemoryResultCacher,\n} from './lib/namedQuery/cache/MemoryResultCacher';\n\nexport {\n    default as BaseResultCacher,\n} from './lib/namedQuery/cache/BaseResultCacher';\n\nexport { default as compose } from './lib/compose';\n\nexport * from './lib/graphql';\nexport { default as db } from './lib/db';\n","import { Promise } from 'meteor/promise';\n\nMongo.Collection.prototype.aggregate = function(pipelines, options = {}) {\n    const coll = this.rawCollection();\n\n    let result = Meteor.wrapAsync(coll.aggregate, coll)(pipelines, options);\n\n    // We need to check If it's an AggregationCursor\n    // The reason we do this was because of the upgrade to 1.7 which involved a mongodb driver update\n    if (Array.isArray(result)) {\n        return result;\n    } else {\n        return Promise.await(result.toArray());\n    }\n};\n","import deepExtend from 'deep-extend';\n\nexport default function (...args) {\n    return deepExtend({}, ...args);\n}","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n/**\n * This is a polymorphic function, it allows you to create a query as an object\n * or it also allows you to re-use an existing query if it's a named one\n *\n * @param args\n * @returns {*}\n */\nexport default (...args) => {\n    if (typeof args[0] === 'string') {\n        let [name, body, options] = args;\n        options = options || {};\n\n        // It's a resolver query\n        if (_.isFunction(body)) {\n            return createNamedQuery(name, null, body, options);\n        }\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            throw new Meteor.Error('invalid-name', `We could not find any collection with the name \"${entryPointName}\". Make sure it is imported prior to using this`)\n        }\n\n        return createNamedQuery(name, collection, body[entryPointName], options);\n    } else {\n        // Query Creation, it can have an endpoint as collection or as a NamedQuery\n        let [body, options] = args;\n        options = options || {};\n\n        const entryPointName = _.first(_.keys(body));\n        const collection = Mongo.Collection.get(entryPointName);\n\n        if (!collection) {\n            if (Meteor.isDevelopment && !NamedQueryStore.get(entryPointName)) {\n                console.warn(`You are creating a query with the entry point \"${entryPointName}\", but there was no collection found for it (maybe you forgot to import it client-side?). It's assumed that it's referencing a NamedQuery.`)\n            }\n\n            return createNamedQuery(entryPointName, null, {}, {params: body[entryPointName]});\n        } else {\n            return createNormalQuery(collection, body[entryPointName], options);\n        }\n    }\n}\n\nfunction createNamedQuery(name, collection, body, options = {}) {\n    // if it exists already, we re-use it\n    const namedQuery = NamedQueryStore.get(name);\n    let query;\n\n    if (!namedQuery) {\n        query = new NamedQuery(name, collection, body, options);\n        NamedQueryStore.add(name, query);\n    } else {\n        query = namedQuery.clone(options.params);\n    }\n\n    return query;\n}\n\nfunction createNormalQuery(collection, body, options)  {\n    return new Query(collection, body, options);\n}\n","import { Mongo } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\n\nconst db = new Proxy(\n  {},\n  {\n    get: function(obj, prop) {\n      if (typeof prop === 'symbol') {\n        return obj[prop];\n      }\n\n      const collection = Mongo.Collection.get(prop);\n\n      if (!collection) {\n        return obj[prop];\n      }\n\n      return collection;\n    },\n  }\n);\n\nexport default db;\n","import Query from './query/query.js';\nimport NamedQuery from './namedQuery/namedQuery.js';\nimport NamedQueryStore from './namedQuery/store.js';\n\n_.extend(Mongo.Collection.prototype, {\n    createQuery(...args) {\n        if (args.length === 0) {\n            return new Query(this, {}, {});\n        }\n        \n        if (typeof args[0] === 'string') {\n            //NamedQuery\n            const [name, body, options] = args;\n            const query = new NamedQuery(name, this, body, options);\n            NamedQueryStore.add(name, query);\n\n            return query;\n        } else {\n            const [body, options] = args;\n\n            return new Query(this, body, options);\n        }\n    },\n});\n","import createGraph from '../query/lib/createGraph.js';\nimport {Match} from 'meteor/check';\n\nexport const ExposureDefaults = {\n    blocking: false,\n    method: true,\n    publication: true,\n};\n\nexport const ExposureSchema = {\n    firewall: Match.Maybe(\n        Match.OneOf(Function, [Function])\n    ),\n    maxLimit: Match.Maybe(Match.Integer),\n    maxDepth: Match.Maybe(Match.Integer),\n    publication: Match.Maybe(Boolean),\n    method: Match.Maybe(Boolean),\n    blocking: Match.Maybe(Boolean),\n    body: Match.Maybe(Object),\n    restrictedFields: Match.Maybe([String]),\n    restrictLinks: Match.Maybe(\n        Match.OneOf(Function, [String])\n    ),\n};\n\nexport function validateBody(collection, body) {\n    try {\n        createGraph(collection, body);\n    } catch (e) {\n        throw new Meteor.Error('invalid-body', 'We could not build a valid graph when trying to create your exposure: ' + e.toString())\n    }\n}","import genCountEndpoint from '../query/counts/genEndpoint.server.js';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveCompose from '../query/lib/recursiveCompose.js';\nimport hypernova from '../query/hypernova/hypernova.js';\nimport {\n    ExposureSchema,\n    ExposureDefaults,\n    validateBody,\n} from './exposure.config.schema.js';\nimport enforceMaxDepth from './lib/enforceMaxDepth.js';\nimport enforceMaxLimit from './lib/enforceMaxLimit.js';\nimport cleanBody from './lib/cleanBody.js';\nimport deepClone from 'lodash.clonedeep';\nimport restrictFieldsFn from './lib/restrictFields.js';\nimport restrictLinks from './lib/restrictLinks.js';\nimport { check } from 'meteor/check';\n\nlet globalConfig = {};\n\nexport default class Exposure {\n    static setConfig(config) {\n        Object.assign(globalConfig, config);\n    }\n\n    static getConfig() {\n        return globalConfig;\n    }\n\n    static restrictFields(...args) {\n        return restrictFieldsFn(...args);\n    }\n\n    constructor(collection, config = {}) {\n        collection.__isExposedForGrapher = true;\n        collection.__exposure = this;\n\n        this.collection = collection;\n        this.name = `exposure_${collection._name}`;\n\n        this.config = config;\n        this._validateAndClean();\n\n        this.initSecurity();\n\n        if (this.config.publication) {\n            this.initPublication();\n        }\n\n        if (this.config.method) {\n            this.initMethod();\n        }\n\n        if (!this.config.method && !this.config.publication) {\n            throw new Meteor.Error(\n                'weird',\n                'If you want to expose your collection you need to specify at least one of [\"method\", \"publication\"] options to true'\n            );\n        }\n\n        this.initCountMethod();\n        this.initCountPublication();\n    }\n\n    _validateAndClean() {\n        if (typeof this.config === 'function') {\n            const firewall = this.config;\n            this.config = { firewall };\n        }\n\n        this.config = Object.assign(\n            {},\n            ExposureDefaults,\n            Exposure.getConfig(),\n            this.config\n        );\n        check(this.config, ExposureSchema);\n\n        if (this.config.body) {\n            validateBody(this.collection, this.config.body);\n        }\n    }\n\n    /**\n     * Takes the body and intersects it with the exposure body, if it exists.\n     *\n     * @param body\n     * @param userId\n     * @returns {*}\n     */\n    getTransformedBody(body, userId) {\n        if (!this.config.body) {\n            return body;\n        }\n\n        const processedBody = this.getBody(userId);\n\n        if (processedBody === true) {\n            return;\n        }\n\n        return cleanBody(processedBody, body);\n    }\n\n    /**\n     * Gets the exposure body\n     */\n    getBody(userId) {\n        if (!this.config.body) {\n            throw new Meteor.Error(\n                'missing-body',\n                'Cannot get exposure body because it was not defined.'\n            );\n        }\n\n        let body;\n        if (_.isFunction(this.config.body)) {\n            body = this.config.body.call(this, userId);\n        } else {\n            body = this.config.body;\n        }\n\n        // it means we allow everything, no need for cloning.\n        if (body === true) {\n            return true;\n        }\n\n        return deepClone(body, userId);\n    }\n\n    /**\n     * Initializing the publication for reactive query fetching\n     */\n    initPublication() {\n        const collection = this.collection;\n        const config = this.config;\n        const getTransformedBody = this.getTransformedBody.bind(this);\n\n        Meteor.publishComposite(this.name, function(body) {\n            let transformedBody = getTransformedBody(body);\n\n            const rootNode = createGraph(collection, transformedBody);\n\n            enforceMaxDepth(rootNode, config.maxDepth);\n            restrictLinks(rootNode, this.userId);\n\n            return recursiveCompose(rootNode, this.userId, {\n                bypassFirewalls: !!config.body,\n            });\n        });\n    }\n\n    /**\n     * Initializez the method to retrieve the data via Meteor.call\n     */\n    initMethod() {\n        const collection = this.collection;\n        const config = this.config;\n        const getTransformedBody = this.getTransformedBody.bind(this);\n\n        const methodBody = function(body) {\n            if (!config.blocking) {\n                this.unblock();\n            }\n\n            let transformedBody = getTransformedBody(body);\n\n            const rootNode = createGraph(collection, transformedBody);\n\n            enforceMaxDepth(rootNode, config.maxDepth);\n            restrictLinks(rootNode, this.userId);\n\n            // if there is no exposure body defined, then we need to apply firewalls\n            return hypernova(rootNode, this.userId, {\n                bypassFirewalls: !!config.body,\n            });\n        };\n\n        Meteor.methods({\n            [this.name]: methodBody,\n        });\n    }\n\n    /**\n     * Initializes the method to retrieve the count of the data via Meteor.call\n     * @returns {*}\n     */\n    initCountMethod() {\n        const collection = this.collection;\n\n        Meteor.methods({\n            [this.name + '.count'](body) {\n                this.unblock();\n\n                return collection\n                    .find(body.$filters || {}, {}, this.userId)\n                    .count();\n            },\n        });\n    }\n\n    /**\n     * Initializes the reactive endpoint to retrieve the count of the data.\n     */\n    initCountPublication() {\n        const collection = this.collection;\n\n        genCountEndpoint(this.name, {\n            getCursor({ session }) {\n                return collection.find(\n                    session.filters,\n                    {\n                        fields: { _id: 1 },\n                    },\n                    this.userId\n                );\n            },\n\n            getSession(body) {\n                return { filters: body.$filters || {} };\n            },\n        });\n    }\n\n    /**\n     * Initializes security enforcement\n     * THINK: Maybe instead of overriding .find, I could store this data of security inside the collection object.\n     */\n    initSecurity() {\n        const collection = this.collection;\n        const { firewall, maxLimit, restrictedFields } = this.config;\n        const find = collection.find.bind(collection);\n        const findOne = collection.findOne.bind(collection);\n\n        collection.firewall = (filters, options, userId) => {\n            if (userId !== undefined) {\n                this._callFirewall(\n                    { collection: collection },\n                    filters,\n                    options,\n                    userId\n                );\n\n                enforceMaxLimit(options, maxLimit);\n\n                if (restrictedFields) {\n                    Exposure.restrictFields(filters, options, restrictedFields);\n                }\n            }\n        };\n\n        collection.find = function(filters, options = {}, userId = undefined) {\n            if (arguments.length == 0) {\n                filters = {};\n            }\n\n            // If filters is undefined it should return an empty item\n            if (arguments.length > 0 && filters === undefined) {\n                return find(undefined, options);\n            }\n\n            collection.firewall(filters, options, userId);\n\n            return find(filters, options);\n        };\n\n        collection.findOne = function(\n            filters,\n            options = {},\n            userId = undefined\n        ) {\n            // If filters is undefined it should return an empty item\n            if (arguments.length > 0 && filters === undefined) {\n                return null;\n            }\n\n            if (typeof filters === 'string') {\n                filters = { _id: filters };\n            }\n\n            collection.firewall(filters, options, userId);\n\n            return findOne(filters, options);\n        };\n    }\n\n    /**\n     * @private\n     */\n    _callFirewall(...args) {\n        const { firewall } = this.config;\n        if (!firewall) {\n            return;\n        }\n\n        if (_.isArray(firewall)) {\n            firewall.forEach(fire => {\n                fire.call(...args);\n            });\n        } else {\n            firewall.call(...args);\n        }\n    }\n}\n","import Exposure from './exposure.js';\n\nObject.assign(Mongo.Collection.prototype, {\n    expose(config) {\n        if (!Meteor.isServer) {\n            throw new Meteor.Error(\n                'not-allowed',\n                `You can only expose a collection server side. ${this._name}`\n            );\n        }\n\n        new Exposure(this, config);\n    },\n});\n","import deepClone from 'lodash.clonedeep';\nimport {cleanFilters, cleanOptions} from './cleanSelectors';\nimport dotize from '../../query/lib/dotize';\n\n/**\n * Deep Inter Computation\n */\nexport default function cleanBody(main, second, ...args) {\n    let object = {};\n\n    if (second.$filters || second.$options) {\n        const fields = getFields(main);\n\n        cleanFilters(second.$filters, fields);\n        cleanOptions(second.$options, fields);\n    }\n\n    _.each(second, (secondValue, key) => {\n        if (key === '$filters' || key === '$options') {\n            object[key] = secondValue;\n            return;\n        }\n\n        let value = main[key];\n\n        if (value === undefined) {\n            return;\n        }\n\n        // if the main value is a function, we run it.\n        if (_.isFunction(value)) {\n            value = value.call(null, ...args);\n        }\n\n        // if the main value is undefined or false, we skip the merge\n        if (value === undefined || value === false) {\n            return;\n        }\n\n        // we treat this specially, if the value is true\n        if (value === true) {\n            object[key] = _.isObject(secondValue) ? deepClone(secondValue) : value;\n            return;\n        }\n\n        // if the main value is an object\n        if (_.isObject(value)) {\n            if (_.isObject(secondValue)) {\n                // if the second one is an object as well we run recursively run the intersection\n                object[key] = cleanBody(value, secondValue, ...args);\n            }\n            // if it is not, then we will ignore it, because it won't make sense.\n            // to merge {a: 1} with 1.\n\n            return;\n        }\n\n        // if the main value is not an object, it should be a truthy value like 1\n        if (_.isObject(secondValue)) {\n            // if the second value is an object, then we will keep it.\n            // this won't cause problem with deep nesting because\n            // when you specify links you will have the main value as an object, otherwise it will fail\n            // this is used for things like when you have a hash object like profile with multiple nesting fields, you can allow the client to specify only what he needs\n\n            object[key] = deepClone(secondValue);\n        } else {\n            // if the second value is not an object, we just store the first value\n            object[key] = value;\n        }\n    });\n\n    return object;\n}\n\nfunction getFields(body) {\n    return _.keys(dotize.convert(body));\n}","export function cleanOptions(options, ensureFields) {\n    if (!options) {\n        return;\n    }\n\n    if (options.fields) {\n        options.fields = _.pick(options.fields, ...ensureFields);\n    }\n\n    if (options.sort) {\n        options.sort = _.pick(options.sort, ...ensureFields);\n    }\n}\n\nconst deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\nconst special = [...deepFilterFieldsArray, ...deepFilterFieldsObject];\n\nexport function cleanFilters(filters, ensureFields) {\n    if (!filters) {\n        return;\n    }\n\n    _.each(filters, (value, key) => {\n        if (!_.contains(special, key)) {\n            if (!fieldExists(ensureFields, key)) {\n                delete filters[key];\n            }\n        }\n    });\n\n    deepFilterFieldsArray.forEach(field => {\n        if (filters[field]) {\n            filters[field].forEach(element => cleanFilters(element, ensureFields));\n        }\n    });\n\n    deepFilterFieldsObject.forEach(field => {\n        if (filters[field]) {\n            cleanFilters(filters[field], ensureFields);\n        }\n    });\n}\n\n/**\n * This will check if a field exists in a set of fields\n * If fields contains [\"profile\"], then \"profile.something\" will return true\n *\n * @param fields\n * @param key\n * @returns {boolean}\n */\nexport function fieldExists(fields, key) {\n    for (let i = 0; i < fields.length; i++) {\n        if (fields[i] === key || key.indexOf(fields[i] + '.') === 0) {\n            return true;\n        }\n    }\n\n    return false;\n}\n","export default function (node, maxDepth) {\n    if (maxDepth === undefined) {\n        return node;\n    }\n\n    const depth = getDepth(node);\n\n    if (depth > maxDepth) {\n        throw new Meteor.Error('too-deep', 'Your graph request is too deep and it is not allowed.')\n    }\n\n    return node;\n}\n\nexport function getDepth(node) {\n    if (node.collectionNodes.length === 0) {\n        return 1;\n    }\n\n    return 1 + _.max(\n        _.map(node.collectionNodes, getDepth)\n    );\n}","export default function (options, maxLimit) {\n    if (maxLimit === undefined) {\n        return;\n    }\n\n    if (options.limit) {\n        if (options.limit > maxLimit) {\n            options.limit = maxLimit;\n        }\n    } else {\n        options.limit = maxLimit;\n    }\n}","const deepFilterFieldsArray = ['$and', '$or', '$nor'];\nconst deepFilterFieldsObject = ['$not'];\n\n/**\n * This is used to restrict some fields to some users, by passing the fields as array in the exposure object\n * For example in an user exposure: restrictFields(options, ['services', 'createdAt'])\n *\n * @param filters Object\n * @param options Object\n * @param restrictedFields Array\n */\nexport default function restrictFields(filters, options, restrictedFields) {\n    if (!_.isArray(restrictedFields)) {\n        throw new Meteor.Error('invalid-parameters', 'Please specify an array of restricted fields.');\n    }\n\n    cleanFilters(filters, restrictedFields);\n    cleanOptions(options, restrictedFields)\n}\n\n/**\n * Deep cleans filters\n *\n * @param filters\n * @param restrictedFields\n */\nfunction cleanFilters(filters, restrictedFields) {\n    if (filters) {\n        cleanObject(filters, restrictedFields);\n    }\n\n    deepFilterFieldsArray.forEach(field => {\n        if (filters[field]) {\n            filters[field].forEach(element => cleanFilters(element, restrictedFields));\n        }\n    });\n\n    deepFilterFieldsObject.forEach(field => {\n        if (filters[field]) {\n            cleanFilters(filters[field], restrictedFields);\n        }\n    });\n}\n\n/**\n * Deeply cleans options\n *\n * @param options\n * @param restrictedFields\n */\nfunction cleanOptions(options, restrictedFields) {\n    if (options.fields) {\n        cleanObject(options.fields, restrictedFields);\n\n        if (_.keys(options.fields).length === 0) {\n            _.extend(options.fields, {_id: 1})\n        }\n    } else {\n        options.fields = {_id: 1};\n    }\n\n    if (options.sort) {\n        cleanObject(options.sort, restrictedFields);\n    }\n}\n\n/**\n * Cleans the object (not deeply)\n *\n * @param object\n * @param restrictedFields\n */\nfunction cleanObject(object, restrictedFields) {\n    _.each(object, (value, key) => {\n        restrictedFields.forEach((restrictedField) => {\n            if (matching(restrictedField, key)) {\n                delete object[key];\n            }\n        })\n    });\n}\n\n/**\n * Returns true if field == subfield or if `${field}.` INCLUDED in subfield\n * Example: \"profile\" and \"profile.firstName\" will be a matching field\n * @param field\n * @param subfield\n * @returns {boolean}\n */\nfunction matching(field, subfield) {\n    if (field === subfield) {\n        return true;\n    }\n\n    return subfield.slice(0, field.length + 1) === field + '.';\n}","export default function restrictLinks(parentNode, ...args) {\n    const restrictedLinks = getLinks(parentNode, ...args);\n\n    if (!restrictedLinks || restrictedLinks.length) {\n        return;\n    }\n\n    _.each(parentNode.collectionNodes, collectionNode => {\n        if (_.contains(restrictedLinks, collectionNode.linkName)) {\n            parentNode.remove(collectionNode);\n        }\n    });\n}\n\nexport function getLinks(node, ...args) {\n    if (node.collection && node.collection.__exposure) {\n        const exposure = node.collection.__exposure;\n\n        if (exposure.config.restrictLinks) {\n            const configRestrictLinks = exposure.config.restrictLinks;\n\n            if (_.isArray(configRestrictLinks)) {\n                return configRestrictLinks;\n            }\n\n            return configRestrictLinks(...args);\n        }\n    }\n}","import { Mongo } from 'meteor/mongo';\nimport astToQuery from './lib/astToQuery';\n\nexport { setAstToQueryDefaults } from './lib/defaults';\nexport { default as astToBody } from './lib/astToBody';\n\nObject.assign(Mongo.Collection.prototype, {\n  astToQuery,\n});\n\nexport { astToQuery };\n","export const Symbols = {\n  ARGUMENTS: Symbol('arguments'),\n};\n\nexport default function astToBody(ast) {\n  const fieldNodes = ast.fieldNodes;\n\n  const body = extractSelectionSet(ast.fieldNodes[0].selectionSet);\n\n  return body;\n}\n\nfunction extractSelectionSet(set) {\n  let body = {};\n  set.selections.forEach(el => {\n    if (!el.selectionSet) {\n      body[el.name.value] = 1;\n    } else {\n      body[el.name.value] = extractSelectionSet(el.selectionSet);\n      if (el.arguments.length) {\n        let argumentMap = {};\n        el.arguments.forEach(arg => {\n          argumentMap[arg.name.value] = arg.value.value;\n        });\n\n        body[el.name.value][Symbols.ARGUMENTS] = argumentMap;\n      }\n    }\n  });\n\n  return body;\n}\n","import { check, Match } from 'meteor/check';\nimport astToBody, { Symbols } from './astToBody';\nimport defaults from './defaults';\nimport intersectDeep from '../../query/lib/intersectDeep';\nimport enforceMaxLimit from '../../exposure/lib/enforceMaxLimit';\n\nconst Errors = {\n  MAX_DEPTH: 'The maximum depth of this request exceeds the depth allowed.',\n};\n\nexport default function astToQuery(ast, config = {}) {\n  const collection = this;\n\n  check(config, {\n    embody: Match.Maybe(Function),\n    $filters: Match.Maybe(Object),\n    $options: Match.Maybe(Object),\n    maxDepth: Match.Maybe(Number),\n    maxLimit: Match.Maybe(Number),\n    deny: Match.Maybe([String]),\n    intersect: Match.Maybe(Object),\n  });\n\n  config = Object.assign(\n    {\n      $options: {},\n      $filters: {},\n    },\n    defaults,\n    config\n  );\n\n  // get the body\n  let body = astToBody(ast);\n\n  // first we do the intersection\n  if (config.intersect) {\n    body = intersectDeep(config.intersect, body);\n  }\n\n  // enforce the maximum amount of data we allow to retrieve\n  if (config.maxLimit) {\n    enforceMaxLimit(config.$options, config.maxLimit);\n  }\n\n  // figure out depth based\n  if (config.maxDepth) {\n    const currentMaxDepth = getMaxDepth(body);\n    if (currentMaxDepth > config.maxDepth) {\n      throw Errors.MAX_DEPTH;\n    }\n  }\n\n  if (config.deny) {\n    deny(body, config.deny);\n  }\n\n  Object.assign(body, {\n    $filters: config.$filters,\n    $options: config.$options,\n  });\n\n  if (config.embody) {\n    const getArgs = createGetArgs(body);\n    config.embody.call(null, {\n      body,\n      getArgs,\n    });\n  }\n\n  // we return the query\n  return this.createQuery(body);\n}\n\nexport function getMaxDepth(body) {\n  let depths = [];\n  for (key in body) {\n    if (_.isObject(body[key])) {\n      depths.push(getMaxDepth(body[key]));\n    }\n  }\n\n  if (depths.length === 0) {\n    return 1;\n  }\n\n  return Math.max(...depths) + 1;\n}\n\nexport function deny(body, fields) {\n  fields.forEach(field => {\n    let parts = field.split('.');\n    let accessor = body;\n    while (parts.length != 0) {\n      if (parts.length === 1) {\n        delete accessor[parts[0]];\n      } else {\n        if (!_.isObject(accessor)) {\n          break;\n        }\n        accessor = accessor[parts[0]];\n      }\n      parts.shift();\n    }\n  });\n\n  return clearEmptyObjects(body);\n}\n\nexport function clearEmptyObjects(body) {\n  // clear empty nodes then back-propagate\n  for (let key in body) {\n    if (_.isObject(body[key])) {\n      const shouldDelete = clearEmptyObjects(body[key]);\n      if (shouldDelete) {\n        delete body[key];\n      }\n    }\n  }\n\n  return Object.keys(body).length === 0;\n}\n\nexport function createGetArgs(body) {\n  return function(path) {\n    const parts = path.split('.');\n    let stopped = false;\n    let accessor = body;\n    for (var i = 0; i < parts.length; i++) {\n      if (!accessor) {\n        stopped = true;\n        break;\n      }\n\n      if (accessor[parts[i]]) {\n        accessor = accessor[parts[i]];\n      }\n    }\n\n    if (stopped) {\n      return {};\n    }\n\n    if (accessor) {\n      return accessor[Symbols.ARGUMENTS] || {};\n    }\n  };\n}\n","let defaults = {};\n\nexport default defaults;\n\nexport function setAstToQueryDefaults(object) {\n  Object.assign(defaults, object);\n}\n","import {Match} from 'meteor/check';\nimport {Mongo} from 'meteor/mongo';\n\nexport const DenormalizeSchema = {\n    field: String,\n    body: Object,\n    bypassSchema: Match.Maybe(Boolean)\n};\n\nexport const LinkConfigDefaults = {\n    type: 'one',\n};\n\nexport const LinkConfigSchema = {\n    type: Match.Maybe(Match.OneOf('one', 'many', '1', '*')),\n    collection: Match.Maybe(\n        Match.Where(collection => {\n            // We do like this so it works with other types of collections \n            // like FS.Collection\n            return _.isObject(collection) && (\n                collection instanceof Mongo.Collection\n                || \n                !!collection._collection\n            );\n        })\n    ),\n    field: Match.Maybe(String),\n    metadata: Match.Maybe(Boolean),\n    inversedBy: Match.Maybe(String),\n    index: Match.Maybe(Boolean),\n    unique: Match.Maybe(Boolean),\n    autoremove: Match.Maybe(Boolean),\n    denormalize: Match.Maybe(Match.ObjectIncluding(DenormalizeSchema)),\n};","export const LINK_STORAGE = '__links';\n","import { Mongo } from 'meteor/mongo';\nimport { LINK_STORAGE } from './constants.js';\nimport Linker from './linker.js';\n\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * The data we add should be valid for config.schema.js\n     */\n    addLinks(data) {\n        if (!this[LINK_STORAGE]) {\n            this[LINK_STORAGE] = {};\n        }\n\n        _.each(data, (linkConfig, linkName) => {\n            if (this[LINK_STORAGE][linkName]) {\n                throw new Meteor.Error(\n                    `You cannot add the link with name: ${linkName} because it was already added to ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            const linker = new Linker(this, linkName, linkConfig);\n\n            _.extend(this[LINK_STORAGE], {\n                [linkName]: linker,\n            });\n        });\n    },\n\n    getLinks() {\n        return this[LINK_STORAGE];\n    },\n\n    getLinker(name) {\n        if (this[LINK_STORAGE]) {\n            return this[LINK_STORAGE][name];\n        }\n    },\n\n    hasLink(name) {\n        if (!this[LINK_STORAGE]) {\n            return false;\n        }\n\n        return !!this[LINK_STORAGE][name];\n    },\n\n    getLink(objectOrId, name) {\n        let linkData = this[LINK_STORAGE];\n\n        if (!linkData) {\n            throw new Meteor.Error(\n                `There are no links defined for collection: ${this._name}`\n            );\n        }\n\n        if (!linkData[name]) {\n            throw new Meteor.Error(\n                `There is no link ${name} for collection: ${this._name}`\n            );\n        }\n\n        const linker = linkData[name];\n        let object = objectOrId;\n        if (typeof objectOrId == 'string') {\n            if (!linker.isVirtual()) {\n                object = this.findOne(objectOrId, {\n                    fields: {\n                        [linker.linkStorageField]: 1,\n                    },\n                });\n            } else {\n                object = { _id: objectOrId };\n            }\n\n            if (!object) {\n                throw new Meteor.Error(\n                    `We could not find any object with _id: \"${objectOrId}\" within the collection: ${\n                        this._name\n                    }`\n                );\n            }\n        }\n\n        return linkData[name].createLink(object);\n    },\n});\n","import LinkMany from './linkTypes/linkMany.js';\nimport LinkManyMeta from './linkTypes/linkManyMeta.js';\nimport LinkOne from './linkTypes/linkOne.js';\nimport LinkOneMeta from './linkTypes/linkOneMeta.js';\nimport { LinkConfigSchema, LinkConfigDefaults } from './config.schema.js';\nimport smartArguments from './linkTypes/lib/smartArguments';\nimport dot from 'dot-object';\nimport { check } from 'meteor/check';\nimport { _ } from 'meteor/underscore';\nimport { access } from 'fs';\n\nexport default class Linker {\n    /**\n     * @param mainCollection\n     * @param linkName\n     * @param linkConfig\n     */\n    constructor(mainCollection, linkName, linkConfig) {\n        this.mainCollection = mainCollection;\n        this.linkConfig = Object.assign({}, LinkConfigDefaults, linkConfig);\n        this.linkName = linkName;\n\n        // check linkName must not exist in schema\n        this._validateAndClean();\n\n        // initialize cascade removal hooks.\n        this._initAutoremove();\n        this._initDenormalization();\n\n        if (this.isVirtual()) {\n            // if it's a virtual field make sure that when this is deleted, it will be removed from the references\n            if (!linkConfig.autoremove) {\n                this._handleReferenceRemovalForVirtualLinks();\n            }\n        } else {\n            this._initIndex();\n        }\n    }\n\n    /**\n     * Values which represent for the relation a single link\n     * @returns {string[]}\n     */\n    get oneTypes() {\n        return ['one', '1'];\n    }\n\n    /**\n     * Returns the strategies: one, many, one-meta, many-meta\n     * @returns {string}\n     */\n    get strategy() {\n        let strategy = this.isMany() ? 'many' : 'one';\n        if (this.linkConfig.metadata) {\n            strategy += '-meta';\n        }\n\n        return strategy;\n    }\n\n    /**\n     * Returns the field name in the document where the actual relationships are stored.\n     * @returns string\n     */\n    get linkStorageField() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.linkStorageField;\n        }\n\n        return this.linkConfig.field;\n    }\n\n    /**\n     * The collection that is linked with the current collection\n     * @returns Mongo.Collection\n     */\n    getLinkedCollection() {\n        return this.linkConfig.collection;\n    }\n\n    /**\n     * If the relationship for this link is of \"many\" type.\n     */\n    isMany() {\n        return !this.isSingle();\n    }\n\n    /**\n     * If the relationship for this link contains metadata\n     */\n    isMeta() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isMeta();\n        }\n\n        return !!this.linkConfig.metadata;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isSingle() {\n        if (this.isVirtual()) {\n            return this.linkConfig.relatedLinker.isSingle();\n        }\n\n        return _.contains(this.oneTypes, this.linkConfig.type);\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isVirtual() {\n        return !!this.linkConfig.inversedBy;\n    }\n\n    /**\n     * Should return a single result.\n     */\n    isOneResult() {\n        return (\n            (this.isVirtual() &&\n                this.linkConfig.relatedLinker.linkConfig.unique) ||\n            (!this.isVirtual() && this.isSingle())\n        );\n    }\n\n    /**\n     * @param object\n     * @param collection To impersonate the getLinkedCollection() of the \"Linker\"\n     *\n     * @returns {LinkOne|LinkMany|LinkManyMeta|LinkOneMeta|LinkResolve}\n     */\n    createLink(object, collection = null) {\n        let helperClass = this._getHelperClass();\n\n        return new helperClass(this, object, collection);\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _validateAndClean() {\n        if (!this.linkConfig.collection) {\n            throw new Meteor.Error(\n                'invalid-config',\n                `For the link ${\n                    this.linkName\n                } you did not provide a collection.`\n            );\n        }\n\n        if (typeof this.linkConfig.collection === 'string') {\n            const collectionName = this.linkConfig.collection;\n            this.linkConfig.collection = Mongo.Collection.get(collectionName);\n\n            if (!this.linkConfig.collection) {\n                throw new Meteor.Error(\n                    'invalid-collection',\n                    `Could not find a collection with the name: ${collectionName}`\n                );\n            }\n        }\n\n        if (this.isVirtual()) {\n            return this._prepareVirtual();\n        } else {\n            if (!this.linkConfig.type) {\n                this.linkConfig.type = 'one';\n            }\n\n            if (!this.linkConfig.field) {\n                this.linkConfig.field = this._generateFieldName();\n            } else {\n                if (this.linkConfig.field == this.linkName) {\n                    throw new Meteor.Error(\n                        'invalid-config',\n                        `For the link ${\n                            this.linkName\n                        } you must not use the same name for the field, otherwise it will cause conflicts when fetching data`\n                    );\n                }\n            }\n        }\n\n        check(this.linkConfig, LinkConfigSchema);\n    }\n\n    /**\n     * We need to apply same type of rules in this case.\n     * @private\n     */\n    _prepareVirtual() {\n        const { collection, inversedBy } = this.linkConfig;\n        let linker = collection.getLinker(inversedBy);\n\n        if (!linker) {\n            // it is possible that the collection doesn't have a linker created yet.\n            // so we will create it on startup after all links have been defined\n            Meteor.startup(() => {\n                linker = collection.getLinker(inversedBy);\n                if (!linker) {\n                    throw new Meteor.Error(\n                        `You tried setting up an inversed link in \"${\n                            this.mainCollection._name\n                        }\" pointing to collection: \"${\n                            collection._name\n                        }\" link: \"${inversedBy}\", but no such link was found. Maybe a typo ?`\n                    );\n                } else {\n                    this._setupVirtualConfig(linker);\n                }\n            });\n        } else {\n            this._setupVirtualConfig(linker);\n        }\n    }\n\n    /**\n     * @param linker\n     * @private\n     */\n    _setupVirtualConfig(linker) {\n        const virtualLinkConfig = linker.linkConfig;\n\n        if (!virtualLinkConfig) {\n            throw new Meteor.Error(\n                `There is no link-config for the related collection on ${inversedBy}. Make sure you added the direct links before specifying virtual ones.`\n            );\n        }\n\n        _.extend(this.linkConfig, {\n            metadata: virtualLinkConfig.metadata,\n            relatedLinker: linker,\n        });\n    }\n\n    /**\n     * Depending on the strategy, we create the proper helper class\n     * @private\n     */\n    _getHelperClass() {\n        switch (this.strategy) {\n            case 'many-meta':\n                return LinkManyMeta;\n            case 'many':\n                return LinkMany;\n            case 'one-meta':\n                return LinkOneMeta;\n            case 'one':\n                return LinkOne;\n        }\n\n        throw new Meteor.Error(\n            'invalid-strategy',\n            `${this.strategy} is not a valid strategy`\n        );\n    }\n\n    /**\n     * If field name not present, we generate it.\n     * @private\n     */\n    _generateFieldName() {\n        let cleanedCollectionName = this.linkConfig.collection._name.replace(\n            /\\./g,\n            '_'\n        );\n        let defaultFieldPrefix = this.linkName + '_' + cleanedCollectionName;\n\n        switch (this.strategy) {\n            case 'many-meta':\n                return `${defaultFieldPrefix}_metas`;\n            case 'many':\n                return `${defaultFieldPrefix}_ids`;\n            case 'one-meta':\n                return `${defaultFieldPrefix}_meta`;\n            case 'one':\n                return `${defaultFieldPrefix}_id`;\n        }\n    }\n\n    /**\n     * When a link that is declared virtual is removed, the reference will be removed from every other link.\n     * @private\n     */\n    _handleReferenceRemovalForVirtualLinks() {\n        this.mainCollection.after.remove((userId, doc) => {\n            // this problem may occur when you do a .remove() before Meteor.startup()\n            if (!this.linkConfig.relatedLinker) {\n                console.warn(\n                    `There was an error finding the link for removal for collection: \"${\n                        this.mainCollection._name\n                    }\" with link: \"${\n                        this.linkName\n                    }\". This may occur when you do a .remove() before Meteor.startup()`\n                );\n                return;\n            }\n\n            const accessor = this.createLink(doc);\n\n            _.each(accessor.fetchAsArray(), linkedObj => {\n                const { relatedLinker } = this.linkConfig;\n                // We do this check, to avoid self-referencing hell when defining virtual links\n                // Virtual links if not found \"compile-time\", we will try again to reprocess them on Meteor.startup\n                // if a removal happens before Meteor.startup this may fail\n                if (relatedLinker) {\n                    let link = relatedLinker.createLink(linkedObj);\n\n                    if (relatedLinker.isSingle()) {\n                        link.unset();\n                    } else {\n                        link.remove(doc);\n                    }\n                }\n            });\n        });\n    }\n\n    _initIndex() {\n        if (Meteor.isServer) {\n            let field = this.linkConfig.field;\n            if (this.linkConfig.metadata) {\n                field = field + '._id';\n            }\n\n            if (this.linkConfig.index) {\n                if (this.isVirtual()) {\n                    throw new Meteor.Error(\n                        'You cannot set index on an inversed link.'\n                    );\n                }\n\n                let options;\n                if (this.linkConfig.unique) {\n                    options = { unique: true };\n                }\n\n                this.mainCollection._ensureIndex({ [field]: 1 }, options);\n            } else {\n                if (this.linkConfig.unique) {\n                    if (this.isVirtual()) {\n                        throw new Meteor.Error(\n                            'You cannot set unique property on an inversed link.'\n                        );\n                    }\n\n                    this.mainCollection._ensureIndex(\n                        {\n                            [field]: 1,\n                        },\n                        { unique: true, sparse: true }\n                    );\n                }\n            }\n        }\n    }\n\n    _initAutoremove() {\n        if (!this.linkConfig.autoremove) {\n            return;\n        }\n\n        if (!this.isVirtual()) {\n            this.mainCollection.after.remove((userId, doc) => {\n                this.getLinkedCollection().remove({\n                    _id: {\n                        $in: smartArguments.getIds(doc[this.linkStorageField]),\n                    },\n                });\n            });\n        } else {\n            this.mainCollection.after.remove((userId, doc) => {\n                const linker = this.mainCollection.getLink(doc, this.linkName);\n                const ids = linker\n                    .find({}, { fields: { _id: 1 } })\n                    .fetch()\n                    .map(item => item._id);\n\n                this.getLinkedCollection().remove({\n                    _id: { $in: ids },\n                });\n            });\n        }\n    }\n\n    /**\n     * Initializes denormalization using herteby:denormalize\n     * @private\n     */\n    _initDenormalization() {\n        if (!this.linkConfig.denormalize || !Meteor.isServer) {\n            return;\n        }\n\n        const packageExists = !!Package['herteby:denormalize'];\n        if (!packageExists) {\n            throw new Meteor.Error(\n                'missing-package',\n                `Please add the herteby:denormalize package to your Meteor application in order to make caching work`\n            );\n        }\n\n        const { field, body, bypassSchema } = this.linkConfig.denormalize;\n        let cacheConfig;\n\n        let referenceFieldSuffix = '';\n        if (this.isMeta()) {\n            referenceFieldSuffix = this.isSingle() ? '._id' : ':_id';\n        }\n\n        if (this.isVirtual()) {\n            let inversedLink = this.linkConfig.relatedLinker.linkConfig;\n\n            let type =\n                inversedLink.type == 'many' ? 'many-inverse' : 'inversed';\n\n            cacheConfig = {\n                type: type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: inversedLink.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema,\n            };\n        } else {\n            cacheConfig = {\n                type: this.linkConfig.type,\n                collection: this.linkConfig.collection,\n                fields: body,\n                referenceField: this.linkConfig.field + referenceFieldSuffix,\n                cacheField: field,\n                bypassSchema: !!bypassSchema,\n            };\n        }\n\n        if (this.isVirtual()) {\n            Meteor.startup(() => {\n                this.mainCollection.cache(cacheConfig);\n            });\n        } else {\n            this.mainCollection.cache(cacheConfig);\n        }\n    }\n\n    /**\n     * Verifies if this linker is denormalized. It can be denormalized from the inverse side as well.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    isDenormalized() {\n        return !!this.linkConfig.denormalize;\n    }\n\n    /**\n     * Verifies if the body of the linked element does not contain fields outside the cache body\n     *\n     * @param body\n     * @returns {boolean}\n     * @private\n     */\n    isSubBodyDenormalized(body) {\n        const cacheBody = this.linkConfig.denormalize.body;\n\n        const cacheBodyFields = _.keys(dot.dot(cacheBody));\n        const bodyFields = _.keys(dot.dot(_.omit(body, '_id')));\n\n        return _.difference(bodyFields, cacheBodyFields).length === 0;\n    }\n}\n","import sift from 'sift';\nimport dot from 'dot-object';\n\nexport default function createSearchFilters(object, fieldStorage, strategy, isVirtual, metaFilters) {\n    if (!isVirtual) {\n        switch (strategy) {\n            case 'one': return createOne(object, fieldStorage);\n            case 'one-meta': return createOneMeta(object, fieldStorage, metaFilters);\n            case 'many': return createMany(object, fieldStorage);\n            case 'many-meta': return createManyMeta(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    } else {\n        switch (strategy) {\n            case 'one': return createOneVirtual(object, fieldStorage);\n            case 'one-meta': return createOneMetaVirtual(object, fieldStorage, metaFilters);\n            case 'many': return createManyVirtual(object, fieldStorage);\n            case 'many-meta': return createManyMetaVirtual(object, fieldStorage, metaFilters);\n            default:\n                throw new Meteor.Error(`Invalid linking strategy: ${strategy}`)\n        }\n    }\n}\n\nexport function createOne(object, fieldStorage) {\n    return {\n        _id: dot.pick(fieldStorage, object)\n    };\n}\n\nexport function createOneVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createOneMeta(object, fieldStorage, metaFilters) {\n    const value = object[fieldStorage];\n\n    if (metaFilters) {\n        if (!sift(metaFilters)(value)) {\n            return {_id: undefined};\n        }\n    }\n\n    return {\n        _id: value ? value._id : value\n    };\n}\n\nexport function createOneMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[fieldStorage + '.' + key] = value;\n        })\n    }\n\n    filters[fieldStorage + '._id'] = object._id;\n\n    return filters;\n}\n\nexport function createMany(object, fieldStorage) {\n    const [root, ...nested] = fieldStorage.split('.');\n    if (nested.length > 0) {\n        const arr = object[root];\n        const ids = arr ? _.uniq(_.union(arr.map(obj => _.isObject(obj) ? dot.pick(nested.join('.'), obj) : []))) : [];\n        return {\n            _id: {$in: ids}\n        };\n    }\n    return {\n        _id: {\n            $in: object[fieldStorage] || []\n        }\n    };\n}\n\nexport function createManyVirtual(object, fieldStorage) {\n    return {\n        [fieldStorage]: object._id\n    };\n}\n\nexport function createManyMeta(object, fieldStorage, metaFilters) {\n    let value = object[fieldStorage];\n\n    if (metaFilters) {\n        value = sift(metaFilters, value)\n    }\n\n    return {\n        _id: {\n            $in: _.pluck(value, '_id') || []\n        }\n    };\n}\n\nexport function createManyMetaVirtual(object, fieldStorage, metaFilters) {\n    let filters = {};\n    if (metaFilters) {\n        _.each(metaFilters, (value, key) => {\n            filters[key] = value;\n        })\n    }\n\n    filters._id = object._id;\n\n    return {\n        [fieldStorage]: {$elemMatch: filters}\n    };\n}","import SmartArgs from './lib/smartArguments.js';\nimport createSearchFilters from '../lib/createSearchFilters';\n\nexport default class Link {\n    get config() { return this.linker.linkConfig; }\n\n    get isVirtual() { return this.linker.isVirtual() }\n\n    constructor(linker, object, collection) {\n        this.linker = linker;\n        this.object = object;\n        this.linkedCollection = (collection) ? collection : linker.getLinkedCollection();\n\n        if (this.linker.isVirtual()) {\n            this.linkStorageField = this.config.relatedLinker.linkConfig.field;\n        } else {\n            this.linkStorageField = this.config.field;\n        }\n    }\n\n    /**\n     * Gets the stored link information value\n     * @returns {*}\n     */\n    value() {\n        if (this.isVirtual) {\n            throw new Meteor.Error('You can only take the value from the main link.');\n        }\n\n        return this.object[this.linkStorageField];\n    }\n\n    /**\n     * Finds linked data.\n     *\n     * @param filters\n     * @param options\n     * @returns {*}\n     * @param userId\n     */\n    find(filters = {}, options = {}, userId = undefined) {\n        let linker = this.linker;\n        const linkedCollection = this.linkedCollection;\n\n        let $metaFilters;\n        if (filters.$meta) {\n            $metaFilters = filters.$meta;\n            delete filters.$meta;\n        }\n\n        const searchFilters = createSearchFilters(\n            this.object,\n            this.linkStorageField,\n            linker.strategy,\n            linker.isVirtual(),\n            $metaFilters\n        );\n\n        let appliedFilters = _.extend({}, filters, searchFilters);\n\n        // see https://github.com/cult-of-coders/grapher/issues/134\n        // happens due to recursive importing of modules\n        // TODO: find another way to do this\n        if (linkedCollection.find) {\n            return linkedCollection.find(appliedFilters, options, userId)\n        } else {\n            return linkedCollection.default.find(appliedFilters, options, userId);\n        }\n    }\n\n    /**\n     * @param filters\n     * @param options\n     * @param others\n     * @returns {*|{content}|any}\n     */\n    fetch(filters, options, ...others) {\n        let result = this.find(filters, options, ...others).fetch();\n\n        if (this.linker.isOneResult()) {\n            return _.first(result);\n        }\n\n        return result;\n    }\n\n    /**\n     * This is just like fetch() but forces to get an array even if it's single result\n     * \n     * @param {*} filters \n     * @param {*} options \n     * @param  {...any} others \n     */\n    fetchAsArray(filters, options, ...others) {\n        return this.find(filters, options, ...others).fetch()\n    }\n\n    /**\n     * When we are dealing with multiple type relationships, $in would require an array. If the field value is null, it will fail\n     * We use clean to make it an empty array by default.\n     */\n    clean() {}\n\n    /**\n     * Extracts a single id\n     */\n    identifyId(what, saveToDatabase) {\n        return SmartArgs.getId(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Extracts the ids of object(s) or strings and returns an array.\n     */\n    identifyIds(what, saveToDatabase) {\n        return SmartArgs.getIds(what, {\n            saveToDatabase,\n            collection: this.linkedCollection\n        });\n    }\n\n    /**\n     * Checks when linking data, if the ids are valid with the linked collection.\n     * @throws Meteor.Error\n     * @param ids\n     *\n     * @protected\n     */\n    _validateIds(ids) {\n        if (!_.isArray(ids)) {\n            ids = [ids];\n        }\n\n        const validIds = this.linkedCollection.find({\n            _id: {$in: ids}\n        }, {fields: {_id: 1}}).fetch().map(doc => doc._id);\n\n        if (validIds.length != ids.length) {\n            throw new Meteor.Error('not-found', `You tried to create links with non-existing id(s) inside \"${this.linkedCollection._name}\": ${_.difference(ids, validIds).join(', ')}`)\n        }\n    }\n\n    _checkWhat(what) {\n        if (what === undefined || what === null) {\n            throw new Error(`The argument passed: ${what} is not accepted.`);\n        }\n    }\n\n    /**\n     * This is for allowing commands such as set/unset/add/remove/metadata from the virtual link.\n     *\n     * @param action\n     * @param what\n     * @param metadata\n     *\n     * @protected\n     */\n    _virtualAction(action, what, metadata) {\n        const linker = this.linker.linkConfig.relatedLinker;\n\n        // its an unset operation most likely.\n        if (what === undefined) {\n            const reversedLink = linker.createLink(this.fetch());\n            reversedLink.unset();\n\n            return;\n        }\n\n        if (!_.isArray(what)) {\n            what = [what];\n        }\n\n        what = _.map(what, element => {\n            if (!_.isObject(element)) {\n                return linker.mainCollection.findOne(element);\n            } else {\n                if (!element._id) {\n                    const elementId = linker.mainCollection.insert(element);\n                    _.extend(element, linker.mainCollection.findOne(elementId));\n                }\n\n                return element;\n            }\n        });\n\n        return _.map(what, element => {\n            const reversedLink = linker.createLink(element);\n\n            if (action == 'metadata') {\n                if (linker.isSingle()) {\n                    return reversedLink.metadata(metadata);\n                } else {\n                    return reversedLink.metadata(this.object, metadata);\n                }\n            } else if (action == 'add' || action == 'set') {\n                if (linker.isSingle()) {\n                    reversedLink.set(this.object, metadata);\n                } else {\n                    reversedLink.add(this.object, metadata);\n                }\n            } else {\n                if (linker.isSingle()) {\n                    reversedLink.unset();\n                } else {\n                    reversedLink.remove(this.object);\n                }\n            }\n        });\n    }\n}\n","import Link from './base.js';\nimport dot from 'dot-object';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkMany extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * Ads the _ids to the object.\n     * @param what\n     */\n    add(what) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        //if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/remove operations must be done from the owning-link of the relationship');\n\n        this.clean();\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        const field = this.linkStorageField;\n\n        // update the field\n        this.object[field] = _.union(this.object[field], _ids);\n\n        // update the db\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: _ids}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     */\n    remove(what) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        if (this.isVirtual) throw new Meteor.Error('not-allowed', 'Add/Remove operations should be done from the owner of the relationship');\n\n        this.clean();\n        const field = this.linkStorageField;\n        const [root, ...nested] = field.split('.');\n\n        const _ids = this.identifyIds(what);\n\n        // update the field\n        this.object[root] = _.filter(\n            this.object[root],\n    _id => !_.contains(_ids, nested.length > 0 ? dot.pick(nested.join('.'), _id) : _id)\n        );\n\n        // update the db\n        let modifier = {\n            $pull: {\n                [root]: nested.length > 0 ? {[nested.join('.')]: {$in: _ids}} : {$in: _ids},\n            },\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkManyMeta extends Link {\n    clean() {\n        if (!this.object[this.linkStorageField]) {\n            this.object[this.linkStorageField] = [];\n        }\n    }\n\n    /**\n     * @param what\n     * @param metadata\n     */\n    add(what, metadata = {}) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what, true);\n        this._validateIds(_ids);\n\n        let field = this.linkStorageField;\n\n        this.object[field] = this.object[field] || [];\n        let metadatas = [];\n\n        _.each(_ids, _id => {\n            let localMetadata = _.clone(metadata);\n            localMetadata._id = _id;\n\n            this.object[field].push(localMetadata);\n            metadatas.push(localMetadata);\n        });\n\n        let modifier = {\n            $addToSet: {\n                [field]: {$each: metadatas}\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    /**\n     * @param what\n     * @param extendMetadata\n     */\n    metadata(what, extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', what, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (what === undefined) {\n            return this.object[field];\n        }\n\n        if (_.isArray(what)) {\n            throw new Meteor.Error('not-allowed', 'Metadata updates should be made for one entity only, not multiple');\n        }\n\n        const _id = this.identifyId(what);\n\n        let existingMetadata = _.find(this.object[field], metadata => metadata._id == _id);\n        if (extendMetadata === undefined) {\n            return existingMetadata;\n        } else {\n            _.extend(existingMetadata, extendMetadata);\n            let subfield = field + '._id';\n            let subfieldUpdate = field + '.$';\n\n            this.linker.mainCollection.update({\n                _id: this.object._id,\n                [subfield]: _id\n            }, {\n               $set: {\n                   [subfieldUpdate]: existingMetadata\n               }\n            });\n        }\n\n        return this;\n    }\n\n    remove(what) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        const _ids = this.identifyIds(what);\n        let field = this.linkStorageField;\n\n        this.object[field] = _.filter(this.object[field], link => !_.contains(_ids, link._id));\n\n        let modifier = {\n            $pull: {\n                [field]: {\n                    _id: {\n                        $in: _ids\n                    }\n                }\n            }\n        };\n\n        this.linker.mainCollection.update(this.object._id, modifier);\n\n        return this;\n    }\n\n    set(what, metadata) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('set', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *set* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n\n    unset(what) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *unset* in a relationship that is single. Please use add/remove for *many* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOne extends Link {\n    set(what) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('set', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        const _id = this.identifyId(what, true);\n        this._validateIds([_id]);\n\n        this.object[field] = _id;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: _id\n            }\n        });\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset', what);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = null;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: null\n            }\n        });\n\n        return this;\n    }\n\n    add(what) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('add', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","import Link from './base.js';\nimport SmartArgs from './lib/smartArguments.js';\n\nexport default class LinkOneMeta extends Link {\n    set(what, metadata = {}) {\n        this._checkWhat(what);\n\n        metadata = Object.assign({}, metadata);\n        \n        if (this.isVirtual) {\n            this._virtualAction('set', what, metadata);\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        metadata._id = this.identifyId(what, true);\n        this._validateIds([metadata._id]);\n\n        this.object[field] = metadata;\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: metadata\n            }\n        });\n\n        return this;\n    }\n\n    metadata(extendMetadata) {\n        if (this.isVirtual) {\n            this._virtualAction('metadata', undefined, extendMetadata);\n\n            return this;\n        }\n\n        let field = this.linkStorageField;\n\n        if (!extendMetadata) {\n            return this.object[field];\n        } else {\n            _.extend(this.object[field], extendMetadata);\n\n            this.linker.mainCollection.update(this.object._id, {\n                $set: {\n                    [field]: this.object[field]\n                }\n            });\n        }\n\n        return this;\n    }\n\n    unset() {\n        if (this.isVirtual) {\n            this._virtualAction('unset');\n            return this;\n        }\n\n        let field = this.linkStorageField;\n        this.object[field] = {};\n\n        this.linker.mainCollection.update(this.object._id, {\n            $set: {\n                [field]: {}\n            }\n        });\n\n        return this;\n    }\n\n    add(what, metadata) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('add', what, metadata);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *add* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n\n    remove(what) {\n        this._checkWhat(what);\n\n        if (this.isVirtual) {\n            this._virtualAction('remove', what);\n            return this;\n        }\n\n        throw new Meteor.Error('invalid-command', 'You are trying to *remove* in a relationship that is single. Please use set/unset for *single* relationships');\n    }\n}","/**\n * When you work with add/remove set/unset\n * You have the ability to pass strings, array of strings, objects, array of objects\n * If you are adding something and you want to save them in db, you can pass objects without ids.\n */\nexport default new class {\n    getIds(what, options) {\n        if (_.isArray(what)) {\n            return _.map(what, (subWhat) => {\n                return this.getId(subWhat, options)\n            })\n        } else {\n            return [this.getId(what, options)];\n        }\n\n        throw new Meteor.Error('invalid-type', `Unrecognized type: ${typeof what} for managing links`);\n    }\n\n    getId(what, options) {\n        if (typeof what === 'string') {\n            return what;\n        }\n\n        if (typeof what === 'object') {\n            if (!what._id && options.saveToDatabase) {\n                what._id = options.collection.insert(what);\n            }\n\n            return what._id\n        }\n    }\n}","import deepClone from 'lodash.clonedeep';\n\nlet globalConfig = {};\n\nexport default class NamedQueryBase {\n    static setConfig(config) {\n        globalConfig = config;\n    }\n\n    static getConfig() {\n        return globalConfig;\n    }\n\n    isNamedQuery = true;\n\n    constructor(name, collection, body, options = {}) {\n        this.queryName = name;\n\n        if (_.isFunction(body)) {\n            this.resolver = body;\n        } else {\n            this.body = deepClone(body);\n        }\n\n        this.subscriptionHandle = null;\n        this.params = options.params || {};\n        this.options = Object.assign({}, globalConfig, options);\n        this.collection = collection;\n        this.isExposed = false;\n    }\n\n    get name() {\n        return `named_query_${this.queryName}`;\n    }\n\n    get isResolver() {\n        return !!this.resolver;\n    }\n\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams(params) {\n        params = params || this.params;\n\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        try {\n            this._validate(validateParams, params);\n        } catch (validationError) {\n            console.error(`Invalid parameters supplied to the query \"${this.queryName}\"\\n`, validationError);\n            throw validationError; // rethrow\n        }\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        let clone = new this.constructor(\n            this.queryName,\n            this.collection,\n            this.isResolver ? this.resolver : deepClone(this.body),\n            {\n                ...this.options,\n                params,\n            }\n        );\n\n        clone.cacher = this.cacher;\n        if (this.exposeConfig) {\n            clone.exposeConfig = this.exposeConfig;\n        }\n\n        return clone;\n    }\n\n    /**\n     * @param {function|object} validator\n     * @param {object} params\n     * @private\n     */\n    _validate(validator, params) {\n        if (_.isFunction(validator)) {\n            validator.call(null, params)\n        } else {\n            check(params, validator)\n        }\n    }\n}\n\nNamedQueryBase.defaultOptions = {};","import CountSubscription from '../query/counts/countSubscription';\nimport createGraph from '../query/lib/createGraph.js';\nimport recursiveFetch from '../query/lib/recursiveFetch.js';\nimport prepareForProcess from '../query/lib/prepareForProcess.js';\nimport {_} from 'meteor/underscore';\nimport callWithPromise from '../query/lib/callWithPromise';\nimport Base from './namedQuery.base';\nimport {LocalCollection} from 'meteor/minimongo';\nimport intersectDeep from '../query/lib/intersectDeep';\n\nexport default class extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            this.params,\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        if (this.isResolver) {\n            throw new Meteor.Error('not-allowed', `You cannot subscribe to a resolver query`);\n        }\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(this.params, callback);\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, this.params);\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', this.params);\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(this.name + '.count', this.params, callback);\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, this.params, callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = this.body;\n        if (this.params.$body) {\n            body = intersectDeep(body, this.params.$body);\n        }\n\n        body = prepareForProcess(body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            undefined, {\n                scoped: this.options.scoped,\n                subscriptionHandle: this.subscriptionHandle\n            });\n    }\n}\n","import NamedQueryClient from './namedQuery.client';\nimport NamedQueryServer from './namedQuery.server';\n\nlet NamedQuery;\n\nif (Meteor.isServer) {\n    NamedQuery = NamedQueryServer;\n} else {\n    NamedQuery = NamedQueryClient;\n}\n\nexport default NamedQuery;","import prepareForProcess from '../query/lib/prepareForProcess.js';\nimport Base from './namedQuery.base';\nimport deepClone from 'lodash.clonedeep';\nimport MemoryResultCacher from './cache/MemoryResultCacher';\nimport intersectDeep from '../query/lib/intersectDeep';\n\nexport default class extends Base {\n    /**\n     * Retrieves the data.\n     * @returns {*}\n     */\n    fetch(context) {\n        this._performSecurityChecks(context, this.params);\n\n        if (this.isResolver) {\n            return this._fetchResolverData(context);\n        } else {\n            body = deepClone(this.body);\n            if (this.params.$body) {\n                body = intersectDeep(body, this.params.$body);\n            }\n            \n            // we must apply emobdyment here\n            this.doEmbodimentIfItApplies(body, this.params);\n\n            const query = this.collection.createQuery(\n                deepClone(body),\n                {\n                    params: deepClone(this.params)\n                }\n            );\n\n            if (this.cacher) {\n                const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n                return this.cacher.fetch(cacheId, {query});\n            }\n\n            return query.fetch();\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     *\n     * @returns {any}\n     */\n    getCount(context) {\n        this._performSecurityChecks(context, this.params);\n\n        const countCursor = this.getCursorForCounting();\n\n        if (this.cacher) {\n            const cacheId = 'count::' + this.cacher.generateQueryId(this.queryName, this.params);\n\n            return this.cacher.fetch(cacheId, {countCursor});\n        }\n\n        return countCursor.count();\n    }\n\n    /**\n     * Returns the cursor for counting\n     * This is most likely used for counts cursor\n     */\n    getCursorForCounting() {\n        let body = deepClone(this.body);\n        this.doEmbodimentIfItApplies(body, this.params);\n        body = prepareForProcess(body, this.params);\n\n        return this.collection.find(body.$filters || {}, {fields: {_id: 1}});\n    }\n\n    /**\n     * @param cacher\n     */\n    cacheResults(cacher) {\n        if (!cacher) {\n            cacher = new MemoryResultCacher();\n        }\n\n        this.cacher = cacher;\n    }\n\n    /**\n     * Configure resolve. This doesn't actually call the resolver, it just sets it\n     * @param fn\n     */\n    resolve(fn) {\n        if (!this.isResolver) {\n            throw new Meteor.Error('invalid-call', `You cannot use resolve() on a non resolver NamedQuery`);\n        }\n\n        this.resolver = fn;\n    }\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _fetchResolverData(context) {\n        const resolver = this.resolver;\n        const self = this;\n        const query = {\n            fetch() {\n                return resolver.call(context, self.params);\n            }\n        };\n\n        if (this.cacher) {\n            const cacheId = this.cacher.generateQueryId(this.queryName, this.params);\n            return this.cacher.fetch(cacheId, {query});\n        }\n\n        return query.fetch();\n    }\n\n    /**\n     * @param context Meteor method/publish context\n     * @param params\n     *\n     * @private\n     */\n    _performSecurityChecks(context, params) {\n        if (context && this.exposeConfig) {\n            this._callFirewall(context, context.userId, params);\n        }\n\n        this.doValidateParams(params);\n    }\n}\n","export default new class {\n    constructor() {\n        this.storage = {};\n    }\n\n    add(key, value) {\n        if (this.storage[key]) {\n            throw new Meteor.Error('invalid-name', `You have previously defined another namedQuery with the same name: \"${key}\". Named Query names should be unique.`);\n        }\n\n        this.storage[key] = value;\n    }\n\n    get(key) {\n        return this.storage[key];\n    }\n\n    getAll() {\n        return this.storage;\n    }\n}","import {EJSON} from 'meteor/ejson';\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class BaseResultCacher {\n    constructor(config = {}) {\n        this.config = config;\n    }\n\n    /**\n     * @param queryName\n     * @param params\n     * @returns {string}\n     */\n    generateQueryId(queryName, params) {\n        return `${queryName}::${EJSON.stringify(params)}`;\n    }\n\n    /**\n     * Dummy function\n     */\n    fetch(cacheId, {query, countCursor}) {\n        throw 'Not implemented';\n    }\n\n    /**\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    static fetchData({query, countCursor}) {\n        if (query) {\n            return query.fetch();\n        } else {\n            return countCursor.count();\n        }\n    }\n}\n","import {Meteor} from 'meteor/meteor';\nimport cloneDeep from 'lodash.clonedeep';\nimport BaseResultCacher from './BaseResultCacher';\n\nconst DEFAULT_TTL = 60000;\n\n/**\n * This is a very basic in-memory result caching functionality\n */\nexport default class MemoryResultCacher extends BaseResultCacher {\n    constructor(config = {}) {\n        super(config);\n        this.store = {};\n    }\n\n    /**\n     * @param cacheId\n     * @param query\n     * @param countCursor\n     * @returns {*}\n     */\n    fetch(cacheId, {query, countCursor}) {\n        const cacheData = this.store[cacheId];\n        if (cacheData !== undefined) {\n            return cloneDeep(cacheData);\n        }\n\n        const data = BaseResultCacher.fetchData({query, countCursor});\n        this.storeData(cacheId, data);\n\n        return data;\n    }\n\n\n    /**\n     * @param cacheId\n     * @param data\n     */\n    storeData(cacheId, data) {\n        const ttl = this.config.ttl || DEFAULT_TTL;\n        this.store[cacheId] = cloneDeep(data);\n\n        Meteor.setTimeout(() => {\n            delete this.store[cacheId];\n        }, ttl)\n    }\n}\n","import NamedQuery from '../namedQuery.js';\nimport { ExposeSchema, ExposeDefaults } from './schema.js';\nimport mergeDeep from './lib/mergeDeep.js';\nimport createGraph from '../../query/lib/createGraph.js';\nimport recursiveCompose from '../../query/lib/recursiveCompose.js';\nimport prepareForProcess from '../../query/lib/prepareForProcess.js';\nimport deepClone from 'lodash.clonedeep';\nimport intersectDeep from '../../query/lib/intersectDeep';\nimport genCountEndpoint from '../../query/counts/genEndpoint.server';\nimport { check } from 'meteor/check';\n\n_.extend(NamedQuery.prototype, {\n    /**\n     * @param config\n     */\n    expose(config = {}) {\n        if (!Meteor.isServer) {\n            throw new Meteor.Error(\n                'invalid-environment',\n                `You must run this in server-side code`\n            );\n        }\n\n        if (this.isExposed) {\n            throw new Meteor.Error(\n                'query-already-exposed',\n                `You have already exposed: \"${this.name}\" named query`\n            );\n        }\n\n        this.exposeConfig = Object.assign({}, ExposeDefaults, config);\n        check(this.exposeConfig, ExposeSchema);\n\n        if (this.exposeConfig.validateParams) {\n            this.options.validateParams = this.exposeConfig.validateParams;\n        }\n\n        if (!this.isResolver) {\n            this._initNormalQuery();\n        } else {\n            this._initMethod();\n        }\n\n        this.isExposed = true;\n    },\n\n    /**\n     * Initializes a normal NamedQuery (normal == not a resolver)\n     * @private\n     */\n    _initNormalQuery() {\n        const config = this.exposeConfig;\n        if (config.method) {\n            this._initMethod();\n        }\n\n        if (config.publication) {\n            this._initPublication();\n        }\n\n        if (!config.method && !config.publication) {\n            throw new Meteor.Error(\n                'weird',\n                'If you want to expose your named query you need to specify at least one of [\"method\", \"publication\"] options to true'\n            );\n        }\n\n        this._initCountMethod();\n        this._initCountPublication();\n    },\n\n    /**\n     * Returns the embodied body of the request\n     * @param {*} _embody\n     * @param {*} body\n     */\n    doEmbodimentIfItApplies(body, params) {\n        // query is not exposed yet, so it doesn't have embodiment logic\n        if (!this.exposeConfig) {\n            return;\n        }\n\n        const { embody } = this.exposeConfig;\n\n        if (!embody) {\n            return;\n        }\n\n        if (_.isFunction(embody)) {\n            embody.call(this, body, params);\n        } else {\n            mergeDeep(body, embody);\n        }\n    },\n\n    /**\n     * @private\n     */\n    _initMethod() {\n        const self = this;\n        Meteor.methods({\n            [this.name](newParams) {\n                self._unblockIfNecessary(this);\n\n                // security is done in the fetching because we provide a context\n                return self.clone(newParams).fetch(this);\n            },\n        });\n    },\n\n    /**\n     * @returns {void}\n     * @private\n     */\n    _initCountMethod() {\n        const self = this;\n\n        Meteor.methods({\n            [this.name + '.count'](newParams) {\n                self._unblockIfNecessary(this);\n\n                // security is done in the fetching because we provide a context\n                return self.clone(newParams).getCount(this);\n            },\n        });\n    },\n\n    /**\n     * @returns {*}\n     * @private\n     */\n    _initCountPublication() {\n        const self = this;\n\n        genCountEndpoint(self.name, {\n            getCursor({ session }) {\n                const query = self.clone(session.params);\n                return query.getCursorForCounting();\n            },\n\n            getSession(params) {\n                self.doValidateParams(params);\n                self._callFirewall(this, this.userId, params);\n\n                return { name: self.name, params, };\n            },\n        });\n    },\n\n    /**\n     * @private\n     */\n    _initPublication() {\n        const self = this;\n\n        Meteor.publishComposite(this.name, function(params = {}) {\n            const isScoped = !!self.options.scoped;\n\n            if (isScoped) {\n                this.enableScope();\n            }\n\n            self._unblockIfNecessary(this);\n            self.doValidateParams(params);\n            self._callFirewall(this, this.userId, params);\n\n            let body = deepClone(self.body);\n            if (params.$body) {\n                body = intersectDeep(body, params.$body);\n            }\n\n            self.doEmbodimentIfItApplies(body, params);\n            body = prepareForProcess(body, params);\n\n            const rootNode = createGraph(self.collection, body);\n\n            return recursiveCompose(rootNode, undefined, {scoped: isScoped});\n        });\n    },\n\n    /**\n     * @param context\n     * @param userId\n     * @param params\n     * @private\n     */\n    _callFirewall(context, userId, params) {\n        const { firewall } = this.exposeConfig;\n        if (!firewall) {\n            return;\n        }\n\n        if (_.isArray(firewall)) {\n            firewall.forEach(fire => {\n                fire.call(context, userId, params);\n            });\n        } else {\n            firewall.call(context, userId, params);\n        }\n    },\n\n    /**\n     * @param context\n     * @private\n     */\n    _unblockIfNecessary(context) {\n        if (this.exposeConfig.unblock) {\n            if (context.unblock) {\n                context.unblock();\n            }\n        }\n    },\n});\n","import {Match} from 'meteor/check';\n\nexport const ExposeDefaults = {\n    publication: true,\n    method: true,\n    unblock: true,\n};\n\nexport const ExposeSchema = {\n    firewall: Match.Maybe(\n        Match.OneOf(Function, [Function])\n    ),\n    publication: Match.Maybe(Boolean),\n    unblock: Match.Maybe(Boolean),\n    method: Match.Maybe(Boolean),\n    embody: Match.Maybe(\n        Match.OneOf(Object, Function)\n    ),\n    validateParams: Match.Maybe(\n        Match.OneOf(Object, Function)\n    )\n};\n","/**\n * Deep merge two objects.\n * @param target\n * @param source\n */\nexport default function mergeDeep(target, source) {\n    if (_.isObject(target) && _.isObject(source)) {\n        _.each(source, (value, key) => {\n            if (_.isFunction(source[key])) {\n                target[key] = source[key];\n            } else if (_.isObject(source[key])) {\n                if (!target[key]) Object.assign(target, { [key]: {} });\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        });\n    }\n\n    return target;\n}","import deepClone from 'lodash.clonedeep';\nimport {check} from 'meteor/check';\n\nexport default class QueryBase {\n    isGlobalQuery = true;\n\n    constructor(collection, body, options = {}) {\n        this.collection = collection;\n\n        this.body = deepClone(body);\n\n        this.params = options.params || {};\n        this.options = options;\n    }\n\n    clone(newParams) {\n        const params = _.extend({}, deepClone(this.params), newParams);\n\n        return new this.constructor(\n            this.collection,\n            deepClone(this.body),\n            {\n                params,\n                ...this.options\n            }\n        );\n    }\n\n    get name() {\n        return `exposure_${this.collection._name}`;\n    }\n\n    /**\n     * Validates the parameters\n     */\n    doValidateParams() {\n        const {validateParams} = this.options;\n        if (!validateParams) return;\n\n        if (_.isFunction(validateParams)) {\n            validateParams.call(null, this.params)\n        } else {\n            check(this.params)\n        }\n    }\n\n    /**\n     * Merges the params with previous params.\n     *\n     * @param params\n     * @returns {Query}\n     */\n    setParams(params) {\n        this.params = _.extend({}, this.params, params);\n\n        return this;\n    }\n}","import { _ } from 'meteor/underscore';\nimport CountSubscription from './counts/countSubscription';\nimport createGraph from './lib/createGraph.js';\nimport recursiveFetch from './lib/recursiveFetch.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport callWithPromise from './lib/callWithPromise';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Subscribe\n     *\n     * @param callback {Function} optional\n     * @returns {null|any|*}\n     */\n    subscribe(callback) {\n        this.doValidateParams();\n\n        this.subscriptionHandle = Meteor.subscribe(\n            this.name,\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n\n        return this.subscriptionHandle;\n    }\n\n    /**\n     * Subscribe to the counts for this query\n     *\n     * @param callback\n     * @returns {Object}\n     */\n    subscribeCount(callback) {\n        this.doValidateParams();\n\n        if (!this._counter) {\n            this._counter = new CountSubscription(this);\n        }\n\n        return this._counter.subscribe(\n            prepareForProcess(this.body, this.params),\n            callback\n        );\n    }\n\n    /**\n     * Unsubscribe if an existing subscription exists\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.subscriptionHandle.stop();\n        }\n\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Unsubscribe to the counts if a subscription exists.\n     */\n    unsubscribeCount() {\n        if (this._counter) {\n            this._counter.unsubscribe();\n            this._counter = null;\n        }\n    }\n\n    /**\n     * Fetches elements in sync using promises\n     * @return {*}\n     */\n    async fetchSync() {\n        this.doValidateParams();\n\n        if (this.subscriptionHandle) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name, prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Fetches one element in sync\n     * @return {*}\n     */\n    async fetchOneSync() {\n        return _.first(await this.fetchSync())\n    }\n\n    /**\n     * Retrieves the data.\n     * @param callbackOrOptions\n     * @returns {*}\n     */\n    fetch(callbackOrOptions) {\n        this.doValidateParams();\n\n        if (!this.subscriptionHandle) {\n            return this._fetchStatic(callbackOrOptions)\n        } else {\n            return this._fetchReactive(callbackOrOptions);\n        }\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        if (!this.subscriptionHandle) {\n            const callback = args[0];\n            if (!_.isFunction(callback)) {\n                throw new Meteor.Error('You did not provide a valid callback');\n            }\n\n            this.fetch((err, res) => {\n                callback(err, res ? _.first(res) : null);\n            })\n        } else {\n            return _.first(this.fetch(...args));\n        }\n    }\n\n    /**\n     * Gets the count of matching elements in sync.\n     * @returns {any}\n     */\n    async getCountSync() {\n        if (this._counter) {\n            throw new Meteor.Error('This query is reactive, meaning you cannot use promises to fetch the data.');\n        }\n\n        return await callWithPromise(this.name + '.count', prepareForProcess(this.body, this.params));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @param callback\n     * @returns {any}\n     */\n    getCount(callback) {\n        if (this._counter) {\n            return this._counter.getCount();\n        } else {\n            if (!callback) {\n                throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the count or subscribe first.');\n            } else {\n                return Meteor.call(\n                    this.name + '.count',\n                    prepareForProcess(this.body, this.params),\n                    callback\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetching non-reactive queries\n     * @param callback\n     * @private\n     */\n    _fetchStatic(callback) {\n        if (!callback) {\n            throw new Meteor.Error('not-allowed', 'You are on client so you must either provide a callback to get the data or subscribe first.');\n        }\n\n        Meteor.call(this.name, prepareForProcess(this.body, this.params), callback);\n    }\n\n    /**\n     * Fetching when we've got an active publication\n     *\n     * @param options\n     * @returns {*}\n     * @private\n     */\n    _fetchReactive(options = {}) {\n        let body = prepareForProcess(this.body, this.params);\n        if (!options.allowSkip && body.$options && body.$options.skip) {\n            delete body.$options.skip;\n        }\n\n        return recursiveFetch(\n            createGraph(this.collection, body),\n            this.params\n        );\n    }\n}\n","import QueryClient from './query.client';\nimport QueryServer from './query.server';\n\nlet Query;\n\nif (Meteor.isServer) {\n    Query = QueryServer;\n} else {\n    Query = QueryClient;\n}\n\nexport default Query;","import createGraph from './lib/createGraph.js';\nimport prepareForProcess from './lib/prepareForProcess.js';\nimport hypernova from './hypernova/hypernova.js';\nimport Base from './query.base';\n\nexport default class Query extends Base {\n    /**\n     * Retrieves the data.\n     * @param context\n     * @returns {*}\n     */\n    fetch(context = {}) {\n        const node = createGraph(\n            this.collection,\n            prepareForProcess(this.body, this.params)\n        );\n\n        return hypernova(node, context.userId, {params: this.params});\n    }\n\n    /**\n     * @param args\n     * @returns {*}\n     */\n    fetchOne(...args) {\n        return _.first(this.fetch(...args));\n    }\n\n    /**\n     * Gets the count of matching elements.\n     * @returns {integer}\n     */\n    getCount() {\n        return this.collection.find(this.body.$filters || {}, {}).count();\n    }\n}","import { Mongo } from 'meteor/mongo';\nimport { COUNTS_COLLECTION_CLIENT } from './constants';\n\n/**\n * Internal collection used to store counts on the client.\n */\nexport default new Mongo.Collection(COUNTS_COLLECTION_CLIENT);\n","export const COUNTS_COLLECTION_CLIENT = 'grapher_counts';\n","import { EJSON } from 'meteor/ejson';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport Counts from './collection';\nimport createFauxSubscription from './createFauxSubscription';\nimport prepareForProcess from '../lib/prepareForProcess.js';\nimport NamedQueryBase from '../../namedQuery/namedQuery.base';\n\nexport default class CountSubscription {\n    /**\n     * @param {*} query - The query to use when fetching counts\n     */\n    constructor(query) {\n        this.accessToken = new ReactiveVar(null);\n        this.fauxHandle = null;\n        this.query = query;\n    }\n\n    /**\n     * Starts a subscription request for reactive counts.\n     *\n     * @param {*} arg - The argument to pass to {name}.count.subscribe\n     * @param {*} callback\n     */\n    subscribe(arg, callback) {\n        // Don't try to resubscribe if arg hasn't changed\n        if (EJSON.equals(this.lastArgs, arg) && this.fauxHandle) {\n            return this.fauxHandle;\n        }\n\n        this.accessToken.set(null);\n        this.lastArgs = arg;\n\n        Meteor.call(this.query.name + '.count.subscribe', arg, (error, token) => {\n            if (!this._markedForUnsubscribe) {\n                this.subscriptionHandle = Meteor.subscribe(this.query.name + '.count', token, callback);\n                this.accessToken.set(token);\n\n                this.disconnectComputation = Tracker.autorun(() => this.handleDisconnect());\n            }\n\n            this._markedForUnsubscribe = false;\n        });\n\n        this.fauxHandle = createFauxSubscription(this);\n        return this.fauxHandle;\n    }\n\n    /**\n     * Unsubscribes from the count endpoint, if there is such a subscription.\n     */\n    unsubscribe() {\n        if (this.subscriptionHandle) {\n            this.disconnectComputation.stop();\n            this.subscriptionHandle.stop();\n        } else {\n            // If we hit this branch, then Meteor.call in subscribe hasn't finished yet\n            // so set a flag to stop the subscription from being created\n            this._markedForUnsubscribe = true;\n        }\n\n        this.accessToken.set(null);\n        this.fauxHandle = null;\n        this.subscriptionHandle = null;\n    }\n\n    /**\n     * Reactively fetch current document count. Returns null if the subscription is not ready yet.\n     *\n     * @returns {Number|null} - Current document count\n     */\n    getCount() {\n        const id = this.accessToken.get();\n        if (id === null) return null;\n\n        const doc = Counts.findOne(id);\n        return doc.count;\n    }\n\n    /**\n     * All session info gets deleted when the server goes down, so when the client attempts to\n     * optimistically resume the '.count' publication, the server will throw a 'no-request' error.\n     *\n     * This function prevents that by manually stopping and restarting the subscription when the\n     * connection to the server is lost.\n     */\n    handleDisconnect() {\n        const status = Meteor.status();\n        if (!status.connected) {\n            this._markedForResume = true;\n            this.fauxHandle = null;\n            this.subscriptionHandle.stop();\n        }\n\n        if (status.connected && this._markedForResume) {\n            this._markedForResume = false;\n            this.subscribe(this.lastArgs);\n        }\n    }\n\n    /**\n     * Returns whether or not a subscription request has been made.\n     */\n    isSubscribed() {\n        return this.accessToken.get() !== null;\n    }\n}\n","/**\n * This method creates a \"fake\" subscription handle so that users of CountSubscription#subscribe\n * have an interface consistent with normal subscriptions.\n *\n * @param {CountSubscription} countManager\n */\nexport default (countManager) => ({\n    ready: () => countManager.accessToken.get() !== null && countManager.subscriptionHandle.ready(),\n    stop: () => countManager.unsubscribe(),\n});\n","import { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n\nimport { COUNTS_COLLECTION_CLIENT } from './constants';\n\n// XXX: Should this persist between server restarts?\nconst collection = new Mongo.Collection(null);\n\n/**\n * This method generates a reactive count endpoint (a method and publication) for a collection or named query.\n *\n * @param {String} name - Name of the query or collection\n * @param {Function} getCursor - Takes in the user's session document as an argument, and turns that into a Mongo cursor.\n * @param {Function} getSession - Takes the subscribe method's argument as its parameter. Should enforce any necessary security constraints. The return value of this function is stored in the session document.\n */\nexport default (name, { getCursor, getSession }) => {\n    Meteor.methods({\n        [name + '.count.subscribe'](paramsOrBody) {\n            const session = getSession.call(this, paramsOrBody);\n            const sessionId = JSON.stringify(session);\n\n            const existingSession = collection.findOne({\n                session: sessionId,\n                userId: this.userId,\n            });\n\n            // Try to reuse sessions if the user subscribes multiple times with the same data\n            if (existingSession) {\n                return existingSession._id;\n            }\n\n            const token = collection.insert({\n                session: sessionId,\n                query: name,\n                userId: this.userId,\n            });\n\n            return token;\n        },\n    });\n\n    Meteor.publish(name + '.count', function(token) {\n        check(token, String);\n        const self = this;\n        const request = collection.findOne({ _id: token, userId: self.userId });\n\n        if (!request) {\n            throw new Error(\n                'no-request',\n                `You must acquire a request token via the \"${name}.count.subscribe\" method first.`\n            );\n        }\n\n        request.session = JSON.parse(request.session);\n        const cursor = getCursor.call(this, request);\n\n        // Start counting\n        let count = 0;\n\n        let isReady = false;\n        const handle = cursor.observe({\n            added() {\n                count++;\n                isReady &&\n                    self.changed(COUNTS_COLLECTION_CLIENT, token, { count });\n            },\n\n            removed() {\n                count--;\n                isReady &&\n                    self.changed(COUNTS_COLLECTION_CLIENT, token, { count });\n            },\n        });\n\n        isReady = true;\n        self.added(COUNTS_COLLECTION_CLIENT, token, { count });\n\n        self.onStop(() => {\n            handle.stop();\n            collection.remove(token);\n        });\n\n        self.ready();\n    });\n};\n","import sift from 'sift';\nimport dot from 'dot-object';\n\nfunction extractIdsFromArray(array, field) {\n    return (array || []).map(obj => _.isObject(obj) ? dot.pick(field, obj) : undefined).filter(v => !!v);\n}\n\n/**\n * Its purpose is to create filters to get the related data in one request.\n */\nexport default class AggregateFilters {\n    constructor(collectionNode, metaFilters) {\n        this.collectionNode = collectionNode;\n        this.linker = collectionNode.linker;\n        this.metaFilters = metaFilters;\n        this.isVirtual = this.linker.isVirtual();\n\n        this.linkStorageField = this.linker.linkStorageField;\n    }\n\n    get parentObjects() {\n        return this.collectionNode.parent.results;\n    }\n\n    create() {\n        switch (this.linker.strategy) {\n            case 'one':\n                return this.createOne();\n            case 'one-meta':\n                return this.createOneMeta();\n            case 'many':\n                return this.createMany();\n            case 'many-meta':\n                return this.createManyMeta();\n            default:\n                throw new Meteor.Error(`Invalid linker type: ${this.linker.type}`);\n        }\n    }\n\n    createOne() {\n        if (!this.isVirtual) {\n            return {\n                _id: {\n                    $in: _.uniq(extractIdsFromArray(this.parentObjects, this.linkStorageField))\n                }\n            };\n        } else {\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.pluck(this.parentObjects, '_id')\n                    )\n                }\n            };\n        }\n    }\n\n    createOneMeta() {\n        if (!this.isVirtual) {\n            let eligibleObjects = this.parentObjects;\n\n            if (this.metaFilters) {\n                eligibleObjects = _.filter(this.parentObjects, object => {\n                    return sift(this.metaFilters)(object[this.linkStorageField]);\n                });\n            }\n\n            const storages = _.pluck(eligibleObjects, this.linkStorageField);\n            let ids = [];\n            _.each(storages, storage => {\n                if (storage) {\n                    ids.push(storage._id);\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[this.linkStorageField + '.' + key] = value;\n                })\n            }\n\n            filters[this.linkStorageField + '._id'] = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return filters;\n        }\n    }\n\n    createMany() {\n        if (!this.isVirtual) {\n            const [root, ...nested] = this.linkStorageField.split('.');\n            const arrayOfIds = _.union(...extractIdsFromArray(this.parentObjects, root));\n            return {\n                _id: {\n                    $in: _.uniq(nested.length > 0 ? extractIdsFromArray(arrayOfIds, nested.join('.')) : arrayOfIds)\n                }\n            };\n        } else {\n            const arrayOfIds = _.pluck(this.parentObjects, '_id');\n            return {\n                [this.linkStorageField]: {\n                    $in: _.uniq(\n                        _.union(...arrayOfIds)\n                    )\n                }\n            };\n        }\n    }\n\n    createManyMeta() {\n        if (!this.isVirtual) {\n            let ids = [];\n\n            _.each(this.parentObjects, object => {\n                if (object[this.linkStorageField]) {\n                    if (this.metaFilters) {\n                        const isValid = sift(this.metaFilters);\n                        _.each(object[this.linkStorageField], object => {\n                            if (isValid(object)) {\n                                ids.push(object._id);\n                            }\n                        });\n                    } else {\n                        _.each(object[this.linkStorageField], object => {\n                            ids.push(object._id);\n                        });\n                    }\n                }\n            });\n\n            return {\n                _id: {$in: _.uniq(ids)}\n            };\n        } else {\n            let filters = {};\n            if (this.metaFilters) {\n                _.each(this.metaFilters, (value, key) => {\n                    filters[key] = value;\n                })\n            }\n\n            filters._id = {\n                $in: _.uniq(\n                    _.pluck(this.parentObjects, '_id')\n                )\n            };\n\n            return {\n                [this.linkStorageField]: {\n                    $elemMatch: filters\n                }\n            };\n        }\n    }\n}","import sift from 'sift';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\n\n/**\n * This only applies to inversed links. It will assemble the data in a correct manner.\n */\nexport default function(childCollectionNode, aggregateResults, metaFilters) {\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const linkName = childCollectionNode.linkName;\n    const isMeta = linker.isMeta();\n    const isMany = linker.isMany();\n\n    let allResults = [];\n\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(childCollectionNode.parent.results, parentResult => {\n            cleanObjectForMetaFilters(\n                parentResult,\n                linkStorageField,\n                metaFiltersTest\n            );\n        });\n    }\n\n    if (isMeta && isMany) {\n        // This case is treated differently because we get an array response from the pipeline.\n\n        _.each(childCollectionNode.parent.results, parentResult => {\n            parentResult[linkName] = parentResult[linkName] || [];\n\n            const eligibleAggregateResults = _.filter(\n                aggregateResults,\n                aggregateResult => {\n                    return _.contains(aggregateResult._id, parentResult._id);\n                }\n            );\n\n            if (eligibleAggregateResults.length) {\n                const datas = _.pluck(eligibleAggregateResults, 'data'); /// [ [x1, x2], [x2, x3] ]\n\n                _.each(datas, data => {\n                    _.each(data, item => {\n                        parentResult[linkName].push(item);\n                    });\n                });\n            }\n        });\n\n        _.each(aggregateResults, aggregateResult => {\n            _.each(aggregateResult.data, item => allResults.push(item));\n        });\n    } else {\n        let comparator;\n        if (isMany) {\n            comparator = (aggregateResult, result) =>\n                _.contains(aggregateResult._id, result._id);\n        } else {\n            comparator = (aggregateResult, result) =>\n                aggregateResult._id == result._id;\n        }\n\n        const childLinkName = childCollectionNode.linkName;\n        const parentResults = childCollectionNode.parent.results;\n\n        parentResults.forEach(parentResult => {\n            // We are now finding the data from the pipeline that is related to the _id of the parent\n            const eligibleAggregateResults = aggregateResults.filter(\n                aggregateResult => comparator(aggregateResult, parentResult)\n            );\n\n            eligibleAggregateResults.forEach(aggregateResult => {\n                if (Array.isArray(parentResult[childLinkName])) {\n                    parentResult[childLinkName].push(...aggregateResult.data);\n                } else {\n                    parentResult[childLinkName] = [...aggregateResult.data];\n                }\n            });\n        });\n\n        aggregateResults.forEach(aggregateResult => {\n            allResults.push(...aggregateResult.data);\n        });\n    }\n\n    childCollectionNode.results = allResults;\n}\n","import createSearchFilters from '../../links/lib/createSearchFilters';\nimport cleanObjectForMetaFilters from './lib/cleanObjectForMetaFilters';\nimport sift from 'sift';\nimport dot from 'dot-object';\n\nexport default (childCollectionNode, { limit, skip, metaFilters }) => {\n    if (childCollectionNode.results.length === 0) {\n        return;\n    }\n\n    const parent = childCollectionNode.parent;\n    const linker = childCollectionNode.linker;\n\n    const strategy = linker.strategy;\n    const isSingle = linker.isSingle();\n    const isMeta = linker.isMeta();\n    const fieldStorage = linker.linkStorageField;\n\n    // cleaning the parent results from a child\n    // this may be the wrong approach but it works for now\n    if (isMeta && metaFilters) {\n        const metaFiltersTest = sift(metaFilters);\n        _.each(parent.results, parentResult => {\n            cleanObjectForMetaFilters(\n                parentResult,\n                fieldStorage,\n                metaFiltersTest\n            );\n        });\n    }\n\n    const resultsByKeyId = _.groupBy(childCollectionNode.results, '_id');\n\n    if (strategy === 'one') {\n        parent.results.forEach(parentResult => {\n            const value = dot.pick(fieldStorage, parentResult);\n            if (!value) {\n                return;\n            }\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                resultsByKeyId[value],\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'many') {\n        parent.results.forEach(parentResult => {\n            // support dotted fields\n            const [root, ...nested] = fieldStorage.split('.');\n            const value = dot.pick(root, parentResult);\n            if (!value) {\n                return;\n            }\n\n\n            const data = [];\n            value.forEach(v => {\n                const _id = nested.length > 0 ? dot.pick(nested.join('.'), v) : v;\n                data.push(_.first(resultsByKeyId[_id]));\n            });\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                data,\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'one-meta') {\n        parent.results.forEach(parentResult => {\n            if (!parentResult[fieldStorage]) {\n                return;\n            }\n\n            const _id = parentResult[fieldStorage]._id;\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                resultsByKeyId[_id],\n                { limit, skip }\n            );\n        });\n    }\n\n    if (strategy === 'many-meta') {\n        parent.results.forEach(parentResult => {\n            const _ids = _.pluck(parentResult[fieldStorage], '_id');\n            let data = [];\n            _ids.forEach(_id => {\n                data.push(_.first(resultsByKeyId[_id]));\n            });\n\n            parentResult[childCollectionNode.linkName] = filterAssembledData(\n                data,\n                { limit, skip }\n            );\n        });\n    }\n};\n\nfunction filterAssembledData(data, { limit, skip }) {\n    if (limit && Array.isArray(data)) {\n        return data.slice(skip, limit);\n    }\n\n    return data;\n}\n","import { _ } from 'meteor/underscore';\nimport {SAFE_DOTTED_FIELD_REPLACEMENT} from './constants';\n\nexport default function (childCollectionNode, filters, options, userId) {\n    let containsDottedFields = false;\n    const linker = childCollectionNode.linker;\n    const linkStorageField = linker.linkStorageField;\n    const collection = childCollectionNode.collection;\n\n    let pipeline = [];\n\n    if (collection.firewall) {\n        collection.firewall(filters, options, userId);\n    }\n\n    filters = cleanUndefinedLeafs(filters);\n\n    pipeline.push({$match: filters});\n\n    if (options.sort && _.keys(options.sort).length > 0) {\n        pipeline.push({$sort: options.sort})\n    }\n\n    let _id = linkStorageField;\n    if (linker.isMeta()) {\n        _id += '._id';\n    }\n\n    let dataPush = {\n        _id: '$_id'\n    };\n\n    _.each(options.fields, (value, field) => {\n        if (field.indexOf('.') >= 0) {\n            containsDottedFields = true;\n        }\n        const safeField = field.replace(/\\./g, SAFE_DOTTED_FIELD_REPLACEMENT);\n        dataPush[safeField] = '$' + field\n    });\n\n    if (linker.isMeta()) {\n        dataPush[linkStorageField] = '$' + linkStorageField;\n    }\n\n    pipeline.push({\n        $group: {\n            _id: \"$\" + _id,\n            data: {\n                $push: dataPush\n            }\n        }\n    });\n\n    if (options.limit || options.skip) {\n        let $slice = [\"$data\"];\n        if (options.skip) $slice.push(options.skip);\n        if (options.limit) $slice.push(options.limit);\n\n        pipeline.push({\n            $project: {\n                _id: 1,\n                data: {$slice}\n            }\n        })\n    }\n\n    function cleanUndefinedLeafs(tree) {\n        const a = Object.assign({}, tree);\n        _.each(a, (value, key) => {\n            if (value === undefined) {\n                delete a[key];\n            }\n\n            if (!_.isArray(value) && _.isObject(value)) {\n                a[key] = cleanUndefinedLeafs(value);\n            }\n        })\n\n        return a;\n    }\n\n    return {pipeline, containsDottedFields};\n}","export const SAFE_DOTTED_FIELD_REPLACEMENT = '___';","import applyProps from '../lib/applyProps.js';\nimport prepareForDelivery from '../lib/prepareForDelivery.js';\nimport storeHypernovaResults from './storeHypernovaResults.js';\n\nfunction hypernova(collectionNode, userId) {\n    _.each(collectionNode.collectionNodes, childCollectionNode => {\n        let {filters, options} = applyProps(childCollectionNode);\n\n        storeHypernovaResults(childCollectionNode, userId);\n        hypernova(childCollectionNode, userId);\n    });\n}\n\nexport default function hypernovaInit(collectionNode, userId, config = {}) {\n    const bypassFirewalls = config.bypassFirewalls || false;\n    const params = config.params || {};\n\n    let {filters, options} = applyProps(collectionNode);\n\n    const collection = collectionNode.collection;\n\n    collectionNode.results = collection.find(filters, options, userId).fetch();\n\n    const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\n    hypernova(collectionNode, userIdToPass);\n\n    prepareForDelivery(collectionNode, params);\n\n    return collectionNode.results;\n}\n","import applyProps from '../lib/applyProps.js';\nimport AggregateFilters from './aggregateSearchFilters.js';\nimport assemble from './assembler.js';\nimport assembleAggregateResults from './assembleAggregateResults.js';\nimport buildAggregatePipeline from './buildAggregatePipeline.js';\nimport snapBackDottedFields from './lib/snapBackDottedFields';\n\nexport default function storeHypernovaResults(childCollectionNode, userId) {\n    if (childCollectionNode.parent.results.length === 0) {\n        return (childCollectionNode.results = []);\n    }\n\n    let { filters, options } = applyProps(childCollectionNode);\n\n    const metaFilters = filters.$meta;\n    const aggregateFilters = new AggregateFilters(\n        childCollectionNode,\n        metaFilters\n    );\n    delete filters.$meta;\n\n    const linker = childCollectionNode.linker;\n    const isVirtual = linker.isVirtual();\n    const collection = childCollectionNode.collection;\n\n\n    _.extend(filters, aggregateFilters.create());\n\n    // if it's not virtual then we retrieve them and assemble them here.\n    if (!isVirtual) {\n        const filteredOptions = _.omit(options, 'limit');\n\n        childCollectionNode.results = collection\n            .find(filters, filteredOptions, userId)\n            .fetch();\n\n        assemble(childCollectionNode, {\n            ...options,\n            metaFilters,\n        });\n    } else {\n        // virtuals arrive here\n        let { pipeline, containsDottedFields } = buildAggregatePipeline(\n            childCollectionNode,\n            filters,\n            options,\n            userId\n        );\n\n        let aggregateResults = collection.aggregate(pipeline);\n\n        /**\n         * If in aggregation it contains '.', we replace it with a custom string '___'\n         * And then after aggregation is complete we need to snap-it back to how it was.\n         */\n        if (containsDottedFields) {\n            snapBackDottedFields(aggregateResults);\n        }\n\n        assembleAggregateResults(\n            childCollectionNode,\n            aggregateResults,\n            metaFilters\n        );\n    }\n}\n","export default function (object, field, metaFiltersTest) {\n    if (object[field]) {\n        if (_.isArray(object[field])) {\n            object[field] = object[field].filter(metaFiltersTest)\n        } else {\n            if (!metaFiltersTest(object[field])) {\n                object[field] = null;\n            }\n        }\n    }\n}","import {SAFE_DOTTED_FIELD_REPLACEMENT} from '../constants';\nimport dot from 'dot-object';\n\nexport default function (aggregationResult) {\n    aggregationResult.forEach(result => {\n        result.data = result.data.map(document => {\n            _.each(document, (value, key) => {\n                if (key.indexOf(SAFE_DOTTED_FIELD_REPLACEMENT) >= 0) {\n                    document[key.replace(new RegExp(SAFE_DOTTED_FIELD_REPLACEMENT, 'g'), '.')] = value;\n                    delete document[key];\n                }\n            });\n\n            return dot.object(document);\n        })\n    })\n}","const restrictOptions = [\n    'disableOplog',\n    'pollingIntervalMs',\n    'pollingThrottleMs'\n];\n\nexport default function applyProps(node) {\n    let filters = Object.assign({}, node.props.$filters);\n    let options = Object.assign({}, node.props.$options);\n\n    options = _.omit(options, ...restrictOptions);\n    options.fields = options.fields || {};\n\n    node.applyFields(filters, options);\n    \n    return {filters, options};\n}\n","export default (method, myParameters) => {\n    return new Promise((resolve, reject) => {\n        Meteor.call(method, myParameters, (err, res) => {\n            if (err) reject(err.reason || 'Something went wrong.');\n\n            resolve(res);\n        });\n    });\n};","import CollectionNode from '../nodes/collectionNode.js';\nimport FieldNode from '../nodes/fieldNode.js';\nimport ReducerNode from '../nodes/reducerNode.js';\nimport dotize from './dotize.js';\nimport createReducers from '../reducers/lib/createReducers';\n\nexport const specialFields = [\n    '$filters',\n    '$options',\n    '$postFilters',\n    '$postOptions',\n    '$postFilter'\n];\n\n/**\n * Creates node objects from the body. The root is always a collection node.\n *\n * @param root\n */\nexport function createNodes(root) {\n    // this is a fix for phantomjs tests (don't really understand it.)\n    if (!_.isObject(root.body)) {\n        return;\n    }\n\n    _.each(root.body, (body, fieldName) => {\n        if (!body) {\n            return;\n        }\n\n        // if it's a prop\n        if (_.contains(specialFields, fieldName)) {\n            root.addProp(fieldName, body);\n\n            return;\n        }\n\n        // workaround, see https://github.com/cult-of-coders/grapher/issues/134\n        // TODO: find another way to do this\n        if (root.collection.default) {\n          root.collection = root.collection.default;\n        }\n\n        // checking if it is a link.\n        let linker = root.collection.getLinker(fieldName);\n\n        if (linker) {\n            // check if it is a cached link\n            // if yes, then we need to explicitly define this at collection level\n            // so when we transform the data for delivery, we move it to the link name\n            if (linker.isDenormalized()) {\n                if (linker.isSubBodyDenormalized(body)) {\n                    handleDenormalized(root, linker, body, fieldName);\n                    return;\n                }\n            }\n\n            let subroot = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n            // must be before adding linker because _shouldCleanStorage method\n            createNodes(subroot);\n            root.add(subroot, linker);\n\n            return;\n        }\n\n        // checking if it's a reducer\n        const reducer = root.collection.getReducer(fieldName);\n\n        if (reducer) {\n            let reducerNode = new ReducerNode(fieldName, reducer);\n            root.add(reducerNode);\n        }\n\n        // it's most likely a field then\n        addFieldNode(body, fieldName, root);\n    });\n\n    createReducers(root);\n\n    if (root.fieldNodes.length === 0) {\n        root.add(new FieldNode('_id', 1));\n    }\n}\n\nfunction isProjectionOperatorExpression(body) {\n    if (_.isObject(body)) {\n        const keys = _.keys(body);\n        return keys.length === 1 && _.contains(['$elemMatch', '$meta', '$slice'], keys[0]);\n    }\n    return false;\n}\n\n/**\n * @param body\n * @param fieldName\n * @param root\n */\nexport function addFieldNode(body, fieldName, root) {\n    // it's not a link and not a special variable => we assume it's a field\n    if (_.isObject(body)) {\n        if (!isProjectionOperatorExpression(body)) {\n            let dotted = dotize.convert({[fieldName]: body});\n            _.each(dotted, (value, key) => {\n                root.add(new FieldNode(key, value));\n            });\n        }\n        else {\n            root.add(new FieldNode(fieldName, body, true));\n        }\n    } else {\n        let fieldNode = new FieldNode(fieldName, body);\n        root.add(fieldNode);\n    }\n}\n\n/**\n * Returns namespace for node when using query path scoping.\n *\n * @param node\n * @returns {String}\n */\nexport function getNodeNamespace(node) {\n    const parts = [];\n    let n = node;\n    while (n) {\n        const name = n.linker ? n.linker.linkName : n.collection._name;\n        parts.push(name);\n        // console.log('linker', node.linker ? node.linker.linkName : node.collection._name);\n        n = n.parent;\n    }\n    return parts.reverse().join('_');\n}\n\n/**\n * @param collection\n * @param body\n * @returns {CollectionNode}\n */\nexport default function (collection, body) {\n    let root = new CollectionNode(collection, body);\n    createNodes(root);\n\n    return root;\n};\n\n/**\n * Ads denormalization config properly, including _id\n *\n * @param root\n * @param linker\n * @param body\n * @param fieldName\n */\nfunction handleDenormalized(root, linker, body, fieldName) {\n    Object.assign(body, {_id: 1});\n\n    const cacheField = linker.linkConfig.denormalize.field;\n    root.snapCache(cacheField, fieldName);\n\n    // if it's one and direct also include the link storage\n    if (!linker.isMany() && !linker.isVirtual()) {\n        addFieldNode(1, linker.linkStorageField, root);\n    }\n\n    addFieldNode(body, cacheField, root);\n}","// https://github.com/vardars/dotize\nexport default dotize = {};\n\ndotize.convert = function(obj, prefix) {\n    if ((!obj || typeof obj != \"object\") && !Array.isArray(obj)) {\n        if (prefix) {\n            var newObj = {};\n            newObj[prefix] = obj;\n            return newObj;\n        } else {\n            return obj;\n        }\n    }\n\n    var newObj = {};\n\n    function recurse(o, p, isArrayItem) {\n        for (var f in o) {\n            if (o[f] && typeof o[f] === \"object\") {\n                if (Array.isArray(o[f])) {\n                    if (isEmptyArray(o[f])) {\n                        newObj[getFieldName(f, p, true)] = o[f]; // empty array\n                    } else {\n                        newObj = recurse(o[f], getFieldName(f, p, false, true), true); // array\n                    }\n                } else {\n                    if (isArrayItem) {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p, true)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p, true)); // array item object\n                        }\n                    } else {\n                        if (isEmptyObj(o[f])) {\n                            newObj[getFieldName(f, p)] = o[f]; // empty object\n                        } else {\n                            newObj = recurse(o[f], getFieldName(f, p)); // object\n                        }\n                    }\n                }\n            } else {\n                if (isArrayItem || isNumber(f)) {\n                    newObj[getFieldName(f, p, true)] = o[f]; // array item primitive\n                } else {\n                    newObj[getFieldName(f, p)] = o[f]; // primitive\n                }\n            }\n        }\n\n        if (isEmptyObj(newObj))\n            return obj;\n\n        return newObj;\n    }\n\n    function isNumber(f) {\n        return !isNaN(parseInt(f));\n    }\n\n    function isEmptyObj(obj) {\n        for (var prop in obj) {\n            if (Object.hasOwnProperty.call(obj, prop))\n                return false;\n        }\n\n        return true;\n    }\n\n    function isEmptyArray(o) {\n        if (Array.isArray(o) && o.length == 0)\n            return true;\n        return false;\n    }\n\n    function getFieldName(field, prefix, isArrayItem, isArray) {\n        if (isArray)\n            return (prefix ? prefix : \"\") + (isNumber(field) ? \"[\" + field + \"]\" : \".\" + field);\n        else if (isArrayItem)\n            return (prefix ? prefix : \"\") + \"[\" + field + \"]\";\n        else\n            return (prefix ? prefix + \".\" : \"\") + field;\n    }\n\n    return recurse(obj, prefix, Array.isArray(obj));\n};","/**\n * Helper method which expands profile.phone.verified into\n * ['profile', 'profile.phone', 'profile.phone.verified']\n * @param fieldName\n */\nexport function expandField(fieldName) {\n    const parts = fieldName.split('.');\n    const result = [];\n\n    for (let i = 0; i < parts.length; i++) {\n        result.push(parts.slice(0, i + 1).join('.'));\n    }\n\n    return result;\n}\n\nexport function isFieldInProjection(projection, fieldName, checkNested) {\n    // for checkNested flag expand the field\n    const fields = checkNested ? expandField(fieldName) : [fieldName];\n    return fields.some(field => projection[field]);\n}\n","import {_} from 'meteor/underscore';\nimport {specialFields} from './createGraph';\n\nconst EXTENDED_SPECIAL_FIELDS = [...specialFields, '$filter', '$paginate'];\n\nfunction isClientValueValid(value) {\n    if (_.isObject(value) && !_.isArray(value)) {\n        return _.values(value).every(nestedValue => isClientValueValid(nestedValue));\n    }\n    else if (value === 1) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * \n * Recursive function which intersects the fields of the body objects.\n * \n * @param {object} allowed allowed body object - intersection can only be a subset of it\n * @param {object} client client body - can shrink main body, but not expand\n */\nfunction intersectFields(allowed, client) {\n    const intersection = {};\n    _.pairs(client).forEach(([field, clientValue]) => {\n        if (_.contains(EXTENDED_SPECIAL_FIELDS, field)) {\n            return;\n        }\n\n        const serverValue = allowed[field];\n        if (serverValue === 1) { // server allows everything\n            if (isClientValueValid(clientValue)) {\n                intersection[field] = clientValue;\n            }\n        }\n        else if (_.isObject(serverValue)) {\n            if (_.isObject(clientValue) && !_.isArray(clientValue)) {\n                intersection[field] = intersectFields(serverValue, clientValue);\n            }\n            else if (clientValue === 1) {\n                // if client wants everything, serverValue is more restrictive here\n                intersection[field] = serverValue;\n            }\n        }\n    });\n    return intersection;\n}\n\n/**\n * Given a named query that has a specific body, you can query its subbody\n * This performs an intersection of the bodies allowed in each\n *\n * @param allowedBody\n * @param clientBody\n */\nexport default function (allowedBody, clientBody) {\n    const build = intersectFields(allowedBody, clientBody);\n    // Add back special fields to the new body\n    Object.assign(build, _.pick(allowedBody, ...EXTENDED_SPECIAL_FIELDS));\n    return build;\n}\n","// 1. Clone children with meta relationships\n// 2. Apply $metadata to children\n// 3. Removes link storage (if not specified)\n// 4. Stores oneResult links as a single object instead of array\nimport applyReducers from '../reducers/lib/applyReducers';\nimport cleanReducerLeftovers from '../reducers/lib/cleanReducerLeftovers';\nimport sift from 'sift';\nimport dot from 'dot-object';\nimport {Minimongo} from 'meteor/minimongo';\n\nexport default (node, params) => {\n    snapBackCaches(node);\n    storeOneResults(node, node.results);\n\n    applyReducers(node, params);\n\n    _.each(node.collectionNodes, collectionNode => {\n        cloneMetaChildren(collectionNode, node.results)\n    });\n\n    _.each(node.collectionNodes, collectionNode => {\n        assembleMetadata(collectionNode, node.results)\n    });\n\n    cleanReducerLeftovers(node, node.results);\n\n    removeLinkStorages(node, node.results);\n\n    applyPostFilters(node);\n    applyPostOptions(node);\n    applyPostFilter(node, params);\n}\n\nexport function applyPostFilters(node) {\n    const postFilters = node.props.$postFilters;\n    if (postFilters) {\n        node.results = sift(postFilters, node.results);\n    }\n}\n\nexport function applyPostOptions(node) {\n    const options = node.props.$postOptions;\n    if (options) {\n        if (options.sort) {\n            const sorter = new Minimongo.Sorter(options.sort);\n            node.results.sort(sorter.getComparator());\n        }\n        if (options.limit || options.skip) {\n            const start = options.skip || 0;\n            const end = options.limit ? options.limit + start : node.results.length;\n            node.results = node.results.slice(start, end);\n        }\n    }\n}\n\n\n/**\n * Optionally applies a post filtering option\n */\nfunction applyPostFilter(node, params) {\n    if (node.props.$postFilter) {\n        const filter = node.props.$postFilter;\n\n        if (_.isArray(filter)) {\n            filter.forEach(f => {\n                node.results = f(node.results, params);\n            })\n        } else {\n            node.results = filter(node.results, params);\n        }\n    }\n}\n\n/**\n *\n * Helper function which transforms results into the array.\n * Results are an object for 'one' links.\n *\n * @param results\n * @return array\n */\nexport function getResultsArray(results) {\n    if (_.isArray(results)) {\n        return results;\n    }\n    else if (_.isUndefined(results)) {\n        return [];\n    }\n    return [results];\n}\n\nexport function removeLinkStorages(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    sameLevelResults = getResultsArray(sameLevelResults);\n\n    _.each(node.collectionNodes, collectionNode => {\n        const removeStorageField = collectionNode.shouldCleanStorage;\n        _.each(sameLevelResults, result => {\n            if (removeStorageField) {\n                const isSingle = collectionNode.linker.isSingle();\n                const [root, ...nested] = collectionNode.linkStorageField.split('.');\n\n                const removeFromResult = (result, removeEmptyRoot = false) => {\n                    if (isSingle) {\n                        dot.pick(collectionNode.linkStorageField, result, true);\n                        if (removeEmptyRoot && nested.length > 0 && _.isEmpty(result[root])) {\n                            delete result[root];\n                        }\n                    }\n                    else {\n                        if (nested.length > 0) {\n                            const arr = result[root] || [];\n                            if (_.isArray(arr)) {\n                                arr.forEach(obj => dot.pick(nested.join('.'), obj, true));\n                                if (removeEmptyRoot && nested.length > 0 && arr.every(obj => _.isEmpty(obj))) {\n                                    delete result[root];\n                                }\n                            }\n                        }\n                        else {\n                            delete result[collectionNode.linkStorageField];\n                        }\n                    }\n                };\n\n                if (collectionNode.isVirtual) {\n                    const childResults = getResultsArray(result[collectionNode.linkName]);\n                    _.each(childResults, childResult => {\n                        removeFromResult(childResult);\n                    });\n                } else {\n                    removeFromResult(result);\n                }\n            }\n\n            removeLinkStorages(collectionNode, result[collectionNode.linkName]);\n        })\n    })\n}\n\nexport function storeOneResults(node, sameLevelResults) {\n    if (!sameLevelResults) {\n        return;\n    }\n\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(sameLevelResults, result => {\n            // The reason we are doing this is that if the requested link does not exist\n            // It will fail when we try to get undefined[something] below\n            if (result === undefined) {\n                return;\n            }\n\n            storeOneResults(collectionNode, result[collectionNode.linkName]);\n        });\n\n        if (collectionNode.isOneResult) {\n            _.each(sameLevelResults, result => {\n                if (result[collectionNode.linkName] && _.isArray(result[collectionNode.linkName])) {\n                    result[collectionNode.linkName] = result[collectionNode.linkName]\n                        ? _.first(result[collectionNode.linkName])\n                        : undefined;\n                }\n            })\n        }\n    })\n}\n\nfunction cloneMetaChildren(node, parentResults) {\n    if (!parentResults) {\n        return;\n    }\n\n    const linkName = node.linkName;\n    const isMeta = node.isMeta;\n\n    // parentResults might be an object (for type==one links)\n    parentResults = getResultsArray(parentResults);\n\n    parentResults.forEach(parentResult => {\n        if (isMeta && parentResult[linkName]) {\n            if (node.isOneResult) {\n                parentResult[linkName] = Object.assign({}, parentResult[linkName]);\n            }\n            else {\n                parentResult[linkName] = parentResult[linkName].map(object => {\n                    return Object.assign({}, object);\n                });\n            }\n        }\n\n        node.collectionNodes.forEach(collectionNode => {\n            cloneMetaChildren(collectionNode, parentResult[linkName]);\n        });\n    });\n}\n\nexport function assembleMetadata(node, parentResults) {\n    parentResults = getResultsArray(parentResults);\n\n    // assembling metadata is depth first\n    node.collectionNodes.forEach(collectionNode => {\n        _.each(parentResults, result => {\n            assembleMetadata(collectionNode, result[node.linkName])\n        });\n    });\n\n    if (node.isMeta) {\n        if (node.isVirtual) {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n\n                if (node.isOneResult) {\n                    if (_.isObject(childResult)) {\n                        const storage = childResult[node.linkStorageField];\n                        storeMetadata(childResult, parentResult, storage, true);\n                    }\n                } else {\n                    _.each(childResult, object => {\n                        const storage = object[node.linkStorageField];\n                        storeMetadata(object, parentResult, storage, true);\n                    });\n                }\n            })\n        } else {\n            _.each(parentResults, parentResult => {\n                const childResult = parentResult[node.linkName];\n                const storage = parentResult[node.linkStorageField];\n\n                if (node.isOneResult) {\n                    if (childResult) {\n                        storeMetadata(childResult, parentResult, storage, false);\n                    }\n                } else {\n                    _.each(childResult, object => {\n                        storeMetadata(object, parentResult, storage, false);\n                    });\n                }\n            })\n        }\n    }\n}\n\nfunction storeMetadata(element, parentElement, storage, isVirtual) {\n    if (isVirtual) {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == parentElement._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id')\n    } else {\n        let $metadata;\n        if (_.isArray(storage)) {\n            $metadata = _.find(storage, storageItem => storageItem._id == element._id);\n        } else {\n            $metadata = storage;\n        }\n\n        element.$metadata = _.omit($metadata, '_id');\n    }\n}\n\nfunction snapBackCaches(node) {\n    node.collectionNodes.forEach(collectionNode => {\n        snapBackCaches(collectionNode);\n    });\n\n    if (!_.isEmpty(node.snapCaches)) {\n        // process stuff\n        _.each(node.snapCaches, (linkName, cacheField) => {\n            const isSingle = _.contains(node.snapCachesSingles, cacheField);\n            const linker = node.collection.getLinker(linkName);\n            // we do this because for one direct and one meta direct, id is not stored\n            const shoudStoreLinkStorage = !linker.isMany() && !linker.isVirtual();\n\n            node.results.forEach(result => {\n                if (result[cacheField]) {\n                    if (shoudStoreLinkStorage) {\n                        Object.assign(result[cacheField], {\n                            _id: linker.isMeta()\n                                ? result[linker.linkStorageField]._id\n                                : result[linker.linkStorageField]\n                        });\n                    }\n\n                    if (isSingle && _.isArray(result[cacheField])) {\n                        result[linkName] = _.first(result[cacheField]);\n                    } else {\n                        result[linkName] = result[cacheField];\n                    }\n\n                    delete result[cacheField];\n                }\n            })\n        })\n    }\n}\n","import {check, Match} from 'meteor/check';\nimport deepClone from 'lodash.clonedeep';\n\nfunction defaultFilterFunction({\n    filters,\n    options,\n    params\n}) {\n    if (params.filters) {\n        Object.assign(filters, params.filters);\n    }\n    if (params.options) {\n        Object.assign(options, params.options);\n    }\n}\n\nfunction applyFilterRecursive(data, params = {}, isRoot = false) {\n    if (isRoot && !_.isFunction(data.$filter)) {\n        data.$filter = defaultFilterFunction;\n    }\n\n    if (data.$filter) {\n        check(data.$filter, Match.OneOf(Function, [Function]));\n\n        data.$filters = data.$filters || {};\n        data.$options = data.$options || {};\n\n        if (_.isArray(data.$filter)) {\n            data.$filter.forEach(filter => {\n                filter.call(null, {\n                    filters: data.$filters,\n                    options: data.$options,\n                    params: params\n                })\n            });\n        } else {\n            data.$filter({\n                filters: data.$filters,\n                options: data.$options,\n                params: params\n            });\n        }\n\n        data.$filter = null;\n        delete(data.$filter);\n    }\n\n    _.each(data, (value, key) => {\n        if (_.isObject(value)) {\n            return applyFilterRecursive(value, params);\n        }\n    })\n}\n\nfunction applyPagination(body, _params) {\n    if (body['$paginate'] && _params) {\n        if (!body.$options) {\n            body.$options = {};\n        }\n\n        if (_params.limit) {\n            _.extend(body.$options, {\n                limit: _params.limit\n            })\n        }\n\n        if (_params.skip) {\n            _.extend(body.$options, {\n                skip: _params.skip\n            })\n        }\n\n        delete body['$paginate'];\n    }\n}\n\nexport default (_body, _params = {}) => {\n    let body = deepClone(_body);\n    let params = deepClone(_params);\n\n    applyPagination(body, params);\n    applyFilterRecursive(body, params, true);\n\n    return body;\n}\n","import applyProps from './applyProps.js';\nimport {getNodeNamespace} from './createGraph';\nimport {isFieldInProjection} from './fieldInProjection';\n\n/**\n * Adds _query_path fields to the cursor docs which are used for scoped query filtering on the client.\n * \n * @param cursor \n * @param ns \n */\nfunction patchCursor(cursor, ns) {\n    const originalObserve = cursor.observe;\n    cursor.observe = function (callbacks) {\n        const newCallbacks = Object.assign({}, callbacks);\n        if (callbacks.added) {\n            newCallbacks.added = doc => {\n                doc = _.clone(doc);\n                doc[`_query_path_${ns}`] = 1;\n                callbacks.added(doc);\n            };\n        }\n        return originalObserve.call(cursor, newCallbacks);\n    };\n}\n\nfunction compose(node, userId, config) {\n    return {\n        find(parent) {\n            if (parent) {\n                let {filters, options} = applyProps(node);\n\n                // composition\n                let linker = node.linker;\n                let accessor = linker.createLink(parent);\n\n                // the rule is this, if a child I want to fetch is virtual, then I want to fetch the link storage of those fields\n                if (linker.isVirtual()) {\n                    options.fields = options.fields || {};\n                    if (!isFieldInProjection(options.fields, linker.linkStorageField, true)) {\n                        _.extend(options.fields, {\n                            [linker.linkStorageField]: 1\n                        });\n                    }\n                }\n\n                const cursor = accessor.find(filters, options, userId);\n                if (config.scoped) {\n                    patchCursor(cursor, getNodeNamespace(node));\n                }\n                return cursor;\n            }\n        },\n\n        children: _.map(node.collectionNodes, n => compose(n, userId, config))\n    }\n}\n\nexport default (node, userId, config = {bypassFirewalls: false, scoped: false}) => {\n    return {\n        find() {\n            let {filters, options} = applyProps(node);\n\n            const cursor = node.collection.find(filters, options, userId);\n            if (config.scoped) {\n                patchCursor(cursor, getNodeNamespace(node));\n            }\n            return cursor;\n        },\n\n        children: _.map(node.collectionNodes, n => {\n            const userIdToPass = (config.bypassFirewalls) ? undefined : userId;\n\n            return compose(n, userIdToPass, config);\n        })\n    }\n}\n","import applyProps from './applyProps.js';\nimport { assembleMetadata, removeLinkStorages, storeOneResults } from './prepareForDelivery';\nimport prepareForDelivery from './prepareForDelivery';\nimport {getNodeNamespace} from './createGraph';\nimport {isFieldInProjection} from '../lib/fieldInProjection';\n\n/**\n * This is always run client side to build the data graph out of client-side collections.\n *\n * @param node\n * @param parentObject\n * @param fetchOptions\n * @returns {*}\n */\nfunction fetch(node, parentObject, fetchOptions = {}) {\n    let {filters, options} = applyProps(node);\n    // add subscription filter\n    if (fetchOptions.scoped && fetchOptions.subscriptionHandle) {\n        _.extend(filters, fetchOptions.subscriptionHandle.scopeQuery());\n    }\n    // add query path filter\n    if (fetchOptions.scoped) {\n        _.extend(filters, {[`_query_path_${getNodeNamespace(node)}`]: {$exists: true}});\n    }\n\n    let results = [];\n\n    if (parentObject) {\n        let accessor = node.linker.createLink(parentObject, node.collection);\n\n        if (node.isVirtual) {\n            options.fields = options.fields || {};\n            if (!isFieldInProjection(options.fields, node.linkStorageField, true)) {\n                _.extend(options.fields, {\n                    [node.linkStorageField]: 1\n                });\n            }\n        }\n\n        results = accessor.find(filters, options).fetch();\n    } else {\n        results = node.collection.find(filters, options).fetch();\n    }\n\n    _.each(node.collectionNodes, collectionNode => {\n        _.each(results, result => {\n            const collectionNodeResults = fetch(collectionNode, result);\n            result[collectionNode.linkName] = collectionNodeResults;\n            //delete result[node.linker.linkStorageField];\n\n            /**\n             * Push into the results, because snapBackCaches() in prepareForDelivery does not work otherwise.\n             * This is non-optimal, can we be sure that every item in results contains _id and add only if not in\n             * the results?\n             *\n             * Other possible ways:\n             * - do something like assemble() in storeHypernovaResults\n             * - pass node.results to accessor above and find with sift\n             */\n\n            collectionNode.results.push(...collectionNodeResults);\n\n            // this was not working because all references must be replaced in snapBackCaches, not only the ones that are \n            // found first\n            // const currentIds = _.pluck(collectionNode.results, '_id');\n            // collectionNode.results.push(...collectionNodeResults.filter(res => !_.contains(currentIds, res._id)));\n        })\n    });\n\n    return results;\n}\n\nexport default (node, params, fetchOptions) => {\n    node.results = fetch(node, null, fetchOptions);\n\n    prepareForDelivery(node, params);\n\n    return node.results;\n}\n","import FieldNode from './fieldNode.js';\nimport ReducerNode from './reducerNode.js';\nimport deepClone from 'lodash.clonedeep';\nimport {check, Match} from 'meteor/check';\nimport {expandField, isFieldInProjection} from '../lib/fieldInProjection';\n\nexport default class CollectionNode {\n    constructor(collection, body = {}, linkName = null) {\n        if (collection && !_.isObject(body)) {\n            throw new Meteor.Error('invalid-body', `The field \"${linkName}\" is a collection link, and should have its body defined as an object.`);\n        }\n\n        this.body = deepClone(body);\n        this.linkName = linkName;\n        this.collection = collection;\n\n        this.nodes = [];\n        this.props = {};\n        this.parent = null;\n        this.linker = null;\n        this.linkStorageField = null;\n        this.scheduledForDeletion = false;\n        this.reducers = [];\n        this.results = [];\n        this.snapCaches = {}; // {cacheField: linkName}\n        this.snapCachesSingles = []; // [cacheField1, cacheField2]\n    }\n\n    get collectionNodes() {\n        return _.filter(this.nodes, n => n instanceof CollectionNode)\n    }\n\n    get fieldNodes() {\n        return _.filter(this.nodes, n => n instanceof FieldNode);\n    }\n\n    get reducerNodes() {\n        return _.filter(this.nodes, n => n instanceof ReducerNode);\n    }\n\n    /**\n     * Adds children to itself\n     *\n     * @param node\n     * @param linker\n     */\n    add(node, linker) {\n        node.parent = this;\n\n        if (node instanceof FieldNode) {\n            runFieldSanityChecks(node.name);\n        }\n        \n        if (linker) {\n            node.linker = linker;\n            node.linkStorageField = linker.linkStorageField;\n            node.isMeta = linker.isMeta();\n            node.isVirtual = linker.isVirtual();\n            node.isOneResult = linker.isOneResult();\n            node.shouldCleanStorage = this._shouldCleanStorage(node);\n        }\n\n        this.nodes.push(node);\n    }\n\n    /**\n     * @param prop\n     * @param value\n     */\n    addProp(prop, value) {\n        if (prop === '$postFilter') {\n            check(value, Match.OneOf(Function, [Function]))\n        }\n\n        Object.assign(this.props, {\n            [prop]: value\n        });\n    }\n\n    /**\n     * @param _node\n     */\n    remove(_node) {\n        this.nodes = _.filter(this.nodes, node => _node !== node);\n    }\n\n    /**\n     * @param filters\n     * @param options\n     */\n    applyFields(filters, options) {\n        let hasAddedAnyField = false;\n\n        _.each(this.fieldNodes, n => {\n            /**\n             * $meta field should be added to the options.fields, but MongoDB does not exclude other fields.\n             * Therefore, we do not count this as a field addition.\n             * \n             * See: https://docs.mongodb.com/manual/reference/operator/projection/meta/\n             * The $meta expression specifies the inclusion of the field to the result set \n             * and does not specify the exclusion of the other fields.\n             */\n            if (n.projectionOperator !== '$meta') {\n                hasAddedAnyField = true;\n            }\n            n.applyFields(options.fields)\n        });\n\n        // it will only get here if it has collectionNodes children\n        _.each(this.collectionNodes, (collectionNode) => {\n            let linker = collectionNode.linker;\n\n            if (linker && !linker.isVirtual()) {\n                if (!isFieldInProjection(options.fields, linker.linkStorageField, true)) {\n                    options.fields[linker.linkStorageField] = 1;\n                    hasAddedAnyField = true;\n                }\n            }\n        });\n\n        // if he selected filters, we should automatically add those fields\n        _.each(filters, (value, field) => {\n            // special handling for the $meta filter, conditional operators and text search\n            if (!_.contains(['$or', '$nor', '$not', '$and', '$meta', '$text'], field)) {\n                // if the field or the parent of the field already exists, don't add it\n                if (!_.has(options.fields, field.split('.')[0])){\n                    hasAddedAnyField = true;\n                    options.fields[field] = 1;\n                }\n            }\n        });\n\n        if (!hasAddedAnyField) {\n            options.fields = {\n                _id: 1,\n                // fields might contain $meta expression, so it should be added here,\n                ...options.fields,\n            };\n        }\n    }\n\n    /**\n     * @param fieldName\n     * @returns {boolean}\n     */\n    hasField(fieldName, checkNested = false) {\n        // for checkNested flag it expands profile.phone.verified into \n        // ['profile', 'profile.phone', 'profile.phone.verified']\n        // if any of these fields match it means that field exists\n\n        const options = checkNested ? expandField(fieldName) : [fieldName];\n\n        const result = !!_.find(this.fieldNodes, fieldNode => {\n            return _.contains(options, fieldNode.name);\n        });\n\n        return result;\n    }\n\n    /**\n     * @param fieldName\n     * @returns {FieldNode}\n     */\n    getField(fieldName) {\n        return _.find(this.fieldNodes, fieldNode => {\n            return fieldNode.name == fieldName\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasCollectionNode(name) {\n        return !!_.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {boolean}\n     */\n    hasReducerNode(name) {\n        return !!_.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {ReducerNode}\n     */\n    getReducerNode(name) {\n        return _.find(this.reducerNodes, node => {\n            return node.name == name\n        })\n    }\n\n    /**\n     * @param name\n     * @returns {CollectionNode}\n     */\n    getCollectionNode(name) {\n        return _.find(this.collectionNodes, node => {\n            return node.linkName == name\n        })\n    }\n\n    /**\n     * @returns {*}\n     */\n    getName() {\n        return this.linkName\n            ? this.linkName\n            : (this.collection ? this.collection._name : 'N/A');\n    }\n\n    /**\n     * This is used for caching links\n     *\n     * @param cacheField\n     * @param subLinkName\n     */\n    snapCache(cacheField, subLinkName) {\n        this.snapCaches[cacheField] = subLinkName;\n\n        if (this.collection.getLinker(subLinkName).isOneResult()) {\n            this.snapCachesSingles.push(cacheField);\n        }\n    }\n\n    /**\n     * This method verifies whether to remove the linkStorageField form the results\n     * unless you specify it in your query.\n     *\n     * @param node\n     * @returns {boolean}\n     * @private\n     */\n    _shouldCleanStorage(node) {\n        if (node.linkStorageField === '_id') {\n            return false;\n        } else {\n            if (node.isVirtual) {\n                return !node.hasField(node.linkStorageField, true);\n            } else {\n                return !this.hasField(node.linkStorageField, true);\n            }\n        }\n    }\n}\n\n/**\n * Make sure that the field is ok to be added\n * @param {*} fieldName \n */\nexport function runFieldSanityChecks(fieldName) {\n    // Run sanity checks on the field\n    if (fieldName[0] === '$') {\n        throw new Error(`You are not allowed to use fields that start with $ inside a reducer's body: ${fieldName}`);\n    }\n\n    return true;\n}\n","export default class FieldNode {\n    constructor(name, body, isProjectionOperator = false) {\n        this.name = name;\n        this.projectionOperator = isProjectionOperator ? _.keys(body)[0] : null;\n        this.body = !_.isObject(body) || isProjectionOperator ? body : 1;\n        this.scheduledForDeletion = false;\n    }\n\n    applyFields(fields) {\n        fields[this.name] = this.body;\n    }\n}\n","export default class ReducerNode {\n    constructor(name, {body, reduce}) {\n        this.name = name;\n        this.body = body;\n        this.reduceFunction = reduce;\n        this.dependencies = []; // This is a list of the reducer this reducer uses.\n    }\n\n    /**\n     * When computing we also pass the parameters\n     * \n     * @param {*} object \n     * @param {*} args \n     */\n    compute(object, ...args) {\n        object[this.name] = this.reduce.call(this, object, ...args);\n    }\n\n    reduce(object, ...args) {\n        return this.reduceFunction.call(this, object, ...args);\n    }\n}","import { check } from 'meteor/check';\nimport addFieldMap from './lib/addFieldMap';\n\nconst storage = '__reducers';\nObject.assign(Mongo.Collection.prototype, {\n    /**\n     * @param data\n     */\n    addReducers(data) {\n        if (!this[storage]) {\n            this[storage] = {};\n        }\n\n        _.each(data, (reducerConfig, reducerName) => {\n            if (!this[reducerConfig]) {\n                this[reducerConfig] = {};\n            }\n\n            if (this.getLinker(reducerName)) {\n                throw new Meteor.Error(\n                    `You cannot add the reducer with name: ${reducerName} because it is already defined as a link in ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            if (this[reducerConfig][reducerName]) {\n                throw new Meteor.Error(\n                    `You cannot add the reducer with name: ${reducerName} because it was already added to ${\n                        this._name\n                    } collection`\n                );\n            }\n\n            check(reducerConfig, {\n                body: Object,\n                reduce: Function,\n            });\n\n            _.extend(this[storage], {\n                [reducerName]: reducerConfig,\n            });\n        });\n    },\n\n    /**\n     * @param name\n     * @returns {*}\n     */\n    getReducer(name) {\n        if (this[storage]) {\n            return this[storage][name];\n        }\n    },\n\n    /**\n     * This creates reducers that makes sort of aliases for the database fields we use\n     */\n    addFieldMap,\n});\n","/**\n * @param {[niceField: string]: dbField} map\n */\nexport default function addFieldMap(map) {\n    const collection = this;\n    let reducers = {};\n    for (let key in map) {\n        const dbField = map[key];\n        reducers[key] = {\n            body: {\n                [dbField]: 1,\n            },\n            reduce(obj) {\n                return obj[dbField];\n            },\n        };\n    }\n\n    collection.addReducers(reducers);\n}\n","export default function applyReducers(root, params) {\n    _.each(root.collectionNodes, node => {\n        applyReducers(node, params);\n    });\n\n    const processedReducers = [];\n    let reducersQueue = [...root.reducerNodes];\n\n    // TODO: find out if there's an infinite reducer inter-deendency\n\n    while (reducersQueue.length) {\n        const reducerNode = reducersQueue.shift();\n\n        // If this reducer depends on other reducers\n        if (reducerNode.dependencies.length) {\n            // If there is an unprocessed reducer, move it at the end of the queue\n            const allDependenciesComputed = _.all(reducerNode.dependencies, dep => processedReducers.includes(dep));\n            if (allDependenciesComputed) {\n                root.results.forEach(result => {\n                    reducerNode.compute(result, params);\n                });\n                processedReducers.push(reducerNode.name);\n            } else {\n                // Move it at the end of the queue\n                reducersQueue.push(reducerNode);\n            }\n        } else {\n            root.results.forEach(result => {\n                reducerNode.compute(result, params);\n            });\n\n            processedReducers.push(reducerNode.name);\n        }\n    }\n}\n","import dot from 'dot-object';\n\n/**\n * @param root\n */\nexport default function cleanReducerLeftovers(root, results) {\n    _.each(root.collectionNodes, node => {\n        if (node.scheduledForDeletion) {\n            results.forEach(result => {\n                delete result[node.linkName];\n            })\n        }\n    });\n\n    _.each(root.collectionNodes, node => {\n        let childResults;\n        if (node.isOneResult) {\n            childResults = results.map(result => result[node.linkName]).filter(element => !!element);\n        } else {\n            childResults = _.flatten(results.map(result => result[node.linkName]).filter(element => !!element));\n        }\n        \n        cleanReducerLeftovers(node, childResults);\n    });\n\n    _.each(root.fieldNodes, node => {\n        if (node.scheduledForDeletion) {\n            cleanNestedFields(node.name.split('.'), results, root);\n        }\n    });\n\n\n    _.each(root.reducerNodes, node => {\n        if (node.scheduledForDeletion) {\n            results.forEach(result => {\n                delete result[node.name];\n            })\n        }\n    });\n}\n\n\n// if we store a field like: 'profile.firstName'\n// then we need to delete profile: { firstName }\n// if profile will have empty keys, we need to delete profile.\n\n/**\n * Cleans what reducers needed to be computed and not used.\n * @param parts\n * @param results\n */\nfunction cleanNestedFields(parts, results, root) {\n    const snapCacheField = root.snapCaches[parts[0]];\n    const fieldName = snapCacheField ? snapCacheField : parts[0];\n\n    if (parts.length === 1) {\n        results.forEach(result => {\n            if (_.isObject(result) && fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        });\n\n        return;\n    }\n\n    parts.shift();\n    cleanNestedFields(\n        parts, \n        results\n            .filter(result => !!result[fieldName])\n            .map(result => result[fieldName]),\n        root\n    );\n    \n    results.forEach(result => {\n        if (_.isObject(result[fieldName]) && _.keys(result[fieldName]).length === 0) {\n            if (fieldName !== '_id') {\n                delete result[fieldName];\n            }\n        }\n    })\n}\n","import dot from 'dot-object';\nimport { createNodes } from '../../lib/createGraph';\nimport CollectionNode from '../../nodes/collectionNode';\nimport FieldNode from '../../nodes/fieldNode';\nimport ReducerNode from '../../nodes/reducerNode';\nimport embedReducerWithLink from './embedReducerWithLink';\nimport { specialFields } from '../../lib/createGraph';\n\nexport default function addReducers(root) {\n    // we add reducers last, after we have added all the fields.\n    root.reducerNodes.forEach(reducer => {\n        _.each(reducer.body, (body, fieldName) => {\n            handleAddElement(reducer, root, fieldName, body);\n        })\n    });\n}\n\n/**\n * @param root\n * @param fieldName\n * @param body\n */\nexport function handleAddElement(reducerNode, root, fieldName, body) {\n    // if it's a link\n    const collection = root.collection;\n    const linker = collection.getLinker(fieldName);\n    if (linker) {\n        return handleAddLink(reducerNode, fieldName, body, root, linker);\n    }\n\n    const reducer = collection.getReducer(fieldName);\n    if (reducer) {\n        reducerNode.dependencies.push(fieldName);\n        return handleAddReducer(fieldName, reducer, root);\n    }\n\n    // we assume it's a field in this case\n    return handleAddField(fieldName, body, root);\n}\n\n/**\n * @param fieldName\n * @param reducer\n * @param root\n */\nexport function handleAddReducer(fieldName, {body, reduce}, root) {\n    if (!root.hasReducerNode(fieldName)) {\n        let childReducerNode = new ReducerNode(fieldName, {body, reduce});\n        root.add(childReducerNode);\n        childReducerNode.scheduledForDeletion = true;\n\n        _.each(childReducerNode.body, (body, fieldName) => {\n            handleAddElement(childReducerNode, root, fieldName, body);\n        })\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n * @param linker\n */\nexport function handleAddLink(reducerNode, fieldName, body, parent, linker) {\n    if (parent.hasCollectionNode(fieldName)) {\n        const collectionNode = parent.getCollectionNode(fieldName);\n\n        embedReducerWithLink(reducerNode, body, collectionNode);\n    } else {\n        // add\n        let collectionNode = new CollectionNode(linker.getLinkedCollection(), body, fieldName);\n        collectionNode.scheduledForDeletion = true;\n        parent.add(collectionNode, linker);\n\n        createNodes(collectionNode);\n    }\n}\n\n/**\n * @param fieldName\n * @param body\n * @param root\n */\nexport function handleAddField(fieldName, body, root) {\n    if (_.contains(specialFields, fieldName)) {\n        root.addProp(fieldName, body);\n\n        return;\n    }\n\n    if (_.isObject(body)) {\n        // if reducer specifies a nested field\n        // if it's a prop\n        const dots = dot.dot({\n            [fieldName]: body\n        });\n\n        _.each(dots, (value, key) => {\n            addFieldIfRequired(root, key, value);\n        });\n    } else {\n        // if reducer does not specify a nested field, and the field does not exist.\n        addFieldIfRequired(root, fieldName, body);\n    }\n}\n\nfunction addFieldIfRequired(root, fieldName, body) {\n    if (!root.hasField(fieldName, true)) {\n        /**\n         * Check if there are any nested fields for this field.\n         * Adding root field here and scheduling for deletion would not work if there is already nested field, \n         * for example:\n         * when trying to add meta: 1, it should be checked that there are no meta.* fields\n         * */\n\n        const nestedFields = root.fieldNodes.filter(({name}) => name.startsWith(`${fieldName}.`));\n        // remove nested fields - important for minimongo which complains for these situations\n        // TODO: excess fields are not removed (caused by adding the root field and removing nested fields) but there\n        // should probably be a way to handle this in post-processing - for example by keeping a whitelist of fields\n        // and removing anything else\n        nestedFields.forEach(node => root.remove(node));\n \n        let fieldNode = new FieldNode(fieldName, body);\n        // delete only if all nested fields are scheduled for deletion (that includes the case of 0 nested fields)\n        fieldNode.scheduledForDeletion = nestedFields.every(field => field.scheduledForDeletion);\n\n        root.add(fieldNode);\n    }\n}\n","import {handleAddField, handleAddElement, handleAddReducer} from './createReducers';\n\n/**\n * Embeds the reducer body with a collection body\n * @param reducerBody\n * @param collectionNode\n */\nexport default function embedReducerWithLink(reducerNode, reducerBody, collectionNode) {\n    _.each(reducerBody, (value, key) => {\n        const collection = collectionNode.collection;\n\n        if (_.isObject(value)) {\n            // nested field or link\n            if (collectionNode.body[key]) {\n                // if it exists\n                const linker = collection.getLinker(key);\n\n                // if it's a link\n                if (linker) {\n                    if (linker.isDenormalized()) {\n                        if (linker.isSubBodyDenormalized(value)) {\n                            const cacheField = linker.linkConfig.denormalize.field;\n                            handleAddField(cacheField, value, collectionNode);\n                            return;\n                        }\n                    }\n\n                    embedReducerWithLink(reducerNode, value, collectionNode.getCollectionNode(key));\n                    return;\n                }\n\n                handleAddField(key, value, collectionNode);\n            } else {\n                // does not exist, so it may be a link/reducer/field\n                handleAddElement(reducerNode, collectionNode, key, value);\n            }\n        } else {\n            // if this field or other reducer exists within the collection\n\n            if (!collectionNode.body[key]) {\n                // can only be field or another reducer for this.\n                const reducer = collection.getReducer(key);\n                if (reducer) {\n                    // if it's another reducer\n                    return handleAddReducer(key, reducer, collectionNode);\n                }\n\n                return handleAddField(key, value, collectionNode);\n            }\n        }\n    })\n}"]}}]