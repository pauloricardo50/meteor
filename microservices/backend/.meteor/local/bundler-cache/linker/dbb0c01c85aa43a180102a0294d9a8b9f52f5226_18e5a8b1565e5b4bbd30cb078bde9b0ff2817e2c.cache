[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"cultofcoders:mutations\":{\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/cultofcoders_mutations/main.js                                                                     //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  Mutation: () => Mutation,\n  wrap: () => wrap\n});\nlet wrap;\nmodule.link(\"./lib/wrap\", {\n  default(v) {\n    wrap = v;\n  }\n\n}, 0);\nlet Mutation;\nmodule.link(\"./lib/mutation.class\", {\n  default(v) {\n    Mutation = v;\n  }\n\n}, 1);\nmodule.link(\"./lib/debug\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"aop.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/cultofcoders_mutations/lib/aop.js                                                                  //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nclass AOP {\n  constructor() {\n    this.befores = [];\n    this.afters = [];\n  }\n\n  addBefore(fn) {\n    check(fn, Function);\n    this.befores.push(fn);\n  }\n\n  addAfter(fn) {\n    check(fn, Function);\n    this.afters.push(fn);\n  }\n\n  executeBefores(...args) {\n    this.befores.forEach(fn => fn.call(null, ...args));\n  }\n\n  executeAfters(...args) {\n    this.afters.forEach(fn => fn.call(null, ...args));\n  }\n\n}\n\nmodule.exportDefault(AOP);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"debug.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/cultofcoders_mutations/lib/debug.js                                                                //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Mutation;\nmodule.link(\"./mutation.class\", {\n  default(v) {\n    Mutation = v;\n  }\n\n}, 0);\nObject.assign(Mutation, {\n  isDebugEnabled: Meteor.isDevelopment || process.env.MUTATION_DEBUG_ENABLED\n});\n\nconst shouldDebug = config => {\n  if (!Mutation.isDebugEnabled) {\n    return false;\n  }\n\n  if (Mutation.isDebugEnabled.omit) {\n    return !Mutation.isDebugEnabled.omit.includes(config.name);\n  }\n\n  return true;\n};\n\nMutation.addBeforeCall(({\n  config,\n  params,\n  context\n}) => {\n  if (shouldDebug(config)) {\n    console.log(`[mutations][${config.name}] Calling with params:`, params);\n  }\n});\nMutation.addAfterCall(({\n  config,\n  params,\n  context,\n  result,\n  error\n}) => {\n  if (shouldDebug(config)) {\n    const time = new Date();\n\n    if (!error) {\n      console.log(`[mutations][${config.name}] Received result:`, result);\n    } else {\n      console.error(`[mutations][${config.name}] Received error:`, error);\n    }\n  }\n});\nMutation.addBeforeExecution(({\n  config,\n  params,\n  context\n}) => {\n  if (shouldDebug(config)) {\n    const time = new Date();\n    console.log(`[mutations][${config.name}] Received call with params: ${JSON.stringify(params)}`);\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mutation.class.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/cultofcoders_mutations/lib/mutation.class.js                                                       //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  default: () => Mutation\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet AOP;\nmodule.link(\"./aop\", {\n  default(v) {\n    AOP = v;\n  }\n\n}, 1);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 2);\n\nclass Mutation {\n  constructor(config) {\n    Mutation.checkDefaultConfig(config);\n    this.config = config;\n    this.callAOP = new AOP();\n    this.executionAOP = new AOP();\n  }\n  /**\n   * @param {Function} fn\n   */\n\n\n  static addBeforeCall(fn) {\n    this.callAOP.addBefore(fn);\n  }\n  /**\n   * @param {Function} fn\n   */\n\n\n  static addAfterCall(fn) {\n    this.callAOP.addAfter(fn);\n  }\n  /**\n   * @param {Function} fn\n   */\n\n\n  static addBeforeExecution(fn) {\n    this.executionAOP.addBefore(fn);\n  }\n  /**\n   * @param {Function} fn\n   */\n\n\n  static addAfterExecution(fn) {\n    this.executionAOP.addAfter(fn);\n  }\n  /**\n   * @param {Object} config\n   */\n\n\n  static checkDefaultConfig(config) {\n    check(config, Object);\n\n    if (typeof config.name !== 'string') {\n      throw new Meteor.Error('invalid-config', 'You must provide a \"name\" property to your mutation config.');\n    }\n  }\n  /**\n   * @param {Function} fn\n   */\n\n\n  addBeforeCall(fn) {\n    this.callAOP.addBefore(fn);\n  }\n  /**\n   * @param {Function} fn\n   */\n\n\n  addAfterCall(fn) {\n    this.callAOP.addAfter(fn);\n  }\n  /**\n   * @param {Function} fn\n   */\n\n\n  addBeforeExecution(fn) {\n    this.executionAOP.addBefore(fn);\n  }\n  /**\n   * @param {Function} fn\n   */\n\n\n  addAfterExecution(fn) {\n    this.executionAOP.addAfter(fn);\n  }\n  /**\n   * Runs the mutation inside a promise\n   * @param {Object} callParams\n   * @param {Object} options Meteor options https://docs.meteor.com/api/methods.html#Meteor-apply\n   * @returns {Promise}\n   */\n\n\n  run(callParams, options = {}) {\n    const config = this.config;\n    const aopData = {\n      config,\n      params: callParams\n    };\n    Mutation.callAOP.executeBefores(aopData);\n    this.callAOP.executeBefores(aopData);\n    const {\n      name,\n      params\n    } = config;\n    return new Promise((resolve, reject) => {\n      Meteor.apply(name, [callParams], options, (error, result) => {\n        const aopData = {\n          config,\n          params: callParams,\n          result,\n          error\n        };\n        Mutation.callAOP.executeAfters(aopData);\n        this.callAOP.executeAfters(aopData);\n\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n  /**\n   * Creates the Meteor Method and the handler for it\n   * @param {Function} fn\n   */\n\n\n  setHandler(fn) {\n    const config = this.config;\n    const {\n      name,\n      params\n    } = config;\n    const self = this;\n    Meteor.methods({\n      [name](params = {}) {\n        if (config.params) {\n          check(params, config.params);\n        }\n\n        let aopData = {\n          context: this,\n          config,\n          params\n        };\n        Mutation.executionAOP.executeBefores(aopData);\n        self.executionAOP.executeBefores(aopData);\n        let error, result;\n\n        try {\n          result = fn.call(null, this, params);\n        } catch (e) {\n          error = e;\n        }\n\n        aopData = {\n          context: this,\n          config,\n          params,\n          result,\n          error\n        };\n        Mutation.executionAOP.executeAfters(aopData);\n        self.executionAOP.executeAfters(aopData);\n\n        if (error) {\n          throw error;\n        }\n\n        return result;\n      }\n\n    });\n  }\n\n}\n\nMutation.callAOP = new AOP();\nMutation.executionAOP = new AOP();\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"wrap.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/cultofcoders_mutations/lib/wrap.js                                                                 //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  default: () => wrap\n});\nlet Mutation;\nmodule.link(\"./mutation.class\", {\n  default(v) {\n    Mutation = v;\n  }\n\n}, 0);\n\nfunction wrap(config) {\n  return new Mutation(config);\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/cultofcoders:mutations/main.js\");\n\n/* Exports */\nPackage._define(\"cultofcoders:mutations\", exports);\n\n})();\n","servePath":"/packages/cultofcoders_mutations.js","sourceMap":{"version":3,"sources":["packages/cultofcoders:mutations/main.js","packages/cultofcoders:mutations/lib/aop.js","packages/cultofcoders:mutations/lib/debug.js","packages/cultofcoders:mutations/lib/mutation.class.js","packages/cultofcoders:mutations/lib/wrap.js"],"names":["module","export","Mutation","wrap","link","default","v","AOP","befores","afters","addBefore","fn","check","Function","push","addAfter","executeBefores","args","forEach","call","executeAfters","exportDefault","Object","assign","isDebugEnabled","Meteor","isDevelopment","process","env","MUTATION_DEBUG_ENABLED","shouldDebug","config","omit","includes","name","addBeforeCall","params","context","console","log","addAfterCall","result","error","time","Date","addBeforeExecution","JSON","stringify","Match","constructor","checkDefaultConfig","callAOP","executionAOP","addAfterExecution","Error","run","callParams","options","aopData","Promise","resolve","reject","apply","setHandler","self","methods","e"],"mappings":"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","file":"/packages/cultofcoders_mutations.js","sourcesContent":["import wrap from './lib/wrap';\nimport Mutation from './lib/mutation.class';\nimport './lib/debug';\n\nexport { Mutation, wrap };\n","class AOP {\n    befores = [];\n    afters = [];\n\n    addBefore(fn) {\n        check(fn, Function);\n\n        this.befores.push(fn);\n    }\n\n    addAfter(fn) {\n        check(fn, Function);\n\n        this.afters.push(fn);\n    }\n\n    executeBefores(...args) {\n        this.befores.forEach(fn => fn.call(null, ...args));\n    }\n\n    executeAfters(...args) {\n        this.afters.forEach(fn => fn.call(null, ...args));\n    }\n}\n\nexport default AOP;\n","import Mutation from './mutation.class';\n\nObject.assign(Mutation, {\n  isDebugEnabled: Meteor.isDevelopment || process.env.MUTATION_DEBUG_ENABLED,\n});\n\nconst shouldDebug = (config) => {\n  if (!Mutation.isDebugEnabled) {\n    return false;\n  }\n\n  if (Mutation.isDebugEnabled.omit) {\n    return !Mutation.isDebugEnabled.omit.includes(config.name);\n  }\n\n  return true;\n};\n\nMutation.addBeforeCall(({ config, params, context }) => {\n  if (shouldDebug(config)) {\n    console.log(`[mutations][${config.name}] Calling with params:`, params);\n  }\n});\n\nMutation.addAfterCall(({ config, params, context, result, error }) => {\n  if (shouldDebug(config)) {\n    const time = new Date();\n\n    if (!error) {\n      console.log(`[mutations][${config.name}] Received result:`, result);\n    } else {\n      console.error(`[mutations][${config.name}] Received error:`, error);\n    }\n  }\n});\n\nMutation.addBeforeExecution(({ config, params, context }) => {\n  if (shouldDebug(config)) {\n    const time = new Date();\n    console.log(`[mutations][${\n      config.name\n    }] Received call with params: ${JSON.stringify(params)}`);\n  }\n});\n","import { Meteor } from 'meteor/meteor';\nimport AOP from './aop';\nimport { check, Match } from 'meteor/check';\n\nexport default class Mutation {\n    static callAOP = new AOP();\n    static executionAOP = new AOP();\n\n    constructor(config) {\n        Mutation.checkDefaultConfig(config);\n\n        this.config = config;\n        this.callAOP = new AOP();\n        this.executionAOP = new AOP();\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    static addBeforeCall(fn) {\n        this.callAOP.addBefore(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    static addAfterCall(fn) {\n        this.callAOP.addAfter(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    static addBeforeExecution(fn) {\n        this.executionAOP.addBefore(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    static addAfterExecution(fn) {\n        this.executionAOP.addAfter(fn);\n    }\n\n    /**\n     * @param {Object} config\n     */\n    static checkDefaultConfig(config) {\n        check(config, Object);\n        if (typeof config.name !== 'string') {\n            throw new Meteor.Error(\n                'invalid-config',\n                'You must provide a \"name\" property to your mutation config.'\n            );\n        }\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    addBeforeCall(fn) {\n        this.callAOP.addBefore(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    addAfterCall(fn) {\n        this.callAOP.addAfter(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    addBeforeExecution(fn) {\n        this.executionAOP.addBefore(fn);\n    }\n\n    /**\n     * @param {Function} fn\n     */\n    addAfterExecution(fn) {\n        this.executionAOP.addAfter(fn);\n    }\n\n    /**\n     * Runs the mutation inside a promise\n     * @param {Object} callParams\n     * @param {Object} options Meteor options https://docs.meteor.com/api/methods.html#Meteor-apply\n     * @returns {Promise}\n     */\n    run(callParams, options = {}) {\n        const config = this.config;\n\n        const aopData = { config, params: callParams };\n        Mutation.callAOP.executeBefores(aopData);\n        this.callAOP.executeBefores(aopData);\n\n        const { name, params } = config;\n\n        return new Promise((resolve, reject) => {\n            Meteor.apply(name, [callParams], options, (error, result) => {\n                const aopData = {\n                    config,\n                    params: callParams,\n                    result,\n                    error,\n                };\n\n                Mutation.callAOP.executeAfters(aopData);\n                this.callAOP.executeAfters(aopData);\n\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve(result);\n                }\n            });\n        });\n    }\n\n    /**\n     * Creates the Meteor Method and the handler for it\n     * @param {Function} fn\n     */\n    setHandler(fn) {\n        const config = this.config;\n        const { name, params } = config;\n        const self = this;\n\n        Meteor.methods({\n            [name](params = {}) {\n                if (config.params) {\n                    check(params, config.params);\n                }\n\n                let aopData = {\n                    context: this,\n                    config,\n                    params,\n                };\n\n                Mutation.executionAOP.executeBefores(aopData);\n                self.executionAOP.executeBefores(aopData);\n\n                let error, result;\n                try {\n                    result = fn.call(null, this, params);\n                } catch (e) {\n                    error = e;\n                }\n\n                aopData = {\n                    context: this,\n                    config,\n                    params,\n                    result,\n                    error,\n                };\n\n                Mutation.executionAOP.executeAfters(aopData);\n                self.executionAOP.executeAfters(aopData);\n\n                if (error) {\n                    throw error;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","import Mutation from './mutation.class';\n\nexport default function wrap(config) {\n    return new Mutation(config);\n}\n"]}}]